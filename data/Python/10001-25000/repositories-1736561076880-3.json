{
  "metadata": {
    "timestamp": 1736561076880,
    "page": 3,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "feder-cr/Jobs_Applier_AI_Agent",
      "stars": 24744,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.3388671875,
          "content": "# application files and logs\n/generated_cv\n/log/*\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\nchrome_profile/*\ndata_folder/output/*\nanswers.json\n# PyInstaller\n# Usually these files are written by a python script from a template\n# before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n.venv\n.pytest_cache\nvirtual\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv’s dependency resolution may lead to different\n#   Pipfile.lock files generated on each colleague’s machine.\n#   Thus, uncomment the following line if the pipenv environment is expected to be identical\n#   across all environments.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# MacOS\n.DS_Store\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n# PyCharm and all JetBrains IDEs\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n.idea/\n*.iml\n\n# Visual Studio Code\n.vscode/\n\n# Visual Studio 2015/2017/2019/2022\n.vs/\n*.opendb\n*.VC.db\n\n# User-specific files\n*.suo\n*.user\n*.userosscache\n*.sln.docstates\n\n# Mono Auto Generated Files\nmono_crash.*\n\njob_applications/"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.0634765625,
          "content": "# Contributing to Auto_Jobs_Applier_AIHawk\n\n## Table of Contents\n\n- [Issue Labels](#issue-labels)\n- [Bug Reports](#bug-reports)\n- [Feature Requests](#feature-requests)\n- [Branch Rules](#branch-rules)\n- [Version Control](#version-control)\n- [Release Process](#release-process)\n- [Roles](#roles) \n- [Pull Request Process](#pull-request-process)\n- [Code Style Guidelines](#code-style-guidelines)\n- [Development Setup](#development-setup)\n- [Testing](#testing)\n- [Communication](#communication)\n- [Development Diagrams](./docs/development_diagrams.md)\n\nThank you for your interest in contributing to Auto_Jobs_Applier_AIHawk. This document provides guidelines for contributing to the project.\n\n## Issue Labels\n\nThe project uses the following labels:\n\n- **bug**: Something isn't working correctly\n- **enhancement**: New feature requests\n- **good first issue**: Good for newcomers\n- **help wanted**: Extra attention needed\n- **documentation**: Documentation improvements\n\n## Bug Reports\n\nWhen submitting a bug report, please include:\n\n- A clear, descriptive title prefixed with [BUG]\n- Steps to reproduce the issue\n- Expected behavior\n- Actual behavior\n- Any error messages or screenshots\n- Your environment details (OS, Python version, etc.)\n\n## Feature Requests\n\nFor feature requests, please:\n\n- Prefix the title with [FEATURE]\n- Include a feature summary\n- Provide detailed feature description\n- Explain your motivation for the feature\n- List any alternatives you've considered\n\n## Branch Rules\n\n- `main` - Production-ready code, protected branch\n- `develop` - Integration branch for features\n- `feature/*` - New features\n- `release/*` - Release preparation\n- `bugfix/*` - Bug fixes for development\n- `hotfix/*` - Emergency production fixes\n\n## Version Control\n\n- Semantic versioning: `vMAJOR.MINOR.PATCH`\n- Release tags on `main` branch only\n- Package versions match git tags\n\n## Release Process\n\nweek one for `release/v4.1.0`\n\n- Planning meeting for `release/v4.1.0` with release scope and milestone objectives set by the maintainers. Release and maintainer meeting agendas and schedules are posted on the project repository [wiki](https://github.com/AIHawk/AIHawk/wiki) and shared in the `#releases` channel on Discord.\n- `release/v4.0.0` release candidate ready for release\n- `release/v4.0.0` merge into `develop`, `main`\n- tag `main` as `release/v4.0.0`\n- `release/v4.0.0` published to AIHawk/releases and PyPI as a package with release documentation\n- delete `release/v4.0.0` branch\n\nrelease/v4.1.0 release weeks\n\n- Contributers work on issues and PRs, prioritizing next milestone\n- Maintainers review PRs from `feature/*`, `bugfix/*` branches and issues, merging into `develop`\n- Maintainers review PRs from `hotfix/*` branches and issues, merged into `main` and `develop`, `main` tagged and merged into `4.0.1` package and `release/v4.0.1` and `release/v4.1.0`, documentation is updated\n\nlast week, release candidate\n\n- `develop` is frozen, only bug fixes\n- create release branch `release/v4.1.0` from `develop`\n- only bug fixes are merged into `release/v4.1.0`\n- additional testing and release candidate review\n\nweek one is repeated for `release/v4.2.0`\n\n```mermaid\ngantt\n    title Release Cycle Process\n    dateFormat  YYYY-MM-DD\n    section Retro/Plan\n    Planning release/v4.1.0    : 2025-01-01, 2d\n    Publish release/v4.0.0     :milestone, m1, 2025-01-01, 1d\n    \n    section Dev Cycle\n    Feature Development        :2025-01-03, 27d\n    PR Reviews                 :2025-01-03, 27d\n    \n    section Release\n    Freeze develop              :milestone, m3, 2025-01-30, 1d\n    Create release/v4.1.0   :milestone, m4, 2025-01-30, 1d\n    Bug Fixes Only         :2025-01-30, 2d\n    RC Testing             :2025-01-30, 2d\n    \n    section Next Cycle\n    Skip Weekend             :2025-02-01, 2d\n    Planning release/v4.2.0      :2025-02-03, 2d\n    Publish release/v4.1.0     :milestone, m4, 2025-02-03, 1d\n```\n\n## Roles\n\n### Organization Owner\n\n- Has full access to all repositories\n- Controls organization-wide settings and permissions\n- Can set base permissions for all members\n- Manages repository settings and collaborator access\n\n### Release Manager\n\n- Creates and manages release branch from develop\n- Coordinates release cycles and versioning\n- Merges release into main\n\n### Maintainer\n\n- Reviews and approves develop, feature PRs\n- Triage issues, bugs, PRs\n- Manages feature, bugfix PRs merge into develop\n- Leads feature development, bug prioritization\n- Manages README, CONTRIBUTING, and other documentation\n\n### Moderator\n\n- Moderates Telegram, Discord channels\n- Manages project wiki\n- Contributes to README, CONTRIBUTING, and other documentation\n\n### Contributor\n\n- Creates feature branches from develop\n- Implements new features, bug fixes, and other changes\n- creates PRs on features\n- Collaborates with other developers on features\n\n## Pull Request Process\n\n1. Fork the repository\n2. Create a new branch for your feature or bug\n3. Write clear commit messages\n4. Update documentation as needed\n5. Add tests for new functionality\n6. Ensure tests pass\n7. Submit a pull request with a clear description\n\n## Merging Pull Requests\n\n- All PRs are reviewed by maintainers\n- At least 2 Maintainers approve PRs for merge\n- PRs are merged into `develop`\n- PRs are tested and verified to work as expected\n\n## Code Style Guidelines\n\n- Follow PEP 8 standards for Python code\n- Include docstrings for new functions and classes\n- Add comments for complex logic\n- Maintain consistent naming conventions\n- Security best practices\n- Any performance considerations\n\n## Development Setup\n\n1. Clone the repository\n2. Install dependencies from requirements.txt\n3. Set up necessary API keys and configurations\n\n## Testing\n\nBefore submitting a PR:\n\n- Test your changes thoroughly\n- Ensure existing tests pass\n- Add new tests for new functionality\n- Verify functionality with different configurations\n\n## Communication\n\n- Be respectful and constructive in discussions\n- Use clear and concise language\n- Reference relevant issues in commits and PRs\n- Ask for help when needed\n\nThe project maintainers reserve the right to reject any contribution that doesn't meet these guidelines or align with the project's goals.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7607421875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2024 AI Hawk FOSS <https://github.com/AIHawk-FOSS/Auto_Jobs_Applier_AI_Agent/graphs/contributors> </br>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  1. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 26.158203125,
          "content": "<a name=\"top\"></a>\n<div align=\"center\">\n<img src=\"./assets/AIHawk.png\">\n\n# AIHawk the first Jobs Applier AI Agent\n\n  ![CI](https://github.com/feder-cr/Auto_Jobs_Applier_AIHawk/actions/workflows/ci.yml/badge.svg)\n\n**🤖🔍 Your AI-powered job search assistant. Automate applications, get personalized recommendations and land your dream job faster.**\n\nJoin our community: [Telegram](https://t.me/AIhawkCommunity) (for Normal users)\n\n[![Telegram](https://img.shields.io/badge/Telegram-2CA5E0?style=for-the-badge&logo=telegram&logoColor=white)](https://t.me/AIhawkCommunity)\n\n\n</div>\n\n**Creator** [feder-cr](https://github.com/feder-cr), Co-Founder of AIHawk </br>\nAs AIHawk is focusing on their proprietary product - solving problems in hiring for companies, currently this project is led, managed, and maintained by a group of open-source contributors, with a focus on building tools to help job seekers land the jobs they deserve.\n\n**Project Maintainers / Leads**: [surapuramakhil](https://github.com/surapuramakhil), [sarob](https://github.com/sarob), [cjbbb](https://github.com/cjbbb)\n\nWe are looking to expand our FOSS maintainers team! If you are from a non-technical background, you can be part of the project management team, triaging issues, and shaping the project. If you are a technical person, you can join in doing code reviews, participating in releases, and building a better version of this product.\n\nreach out to [surapuramakhil](https://github.com/surapuramakhil) on Discord. [Special thanks](#special-thanks) \n\nAuto_Jobs_Applier_AIHawk is continuously evolving, and your feedback, suggestions, and contributions are highly valued. Feel free to open issues, suggest enhancements, or submit pull requests to help improve the project. Let's work together to make Auto_Jobs_Applier_AIHawk a powerful tool for job seekers worldwide.\n\n## Table of Contents\n\n1. [Introduction](#introduction)\n2. [Features](#features)\n3. [Installation](#installation)\n4. [Configuration](#configuration)\n5. [Usage](#usage)\n6. [Documentation](#documentation)\n7. [Troubleshooting](#troubleshooting)\n8. [Conclusion](#conclusion)\n9. [Contributors](#contributors)\n10. [License](#license)\n11. [Disclaimer](#disclaimer)\n\n## Introduction\n\nAuto_Jobs_Applier_AIHawk is a cutting-edge, automated tool designed to revolutionize the job search and application process. In today's fiercely competitive job market, where opportunities can vanish in the blink of an eye, this program offers job seekers a significant advantage by leveraging the power of automation and artificial intelligence.\n\n### The Challenge of Modern Job Hunting\n\nIn the digital age, the job search landscape has undergone a dramatic transformation. While online platforms have opened up a world of opportunities, they have also intensified competition. Job seekers often find themselves spending countless hours scrolling through listings, tailoring applications, and repetitively filling out forms. This process can be not only time-consuming but also emotionally draining, leading to job search fatigue and missed opportunities.\n\n\n## Installation\n\n**Confirmed successful runs on the following:**\n\n- Operating Systems:\n  - Windows 10\n  - Ubuntu 22\n- Python versions:\n  - 3.10\n  - 3.11.9(64b)\n  - 3.12.5(64b)\n\n### Option 1: Using Python Virtual Environment \n\n1. **Download and Install Python:**\n\n   Ensure you have the last Python version  installed. If not, download and install it from Python's official website. For detailed instructions, refer to the tutorials:\n\n   - [How to Install Python on Windows](https://www.geeksforgeeks.org/how-to-install-python-on-windows/)\n   - [How to Install Python on Linux](https://www.geeksforgeeks.org/how-to-install-python-on-linux/)\n   - [How to Download and Install Python on macOS](https://www.geeksforgeeks.org/how-to-download-and-install-python-latest-version-on-macos-mac-os-x/)\n\n2. **Download and Install Google Chrome:**\n   - Download and install the latest version of Google Chrome from its default location on the [official website](https://www.google.com/chrome).\n\n3. **Clone the repository:**\n\n   ```bash\n   git clone https://github.com/code-infected/Auto_Jobs_Applier_AI_Agent.git\n   \n   cd Auto_Jobs_Applier_AI_Agent\n   ```\n\n4. **Activate virtual environment:**\n\n   For Unix-based machines -\n   ```bash\n   python3 -m venv virtual\n   ```\n\n   ```bash\n   source virtual/bin/activate\n   ```\n\n   or for Windows-based machines -\n\n   ```bash\n   .\\virtual\\Scripts\\activate\n   ```\n\n5. **Install the required packages:**\n\n   Before installing the required packages, make sure to install https://visualstudio.microsoft.com/visual-cpp-build-tools/ and select \"Desktop development with C++\".\n\n   ```bash\n   pip install -r requirements.txt\n   ```\n\n## Configuration\n\n### 1. secrets.yaml\n\nThis file contains sensitive information. Never share or commit this file to version control.\n\n- `llm_api_key: [Your OpenAI or Ollama API key or Gemini API key]`\n  - Replace with your OpenAI API key for GPT integration\n  - To obtain an API key, follow the tutorial at: <https://medium.com/@lorenzozar/how-to-get-your-own-openai-api-key-f4d44e60c327>\n  - Note: You need to add credit to your OpenAI account to use the API. You can add credit by visiting the [OpenAI billing dashboard](https://platform.openai.com/account/billing).\n  - According to the [OpenAI community](https://community.openai.com/t/usage-tier-free-to-tier-1/919150) and our users' reports, right after setting up the OpenAI account and purchasing the required credits, users still have a `Free` account type. This prevents them from having unlimited access to OpenAI models and allows only 200 requests per day. This might cause runtime errors such as:  \n    `Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. ...}}`  \n    `{'error': {'message': 'Rate limit reached for gpt-4o-mini in organization <org> on requests per day (RPD): Limit 200, Used 200, Requested 1.}}`  \n    OpenAI will update your account automatically, but it might take some time, ranging from a couple of hours to a few days.  \n    You can find more about your organization's limits on the [official page](https://platform.openai.com/settings/organization/limits).\n  - For obtaining Gemini API key visit [Google AI for Devs](https://ai.google.dev/gemini-api/docs/api-key)\n\n\n#### 1.1 config.py - Customize LLM model endpoint\n\n- `LLM_MODEL_TYPE`:\n  - Choose the model type, supported: openai / ollama / claude / gemini\n- `LLM_MODEL`:\n  - Choose the LLM model, currently supported:\n    - openai: gpt-4o\n    - ollama: llama2, mistral:v0.3\n    - claude: any model\n    - gemini: any model\n- `LLM_API_URL`:\n  - Link of the API endpoint for the LLM model\n    - openai: <https://api.pawan.krd/cosmosrp/v1>\n    - ollama: <http://127.0.0.1:11434/>\n    - claude: <https://api.anthropic.com/v1>\n    - gemini: <https://aistudio.google.com/app/apikey>\n- Note: To run local Ollama, follow the guidelines here: [Guide to Ollama deployment](https://github.com/ollama/ollama). The `LLM_API_URL` field is only required for Ollama.\n  \n### 2. plain_text_resume.yaml\n\nThis file contains your resume information in a structured format. Fill it out with your personal details, education, work experience, and skills. This information is used to auto-fill application forms and generate customized resumes.\n\nEach section has specific fields to fill out:\n\n- `personal_information:`\n  - This section contains basic personal details to identify yourself and provide contact information.\n    - **name**: Your first name.\n    - **surname**: Your last name or family name.\n    - **date_of_birth**: Your birth date in the format DD/MM/YYYY.\n    - **country**: The country where you currently reside.\n    - **city**: The city where you currently live.\n    - **address**: Your full address, including street and number.\n    - **zip_code**: Your postal/ZIP code.\n    - **phone_prefix**: The international dialing code for your phone number (e.g., +1 for the USA, +44 for the UK).\n    - **phone**: Your phone number without the international prefix.\n    - **email**: Your primary email address.\n    - **github**: URL to your GitHub profile, if applicable.\n    - **linkedin**: URL to your LinkedIn profile, if applicable.\n  - Example\n\n  ```yaml\n  personal_information:\n    name: \"Jane\"\n    surname: \"Doe\"\n    date_of_birth: \"01/01/1990\"\n    country: \"USA\"\n    city: \"New York\"\n    address: \"123 Main St\"\n    zip_code: \"520123\"\n    phone_prefix: \"+1\"\n    phone: \"5551234567\"\n    email: \"jane.doe@example.com\"\n    github: \"https://github.com/janedoe\"\n    linkedin: \"https://www.linkedin.com/in/janedoe/\"\n  ```\n\n- `education_details:`\n  - This section outlines your academic background, including degrees earned and relevant coursework.\n    - **degree**: The type of degree obtained (e.g., Bachelor's Degree, Master's Degree).\n    - **university**: The name of the university or institution where you studied.\n    - **final_evaluation_grade**: Your Grade Point Average or equivalent measure of academic performance.\n    - **start_date**: The start year of your studies.\n    - **graduation_year**: The year you graduated.\n    - **field_of_study**: The major or focus area of your studies.\n    - **exam**: A list of courses or subjects taken along with their respective grades.\n\n  - Example:\n\n  ```yaml\n  education_details:\n    - education_level: \"Bachelor's Degree\"\n      institution: \"University of Example\"\n      field_of_study: \"Software Engineering\"\n      final_evaluation_grade: \"4/4\"\n      start_date: \"2021\"\n      year_of_completion: \"2023\"\n      exam:\n        Algorithms: \"A\"\n        Data Structures: \"B+\"\n        Database Systems: \"A\"\n        Operating Systems: \"A-\"\n        Web Development: \"B\"\n  ```\n\n- `experience_details:`\n  - This section details your work experience, including job roles, companies, and key responsibilities.\n    - **position**: Your job title or role.\n    - **company**: The name of the company or organization where you worked.\n    - **employment_period**: The timeframe during which you were employed in the role, using the format MM/YYYY - MM/YYYY.\n    - **location**: The city and country where the company is located.\n    - **industry**: The industry or field in which the company operates.\n    - **key_responsibilities**: A list of major responsibilities or duties you had in the role, e.g. responsibility: \"Developed web applications using React and Node.js\".\n    - **skills_acquired**: Skills or expertise gained through this role, e.g. \"React\".\n\n  - Example:\n\n  ```yaml\n  experience_details:\n    - position: \"Software Developer\"\n      company: \"Tech Innovations Inc.\"\n      employment_period: \"06/2021 - Present\"\n      location: \"San Francisco, CA\"\n      industry: \"Technology\"\n      key_responsibilities:\n        - responsibility: \"Developed web applications using React and Node.js\"\n        - responsibility: \"Collaborated with cross-functional teams to design and implement new features\"\n        - responsibility: \"Troubleshot and resolved complex software issues\"\n      skills_acquired:\n        - \"React\"\n        - \"Node.js\"\n        - \"Software Troubleshooting\"\n  ```\n\n- `projects:`\n  - Include notable projects you have worked on, including personal or professional projects.\n    - **name**: The name or title of the project.\n    - **description**: A brief summary of what the project involves or its purpose.\n    - **link**: URL to the project, if available (e.g., GitHub repository, website).\n\n  - Example:\n\n    ```yaml\n    projects:\n      - name: \"Weather App\"\n        description: \"A web application that provides real-time weather information using a third-party API.\"\n        link: \"https://github.com/janedoe/weather-app\"\n      - name: \"Task Manager\"\n        description: \"A task management tool with features for tracking and prioritizing tasks.\"\n        link: \"https://github.com/janedoe/task-manager\"\n    ```\n\n- `achievements:`\n  - Highlight notable accomplishments or awards you have received.\n    - **name**: The title or name of the achievement.\n    - **description**: A brief explanation of the achievement and its significance.\n\n  - Example:\n\n  ```yaml\n  achievements:\n    - name: \"Employee of the Month\"\n      description: \"Recognized for exceptional performance and contributions to the team.\"\n    - name: \"Hackathon Winner\"\n      description: \"Won first place in a national hackathon competition.\"\n  ```\n\n- `certifications:`\n  - Include any professional certifications you have earned.\n    - name: \"PMP\"  \n      description: \"Certification for project management professionals, issued by the Project Management Institute (PMI)\"\n\n  - Example:\n\n  ```yaml\n  certifications:\n    - \"Certified Scrum Master\"\n    - \"AWS Certified Solutions Architect\"\n  ```\n\n- `languages:`\n  - Detail the languages you speak and your proficiency level in each.\n    - **language**: The name of the language.\n    - **proficiency**: Your level of proficiency (e.g., Native, Fluent, Intermediate).\n\n  - Example:\n\n  ```yaml\n  languages:\n    - language: \"English\"\n      proficiency: \"Fluent\"\n    - language: \"Spanish\"\n      proficiency: \"Intermediate\"\n  ```\n\n- `interests:`\n\n  - Mention your professional or personal interests that may be relevant to your career.\n    - **interest**: A list of interests or hobbies.\n\n  - Example:\n\n  ```yaml\n  interests:\n    - \"Machine Learning\"\n    - \"Cybersecurity\"\n    - \"Open Source Projects\"\n    - \"Digital Marketing\"\n    - \"Entrepreneurship\"\n  ```\n\n- `availability:`\n  - State your current availability or notice period.\n    - **notice_period**: The amount of time required before you can start a new role (e.g., \"2 weeks\", \"1 month\").\n\n  - Example:\n\n  ```yaml\n  availability:\n    notice_period: \"2 weeks\"\n  ```\n\n- `salary_expectations:`\n  - Provide your expected salary range.\n    - **salary_range_usd**: The salary range you are expecting, expressed in USD.\n\n  - Example:\n\n  ```yaml\n  salary_expectations:\n    salary_range_usd: \"80000 - 100000\"\n  ```\n\n- `self_identification:`\n  - Provide information related to personal identity, including gender and pronouns.\n    - **gender**: Your gender identity.\n    - **pronouns**: The pronouns you use (e.g., He/Him, She/Her, They/Them).\n    - **veteran**: Your status as a veteran (e.g., Yes, No).\n    - **disability**: Whether you have a disability (e.g., Yes, No).\n    - **ethnicity**: Your ethnicity.\n\n  - Example:\n\n  ```yaml\n  self_identification:\n    gender: \"Female\"\n    pronouns: \"She/Her\"\n    veteran: \"No\"\n    disability: \"No\"\n    ethnicity: \"Asian\"\n  ```\n\n- `legal_authorization:`\n  - Indicate your legal ability to work in various locations.\n    - **eu_work_authorization**: Whether you are authorized to work in the European Union (Yes/No).\n    - **us_work_authorization**: Whether you are authorized to work in the United States (Yes/No).\n    - **requires_us_visa**: Whether you require a visa to work in the United States (Yes/No).\n    - **requires_us_sponsorship**: Whether you require sponsorship to work in the United States (Yes/No).\n    - **requires_eu_visa**: Whether you require a visa to work in the European Union (Yes/No).\n    - **legally_allowed_to_work_in_eu**: Whether you are legally allowed to work in the European Union (Yes/No).\n    - **legally_allowed_to_work_in_us**: Whether you are legally allowed to work in the United States (Yes/No).\n    - **requires_eu_sponsorship**: Whether you require sponsorship to work in the European Union (Yes/No).\n    - **canada_work_authorization**: Whether you are authorized to work in Canada (Yes/No).\n    - **requires_canada_visa**: Whether you require a visa to work in Canada (Yes/No).\n    - **legally_allowed_to_work_in_canada**: Whether you are legally allowed to work in Canada (Yes/No).\n    - **requires_canada_sponsorship**: Whether you require sponsorship to work in Canada (Yes/No).\n    - **uk_work_authorization**: Whether you are authorized to work in the United Kingdom (Yes/No).\n    - **requires_uk_visa**: Whether you require a visa to work in the United Kingdom (Yes/No).\n    - **legally_allowed_to_work_in_uk**: Whether you are legally allowed to work in the United Kingdom (Yes/No).\n    - **requires_uk_sponsorship**: Whether you require sponsorship to work in the United Kingdom (Yes/No).\n\n  - Example:\n\n     ```yaml\n    legal_authorization:\n    eu_work_authorization: \"Yes\"\n    us_work_authorization: \"Yes\"\n    requires_us_visa: \"No\"\n    requires_us_sponsorship: \"Yes\"\n    requires_eu_visa: \"No\"\n    legally_allowed_to_work_in_eu: \"Yes\"\n    legally_allowed_to_work_in_us: \"Yes\"\n    requires_eu_sponsorship: \"No\"\n    canada_work_authorization: \"Yes\"\n    requires_canada_visa: \"No\"\n    legally_allowed_to_work_in_canada: \"Yes\"\n    requires_canada_sponsorship: \"No\"\n    uk_work_authorization: \"Yes\"\n    requires_uk_visa: \"No\"\n    legally_allowed_to_work_in_uk: \"Yes\"\n    requires_uk_sponsorship: \"No\"\n    ```\n\n- `work_preferences:`\n  - Specify your preferences for work arrangements and conditions.\n    - **remote_work**: Whether you are open to remote work (Yes/No).\n    - **in_person_work**: Whether you are open to in-person work (Yes/No).\n    - **open_to_relocation**: Whether you are willing to relocate for a job (Yes/No).\n    - **willing_to_complete_assessments**: Whether you are willing to complete job assessments (Yes/No).\n    - **willing_to_undergo_drug_tests**: Whether you are willing to undergo drug testing (Yes/No).\n    - **willing_to_undergo_background_checks**: Whether you are willing to undergo background checks (Yes/No).\n\n  - Example:\n\n  ```yaml\n  work_preferences:\n    remote_work: \"Yes\"\n    in_person_work: \"No\"\n    open_to_relocation: \"Yes\"\n    willing_to_complete_assessments: \"Yes\"\n    willing_to_undergo_drug_tests: \"No\"\n    willing_to_undergo_background_checks: \"Yes\"\n  ```\n\n### PLUS. data_folder_example\n\nThe `data_folder_example` folder contains a working example of how the files necessary for the bot's operation should be structured and filled out. This folder serves as a practical reference to help you correctly set up your work environment for the job search bot.\n\n#### Contents\n\nInside this folder, you'll find example versions of the key files:\n\n- `secrets.yaml`\n- `plain_text_resume.yaml`\n\nThese files are already populated with fictitious but realistic data. They show you the correct format and type of information to enter in each file.\n\n#### Using the data_folder_example\n\nUsing this folder as a guide can be particularly helpful for:\n\n1. Understanding the correct structure of each configuration file\n2. Seeing examples of valid data for each field\n3. Having a reference point while filling out your personal files\n\n## Usage\n\n1. **Data Folder:**\n   Ensure that your data_folder contains the following files:\n   - `secrets.yaml`\n   - `plain_text_resume.yaml`\n\n2. **Output Folder:**\n    Contains the output of the bot.\n    TODO\n\n\n\n3. **Run the Bot:**\n\n   Auto_Jobs_Applier_AIHawk offers flexibility in how it handles your PDF resume:\n\n- **Resume and Cover Letter Generation:**\n\n   ```bash\n   python main.py\n   ```\n\n\n### Troubleshooting\n\n#### 1. OpenAI API Rate Limit Errors\n\n**Error Message:**\n\nopenai.RateLimitError: Error code: 429 - {'error': {'message': 'You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: <https://platform.openai.com/docs/guides/error-codes/api-errors>.', 'type': 'insufficient_quota', 'param': None, 'code': 'insufficient_quota'}}\n\n**Solution:**\n\n- Check your OpenAI API billing settings at <https://platform.openai.com/account/billing>\n- Ensure you have added a valid payment method to your OpenAI account\n- Note that ChatGPT Plus subscription is different from API access\n- If you've recently added funds or upgraded, wait 12-24 hours for changes to take effect\n- Free tier has a 3 RPM limit; spend at least $5 on API usage to increase\n\n#### 2. Incorrect Information in Job Applications\n\n**Issue:** Bot provides inaccurate data for experience, CTC, and notice period\n\n**Solution:**\n\n- Update prompts for professional experience specificity\n- Add fields in `config.py` for current CTC, expected CTC, and notice period\n- Modify bot logic to use these new config fields\n\n#### 3. YAML Configuration Errors\n\n**Error Message:**\n\nyaml.scanner.ScannerError: while scanning a simple key\n\n**Solution:**\n\n- Copy example `config.yaml` and modify gradually\n- Ensure proper YAML indentation and spacing\n- Use a YAML validator tool\n- Avoid unnecessary special characters or quotes\n\n\n### General Troubleshooting Tips\n\n- Use the latest version of the script\n- Verify all dependencies are installed and updated\n- Check internet connection stability\n- Clear browser cache and cookies if issues persist\n\nFor further assistance, please create an issue on the [GitHub repository](https://github.com/feder-cr/Auto_Jobs_Applier_AIHawk/issues) with detailed information about your problem, including error messages and your configuration (with sensitive information removed).\n\n## Documentation\n\n### For Users\n\n- Ollama Setup\n  - Follow the instructions below to ensure proper configuration of **AIHawk** with **Ollama** and **Gemini**.\n  - Written by Rushi, [Linkedin](https://www.linkedin.com/in/rushichaganti/), support him by following.\n  - Step 1: If your system meets the requirements for Ollama, install it from the following URL https://ollama.com/download.\n  - Step 2: Verify Ollama is Running \n    - Open a browser and navigate to localhost:11434  to confirm Ollama is running\n   - If Ollama runs correctly, you'll see confirmation in the browser.\n   - Step 3: Edit Configuration in VS Code\n     - Edit the file config.py located at Auto_Jobs_Applier_AIHawk\\config.py with the following\n     - llm_model_type: ollama \n     - llm_model: 'llama3.2:1b' \n     - llm_api_url: 'http://127.0.0.1:11434/'\n     \n- Gemini Setup\n  - Follow the instructions below to ensure proper configuration of **AIHawk** with **Ollama** and **Gemini**.\n  - Written by Rushi, [Linkedin](https://www.linkedin.com/in/rushichaganti/), support him by following.\n  - Step 1: Get your free API key at https://aistudio.google.com/app/apikey.\n  - Step 2: Verify Ollama is Running \n    - Replace llm_api_key with your newly created API key on the file secrets.yaml located at Auto_Jobs_Applier_AIHawk\\data_folder\\secrets.yaml\n  - Step 2: Verify Ollama is Running \n    - Replace llm_api_key with your newly created API key on the file secrets.yaml located at Auto_Jobs_Applier_AIHawk\\data_folder\\secrets.yaml\n  - Step 3: Edit Configuration in VS Code\n    - Edit the file config.py located at Auto_Jobs_Applier_AIHawk\\config.py with the following \n    - llm_model_type: gemini \n    - llm_model: 'gemini-pro'\n\n- Editing YAML Files\n  - For detailed instructions on editing YAML configuration sections for **AIHawk**, refer to this document:\n  - [Download YAML Editing Guide (PDF)](https://www.scribd.com/document/788427840/Guide-Yaml-Sections)\n  - Written by Rushi, [Linkedin](https://www.linkedin.com/in/rushichaganti/), support him by following.\n\n- Auto-start AIHawk\n  - To make **AIHawk** automatically start when your system boots, follow the steps in this guide:\n  - [Download Auto-start AIHawk Guide (PDF)](https://www.scribd.com/document/788427278/guide-to-autostart-aihawk)\n  - Written by Rushi, [Linkedin](https://www.linkedin.com/in/rushichaganti/), support him by following.\n\n- Video Tutorial\n  - [How to set up Auto_Jobs_Applier_AIHawk](https://youtu.be/gdW9wogHEUM)\n  - Written by Rushi, [Linkedin](https://www.linkedin.com/in/rushichaganti/), support him by following.\n\n- [OpenAI API Documentation](https://platform.openai.com/docs/)\n\n### For Developers\n\n- [Contribution Guidelines](CONTRIBUTING.md)\n\n- [Lang Chain Developer Documentation](https://python.langchain.com/v0.2/docs/integrations/components/)\n\n\n- If you encounter any issues, you can open an issue on [GitHub](https://github.com/feder-cr/Auto_Jobs_Applier_AIHawk/issues).\n  Please add valuable details to the subject and to the description. If you need a new feature then please reflect this.  \n  I'll be more than happy to assist you!\n\n- Note for Contributors: If you would like to submit a Pull Request (PR), please target the `release` branch instead of `main`. The `release` branch is used for testing new code changes and will be periodically merged into `main` after validation. This approach ensures that only tested features are included in the main branch.\n\n## Conclusion\n\nAuto_Jobs_Applier_AIHawk provides a significant advantage in the modern job market by automating and enhancing the job application process. With features like dynamic resume generation and AI-powered personalization, it offers unparalleled flexibility and efficiency. Whether you're a job seeker aiming to maximize your chances of landing a job, a recruiter looking to streamline application submissions, or a career advisor seeking to offer better services, Auto_Jobs_Applier_AIHawk is an invaluable resource. By leveraging cutting-edge automation and artificial intelligence, this tool not only saves time but also significantly increases the effectiveness and quality of job applications in today's competitive landscape.\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=feder-cr/Auto_Jobs_Applier_AIHawk&type=Date)](https://star-history.com/#feder-cr/Auto_Jobs_Applier_AIHawk&Date)\n\nIf you like the project please star ⭐ the repository!\n\n## Special Thanks\n[![Contributors](https://img.shields.io/github/contributors/feder-cr/Auto_Jobs_Applier_AIHawk)](https://github.com/feder-cr/Auto_Jobs_Applier_AIHawk/graphs/contributors)\n\n<a href=\"https://github.com/AIHawk-co/Auto_Jobs_Applier/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=AIHawk-co/Auto_Jobs_Applier\" />\n</a>\n\nMade with [contrib.rocks](https://contrib.rocks).\n\n## License\n\nThis project is licensed under the AGPL License. Documentation is licensed under CC BY - see the [AGPL LICENSE](LICENSE) and [CC BY LICENSE](docs/LICENSE) files for details.\n\nThe AGPL License requires that any derivative work must also be open source and distributed under the same license.\n\nThe CC BY License permits others to distribute, remix, adapt, and build upon your work, even for commercial purposes, as long as they credit you for the original creation. \n \n\n## Disclaimer\n\nThis tool, Auto_Jobs_Applier_AIHawk, is intended for use at your own risk. The creators / maintainers / contributors assume no responsibility for any consequences arising from its use. Users are advised to comply with the terms of service of relevant platforms and adhere to all applicable laws, regulations, and ethical guidelines. The use of automated tools for job applications may carry risks, including potential impacts on user accounts. Proceed with caution and at your own discretion.\n\n[Back to top 🚀](#top)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.py",
          "type": "blob",
          "size": 0.5078125,
          "content": "# In this file, you can set the configurations of the app.\n\nfrom src.utils.constants import DEBUG, ERROR, LLM_MODEL, OPENAI\n\n#config related to logging must have prefix LOG_\nLOG_LEVEL = ERROR\nLOG_SELENIUM_LEVEL = ERROR\nLOG_TO_FILE = False\nLOG_TO_CONSOLE = False\n\nMINIMUM_WAIT_TIME_IN_SECONDS = 60\n\nJOB_APPLICATIONS_DIR = \"job_applications\"\nJOB_SUITABILITY_SCORE = 7\n\nJOB_MAX_APPLICATIONS = 5\nJOB_MIN_APPLICATIONS = 1\n\nLLM_MODEL_TYPE = 'openai'\nLLM_MODEL = 'gpt-4o-mini'\n# Only required for OLLAMA models\nLLM_API_URL = ''"
        },
        {
          "name": "data_folder",
          "type": "tree",
          "content": null
        },
        {
          "name": "data_folder_example",
          "type": "tree",
          "content": null
        },
        {
          "name": "main.py",
          "type": "blob",
          "size": 21.662109375,
          "content": "import base64\nimport sys\nfrom pathlib import Path\nimport traceback\nfrom typing import List, Optional, Tuple, Dict\n\nimport click\nimport inquirer\nimport yaml\nfrom selenium import webdriver\nfrom selenium.common.exceptions import WebDriverException\nfrom selenium.webdriver.chrome.service import Service as ChromeService\nfrom webdriver_manager.chrome import ChromeDriverManager\nimport re\nfrom src.libs.resume_and_cover_builder import ResumeFacade, ResumeGenerator, StyleManager\nfrom src.resume_schemas.job_application_profile import JobApplicationProfile\nfrom src.resume_schemas.resume import Resume\nfrom src.logging import logger\nfrom src.utils.chrome_utils import init_browser\nfrom src.utils.constants import (\n    PLAIN_TEXT_RESUME_YAML,\n    SECRETS_YAML,\n    WORK_PREFERENCES_YAML,\n)\n# from ai_hawk.bot_facade import AIHawkBotFacade\n# from ai_hawk.job_manager import AIHawkJobManager\n# from ai_hawk.llm.llm_manager import GPTAnswerer\n\n\nclass ConfigError(Exception):\n    \"\"\"Custom exception for configuration-related errors.\"\"\"\n    pass\n\n\nclass ConfigValidator:\n    \"\"\"Validates configuration and secrets YAML files.\"\"\"\n\n    EMAIL_REGEX = re.compile(r\"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$\")\n    REQUIRED_CONFIG_KEYS = {\n        \"remote\": bool,\n        \"experience_level\": dict,\n        \"job_types\": dict,\n        \"date\": dict,\n        \"positions\": list,\n        \"locations\": list,\n        \"location_blacklist\": list,\n        \"distance\": int,\n        \"company_blacklist\": list,\n        \"title_blacklist\": list,\n    }\n    EXPERIENCE_LEVELS = [\n        \"internship\",\n        \"entry\",\n        \"associate\",\n        \"mid_senior_level\",\n        \"director\",\n        \"executive\",\n    ]\n    JOB_TYPES = [\n        \"full_time\",\n        \"contract\",\n        \"part_time\",\n        \"temporary\",\n        \"internship\",\n        \"other\",\n        \"volunteer\",\n    ]\n    DATE_FILTERS = [\"all_time\", \"month\", \"week\", \"24_hours\"]\n    APPROVED_DISTANCES = {0, 5, 10, 25, 50, 100}\n\n    @staticmethod\n    def validate_email(email: str) -> bool:\n        \"\"\"Validate the format of an email address.\"\"\"\n        return bool(ConfigValidator.EMAIL_REGEX.match(email))\n\n    @staticmethod\n    def load_yaml(yaml_path: Path) -> dict:\n        \"\"\"Load and parse a YAML file.\"\"\"\n        try:\n            with open(yaml_path, \"r\") as stream:\n                return yaml.safe_load(stream)\n        except yaml.YAMLError as exc:\n            raise ConfigError(f\"Error reading YAML file {yaml_path}: {exc}\")\n        except FileNotFoundError:\n            raise ConfigError(f\"YAML file not found: {yaml_path}\")\n\n    @classmethod\n    def validate_config(cls, config_yaml_path: Path) -> dict:\n        \"\"\"Validate the main configuration YAML file.\"\"\"\n        parameters = cls.load_yaml(config_yaml_path)\n        # Check for required keys and their types\n        for key, expected_type in cls.REQUIRED_CONFIG_KEYS.items():\n            if key not in parameters:\n                if key in [\"company_blacklist\", \"title_blacklist\", \"location_blacklist\"]:\n                    parameters[key] = []\n                else:\n                    raise ConfigError(f\"Missing required key '{key}' in {config_yaml_path}\")\n            elif not isinstance(parameters[key], expected_type):\n                if key in [\"company_blacklist\", \"title_blacklist\", \"location_blacklist\"] and parameters[key] is None:\n                    parameters[key] = []\n                else:\n                    raise ConfigError(\n                        f\"Invalid type for key '{key}' in {config_yaml_path}. Expected {expected_type.__name__}.\"\n                    )\n        cls._validate_experience_levels(parameters[\"experience_level\"], config_yaml_path)\n        cls._validate_job_types(parameters[\"job_types\"], config_yaml_path)\n        cls._validate_date_filters(parameters[\"date\"], config_yaml_path)\n        cls._validate_list_of_strings(parameters, [\"positions\", \"locations\"], config_yaml_path)\n        cls._validate_distance(parameters[\"distance\"], config_yaml_path)\n        cls._validate_blacklists(parameters, config_yaml_path)\n        return parameters\n\n    @classmethod\n    def _validate_experience_levels(cls, experience_levels: dict, config_path: Path):\n        \"\"\"Ensure experience levels are booleans.\"\"\"\n        for level in cls.EXPERIENCE_LEVELS:\n            if not isinstance(experience_levels.get(level), bool):\n                raise ConfigError(\n                    f\"Experience level '{level}' must be a boolean in {config_path}\"\n                )\n\n    @classmethod\n    def _validate_job_types(cls, job_types: dict, config_path: Path):\n        \"\"\"Ensure job types are booleans.\"\"\"\n        for job_type in cls.JOB_TYPES:\n            if not isinstance(job_types.get(job_type), bool):\n                raise ConfigError(\n                    f\"Job type '{job_type}' must be a boolean in {config_path}\"\n                )\n\n    @classmethod\n    def _validate_date_filters(cls, date_filters: dict, config_path: Path):\n        \"\"\"Ensure date filters are booleans.\"\"\"\n        for date_filter in cls.DATE_FILTERS:\n            if not isinstance(date_filters.get(date_filter), bool):\n                raise ConfigError(\n                    f\"Date filter '{date_filter}' must be a boolean in {config_path}\"\n                )\n\n    @classmethod\n    def _validate_list_of_strings(cls, parameters: dict, keys: list, config_path: Path):\n        \"\"\"Ensure specified keys are lists of strings.\"\"\"\n        for key in keys:\n            if not all(isinstance(item, str) for item in parameters[key]):\n                raise ConfigError(\n                    f\"'{key}' must be a list of strings in {config_path}\"\n                )\n\n    @classmethod\n    def _validate_distance(cls, distance: int, config_path: Path):\n        \"\"\"Validate the distance value.\"\"\"\n        if distance not in cls.APPROVED_DISTANCES:\n            raise ConfigError(\n                f\"Invalid distance value '{distance}' in {config_path}. Must be one of: {cls.APPROVED_DISTANCES}\"\n            )\n\n    @classmethod\n    def _validate_blacklists(cls, parameters: dict, config_path: Path):\n        \"\"\"Ensure blacklists are lists.\"\"\"\n        for blacklist in [\"company_blacklist\", \"title_blacklist\", \"location_blacklist\"]:\n            if not isinstance(parameters.get(blacklist), list):\n                raise ConfigError(\n                    f\"'{blacklist}' must be a list in {config_path}\"\n                )\n            if parameters[blacklist] is None:\n                parameters[blacklist] = []\n\n    @staticmethod\n    def validate_secrets(secrets_yaml_path: Path) -> str:\n        \"\"\"Validate the secrets YAML file and retrieve the LLM API key.\"\"\"\n        secrets = ConfigValidator.load_yaml(secrets_yaml_path)\n        mandatory_secrets = [\"llm_api_key\"]\n\n        for secret in mandatory_secrets:\n            if secret not in secrets:\n                raise ConfigError(f\"Missing secret '{secret}' in {secrets_yaml_path}\")\n\n            if not secrets[secret]:\n                raise ConfigError(f\"Secret '{secret}' cannot be empty in {secrets_yaml_path}\")\n\n        return secrets[\"llm_api_key\"]\n\n\nclass FileManager:\n    \"\"\"Handles file system operations and validations.\"\"\"\n\n    REQUIRED_FILES = [SECRETS_YAML, WORK_PREFERENCES_YAML, PLAIN_TEXT_RESUME_YAML]\n\n    @staticmethod\n    def validate_data_folder(app_data_folder: Path) -> Tuple[Path, Path, Path, Path]:\n        \"\"\"Validate the existence of the data folder and required files.\"\"\"\n        if not app_data_folder.is_dir():\n            raise FileNotFoundError(f\"Data folder not found: {app_data_folder}\")\n\n        missing_files = [file for file in FileManager.REQUIRED_FILES if not (app_data_folder / file).exists()]\n        if missing_files:\n            raise FileNotFoundError(f\"Missing files in data folder: {', '.join(missing_files)}\")\n\n        output_folder = app_data_folder / \"output\"\n        output_folder.mkdir(exist_ok=True)\n\n        return (\n            app_data_folder / SECRETS_YAML,\n            app_data_folder / WORK_PREFERENCES_YAML,\n            app_data_folder / PLAIN_TEXT_RESUME_YAML,\n            output_folder,\n        )\n\n    @staticmethod\n    def get_uploads(plain_text_resume_file: Path) -> Dict[str, Path]:\n        \"\"\"Convert resume file paths to a dictionary.\"\"\"\n        if not plain_text_resume_file.exists():\n            raise FileNotFoundError(f\"Plain text resume file not found: {plain_text_resume_file}\")\n\n        uploads = {\"plainTextResume\": plain_text_resume_file}\n\n        return uploads\n\n\ndef create_cover_letter(parameters: dict, llm_api_key: str):\n    \"\"\"\n    Logic to create a CV.\n    \"\"\"\n    try:\n        logger.info(\"Generating a CV based on provided parameters.\")\n\n        # Carica il resume in testo semplice\n        with open(parameters[\"uploads\"][\"plainTextResume\"], \"r\", encoding=\"utf-8\") as file:\n            plain_text_resume = file.read()\n\n        style_manager = StyleManager()\n        style_manager = StyleManager()\n        available_styles = style_manager.get_styles()\n\n        if not available_styles:\n            logger.warning(\"No styles available. Proceeding without style selection.\")\n        else:\n            # Present style choices to the user\n            choices = style_manager.format_choices(available_styles)\n            questions = [\n                inquirer.List(\n                    \"style\",\n                    message=\"Select a style for the resume:\",\n                    choices=choices,\n                )\n            ]\n            style_answer = inquirer.prompt(questions)\n            if style_answer and \"style\" in style_answer:\n                selected_choice = style_answer[\"style\"]\n                for style_name, (file_name, author_link) in available_styles.items():\n                    if selected_choice.startswith(style_name):\n                        style_manager.set_selected_style(style_name)\n                        logger.info(f\"Selected style: {style_name}\")\n                        break\n            else:\n                logger.warning(\"No style selected. Proceeding with default style.\")\n        questions = [\n    inquirer.Text('job_url', message=\"Please enter the URL of the job description:\")\n        ]\n        answers = inquirer.prompt(questions)\n        job_url = answers.get('job_url')\n        resume_generator = ResumeGenerator()\n        resume_object = Resume(plain_text_resume)\n        driver = init_browser()\n        resume_generator.set_resume_object(resume_object)\n        resume_facade = ResumeFacade(            \n            api_key=llm_api_key,\n            style_manager=style_manager,\n            resume_generator=resume_generator,\n            resume_object=resume_object,\n            output_path=Path(\"data_folder/output\"),\n        )\n        resume_facade.set_driver(driver)\n        resume_facade.link_to_job(job_url)\n        result_base64, suggested_name = resume_facade.create_cover_letter()         \n\n        # Decodifica Base64 in dati binari\n        try:\n            pdf_data = base64.b64decode(result_base64)\n        except base64.binascii.Error as e:\n            logger.error(\"Error decoding Base64: %s\", e)\n            raise\n\n        # Definisci il percorso della cartella di output utilizzando `suggested_name`\n        output_dir = Path(parameters[\"outputFileDirectory\"]) / suggested_name\n\n        # Crea la cartella se non esiste\n        try:\n            output_dir.mkdir(parents=True, exist_ok=True)\n            logger.info(f\"Cartella di output creata o già esistente: {output_dir}\")\n        except IOError as e:\n            logger.error(\"Error creating output directory: %s\", e)\n            raise\n        \n        output_path = output_dir / \"cover_letter_tailored.pdf\"\n        try:\n            with open(output_path, \"wb\") as file:\n                file.write(pdf_data)\n            logger.info(f\"CV salvato in: {output_path}\")\n        except IOError as e:\n            logger.error(\"Error writing file: %s\", e)\n            raise\n    except Exception as e:\n        logger.exception(f\"An error occurred while creating the CV: {e}\")\n        raise\n\n\ndef create_resume_pdf_job_tailored(parameters: dict, llm_api_key: str):\n    \"\"\"\n    Logic to create a CV.\n    \"\"\"\n    try:\n        logger.info(\"Generating a CV based on provided parameters.\")\n\n        # Carica il resume in testo semplice\n        with open(parameters[\"uploads\"][\"plainTextResume\"], \"r\", encoding=\"utf-8\") as file:\n            plain_text_resume = file.read()\n\n        style_manager = StyleManager()\n        available_styles = style_manager.get_styles()\n\n        if not available_styles:\n            logger.warning(\"No styles available. Proceeding without style selection.\")\n        else:\n            # Present style choices to the user\n            choices = style_manager.format_choices(available_styles)\n            questions = [\n                inquirer.List(\n                    \"style\",\n                    message=\"Select a style for the resume:\",\n                    choices=choices,\n                )\n            ]\n            style_answer = inquirer.prompt(questions)\n            if style_answer and \"style\" in style_answer:\n                selected_choice = style_answer[\"style\"]\n                for style_name, (file_name, author_link) in available_styles.items():\n                    if selected_choice.startswith(style_name):\n                        style_manager.set_selected_style(style_name)\n                        logger.info(f\"Selected style: {style_name}\")\n                        break\n            else:\n                logger.warning(\"No style selected. Proceeding with default style.\")\n        questions = [inquirer.Text('job_url', message=\"Please enter the URL of the job description:\")]\n        answers = inquirer.prompt(questions)\n        job_url = answers.get('job_url')\n        resume_generator = ResumeGenerator()\n        resume_object = Resume(plain_text_resume)\n        driver = init_browser()\n        resume_generator.set_resume_object(resume_object)\n        resume_facade = ResumeFacade(            \n            api_key=llm_api_key,\n            style_manager=style_manager,\n            resume_generator=resume_generator,\n            resume_object=resume_object,\n            output_path=Path(\"data_folder/output\"),\n        )\n        resume_facade.set_driver(driver)\n        resume_facade.link_to_job(job_url)\n        result_base64, suggested_name = resume_facade.create_resume_pdf_job_tailored()         \n\n        # Decodifica Base64 in dati binari\n        try:\n            pdf_data = base64.b64decode(result_base64)\n        except base64.binascii.Error as e:\n            logger.error(\"Error decoding Base64: %s\", e)\n            raise\n\n        # Definisci il percorso della cartella di output utilizzando `suggested_name`\n        output_dir = Path(parameters[\"outputFileDirectory\"]) / suggested_name\n\n        # Crea la cartella se non esiste\n        try:\n            output_dir.mkdir(parents=True, exist_ok=True)\n            logger.info(f\"Cartella di output creata o già esistente: {output_dir}\")\n        except IOError as e:\n            logger.error(\"Error creating output directory: %s\", e)\n            raise\n        \n        output_path = output_dir / \"resume_tailored.pdf\"\n        try:\n            with open(output_path, \"wb\") as file:\n                file.write(pdf_data)\n            logger.info(f\"CV salvato in: {output_path}\")\n        except IOError as e:\n            logger.error(\"Error writing file: %s\", e)\n            raise\n    except Exception as e:\n        logger.exception(f\"An error occurred while creating the CV: {e}\")\n        raise\n\n\ndef create_resume_pdf(parameters: dict, llm_api_key: str):\n    \"\"\"\n    Logic to create a CV.\n    \"\"\"\n    try:\n        logger.info(\"Generating a CV based on provided parameters.\")\n\n        # Load the plain text resume\n        with open(parameters[\"uploads\"][\"plainTextResume\"], \"r\", encoding=\"utf-8\") as file:\n            plain_text_resume = file.read()\n\n        # Initialize StyleManager\n        style_manager = StyleManager()\n        available_styles = style_manager.get_styles()\n\n        if not available_styles:\n            logger.warning(\"No styles available. Proceeding without style selection.\")\n        else:\n            # Present style choices to the user\n            choices = style_manager.format_choices(available_styles)\n            questions = [\n                inquirer.List(\n                    \"style\",\n                    message=\"Select a style for the resume:\",\n                    choices=choices,\n                )\n            ]\n            style_answer = inquirer.prompt(questions)\n            if style_answer and \"style\" in style_answer:\n                selected_choice = style_answer[\"style\"]\n                for style_name, (file_name, author_link) in available_styles.items():\n                    if selected_choice.startswith(style_name):\n                        style_manager.set_selected_style(style_name)\n                        logger.info(f\"Selected style: {style_name}\")\n                        break\n            else:\n                logger.warning(\"No style selected. Proceeding with default style.\")\n\n        # Initialize the Resume Generator\n        resume_generator = ResumeGenerator()\n        resume_object = Resume(plain_text_resume)\n        driver = init_browser()\n        resume_generator.set_resume_object(resume_object)\n\n        # Create the ResumeFacade\n        resume_facade = ResumeFacade(\n            api_key=llm_api_key,\n            style_manager=style_manager,\n            resume_generator=resume_generator,\n            resume_object=resume_object,\n            output_path=Path(\"data_folder/output\"),\n        )\n        resume_facade.set_driver(driver)\n        result_base64 = resume_facade.create_resume_pdf()\n\n        # Decode Base64 to binary data\n        try:\n            pdf_data = base64.b64decode(result_base64)\n        except base64.binascii.Error as e:\n            logger.error(\"Error decoding Base64: %s\", e)\n            raise\n\n        # Define the output directory using `suggested_name`\n        output_dir = Path(parameters[\"outputFileDirectory\"])\n\n        # Write the PDF file\n        output_path = output_dir / \"resume_base.pdf\"\n        try:\n            with open(output_path, \"wb\") as file:\n                file.write(pdf_data)\n            logger.info(f\"Resume saved at: {output_path}\")\n        except IOError as e:\n            logger.error(\"Error writing file: %s\", e)\n            raise\n    except Exception as e:\n        logger.exception(f\"An error occurred while creating the CV: {e}\")\n        raise\n\n        \ndef handle_inquiries(selected_actions: List[str], parameters: dict, llm_api_key: str):\n    \"\"\"\n    Decide which function to call based on the selected user actions.\n\n    :param selected_actions: List of actions selected by the user.\n    :param parameters: Configuration parameters dictionary.\n    :param llm_api_key: API key for the language model.\n    \"\"\"\n    try:\n        if selected_actions:\n            if \"Generate Resume\" == selected_actions:\n                logger.info(\"Crafting a standout professional resume...\")\n                create_resume_pdf(parameters, llm_api_key)\n                \n            if \"Generate Resume Tailored for Job Description\" == selected_actions:\n                logger.info(\"Customizing your resume to enhance your job application...\")\n                create_resume_pdf_job_tailored(parameters, llm_api_key)\n                \n            if \"Generate Tailored Cover Letter for Job Description\" == selected_actions:\n                logger.info(\"Designing a personalized cover letter to enhance your job application...\")\n                create_cover_letter(parameters, llm_api_key)\n\n        else:\n            logger.warning(\"No actions selected. Nothing to execute.\")\n    except Exception as e:\n        logger.exception(f\"An error occurred while handling inquiries: {e}\")\n        raise\n\ndef prompt_user_action() -> str:\n    \"\"\"\n    Use inquirer to ask the user which action they want to perform.\n\n    :return: Selected action.\n    \"\"\"\n    try:\n        questions = [\n            inquirer.List(\n                'action',\n                message=\"Select the action you want to perform:\",\n                choices=[\n                    \"Generate Resume\",\n                    \"Generate Resume Tailored for Job Description\",\n                    \"Generate Tailored Cover Letter for Job Description\",\n                ],\n            ),\n        ]\n        answer = inquirer.prompt(questions)\n        if answer is None:\n            print(\"No answer provided. The user may have interrupted.\")\n            return \"\"\n        return answer.get('action', \"\")\n    except Exception as e:\n        print(f\"An error occurred: {e}\")\n        return \"\"\n\n\ndef main():\n    \"\"\"Main entry point for the AIHawk Job Application Bot.\"\"\"\n    try:\n        # Define and validate the data folder\n        data_folder = Path(\"data_folder\")\n        secrets_file, config_file, plain_text_resume_file, output_folder = FileManager.validate_data_folder(data_folder)\n\n        # Validate configuration and secrets\n        config = ConfigValidator.validate_config(config_file)\n        llm_api_key = ConfigValidator.validate_secrets(secrets_file)\n\n        # Prepare parameters\n        config[\"uploads\"] = FileManager.get_uploads(plain_text_resume_file)\n        config[\"outputFileDirectory\"] = output_folder\n\n        # Interactive prompt for user to select actions\n        selected_actions = prompt_user_action()\n\n        # Handle selected actions and execute them\n        handle_inquiries(selected_actions, config, llm_api_key)\n\n    except ConfigError as ce:\n        logger.error(f\"Configuration error: {ce}\")\n        logger.error(\n            \"Refer to the configuration guide for troubleshooting: \"\n            \"https://github.com/feder-cr/Auto_Jobs_Applier_AIHawk?tab=readme-ov-file#configuration\"\n        )\n    except FileNotFoundError as fnf:\n        logger.error(f\"File not found: {fnf}\")\n        logger.error(\"Ensure all required files are present in the data folder.\")\n    except RuntimeError as re:\n        logger.error(f\"Runtime error: {re}\")\n        logger.debug(traceback.format_exc())\n    except Exception as e:\n        logger.exception(f\"An unexpected error occurred: {e}\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.638671875,
          "content": "click\ngit+https://github.com/feder-cr/lib_resume_builder_AIHawk.git\nhttpx~=0.27.2\ninputimeout==1.0.4\njsonschema==4.23.0\njsonschema-specifications==2023.12.1\nlangchain==0.2.11\nlangchain-anthropic\nlangchain-huggingface\nlangchain-community==0.2.10\nlangchain-core==0.2.36\nlangchain-google-genai==1.0.10\nlangchain-ollama==0.1.3\nlangchain-openai==0.1.17\nlangchain-text-splitters==0.2.2\nlangsmith==0.1.93\nLevenshtein==0.25.1\nloguru==0.7.2\nopenai==1.37.1\npdfminer.six==20221105\npytest>=8.3.3\npython-dotenv~=1.0.1\nPyYAML~=6.0.2\nregex==2024.7.24\nreportlab==4.2.2\nselenium==4.9.1\nwebdriver-manager==4.0.2\npytest\npytest-mock\npytest-cov\nundetected-chromedriver==3.5.5"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}