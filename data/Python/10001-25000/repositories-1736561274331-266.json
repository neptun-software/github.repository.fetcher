{
  "metadata": {
    "timestamp": 1736561274331,
    "page": 266,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dask/dask",
      "stars": 12823,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".flake8",
          "type": "blob",
          "size": 1.158203125,
          "content": "# flake8 doesn't support pyproject.toml yet https://github.com/PyCQA/flake8/issues/234\n[flake8]\n# References:\n# https://flake8.readthedocs.io/en/latest/user/configuration.html\n# https://flake8.readthedocs.io/en/latest/user/error-codes.html\n# https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes\nexclude = __init__.py\nignore =\n    # Extra space in brackets\n    E20\n    # Multiple spaces around \",\"\n    E231,E241\n    # Comments\n    E26\n    # Import formatting\n    E4\n    # Comparing types instead of isinstance\n    E721\n    # Assigning lambda expression\n    E731\n    # Ambiguous variable names\n    E741\n    # Line break before binary operator\n    W503\n    # Line break after binary operator\n    W504\n    # Redefinition of unused 'loop' from line 10\n    F811\n    # No explicit stacklevel in warnings.warn. FIXME we should correct this in the code\n    B028\n    # multiple statements on one line; required for black compat\n    E701, E704\n\nmax-line-length = 120\nper-file-ignores =\n    *_test.py:\n        # Do not call assert False since python -O removes these calls\n        B011,\n    **/tests/*:\n        # Do not call assert False since python -O removes these calls\n        B011,\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.6533203125,
          "content": "# .git-blame-ignore-revs\n# absolufy-imports - No relative - PEP8 (#8796)\ncccb9d8d8e33a891396b1275c2448c352ef40c27\n\n# Update `pre-commit` version (#8691)\n510bbc380531cbf56a409f1ae68e6fd84a9599e6\n\n# Run pyupgrade in CI (#8246)\n80a82008d5b02a08f6ff59d802defcc43247eb1a\n\n# Bump pre-commit hook versions (#7676)\nd6bbbb08c92652eae2820e93edc2f3fe502391d3\n\n# Start adding isort (#7370)\na31c0fc72e1cc59b8b0254965824abb0718c5f56\n\n# Rerun with latest black release (#6568)\n64e2a9b3b9992503221a074a547827501927d1fa\n\n# LINT: Fixup black string normalization (#5227)\nd92f4015a1da3da10c04c682ed2acae8469e9576\n\n# Apply Black formatting (#4983)\n7e4beffb339c69278091d4e305c2ae18ddf8c74f\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.294921875,
          "content": ".hypothesis\n*.py[cod]\n__pycache__/\n*.egg-info\n.mypy_cache\ndask-worker-space/\ndocs/build\ndocs/source/generated\nbuild/\ndist/\n.idea/\nlog.*\nlog\n.pytest_cache/\n.coverage\n.coverage.*\ncoverage.xml\n.DS_Store\n*.sqlite\n*.swp\n*.swo\n.cache/\nhdfs-initialized-indicator\n.ipynb_checkpoints\n.vscode/\n.history\nenv.yaml\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 2.0283203125,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.6.0\n    hooks:\n      - id: end-of-file-fixer\n      - id: debug-statements\n  - repo: https://github.com/MarcoGorelli/absolufy-imports\n    rev: v0.3.1\n    hooks:\n      - id: absolufy-imports\n        name: absolufy-imports\n  - repo: https://github.com/pycqa/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n        language_version: python3\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v3.17.0\n    hooks:\n      - id: pyupgrade\n        args:\n          - --py310-plus\n  - repo: https://github.com/psf/black\n    rev: 24.8.0\n    hooks:\n      - id: black\n        language_version: python3\n        args:\n          - --target-version=py310\n  - repo: https://github.com/pycqa/flake8\n    rev: 7.1.1\n    hooks:\n      - id: flake8\n        language_version: python3\n        additional_dependencies:\n          # NOTE: autoupdate does not pick up flake8-bugbear since it is a transitive\n          #  dependency. Make sure to update flake8-bugbear manually on a regular basis.\n          - flake8-bugbear==24.8.19\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n      -   id: codespell\n          types_or: [rst, markdown]\n          files: docs\n          additional_dependencies:\n            - tomli\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    # pinned due to\n    # https://github.com/python/typeshed/pull/9771 and\n    # https://github.com/python/mypy/issues/15257 for DaskCollection.__dask_scheduler__\n    rev: v1.11.2\n    hooks:\n      - id: mypy\n        # Override default --ignore-missing-imports\n        # Use pyproject.toml if possible instead of adding command line parameters here\n        args: [--warn-unused-configs]\n        exclude: dask/dataframe/dask_expr/\n        additional_dependencies:\n          # Type stubs\n          # - pandas-stubs  # TODO\n          - types-docutils\n          - types-PyYAML\n          - types-psutil\n          - types-requests\n          - types-setuptools\n          # Typed libraries\n          - numpy\n          - pytest\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.357421875,
          "content": "# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\nversion: 2\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n\nsphinx:\n  configuration: docs/source/conf.py\n  # Temporarily turning off to get docs build passing\n  # fail_on_warning: true\n\npython:\n  install:\n    - requirements: docs/requirements-docs.txt\n    - method: pip\n      path: .\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.2333984375,
          "content": "Dask is a community maintained project. We welcome contributions in the form of bug reports, documentation, code, design proposals, and more. \n\nFor general information on how to contribute see https://docs.dask.org/en/latest/develop.html.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.4951171875,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2014, Anaconda, Inc. and contributors\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.3173828125,
          "content": "recursive-include dask *.py\nrecursive-include dask *.j2\nrecursive-include docs/source *\ninclude docs/Makefile docs/make.bat\n\ninclude setup.py\ninclude README.rst\ninclude MANIFEST.in\ninclude dask/dask.yaml\ninclude dask/dask-schema.yaml\ninclude dask/py.typed\n\ninclude versioneer.py\ninclude dask/_version.py\n\ninclude conftest.py\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.2607421875,
          "content": "Dask\n====\n\n|Build Status| |Coverage| |Doc Status| |Discourse| |Version Status| |NumFOCUS|\n\nDask is a flexible parallel computing library for analytics.  See\ndocumentation_ for more information.\n\n\nLICENSE\n-------\n\nNew BSD. See `License File <https://github.com/dask/dask/blob/main/LICENSE.txt>`__.\n\n.. _documentation: https://dask.org\n.. |Build Status| image:: https://github.com/dask/dask/actions/workflows/tests.yml/badge.svg\n   :target: https://github.com/dask/dask/actions/workflows/tests.yml\n.. |Coverage| image:: https://codecov.io/gh/dask/dask/branch/main/graph/badge.svg\n   :target: https://codecov.io/gh/dask/dask/branch/main\n   :alt: Coverage status\n.. |Doc Status| image:: https://readthedocs.org/projects/dask/badge/?version=latest\n   :target: https://dask.org\n   :alt: Documentation Status\n.. |Discourse| image:: https://img.shields.io/discourse/users?logo=discourse&server=https%3A%2F%2Fdask.discourse.group\n   :alt: Discuss Dask-related things and ask for help\n   :target: https://dask.discourse.group\n.. |Version Status| image:: https://img.shields.io/pypi/v/dask.svg\n   :target: https://pypi.python.org/pypi/dask/\n.. |NumFOCUS| image:: https://img.shields.io/badge/powered%20by-NumFOCUS-orange.svg?style=flat&colorA=E1523D&colorB=007D8A\n   :target: https://www.numfocus.org/\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.6689453125,
          "content": "codecov:\n  require_ci_to_pass: yes\n  # codecov pushes a failing status update to github actions before all the\n  # test runs have completed (this is later updated to passing after more test\n  # runs pass, but the initial red X is annoying). As far as I can tell from\n  # https://docs.codecov.com/docs/merging-reports this shouldn't be happening,\n  # but it is. Here we set a minimum number of builds before notifying in the\n  # hopes that it will stop this behavior.\n  notify:\n    after_n_builds: 10\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"90...100\"\n\n  status:\n    project:\n      default:\n        target: 90%\n        threshold: 1%\n    patch: no\n    changes: no\n\ncomment: off\n"
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 2.2724609375,
          "content": "from __future__ import annotations\n\nimport pytest\n\npytest.register_assert_rewrite(\n    \"dask.array.utils\", \"dask.dataframe.utils\", \"dask.bag.utils\"\n)\n\n# The doctests in these files fail due to either:\n# - Non-required dependencies not being installed\n# - Imported doctests due to pulling the docstrings from other packages\n#   (e.g. `numpy`). No need to run these doctests.\ncollect_ignore = [\n    \"dask/bytes/hdfs3.py\",\n    \"dask/bytes/pyarrow.py\",\n    \"dask/bytes/s3.py\",\n    \"dask/array/ghost.py\",\n    \"dask/array/fft.py\",\n    \"dask/dataframe/io/io.py\",\n    \"dask/dataframe/io/parquet/arrow.py\",\n    \"dask/dot.py\",\n    \"dask/ml.py\",\n]\n\ncollect_ignore_glob = []\ntry:\n    import numpy  # noqa: F401\nexcept ImportError:\n    collect_ignore_glob.append(\"dask/array/*\")\n\ntry:\n    import pandas  # noqa: F401\nexcept ImportError:\n    collect_ignore_glob.append(\"dask/dataframe/*\")\n\ntry:\n    import scipy  # noqa: F401\nexcept ImportError:\n    collect_ignore.append(\"dask/array/stats.py\")\n\ntry:\n    import pyarrow  # noqa: F401\nexcept ImportError:\n    collect_ignore.append(\"dask/dataframe/io/orc/arrow.py\")\n\ntry:\n    import tiledb  # noqa: F401\nexcept ImportError:\n    collect_ignore.append(\"dask/array/tiledb_io.py\")\n\ntry:\n    import sqlalchemy  # noqa: F401\nexcept ImportError:\n    collect_ignore.append(\"dask/dataframe/io/sql.py\")\n\n\ndef pytest_addoption(parser):\n    parser.addoption(\"--runslow\", action=\"store_true\", help=\"run slow tests\")\n\n\ndef pytest_runtest_setup(item):\n    if \"slow\" in item.keywords and not item.config.getoption(\"--runslow\"):\n        pytest.skip(\"need --runslow option to run\")\n\n\ndef pytest_assertrepr_compare(op, left, right):\n    import difflib\n\n    from dask._task_spec import Task\n\n    if isinstance(left, Task) and isinstance(right, Task):\n\n        def _get_attrs(node):\n            return (\n                [\n                    str(node.func),\n                ]\n                + sorted([str(a) for a in node.args])\n                + sorted([f\"{k}: {v}\" for k, v in node.kwargs.items()])\n            )\n\n        diff = list(\n            difflib.ndiff(\n                _get_attrs(left),\n                _get_attrs(right),\n            )\n        )\n        return [\n            \"Comparing two dask graph nodes:\",\n            f\" left: {left.key} right: {right.key}\",\n            \" Diff:\",\n        ] + diff\n"
        },
        {
          "name": "continuous_integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "dask",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 6.533203125,
          "content": "[build-system]\nrequires = [\"setuptools>=62.6\", \"versioneer[toml]==0.29\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"dask\"\ndescription = \"Parallel PyData with Task Scheduling\"\nmaintainers = [{name = \"Matthew Rocklin\", email = \"mrocklin@gmail.com\"}]\nlicense = {text = \"BSD-3-Clause\"}\nkeywords = [\"task-scheduling parallel numpy pandas pydata\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: Science/Research\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Topic :: Scientific/Engineering\",\n    \"Topic :: System :: Distributed Computing\",\n]\nreadme = \"README.rst\"\nurls = {Homepage = \"https://github.com/dask/dask/\"}\nrequires-python = \">=3.10\"\ndependencies = [\n    # NOTE: These are tested in `continuous_integration/test_imports.sh` If\n    # you modify these, make sure to change the corresponding line there.\n    \"click >= 8.1\",\n    \"cloudpickle >= 3.0.0\",\n    \"fsspec >= 2021.09.0\",\n    \"packaging >= 20.0\",\n    \"partd >= 1.4.0\",\n    \"pyyaml >= 5.3.1\",\n    \"toolz >= 0.10.0\",\n    # importlib.metadata has the following bugs fixed in 3.10.9 and 3.11.1\n    # https://github.com/python/cpython/issues/99130\n    # https://github.com/python/cpython/issues/98706\n    \"importlib_metadata >= 4.13.0; python_version < '3.12' \",\n]\ndynamic = [\"version\"]\n\n[project.optional-dependencies]\n# NOTE: These are tested in `continuous_integration/test_imports.sh` If\n# you modify these, make sure to change the corresponding line there.\narray = [\"numpy >= 1.24\"]\n# keeping for backwards compatibility\nbag = []\ndataframe = [\n    \"dask[array]\",\n    \"pandas >= 2.0\",\n    \"pyarrow>=14.0.1\",\n]\ndistributed = [\"distributed == 2024.12.1\"]\ndiagnostics = [\n    \"bokeh >= 3.1.0\",\n    \"jinja2 >= 2.10.3\",\n]\n# keeping for backwards compatibility\ndelayed = []\ncomplete = [\n    \"dask[array,dataframe,distributed,diagnostics]\",\n    \"pyarrow >= 14.0.1\",\n    \"lz4 >= 4.3.2\",\n]\ntest = [\n    \"pandas[test]\",\n    \"pytest\",\n    \"pytest-cov\",\n    \"pytest-mock\",\n    \"pytest-rerunfailures\",\n    \"pytest-timeout\",\n    \"pytest-xdist\",\n    \"pre-commit\",\n]\n\n[project.entry-points.\"dask.array.backends\"]\ncupy = \"dask.array.cupy_entry_point:CupyBackendEntrypoint\"\n\n[project.scripts]\ndask = \"dask.__main__:main\"\n\n[tool.setuptools]\ninclude-package-data = true\nzip-safe = false\nlicense-files = [\n    \"LICENSE.txt\",\n    \"dask/array/NUMPY_LICENSE.txt\",\n]\n\n[tool.setuptools.packages]\nfind = {namespaces = false}\n\n[tool.setuptools.package-data]\ndask = [\"py.typed\"]\n\n[tool.isort]\nsections = [\"FUTURE\", \"STDLIB\", \"THIRDPARTY\", \"DISTRIBUTED\", \"FIRSTPARTY\", \"LOCALFOLDER\"]\nprofile = \"black\"\nskip_gitignore = true\nforce_to_top = [\"true\"]\ndefault_section = \"THIRDPARTY\"\nknown_first_party = [\"dask\"]\nknown_distributed = [\"distributed\"]\nadd_imports = [\"from __future__ import annotations\"]\n\n[tool.versioneer]\nVCS = \"git\"\nstyle = \"pep440\"\nversionfile_source = \"dask/_version.py\"\nversionfile_build = \"dask/_version.py\"\ntag_prefix = \"\"\nparentdir_prefix = \"dask-\"\n\n[tool.pytest.ini_options]\nmarkers = [\n    \"network: Test requires an internet connection\",\n    \"slow: Skipped unless --runslow passed\",\n    \"gpu: marks tests we want to run on GPUs\",\n    \"skip_with_pyarrow_strings: Tests that should be skipped when pyarrow string conversion is turned on\",\n    \"xfail_with_pyarrow_strings: Tests that should be xfailed when pyarrow string conversion is turned on\",\n]\naddopts = \"-v -rsfE --durations=10 --color=yes --cov-config=pyproject.toml\"\nfilterwarnings = [\n    \"error:::dask[.*]\",\n    \"error:::pandas[.*]\",\n    \"error:::numpy[.*]\",\n    \"error:::distributed[.*]\",\n    # From https://github.com/numpy/numpy/issues/20225\n    'ignore:The distutils\\.sysconfig module is deprecated, use sysconfig instead:DeprecationWarning:numpy',\n    # With no network access, distributed raises a warning when detecting local IP address\n    \"ignore:Couldn't detect a suitable IP address:RuntimeWarning:distributed\",\n    # Ignore FutureWarning for change in group_keys behavior: no changes required on the dask side.\n    # https://pandas.pydata.org/docs/dev/whatsnew/v1.5.0.html#using-group-keys-with-transformers-in-groupby-apply\n    \"ignore:Not prepending group keys:FutureWarning\",\n    \"ignore:.*:dask.tests.warning_aliases.RemovedIn20Warning\",\n    \"ignore:When grouping with a length-1 list-like, you will need to pass a length-1 tuple to get_group in a future version of pandas:FutureWarning\",\n    'ignore:Passing a BlockManager to DataFrame is deprecated and will raise in a future version. Use public APIs instead:DeprecationWarning',  # https://github.com/apache/arrow/issues/35081\n    'ignore:The previous implementation of stack is deprecated and will be removed in a future version of pandas\\.:FutureWarning',\n    \"ignore:distutils Version classes are deprecated. Use packaging.version instead.:DeprecationWarning\",\n]\nxfail_strict = true\n# pytest-timeout settings\n# 'thread' kills off the whole test suite. 'signal' only kills the offending test.\n# However, 'signal' doesn't work on Windows (due to lack of SIGALRM).\n# The CI script modifies this config file on the fly on Linux and MacOS.\ntimeout_method = \"thread\"\n# This should not be reduced; Windows CI has been observed to be occasionally\n# exceptionally slow.\ntimeout = 300\n\n[tool.mypy]\n# Silence errors about Python 3.9-style delayed type annotations on Python 3.8\npython_version = \"3.10\"\n# See https://github.com/python/mypy/issues/12286 for automatic multi-platform support\nplatform = \"linux\"\n# platform = win32\n# platform = darwin\nplugins = [\"numpy.typing.mypy_plugin\"]\ndisallow_untyped_decorators = true\nignore_missing_imports = true\nno_implicit_optional = true\nshow_error_codes = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\nwarn_unreachable = true\nexclude = \"dask/dataframe/dask_expr/\"\n\n[[tool.mypy.overrides]]\n\n# Recent or recently overhauled modules featuring stricter validation\nmodule = [\n    \"dask.order\",\n]\ndisallow_untyped_defs = true\n\n[tool.codespell]\nignore-words-list = \"coo,nd,medias\"\nskip = \"docs/source/changelog.rst\"\n\n[tool.coverage.run]\nomit = [\n    \"*/test_*.py\",\n    \"dask/_version.py\",\n]\nsource = [\"dask\"]\n\n[tool.coverage.report]\n# Regexes for lines to exclude from consideration\nexclude_lines = [\n    \"pragma: no cover\",\n    \"raise AssertionError\",\n    \"raise NotImplementedError\",\n]\nignore_errors = true\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.189453125,
          "content": "#!/usr/bin/env python\n\nfrom __future__ import annotations\n\nimport versioneer\nfrom setuptools import setup\n\nsetup(\n    version=versioneer.get_version(),\n    cmdclass=versioneer.get_cmdclass(),\n)\n"
        }
      ]
    }
  ]
}