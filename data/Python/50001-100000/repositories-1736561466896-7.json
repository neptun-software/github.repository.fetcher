{
  "metadata": {
    "timestamp": 1736561466896,
    "page": 7,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tensorflow/models",
      "stars": 77295,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.078125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# mypy\n.mypy_cache\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n\n# PyCharm\n.idea/\n\n# For mac\n.DS_Store\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.3291015625,
          "content": "# This is the official list of authors for copyright purposes.\n# This file is distinct from the CONTRIBUTORS files.\n# See the latter for an explanation.\n\n# Names should be added to this file as:\n# Name or Organization <email address>\n# The email address is not required for organizations.\n\nGoogle Inc.\nDavid Dao <daviddao@broad.mit.edu>\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 1.189453125,
          "content": "* @tensorflow/tf-model-garden-team\n/official/ @rachellj218\n/official/nlp/ @lehougoogle @rachellj218\n/official/recommendation/ranking/ @gagika\n/official/vision/ @yeqingli @arashwan @rachellj218\n/official/vision/projects/assemblenet/ @yeqingli\n/official/vision/projects/deepmac_maskrcnn/ @vighneshbirodkar\n/official/vision/projects/movinet/ @hyperparticle @yuanliangzhe @yeqingli\n/official/vision/projects/simclr/ @luotigerlsx @saxenasaurabh\n/official/vision/projects/video_ssl/ @yeqingli\n/research/adversarial_text/ @rsepassi @a-dai\n/research/attention_ocr/ @xavigibert\n/research/audioset/ @plakal @dpwe\n/research/autoaugment/ @barretzoph\n/research/cognitive_planning/ @s-gupta\n/research/cvt_text/ @clarkkev @lmthang\n/research/deep_speech/ @yhliang2018\n/research/deeplab/ @aquariusjay @yknzhu\n/research/delf/ @andrefaraujo\n/research/efficient-hrl/ @ofirnachum\n/research/lfads/ @jazcollins @sussillo\n/research/lstm_object_detection/ @yinxiaoli @yongzhe2160\n/research/marco/ @vincentvanhoucke\n/research/object_detection/ @jch1 @tombstone @pkulzc\n/research/pcl_rl/ @ofirnachum\n/research/rebar/ @gjtucker\n/research/seq_flow_lite/ @thunderfyc @karunreddy30\n/research/slim/ @sguada @marksandler2\n/research/vid2depth/ @rezama\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.283203125,
          "content": "# TensorFlow-models Code of Conduct\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of\nexperience, nationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n*   Using welcoming and inclusive language.\n*   Being respectful of differing viewpoints and experiences.\n*   Gracefully accepting constructive criticism.\n*   Focusing on what is best for the community.\n*   Showing empathy towards other community members.\n\nExamples of unacceptable behavior by participants include:\n\n*   The use of sexualized language or imagery and unwelcome sexual attention or\n    advances.\n*   Trolling, insulting/derogatory comments, and personal or political attacks.\n*   Public or private harassment.\n*   Publishing others' private information, such as a physical or electronic\n    address, without explicit permission.\n*   Conduct which could reasonably be considered inappropriate for the forum in\n    which it occurs.\n\nAll TensorFlow-models forums and spaces are meant for professional interactions, and any behavior which could reasonably be considered inappropriate in a professional setting is unacceptable.\n\nå\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n\n## Scope\n\nThis Code of Conduct applies to all content on tensorflow.org, TensorFlow-models GitHub organization, or any other official TensorFlow-models web presence allowing for community interactions, as well as at all official TensorFlow-models events, whether offline or online.\n\nThe Code of Conduct also applies within project spaces and in public spaces whenever an individual is representing TensorFlow-models or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed or de facto representative at an online or offline event. \n\n\n## Conflict Resolution\n\nConflicts in an open source project can take many forms, from someone having a bad day and using harsh and hurtful language in the issue queue, to more serious instances such as sexist/racist statements or threats of violence, and everything in between.\n\nIf the behavior is threatening or harassing, or for other reasons requires immediate escalation, please see below.\n\nHowever, for the vast majority of issues, we aim to empower individuals to first resolve conflicts themselves, asking for help when needed, and only after that fails to escalate further. This approach gives people more control over the outcome of their dispute. \n\nIf you are experiencing or witnessing conflict, we ask you to use the following escalation strategy to address the conflict:\n\n1.  Address the perceived conflict directly with those involved, preferably in a\n    real-time medium.\n2.  If this fails, get a third party (e.g. a mutual friend, and/or someone with\n    background on the issue, but not involved in the conflict) to intercede.\n3.  If you are still unable to resolve the conflict, and you believe it rises to\n    harassment or another code of conduct violation, report it.\n\n## Reporting Violations\n\nViolations of the Code of Conduct can be reported to TensorFlow’s Project Stewards, Thea Lamkin (thealamkin@google.com) and Joana Carrasqueira (joanafilipa@google.com). The Project Steward will determine whether the Code of Conduct was violated, and will issue an appropriate sanction, possibly including a written warning or expulsion from the project, project sponsored spaces, or project forums. We ask that you make a good-faith effort to resolve your conflict via the conflict resolution policy before submitting a report.\n\nViolations of the Code of Conduct can occur in any setting, even those unrelated to the project. We will only consider complaints about conduct that has occurred within one year of the report.\n\n\n## Enforcement\n\nIf the Project Stewards receive a report alleging a violation of the Code of Conduct, the Project Stewards will notify the accused of the report, and provide them an opportunity to discuss the report before a sanction is issued. The Project Stewards will do their utmost to keep the reporter anonymous. If the act is ongoing (such as someone engaging in harassment), or involves a threat to anyone's safety (e.g. threats of violence), the Project Stewards may issue sanctions without notice.\n\n\n## Attribution\n\nThis Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://contributor-covenant.org/version/1/4, and includes some aspects of the Geek Feminism Code of Conduct and the Drupal Code of Conduct.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.380859375,
          "content": "# How to contribute\n\n![Contributors](https://img.shields.io/github/contributors/tensorflow/models)\n\nWe encourage you to contribute to the TensorFlow Model Garden.\n\nPlease read our [guidelines](../../wiki/How-to-contribute) for details.\n\n**NOTE**: Only [code owners](./CODEOWNERS) are allowed to merge a pull request.\nPlease contact the code owners of each model to merge your pull request.\n"
        },
        {
          "name": "ISSUES.md",
          "type": "blob",
          "size": 1.0888671875,
          "content": "# If you open a GitHub issue, here is our policy.\n\n* It must be a **bug**, a **feature request**, or a significant problem\nwith **documentation**.\n  * Please send a pull request instead for small documentation fixes.\n* The required form must be filled out.\n* The issue should be related to the repository it is created in.\n\nGeneral help and support should be sought on [Stack Overflow](https://stackoverflow.com/questions/tagged/tensorflow-model-garden) or other non-GitHub channels.\n\n[![](https://img.shields.io/stackexchange/stackoverflow/t/tensorflow-model-garden)](https://stackoverflow.com/questions/tagged/tensorflow-model-garden)\n\nTensorFlow developers respond to issues.\nWe want to focus on work that benefits the whole community such as fixing bugs\nand adding new features.\nIt helps us to address bugs and feature requests in a timely manner.\n\n--- \n\nPlease understand that research models in the [research directory](https://github.com/tensorflow/models/tree/master/research)\nincluded in this repository are experimental and research-style code.\nThey are not officially supported by the TensorFlow team.\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.2421875,
          "content": "Copyright 2022 Google LLC. All rights reserved.\n\nAll files in the following folders:\n/community\n/official\n/orbit\n/research\n/tensorflow_models\n\nAre licensed as follows:\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016, The Authors.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8212890625,
          "content": "<div align=\"center\">\n  <img src=\"https://storage.googleapis.com/tf_model_garden/tf_model_garden_logo.png\">\n</div>\n\n[![Python](https://img.shields.io/pypi/pyversions/tensorflow.svg?style=plastic)](https://badge.fury.io/py/tensorflow)\n[![tf-models-official PyPI](https://badge.fury.io/py/tf-models-official.svg)](https://badge.fury.io/py/tf-models-official)\n\n\n# Welcome to the Model Garden for TensorFlow\n\nThe TensorFlow Model Garden is a repository with a number of different\nimplementations of state-of-the-art (SOTA) models and modeling solutions for\nTensorFlow users. We aim to demonstrate the best practices for modeling so that\nTensorFlow users can take full advantage of TensorFlow for their research and\nproduct development.\n\nTo improve the transparency and reproducibility of our models, training logs on\n[TensorBoard.dev](https://tensorboard.dev) are also provided for models to the\nextent possible though not all models are suitable.\n\n| Directory | Description |\n|-----------|-------------|\n| [official](official) | • A collection of example implementations for SOTA models using the latest TensorFlow 2's high-level APIs<br />• Officially maintained, supported, and kept up to date with the latest TensorFlow 2 APIs by TensorFlow<br />• Reasonably optimized for fast performance while still being easy to read<br /> For more details on the capabilities, check the guide on the [Model-garden](https://www.tensorflow.org/tfmodels)|\n| [research](research) | • A collection of research model implementations in TensorFlow 1 or 2 by researchers<br />• Maintained and supported by researchers |\n| [community](community) | • A curated list of the GitHub repositories with machine learning models and implementations powered by TensorFlow 2 |\n| [orbit](orbit) | • A flexible and lightweight library that users can easily use or fork when writing customized training loop code in TensorFlow 2.x. It seamlessly integrates with `tf.distribute` and supports running on different device types (CPU, GPU, and TPU). |\n\n## Installation\n\nTo install the current release of tensorflow-models, please follow any one of the methods described below.\n\n#### Method 1: Install the TensorFlow Model Garden pip package\n\n<details>\n\n**tf-models-official** is the stable Model Garden package. Please check out the [releases](https://github.com/tensorflow/models/releases) to see what are available modules.\n\npip3 will install all models and dependencies automatically.\n\n```shell\npip3 install tf-models-official\n```\n\nPlease check out our examples:\n  - [basic library import](https://github.com/tensorflow/models/blob/master/tensorflow_models/tensorflow_models_pypi.ipynb)\n  - [nlp model building](https://github.com/tensorflow/models/blob/master/docs/nlp/index.ipynb)\nto learn how to use a PIP package.\n\nNote that **tf-models-official** may not include the latest changes in the master branch of this\ngithub repo. To include latest changes, you may install **tf-models-nightly**,\nwhich is the nightly Model Garden package created daily automatically.\n\n```shell\npip3 install tf-models-nightly\n```\n\n</details>\n\n\n#### Method 2: Clone the source\n\n<details>\n\n1. Clone the GitHub repository:\n\n```shell\ngit clone https://github.com/tensorflow/models.git\n```\n\n2. Add the top-level ***/models*** folder to the Python path.\n\n```shell\nexport PYTHONPATH=$PYTHONPATH:/path/to/models\n```\n\nIf you are using in a Windows environment, you may need to use the following command with PowerShell:\n```shell\n$env:PYTHONPATH += \":\\path\\to\\models\"\n```\n\nIf you are using a Colab notebook, please set the Python path with os.environ.\n\n```python\nimport os\nos.environ['PYTHONPATH'] += \":/path/to/models\"\n```\n\n3. Install other dependencies\n\n```shell\npip3 install --user -r models/official/requirements.txt\n```\n\nFinally, if you are using nlp packages, please also install\n**tensorflow-text-nightly**:\n\n```shell\npip3 install tensorflow-text-nightly\n```\n\n</details>\n\n\n## Announcements\n\nPlease check [this page](https://github.com/tensorflow/models/wiki/Announcements) for recent announcements.\n\n## Contributions\n\n[![help wanted:paper implementation](https://img.shields.io/github/issues/tensorflow/models/help%20wanted%3Apaper%20implementation)](https://github.com/tensorflow/models/labels/help%20wanted%3Apaper%20implementation)\n\nIf you want to contribute, please review the [contribution guidelines](https://github.com/tensorflow/models/wiki/How-to-contribute).\n\n## License\n\n[Apache License 2.0](LICENSE)\n\n## Citing TensorFlow Model Garden\n\nIf you use TensorFlow Model Garden in your research, please cite this repository.\n\n```\n@misc{tensorflowmodelgarden2020,\n  author = {Hongkun Yu and Chen Chen and Xianzhi Du and Yeqing Li and Abdullah Rashwan and Le Hou and Pengchong Jin and Fan Yang\n            and Frederick Liu and Jaeyoun Kim and Jing Li},\n  title = {{TensorFlow Model Garden}},\n  howpublished = {\\url{https://github.com/tensorflow/models}},\n  year = {2020}\n}\n```\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 13.119140625,
          "content": "# Using TensorFlow Securely\n\nThis document discusses how to safely deal with untrusted programs (models or\nmodel parameters), and input data. Below, we also provide guidelines on how to\nreport vulnerabilities in TensorFlow.\n\n## TensorFlow models are programs\n\nTensorFlow's runtime system interprets and executes programs. What machine\nlearning practitioners term\n[**models**](https://developers.google.com/machine-learning/glossary/#model) are\nexpressed as programs that TensorFlow executes.  TensorFlow programs are encoded\nas computation\n[**graphs**](https://developers.google.com/machine-learning/glossary/#graph).\nThe model's parameters are often stored separately in **checkpoints**.\n\nAt runtime, TensorFlow executes the computation graph using the parameters\nprovided. Note that the behavior of the computation graph may change\ndepending on the parameters provided. TensorFlow itself is not a sandbox. When\nexecuting the computation graph, TensorFlow may read and write files, send and\nreceive data over the network, and even spawn additional processes. All these\ntasks are performed with the permissions of the TensorFlow process. Allowing\nfor this flexibility makes for a powerful machine learning platform,\nbut it has implications for security.\n\nThe computation graph may also accept **inputs**. Those inputs are the\ndata you supply to TensorFlow to train a model, or to use a model to run\ninference on the data.\n\n**TensorFlow models are programs, and need to be treated as such from a security\nperspective.**\n\n## Running untrusted models\n\nAs a general rule: **Always** execute untrusted models inside a sandbox (e.g.,\n[nsjail](https://github.com/google/nsjail)).\n\nThere are several ways in which a model could become untrusted. Obviously, if an\nuntrusted party supplies TensorFlow kernels, arbitrary code may be executed.\nThe same is true if the untrusted party provides Python code, such as the\nPython code that generates TensorFlow graphs.\n\nEven if the untrusted party only supplies the serialized computation\ngraph (in form of a `GraphDef`, `SavedModel`, or equivalent on-disk format), the\nset of computation primitives available to TensorFlow is powerful enough that\nyou should assume that the TensorFlow process effectively executes arbitrary\ncode. One common solution is to allow only a few safe Ops. While this is\npossible in theory, we still recommend you sandbox the execution.\n\nIt depends on the computation graph whether a user provided checkpoint is safe.\nIt is easily possible to create computation graphs in which malicious\ncheckpoints can trigger unsafe behavior. For example, consider a graph that\ncontains a `tf.cond` depending on the value of a `tf.Variable`. One branch of\nthe `tf.cond` is harmless, but the other is unsafe. Since the `tf.Variable` is\nstored in the checkpoint, whoever provides the checkpoint now has the ability to\ntrigger unsafe behavior, even though the graph is not under their control.\n\nIn other words, graphs can contain vulnerabilities of their own. To allow users\nto provide checkpoints to a model you run on their behalf (e.g., in order to\ncompare model quality for a fixed model architecture), you must carefully audit\nyour model, and we recommend you run the TensorFlow process in a sandbox.\n\n## Accepting untrusted Inputs\n\nIt is possible to write models that are secure in a sense that they can safely\nprocess untrusted inputs assuming there are no bugs. There are two main reasons\nto not rely on this: First, it is easy to write models which must not be exposed\nto untrusted inputs, and second, there are bugs in any software system of\nsufficient complexity. Letting users control inputs could allow them to trigger\nbugs either in TensorFlow or in dependent libraries.\n\nIn general, it is good practice to isolate parts of any system which is exposed\nto untrusted (e.g., user-provided) inputs in a sandbox.\n\nA useful analogy to how any TensorFlow graph is executed is any interpreted\nprogramming language, such as Python. While it is possible to write secure\nPython code which can be exposed to user supplied inputs (by, e.g., carefully\nquoting and sanitizing input strings, size-checking input blobs, etc.), it is\nvery easy to write Python programs which are insecure. Even secure Python code\ncould be rendered insecure by a bug in the Python interpreter, or in a bug in a\nPython library used (e.g.,\n[this one](https://www.cvedetails.com/cve/CVE-2017-12852/)).\n\n## Running a TensorFlow server\n\nTensorFlow is a platform for distributed computing, and as such there is a\nTensorFlow server (`tf.train.Server`). **The TensorFlow server is meant for\ninternal communication only. It is not built for use in an untrusted network.**\n\nFor performance reasons, the default TensorFlow server does not include any\nauthorization protocol and sends messages unencrypted. It accepts connections\nfrom anywhere, and executes the graphs it is sent without performing any checks.\nTherefore, if you run a `tf.train.Server` in your network, anybody with\naccess to the network can execute what you should consider arbitrary code with\nthe privileges of the process running the `tf.train.Server`.\n\nWhen running distributed TensorFlow, you must isolate the network in which the\ncluster lives. Cloud providers provide instructions for setting up isolated\nnetworks, which are sometimes branded as \"virtual private cloud.\" Refer to the\ninstructions for\n[GCP](https://cloud.google.com/compute/docs/networks-and-firewalls) and\n[AWS](https://aws.amazon.com/vpc/)) for details.\n\nNote that `tf.train.Server` is different from the server created by\n`tensorflow/serving` (the default binary for which is called `ModelServer`).\nBy default, `ModelServer` also has no built-in mechanism for authentication.\nConnecting it to an untrusted network allows anyone on this network to run the\ngraphs known to the `ModelServer`. This means that an attacker may run\ngraphs using untrusted inputs as described above, but they would not be able to\nexecute arbitrary graphs. It is possible to safely expose a `ModelServer`\ndirectly to an untrusted network, **but only if the graphs it is configured to\nuse have been carefully audited to be safe**.\n\nSimilar to best practices for other servers, we recommend running any\n`ModelServer` with appropriate privileges (i.e., using a separate user with\nreduced permissions). In the spirit of defense in depth, we recommend\nauthenticating requests to any TensorFlow server connected to an untrusted\nnetwork, as well as sandboxing the server to minimize the adverse effects of\nany breach.\n\n## Vulnerabilities in TensorFlow\n\nTensorFlow is a large and complex system. It also depends on a large set of\nthird party libraries (e.g., `numpy`, `libjpeg-turbo`, PNG parsers, `protobuf`).\nIt is possible that TensorFlow or its dependent libraries contain\nvulnerabilities that would allow triggering unexpected or dangerous behavior\nwith specially crafted inputs.\n\n### What is a vulnerability?\n\nGiven TensorFlow's flexibility, it is possible to specify computation graphs\nwhich exhibit unexpected or unwanted behavior. The fact that TensorFlow models\ncan perform arbitrary computations means that they may read and write files,\ncommunicate via the network, produce deadlocks and infinite loops, or run out\nof memory. It is only when these behaviors are outside the specifications of the\noperations involved that such behavior is a vulnerability.\n\nA `FileWriter` writing a file is not unexpected behavior and therefore is not a\nvulnerability in TensorFlow. A `MatMul` allowing arbitrary binary code execution\n**is** a vulnerability.\n\nThis is more subtle from a system perspective. For example, it is easy to cause\na TensorFlow process to try to allocate more memory than available by specifying\na computation graph containing an ill-considered `tf.tile` operation. TensorFlow\nshould exit cleanly in this case (it would raise an exception in Python, or\nreturn an error `Status` in C++). However, if the surrounding system is not\nexpecting the possibility, such behavior could be used in a denial of service\nattack (or worse). Because TensorFlow behaves correctly, this is not a\nvulnerability in TensorFlow (although it would be a vulnerability of this\nhypothetical system).\n\nAs a general rule, it is incorrect behavior for TensorFlow to access memory it\ndoes not own, or to terminate in an unclean way. Bugs in TensorFlow that lead to\nsuch behaviors constitute a vulnerability.\n\nOne of the most critical parts of any system is input handling. If malicious\ninput can trigger side effects or incorrect behavior, this is a bug, and likely\na vulnerability.\n\n### Reporting vulnerabilities\n\nPlease email reports about any security related issues you find to\n`security@tensorflow.org`. This mail is delivered to a small security team. Your\nemail will be acknowledged within one business day, and you'll receive a more\ndetailed response to your email within 7 days indicating the next steps in\nhandling your report. For critical problems, you may encrypt your report (see\nbelow).\n\nPlease use a descriptive subject line for your report email. After the initial\nreply to your report, the security team will endeavor to keep you informed of\nthe progress being made towards a fix and announcement.\n\nIn addition, please include the following information along with your report:\n\n* Your name and affiliation (if any).\n* A description of the technical details of the vulnerabilities. It is very\n  important to let us know how we can reproduce your findings.\n* An explanation who can exploit this vulnerability, and what they gain when\n  doing so -- write an attack scenario. This will help us evaluate your report\n  quickly, especially if the issue is complex.\n* Whether this vulnerability public or known to third parties. If it is, please\n  provide details.\n\nIf you believe that an existing (public) issue is security-related, please send\nan email to `security@tensorflow.org`. The email should include the issue ID and\na short description of why it should be handled according to this security\npolicy.\n\nOnce an issue is reported, TensorFlow uses the following disclosure process:\n\n* When a report is received, we confirm the issue and determine its severity.\n* If we know of specific third-party services or software based on TensorFlow\n  that require mitigation before publication, those projects will be notified.\n* An advisory is prepared (but not published) which details the problem and\n  steps for mitigation.\n* The vulnerability is fixed and potential workarounds are identified.\n* Wherever possible, the fix is also prepared for the branches corresponding to\n  all releases of TensorFlow at most one year old. We will attempt to commit\n  these fixes as soon as possible, and as close together as possible.\n* Patch releases are published for all fixed released versions, a\n  notification is sent to discuss@tensorflow.org, and the advisory is published.\n\nNote that we mostly do patch releases for security reasons and each version of\nTensorFlow is supported for only 1 year after the release.\n\nPast security advisories are listed below. We credit reporters for identifying\nsecurity issues, although we keep your name confidential if you request it.\n\n#### Encryption key for `security@tensorflow.org`\n\nIf your disclosure is extremely sensitive, you may choose to encrypt your\nreport using the key below. Please only use this for critical security\nreports.\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\n\nmQENBFpqdzwBCADTeAHLNEe9Vm77AxhmGP+CdjlY84O6DouOCDSq00zFYdIU/7aI\nLjYwhEmDEvLnRCYeFGdIHVtW9YrVktqYE9HXVQC7nULU6U6cvkQbwHCdrjaDaylP\naJUXkNrrxibhx9YYdy465CfusAaZ0aM+T9DpcZg98SmsSml/HAiiY4mbg/yNVdPs\nSEp/Ui4zdIBNNs6at2gGZrd4qWhdM0MqGJlehqdeUKRICE/mdedXwsWLM8AfEA0e\nOeTVhZ+EtYCypiF4fVl/NsqJ/zhBJpCx/1FBI1Uf/lu2TE4eOS1FgmIqb2j4T+jY\ne+4C8kGB405PAC0n50YpOrOs6k7fiQDjYmbNABEBAAG0LVRlbnNvckZsb3cgU2Vj\ndXJpdHkgPHNlY3VyaXR5QHRlbnNvcmZsb3cub3JnPokBTgQTAQgAOBYhBEkvXzHm\ngOJBnwP4Wxnef3wVoM2yBQJaanc8AhsDBQsJCAcCBhUKCQgLAgQWAgMBAh4BAheA\nAAoJEBnef3wVoM2yNlkIAICqetv33MD9W6mPAXH3eon+KJoeHQHYOuwWfYkUF6CC\no+X2dlPqBSqMG3bFuTrrcwjr9w1V8HkNuzzOJvCm1CJVKaxMzPuXhBq5+DeT67+a\nT/wK1L2R1bF0gs7Pp40W3np8iAFEh8sgqtxXvLGJLGDZ1Lnfdprg3HciqaVAiTum\nHBFwszszZZ1wAnKJs5KVteFN7GSSng3qBcj0E0ql2nPGEqCVh+6RG/TU5C8gEsEf\n3DX768M4okmFDKTzLNBm+l08kkBFt+P43rNK8dyC4PXk7yJa93SmS/dlK6DZ16Yw\n2FS1StiZSVqygTW59rM5XNwdhKVXy2mf/RtNSr84gSi5AQ0EWmp3PAEIALInfBLR\nN6fAUGPFj+K3za3PeD0fWDijlC9f4Ety/icwWPkOBdYVBn0atzI21thPRbfuUxfe\nzr76xNNrtRRlbDSAChA1J5T86EflowcQor8dNC6fS+oHFCGeUjfEAm16P6mGTo0p\nosdG2XnnTHOOEFbEUeWOwR/zT0QRaGGknoy2pc4doWcJptqJIdTl1K8xyBieik/b\nnSoClqQdZJa4XA3H9G+F4NmoZGEguC5GGb2P9NHYAJ3MLHBHywZip8g9oojIwda+\nOCLL4UPEZ89cl0EyhXM0nIAmGn3Chdjfu3ebF0SeuToGN8E1goUs3qSE77ZdzIsR\nBzZSDFrgmZH+uP0AEQEAAYkBNgQYAQgAIBYhBEkvXzHmgOJBnwP4Wxnef3wVoM2y\nBQJaanc8AhsMAAoJEBnef3wVoM2yX4wIALcYZbQhSEzCsTl56UHofze6C3QuFQIH\nJ4MIKrkTfwiHlCujv7GASGU2Vtis5YEyOoMidUVLlwnebE388MmaJYRm0fhYq6lP\nA3vnOCcczy1tbo846bRdv012zdUA+wY+mOITdOoUjAhYulUR0kiA2UdLSfYzbWwy\n7Obq96Jb/cPRxk8jKUu2rqC/KDrkFDtAtjdIHh6nbbQhFuaRuWntISZgpIJxd8Bt\nGwi0imUVd9m9wZGuTbDGi6YTNk0GPpX5OMF5hjtM/objzTihSw9UN+65Y/oSQM81\nv//Fw6ZeY+HmRDFdirjD7wXtIuER4vqCryIqR6Xe9X8oJXz9L/Jhslc=\n=CDME\n-----END PGP PUBLIC KEY BLOCK-----\n```\n\n### Known Vulnerabilities\n\nAt this time there are no known vulnerability with TensorFlow-models. For a list of known vulnerabilities and security advisories for TensorFlow,\n[click here](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/security/README.md).\n"
        },
        {
          "name": "community",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "official",
          "type": "tree",
          "content": null
        },
        {
          "name": "orbit",
          "type": "tree",
          "content": null
        },
        {
          "name": "research",
          "type": "tree",
          "content": null
        },
        {
          "name": "tensorflow_models",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}