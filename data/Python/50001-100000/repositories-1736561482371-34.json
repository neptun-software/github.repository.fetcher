{
  "metadata": {
    "timestamp": 1736561482371,
    "page": 34,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "scrapy/scrapy",
      "stars": 53749,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.3134765625,
          "content": "# .git-blame-ignore-revs\n# adding black formatter to all the code\ne211ec0aa26ecae0da8ae55d064ea60e1efe4d0d\n# reapplying black to the code with default line length\n303f0a70fcf8067adf0a909c2096a5009162383a\n# reapplying black again and removing line length on pre-commit black config\nc5cdd0d30ceb68ccba04af0e71d1b8e6678e2962"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.02734375,
          "content": "tests/sample_data/** binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2900390625,
          "content": "/.vagrant\n/scrapy.iml\n*.pyc\n_trial_temp*\ndropin.cache\ndocs/build\n*egg-info\n.tox\nvenv\nbuild\ndist\n.idea\nhtmlcov/\n.coverage\n.pytest_cache/\n.coverage.*\ncoverage.*\ntest-output.*\n.cache/\n.mypy_cache/\n/tests/keys/localhost.crt\n/tests/keys/localhost.key\n\n# Windows\nThumbs.db\n\n# OSX miscellaneous\n.DS_Store"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.3359375,
          "content": "repos:\n- repo: https://github.com/astral-sh/ruff-pre-commit\n  rev: v0.8.4\n  hooks:\n    - id: ruff\n      args: [ --fix ]\n- repo: https://github.com/psf/black.git\n  rev: 24.10.0\n  hooks:\n  - id: black\n- repo: https://github.com/adamchainz/blacken-docs\n  rev: 1.19.1\n  hooks:\n  - id: blacken-docs\n    additional_dependencies:\n    - black==24.10.0\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.3759765625,
          "content": "version: 2\nformats: all\nsphinx:\n  configuration: docs/conf.py\n  fail_on_warning: true\n\nbuild:\n  os: ubuntu-20.04\n  tools:\n    # For available versions, see:\n    # https://docs.readthedocs.io/en/stable/config-file/v2.html#build-tools-python\n    python: \"3.13\"  # Keep in sync with .github/workflows/checks.yml\n\npython:\n  install:\n    - requirements: docs/requirements.txt\n    - path: .\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.25390625,
          "content": "Scrapy was brought to life by Shane Evans while hacking a scraping framework\nprototype for Mydeco (mydeco.com). It soon became maintained, extended and\nimproved by Insophia (insophia.com), with the initial sponsorship of Mydeco to\nbootstrap the project. In mid-2011, Scrapinghub (now Zyte) became the new\nofficial maintainer.\n\nHere is the list of the primary authors & contributors:\n\n * Pablo Hoffman\n * Daniel Graña\n * Martin Olveyra\n * Gabriel García\n * Michael Cetrulo\n * Artem Bogomyagkov\n * Damian Canabal\n * Andres Moreira\n * Ismael Carnales\n * Matías Aguirre\n * German Hoffmann\n * Anibal Pacheco\n * Bruno Deferrari\n * Shane Evans\n * Ezequiel Rivero\n * Patrick Mezard\n * Rolando Espinoza\n * Ping Yin\n * Lucian Ursu\n * Shuaib Khan\n * Didier Deshommes\n * Vikas Dhiman\n * Jochen Maes\n * Darian Moody\n * Jordi Lonch\n * Zuhao Wan\n * Steven Almeroth\n * Tom Mortimer-Jones\n * Chris Tilden\n * Alexandr N Zamaraev\n * Emanuel Schorsch\n * Michal Danilak\n * Natan Lao\n * Hasnain Lakhani\n * Pedro Faustino\n * Alex Cepoi\n * Ilya Baryshev\n * Libor Nenadál\n * Jae-Myoung Yu\n * Vladislav Poluhin\n * Marc Abramowitz\n * Valentin-Costel Hăloiu\n * Jason Yeo\n * Сергей Прохоров\n * Simon Ratne\n * Julien Duponchelle\n * Jochen Maes\n * Vikas Dhiman\n * Juan Picca\n * Nicolás Ramírez\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3564453125,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nopensource@zyte.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.2958984375,
          "content": "The guidelines for contributing are available here:\nhttps://docs.scrapy.org/en/master/contributing.html\n\nPlease do not abuse the issue tracker for support questions.\nIf your issue topic can be rephrased to \"How to ...?\", please use the\nsupport channels to get it answered: https://scrapy.org/community/\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 0.1513671875,
          "content": "For information about installing Scrapy see:\n\n* [Local docs](docs/intro/install.rst)\n* [Online docs](https://docs.scrapy.org/en/latest/intro/install.html)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4814453125,
          "content": "Copyright (c) Scrapy developers.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice,\n       this list of conditions, and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions, and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    3. Neither the name of Scrapy nor the names of its contributors may be used\n       to endorse or promote products derived from this software without\n       specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.396484375,
          "content": "include CODE_OF_CONDUCT.md\ninclude CONTRIBUTING.md\ninclude INSTALL.md\ninclude NEWS\ninclude SECURITY.md\n\ninclude scrapy/VERSION\ninclude scrapy/mime.types\ninclude scrapy/py.typed\n\ninclude codecov.yml\ninclude conftest.py\ninclude tox.ini\n\nrecursive-include scrapy/templates *\nrecursive-include docs *\nprune docs/build\n\nrecursive-include extras *\nrecursive-include tests *\n\nglobal-exclude __pycache__ *.py[cod]\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 0.017578125,
          "content": "See docs/news.rst\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.0244140625,
          "content": ".. image:: https://scrapy.org/img/scrapylogo.png\n   :target: https://scrapy.org/\n   \n======\nScrapy\n======\n\n.. image:: https://img.shields.io/pypi/v/Scrapy.svg\n   :target: https://pypi.org/pypi/Scrapy\n   :alt: PyPI Version\n\n.. image:: https://img.shields.io/pypi/pyversions/Scrapy.svg\n   :target: https://pypi.org/pypi/Scrapy\n   :alt: Supported Python Versions\n\n.. image:: https://github.com/scrapy/scrapy/workflows/Ubuntu/badge.svg\n   :target: https://github.com/scrapy/scrapy/actions?query=workflow%3AUbuntu\n   :alt: Ubuntu\n\n.. .. image:: https://github.com/scrapy/scrapy/workflows/macOS/badge.svg\n   .. :target: https://github.com/scrapy/scrapy/actions?query=workflow%3AmacOS\n   .. :alt: macOS\n\n\n.. image:: https://github.com/scrapy/scrapy/workflows/Windows/badge.svg\n   :target: https://github.com/scrapy/scrapy/actions?query=workflow%3AWindows\n   :alt: Windows\n\n.. image:: https://img.shields.io/badge/wheel-yes-brightgreen.svg\n   :target: https://pypi.org/pypi/Scrapy\n   :alt: Wheel Status\n\n.. image:: https://img.shields.io/codecov/c/github/scrapy/scrapy/master.svg\n   :target: https://codecov.io/github/scrapy/scrapy?branch=master\n   :alt: Coverage report\n\n.. image:: https://anaconda.org/conda-forge/scrapy/badges/version.svg\n   :target: https://anaconda.org/conda-forge/scrapy\n   :alt: Conda Version\n\n\nOverview\n========\n\nScrapy is a BSD-licensed fast high-level web crawling and web scraping framework, used to\ncrawl websites and extract structured data from their pages. It can be used for\na wide range of purposes, from data mining to monitoring and automated testing.\n\nScrapy is maintained by Zyte_ (formerly Scrapinghub) and `many other\ncontributors`_.\n\n.. _many other contributors: https://github.com/scrapy/scrapy/graphs/contributors\n.. _Zyte: https://www.zyte.com/\n\nCheck the Scrapy homepage at https://scrapy.org for more information,\nincluding a list of features.\n\n\nRequirements\n============\n\n* Python 3.9+\n* Works on Linux, Windows, macOS, BSD\n\nInstall\n=======\n\nThe quick way:\n\n.. code:: bash\n\n    pip install scrapy\n\nSee the install section in the documentation at\nhttps://docs.scrapy.org/en/latest/intro/install.html for more details.\n\nDocumentation\n=============\n\nDocumentation is available online at https://docs.scrapy.org/ and in the ``docs``\ndirectory.\n\nReleases\n========\n\nYou can check https://docs.scrapy.org/en/latest/news.html for the release notes.\n\nCommunity (blog, twitter, mail list, IRC)\n=========================================\n\nSee https://scrapy.org/community/ for details.\n\nContributing\n============\n\nSee https://docs.scrapy.org/en/master/contributing.html for details.\n\nCode of Conduct\n---------------\n\nPlease note that this project is released with a Contributor `Code of Conduct <https://github.com/scrapy/scrapy/blob/master/CODE_OF_CONDUCT.md>`_.\n\nBy participating in this project you agree to abide by its terms.\nPlease report unacceptable behavior to opensource@zyte.com.\n\nCompanies using Scrapy\n======================\n\nSee https://scrapy.org/companies/ for a list.\n\nCommercial Support\n==================\n\nSee https://scrapy.org/support/ for details.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2998046875,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 2.12.x     | :white_check_mark: |\n| < 2.12.x   | :x:                |\n\n## Reporting a Vulnerability\n\nPlease report the vulnerability using https://github.com/scrapy/scrapy/security/advisories/new.\n"
        },
        {
          "name": "artwork",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.078125,
          "content": "comment:\n  layout: \"header, diff, tree\"\n\ncoverage:\n  status:\n    project: false\n"
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 3.111328125,
          "content": "from pathlib import Path\n\nimport pytest\nfrom twisted.web.http import H2_ENABLED\n\nfrom scrapy.utils.reactor import install_reactor\nfrom tests.keys import generate_keys\n\n\ndef _py_files(folder):\n    return (str(p) for p in Path(folder).rglob(\"*.py\"))\n\n\ncollect_ignore = [\n    # not a test, but looks like a test\n    \"scrapy/utils/testsite.py\",\n    \"tests/ftpserver.py\",\n    \"tests/mockserver.py\",\n    \"tests/pipelines.py\",\n    \"tests/spiders.py\",\n    # contains scripts to be run by tests/test_crawler.py::CrawlerProcessSubprocess\n    *_py_files(\"tests/CrawlerProcess\"),\n    # contains scripts to be run by tests/test_crawler.py::CrawlerRunnerSubprocess\n    *_py_files(\"tests/CrawlerRunner\"),\n]\n\nbase_dir = Path(__file__).parent\nignore_file_path = base_dir / \"tests\" / \"ignores.txt\"\nwith ignore_file_path.open(encoding=\"utf-8\") as reader:\n    for line in reader:\n        file_path = line.strip()\n        if file_path and file_path[0] != \"#\":\n            collect_ignore.append(file_path)\n\nif not H2_ENABLED:\n    collect_ignore.extend(\n        (\n            \"scrapy/core/downloader/handlers/http2.py\",\n            *_py_files(\"scrapy/core/http2\"),\n        )\n    )\n\n\n@pytest.fixture()\ndef chdir(tmpdir):\n    \"\"\"Change to pytest-provided temporary directory\"\"\"\n    tmpdir.chdir()\n\n\ndef pytest_addoption(parser):\n    parser.addoption(\n        \"--reactor\",\n        default=\"default\",\n        choices=[\"default\", \"asyncio\"],\n    )\n\n\n@pytest.fixture(scope=\"class\")\ndef reactor_pytest(request):\n    if not request.cls:\n        # doctests\n        return None\n    request.cls.reactor_pytest = request.config.getoption(\"--reactor\")\n    return request.cls.reactor_pytest\n\n\n@pytest.fixture(autouse=True)\ndef only_asyncio(request, reactor_pytest):\n    if request.node.get_closest_marker(\"only_asyncio\") and reactor_pytest != \"asyncio\":\n        pytest.skip(\"This test is only run with --reactor=asyncio\")\n\n\n@pytest.fixture(autouse=True)\ndef only_not_asyncio(request, reactor_pytest):\n    if (\n        request.node.get_closest_marker(\"only_not_asyncio\")\n        and reactor_pytest == \"asyncio\"\n    ):\n        pytest.skip(\"This test is only run without --reactor=asyncio\")\n\n\n@pytest.fixture(autouse=True)\ndef requires_uvloop(request):\n    if not request.node.get_closest_marker(\"requires_uvloop\"):\n        return\n    try:\n        import uvloop\n\n        del uvloop\n    except ImportError:\n        pytest.skip(\"uvloop is not installed\")\n\n\n@pytest.fixture(autouse=True)\ndef requires_botocore(request):\n    if not request.node.get_closest_marker(\"requires_botocore\"):\n        return\n    try:\n        import botocore\n\n        del botocore\n    except ImportError:\n        pytest.skip(\"botocore is not installed\")\n\n\n@pytest.fixture(autouse=True)\ndef requires_boto3(request):\n    if not request.node.get_closest_marker(\"requires_boto3\"):\n        return\n    try:\n        import boto3\n\n        del boto3\n    except ImportError:\n        pytest.skip(\"boto3 is not installed\")\n\n\ndef pytest_configure(config):\n    if config.getoption(\"--reactor\") == \"asyncio\":\n        install_reactor(\"twisted.internet.asyncioreactor.AsyncioSelectorReactor\")\n\n\n# Generate localhost certificate files, needed by some tests\ngenerate_keys()\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 10.375,
          "content": "[build-system]\nrequires = [\"setuptools >= 61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"Scrapy\"\ndynamic = [\"version\"]\ndescription = \"A high-level Web Crawling and Web Scraping framework\"\ndependencies = [\n    \"Twisted>=21.7.0\",\n    \"cryptography>=37.0.0\",\n    \"cssselect>=0.9.1\",\n    \"itemloaders>=1.0.1\",\n    \"parsel>=1.5.0\",\n    \"pyOpenSSL>=22.0.0\",\n    \"queuelib>=1.4.2\",\n    \"service_identity>=18.1.0\",\n    \"w3lib>=1.17.0\",\n    \"zope.interface>=5.1.0\",\n    \"protego>=0.1.15\",\n    \"itemadapter>=0.1.0\",\n    \"packaging\",\n    \"tldextract\",\n    \"lxml>=4.6.0\",\n    \"defusedxml>=0.7.1\",\n    # Platform-specific dependencies\n    'PyDispatcher>=2.0.5; platform_python_implementation == \"CPython\"',\n    'PyPyDispatcher>=2.1.0; platform_python_implementation == \"PyPy\"',\n]\nclassifiers = [\n    \"Framework :: Scrapy\",\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Console\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n    \"Topic :: Internet :: WWW/HTTP\",\n    \"Topic :: Software Development :: Libraries :: Application Frameworks\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n]\nreadme = \"README.rst\"\nrequires-python = \">=3.9\"\nauthors = [{ name = \"Scrapy developers\", email = \"pablo@pablohoffman.com\" }]\nmaintainers = [{ name = \"Pablo Hoffman\", email = \"pablo@pablohoffman.com\" }]\n\n[project.urls]\nHomepage = \"https://scrapy.org/\"\nDocumentation = \"https://docs.scrapy.org/\"\nSource = \"https://github.com/scrapy/scrapy\"\nTracker = \"https://github.com/scrapy/scrapy/issues\"\nChangelog = \"https://github.com/scrapy/scrapy/commits/master/\"\nreleasenotes = \"https://docs.scrapy.org/en/latest/news.html\"\n\n[project.scripts]\nscrapy = \"scrapy.cmdline:execute\"\n\n[tool.setuptools.packages.find]\nwhere = [\".\"]\ninclude = [\"scrapy\", \"scrapy.*\",]\n\n[tool.setuptools.dynamic]\nversion = {file = \"./scrapy/VERSION\"}\n\n[tool.mypy]\nignore_missing_imports = true\nimplicit_reexport = false\n\n# Interface classes are hard to support\n[[tool.mypy.overrides]]\nmodule = \"twisted.internet.interfaces\"\nfollow_imports = \"skip\"\n\n[[tool.mypy.overrides]]\nmodule = \"scrapy.interfaces\"\nignore_errors = true\n\n[[tool.mypy.overrides]]\nmodule = \"twisted.internet.reactor\"\nfollow_imports = \"skip\"\n\n# FIXME: remove the following section once the issues are solved\n[[tool.mypy.overrides]]\nmodule = \"scrapy.settings.default_settings\"\nignore_errors = true\n\n[[tool.mypy.overrides]]\nmodule = \"itemadapter\"\nimplicit_reexport = true\n\n[[tool.mypy.overrides]]\nmodule = \"twisted\"\nimplicit_reexport = true\n\n[tool.bumpversion]\ncurrent_version = \"2.12.0\"\ncommit = true\ntag = true\ntag_name = \"{new_version}\"\n\n[[tool.bumpversion.files]]\nfilename = \"scrapy/VERSION\"\n\n[[tool.bumpversion.files]]\nfilename = \"SECURITY.md\"\nparse = \"\"\"(?P<major>0|[1-9]\\\\d*)\\\\.(?P<minor>0|[1-9]\\\\d*)\"\"\"\nserialize = [\"{major}.{minor}\"]\n\n[tool.coverage.run]\nbranch = true\ninclude = [\"scrapy/*\"]\nomit = [\"tests/*\"]\ndisable_warnings = [\"include-ignored\"]\n\n[tool.coverage.paths]\nsource = [\n    \"scrapy\",\n    \".tox/**/site-packages/scrapy\"\n]\n\n[tool.coverage.report]\n# https://github.com/nedbat/coveragepy/issues/831#issuecomment-517778185\nexclude_lines = [\"pragma: no cover\", \"if TYPE_CHECKING:\"]\n\n[tool.pylint.MASTER]\npersistent = \"no\"\njobs = 1          # >1 hides results\nextension-pkg-allow-list=[\n    \"lxml\",\n]\n\n[tool.pylint.\"MESSAGES CONTROL\"]\nenable = [\n    \"useless-suppression\",\n]\ndisable = [\n    # Ones we want to ignore\n    \"attribute-defined-outside-init\",\n    \"broad-exception-caught\",\n    \"consider-using-with\",\n    \"cyclic-import\",\n    \"disallowed-name\",\n    \"duplicate-code\",  # https://github.com/pylint-dev/pylint/issues/214\n    \"fixme\",\n    \"import-outside-toplevel\",\n    \"inherit-non-class\",  # false positives with create_deprecated_class()\n    \"invalid-name\",\n    \"invalid-overridden-method\",\n    \"isinstance-second-argument-not-valid-type\",  # false positives with create_deprecated_class()\n    \"line-too-long\",\n    \"logging-format-interpolation\",\n    \"logging-fstring-interpolation\",\n    \"logging-not-lazy\",\n    \"missing-docstring\",\n    \"no-member\",\n    \"no-value-for-parameter\",  # https://github.com/pylint-dev/pylint/issues/3268\n    \"not-callable\",\n    \"protected-access\",\n    \"redefined-builtin\",\n    \"redefined-outer-name\",\n    \"too-few-public-methods\",\n    \"too-many-ancestors\",\n    \"too-many-arguments\",\n    \"too-many-branches\",\n    \"too-many-function-args\",\n    \"too-many-instance-attributes\",\n    \"too-many-lines\",\n    \"too-many-locals\",\n    \"too-many-positional-arguments\",\n    \"too-many-public-methods\",\n    \"too-many-return-statements\",\n    \"unused-argument\",\n    \"unused-import\",\n    \"unused-variable\",\n    \"useless-return\",  # https://github.com/pylint-dev/pylint/issues/6530\n    \"wrong-import-position\",\n\n    # Ones that we may want to address (fix, ignore per-line or move to \"don't want to fix\")\n    \"abstract-method\",\n    \"arguments-differ\",\n    \"arguments-renamed\",\n    \"dangerous-default-value\",\n    \"keyword-arg-before-vararg\",\n    \"pointless-statement\",\n    \"raise-missing-from\",\n    \"unbalanced-tuple-unpacking\",\n    \"unnecessary-dunder-call\",\n    \"used-before-assignment\",\n]\n\n[tool.pytest.ini_options]\nxfail_strict = true\nusefixtures = \"chdir\"\npython_files = [\"test_*.py\", \"__init__.py\"]\npython_classes = []\naddopts = [\n    \"--assert=plain\",\n    \"--ignore=docs/_ext\",\n    \"--ignore=docs/conf.py\",\n    \"--ignore=docs/news.rst\",\n    \"--ignore=docs/topics/dynamic-content.rst\",\n    \"--ignore=docs/topics/items.rst\",\n    \"--ignore=docs/topics/leaks.rst\",\n    \"--ignore=docs/topics/loaders.rst\",\n    \"--ignore=docs/topics/selectors.rst\",\n    \"--ignore=docs/topics/shell.rst\",\n    \"--ignore=docs/topics/stats.rst\",\n    \"--ignore=docs/topics/telnetconsole.rst\",\n    \"--ignore=docs/utils\",\n]\nmarkers = [\n    \"only_asyncio: marks tests as only enabled when --reactor=asyncio is passed\",\n    \"only_not_asyncio: marks tests as only enabled when --reactor=asyncio is not passed\",\n    \"requires_uvloop: marks tests as only enabled when uvloop is known to be working\",\n    \"requires_botocore: marks tests that need botocore (but not boto3)\",\n    \"requires_boto3: marks tests that need botocore and boto3\",\n]\nfilterwarnings = []\n\n[tool.ruff.lint]\nextend-select = [\n    # flake8-bugbear\n    \"B\",\n    # flake8-comprehensions\n    \"C4\",\n    # pydocstyle\n    \"D\",\n    # flake8-future-annotations\n    \"FA\",\n    # flynt\n    \"FLY\",\n    # refurb\n    \"FURB\",\n    # isort\n    \"I\",\n    # flake8-implicit-str-concat\n    \"ISC\",\n    # flake8-logging\n    \"LOG\",\n    # Perflint\n    \"PERF\",\n    # pygrep-hooks\n    \"PGH\",\n    # flake8-pie\n    \"PIE\",\n    # pylint\n    \"PL\",\n    # flake8-use-pathlib\n    \"PTH\",\n    # flake8-pyi\n    \"PYI\",\n    # flake8-quotes\n    \"Q\",\n    # flake8-return\n    \"RET\",\n    # flake8-raise\n    \"RSE\",\n    # Ruff-specific rules\n    \"RUF\",\n    # flake8-bandit\n    \"S\",\n    # flake8-simplify\n    \"SIM\",\n    # flake8-slots\n    \"SLOT\",\n    # flake8-debugger\n    \"T10\",\n    # flake8-type-checking\n    \"TC\",\n    # pyupgrade\n    \"UP\",\n    # pycodestyle warnings\n    \"W\",\n    # flake8-2020\n    \"YTT\",\n]\nignore = [\n    # Ones we want to ignore\n\n    # Missing docstring in public module\n    \"D100\",\n    # Missing docstring in public class\n    \"D101\",\n    # Missing docstring in public method\n    \"D102\",\n    # Missing docstring in public function\n    \"D103\",\n    # Missing docstring in public package\n    \"D104\",\n    # Missing docstring in magic method\n    \"D105\",\n    # Missing docstring in public nested class\n    \"D106\",\n    # Missing docstring in __init__\n    \"D107\",\n    # One-line docstring should fit on one line with quotes\n    \"D200\",\n    # No blank lines allowed after function docstring\n    \"D202\",\n    # 1 blank line required between summary line and description\n    \"D205\",\n    # Multi-line docstring closing quotes should be on a separate line\n    \"D209\",\n    # First line should end with a period\n    \"D400\",\n    # First line should be in imperative mood; try rephrasing\n    \"D401\",\n    # First line should not be the function's \"signature\"\n    \"D402\",\n    # First word of the first line should be properly capitalized\n    \"D403\",\n    # `try`-`except` within a loop incurs performance overhead\n    \"PERF203\",\n    # Too many return statements\n    \"PLR0911\",\n    # Too many branches\n    \"PLR0912\",\n    # Too many arguments in function definition\n    \"PLR0913\",\n    # Too many statements\n    \"PLR0915\",\n    # Magic value used in comparison\n    \"PLR2004\",\n    # `for` loop variable overwritten by assignment target\n    \"PLW2901\",\n    # String contains ambiguous {}.\n    \"RUF001\",\n    # Docstring contains ambiguous {}.\n    \"RUF002\",\n    # Comment contains ambiguous {}.\n    \"RUF003\",\n    # Mutable class attributes should be annotated with `typing.ClassVar`\n    \"RUF012\",\n    # Use of `assert` detected; needed for mypy\n    \"S101\",\n    # FTP-related functions are being called; https://github.com/scrapy/scrapy/issues/4180\n    \"S321\",\n    # Argument default set to insecure SSL protocol\n    \"S503\",\n    # Use a context manager for opening files\n    \"SIM115\",\n    # Yoda condition detected\n    \"SIM300\",\n\n    # Ones that we may want to address (fix, ignore per-line or move to \"don't want to fix\")\n\n    # Assigning to `os.environ` doesn't clear the environment.\n    \"B003\",\n    # Do not use mutable data structures for argument defaults.\n    \"B006\",\n    # Loop control variable not used within the loop body.\n    \"B007\",\n    # Do not perform function calls in argument defaults.\n    \"B008\",\n    # Found useless expression.\n    \"B018\",\n    # Star-arg unpacking after a keyword argument is strongly discouraged.\n    \"B026\",\n    # No explicit stacklevel argument found.\n    \"B028\",\n    # Within an `except` clause, raise exceptions with `raise ... from`\n    \"B904\",\n    # Use capitalized environment variable\n    \"SIM112\",\n]\n\n[tool.ruff.lint.per-file-ignores]\n# Circular import workarounds\n\"scrapy/linkextractors/__init__.py\" = [\"E402\"]\n\"scrapy/spiders/__init__.py\" = [\"E402\"]\n\n# Skip bandit in tests\n\"tests/**\" = [\"S\"]\n\n# Issues pending a review:\n\"docs/conf.py\" = [\"E402\"]\n\"scrapy/utils/url.py\" = [\"F403\", \"F405\"]\n\"tests/test_loader.py\" = [\"E741\"]\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"pep257\"\n"
        },
        {
          "name": "scrapy",
          "type": "tree",
          "content": null
        },
        {
          "name": "sep",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests_typing",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 6.19921875,
          "content": "# Tox (https://tox.readthedocs.io/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n[tox]\nenvlist = pre-commit,pylint,typing,py\nminversion = 1.7.0\n\n[test-requirements]\ndeps =\n    attrs\n    coverage >= 7.4.0\n    pexpect >= 4.8.0\n    pyftpdlib >= 2.0.1\n    pygments\n    pytest\n    pytest-cov >= 4.0.0\n    pytest-xdist\n    sybil >= 1.3.0  # https://github.com/cjw296/sybil/issues/20#issuecomment-605433422\n    testfixtures\n    pywin32; sys_platform == \"win32\"\n\n[testenv]\ndeps =\n    {[test-requirements]deps}\n\n    # mitmproxy does not support PyPy\n    mitmproxy; implementation_name != 'pypy'\nsetenv =\n    COVERAGE_CORE=sysmon\npassenv =\n    S3_TEST_FILE_URI\n    AWS_ACCESS_KEY_ID\n    AWS_SECRET_ACCESS_KEY\n    AWS_SESSION_TOKEN\n    GCS_TEST_FILE_URI\n    GCS_PROJECT_ID\n#allow tox virtualenv to upgrade pip/wheel/setuptools\ndownload = true\ncommands =\n    pytest --cov-config=pyproject.toml --cov=scrapy --cov-report=xml --cov-report= {posargs:--durations=10 docs scrapy tests} --doctest-modules\ninstall_command =\n    python -I -m pip install -ctests/upper-constraints.txt {opts} {packages}\n\n[testenv:typing]\nbasepython = python3\ndeps =\n    mypy==1.14.0\n    typing-extensions==4.12.2\n    types-lxml==2024.12.13\n    types-Pygments==2.18.0.20240506\n    botocore-stubs==1.35.90\n    boto3-stubs[s3]==1.35.90\n    attrs >= 18.2.0\n    Pillow >= 10.3.0\n    pyOpenSSL >= 24.2.1\n    pytest >= 8.2.0\n    w3lib >= 2.2.0\ncommands =\n    mypy {posargs: scrapy tests}\n\n[testenv:typing-tests]\nbasepython = python3.9\ndeps =\n    {[test-requirements]deps}\n    {[testenv:typing]deps}\n    pytest-mypy-testing==0.1.3\ncommands =\n    pytest {posargs: tests_typing}\n\n[testenv:pre-commit]\nbasepython = python3\ndeps =\n    pre-commit\ncommands =\n    pre-commit run {posargs:--all-files}\n\n[testenv:pylint]\nbasepython = python3\ndeps =\n    {[testenv:extra-deps]deps}\n    pylint==3.3.3\ncommands =\n    pylint conftest.py docs extras scrapy tests\n\n[testenv:twinecheck]\nbasepython = python3\ndeps =\n    twine==6.0.1\n    build==1.2.2.post1\ncommands =\n    python -m build --sdist\n    twine check dist/*\n\n[pinned]\nbasepython = python3.9\ndeps =\n    cryptography==37.0.0\n    cssselect==0.9.1\n    h2==3.0\n    itemadapter==0.1.0\n    parsel==1.5.0\n    Protego==0.1.15\n    pyOpenSSL==22.0.0\n    queuelib==1.4.2\n    service_identity==18.1.0\n    Twisted[http2]==21.7.0\n    w3lib==1.17.0\n    zope.interface==5.1.0\n    lxml==4.6.0\n    {[test-requirements]deps}\n\n    # mitmproxy 8.0.0 requires upgrading some of the pinned dependencies\n    # above, hence we do not install it in pinned environments at the moment\nsetenv =\n    _SCRAPY_PINNED=true\ninstall_command =\n    python -I -m pip install {opts} {packages}\ncommands =\n    pytest --cov-config=pyproject.toml --cov=scrapy --cov-report=xml --cov-report= {posargs:--durations=10 scrapy tests}\n\n[testenv:pinned]\nbasepython = {[pinned]basepython}\ndeps =\n    {[pinned]deps}\n    PyDispatcher==2.0.5\ninstall_command = {[pinned]install_command}\nsetenv =\n    {[pinned]setenv}\ncommands = {[pinned]commands}\n\n[testenv:windows-pinned]\nbasepython = {[pinned]basepython}\ndeps =\n    {[pinned]deps}\n    PyDispatcher==2.0.5\ninstall_command = {[pinned]install_command}\nsetenv =\n    {[pinned]setenv}\ncommands = {[pinned]commands}\n\n[testenv:extra-deps]\nbasepython = python3\ndeps =\n    {[testenv]deps}\n    boto3\n    google-cloud-storage\n    robotexclusionrulesparser\n    Pillow\n    Twisted[http2]\n    uvloop; platform_system != \"Windows\"\n    bpython  # optional for shell wrapper tests\n    brotli; implementation_name != 'pypy'  # optional for HTTP compress downloader middleware tests\n    brotlicffi; implementation_name == 'pypy'  # optional for HTTP compress downloader middleware tests\n    zstandard; implementation_name != 'pypy'  # optional for HTTP compress downloader middleware tests\n    ipython\n\n[testenv:extra-deps-pinned]\nbasepython = {[pinned]basepython}\ndeps =\n    {[pinned]deps}\n    boto3==1.20.0\n    google-cloud-storage==1.29.0\n    Pillow==7.1.0\n    robotexclusionrulesparser==1.6.2\n    brotlipy\n    uvloop==0.14.0; platform_system != \"Windows\"\n    bpython==0.7.1\n    zstandard==0.1; implementation_name != 'pypy'\n    ipython==2.0.0\n    brotli==0.5.2; implementation_name != 'pypy'\n    brotlicffi==0.8.0; implementation_name == 'pypy'\ninstall_command = {[pinned]install_command}\nsetenv =\n    {[pinned]setenv}\ncommands = {[pinned]commands}\n\n[testenv:asyncio]\ncommands =\n    {[testenv]commands} --reactor=asyncio\n\n[testenv:asyncio-pinned]\nbasepython = {[pinned]basepython}\ndeps = {[testenv:pinned]deps}\ncommands = {[pinned]commands} --reactor=asyncio\ninstall_command = {[pinned]install_command}\nsetenv =\n    {[pinned]setenv}\n\n[testenv:pypy3]\nbasepython = pypy3\ncommands =\n    pytest {posargs:--durations=10 docs scrapy tests}\n\n[testenv:pypy3-pinned]\nbasepython = pypy3.9\ndeps =\n    {[pinned]deps}\n    PyPyDispatcher==2.1.0\ncommands =\n    pytest {posargs:--durations=10 scrapy tests}\ninstall_command = {[pinned]install_command}\nsetenv =\n    {[pinned]setenv}\n\n[docs]\nchangedir = docs\ndeps =\n    -rdocs/requirements.txt\nsetenv =\n    READTHEDOCS_PROJECT=scrapy\n    READTHEDOCS_VERSION=master\n\n[testenv:docs]\nbasepython = python3\nchangedir = {[docs]changedir}\ndeps = {[docs]deps}\nsetenv = {[docs]setenv}\ncommands =\n    sphinx-build -W -b html . {envtmpdir}/html\n\n[testenv:docs-coverage]\nbasepython = python3\nchangedir = {[docs]changedir}\ndeps = {[docs]deps}\nsetenv = {[docs]setenv}\ncommands =\n    sphinx-build -b coverage . {envtmpdir}/coverage\n\n[testenv:docs-links]\nbasepython = python3\nchangedir = {[docs]changedir}\ndeps = {[docs]deps}\nsetenv = {[docs]setenv}\ncommands =\n    sphinx-build -W -b linkcheck . {envtmpdir}/linkcheck\n\n\n# Run S3 tests with botocore installed but without boto3.\n\n[testenv:botocore]\ndeps =\n    {[testenv]deps}\n    botocore>=1.4.87\ncommands =\n    pytest --cov-config=pyproject.toml --cov=scrapy --cov-report=xml --cov-report= {posargs:tests -m requires_botocore}\n\n[testenv:botocore-pinned]\nbasepython = {[pinned]basepython}\ndeps =\n    {[pinned]deps}\n    botocore==1.4.87\ninstall_command = {[pinned]install_command}\nsetenv =\n    {[pinned]setenv}\ncommands =\n    pytest --cov-config=pyproject.toml --cov=scrapy --cov-report=xml --cov-report= {posargs:tests -m requires_botocore}\n"
        }
      ]
    }
  ]
}