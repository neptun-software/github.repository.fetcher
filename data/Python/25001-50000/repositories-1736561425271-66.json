{
  "metadata": {
    "timestamp": 1736561425271,
    "page": 66,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "python-poetry/poetry",
      "stars": 32245,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 2.1787109375,
          "content": "tests_task:\n  # We only use Cirrus CI for FreeBSD at present; the rest of the task will assume FreeBSD.\n  freebsd_instance:\n    image_family: freebsd-14-0\n    # Cirrus has a concurrency limit of 8 vCPUs for FreeBSD. Allow executing 4 tasks in parallel.\n    cpu: 2\n    memory: 2G\n\n  env:\n    matrix:\n      - PYTHON: python3.9\n        PYTHON_VERSION: 3.9\n        PYTHON_PACKAGE: python39\n        SQLITE_PACKAGE: py39-sqlite3\n      - PYTHON: python3.10\n        PYTHON_VERSION: 3.10\n        PYTHON_PACKAGE: python310\n        SQLITE_PACKAGE: py310-sqlite3\n      - PYTHON: python3.11\n        PYTHON_VERSION: 3.11\n        PYTHON_PACKAGE: python311\n        SQLITE_PACKAGE: py311-sqlite3\n      # FIXME: Python 3.12 is not available in Ports.\n      # - PYTHON: python3.12\n      #   PYTHON_VERSION: 3.12\n      #   PYTHON_PACKAGE: python312\n      #   SQLITE_PACKAGE: py312-sqlite3\n    # FIXME: use pipx for install. pipx is currently broken in Ports.\n    POETRY_HOME: /opt/poetry\n    # SHELL is not set by default, and we have tests that depend on it.\n    SHELL: sh\n\n  bootstrap_poetry_script:\n    - pkg install -y git $PYTHON_PACKAGE $SQLITE_PACKAGE\n    - $PYTHON -m venv $POETRY_HOME\n    - $POETRY_HOME/bin/pip install poetry\n    - echo \"PATH=${POETRY_HOME}/bin:${PATH}\" >> $CIRRUS_ENV\n\n  setup_environment_script:\n    # TODO: caching\n    - poetry install\n    - poetry env info\n    - poetry show\n\n  matrix:\n    - alias: pytest\n      name: \"Tests / FreeBSD (Python ${PYTHON_VERSION}) / pytest\"\n      skip: \"!changesInclude('.cirrus.yml', 'poetry.lock', 'pyproject.toml', 'src/**.py', 'tests/**')\"\n      pytest_script: poetry run pytest --integration -v --junitxml=junit.xml\n      on_failure:\n        annotate_failure_artifacts:\n          path: junit.xml\n          format: junit\n          type: text/xml\n\n    # TODO: caching\n    - alias: mypy\n      name: \"Tests / FreeBSD (Python ${PYTHON_VERSION}) / mypy\"\n      skip: \"!changesInclude('.cirrus.yml', 'poetry.lock', 'pyproject.toml', 'src/**.py', 'tests/**')\"\n      mypy_script: poetry run mypy\n\nstatus_task:\n  name: \"Tests / FreeBSD Status\"\n\n  depends_on:\n    - pytest\n    - mypy\n\n  container:\n    image: alpine:latest\n    cpu: 0.5\n    memory: 512M\n\n  # No-op the clone.\n  clone_script: true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0927734375,
          "content": "# Do not mess with line endings in metadata files or the hash will be wrong.\n*.metadata binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1689453125,
          "content": "*.pyc\n\n# Packages\n/dist/*\n\n# Unit test / coverage reports\n.coverage\n.pytest_cache\n\n.DS_Store\n.idea/*\n.python-version\n.vscode/*\n\n/docs/site/*\n.mypy_cache\n\n.venv\n/poetry.toml\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.18359375,
          "content": "ci:\n  autofix_prs: false\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.6.0\n    hooks:\n      - id: trailing-whitespace\n        exclude: tests/repositories/fixtures/pypi.org/metadata/.*\\.metadata\n      - id: end-of-file-fixer\n        exclude: ^.*\\.egg-info/|tests/repositories/fixtures/pypi.org/metadata/.*\\.metadata\n      - id: check-merge-conflict\n      - id: check-case-conflict\n      - id: check-json\n      - id: check-toml\n        exclude: tests/fixtures/invalid_lock/poetry\\.lock\n      - id: check-yaml\n      - id: pretty-format-json\n        args: [--autofix, --no-ensure-ascii, --no-sort-keys]\n      - id: check-ast\n      - id: debug-statements\n      - id: check-docstring-first\n\n  - repo: https://github.com/pre-commit/pre-commit\n    rev: v3.7.1\n    hooks:\n      - id: validate_manifest\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.7.3\n    hooks:\n      - id: ruff\n      - id: ruff-format\n\n  - repo: https://github.com/woodruffw/zizmor-pre-commit\n    rev: v0.8.0\n    hooks:\n      - id: zizmor\n        # types and files can be removed with https://github.com/woodruffw/zizmor-pre-commit/pull/2\n        types: [yaml]\n        files: \\.github/workflows/.*$\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.63671875,
          "content": "- id: poetry-check\n  name: poetry-check\n  description: run poetry check to validate config\n  entry: poetry check\n  language: python\n  pass_filenames: false\n  files: ^(.*/)?(poetry\\.lock|pyproject\\.toml)$\n\n- id: poetry-lock\n  name: poetry-lock\n  description: run poetry lock to update lock file\n  entry: poetry lock\n  language: python\n  pass_filenames: false\n  files: ^(.*/)?(poetry\\.lock|pyproject\\.toml)$\n\n- id: poetry-install\n  name: poetry-install\n  description: run poetry install to install dependencies from the lock file\n  entry: poetry install\n  language: python\n  pass_filenames: false\n  stages: [post-checkout, post-merge]\n  always_run: true\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 159.8544921875,
          "content": "# Change Log\n\n## [2.0.0] - 2025-01-05\n\n### Added\n\n- **Add support for the `project` section in the `pyproject.toml` file according to PEP 621** ([#9135](https://github.com/python-poetry/poetry/pull/9135),\n[#9917](https://github.com/python-poetry/poetry/pull/9917)).\n- **Add support for defining Poetry plugins that are required by the project and automatically installed if not present** ([#9547](https://github.com/python-poetry/poetry/pull/9547)).\n- **Lock resulting markers and groups and add a `installer.re-resolve` option (default: `true`) to allow installation without re-resolving** ([#9427](https://github.com/python-poetry/poetry/pull/9427)).\n- Add a `--local-version` option to `poetry build` ([#9064](https://github.com/python-poetry/poetry/pull/9064)).\n- Add a `--clean` option to `poetry build` ([#9067](https://github.com/python-poetry/poetry/pull/9067)).\n- Add FIPS support for `poetry publish` ([#9101](https://github.com/python-poetry/poetry/pull/9101)).\n- Add the option to use `poetry new` interactively and configure more fields ([#9101](https://github.com/python-poetry/poetry/pull/9101)).\n- Add a config option `installer.only-binary` to enforce the use of binary distribution formats ([#9150](https://github.com/python-poetry/poetry/pull/9150)).\n- Add backend support for legacy repository search ([#9132](https://github.com/python-poetry/poetry/pull/9132)).\n- Add support to resume downloads from connection resets ([#9422](https://github.com/python-poetry/poetry/pull/9422)).\n- Add the option to define a constraint for the required Poetry version to manage the project ([#9547](https://github.com/python-poetry/poetry/pull/9547)).\n- Add an `--all-groups` option to `poetry install` ([#9744](https://github.com/python-poetry/poetry/pull/9744)).\n- Add an `poetry env activate` command as replacement of `poetry shell` ([#9763](https://github.com/python-poetry/poetry/pull/9763)).\n- Add a `--markers` option to `poetry add` to add a dependency with markers ([#9814](https://github.com/python-poetry/poetry/pull/9814)).\n- Add a `--migrate` option to `poetry config` to migrate outdated configs ([#9830](https://github.com/python-poetry/poetry/pull/9830)).\n- Add a `--project` option to search the `pyproject.toml` file in another directory without switching the directory ([#9831](https://github.com/python-poetry/poetry/pull/9831)).\n- Add support for shortened hashes to define git dependencies ([#9748](https://github.com/python-poetry/poetry/pull/9748)).\n- Add partial support for conflicting extras ([#9553](https://github.com/python-poetry/poetry/pull/9553)).\n- Add a `poetry sync` command as replacement of `poetry install --sync` ([#9801](https://github.com/python-poetry/poetry/pull/9801)).\n\n### Changed\n\n- **Change the default behavior of `poetry lock` to `--no-update` and introduce a `--regenerate` option for the old default behavior** ([#9327](https://github.com/python-poetry/poetry/pull/9327)).\n- **Remove the dependency on `poetry-plugin-export` so that `poetry export` is not included per default** ([#5980](https://github.com/python-poetry/poetry/pull/5980)).\n- **Outsource `poetry shell` into `poetry-plugin-shell`** ([#9763](https://github.com/python-poetry/poetry/pull/9763)).\n- **Change the interface of `poetry add --optional` to require an extra the optional dependency is added to** ([#9135](https://github.com/python-poetry/poetry/pull/9135)).\n- **Actually switch the directory when using `--directory`/`-C`** ([#9831](https://github.com/python-poetry/poetry/pull/9831)).\n- **Drop support for Python 3.8** ([#9692](https://github.com/python-poetry/poetry/pull/9692)).\n- Rename `experimental.system-git-client` to `experimental.system-git` ([#9787](https://github.com/python-poetry/poetry/pull/9787), [#9795](https://github.com/python-poetry/poetry/pull/9795)).\n- Replace `virtualenvs.prefer-active-python` by the inverse setting `virtualenvs.use-poetry-python` and prefer the active Python by default ([#9786](https://github.com/python-poetry/poetry/pull/9786)).\n- Deprecate several fields in the `tool.poetry` section in favor of the respective fields in the `project` section in the `pyproject.toml` file ([#9135](https://github.com/python-poetry/poetry/pull/9135)).\n- Deprecate `poetry install --sync` in favor of `poetry sync` ([#9801](https://github.com/python-poetry/poetry/pull/9801)).\n- Upgrade the warning if the current project cannot be installed to an error ([#9333](https://github.com/python-poetry/poetry/pull/9333)).\n- Remove special handling for `platformdirs 2.0` macOS config directory ([#8916](https://github.com/python-poetry/poetry/pull/8916)).\n- Tweak PEP 517 builds ([#9094](https://github.com/python-poetry/poetry/pull/9094)).\n- Use Poetry instead of pip to manage dependencies in isolated build environments ([#9168](https://github.com/python-poetry/poetry/pull/9168),\n[#9227](https://github.com/python-poetry/poetry/pull/9227)).\n- Trust empty `Requires-Dist` with modern metadata ([#9078](https://github.com/python-poetry/poetry/pull/9078)).\n- Do PEP 517 builds instead of parsing `setup.py` to determine dependencies ([#9099](https://github.com/python-poetry/poetry/pull/9099)).\n- Drop support for reading lock files prior version 1.0 (created with Poetry prior 1.1) ([#9345](https://github.com/python-poetry/poetry/pull/9345)).\n- Default to `>=` instead of `^` for the Python requirement when initializing a new project ([#9558](https://github.com/python-poetry/poetry/pull/9558)).\n- Limit `build-system` to the current major version of `poetry-core` when initializing a new project ([#9812](https://github.com/python-poetry/poetry/pull/9812)).\n- Remove pip-based installation, i.e. `installer.modern-installation = false` ([#9392](https://github.com/python-poetry/poetry/pull/9392)).\n- Remove `virtualenvs.options.no-setuptools` config option and never include `setuptools` per default ([#9331](https://github.com/python-poetry/poetry/pull/9331)).\n- Rename exceptions to have an `Error` suffix ([#9705](https://github.com/python-poetry/poetry/pull/9705)).\n- Remove deprecated CLI options and methods and revoke the deprecation of `--dev` ([#9732](https://github.com/python-poetry/poetry/pull/9732)).\n- Ignore installed packages during dependency resolution ([#9851](https://github.com/python-poetry/poetry/pull/9851)).\n- Improve the error message on upload failure ([#9701](https://github.com/python-poetry/poetry/pull/9701)).\n- Improve the error message if the current project cannot be installed to include another root cause ([#9651](https://github.com/python-poetry/poetry/pull/9651)).\n- Improve the output of `poetry show <package>` ([#9750](https://github.com/python-poetry/poetry/pull/9750)).\n- Improve the error message for build errors ([#9870](https://github.com/python-poetry/poetry/pull/9870)).\n- Improve the error message when trying to remove a package from a project without any dependencies ([#9918](https://github.com/python-poetry/poetry/pull/9918)).\n- Drop the direct dependency on `crashtest` ([#9108](https://github.com/python-poetry/poetry/pull/9108)).\n- Require `keyring>=23.3.1` ([#9167](https://github.com/python-poetry/poetry/pull/9167)).\n- Require `build>=1.2.1` ([#9283](https://github.com/python-poetry/poetry/pull/9283)).\n- Require `dulwich>=0.22.6` ([#9748](https://github.com/python-poetry/poetry/pull/9748)).\n\n### Fixed\n\n- Fix an issue where git dependencies with extras could only be cloned if a branch was specified explicitly ([#7028](https://github.com/python-poetry/poetry/pull/7028)).\n- Fix an issue where `poetry env remove` failed if `virtualenvs.in-project` was set to `true` ([#9118](https://github.com/python-poetry/poetry/pull/9118)).\n- Fix an issue where locking packages with a digit at the end of the name and non-standard sdist names failed ([#9189](https://github.com/python-poetry/poetry/pull/9189)).\n- Fix an issue where credentials where not passed when trying to download an URL dependency ([#9202](https://github.com/python-poetry/poetry/pull/9202)).\n- Fix an issue where using uncommon group names with `poetry add` resulted in a broken `pyproject.toml` ([#9277](https://github.com/python-poetry/poetry/pull/9277)).\n- Fix an issue where an inconsistent entry regarding the patch version of Python was kept in `envs.toml` ([#9286](https://github.com/python-poetry/poetry/pull/9286)).\n- Fix an issue where relative paths were not resolved properly when using `poetry build --directory` ([#9433](https://github.com/python-poetry/poetry/pull/9433)).\n- Fix an issue where unrequested extras were not uninstalled when running `poetry install` without an existing lock file ([#9345](https://github.com/python-poetry/poetry/pull/9345)).\n- Fix an issue where the `poetry-check` pre-commit hook did not trigger if only `poetry.lock` has changed ([#9504](https://github.com/python-poetry/poetry/pull/9504)).\n- Fix an issue where files (rather than directories) could not be added as single page source ([#9166](https://github.com/python-poetry/poetry/pull/9166)).\n- Fix an issue where invalid constraints were generated when adding a package with a local version specifier ([#9603](https://github.com/python-poetry/poetry/pull/9603)).\n- Fix several encoding warnings ([#8893](https://github.com/python-poetry/poetry/pull/8893)).\n- Fix an issue where `virtualenvs.prefer-active-python` was not respected ([#9278](https://github.com/python-poetry/poetry/pull/9278)).\n- Fix an issue where the line endings of the lock file were changed ([#9468](https://github.com/python-poetry/poetry/pull/9468)).\n- Fix an issue where installing multiple dependencies from the same git repository failed sporadically due to a race condition ([#9658](https://github.com/python-poetry/poetry/pull/9658)).\n- Fix an issue where installing multiple dependencies from forked monorepos failed sporadically due to a race condition ([#9723](https://github.com/python-poetry/poetry/pull/9723)).\n- Fix an issue where an extra package was not installed if it is required by multiple extras ([#9700](https://github.com/python-poetry/poetry/pull/9700)).\n- Fix an issue where a `direct_url.json` with vcs URLs not compliant with PEP 610 was written ([#9007](https://github.com/python-poetry/poetry/pull/9007)).\n- Fix an issue where other files than wheels were recognized as wheels ([#9770](https://github.com/python-poetry/poetry/pull/9770)).\n- Fix an issue where `installer.max-workers` was ignored for the implicit PyPI source ([#9815](https://github.com/python-poetry/poetry/pull/9815)).\n- Fix an issue where local settings (from `poetry.toml`) were ignored for the implicit PyPI source ([#9816](https://github.com/python-poetry/poetry/pull/9816)).\n- Fix an issue where different `dulwich` versions resulted in different hashes for a git dependency from a tag ([#9849](https://github.com/python-poetry/poetry/pull/9849)).\n- Fix an issue where installing a yanked package with no dependencies failed with an `IndexError` ([#9505](https://github.com/python-poetry/poetry/pull/9505)).\n- Fix an issue where a package could not be added from a source that required an empty password ([#9850](https://github.com/python-poetry/poetry/pull/9850)).\n- Fix an issue where setting `allow-prereleases = false` still allowed pre-releases if no other solution was found ([#9798](https://github.com/python-poetry/poetry/pull/9798)).\n- Fix an issue where the wrong environment was used for checking if an installed package is from system site packages ([#9861](https://github.com/python-poetry/poetry/pull/9861)).\n- Fix an issue where build errors from builds to retrieve metadata information were hidden ([#9870](https://github.com/python-poetry/poetry/pull/9870)).\n- Fix an issue where `poetry check` falsely reported that an invalid source \"pypi\" is referenced in dependencies ([#9475](https://github.com/python-poetry/poetry/pull/9475)).\n- Fix an issue where `poetry install --sync` tried to uninstall system site packages if the virtual environment was created with `virtualenvs.options.system-site-packages = true` ([#9863](https://github.com/python-poetry/poetry/pull/9863)).\n- Fix an issue where HTTP streaming requests were not closed properly when not completely consumed ([#9899](https://github.com/python-poetry/poetry/pull/9899)).\n\n### Docs\n\n- Add information about getting test coverage in the contribution guide ([#9726](https://github.com/python-poetry/poetry/pull/9726)).\n- Mention `pre-commit-autoupdate` as an alternative to `pre-commit autoupdate` ([#9716](https://github.com/python-poetry/poetry/pull/9716)).\n- Improve the explanation of `exclude` and `include` ([#9734](https://github.com/python-poetry/poetry/pull/9734)).\n- Add information about compatible release requirements, i.e. `~=` ([#9783](https://github.com/python-poetry/poetry/pull/9783)).\n- Add documentation for using a build script to build extension modules ([#9864](https://github.com/python-poetry/poetry/pull/9864)).\n\n### poetry-core ([`2.0.0`](https://github.com/python-poetry/poetry-core/releases/tag/2.0.0))\n\n- Add support for non PEP440 compliant version in the `platform_release` marker ([#722](https://github.com/python-poetry/poetry-core/pull/722)).\n- Add support for string comparisons with `in` / `not in` in generic constraints ([#722](https://github.com/python-poetry/poetry-core/pull/722)).\n- Add support for script files that are generated by a build script ([#710](https://github.com/python-poetry/poetry-core/pull/710)).\n- Add support for `SOURCE_DATE_EPOCH` when building packages ([#766](https://github.com/python-poetry/poetry-core/pull/766),\n[#781](https://github.com/python-poetry/poetry-core/pull/781)).\n- Create `METADATA` files with version 2.3 instead of 2.2 ([#707](https://github.com/python-poetry/poetry-core/pull/707)).\n- Remove support for `x` in version constraints ([#770](https://github.com/python-poetry/poetry-core/pull/770)).\n- Remove support for scripts with extras ([#708](https://github.com/python-poetry/poetry-core/pull/708)).\n- Remove deprecated features and interfaces ([#702](https://github.com/python-poetry/poetry-core/pull/702),\n[#769](https://github.com/python-poetry/poetry-core/pull/769)).\n- Deprecate `tool.poetry.dev-dependencies` in favor of `tool.poetry.group.dev.dependencies` ([#754](https://github.com/python-poetry/poetry-core/pull/754)).\n- Fix an issue where the `platlib` directory of the wrong Python was used ([#726](https://github.com/python-poetry/poetry-core/pull/726)).\n- Fix an issue where building a wheel in a nested output directory results in an error ([#762](https://github.com/python-poetry/poetry-core/pull/762)).\n- Fix an issue where `+` was not allowed in git URL paths ([#765](https://github.com/python-poetry/poetry-core/pull/765)).\n- Fix an issue where the temporary directory was not cleaned up on error ([#775](https://github.com/python-poetry/poetry-core/pull/775)).\n- Fix an issue where the regular expression for author names was too restrictive ([#517](https://github.com/python-poetry/poetry-core/pull/517)).\n- Fix an issue where basic auth http(s) credentials could not be parsed ([#791](https://github.com/python-poetry/poetry-core/pull/791)).\n\n\n## [1.8.5] - 2024-12-06\n\n### Changed\n\n- Require `pkginfo>=1.12` to fix an issue with an unknown metadata version 2.4 ([#9888](https://github.com/python-poetry/poetry/pull/9888)).\n- Do not fail if the unknown metadata version is only a minor version update ([#9888](https://github.com/python-poetry/poetry/pull/9888)).\n\n\n## [1.8.4] - 2024-10-14\n\n### Added\n\n- **Add official support for Python 3.13** ([#9523](https://github.com/python-poetry/poetry/pull/9523)).\n\n### Changed\n\n- Require `virtualenv>=20.26.6` to mitigate potential command injection when running `poetry shell` in untrusted projects ([#9757](https://github.com/python-poetry/poetry/pull/9757)).\n\n### poetry-core ([`1.9.1`](https://github.com/python-poetry/poetry-core/releases/tag/1.9.1))\n\n- Add `3.13` to the list of available Python versions ([#747](https://github.com/python-poetry/poetry-core/pull/747)).\n\n\n## [1.8.3] - 2024-05-08\n\n### Added\n\n- Add support for untagged CPython builds with versions ending with a `+` ([#9207](https://github.com/python-poetry/poetry/pull/9207)).\n\n### Changed\n\n- Require `pkginfo>=1.10` to ensure support for packages with metadata version 2.3 ([#9130](https://github.com/python-poetry/poetry/pull/9130)).\n- Improve locking on FIPS systems ([#9152](https://github.com/python-poetry/poetry/pull/9152)).\n\n### Fixed\n\n- Fix an issue where unrecognized package metadata versions silently resulted in empty dependencies ([#9203](https://github.com/python-poetry/poetry/pull/9203),\n  [#9226](https://github.com/python-poetry/poetry/pull/9226)).\n- Fix an issue where trailing slashes in git URLs where not handled correctly ([#9205](https://github.com/python-poetry/poetry/pull/9205)).\n- Fix an issue where `poetry self` commands printed a warning that the current project cannot be installed ([#9302](https://github.com/python-poetry/poetry/pull/9302)).\n- Fix an issue where `poetry install` sporadically failed with a `KeyError` due to a race condition ([#9335](https://github.com/python-poetry/poetry/pull/9335)).\n\n### Docs\n\n- Fix incorrect information about `poetry shell` ([#9060](https://github.com/python-poetry/poetry/pull/9060)).\n- Add a git subdirectory example to `poetry add` ([#9080](https://github.com/python-poetry/poetry/pull/9080)).\n- Mention interactive credential configuration ([#9074](https://github.com/python-poetry/poetry/pull/9074)).\n- Add notes for optional advanced installation steps ([#9098](https://github.com/python-poetry/poetry/pull/9098)).\n- Add reference to configuration credentials in documentation of poetry `publish` ([#9110](https://github.com/python-poetry/poetry/pull/9110)).\n- Improve documentation for configuring credentials via environment variables ([#9121](https://github.com/python-poetry/poetry/pull/9121)).\n- Remove misleading wording around virtual environments ([#9213](https://github.com/python-poetry/poetry/pull/9213)).\n- Remove outdated advice regarding seeding keyring backends ([#9164](https://github.com/python-poetry/poetry/pull/9164)).\n- Add a `pyproject.toml` example for a dependency with multiple extras ([#9138](https://github.com/python-poetry/poetry/pull/9138)).\n- Clarify help of `poetry add` ([#9230](https://github.com/python-poetry/poetry/pull/9230)).\n- Add a note how to configure credentials for TestPyPI for `poetry publish` ([#9255](https://github.com/python-poetry/poetry/pull/9255)).\n- Fix information about the `--readme` option in `poetry new` ([#9260](https://github.com/python-poetry/poetry/pull/9260)).\n- Clarify what is special about the Python constraint in `dependencies` ([#9256](https://github.com/python-poetry/poetry/pull/9256)).\n- Update how to uninstall plugins via `pipx` ([#9320](https://github.com/python-poetry/poetry/pull/9320)).\n\n\n## [1.8.2] - 2024-03-02\n\n### Fixed\n\n- Harden `lazy-wheel` error handling if the index server is behaving badly in an unexpected way ([#9051](https://github.com/python-poetry/poetry/pull/9051)).\n- Improve `lazy-wheel` error handling if the index server does not handle HTTP range requests correctly ([#9082](https://github.com/python-poetry/poetry/pull/9082)).\n- Improve `lazy-wheel` error handling if the index server pretends to support HTTP range requests but does not respect them ([#9084](https://github.com/python-poetry/poetry/pull/9084)).\n- Improve `lazy-wheel` to allow redirects for HEAD requests ([#9087](https://github.com/python-poetry/poetry/pull/9087)).\n- Improve debug logging for `lazy-wheel` errors ([#9059](https://github.com/python-poetry/poetry/pull/9059)).\n- Fix an issue where the hash of a metadata file could not be calculated correctly due to an encoding issue ([#9049](https://github.com/python-poetry/poetry/pull/9049)).\n- Fix an issue where `poetry add` failed in non-package mode if no project name was set ([#9046](https://github.com/python-poetry/poetry/pull/9046)).\n- Fix an issue where a hint to non-package mode was not compliant with the final name of the setting ([#9073](https://github.com/python-poetry/poetry/pull/9073)).\n\n\n## [1.8.1] - 2024-02-26\n\n### Fixed\n\n- Update the minimum required version of `packaging` ([#9031](https://github.com/python-poetry/poetry/pull/9031)).\n- Handle unexpected responses from servers that do not support HTTP range requests with negative offsets more robust ([#9030](https://github.com/python-poetry/poetry/pull/9030)).\n\n### Docs\n\n- Rename `master` branch to `main` ([#9022](https://github.com/python-poetry/poetry/pull/9022)).\n\n\n## [1.8.0] - 2024-02-25\n\n### Added\n\n- **Add a `non-package` mode for use cases where Poetry is only used for dependency management** ([#8650](https://github.com/python-poetry/poetry/pull/8650)).\n- **Add support for PEP 658 to fetch metadata without having to download wheels** ([#5509](https://github.com/python-poetry/poetry/pull/5509)).\n- **Add a `lazy-wheel` config option (default: `true`) to reduce wheel downloads during dependency resolution** ([#8815](https://github.com/python-poetry/poetry/pull/8815),\n  [#8941](https://github.com/python-poetry/poetry/pull/8941)).\n- Improve performance of dependency resolution by using shallow copies instead of deep copies ([#8671](https://github.com/python-poetry/poetry/pull/8671)).\n- `poetry check` validates that no unknown sources are referenced in dependencies ([#8709](https://github.com/python-poetry/poetry/pull/8709)).\n- Add archive validation during installation for further hash algorithms ([#8851](https://github.com/python-poetry/poetry/pull/8851)).\n- Add a `to` key in `tool.poetry.packages` to allow custom subpackage names ([#8791](https://github.com/python-poetry/poetry/pull/8791)).\n- Add a config option to disable `keyring` ([#8910](https://github.com/python-poetry/poetry/pull/8910)).\n- Add a `--sync` option to `poetry update` ([#8931](https://github.com/python-poetry/poetry/pull/8931)).\n- Add an `--output` option to `poetry build` ([#8828](https://github.com/python-poetry/poetry/pull/8828)).\n- Add a `--dist-dir` option to `poetry publish` ([#8828](https://github.com/python-poetry/poetry/pull/8828)).\n\n### Changed\n\n- **The implicit PyPI source is disabled if at least one primary source is configured** ([#8771](https://github.com/python-poetry/poetry/pull/8771)).\n- **Deprecate source priority `default`** ([#8771](https://github.com/python-poetry/poetry/pull/8771)).\n- **Upgrade the warning about an inconsistent lockfile to an error** ([#8737](https://github.com/python-poetry/poetry/pull/8737)).\n- Deprecate setting `installer.modern-installation` to `false` ([#8988](https://github.com/python-poetry/poetry/pull/8988)).\n- Drop support for `pip<19` ([#8894](https://github.com/python-poetry/poetry/pull/8894)).\n- Require `requests-toolbelt>=1` ([#8680](https://github.com/python-poetry/poetry/pull/8680)).\n- Allow `platformdirs` 4.x ([#8668](https://github.com/python-poetry/poetry/pull/8668)).\n- Allow and require `xattr` 1.x on macOS ([#8801](https://github.com/python-poetry/poetry/pull/8801)).\n- Improve venv shell activation in `fish` ([#8804](https://github.com/python-poetry/poetry/pull/8804)).\n- Rename `system` to `base` in output of `poetry env info` ([#8832](https://github.com/python-poetry/poetry/pull/8832)).\n- Use pretty name in output of `poetry version` ([#8849](https://github.com/python-poetry/poetry/pull/8849)).\n- Improve error handling for invalid entries in `tool.poetry.scripts` ([#8898](https://github.com/python-poetry/poetry/pull/8898)).\n- Improve verbose output for dependencies with extras during dependency resolution ([#8834](https://github.com/python-poetry/poetry/pull/8834)).\n- Improve message about an outdated lockfile ([#8962](https://github.com/python-poetry/poetry/pull/8962)).\n\n### Fixed\n\n- Fix an issue where `poetry shell` failed when Python has been installed with MSYS2 ([#8644](https://github.com/python-poetry/poetry/pull/8644)).\n- Fix an issue where Poetry commands failed in a terminal with a non-UTF-8 encoding ([#8608](https://github.com/python-poetry/poetry/pull/8608)).\n- Fix an issue where a missing project name caused an incomprehensible error message ([#8691](https://github.com/python-poetry/poetry/pull/8691)).\n- Fix an issue where Poetry failed to install an `sdist` path dependency ([#8682](https://github.com/python-poetry/poetry/pull/8682)).\n- Fix an issue where `poetry install` failed because an unused extra was not available ([#8548](https://github.com/python-poetry/poetry/pull/8548)).\n- Fix an issue where `poetry install --sync` did not remove an unrequested extra ([#8621](https://github.com/python-poetry/poetry/pull/8621)).\n- Fix an issue where `poetry init` did not allow specific characters in the author field ([#8779](https://github.com/python-poetry/poetry/pull/8779)).\n- Fix an issue where Poetry could not download `sdists` from misconfigured servers ([#8701](https://github.com/python-poetry/poetry/pull/8701)).\n- Fix an issue where metadata of sdists that call CLI tools of their build requirements could not be determined ([#8827](https://github.com/python-poetry/poetry/pull/8827)).\n- Fix an issue where Poetry failed to use the currently activated environment ([#8831](https://github.com/python-poetry/poetry/pull/8831)).\n- Fix an issue where `poetry shell` failed in `zsh` if a space was in the venv path ([#7245](https://github.com/python-poetry/poetry/pull/7245)).\n- Fix an issue where scripts with extras could not be installed ([#8900](https://github.com/python-poetry/poetry/pull/8900)).\n- Fix an issue where explicit sources where not propagated correctly ([#8835](https://github.com/python-poetry/poetry/pull/8835)).\n- Fix an issue where debug prints where swallowed when using a build script ([#8760](https://github.com/python-poetry/poetry/pull/8760)).\n- Fix an issue where explicit sources of locked dependencies where not propagated correctly ([#8948](https://github.com/python-poetry/poetry/pull/8948)).\n- Fix an issue where Poetry's own environment was falsely identified as system environment ([#8970](https://github.com/python-poetry/poetry/pull/8970)).\n- Fix an issue where dependencies from a `setup.py` were ignored silently ([#9000](https://github.com/python-poetry/poetry/pull/9000)).\n- Fix an issue where environment variables for `virtualenv.options` were ignored ([#9015](https://github.com/python-poetry/poetry/pull/9015)).\n- Fix an issue where `virtualenvs.options.no-pip` and `virtualenvs.options.no-setuptools` were not normalized ([#9015](https://github.com/python-poetry/poetry/pull/9015)).\n\n### Docs\n\n- Replace deprecated `--no-dev` with `--without dev` in the FAQ ([#8659](https://github.com/python-poetry/poetry/pull/8659)).\n- Recommend `poetry-check` instead of the deprecated `poetry-lock` pre-commit hook ([#8675](https://github.com/python-poetry/poetry/pull/8675)).\n- Clarify the names of the environment variables to provide credentials for repositories ([#8782](https://github.com/python-poetry/poetry/pull/8782)).\n- Add note how to install several version of Poetry in parallel ([#8814](https://github.com/python-poetry/poetry/pull/8814)).\n- Improve description of `poetry show --why` ([#8817](https://github.com/python-poetry/poetry/pull/8817)).\n- Improve documentation of `poetry update` ([#8706](https://github.com/python-poetry/poetry/pull/8706)).\n- Add a warning about passing variables that may start with a hyphen via command line ([#8850](https://github.com/python-poetry/poetry/pull/8850)).\n- Mention that the virtual environment in which Poetry itself is installed should not be activated ([#8833](https://github.com/python-poetry/poetry/pull/8833)).\n- Add note about `poetry run` and externally managed environments ([#8748](https://github.com/python-poetry/poetry/pull/8748)).\n- Update FAQ entry about `tox` for `tox` 4.x ([#8658](https://github.com/python-poetry/poetry/pull/8658)).\n- Fix documentation for default `format` option for `include` and `exclude` value ([#8852](https://github.com/python-poetry/poetry/pull/8852)).\n- Add note about `tox` and configured credentials ([#8888](https://github.com/python-poetry/poetry/pull/8888)).\n- Add note and link how to install `pipx` ([#8878](https://github.com/python-poetry/poetry/pull/8878)).\n- Fix examples for `poetry add` with git dependencies over ssh ([#8911](https://github.com/python-poetry/poetry/pull/8911)).\n- Remove reference to deprecated scripts extras feature ([#8903](https://github.com/python-poetry/poetry/pull/8903)).\n- Change examples to prefer `--only main` instead of `--without dev` ([#8921](https://github.com/python-poetry/poetry/pull/8921)).\n- Mention that the `develop` attribute is a Poetry-specific feature and not propagated to other tools ([#8971](https://github.com/python-poetry/poetry/pull/8971)).\n- Fix examples for adding supplemental and secondary sources ([#8953](https://github.com/python-poetry/poetry/pull/8953)).\n- Add PyTorch example for explicit sources ([#9006](https://github.com/python-poetry/poetry/pull/9006)).\n\n### poetry-core ([`1.9.0`](https://github.com/python-poetry/poetry-core/releases/tag/1.9.0))\n\n- **Deprecate scripts that depend on extras** ([#690](https://github.com/python-poetry/poetry-core/pull/690)).\n- Add support for path dependencies that do not define a build system ([#675](https://github.com/python-poetry/poetry-core/pull/675)).\n- Update list of supported licenses ([#659](https://github.com/python-poetry/poetry-core/pull/659),\n  [#669](https://github.com/python-poetry/poetry-core/pull/669),\n  [#678](https://github.com/python-poetry/poetry-core/pull/678),\n  [#694](https://github.com/python-poetry/poetry-core/pull/694)).\n- Rework list of files included in build artifacts ([#666](https://github.com/python-poetry/poetry-core/pull/666)).\n- Fix an issue where insignificant errors were printed if the working directory is not inside a git repository ([#684](https://github.com/python-poetry/poetry-core/pull/684)).\n- Fix an issue where the project's directory was not recognized as git repository on Windows due to an encoding issue ([#685](https://github.com/python-poetry/poetry-core/pull/685)).\n\n\n## [1.7.1] - 2023-11-16\n\n### Fixed\n\n- Fix an issue where sdists that call CLI tools of their build requirements could not be installed ([#8630](https://github.com/python-poetry/poetry/pull/8630)).\n- Fix an issue where sdists with symlinks could not be installed due to a broken tarfile datafilter ([#8649](https://github.com/python-poetry/poetry/pull/8649)).\n- Fix an issue where `poetry init` failed when trying to add dependencies ([#8655](https://github.com/python-poetry/poetry/pull/8655)).\n- Fix an issue where `poetry install` failed if `virtualenvs.create` was set to `false` ([#8672](https://github.com/python-poetry/poetry/pull/8672)).\n\n\n## [1.7.0] - 2023-11-03\n\n### Added\n\n- **Add official support for Python 3.12** ([#7803](https://github.com/python-poetry/poetry/pull/7803), [#8544](https://github.com/python-poetry/poetry/pull/8544)).\n- **Print a future warning that `poetry-plugin-export` will not be installed by default anymore** ([#8562](https://github.com/python-poetry/poetry/pull/8562)).\n- Add `poetry-install` pre-commit hook ([#8327](https://github.com/python-poetry/poetry/pull/8327)).\n- Add `--next-phase` option to `poetry version` ([#8089](https://github.com/python-poetry/poetry/pull/8089)).\n- Print a warning when overwriting files from another package at installation ([#8386](https://github.com/python-poetry/poetry/pull/8386)).\n- Print a warning if the current project cannot be installed ([#8369](https://github.com/python-poetry/poetry/pull/8369)).\n- Report more details on build backend exceptions ([#8464](https://github.com/python-poetry/poetry/pull/8464)).\n\n### Changed\n\n- Set Poetry as `user-agent` for all HTTP requests ([#8394](https://github.com/python-poetry/poetry/pull/8394)).\n- Do not install `setuptools` per default in Python 3.12 ([#7803](https://github.com/python-poetry/poetry/pull/7803)).\n- Do not install `wheel` per default ([#7803](https://github.com/python-poetry/poetry/pull/7803)).\n- Remove `setuptools` and `wheel` when running `poetry install --sync` if they are not required by the project ([#8600](https://github.com/python-poetry/poetry/pull/8600)).\n- Improve error message about PEP-517 support ([#8463](https://github.com/python-poetry/poetry/pull/8463)).\n- Improve `keyring` handling ([#8227](https://github.com/python-poetry/poetry/pull/8227)).\n- Read the `description` field when extracting metadata from `setup.py` files ([#8545](https://github.com/python-poetry/poetry/pull/8545)).\n\n### Fixed\n\n- **Fix an issue where dependencies of inactive extras were locked and installed** ([#8399](https://github.com/python-poetry/poetry/pull/8399)).\n- **Fix an issue where build requirements were not installed due to a race condition in the artifact cache** ([#8517](https://github.com/python-poetry/poetry/pull/8517)).\n- Fix an issue where packages included in the system site packages were installed even though `virtualenvs.options.system-site-packages` was set ([#8359](https://github.com/python-poetry/poetry/pull/8359)).\n- Fix an issue where git dependencies' submodules with relative URLs were handled incorrectly ([#8020](https://github.com/python-poetry/poetry/pull/8020)).\n- Fix an issue where a failed installation of build dependencies was not noticed directly ([#8479](https://github.com/python-poetry/poetry/pull/8479)).\n- Fix an issue where `poetry shell` did not work completely with `nushell` ([#8478](https://github.com/python-poetry/poetry/pull/8478)).\n- Fix an issue where a confusing error messages was displayed when running `poetry config pypi-token.pypi` without a value ([#8502](https://github.com/python-poetry/poetry/pull/8502)).\n- Fix an issue where a cryptic error message is printed if there is no metadata entry in the lockfile ([#8523](https://github.com/python-poetry/poetry/pull/8523)).\n- Fix an issue with the encoding with special characters in the virtualenv's path ([#8565](https://github.com/python-poetry/poetry/pull/8565)).\n- Fix an issue where the connection pool size was not adjusted to the number of workers ([#8559](https://github.com/python-poetry/poetry/pull/8559)).\n\n### Docs\n\n- Improve the wording regarding a project's supported Python range ([#8423](https://github.com/python-poetry/poetry/pull/8423)).\n- Make `pipx` the preferred (first mentioned) installation method ([#8090](https://github.com/python-poetry/poetry/pull/8090)).\n- Add a warning about `poetry self` on Windows ([#8090](https://github.com/python-poetry/poetry/pull/8090)).\n- Fix example for `poetry add` with a git dependency ([#8438](https://github.com/python-poetry/poetry/pull/8438)).\n- Add information about auto-included files in wheels and sdist ([#8555](https://github.com/python-poetry/poetry/pull/8555)).\n- Fix documentation of the `POETRY_REPOSITORIES_` variables docs ([#8492](https://github.com/python-poetry/poetry/pull/8492)).\n- Add `CITATION.cff` file ([#8510](https://github.com/python-poetry/poetry/pull/8510)).\n\n### poetry-core ([`1.8.1`](https://github.com/python-poetry/poetry-core/releases/tag/1.8.1))\n\n- Add support for creating packages dynamically in the build script ([#629](https://github.com/python-poetry/poetry-core/pull/629)).\n- Improve marker logic for `extra` markers ([#636](https://github.com/python-poetry/poetry-core/pull/636)).\n- Update list of supported licenses ([#635](https://github.com/python-poetry/poetry-core/pull/635), [#646](https://github.com/python-poetry/poetry-core/pull/646)).\n- Fix an issue where projects with extension modules were not installed in editable mode ([#633](https://github.com/python-poetry/poetry-core/pull/633)).\n- Fix an issue where the wrong or no `lib` folder was added to the wheel ([#634](https://github.com/python-poetry/poetry-core/pull/634)).\n\n### poetry-plugin-export ([`^1.6.0`](https://github.com/python-poetry/poetry-plugin-export/releases/tag/1.6.0))\n\n- Add an `--all-extras` option ([#241](https://github.com/python-poetry/poetry-plugin-export/pull/241)).\n- Fix an issue where git dependencies are exported with the branch name instead of the resolved commit hash ([#213](https://github.com/python-poetry/poetry-plugin-export/pull/213)).\n\n\n## [1.6.1] - 2023-08-21\n\n### Fixed\n\n- Update the minimum required version of `requests` ([#8336](https://github.com/python-poetry/poetry/pull/8336)).\n\n\n## [1.6.0] - 2023-08-20\n\n### Added\n\n- **Add support for repositories that do not provide a supported hash algorithm** ([#8118](https://github.com/python-poetry/poetry/pull/8118)).\n- **Add full support for duplicate dependencies with overlapping markers** ([#7257](https://github.com/python-poetry/poetry/pull/7257)).\n- **Improve performance of `poetry lock` for certain edge cases** ([#8256](https://github.com/python-poetry/poetry/pull/8256)).\n- Improve performance of `poetry install` ([#8031](https://github.com/python-poetry/poetry/pull/8031)).\n- `poetry check` validates that specified `readme` files do exist ([#7444](https://github.com/python-poetry/poetry/pull/7444)).\n- Add a downgrading note when updating to an older version ([#8176](https://github.com/python-poetry/poetry/pull/8176)).\n- Add support for `vox` in the `xonsh` shell ([#8203](https://github.com/python-poetry/poetry/pull/8203)).\n- Add support for `pre-commit` hooks for projects where the pyproject.toml file is located in a subfolder ([#8204](https://github.com/python-poetry/poetry/pull/8204)).\n- Add support for the `git+http://` scheme ([#6619](https://github.com/python-poetry/poetry/pull/6619)).\n\n### Changed\n\n- **Drop support for Python 3.7** ([#7674](https://github.com/python-poetry/poetry/pull/7674)).\n- Move `poetry lock --check` to `poetry check --lock` and deprecate the former ([#8015](https://github.com/python-poetry/poetry/pull/8015)).\n- Change future warning that PyPI will only be disabled automatically if there are no primary sources ([#8151](https://github.com/python-poetry/poetry/pull/8151)).\n\n### Fixed\n\n- Fix an issue where `build-system.requires` were not respected for projects with build scripts ([#7975](https://github.com/python-poetry/poetry/pull/7975)).\n- Fix an issue where the encoding was not handled correctly when calling a subprocess ([#8060](https://github.com/python-poetry/poetry/pull/8060)).\n- Fix an issue where `poetry show --top-level` did not show top level dependencies with extras ([#8076](https://github.com/python-poetry/poetry/pull/8076)).\n- Fix an issue where `poetry init` handled projects with `src` layout incorrectly ([#8218](https://github.com/python-poetry/poetry/pull/8218)).\n- Fix an issue where Poetry wrote `.pth` files with the wrong encoding ([#8041](https://github.com/python-poetry/poetry/pull/8041)).\n- Fix an issue where `poetry install` did not respect the source if the same version of a package has been locked from different sources ([#8304](https://github.com/python-poetry/poetry/pull/8304)).\n\n### Docs\n\n- Document **official Poetry badge** ([#8066](https://github.com/python-poetry/poetry/pull/8066)).\n- Update configuration folder path for macOS ([#8062](https://github.com/python-poetry/poetry/pull/8062)).\n- Add a warning about pip ignoring lock files ([#8117](https://github.com/python-poetry/poetry/pull/8117)).\n- Clarify the use of the `virtualenvs.in-project` setting. ([#8126](https://github.com/python-poetry/poetry/pull/8126)).\n- Change `pre-commit` YAML style to be consistent with pre-commit's own examples ([#8146](https://github.com/python-poetry/poetry/pull/8146)).\n- Fix command for listing installed plugins ([#8200](https://github.com/python-poetry/poetry/pull/8200)).\n- Mention the `nox-poetry` package ([#8173](https://github.com/python-poetry/poetry/pull/8173)).\n- Add an example with a PyPI source in the pyproject.toml file ([#8171](https://github.com/python-poetry/poetry/pull/8171)).\n- Use `reference` instead of deprecated `callable` in the scripts example ([#8211](https://github.com/python-poetry/poetry/pull/8211)).\n\n### poetry-core ([`1.7.0`](https://github.com/python-poetry/poetry-core/releases/tag/1.7.0))\n\n- Improve performance of marker handling ([#609](https://github.com/python-poetry/poetry-core/pull/609)).\n- Allow `|` as a value separator in markers with the operators `in` and `not in` ([#608](https://github.com/python-poetry/poetry-core/pull/608)).\n- Put pretty name (instead of normalized name) in metadata ([#620](https://github.com/python-poetry/poetry-core/pull/620)).\n- Update list of supported licenses ([#623](https://github.com/python-poetry/poetry-core/pull/623)).\n- Fix an issue where PEP 508 dependency specifications with names starting with a digit could not be parsed ([#607](https://github.com/python-poetry/poetry-core/pull/607)).\n- Fix an issue where Poetry considered an unrelated `.gitignore` file resulting in an empty wheel ([#611](https://github.com/python-poetry/poetry-core/pull/611)).\n\n### poetry-plugin-export ([`^1.5.0`](https://github.com/python-poetry/poetry-plugin-export/releases/tag/1.5.0))\n\n- Fix an issue where markers for dependencies required by an extra were not generated correctly ([#209](https://github.com/python-poetry/poetry-plugin-export/pull/209)).\n\n\n## [1.5.1] - 2023-05-29\n\n### Added\n\n- Improve dependency resolution performance in cases with a lot of backtracking ([#7950](https://github.com/python-poetry/poetry/pull/7950)).\n\n### Changed\n\n- Disable wheel content validation during installation ([#7987](https://github.com/python-poetry/poetry/pull/7987)).\n\n### Fixed\n\n- Fix an issue where partially downloaded wheels were cached ([#7968](https://github.com/python-poetry/poetry/pull/7968)).\n- Fix an issue where `poetry run` did no longer execute relative-path scripts ([#7963](https://github.com/python-poetry/poetry/pull/7963)).\n- Fix an issue where dependencies were not installed in `in-project` environments ([#7977](https://github.com/python-poetry/poetry/pull/7977)).\n- Fix an issue where no solution was found for a transitive dependency on a pre-release of a package ([#7978](https://github.com/python-poetry/poetry/pull/7978)).\n- Fix an issue where cached repository packages were incorrectly parsed, leading to its dependencies being ignored ([#7995](https://github.com/python-poetry/poetry/pull/7995)).\n- Fix an issue where an explicit source was ignored so that a direct origin dependency was used instead ([#7973](https://github.com/python-poetry/poetry/pull/7973)).\n- Fix an issue where the installation of big wheels consumed a lot of memory ([#7987](https://github.com/python-poetry/poetry/pull/7987)).\n\n### Docs\n\n- Add information about multiple constraints dependencies with direct origin and version dependencies ([#7973](https://github.com/python-poetry/poetry/pull/7973)).\n\n### poetry-core ([`1.6.1`](https://github.com/python-poetry/poetry-core/releases/tag/1.6.1))\n\n- Fix an endless recursion in marker handling ([#593](https://github.com/python-poetry/poetry-core/pull/593)).\n- Fix an issue where the wheel tag was not built correctly under certain circumstances ([#591](https://github.com/python-poetry/poetry-core/pull/591)).\n\n### poetry-plugin-export ([`^1.4.0`](https://github.com/python-poetry/poetry-plugin-export/releases/tag/1.4.0))\n\n- Fix an issue where `--extra-index-url` and `--trusted-host` was not generated for sources with priority `explicit` ([#205](https://github.com/python-poetry/poetry-plugin-export/pull/205)).\n\n\n## [1.5.0] - 2023-05-19\n\n### Added\n\n- **Introduce the new source priorities `explicit` and `supplemental`** ([#7658](https://github.com/python-poetry/poetry/pull/7658),\n  [#6879](https://github.com/python-poetry/poetry/pull/6879)).\n- **Introduce the option to configure the priority of the implicit PyPI source** ([#7801](https://github.com/python-poetry/poetry/pull/7801)).\n- Add handling for corrupt cache files ([#7453](https://github.com/python-poetry/poetry/pull/7453)).\n- Improve caching of URL and git dependencies ([#7693](https://github.com/python-poetry/poetry/pull/7693),\n  [#7473](https://github.com/python-poetry/poetry/pull/7473)).\n- Add option to skip installing directory dependencies ([#6845](https://github.com/python-poetry/poetry/pull/6845),\n  [#7923](https://github.com/python-poetry/poetry/pull/7923)).\n- Add `--executable` option to `poetry env info` ([#7547](https://github.com/python-poetry/poetry/pull/7547)).\n- Add `--top-level` option to `poetry show` ([#7415](https://github.com/python-poetry/poetry/pull/7415)).\n- Add `--lock` option to `poetry remove` ([#7917](https://github.com/python-poetry/poetry/pull/7917)).\n- Add experimental `POETRY_REQUESTS_TIMEOUT` option ([#7081](https://github.com/python-poetry/poetry/pull/7081)).\n- Improve performance of wheel inspection by avoiding unnecessary file copy operations ([#7916](https://github.com/python-poetry/poetry/pull/7916)).\n\n### Changed\n\n- **Remove the old deprecated installer and the corresponding setting `experimental.new-installer`** ([#7356](https://github.com/python-poetry/poetry/pull/7356)).\n- **Introduce `priority` key for sources and deprecate flags `default` and `secondary`** ([#7658](https://github.com/python-poetry/poetry/pull/7658)).\n- Deprecate `poetry run <entry point>` if the entry point was not previously installed via `poetry install` ([#7606](https://github.com/python-poetry/poetry/pull/7606)).\n- Only write the lock file if the installation succeeds ([#7498](https://github.com/python-poetry/poetry/pull/7498)).\n- Do not write the unused package category into the lock file ([#7637](https://github.com/python-poetry/poetry/pull/7637)).\n\n### Fixed\n\n- Fix an issue where Poetry's internal pyproject.toml continually grows larger with empty lines ([#7705](https://github.com/python-poetry/poetry/pull/7705)).\n- Fix an issue where Poetry crashes due to corrupt cache files ([#7453](https://github.com/python-poetry/poetry/pull/7453)).\n- Fix an issue where the `Retry-After` in HTTP responses was not respected and retries were handled inconsistently ([#7072](https://github.com/python-poetry/poetry/pull/7072)).\n- Fix an issue where Poetry silently ignored invalid groups ([#7529](https://github.com/python-poetry/poetry/pull/7529)).\n- Fix an issue where Poetry does not find a compatible Python version if not given explicitly ([#7771](https://github.com/python-poetry/poetry/pull/7771)).\n- Fix an issue where the `direct_url.json` of an editable install from a git dependency was invalid ([#7473](https://github.com/python-poetry/poetry/pull/7473)).\n- Fix an issue where error messages from build backends were not decoded correctly ([#7781](https://github.com/python-poetry/poetry/pull/7781)).\n- Fix an infinite loop when adding certain dependencies ([#7405](https://github.com/python-poetry/poetry/pull/7405)).\n- Fix an issue where pre-commit hooks skip pyproject.toml files in subdirectories ([#7239](https://github.com/python-poetry/poetry/pull/7239)).\n- Fix an issue where pre-commit hooks do not use the expected Python version ([#6989](https://github.com/python-poetry/poetry/pull/6989)).\n- Fix an issue where an unclear error message is printed if the project name is the same as one of its dependencies ([#7757](https://github.com/python-poetry/poetry/pull/7757)).\n- Fix an issue where `poetry install` returns a zero exit status even though the build script failed ([#7812](https://github.com/python-poetry/poetry/pull/7812)).\n- Fix an issue where an existing `.venv` was not used if `in-project` was not set ([#7792](https://github.com/python-poetry/poetry/pull/7792)).\n- Fix an issue where multiple extras passed to `poetry add` were not parsed correctly ([#7836](https://github.com/python-poetry/poetry/pull/7836)).\n- Fix an issue where `poetry shell` did not send a newline to `fish` ([#7884](https://github.com/python-poetry/poetry/pull/7884)).\n- Fix an issue where `poetry update --lock` printed operations that were not executed ([#7915](https://github.com/python-poetry/poetry/pull/7915)).\n- Fix an issue where `poetry add --lock` did perform a full update of all dependencies ([#7920](https://github.com/python-poetry/poetry/pull/7920)).\n- Fix an issue where `poetry shell` did not work with `nushell` ([#7919](https://github.com/python-poetry/poetry/pull/7919)).\n- Fix an issue where subprocess calls failed on Python 3.7 ([#7932](https://github.com/python-poetry/poetry/pull/7932)).\n- Fix an issue where keyring was called even though the password was stored in an environment variable ([#7928](https://github.com/python-poetry/poetry/pull/7928)).\n\n### Docs\n\n- Add information about what to use instead of `--dev` ([#7647](https://github.com/python-poetry/poetry/pull/7647)).\n- Promote semantic versioning less aggressively ([#7517](https://github.com/python-poetry/poetry/pull/7517)).\n- Explain Poetry's own versioning scheme in the FAQ ([#7517](https://github.com/python-poetry/poetry/pull/7517)).\n- Update documentation for configuration with environment variables ([#6711](https://github.com/python-poetry/poetry/pull/6711)).\n- Add details how to disable the virtualenv prompt ([#7874](https://github.com/python-poetry/poetry/pull/7874)).\n- Improve documentation on whether to commit `poetry.lock` ([#7506](https://github.com/python-poetry/poetry/pull/7506)).\n- Improve documentation of `virtualenv.create` ([#7608](https://github.com/python-poetry/poetry/pull/7608)).\n\n### poetry-core ([`1.6.0`](https://github.com/python-poetry/poetry-core/releases/tag/1.6.0))\n\n- Improve error message for invalid markers ([#569](https://github.com/python-poetry/poetry-core/pull/569)).\n- Increase robustness when deleting temporary directories on Windows ([#460](https://github.com/python-poetry/poetry-core/pull/460)).\n- Replace `tomlkit` with `tomli`, which changes the interface of some _internal_ classes ([#483](https://github.com/python-poetry/poetry-core/pull/483)).\n- Deprecate `Package.category` ([#561](https://github.com/python-poetry/poetry-core/pull/561)).\n- Fix a performance regression in marker handling ([#568](https://github.com/python-poetry/poetry-core/pull/568)).\n- Fix an issue where wildcard version constraints were not handled correctly ([#402](https://github.com/python-poetry/poetry-core/pull/402)).\n- Fix an issue where `poetry build` created duplicate Python classifiers if they were specified manually ([#578](https://github.com/python-poetry/poetry-core/pull/578)).\n- Fix an issue where local versions where not handled correctly ([#579](https://github.com/python-poetry/poetry-core/pull/579)).\n\n\n## [1.4.2] - 2023-04-02\n\n### Changed\n\n- When trying to install wheels with invalid `RECORD` files, Poetry does not fail anymore but only prints a warning.\n  This mitigates an unintended change introduced in Poetry 1.4.1 ([#7694](https://github.com/python-poetry/poetry/pull/7694)).\n\n### Fixed\n\n- Fix an issue where relative git submodule urls were not parsed correctly ([#7017](https://github.com/python-poetry/poetry/pull/7017)).\n- Fix an issue where Poetry could freeze when building a project with a build script if it generated enough output to fill the OS pipe buffer ([#7699](https://github.com/python-poetry/poetry/pull/7699)).\n\n\n## [1.4.1] - 2023-03-19\n\n### Fixed\n\n- Fix an issue where `poetry install` did not respect the requirements for building editable dependencies ([#7579](https://github.com/python-poetry/poetry/pull/7579)).\n- Fix an issue where `poetry init` crashed due to bad input when adding packages interactively ([#7569](https://github.com/python-poetry/poetry/pull/7569)).\n- Fix an issue where `poetry install` ignored the `subdirectory` argument of git dependencies ([#7580](https://github.com/python-poetry/poetry/pull/7580)).\n- Fix an issue where installing packages with `no-binary` could result in a false hash mismatch ([#7594](https://github.com/python-poetry/poetry/pull/7594)).\n- Fix an issue where the hash of sdists was neither validated nor written to the `direct_url.json` during installation ([#7594](https://github.com/python-poetry/poetry/pull/7594)).\n- Fix an issue where `poetry install --sync` attempted to remove itself ([#7626](https://github.com/python-poetry/poetry/pull/7626)).\n- Fix an issue where wheels with non-normalized `dist-info` directory names could not be installed ([#7671](https://github.com/python-poetry/poetry/pull/7671)).\n- Fix an issue where `poetry install --compile` compiled with optimization level 1 ([#7666](https://github.com/python-poetry/poetry/pull/7666)).\n\n### Docs\n\n- Clarify the behavior of the `--extras` option ([#7563](https://github.com/python-poetry/poetry/pull/7563)).\n- Expand the FAQ on reasons for slow dependency resolution ([#7620](https://github.com/python-poetry/poetry/pull/7620)).\n\n### poetry-core ([`1.5.2`](https://github.com/python-poetry/poetry-core/releases/tag/1.5.2))\n\n- Fix an issue where wheels built on Windows could contain duplicate entries in the RECORD file ([#555](https://github.com/python-poetry/poetry-core/pull/555)).\n\n\n## [1.4.0] - 2023-02-27\n\n### Added\n\n- **Add a modern installer (`installer.modern-installation`) for faster installation of packages and independence from pip** ([#6205](https://github.com/python-poetry/poetry/pull/6205)).\n- Add support for `Private ::` trove classifiers ([#7271](https://github.com/python-poetry/poetry/pull/7271)).\n- Add the version of poetry in the `@generated` comment at the beginning of the lock file ([#7339](https://github.com/python-poetry/poetry/pull/7339)).\n- Add support for `virtualenvs.prefer-active-python` when running `poetry new` and `poetry init` ([#7100](https://github.com/python-poetry/poetry/pull/7100)).\n\n### Changed\n\n- **Deprecate the old installer, i.e. setting `experimental.new-installer` to `false`** ([#7358](https://github.com/python-poetry/poetry/pull/7358)).\n- Remove unused `platform` field from cached package info and bump the cache version ([#7304](https://github.com/python-poetry/poetry/pull/7304)).\n- Extra dependencies of the root project are now sorted in the lock file ([#7375](https://github.com/python-poetry/poetry/pull/7375)).\n- Remove upper boundary for `importlib-metadata` dependency ([#7434](https://github.com/python-poetry/poetry/pull/7434)).\n- Validate path dependencies during use instead of during construction ([#6844](https://github.com/python-poetry/poetry/pull/6844)).\n- Remove the deprecated `repository` modules ([#7468](https://github.com/python-poetry/poetry/pull/7468)).\n\n### Fixed\n\n- Fix an issue where an unconditional dependency of an extra was not installed in specific environments ([#7175](https://github.com/python-poetry/poetry/pull/7175)).\n- Fix an issue where a pre-release of a dependency was chosen even if a stable release fulfilled the constraint ([#7225](https://github.com/python-poetry/poetry/pull/7225), [#7236](https://github.com/python-poetry/poetry/pull/7236)).\n- Fix an issue where HTTP redirects were not handled correctly during publishing ([#7160](https://github.com/python-poetry/poetry/pull/7160)).\n- Fix an issue where `poetry check` did not handle the `-C, --directory` option correctly ([#7241](https://github.com/python-poetry/poetry/pull/7241)).\n- Fix an issue where the subdirectory information of a git dependency was not written to the lock file ([#7367](https://github.com/python-poetry/poetry/pull/7367)).\n- Fix an issue where the wrong Python version was selected when creating an virtual environment ([#7221](https://github.com/python-poetry/poetry/pull/7221)).\n- Fix an issue where packages that should be kept were uninstalled when calling `poetry install --sync` ([#7389](https://github.com/python-poetry/poetry/pull/7389)).\n- Fix an issue where an incorrect value was set for `sys.argv[0]` when running installed scripts ([#6737](https://github.com/python-poetry/poetry/pull/6737)).\n- Fix an issue where hashes in `direct_url.json` files were not written according to the specification ([#7475](https://github.com/python-poetry/poetry/pull/7475)).\n- Fix an issue where poetry commands failed due to special characters in the path of the project or virtual environment ([#7471](https://github.com/python-poetry/poetry/pull/7471)).\n- Fix an issue where poetry crashed with a `JSONDecodeError` when running a Python script that produced certain warnings ([#6665](https://github.com/python-poetry/poetry/pull/6665)).\n\n### Docs\n\n- Add advice on how to maintain a poetry plugin ([#6977](https://github.com/python-poetry/poetry/pull/6977)).\n- Update tox examples to comply with the latest tox release ([#7341](https://github.com/python-poetry/poetry/pull/7341)).\n- Mention that the `poetry export` can export `constraints.txt` files ([#7383](https://github.com/python-poetry/poetry/pull/7383)).\n- Add clarifications for moving configuration files ([#6864](https://github.com/python-poetry/poetry/pull/6864)).\n- Mention the different types of exact version specifications ([#7503](https://github.com/python-poetry/poetry/pull/7503)).\n\n### poetry-core ([`1.5.1`](https://github.com/python-poetry/poetry-core/releases/tag/1.5.1))\n\n- Improve marker handling ([#528](https://github.com/python-poetry/poetry-core/pull/528),\n  [#534](https://github.com/python-poetry/poetry-core/pull/534),\n  [#530](https://github.com/python-poetry/poetry-core/pull/530),\n  [#546](https://github.com/python-poetry/poetry-core/pull/546),\n  [#547](https://github.com/python-poetry/poetry-core/pull/547)).\n- Validate whether dependencies referenced in `extras` are defined in the main dependency group ([#542](https://github.com/python-poetry/poetry-core/pull/542)).\n- Poetry no longer generates a `setup.py` file in sdists by default ([#318](https://github.com/python-poetry/poetry-core/pull/318)).\n- Fix an issue where trailing newlines were allowed in `tool.poetry.description` ([#505](https://github.com/python-poetry/poetry-core/pull/505)).\n- Fix an issue where the name of the data folder in wheels was not normalized ([#532](https://github.com/python-poetry/poetry-core/pull/532)).\n- Fix an issue where the order of entries in the RECORD file was not deterministic ([#545](https://github.com/python-poetry/poetry-core/pull/545)).\n- Fix an issue where zero padding was not correctly handled in version comparisons ([#540](https://github.com/python-poetry/poetry-core/pull/540)).\n- Fix an issue where sdist builds did not support multiple READMEs ([#486](https://github.com/python-poetry/poetry-core/pull/486)).\n\n### poetry-plugin-export ([`^1.3.0`](https://github.com/python-poetry/poetry-plugin-export/releases/tag/1.3.0))\n\n- Fix an issue where the export failed if there was a circular dependency on the root package ([#118](https://github.com/python-poetry/poetry-plugin-export/pull/118)).\n\n\n## [1.3.2] - 2023-01-10\n\n### Fixed\n\n- Fix a performance regression when locking dependencies from PyPI ([#7232](https://github.com/python-poetry/poetry/pull/7232)).\n- Fix an issue where passing a relative path via `-C, --directory` fails ([#7266](https://github.com/python-poetry/poetry/pull/7266)).\n\n### Docs\n\n- Update docs to reflect the removal of the deprecated `get-poetry.py` installer from the repository ([#7288](https://github.com/python-poetry/poetry/pull/7288)).\n- Add clarifications for `virtualenvs.path` settings ([#7286](https://github.com/python-poetry/poetry/pull/7286)).\n\n\n## [1.3.1] - 2022-12-12\n\n### Fixed\n\n- Fix an issue where an explicit dependency on `lockfile` was missing, resulting in a broken Poetry in rare circumstances ([7169](https://github.com/python-poetry/poetry/pull/7169)).\n\n\n## [1.3.0] - 2022-12-09\n\n### Added\n\n- Mark the lock file with an `@generated` comment as used by common tooling ([#2773](https://github.com/python-poetry/poetry/pull/2773)).\n- `poetry check` validates trove classifiers and warns for deprecations ([#2881](https://github.com/python-poetry/poetry/pull/2881)).\n- Introduce a top level `-C, --directory` option to set the working path ([#6810](https://github.com/python-poetry/poetry/pull/6810)).\n\n### Changed\n\n- **New lock file format (version 2.0)** ([#6393](https://github.com/python-poetry/poetry/pull/6393)).\n- Path dependency metadata is unconditionally re-locked ([#6843](https://github.com/python-poetry/poetry/pull/6843)).\n- URL dependency hashes are locked ([#7121](https://github.com/python-poetry/poetry/pull/7121)).\n- `poetry update` and `poetry lock` should now resolve dependencies more similarly ([#6477](https://github.com/python-poetry/poetry/pull/6477)).\n- `poetry publish` will report more useful errors when a file does not exist ([#4417](https://github.com/python-poetry/poetry/pull/4417)).\n- `poetry add` will check for duplicate entries using canonical names ([#6832](https://github.com/python-poetry/poetry/pull/6832)).\n- Wheels are preferred to source distributions when gathering metadata ([#6547](https://github.com/python-poetry/poetry/pull/6547)).\n- Git dependencies of extras are only fetched if the extra is requested ([#6615](https://github.com/python-poetry/poetry/pull/6615)).\n- Invoke `pip` with `--no-input` to prevent hanging without feedback ([#6724](https://github.com/python-poetry/poetry/pull/6724), [#6966](https://github.com/python-poetry/poetry/pull/6966)).\n- Invoke `pip` with `--isolated` to prevent the influence of user configuration ([#6531](https://github.com/python-poetry/poetry/pull/6531)).\n- Interrogate environments with Python in isolated (`-I`) mode ([#6628](https://github.com/python-poetry/poetry/pull/6628)).\n- Raise an informative error when multiple version constraints overlap and are incompatible ([#7098](https://github.com/python-poetry/poetry/pull/7098)).\n\n### Fixed\n\n- **Fix an issue where concurrent instances of Poetry would corrupt the artifact cache** ([#6186](https://github.com/python-poetry/poetry/pull/6186)).\n- **Fix an issue where Poetry can hang after being interrupted due to stale locking in cache** ([#6471](https://github.com/python-poetry/poetry/pull/6471)).\n- Fix an issue where the output of commands executed with `--dry-run` contained duplicate entries ([#4660](https://github.com/python-poetry/poetry/pull/4660)).\n- Fix an issue where `requests`'s pool size did not match the number of installer workers ([#6805](https://github.com/python-poetry/poetry/pull/6805)).\n- Fix an issue where `poetry show --outdated` failed with a runtime error related to direct origin dependencies ([#6016](https://github.com/python-poetry/poetry/pull/6016)).\n- Fix an issue where only the last command of an `ApplicationPlugin` is registered ([#6304](https://github.com/python-poetry/poetry/pull/6304)).\n- Fix an issue where git dependencies were fetched unnecessarily when running `poetry lock --no-update` ([#6131](https://github.com/python-poetry/poetry/pull/6131)).\n- Fix an issue where stdout was polluted with messages that should go to stderr ([#6429](https://github.com/python-poetry/poetry/pull/6429)).\n- Fix an issue with `poetry shell` activation and zsh ([#5795](https://github.com/python-poetry/poetry/pull/5795)).\n- Fix an issue where a url dependencies were shown as outdated ([#6396](https://github.com/python-poetry/poetry/pull/6396)).\n- Fix an issue where the `source` field of a dependency with extras was ignored ([#6472](https://github.com/python-poetry/poetry/pull/6472)).\n- Fix an issue where a package from the wrong source was installed for a multiple-constraints dependency with different sources ([#6747](https://github.com/python-poetry/poetry/pull/6747)).\n- Fix an issue where dependencies from different sources where merged during dependency resolution ([#6679](https://github.com/python-poetry/poetry/pull/6679)).\n- Fix an issue where `experimental.system-git-client` could not be used via environment variable ([#6783](https://github.com/python-poetry/poetry/pull/6783)).\n- Fix an issue where Poetry fails with an `AssertionError` due to `distribution.files` being `None` ([#6788](https://github.com/python-poetry/poetry/pull/6788)).\n- Fix an issue where `poetry env info` did not respect `virtualenvs.prefer-active-python` ([#6986](https://github.com/python-poetry/poetry/pull/6986)).\n- Fix an issue where `poetry env list` does not list the in-project environment ([#6979](https://github.com/python-poetry/poetry/pull/6979)).\n- Fix an issue where `poetry env remove` removed the wrong environment ([#6195](https://github.com/python-poetry/poetry/pull/6195)).\n- Fix an issue where the return code of a script was not relayed as exit code ([#6824](https://github.com/python-poetry/poetry/pull/6824)).\n- Fix an issue where the solver could silently swallow `ValueError` ([#6790](https://github.com/python-poetry/poetry/pull/6790)).\n\n### Docs\n\n- Improve documentation of package sources ([#5605](https://github.com/python-poetry/poetry/pull/5605)).\n- Correct the default cache path on Windows ([#7012](https://github.com/python-poetry/poetry/pull/7012)).\n\n### poetry-core ([`1.4.0`](https://github.com/python-poetry/poetry-core/releases/tag/1.4.0))\n\n- The PEP 517 `metadata_directory` is now respected as an input to the `build_wheel` hook ([#487](https://github.com/python-poetry/poetry-core/pull/487)).\n- `ParseConstraintError` is now raised on version and constraint parsing errors, and includes information on the package that caused the error ([#514](https://github.com/python-poetry/poetry-core/pull/514)).\n- Fix an issue where invalid PEP 508 requirements were generated due to a missing space before semicolons ([#510](https://github.com/python-poetry/poetry-core/pull/510)).\n- Fix an issue where relative paths were encoded into package requirements, instead of a file:// URL as required by PEP 508 ([#512](https://github.com/python-poetry/poetry-core/pull/512)).\n\n### poetry-plugin-export ([`^1.2.0`](https://github.com/python-poetry/poetry-plugin-export/releases/tag/1.2.0))\n\n- Ensure compatibility with Poetry 1.3.0. No functional changes.\n\n### cleo ([`^2.0.0`](https://github.com/python-poetry/poetry-core/releases/tag/2.0.0))\n\n- Fix an issue where shell completions had syntax errors ([#247](https://github.com/python-poetry/cleo/pull/247)).\n- Fix an issue where not reading all the output of a command resulted in a \"Broken pipe\" error ([#165](https://github.com/python-poetry/cleo/pull/165)).\n- Fix an issue where errors were not shown in non-verbose mode ([#166](https://github.com/python-poetry/cleo/pull/166)).\n\n\n## [1.2.2] - 2022-10-10\n\n### Added\n\n- Add forward compatibility for lock file format 2.0, which will be used by Poetry 1.3 ([#6608](https://github.com/python-poetry/poetry/pull/6608)).\n\n### Changed\n\n- Allow `poetry lock` to re-generate the lock file when invalid or incompatible ([#6753](https://github.com/python-poetry/poetry/pull/6753)).\n\n### Fixed\n\n- Fix an issue where the deprecated JSON API was used to query PyPI for available versions of a package ([#6081](https://github.com/python-poetry/poetry/pull/6081)).\n- Fix an issue where versions were escaped wrongly when building the wheel name ([#6476](https://github.com/python-poetry/poetry/pull/6476)).\n- Fix an issue where the installation of dependencies failed if pip is a dependency and is updated in parallel to other dependencies ([#6582](https://github.com/python-poetry/poetry/pull/6582)).\n- Fix an issue where the names of extras were not normalized according to PEP 685 ([#6541](https://github.com/python-poetry/poetry/pull/6541)).\n- Fix an issue where sdist names were not normalized ([#6621](https://github.com/python-poetry/poetry/pull/6621)).\n- Fix an issue where invalid constraints, which are ignored, were only reported in a debug message instead of a warning ([#6730](https://github.com/python-poetry/poetry/pull/6730)).\n- Fix an issue where `poetry shell` was broken in git bash on Windows ([#6560](https://github.com/python-poetry/poetry/pull/6560)).\n\n### Docs\n\n- Rework the README and contribution docs ([#6552](https://github.com/python-poetry/poetry/pull/6552)).\n- Fix for inconsistent docs for multiple-constraint dependencies ([#6604](https://github.com/python-poetry/poetry/pull/6604)).\n- Rephrase plugin configuration ([#6557](https://github.com/python-poetry/poetry/pull/6557)).\n- Add a note about publishable repositories to `publish` ([#6641](https://github.com/python-poetry/poetry/pull/6641)).\n- Fix the path for lazy-loaded bash completion ([#6656](https://github.com/python-poetry/poetry/pull/6656)).\n- Fix a reference to the invalid option `--require` ([#6672](https://github.com/python-poetry/poetry/pull/6672)).\n- Add a PowerShell one-liner to the basic usage section ([#6683](https://github.com/python-poetry/poetry/pull/6683)).\n- Fix the minimum poetry version in the example for plugins ([#6739](https://github.com/python-poetry/poetry/pull/6739)).\n\n### poetry-core ([`1.3.2`](https://github.com/python-poetry/poetry-core/releases/tag/1.3.2))\n\n- Add `3.11` to the list of available Python versions ([#477](https://github.com/python-poetry/poetry-core/pull/477)).\n- Fix an issue where caret constraints of pre-releases with a major version of 0 resulted in an empty version range ([#475](https://github.com/python-poetry/poetry-core/pull/475)).\n\n### poetry-plugin-export ([`^1.1.2`](https://github.com/python-poetry/poetry-plugin-export/releases/tag/1.1.2))\n\n- Add support for exporting `constraints.txt` files ([#128](https://github.com/python-poetry/poetry-plugin-export/pull/128)).\n- Fix an issue where a relative path passed via `-o` was not interpreted relative to the current working directory ([#130](https://github.com/python-poetry/poetry-plugin-export/pull/130)).\n\n\n## [1.2.1] - 2022-09-16\n\n### Changed\n\n- Bump `poetry-core` to [`1.2.0`](https://github.com/python-poetry/poetry-core/releases/tag/1.2.0).\n- Bump `poetry-plugin-export` to [`^1.0.7`](https://github.com/python-poetry/poetry-plugin-export/releases/tag/1.0.7).\n\n### Fixed\n\n- Fix an issue where `poetry cache clear` did not respect the `-n/--no-interaction` flag ([#6338](https://github.com/python-poetry/poetry/pull/6338)).\n- Fix an issue where `poetry lock --no-update` updated dependencies from non-PyPI package sources ([#6335](https://github.com/python-poetry/poetry/pull/6335)).\n- Fix a `poetry install` performance regression by falling back to internal pip ([#6062](https://github.com/python-poetry/poetry/pull/6062)).\n- Fix an issue where a virtual environment was created unnecessarily when running `poetry export` ([#6282](https://github.com/python-poetry/poetry/pull/6282)).\n- Fix an issue where `poetry lock --no-update` added duplicate hashes to the lock file ([#6389](https://github.com/python-poetry/poetry/pull/6389)).\n- Fix an issue where `poetry install` fails because of missing hashes for `url` dependencies ([#6389](https://github.com/python-poetry/poetry/pull/6389)).\n- Fix an issue where Poetry was not able to update pip in Windows virtual environments ([#6430](https://github.com/python-poetry/poetry/pull/6430)).\n- Fix an issue where Poetry was not able to install releases that contained less common link types ([#5767](https://github.com/python-poetry/poetry/pull/5767)).\n- Fix a `poetry lock` performance regression when checking non-PyPI sources for yanked versions ([#6442](https://github.com/python-poetry/poetry/pull/6442)).\n- Fix an issue where `--no-cache` was not respected when running `poetry install` ([#6479](https://github.com/python-poetry/poetry/pull/6479)).\n- Fix an issue where deprecation warnings for `--dev` were missing ([#6475](https://github.com/python-poetry/poetry/pull/6475)).\n- Fix an issue where Git dependencies failed to clone when `insteadOf` was used in `.gitconfig` using the Dulwich Git client ([#6506](https://github.com/python-poetry/poetry/pull/6506)).\n- Fix an issue where no cache entry is found when calling `poetry cache clear` with a non-normalized package name ([#6537](https://github.com/python-poetry/poetry/pull/6537)).\n- Fix an invalid virtualenv constraint on Poetry ([#6402](https://github.com/python-poetry/poetry/pull/6402)).\n- Fix outdated build system requirements for Poetry ([#6509](https://github.com/python-poetry/poetry/pull/6509)).\n\n### Docs\n\n- Add missing path segment to paths used by install.python-poetry.org ([#6311](https://github.com/python-poetry/poetry/pull/6311)).\n- Add recommendations about how to install Poetry in a CI environment ([#6345](https://github.com/python-poetry/poetry/pull/6345)).\n- Fix examples for `--with` and `--without` ([#6318](https://github.com/python-poetry/poetry/pull/6318)).\n- Update configuration folder path for macOS ([#6395](https://github.com/python-poetry/poetry/pull/6395)).\n- Improve the description of the `virtualenv.create` option ([#6460](https://github.com/python-poetry/poetry/pull/6460)).\n- Clarify that `poetry install` removes dependencies of non-installed extras ([#6229](https://github.com/python-poetry/poetry/pull/6229)).\n- Add a note about `pre-commit autoupdate` and Poetry's hooks ([#6497](https://github.com/python-poetry/poetry/pull/6497)).\n\n\n## [1.2.0] - 2022-08-31\n\n### Docs\n\n- Added note about how to add a git dependency with a subdirectory ([#6218](https://github.com/python-poetry/poetry/pull/6218))\n- Fixed several style issues in the docs ([#6254](https://github.com/python-poetry/poetry/pull/6254))\n- Fixed outdated info about `--only` parameter ([#6263](https://github.com/python-poetry/poetry/pull/6263))\n\n\n## [1.2.0rc2] - 2022-08-26\n\n### Fixed\n\n- Fixed an issue where virtual environments were created unnecessarily when running `poetry self` commands ([#6225](https://github.com/python-poetry/poetry/pull/6225))\n- Ensure that packages' `pretty_name` are written to the lock file ([#6237](https://github.com/python-poetry/poetry/pull/6237))\n\n### Improvements\n\n- Improved the consistency of `Pool().remove_repository()` to make it easier to write poetry plugins ([#6214](https://github.com/python-poetry/poetry/pull/6214))\n\n### Docs\n\n- Removed mentions of Python 2.7 from docs ([#6234](https://github.com/python-poetry/poetry/pull/6234))\n- Added note about the difference between groups and extras ([#6230](https://github.com/python-poetry/poetry/pull/6230))\n\n\n## [1.2.0rc1] - 2022-08-22\n\n### Added\n\n- Added support for subdirectories in git dependencies ([#5172](https://github.com/python-poetry/poetry/pull/5172))\n- Added support for yanked releases and files (PEP-592) ([#5841](https://github.com/python-poetry/poetry/pull/5841))\n- Virtual environments can now be created even with empty project names ([#5856](https://github.com/python-poetry/poetry/pull/5856))\n- Added support for `nushell` in `poetry shell` ([#6063](https://github.com/python-poetry/poetry/pull/6063))\n\n### Changed\n\n- Poetry now falls back to gather metadata for dependencies via pep517 if parsing `pyproject.toml` fails ([#5834](https://github.com/python-poetry/poetry/pull/5834))\n- Replaced Poetry's helper method `canonicalize_name()` with `packaging.utils.canonicalize_name()` ([#6022](https://github.com/python-poetry/poetry/pull/6022))\n- Removed code for the `export` command, which is now provided via plugin ([#6128](https://github.com/python-poetry/poetry/pull/6128))\n- Extras and extras dependencies are now sorted in the lock file ([#6169](https://github.com/python-poetry/poetry/pull/6169))\n- Removed deprecated (1.2-only) CLI options ([#6210](https://github.com/python-poetry/poetry/pull/6210))\n\n### Fixed\n\n- Fixed an issue where symlinks in the lock file were not resolved ([#5850](https://github.com/python-poetry/poetry/pull/5850))\n- Fixed a `tomlkit` regression resulting in inconsistent line endings ([#5870](https://github.com/python-poetry/poetry/pull/5870))\n- Fixed an issue where the `POETRY_PYPI_TOKEN_PYPI` environment variable wasn't respected ([#5911](https://github.com/python-poetry/poetry/pull/5911))\n- Fixed an issue where neither Python nor a managed venv can be found, when using Python from MS Store ([#5931](https://github.com/python-poetry/poetry/pull/5931))\n- Improved error message of `poetry publish` in the event of an upload error ([#6043](https://github.com/python-poetry/poetry/pull/6043))\n- Fixed an issue where `poetry lock` fails without output ([#6058](https://github.com/python-poetry/poetry/pull/6058))\n- Fixed an issue where Windows drive mappings break virtual environment names ([#6110](https://github.com/python-poetry/poetry/pull/6110))\n- `tomlkit` versions with memory leak are now avoided ([#6160](https://github.com/python-poetry/poetry/pull/6160))\n- Fixed an infinite loop in the solver ([#6178](https://github.com/python-poetry/poetry/pull/6178))\n- Fixed an issue where latest version was used instead of locked one for vcs dependencies with extras ([#6185](https://github.com/python-poetry/poetry/pull/6185))\n\n### Docs\n\n- Document use of the `subdirectory` parameter ([#5949](https://github.com/python-poetry/poetry/pull/5949))\n- Document suggested `tox` config for different use cases ([#6026](https://github.com/python-poetry/poetry/pull/6026))\n\n\n## [1.1.15] - 2022-08-22\n\n### Changed\n\n- Poetry now fallback to gather metadata for dependencies via pep517 if parsing pyproject.toml fail ([#6206](https://github.com/python-poetry/poetry/pull/6206))\n- Extras and extras dependencies are now sorted in lock file ([#6207](https://github.com/python-poetry/poetry/pull/6207))\n\n\n## [1.2.0b3] - 2022-07-13\n\n**Important**: This release fixes a critical issue that prevented hashes from being retrieved when locking dependencies,\ndue to a breaking change on PyPI JSON API (see [#5972](https://github.com/python-poetry/poetry/pull/5972)\nand [the upstream change](https://github.com/pypi/warehouse/pull/11775) for more details).\n\nAfter upgrading, you have to clear Poetry cache manually to get that feature working correctly again:\n\n```bash\n$ poetry cache clear pypi --all\n```\n\n### Added\n\n- Added `--only-root` to `poetry install` to install a project without its\n  dependencies ([#5783](https://github.com/python-poetry/poetry/pull/5783))\n\n### Changed\n\n- Improved user experience of `poetry init` ([#5838](https://github.com/python-poetry/poetry/pull/5838))\n- Added default timeout for all HTTP requests, to avoid hanging\n  requests ([#5881](https://github.com/python-poetry/poetry/pull/5881))\n- Updated `poetry init` to better specify how to skip adding\n  dependencies ([#5946](https://github.com/python-poetry/poetry/pull/5946))\n- Updated Poetry repository names to avoid clashes with user-defined\n  repositories ([#5910](https://github.com/python-poetry/poetry/pull/5910))\n\n### Fixed\n\n- Fixed an issue where extras where not handled if they did not match the case-sensitive name of the\n  packages ([#4122](https://github.com/python-poetry/poetry/pull/4122))\n- Fixed configuration of `experimental.system-git-client` option\n  through `poetry config` ([#5818](https://github.com/python-poetry/poetry/pull/5818))\n- Fixed uninstallation of git dependencies on Windows ([#5836](https://github.com/python-poetry/poetry/pull/5836))\n- Fixed an issue where `~` was not correctly expanded\n  in `virtualenvs.path` ([#5848](https://github.com/python-poetry/poetry/pull/5848))\n- Fixed an issue where installing/locking dependencies would hang when setting an incorrect git\n  repository ([#5880](https://github.com/python-poetry/poetry/pull/5880))\n- Fixed an issue in `poetry publish` when keyring was not properly\n  configured ([#5889](https://github.com/python-poetry/poetry/pull/5889))\n- Fixed duplicated line output in console ([#5890](https://github.com/python-poetry/poetry/pull/5890))\n- Fixed an issue where the same wheels where downloaded multiple times during\n  installation ([#5871](https://github.com/python-poetry/poetry/pull/5871))\n- Fixed an issue where dependencies hashes could not be retrieved when locking due to a breaking change on PyPI JSON\n  API ([#5973](https://github.com/python-poetry/poetry/pull/5973))\n- Fixed an issue where a dependency with non-requested extras could not be installed if it is requested with extras by\n  another dependency ([#5770](https://github.com/python-poetry/poetry/pull/5770))\n- Updated git backend to correctly read local/global git config when using dulwich as a git\n  backend ([#5935](https://github.com/python-poetry/poetry/pull/5935))\n- Fixed an issue where optional dependencies where not correctly exported when defining\n  groups ([#5819](https://github.com/python-poetry/poetry/pull/5819))\n\n### Docs\n\n- Fixed configuration instructions for repositories\n  specification ([#5809](https://github.com/python-poetry/poetry/pull/5809))\n- Added a link to dependency specification\n  from `pyproject.toml` ([#5815](https://github.com/python-poetry/poetry/pull/5815))\n- Improved `zsh` autocompletion instructions ([#5859](https://github.com/python-poetry/poetry/pull/5859))\n- Improved installation and update documentations ([#5857](https://github.com/python-poetry/poetry/pull/5857))\n- Improved exact requirements documentation ([#5874](https://github.com/python-poetry/poetry/pull/5874))\n- Added documentation for `@` operator ([#5822](https://github.com/python-poetry/poetry/pull/5822))\n- Improved autocompletion documentation ([#5879](https://github.com/python-poetry/poetry/pull/5879))\n- Improved `scripts` definition documentation ([#5884](https://github.com/python-poetry/poetry/pull/5884))\n\n\n## [1.1.14] - 2022-07-08\n\n### Fixed\n\n- Fixed an issue where dependencies hashes could not be retrieved when locking due to a breaking change on PyPI JSON API ([#5973](https://github.com/python-poetry/poetry/pull/5973))\n\n\n## [1.2.0b2] - 2022-06-07\n\n### Added\n\n- Added support for multiple-constraint direct origin dependencies with the same\n  version ([#5715](https://github.com/python-poetry/poetry/pull/5715))\n- Added support disabling TLS verification for custom package sources via `poetry config certificates.<repository>.cert false` ([#5719](https://github.com/python-poetry/poetry/pull/5719)\n- Added new configuration (`virtualenvs.prompt`) to customize the prompt of the Poetry-managed virtual environment ([#5606](https://github.com/python-poetry/poetry/pull/5606))\n- Added progress indicator to `download_file` (used when downloading dists) ([#5451](https://github.com/python-poetry/poetry/pull/5451))\n- Added `--dry-run` to `poetry version` command ([#5603](https://github.com/python-poetry/poetry/pull/5603))\n- Added `--why` to `poetry show` ([#5444](https://github.com/python-poetry/poetry/pull/5444))\n- Added support for single page (html) repositories ([#5517](https://github.com/python-poetry/poetry/pull/5517))\n- Added support for PEP 508 strings when adding\n  dependencies via `poetry add` command ([#5554](https://github.com/python-poetry/poetry/pull/5554))\n- Added `--no-cache` as a global option ([#5519](https://github.com/python-poetry/poetry/pull/5519))\n- Added cert retrieval for HTTP requests made by Poetry ([#5320](https://github.com/python-poetry/poetry/pull/5320))\n- Added `--skip-existing` to `poetry publish` ([#2812](https://github.com/python-poetry/poetry/pull/2812))\n- Added `--all-extras` to `poetry install` ([#5452](https://github.com/python-poetry/poetry/pull/5452))\n- Added new `poetry self` sub-commands to manage plugins and/or system environment packages, eg: keyring backends ([#5450](https://github.com/python-poetry/poetry/pull/5450))\n- Added new configuration (`installer.no-binary`) to allow selection of non-binary distributions when installing a dependency ([#5609](https://github.com/python-poetry/poetry/pull/5609))\n\n### Changed\n\n- `poetry plugin` commands are now deprecated in favor of the more generic `poetry self`\n  commands ([#5450](https://github.com/python-poetry/poetry/pull/5450))\n- When creating new projects, Poetry no longer restricts README extensions to `md` and `rst` ([#5357](https://github.com/python-poetry/poetry/pull/5357))\n- Changed the provider to allow fallback to installed packages ([#5704](https://github.com/python-poetry/poetry/pull/5704))\n- Solver now correctly handles and prefers direct reference constraints (vcs, file etc.) over public version identifiers ([#5654](https://github.com/python-poetry/poetry/pull/5654))\n- Changed the build script behavior to create an ephemeral build environment when a build script is\n  specified ([#5401](https://github.com/python-poetry/poetry/pull/5401))\n- Improved performance when determining PEP 517 metadata from sources ([#5601](https://github.com/python-poetry/poetry/pull/5601))\n- Project package sources no longer need to be redefined as global repositories when configuring credentials ([#5563](https://github.com/python-poetry/poetry/pull/5563))\n- Replaced external git command use with dulwich, in order to force the legacy behaviour set `experimental.system-git-client` configuration to `true` ([#5428](https://github.com/python-poetry/poetry/pull/5428))\n- Improved http request handling for sources and multiple paths on same netloc ([#5518](https://github.com/python-poetry/poetry/pull/5518))\n- Made `no-pip` and `no-setuptools` configuration explicit ([#5455](https://github.com/python-poetry/poetry/pull/5455))\n- Improved application logging, use of `-vv` now provides more debug information ([#5503](https://github.com/python-poetry/poetry/pull/5503))\n- Renamed implicit group `default` to `main` ([#5465](https://github.com/python-poetry/poetry/pull/5465))\n- Replaced in-tree implementation of `poetry export`\n  with `poetry-plugin-export` ([#5413](https://github.com/python-poetry/poetry/pull/5413))\n- Changed the password manager behavior to use a `\"null\"` keyring when\n  disabled ([#5251](https://github.com/python-poetry/poetry/pull/5251))\n- Incremental improvement of Solver performance ([#5335](https://github.com/python-poetry/poetry/pull/5335))\n- Newly created virtual environments on macOS now are excluded from Time Machine backups ([#4599](https://github.com/python-poetry/poetry/pull/4599))\n- Poetry no longer raises an exception when a package is not found on PyPI ([#5698](https://github.com/python-poetry/poetry/pull/5698))\n- Update `packaging` dependency to use major version 21, this change forces Poetry to drop support for managing Python 2.7 environments ([#4749](https://github.com/python-poetry/poetry/pull/4749))\n\n### Fixed\n\n- Fixed `poetry update --dry-run` to not modify `poetry.lock` ([#5718](https://github.com/python-poetry/poetry/pull/5718), [#3666](https://github.com/python-poetry/poetry/issues/3666), [#3766](https://github.com/python-poetry/poetry/issues/3766))\n- Fixed [#5537](https://github.com/python-poetry/poetry/issues/5537) where export fails to resolve dependencies with more than one\n  path ([#5688](https://github.com/python-poetry/poetry/pull/5688))\n- Fixed an issue where the environment variables `POETRY_CONFIG_DIR` and `POETRY_CACHE_DIR` were not being respected ([#5672](https://github.com/python-poetry/poetry/pull/5672))\n- Fixed [#3628](https://github.com/python-poetry/poetry/issues/3628) and [#4702](https://github.com/python-poetry/poetry/issues/4702) by handling invalid distributions\n  gracefully ([#5645](https://github.com/python-poetry/poetry/pull/5645))\n- Fixed an issue where the provider ignored subdirectory when merging and improve subdirectory support for vcs\n  deps ([#5648](https://github.com/python-poetry/poetry/pull/5648))\n- Fixed an issue where users could not select an empty choice when selecting\n  dependencies ([#4606](https://github.com/python-poetry/poetry/pull/4606))\n- Fixed an issue where `poetry init -n` crashes in a root directory ([#5612](https://github.com/python-poetry/poetry/pull/5612))\n- Fixed an issue where Solver errors arise due to wheels having different Python\n  constraints ([#5616](https://github.com/python-poetry/poetry/pull/5616))\n- Fixed an issue where editable path dependencies using `setuptools` could not be correctly installed ([#5590](https://github.com/python-poetry/poetry/pull/5590))\n- Fixed flicker when displaying executor operations ([#5556](https://github.com/python-poetry/poetry/pull/5556))\n- Fixed an issue where the `poetry lock --no-update` only sorted by name and not by name and\n  version ([#5446](https://github.com/python-poetry/poetry/pull/5446))\n- Fixed an issue where the Solver fails when a dependency has multiple constrained dependency definitions for the same\n  package ([#5403](https://github.com/python-poetry/poetry/pull/5403))\n- Fixed an issue where dependency resolution takes a while because Poetry checks all possible combinations\n  even markers are mutually exclusive ([#4695](https://github.com/python-poetry/poetry/pull/4695))\n- Fixed incorrect version selector constraint ([#5500](https://github.com/python-poetry/poetry/pull/5500))\n- Fixed an issue where `poetry lock --no-update` dropped\n  packages ([#5435](https://github.com/python-poetry/poetry/pull/5435))\n- Fixed an issue where packages were incorrectly grouped when\n  exporting ([#5156](https://github.com/python-poetry/poetry/pull/5156))\n- Fixed an issue where lockfile always updates when using private\n  sources ([#5362](https://github.com/python-poetry/poetry/pull/5362))\n- Fixed an issue where the solver did not account for selected package features ([#5305](https://github.com/python-poetry/poetry/pull/5305))\n- Fixed an issue with console script execution of editable dependencies on Windows ([#3339](https://github.com/python-poetry/poetry/pull/3339))\n- Fixed an issue where editable builder did not write PEP-610 metadata ([#5703](https://github.com/python-poetry/poetry/pull/5703))\n- Fixed an issue where Poetry 1.1 lock files were incorrectly identified as not fresh ([#5458](https://github.com/python-poetry/poetry/pull/5458))\n\n### Docs\n\n- Updated plugin management commands ([#5450](https://github.com/python-poetry/poetry/pull/5450))\n- Added the `--readme` flag to documentation ([#5357](https://github.com/python-poetry/poetry/pull/5357))\n- Added example for multiple maintainers ([#5661](https://github.com/python-poetry/poetry/pull/5661))\n- Updated documentation for issues [#4800](https://github.com/python-poetry/poetry/issues/4800), [#3709](https://github.com/python-poetry/poetry/issues/3709), [#3573](https://github.com/python-poetry/poetry/issues/3573), [#2211](https://github.com/python-poetry/poetry/issues/2211) and [#2414](https://github.com/python-poetry/poetry/pull/2414) ([#5656](https://github.com/python-poetry/poetry/pull/5656))\n- Added `poetry.toml` note in configuration ([#5492](https://github.com/python-poetry/poetry/pull/5492))\n- Add documentation for `poetry about`, `poetry help`, `poetrylist`, and the `--full-path` and `--all` options\n  documentation ([#5664](https://github.com/python-poetry/poetry/pull/5664))\n- Added more clarification to the `--why` flag ([#5653](https://github.com/python-poetry/poetry/pull/5653))\n- Updated documentation to refer to PowerShell for Windows, including\n  instructions ([#3978](https://github.com/python-poetry/poetry/pull/3978), [#5618](https://github.com/python-poetry/poetry/pull/5618))\n- Added PEP 508 name requirement ([#5642](https://github.com/python-poetry/poetry/pull/5642))\n- Added example for each section of pyproject.toml ([#5585](https://github.com/python-poetry/poetry/pull/5642))\n- Added documentation for `--local` to fix issue [#5623](https://github.com/python-poetry/poetry/issues/5623) ([#5629](https://github.com/python-poetry/poetry/pull/5629))\n- Added troubleshooting documentation for using proper quotation with\n  ZSH ([#4847](https://github.com/python-poetry/poetry/pull/4847))\n- Added information on git and basic http auth ([#5578](https://github.com/python-poetry/poetry/pull/5578))\n- Removed ambiguity about PEP 440 and semver ([#5576](https://github.com/python-poetry/poetry/pull/5576))\n- Removed Pipenv comparison ([#5561](https://github.com/python-poetry/poetry/pull/5561))\n- Improved dependency group related documentation ([#5338](https://github.com/python-poetry/poetry/pull/5338))\n- Added documentation for default directories used by Poetry ([#5391](https://github.com/python-poetry/poetry/pull/5301))\n- Added warning about credentials preserved in shell history ([#5726](https://github.com/python-poetry/poetry/pull/5726))\n- Improved documentation of the `readme` option, including multiple files and additional formats ([#5158](https://github.com/python-poetry/poetry/pull/5158))\n- Improved contributing documentation ([#5708](https://github.com/python-poetry/poetry/pull/5708))\n- Remove all references to `--dev-only` option ([#5771](https://github.com/python-poetry/poetry/pull/5771))\n\n\n## [1.2.0b1] - 2022-03-17\n\n### Fixed\n\n- Fixed an issue where the system environment couldn't be detected ([#4406](https://github.com/python-poetry/poetry/pull/4406)).\n- Fixed another issue where the system environment couldn't be detected ([#4433](https://github.com/python-poetry/poetry/pull/4433)).\n- Replace deprecated requests parameter in uploader ([#4580](https://github.com/python-poetry/poetry/pull/4580)).\n- Fix an issue where venv are detected as broken when using MSys2 on windows ([#4482](https://github.com/python-poetry/poetry/pull/4482)).\n- Fixed an issue where the cache breaks on windows ([#4531](https://github.com/python-poetry/poetry/pull/4531)).\n- Fixed an issue where a whitespace before a semicolon was missing on `poetry export` ([#4575](https://github.com/python-poetry/poetry/issues/4575)).\n- Fixed an issue where markers were not correctly assigned to nested dependencies ([#3511](https://github.com/python-poetry/poetry/issues/3511)).\n- Recognize one digit version in wheel filenames ([#3338](https://github.com/python-poetry/poetry/pull/3338)).\n- Fixed an issue when `locale` is unset ([#4038](https://github.com/python-poetry/poetry/pull/4038)).\n- Fixed an issue where the fallback to another interpreter didn't work ([#3475](https://github.com/python-poetry/poetry/pull/3475)).\n- Merge any marker constraints into constraints with specific markers ([#4590](https://github.com/python-poetry/poetry/pull/4590)).\n- Normalize path before hashing so that the generated venv name is independent of case on Windows ([#4813](https://github.com/python-poetry/poetry/pull/4813)).\n- Fixed an issue where a dependency wasn't upgrade by using `@latest` on `poetry update` ([#4945](https://github.com/python-poetry/poetry/pull/4945)).\n- Fixed an issue where conda envs in windows are always reported as broken([#5007](https://github.com/python-poetry/poetry/pull/5007)).\n- Fixed an issue where Poetry doesn't find its own venv on `poetry self update` ([#5049](https://github.com/python-poetry/poetry/pull/5049)).\n- Fix misuse of pretty_constraint ([#4932](https://github.com/python-poetry/poetry/pull/4932)).\n- Fixed an issue where the reported python version used for venv creation wasn't correct ([#5086](https://github.com/python-poetry/poetry/pull/5086)).\n- Fixed an issue where the searched package wasn't display in the interactive dialog of `poetry init` ([#5076](https://github.com/python-poetry/poetry/pull/5076)).\n- Fixed an issue where Poetry raises an exception on `poetry show` when no lock files exists ([#5242](https://github.com/python-poetry/poetry/pull/5242)).\n- Fixed an issue where Poetry crashes when optional `vcs_info.requested_version` in `direct_url.json` wasn't included ([#5274](https://github.com/python-poetry/poetry/pull/5274)).\n- Fixed an issue where dependencies with extras were updated despite using `--no-update` ([#4618](https://github.com/python-poetry/poetry/pull/4618)).\n- Fixed various places where poetry writes messages to stdout instead of stderr ([#4110](https://github.com/python-poetry/poetry/pull/4110), [#5179](https://github.com/python-poetry/poetry/pull/5179)).\n- Ensured that when complete packages are created dependency inherits source and resolved refs from package ([#4604](https://github.com/python-poetry/poetry/pull/4604)).\n- Ensured that when complete packages are created dependency inherits subdirectory from package if supported ([#4604](https://github.com/python-poetry/poetry/pull/4604)).\n- Fixed an issue where `POETRY_EXPERIMENTAL_NEW_INSTALLER` needs to be set to an empty string to disable it ([#3811](https://github.com/python-poetry/poetry/pull/3811)).\n\n### Added\n\n- `poetry show <package>` now also shows which packages depend on it ([#2351](https://github.com/python-poetry/poetry/pull/2351)).\n- The info dialog by `poetry about` now contains version information about installed poetry and poetry-core ([#5288](https://github.com/python-poetry/poetry/pull/5288)).\n- Print error message when `poetry publish` fails ([#3549](https://github.com/python-poetry/poetry/pull/3549)).\n- Added in info output to `poetry lock --check` ([#5081](https://github.com/python-poetry/poetry/pull/5081)).\n- Added new argument `--all` for `poetry env remove` to delete all venv of a project at once ([#3212](https://github.com/python-poetry/poetry/pull/3212)).\n- Added new argument `--without-urls` for `poetry export` to exclude source repository urls from the exported file ([#4763](https://github.com/python-poetry/poetry/pull/4763)).\n- Added a new `installer.max-workers` property to the configuration ([#3516](https://github.com/python-poetry/poetry/pull/3516)).\n- Added experimental option `virtualenvs.prefer-active-python` to detect current activated python ([#4852](https://github.com/python-poetry/poetry/pull/4852)).\n- Added better windows shell support ([#5053](https://github.com/python-poetry/poetry/pull/5053)).\n\n### Changed\n\n- Drop python3.6 support ([#5055](https://github.com/python-poetry/poetry/pull/5055)).\n- Exit with callable return code in generated script ([#4456](https://github.com/python-poetry/poetry/pull/4456)).\n- Internal use of the `pep517` high level interfaces for package metadata inspections have been replaced with the `build` package. ([#5155](https://github.com/python-poetry/poetry/pull/5155)).\n- Poetry now raises an error if the python version in the project environment is no longer compatible with the project ([#4520](https://github.com/python-poetry/poetry/pull/4520)).\n\n\n## [1.1.13] - 2022-02-10\n\n### Fixed\n\n- Fixed an issue where envs in MSYS2 always reported as broken ([#4942](https://github.com/python-poetry/poetry/pull/4942))\n- Fixed an issue where conda envs in windows are always reported as broken([#5008](https://github.com/python-poetry/poetry/pull/5008))\n- Fixed an issue where Poetry doesn't find its own venv on `poetry self update` ([#5048](https://github.com/python-poetry/poetry/pull/5048))\n\n\n## [1.1.12] - 2021-11-27\n\n### Fixed\n\n- Fixed broken caches on Windows due to `Path` starting with a slash ([#4549](https://github.com/python-poetry/poetry/pull/4549))\n- Fixed `JSONDecodeError` when installing packages by updating `cachecontrol` version ([#4831](https://github.com/python-poetry/poetry/pull/4831))\n- Fixed dropped markers in dependency walk ([#4686](https://github.com/python-poetry/poetry/pull/4686))\n\n\n## [1.1.11] - 2021-10-04\n\n### Fixed\n\n- Fixed errors when installing packages on Python 3.10. ([#4592](https://github.com/python-poetry/poetry/pull/4592))\n- Fixed an issue where the wrong `git` executable could be used on Windows. ([python-poetry/poetry-core#213](https://github.com/python-poetry/poetry-core/pull/213))\n- Fixed an issue where the Python 3.10 classifier was not automatically added. ([python-poetry/poetry-core#215](https://github.com/python-poetry/poetry-core/pull/215))\n\n\n## [1.1.10] - 2021-09-21\n\n### Fixed\n\n- Fixed an issue where non-sha256 hashes were not checked. ([#4529](https://github.com/python-poetry/poetry/pull/4529))\n\n\n## [1.1.9] - 2021-09-18\n\n### Fixed\n\n- Fixed a security issue where file hashes were not checked prior to installation. ([#4420](https://github.com/python-poetry/poetry/pull/4420), [#4444](https://github.com/python-poetry/poetry/pull/4444), [python-poetry/poetry-core#193](https://github.com/python-poetry/poetry-core/pull/193))\n- Fixed the detection of the system environment when the setting `virtualenvs.create` is deactivated. ([#4507](https://github.com/python-poetry/poetry/pull/4507))\n- Fixed an issue where unsafe parameters could be passed to `git` commands. ([python-poetry/poetry-core#203](https://github.com/python-poetry/poetry-core/pull/203))\n- Fixed an issue where the wrong `git` executable could be used on Windows. ([python-poetry/poetry-core#205](https://github.com/python-poetry/poetry-core/pull/205))\n\n\n## [1.1.8] - 2021-08-19\n\n### Fixed\n\n- Fixed an error with repository prioritization when specifying secondary repositories. ([#4241](https://github.com/python-poetry/poetry/pull/4241))\n- Fixed the detection of the system environment when the setting `virtualenvs.create` is deactivated. ([#4330](https://github.com/python-poetry/poetry/pull/4330), [#4407](https://github.com/python-poetry/poetry/pull/4407))\n- Fixed the evaluation of relative path dependencies. ([#4246](https://github.com/python-poetry/poetry/pull/4246))\n- Fixed environment detection for Python 3.10 environments. ([#4387](https://github.com/python-poetry/poetry/pull/4387))\n- Fixed an error in the evaluation of `in/not in` markers ([python-poetry/poetry-core#189](https://github.com/python-poetry/poetry-core/pull/189))\n\n\n## [1.2.0a2] - 2021-08-01\n\n### Added\n\n- Poetry now supports dependency groups. ([#4260](https://github.com/python-poetry/poetry/pull/4260))\n- The `install` command now supports a `--sync` option to synchronize the environment with the lock file. ([#4336](https://github.com/python-poetry/poetry/pull/4336))\n\n### Changed\n\n- Improved the way credentials are retrieved to better support keyring backends. ([#4086](https://github.com/python-poetry/poetry/pull/4086))\n- The `--remove-untracked` option of the `install` command is now deprecated in favor of the new `--sync` option. ([#4336](https://github.com/python-poetry/poetry/pull/4336))\n- The user experience when installing dependency groups has been improved. ([#4336](https://github.com/python-poetry/poetry/pull/4336))\n\n### Fixed\n\n- Fixed performance issues when resolving dependencies. ([#3839](https://github.com/python-poetry/poetry/pull/3839))\n- Fixed an issue where transitive dependencies of directory or VCS dependencies were not installed or otherwise removed. ([#4202](https://github.com/python-poetry/poetry/pull/4202))\n- Fixed the behavior of the `init` command in non-interactive mode. ([#2899](https://github.com/python-poetry/poetry/pull/2899))\n- Fixed the detection of the system environment when the setting `virtualenvs.create` is deactivated. ([#4329](https://github.com/python-poetry/poetry/pull/4329))\n- Fixed the display of possible solutions for some common errors. ([#4332](https://github.com/python-poetry/poetry/pull/4332))\n\n\n## [1.1.7] - 2021-06-25\n\n**Note**: Lock files might need to be regenerated for the first fix below to take effect.\nYou can use `poetry lock` to do so **without** the `--no-update` option.\n\n### Changed\n\n- This release is compatible with the `install-poetry.py` installation script to ease the migration path from `1.1` releases to `1.2` releases. ([#4192](https://github.com/python-poetry/poetry/pull/4192))\n\n### Fixed\n\n- Fixed an issue where transitive dependencies of directory or VCS dependencies were not installed or otherwise removed. ([#4203](https://github.com/python-poetry/poetry/pull/4203))\n- Fixed an issue where the combination of the `--tree` and `--no-dev` options for the show command was still displaying development dependencies. ([#3992](https://github.com/python-poetry/poetry/pull/3992))\n\n## [1.2.0a1] - 2021-05-21\n\nThis release is the first testing release of the upcoming 1.2.0 version.\n\nIt **drops** support for Python 2.7 and 3.5.\n\n### Added\n\n- Poetry now supports a plugin system to alter or expand Poetry's functionality. ([#3733](https://github.com/python-poetry/poetry/pull/3733))\n- Poetry now supports [PEP 610](https://www.python.org/dev/peps/pep-0610/). ([#3876](https://github.com/python-poetry/poetry/pull/3876))\n- Several configuration options to better control the way virtual environments are created are now available. ([#3157](https://github.com/python-poetry/poetry/pull/3157), [#3711](https://github.com/python-poetry/poetry/pull/3711)).\n- The `new` command now supports namespace packages. ([#2768](https://github.com/python-poetry/poetry/pull/2768))\n- The `add` command now supports the `--editable` option to add packages in editable mode. ([#3940](https://github.com/python-poetry/poetry/pull/3940))\n\n### Changed\n\n- Python 2.7 and 3.5 are no longer supported. ([#3405](https://github.com/python-poetry/poetry/pull/3405))\n- The usage of the `get-poetry.py` script is now deprecated and is replaced by the `install-poetry.py` script. ([#3706](https://github.com/python-poetry/poetry/pull/3706))\n- Directory dependencies are now in non-develop mode by default. ([poetry-core#98](https://github.com/python-poetry/poetry-core/pull/98))\n- Improved support for PEP 440 specific versions that do not abide by semantic versioning. ([poetry-core#140](https://github.com/python-poetry/poetry-core/pull/140))\n- Improved the CLI experience and performance by migrating to the latest version of Cleo. ([#3618](https://github.com/python-poetry/poetry/pull/3618))\n- Packages previously considered as unsafe (`pip`, `setuptools`, `wheels` and `distribute`) can now be managed as any other package. ([#2826](https://github.com/python-poetry/poetry/pull/2826))\n- The `new` command now defaults to the Markdown format for README files. ([#2768](https://github.com/python-poetry/poetry/pull/2768))\n\n### Fixed\n\n- Fixed an error where command line options were not taken into account when using the `run` command. ([#3618](https://github.com/python-poetry/poetry/pull/3618))\n- Fixed an error in the way custom repositories were resolved. ([#3406](https://github.com/python-poetry/poetry/pull/3406))\n\n\n## [1.1.6] - 2021-04-14\n\n### Fixed\n\n- Fixed export format for path dependencies. ([#3121](https://github.com/python-poetry/poetry/pull/3121))\n- Fixed errors caused by environment modification when executing some commands. ([#3253](https://github.com/python-poetry/poetry/pull/3253))\n- Fixed handling of wheel files with single-digit versions. ([#3338](https://github.com/python-poetry/poetry/pull/3338))\n- Fixed an error when handling single-digit Python markers. ([poetry-core#156](https://github.com/python-poetry/poetry-core/pull/156))\n- Fixed dependency markers not being properly copied when changing the constraint leading to resolution errors. ([poetry-core#163](https://github.com/python-poetry/poetry-core/pull/163))\n- Fixed an error where VCS dependencies were always updated. ([#3947](https://github.com/python-poetry/poetry/pull/3947))\n- Fixed an error where the incorrect version of a package was locked when using environment markers. ([#3945](https://github.com/python-poetry/poetry/pull/3945))\n\n\n## [1.1.5] - 2021-03-04\n\n### Fixed\n\n- Fixed an error in the `export` command when no lock file existed and a verbose flag was passed to the command. ([#3310](https://github.com/python-poetry/poetry/pull/3310))\n- Fixed an error where the `pyproject.toml` was not reverted when using the `add` command. ([#3622](https://github.com/python-poetry/poetry/pull/3622))\n- Fixed errors when using non-HTTPS indices. ([#3622](https://github.com/python-poetry/poetry/pull/3622))\n- Fixed errors when handling simple indices redirection. ([#3622](https://github.com/python-poetry/poetry/pull/3622))\n- Fixed errors when trying to handle newer wheels by using the latest version of `poetry-core` and `packaging`. ([#3677](https://github.com/python-poetry/poetry/pull/3677))\n- Fixed an error when using some versions of `poetry-core` due to an incorrect import . ([#3696](https://github.com/python-poetry/poetry/pull/3696))\n\n\n## [1.1.4] - 2020-10-23\n\n### Added\n\n- Added `installer.parallel` boolean flag (defaults to `true`) configuration to enable/disable parallel execution of operations when using the new installer. ([#3088](https://github.com/python-poetry/poetry/pull/3088))\n\n### Changed\n\n- When using system environments as an unprivileged user, user site and bin directories are created if they do not already exist. ([#3107](https://github.com/python-poetry/poetry/pull/3107))\n\n### Fixed\n\n- Fixed editable installation of poetry projects when using system environments. ([#3107](https://github.com/python-poetry/poetry/pull/3107))\n- Fixed locking of nested extra activations. If you were affected by this issue, you will need to regenerate the lock file using `poetry lock --no-update`. ([#3229](https://github.com/python-poetry/poetry/pull/3229))\n- Fixed prioritisation of non-default custom package sources. ([#3251](https://github.com/python-poetry/poetry/pull/3251))\n- Fixed detection of installed editable packages when non-poetry managed `.pth` file exists. ([#3210](https://github.com/python-poetry/poetry/pull/3210))\n- Fixed scripts generated by editable builder to use valid import statements. ([#3214](https://github.com/python-poetry/poetry/pull/3214))\n- Fixed recursion error when locked dependencies contain cyclic dependencies. ([#3237](https://github.com/python-poetry/poetry/pull/3237))\n- Fixed propagation of editable flag for VCS dependencies. ([#3264](https://github.com/python-poetry/poetry/pull/3264))\n\n\n## [1.1.3] - 2020-10-14\n\n### Changed\n\n- Python version support deprecation warning is now written to `stderr`. ([#3131](https://github.com/python-poetry/poetry/pull/3131))\n\n### Fixed\n\n- Fixed `KeyError` when `PATH` is not defined in environment variables. ([#3159](https://github.com/python-poetry/poetry/pull/3159))\n- Fixed error when using `config` command in a directory with an existing `pyproject.toml` without any Poetry configuration. ([#3172](https://github.com/python-poetry/poetry/pull/3172))\n- Fixed incorrect inspection of package requirements when same dependency is specified multiple times with unique markers. ([#3147](https://github.com/python-poetry/poetry/pull/3147))\n- Fixed `show` command to use already resolved package metadata. ([#3117](https://github.com/python-poetry/poetry/pull/3117))\n- Fixed multiple issues with `export` command output when using `requirements.txt` format. ([#3119](https://github.com/python-poetry/poetry/pull/3119))\n\n\n## [1.1.2] - 2020-10-06\n\n### Changed\n\n- Dependency installation of editable packages and all uninstall operations are now performed serially within their corresponding priority groups. ([#3099](https://github.com/python-poetry/poetry/pull/3099))\n- Improved package metadata inspection of nested poetry projects within project path dependencies. ([#3105](https://github.com/python-poetry/poetry/pull/3105))\n\n### Fixed\n\n- Fixed export of `requirements.txt` when project dependency contains git dependencies. ([#3100](https://github.com/python-poetry/poetry/pull/3100))\n\n\n## [1.1.1] - 2020-10-05\n\n### Added\n\n- Added `--no-update` option to `lock` command. ([#3034](https://github.com/python-poetry/poetry/pull/3034))\n\n### Fixed\n\n- Fixed resolution of packages with missing required extras. ([#3035](https://github.com/python-poetry/poetry/pull/3035))\n- Fixed export of `requirements.txt` dependencies to include development dependencies. ([#3024](https://github.com/python-poetry/poetry/pull/3024))\n- Fixed incorrect selection of unsupported binary distribution formats when selecting a package artifact to install. ([#3058](https://github.com/python-poetry/poetry/pull/3058))\n- Fixed incorrect use of system executable when building package distributions via `build` command. ([#3056](https://github.com/python-poetry/poetry/pull/3056))\n- Fixed errors in `init` command when specifying `--dependency` in non-interactive mode when a `pyproject.toml` file already exists. ([#3076](https://github.com/python-poetry/poetry/pull/3076))\n- Fixed incorrect selection of configured source url when a publish repository url configuration with the same name already exists. ([#3047](https://github.com/python-poetry/poetry/pull/3047))\n- Fixed dependency resolution issues when the same package is specified in multiple dependency extras. ([#3046](https://github.com/python-poetry/poetry/pull/3046))\n\n\n## [1.1.0] - 2020-10-01\n\n### Changed\n\n- The `init` command will now use existing `pyproject.toml` if possible ([#2448](https://github.com/python-poetry/poetry/pull/2448)).\n- Error messages when metadata information retrieval fails have been improved  ([#2997](https://github.com/python-poetry/poetry/pull/2997)).\n\n### Fixed\n\n- Fixed parsing of version constraint for `rc` prereleases ([#2978](https://github.com/python-poetry/poetry/pull/2978)).\n- Fixed how some metadata information are extracted from `setup.cfg` files ([#2957](https://github.com/python-poetry/poetry/pull/2957)).\n- Fixed return codes returned by the executor ([#2981](https://github.com/python-poetry/poetry/pull/2981)).\n- Fixed whitespaces not being accepted for the list of extras when adding packages ([#2985](https://github.com/python-poetry/poetry/pull/2985)).\n- Fixed repositories specified in the `pyproject.toml` file not being taken into account for authentication when downloading packages ([#2990](https://github.com/python-poetry/poetry/pull/2990)).\n- Fixed permission errors when installing the root project if the `site-packages` directory is not writeable ([#3002](https://github.com/python-poetry/poetry/pull/3002)).\n- Fixed environment marker propagation when exporting to the `requirements.txt` format ([#3002](https://github.com/python-poetry/poetry/pull/3002)).\n- Fixed errors when paths in run command contained spaces ([#3015](https://github.com/python-poetry/poetry/pull/3015)).\n\n\n## [1.1.0rc1] - 2020-09-25\n\n### Changed\n\n- The `virtualenvs.in-project` setting will now always be honored, if set explicitly, regardless of the presence of a `.venv` directory ([#2771](https://github.com/python-poetry/poetry/pull/2771)).\n- Adding packages already present in the `pyproject.toml` file will no longer raise an error ([#2886](https://github.com/python-poetry/poetry/pull/2886)).\n- Errors when authenticating against custom repositories will now be logged ([#2577](https://github.com/python-poetry/poetry/pull/2577)).\n\n### Fixed\n\n- Fixed an error on Python 3.5 when resolving URL dependencies ([#2954](https://github.com/python-poetry/poetry/pull/2954)).\n- Fixed the `dependency` option of the `init` command being ignored ([#2587](https://github.com/python-poetry/poetry/pull/2587)).\n- Fixed the `show` command displaying erroneous information following the changes in the lock file format ([#2967](https://github.com/python-poetry/poetry/pull/2967)).\n- Fixed dependency resolution errors due to invalid python constraints propagation ([#2968](https://github.com/python-poetry/poetry/pull/2968)).\n\n\n## [1.1.0b4] - 2020-09-23\n\n### Changed\n\n- When running under Python 2.7 on Windows, install command will be limited to one worker to mitigate threading issue ([#2941](https://github.com/python-poetry/poetry/pull/2941)).\n\n\n## [1.1.0b3] - 2020-09-18\n\n### Changed\n\n- Improved the error reporting when HTTP error are encountered for legacy repositories ([#2459](https://github.com/python-poetry/poetry/pull/2459)).\n- When displaying the name of packages retrieved from remote repositories, the original name will now be used ([#2305](https://github.com/python-poetry/poetry/pull/2305)).\n- Failed package downloads will now be retried on connection errors ([#2813](https://github.com/python-poetry/poetry/pull/2813)).\n- Path dependencies will now be installed as editable only when `develop` option is set to `true` ([#2887](https://github.com/python-poetry/poetry/pull/2887)).\n\n### Fixed\n\n- Fixed the detection of the type of installed packages ([#2722](https://github.com/python-poetry/poetry/pull/2722)).\n- Fixed deadlocks when installing packages on systems not supporting non-ascii characters ([#2721](https://github.com/python-poetry/poetry/pull/2721)).\n- Fixed handling of wildcard constraints for packages with prereleases only ([#2821](https://github.com/python-poetry/poetry/pull/2821)).\n- Fixed dependencies of some packages not being discovered by ensuring we use the PEP-516 backend if specified ([#2810](https://github.com/python-poetry/poetry/pull/2810)).\n- Fixed recursion errors when retrieving extras ([#2787](https://github.com/python-poetry/poetry/pull/2787)).\n- Fixed `PyPI` always being displayed when publishing even for custom repositories ([#2905](https://github.com/python-poetry/poetry/pull/2905)).\n- Fixed handling of packages extras when resolving dependencies ([#2887](https://github.com/python-poetry/poetry/pull/2887)).\n\n\n## [1.1.0b2] - 2020-07-24\n\n### Changed\n\n- Added support for build scripts without the `setup.py` file generation in the editable builder ([#2718](https://github.com/python-poetry/poetry/pull/2718)).\n\n### Fixed\n\n- Fixed an error occurring when using older lock files ([#2717](https://github.com/python-poetry/poetry/pull/2717)).\n\n\n## [1.1.0b1] - 2020-07-24\n\n### Changed\n\n- Virtual environments will now exclusively be built with `virtualenv` ([#2666](https://github.com/python-poetry/poetry/pull/2666)).\n- Support for Python 2.7 and 3.5 is now officially deprecated and a warning message will be displayed ([#2683](https://github.com/python-poetry/poetry/pull/2683)).\n- Improved metadata inspection of packages by using the PEP-517 build system ([#2632](https://github.com/python-poetry/poetry/pull/2632)).\n\n### Fixed\n\n- Fixed parallel tasks not being cancelled when the installation is interrupted or has failed ([#2656](https://github.com/python-poetry/poetry/pull/2656)).\n- Fixed an error where the editable builder would not expose all packages ([#2664](https://github.com/python-poetry/poetry/pull/2656)).\n- Fixed an error for Python 2.7 when a file could not be downloaded in the installer ([#2709](https://github.com/python-poetry/poetry/pull/2709)).\n- Fixed the lock file `content-hash` value not being updated when using the `add` and `remove` commands ([#2710](https://github.com/python-poetry/poetry/pull/2710)).\n- Fixed incorrect resolution errors being raised for packages with python requirements ([#2712](https://github.com/python-poetry/poetry/pull/2712)).\n- Fixed an error causing the build log messages to no longer be displayed ([#2715](https://github.com/python-poetry/poetry/pull/2715)).\n\n\n## [1.0.10] - 2020-07-21\n\n### Changed\n\n- The lock files are now versioned to ease transitions for lock file format changes, with warnings being displayed on incompatibility detection ([#2695](https://github.com/python-poetry/poetry/pull/2695)).\n- The `init` and `new` commands will now provide hints on invalid given licenses ([#1634](https://github.com/python-poetry/poetry/pull/1634)).\n\n### Fixed\n\n- Fixed error messages when the authors specified in the `pyproject.toml` file are invalid ([#2525](https://github.com/python-poetry/poetry/pull/2525)).\n- Fixed empty `.venv` directories being deleted ([#2064](https://github.com/python-poetry/poetry/pull/2064)).\n- Fixed the `shell` command for `tcsh` shells ([#2583](https://github.com/python-poetry/poetry/pull/2583)).\n- Fixed errors when installing directory or file dependencies in some cases ([#2582](https://github.com/python-poetry/poetry/pull/2582)).\n\n\n## [1.1.0a3] - 2020-07-10\n\n### Added\n\n- New installer which provides a faster and better experience ([#2595](https://github.com/python-poetry/poetry/pull/2595)).\n\n### Fixed\n\n- Fixed resolution error when handling duplicate dependencies with environment markers ([#2622](https://github.com/python-poetry/poetry/pull/2622)).\n- Fixed erroneous resolution errors when resolving packages to install ([#2625](https://github.com/python-poetry/poetry/pull/2625)).\n- Fixed errors when detecting installed editable packages ([#2602](https://github.com/python-poetry/poetry/pull/2602)).\n\n\n## [1.1.0a2] - 2020-06-26\n\nNote that lock files generated with this release are not compatible with previous releases of Poetry.\n\n### Added\n\n- The `install` command now supports a `--remove-untracked` option to ensure only packages from the lock file are present in the environment ([#2172](https://github.com/python-poetry/poetry/pull/2172)).\n- Some errors will now be provided with possible solutions and links to the documentation ([#2396](https://github.com/python-poetry/poetry/pull/2396)).\n\n### Changed\n\n- Editable installations of Poetry projects have been improved and are now faster ([#2360](https://github.com/python-poetry/poetry/pull/2360)).\n- Improved the accuracy of the dependency resolver in case of dependencies with environment markers ([#2361](https://github.com/python-poetry/poetry/pull/2361))\n- Environment markers of dependencies are no longer stored in the lock file ([#2361](https://github.com/python-poetry/poetry/pull/2361)).\n- Improved the way connection errors are handled when publishing ([#2285](https://github.com/python-poetry/poetry/pull/2285)).\n\n### Fixed\n\n- Fixed errors when handling duplicate dependencies with environment markers ([#2342](https://github.com/python-poetry/poetry/pull/2342)).\n- Fixed the detection of installed packages ([#2360](https://github.com/python-poetry/poetry/pull/2360)).\n\n\n## [1.1.0a1] - 2020-03-27\n\nThis release **must** be downloaded via the `get-poetry.py` script and not via the `self update` command.\n\n### Added\n\n- Added a new `--dry-run` option to the `publish` command ([#2199](https://github.com/python-poetry/poetry/pull/2199)).\n\n### Changed\n\n- The core features of Poetry have been extracted in to a separate library: `poetry-core` ([#2212](https://github.com/python-poetry/poetry/pull/2212)).\n- The build backend is no longer `poetry.masonry.api` but `poetry.core.masonry.api` which requires `poetry-core>=1.0.0a5` ([#2212](https://github.com/python-poetry/poetry/pull/2212)).\n- The exceptions are now beautifully displayed in the terminal with various level of details depending on the verbosity ([2230](https://github.com/python-poetry/poetry/pull/2230)).\n\n\n## [1.0.9] - 2020-06-09\n\n### Fixed\n\n- Fixed an issue where packages from custom indices where continuously updated ([#2525](https://github.com/python-poetry/poetry/pull/2525)).\n- Fixed errors in the way Python environment markers were parsed and generated ([#2526](https://github.com/python-poetry/poetry/pull/2526)).\n\n\n## [1.0.8] - 2020-06-05\n\n### Fixed\n\n- Fixed a possible error when installing the root package ([#2505](https://github.com/python-poetry/poetry/pull/2505)).\n- Fixed an error where directory and VCS dependencies were not installed ([#2505](https://github.com/python-poetry/poetry/pull/2505)).\n\n\n## [1.0.7] - 2020-06-05\n\n### Fixed\n\n- Fixed an error when trying to execute some packages `setup.py` file ([#2349](https://github.com/python-poetry/poetry/pull/2349)).\n\n\n## [1.0.6] - 2020-06-05\n\n### Changed\n\n- The `self update` command has been updated in order to handle future releases of Poetry ([#2429](https://github.com/python-poetry/poetry/pull/2429)).\n\n### Fixed\n\n- Fixed an error were a new line was not written when displaying the virtual environment's path with `env info` ([#2196](https://github.com/python-poetry/poetry/pull/2196)).\n- Fixed a misleading error message when the `packages` property was empty ([#2265](https://github.com/python-poetry/poetry/pull/2265)).\n- Fixed shell detection by using environment variables ([#2147](https://github.com/python-poetry/poetry/pull/2147)).\n- Fixed the removal of VCS dependencies ([#2239](https://github.com/python-poetry/poetry/pull/2239)).\n- Fixed generated wheel ABI tags for Python 3.8 ([#2121](https://github.com/python-poetry/poetry/pull/2121)).\n- Fixed a regression when building stub-only packages ([#2000](https://github.com/python-poetry/poetry/pull/2000)).\n- Fixed errors when parsing PEP-440 constraints with whitespace ([#2347](https://github.com/python-poetry/poetry/pull/2347)).\n- Fixed PEP 508 representation of VCS dependencies ([#2349](https://github.com/python-poetry/poetry/pull/2349)).\n- Fixed errors when source distributions were read-only ([#1140](https://github.com/python-poetry/poetry/pull/1140)).\n- Fixed dependency resolution errors and inconsistencies with directory, file and VCS dependencies ([#2398](https://github.com/python-poetry/poetry/pull/2398)).\n- Fixed custom repositories information not being properly locked ([#2484](https://github.com/python-poetry/poetry/pull/2484)).\n\n\n## [1.0.5] - 2020-02-29\n\n### Fixed\n\n- Fixed an error when building distributions if the `git` executable was not found ([#2105](https://github.com/python-poetry/poetry/pull/2105)).\n- Fixed various errors when reading Poetry's TOML files by upgrading [tomlkit](https://github.com/sdispater/tomlkit).\n\n\n## [1.0.4] - 2020-02-28\n\n### Fixed\n\n- Fixed the PyPI URL used when installing packages ([#2099](https://github.com/python-poetry/poetry/pull/2099)).\n- Fixed errors when the author's name contains special characters ([#2006](https://github.com/python-poetry/poetry/pull/2006)).\n- Fixed VCS excluded files detection when building wheels ([#1947](https://github.com/python-poetry/poetry/pull/1947)).\n- Fixed packages detection when building sdists ([#1626](https://github.com/python-poetry/poetry/pull/1626)).\n- Fixed the local `.venv` virtual environment not being displayed in `env list` ([#1762](https://github.com/python-poetry/poetry/pull/1762)).\n- Fixed incompatibilities with the most recent versions of `virtualenv` ([#2096](https://github.com/python-poetry/poetry/pull/2096)).\n- Fixed Poetry's own vendor dependencies being retrieved when updating dependencies ([#1981](https://github.com/python-poetry/poetry/pull/1981)).\n- Fixed encoding of credentials in URLs ([#1911](https://github.com/python-poetry/poetry/pull/1911)).\n- Fixed url constraints not being accepted in multi-constraints dependencies ([#2035](https://github.com/python-poetry/poetry/pull/2035)).\n- Fixed an error where credentials specified via environment variables were not retrieved ([#2061](https://github.com/python-poetry/poetry/pull/2061)).\n- Fixed an error where git dependencies referencing tags were not locked to the corresponding commit ([#1948](https://github.com/python-poetry/poetry/pull/1948)).\n- Fixed an error when parsing packages `setup.py` files ([#2041](https://github.com/python-poetry/poetry/pull/2041)).\n- Fixed an error when parsing some git URLs ([#2018](https://github.com/python-poetry/poetry/pull/2018)).\n\n\n## [1.0.3] - 2020-01-31\n\n### Fixed\n\n- Fixed an error which caused the configuration environment variables (like `POETRY_HTTP_BASIC_XXX_PASSWORD`) to not be used ([#1909](https://github.com/python-poetry/poetry/pull/1909)).\n- Fixed an error where the `--help` option was not working ([#1910](https://github.com/python-poetry/poetry/pull/1910)).\n- Fixed an error where packages from private indices were not decompressed properly ([#1851](https://github.com/python-poetry/poetry/pull/1851)).\n- Fixed an error where the version of some PEP-508-formatted wheel dependencies was not properly retrieved ([#1932](https://github.com/python-poetry/poetry/pull/1932)).\n- Fixed internal regexps to avoid potential catastrophic backtracking errors ([#1913](https://github.com/python-poetry/poetry/pull/1913)).\n- Fixed performance issues when custom indices were defined in the `pyproject.toml` file ([#1892](https://github.com/python-poetry/poetry/pull/1892)).\n- Fixed the `get_requires_for_build_wheel()` function of `masonry.api` which wasn't returning the proper result ([#1875](https://github.com/python-poetry/poetry/pull/1875)).\n\n\n## [1.0.2] - 2020-01-10\n\n### Fixed\n\n- Reverted a previous fix ([#1796](https://github.com/python-poetry/poetry/pull/1796)) which was causing errors for projects with file and/or directory dependencies ([#1865](https://github.com/python-poetry/poetry/pull/1865)).\n\n\n## [1.0.1] - 2020-01-10\n\n### Fixed\n\n- Fixed an error in `env use` where the wrong Python executable was being used to check compatibility ([#1736](https://github.com/python-poetry/poetry/pull/1736)).\n- Fixed an error where VCS dependencies were not properly categorized as development dependencies ([#1725](https://github.com/python-poetry/poetry/pull/1725)).\n- Fixed an error where some shells would no longer be usable after using the `shell` command ([#1673](https://github.com/python-poetry/poetry/pull/1673)).\n- Fixed an error where explicitly included files where not included in wheel distributions ([#1750](https://github.com/python-poetry/poetry/pull/1750)).\n- Fixed an error where some Git dependencies url were not properly parsed ([#1756](https://github.com/python-poetry/poetry/pull/1756)).\n- Fixed an error in the `env` commands on Windows if the path to the executable contained a space ([#1774](https://github.com/python-poetry/poetry/pull/1774)).\n- Fixed several errors and UX issues caused by `keyring` on some systems ([#1788](https://github.com/python-poetry/poetry/pull/1788)).\n- Fixed errors when trying to detect installed packages ([#1786](https://github.com/python-poetry/poetry/pull/1786)).\n- Fixed an error when packaging projects where Python packages were not properly detected ([#1592](https://github.com/python-poetry/poetry/pull/1592)).\n- Fixed an error where local file dependencies were exported as editable when using the `export` command ([#1840](https://github.com/python-poetry/poetry/pull/1840)).\n- Fixed the way environment markers are propagated and evaluated when resolving dependencies ([#1829](https://github.com/python-poetry/poetry/pull/1829), [#1789](https://github.com/python-poetry/poetry/pull/1789)).\n- Fixed an error in the PEP-508 compliant representation of directory and file dependencies ([#1796](https://github.com/python-poetry/poetry/pull/1796)).\n- Fixed an error where invalid virtual environments would be silently used. They will not be recreated and a warning will be displayed ([#1797](https://github.com/python-poetry/poetry/pull/1797)).\n- Fixed an error where dependencies were not properly detected when reading the `setup.py` file in some cases ([#1764](https://github.com/python-poetry/poetry/pull/1764)).\n\n\n## [1.0.0] - 2019-12-12\n\n### Added\n\n- Added an `export` command to export the lock file to other formats (only `requirements.txt` is currently supported).\n- Added a `env info` command to get basic information about the current environment.\n- Added a `env use` command to control the Python version used by the project.\n- Added a `env list` command to list the virtualenvs associated with the current project.\n- Added a `env remove` command to delete virtualenvs associated with the current project.\n- Added support for `POETRY_HOME` declaration within `get-poetry.py`.\n- Added support for declaring a specific source for dependencies.\n- Added support for disabling PyPI and making another repository the default one.\n- Added support for declaring private repositories as secondary.\n- Added the ability to specify packages on a per-format basis.\n- Added support for custom urls in metadata.\n- Full environment markers are now supported for dependencies via the `markers` property.\n- Added the ability to specify git dependencies directly in `add`, it no longer requires the `--git` option.\n- Added the ability to specify path dependencies directly in `add`, it no longer requires the `--path` option.\n- Added support for url dependencies ([#1260](https://github.com/python-poetry/poetry/pull/1260)).\n- Publishing to PyPI using [API tokens](https://pypi.org/help/#apitoken) is now supported ([#1275](https://github.com/python-poetry/poetry/pull/1275)).\n- Licenses can now be identified by their full name.\n- Added support for custom certificate authority and client certificates for private repositories.\n- Poetry can now detect and use Conda environments.\n\n### Changed\n\n- Slightly changed the lock file, making it potentially incompatible with previous Poetry versions.\n- The `cache:clear` command has been renamed to `cache clear`.\n- The `debug:info` command has been renamed to `debug info`.\n- The `debug:resolve` command has been renamed to `debug resolve`.\n- The `self:update` command has been renamed to `self update`.\n- Changed the way virtualenvs are stored (names now depend on the project's path).\n- The `--git` option of the `add` command has been removed.\n- The `--path` option of the `add` command has been removed.\n- The `add` command will now automatically select the latest prerelease if only prereleases are available.\n- The `add` command can now update a dependencies if an explicit constraint is given ([#1221](https://github.com/python-poetry/poetry/pull/1221)).\n- Removed the `--develop` option from the `install` command.\n- Improved UX when searching for packages in the `init` command.\n- The `shell` command has been improved.\n- The `poetry run` command now uses `os.execvp()` rather than spawning a new subprocess.\n- Specifying dependencies with `allows-prereleases` in the `pyproject.toml` file is deprecated for consistency with the `add` command. Use `allow-prereleases` instead.\n- Improved the error message when the lock file is invalid.\n- Whenever Poetry needs to use the \"system\" Python, it will now call `sys.executable` instead of the `python` command.\n- Improved the error message displayed on conflicting Python requirements ([#1681](https://github.com/python-poetry/poetry/pull/1681)).\n- Improved the `site-packages` directory detection ([#1683](https://github.com/python-poetry/poetry/pull/1683)).\n\n### Fixed\n\n- Fixed transitive extra dependencies being removed when updating a specific dependency.\n- The `pyproject.toml` configuration is now properly validated.\n- Fixed installing Poetry-based packages breaking with `pip`.\n- Fixed packages with empty markers being added to the lock file.\n- Fixed invalid lock file generation in some cases.\n- Fixed local version identifier handling in wheel file names.\n- Fixed packages with invalid metadata triggering an error instead of being skipped.\n- Fixed the generation of invalid lock files in some cases.\n- Git dependencies are now properly locked to a specific revision when specifying a branch or a tag.\n- Fixed the behavior of the `~=` operator.\n- Fixed dependency resolution for conditional development dependencies.\n- Fixed generated dependency constraints when they contain inequality operators.\n- The `run` command now properly handles the `--` separator.\n- Fixed some issues with `path` dependencies being seen as `git` dependencies.\n- Fixed various issues with the way `extra` markers in dependencies were handled.\n- Fixed the option conflicts in the `run` command.\n- Fixed wrong latest version being displayed when executing `show -l`.\n- Fixed `TooManyRedirects` errors being raised when resolving dependencies.\n- Fixed custom indices dependencies being constantly updated.\n- Fixed the behavior of the `--install` option of the debug resolve command.\n- Fixed an error in `show` when using the `-o/--outdated` option.\n- Fixed PEP 508 url dependency handling.\n- Fixed excluded files via the `exclude` being included in distributions.\n- Fixed an error in `env use` if the `virtualenvs.in-project` setting is activated ([#1682](https://github.com/python-poetry/poetry/pull/1682))\n- Fixed handling of `empty` and `any` markers in unions of markers ([#1650](https://github.com/python-poetry/poetry/pull/1650)).\n\n\n## [0.12.17] - 2019-07-03\n\n### Fixed\n\n- Fixed dependency resolution with circular dependencies.\n- Fixed encoding errors when reading files on Windows. (Thanks to [@vlcinsky](https://github.com/vlcinsky))\n- Fixed unclear errors when executing commands in virtual environments. (Thanks to [@Imaclean74](https://github.com/Imaclean74))\n- Fixed handling of `.venv` when it's not a directory. (Thanks to [@mpanarin](https://github.com/mpanarin))\n\n\n## [0.12.16] - 2019-05-17\n\n### Fixed\n\n- Fixed packages with no hashes retrieval for legacy repositories.\n- Fixed multiple constraints for dev dependencies.\n- Fixed dependency resolution failing on badly formed package versions instead of skipping.\n- Fixed permissions of built wheels.\n\n\n## [0.12.15] - 2019-05-03\n\n### Fixed\n\n- Fixed an `AttributeError` in the editable builder.\n- Fixed resolution of packages with only Python 3 wheels and sdist when resolving for legacy repositories.\n- Fixed non-sha256 hashes retrieval for legacy repositories.\n\n\n## [0.12.14] - 2019-04-26\n\n### Fixed\n\n- Fixed root package installation for pure Python packages.\n\n\n## [0.12.13] - 2019-04-26\n\n### Fixed\n\n- Fixed root package installation with `pip>=19.0`.\n- Fixed packages not being removed after using the `remove` command.\n\n\n## [0.12.12] - 2019-04-11\n\n### Fixed\n\n- Fix lock idempotency.\n- Fix markers evaluation for `python_version` with precision < 3.\n- Fix permissions of the `dist-info` files.\n- Fix `prepare_metadata_for_build_wheel()` missing in the build backend.\n- Fix metadata inconsistency between wheels and sdists.\n- Fix parsing of `platform_release` markers.\n- Fix metadata information when the project has git dependencies.\n- Fix error reporting when publishing fails.\n- Fix retrieval of `extras_require` in some `setup.py` files. (Thanks to [@asodeur](https://github.com/asodeur))\n- Fix wheel compression when building. (Thanks to [@ccosby](https://github.com/ccosby))\n- Improve retrieval of information for packages with two python specific wheels.\n- Fix request authentication when credentials are included in URLs. (Thanks to [@connorbrinton](https://github.com/connorbrinton))\n\n\n## [0.12.11] - 2019-01-13\n\n### Fixed\n\n- Fixed the way packages information are retrieved for legacy repositories.\n- Fixed an error when adding packages with invalid versions.\n- Fixed an error when resolving directory dependencies with no sub dependencies.\n- Fixed an error when locking packages with no description.\n- Fixed path resolution for transitive file dependencies.\n- Fixed multiple constraints handling for the root package.\n- Fixed exclude functionality on case sensitive systems.\n\n\n## [0.12.10] - 2018-11-22\n\n### Fixed\n\n- Fixed `run` not executing scripts.\n- Fixed environment detection.\n- Fixed handling of authentication for legacy repositories.\n\n\n## [0.12.9] - 2018-11-19\n\n### Fixed\n\n- Fixed executables from outside the virtualenv not being accessible.\n- Fixed a possible error when building distributions with the `exclude` option.\n- Fixed the `run` command for namespaced packages.\n- Fixed errors for virtualenvs with spaces in their path.\n- Fixed prerelease versions being selected with the `add` command.\n\n\n## [0.12.8] - 2018-11-13\n\n### Fixed\n\n- Fixed permission errors when adding/removing git dependencies on Windows.\n- Fixed `Pool` not raising an exception when no package could be found.\n- Fixed reading `bz2` source distribution.\n- Fixed handling of arbitrary equals in `InstalledRepository`.\n\n\n## [0.12.7] - 2018-11-08\n\n### Fixed\n\n- Fixed reading of some `setup.py` files.\n- Fixed a `KeyError` when getting information for packages which require reading setup files.\n- Fixed the building of wheels with C extensions and an `src` layout.\n- Fixed extras being selected when resolving dependencies even when not required.\n- Fixed performance issues when packaging projects if a lot of files were excluded.\n- Fixed installation of files.\n- Fixed extras not being retrieved for legacy repositories.\n- Fixed invalid transitive constraints raising an error for legacy repositories.\n\n\n## [0.12.6] - 2018-11-05\n\n### Changed\n\n- Poetry will now try to read, without executing, setup files (`setup.py` and/or `setup.cfg`) if the `egg_info` command fails when resolving dependencies.\n\n### Fixed\n\n- Fixed installation of directory dependencies.\n- Fixed handling of dependencies with a `not in` marker operator.\n- Fixed support for VCS dependencies.\n- Fixed the `exclude` property not being respected if no VCS was available.\n\n\n## [0.12.5] - 2018-10-26\n\n### Fixed\n\n- Fixed installation of Poetry git dependencies with a build system.\n- Fixed possible errors when resolving dependencies for specific packages.\n- Fixed handling of Python versions compatibility.\n- Fixed the dependency resolver picking up unnecessary dependencies due to not using the `python_full_version` marker.\n- Fixed the `Python-Requires` metadata being invalid for single Python versions.\n\n\n## [0.12.4] - 2018-10-21\n\n### Fixed\n\n- Fixed possible error on some combinations of markers.\n- Fixed venv detection so that it only uses `VIRTUAL_ENV` to detect activated virtualenvs.\n\n\n## [0.12.3] - 2018-10-18\n\n### Fixed\n\n- Fixed the `--no-dev` option in `install` not working properly.\n- Fixed prereleases being selected even if another constraint conflicted with them.\n- Fixed an error when installing current package in development mode if the generated `setup.py` had special characters.\n- Fixed an error in `install` for applications not following a known structure.\n- Fixed an error when trying to retrieve the current environment.\n- Fixed `debug:info` not showing the current project's virtualenv.\n\n\n## [0.12.2] - 2018-10-17\n\n### Fixed\n\n- Fixed an error when installing from private repositories.\n- Fixed an error when trying to move the lock file on Python 2.7.\n\n\n## [0.12.1] - 2018-10-17\n\n### Fixed\n\n- Fixed an error when license is unspecified.\n\n\n## [0.12.0] - 2018-10-17\n\n### Added\n\n- Added a brand new installer.\n- Added support for multi-constraints dependencies.\n- Added a cache version system.\n- Added a `--lock` option to `update` to only update the lock file without executing operations. (Thanks to [@greysteil](https://github.com/greysteil))\n- Added support for the `Project-URL` metadata.\n- Added support for optional scripts.\n- Added a `--no-dev` option to `show`. (Thanks to [@rodcloutier](https://github.com/rodcloutier))\n\n### Changed\n\n- Improved virtualenv detection and management.\n- Wildcard `python` dependencies are now equivalent to `~2.7 || ^3.4`.\n- Changed behavior of the resolver for conditional dependencies.\n- The `install` command will now install the current project in editable mode.\n- The `develop` command is now deprecated in favor of `install`.\n- Improved the `check` command.\n- Empty passwords are now supported when publishing.\n\n### Fixed\n\n- Fixed a memory leak in the resolver.\n- Fixed a recursion error on duplicate dependencies with only different extras.\n- Fixed handling of extras.\n- Fixed duplicate entries in both sdist and wheel.\n- Fixed excluded files appearing in the `package_data` of the generated `setup.py`.\n- Fixed transitive directory dependencies installation.\n- Fixed file permissions for configuration and authentication files.\n- Fixed an error in `cache:clear` for Python 2.7.\n- Fixed publishing for the first time with a prerelease.\n\n\n## [0.11.5] - 2018-09-04\n\n### Fixed\n\n- Fixed a recursion error with circular dependencies.\n- Fixed the `config` command setting incorrect values for paths.\n- Fixed an `OSError` on Python >= 3.5 for `git` dependencies with recursive symlinks.\n- Fixed the possible deletion of system paths by `cache:clear`.\n- Fixed a performance issue when parsing the lock file by upgrading `tomlkit`.\n\n\n## [0.11.4] - 2018-07-30\n\n### Fixed\n\n- Fixed wrong wheel being selected when resolving dependencies.\n- Fixed an error when publishing.\n- Fixed an error when building wheels with the `packages` property set.\n- Fixed single value display in `config` command.\n\n\n## [0.11.3] - 2018-07-26\n\n### Changed\n\n- Poetry now only uses [TOML Kit](https://github.com/sdispater/tomlkit) for TOML files manipulation.\n- Improved dependency resolution debug information.\n\n### Fixed\n\n- Fixed missing dependency information for some packages.\n- Fixed handling of single versions when packaging.\n- Fixed dependency information retrieval from `.zip` and `.bz2` archives.\n- Fixed searching for and installing packages from private repositories with authentication. (Thanks to [@MarcDufresne](https://github.com/MarcDufresne))\n- Fixed a potential error when checking the `pyproject.toml` validity. (Thanks to [@ojii](https://github.com/ojii))\n- Fixed the lock file not tracking the `extras` information from `pyproject.toml`. (Thanks to [@cauebs](https://github.com/cauebs))\n- Fixed missing trailing slash in the Simple API urls for private repositories. (Thanks to [@bradsbrown](https://github.com/bradsbrown))\n\n\n## [0.11.2] - 2018-07-03\n\n### Fixed\n\n- Fixed missing dependencies when resolving in some cases.\n- Fixed path dependencies not working in `dev-dependencies`.\n- Fixed license validation in `init`. (Thanks to [@cauebs](https://github.com/cauebs))\n\n\n## [0.11.1] - 2018-06-29\n\n### Fixed\n\n- Fixed an error when locking dependencies on Python 2.7.\n\n\n## [0.11.0] - 2018-06-28\n\n### Added\n\n- Added support for `packages`, `include` and `exclude` properties.\n- Added a new `shell` command. (Thanks to [@cauebs](https://github.com/cauebs))\n- Added license validation in `init` command.\n\n### Changed\n\n- Changed the dependency installation order, deepest dependencies are now installed first.\n- Improved solver error messages.\n- `poetry` now always reads/writes the `pyproject.toml` file with the `utf-8` encoding.\n- `config --list` now lists all available settings.\n- `init` no longer adds `pytest` to development dependencies.\n\n### Fixed\n\n- Fixed handling of duplicate dependencies with different constraints.\n- Fixed system requirements in lock file for sub dependencies.\n- Fixed detection of new prereleases.\n- Fixed unsafe packages being locked.\n- Fixed versions detection in custom repositories.\n- Fixed package finding with multiple custom repositories.\n- Fixed handling of root incompatibilities.\n- Fixed an error where packages from custom repositories would not be found.\n- Fixed wildcard Python requirement being wrongly set in distributions metadata.\n- Fixed installation of packages from a custom repository.\n- Fixed `remove` command's case sensitivity. (Thanks to [@cauebs](https://github.com/cauebs))\n- Fixed detection of `.egg-info` directory for non-poetry projects. (Thanks to [@gtors](https://github.com/gtors))\n- Fixed only-wheel builds. (Thanks to [@gtors](https://github.com/gtors))\n- Fixed key and array order in lock file to avoid having differences when relocking.\n- Fixed errors when `git` could not be found.\n\n\n## [0.10.3] - 2018-06-04\n\n### Fixed\n\n- Fixed `self:update` command on Windows.\n- Fixed `self:update` not picking up new versions.\n- Fixed a `RuntimeError` on Python 3.7.\n- Fixed bad version number being picked with private repositories.\n- Fixed handling of duplicate dependencies with same constraint.\n- Fixed installation from custom repositories.\n- Fixed setting an explicit version in `version` command.\n- Fixed parsing of wildcards version constraints.\n\n\n## [0.10.2] - 2018-05-31\n\n### Fixed\n\n- Fixed handling of `in` environment markers with commas.\n- Fixed a `UnicodeDecodeError` when an error occurs in venv.\n- Fixed Python requirements not properly set when resolving dependencies.\n- Fixed terminal coloring being activated even if not supported.\n- Fixed wrong executable being picked up on Windows in `poetry run`.\n- Fixed error when listing distribution links for private repositories.\n- Fixed handling of PEP 440 `~=` version constraint.\n\n\n## [0.10.1] - 2018-05-28\n\n### Fixed\n\n- Fixed packages not found for prerelease version constraints when resolving dependencies.\n- Fixed `init` and `add` commands.\n\n\n## [0.10.0] - 2018-05-28\n\n### Added\n\n- Added a new, more efficient dependency resolver.\n- Added a new `init` command to generate a `pyproject.toml` file in existing projects.\n- Added a new setting `settings.virtualenvs.in-project` to make `poetry` create the project's virtualenv inside the project's directory.\n- Added the `--extras` and `--python` options to `debug:resolve` to help debug dependency resolution.\n- Added a `--src` option to `new` command to create an `src` layout.\n- Added support for specifying the `platform` for dependencies.\n- Added the `--python` option to the `add` command.\n- Added the `--platform` option to the `add` command.\n- Added a `--develop` option to the install command to install path dependencies in development/editable mode.\n- Added a `develop` command to install the current project in development mode.\n\n### Changed\n\n- Improved the `show` command to make it easier to check if packages are properly installed.\n- The `script` command has been deprecated, use `run` instead.\n- The `publish` command no longer build packages by default. Use `--build` to retrieve the previous behavior.\n- Improved support for private repositories.\n- Expanded version constraints now keep the original version's precision.\n- The lock file hash no longer uses the project's name and version.\n- The `LICENSE` file, or similar, is now automatically added to the built packages.\n\n### Fixed\n\n- Fixed the dependency resolver selecting incompatible packages.\n- Fixed override of dependency with dependency with extras in `dev-dependencies`.\n\n\n## [0.9.1] - 2018-05-18\n\n### Fixed\n\n- Fixed handling of package names with dots. (Thanks to [bertjwregeer](https://github.com/bertjwregeer))\n- Fixed path dependencies being resolved from the current path instead of the `pyproject.toml` file. (Thanks to [radix](https://github.com/radix))\n\n\n## [0.9.0] - 2018-05-07\n\n### Added\n\n- Added the `cache:clear` command.\n- Added support for `git` dependencies in the `add` command.\n- Added support for `path` dependencies in the `add` command.\n- Added support for extras in the `add` command.\n- Added support for directory dependencies.\n- Added support for `src/` layout for packages.\n- Added automatic detection of `.venv` virtualenvs.\n\n### Changed\n\n- Drastically improved dependency resolution speed.\n- Dependency resolution caches now use sha256 hashes.\n- Changed CLI error style.\n- Improved debugging of dependency resolution.\n- Poetry now attempts to find `pyproject.toml` not only in the directory it was\n  invoked in, but in all its parents up to the root. This allows to run Poetry\n  commands in project subdirectories.\n- Made the email address for authors optional.\n\n### Fixed\n\n- Fixed handling of extras when resolving dependencies.\n- Fixed `self:update` command for some installation.\n- Fixed handling of extras when building projects.\n- Fixed handling of wildcard dependencies wen packaging/publishing.\n- Fixed an error when adding a new packages with prereleases in lock file.\n- Fixed packages name normalization.\n\n\n## [0.8.6] - 2018-04-30\n\n### Fixed\n\n- Fixed config files not being created.\n\n\n## [0.8.5] - 2018-04-19\n\n### Fixed\n\n- Fixed a bug in dependency resolution which led to installation errors.\n- Fixed a bug where malformed sdists would lead to dependency resolution failing.\n\n\n## [0.8.4] - 2018-04-18\n\n### Fixed\n\n- Fixed a bug where dependencies constraints in lock were too strict.\n- Fixed unicode error in `search` command for Python 2.7.\n- Fixed error with git dependencies.\n\n\n## [0.8.3] - 2018-04-16\n\n### Fixed\n\n- Fixed platform verification which led to missing packages.\n- Fixed duplicates in `pyproject.lock`.\n\n\n## [0.8.2] - 2018-04-14\n\n### Fixed\n\n- Fixed `add` command picking up prereleases by default.\n- Fixed dependency resolution on Windows when unpacking distributions.\n- Fixed dependency resolution with post releases.\n- Fixed dependencies being installed even if not necessary for current system.\n\n\n## [0.8.1] - 2018-04-13\n\n### Fixed\n\n- Fixed resolution with bad (empty) releases.\n- Fixed `version` for prereleases.\n- Fixed `search` not working outside of a project.\n- Fixed `self:update` not working outside of a project.\n\n\n## [0.8.0] - 2018-04-13\n\n### Added\n\n- Added support for Python 2.7.\n- Added a fallback mechanism for missing dependencies.\n- Added the `search` command.\n- Added support for local files as dependencies.\n- Added the `self:update` command.\n\n### Changes\n\n- Improved dependency resolution time by using cache control.\n\n### Fixed\n\n- Fixed `install_requires` and `extras` in generated sdist.\n- Fixed dependency resolution crash with malformed dependencies.\n- Fixed errors when `license` metadata is not set.\n- Fixed missing information in lock file.\n\n\n## [0.7.1] - 2018-04-05\n\n### Fixed\n\n- Fixed dependency resolution for custom repositories.\n\n\n## [0.7.0] - 2018-04-04\n\n### Added\n\n- Added compatibility with Python 3.4 and 3.5.\n- Added the `version` command to automatically bump the package's version.\n- Added a standalone installer to install `poetry` isolated.\n- Added support for classifiers in `pyproject.toml`.\n- Added the `script` command.\n\n### Changed\n\n- Improved dependency resolution to avoid unnecessary operations.\n- Improved dependency resolution speed.\n- Improved CLI reactivity by deferring imports.\n- License classifier is not automatically added to classifiers.\n\n### Fixed\n\n- Fixed handling of markers with the `in` operator.\n- Fixed `update` not properly adding new packages to the lock file.\n- Fixed solver adding uninstall operations for non-installed packages.\n- Fixed `new` command creating invalid `pyproject.toml` files.\n\n\n## [0.6.5] - 2018-03-22\n\n### Fixed\n\n- Fixed handling of extras in wheels metadata.\n\n\n## [0.6.4] - 2018-03-21\n\n### Added\n\n- Added a `debug:info` command to get information about current environment.\n\n### Fixed\n\n- Fixed Python version retrieval inside virtualenvs.\n- Fixed optional dependencies being set as required in sdist.\n- Fixed `--optional` option in the `add` command not being used.\n\n\n## [0.6.3] - 2018-03-20\n\n### Fixed\n\n- Fixed built wheels not getting information from the virtualenv.\n- Fixed building wheel with conditional extensions.\n- Fixed missing files in built wheel with extensions.\n- Fixed call to venv binaries on windows.\n- Fixed subdependencies representation in lock file.\n\n\n## [0.6.2] - 2018-03-19\n\n### Changed\n\n- Changed how wildcard constraints are handled.\n\n### Fixed\n\n- Fixed errors with pip 9.0.2.\n\n\n## [0.6.1] - 2018-02-18\n\n### Fixed\n\n- Fixed wheel entry points being written on a single line.\n- Fixed wheel metadata (Tag and Root-Is-Purelib).\n\n\n## [0.6.0] - 2018-03-16\n\n### Added\n\n- Added support for virtualenv autogeneration (Python 3.6+ only).\n- Added the `run` command to execute commands inside the created virtualenvs.\n- Added the `debug:resolve` command to debug dependency resolution.\n- Added `pyproject.toml` file validation.\n- Added support for Markdown readme files.\n\n### Fixed\n\n- Fixed color displayed in `show` command for semver-compatible updates.\n- Fixed Python requirements in publishing metadata.\n- Fixed `update` command reinstalling every dependency.\n\n\n## [0.5.0] - 2018-03-14\n\n### Added\n\n- Added experimental support for package with C extensions.\n\n### Changed\n\n- Added hashes check when installing packages.\n\n### Fixed\n\n- Fixed handling of post releases.\n- Fixed python restricted dependencies not being checked against virtualenv version.\n- Fixed python/platform constraint not being picked up for subdependencies.\n- Fixed skipped packages appearing as installing.\n- Fixed platform specification not being used when resolving dependencies.\n\n\n## [0.4.2] - 2018-03-10\n\n### Fixed\n\n- Fixed TypeError when `requires_dist` is null on PyPI.\n\n\n## [0.4.1] - 2018-03-08\n\n### Fixed\n\n- Fixed missing entry point\n\n\n## [0.4.0] - 2018-03-08\n\n### Added\n\n- Added packaging support (sdist and pure-python wheel).\n- Added the `build` command.\n- Added support for extras definition.\n- Added support for dependencies extras specification.\n- Added the `config` command.\n- Added the `publish` command.\n\n### Changed\n\n- Dependencies system constraints are now respected when installing packages.\n- Complied with PEP 440\n\n### Fixed\n\n- Fixed `show` command for VCS dependencies.\n- Fixed handling of releases with bad markers in PyPiRepository.\n\n\n## [0.3.0] - 2018-03-05\n\n### Added\n\n- Added `show` command.\n- Added the `--dry-run` option to the `add` command.\n\n### Changed\n\n- Changed the `poetry.toml` file for the new, standardized `pyproject.toml`.\n- Dependencies of each package is now stored in the lock file.\n- Improved TOML file management.\n- Dependency resolver now respects the root package python version requirements.\n\n### Fixed\n\n- Fixed the `add` command for packages with dots in their names.\n\n\n## [0.2.0] - 2018-03-01\n\n### Added\n\n- Added `remove` command.\n- Added basic support for VCS (git) dependencies.\n- Added support for private repositories.\n\n### Changed\n\n- Changed `poetry.lock` format.\n\n### Fixed\n\n- Fixed dependencies solving that would lead to dependencies not being written to lock.\n\n\n## [0.1.0] - 2018-02-28\n\nInitial release\n\n\n\n[Unreleased]: https://github.com/python-poetry/poetry/compare/2.0.0...main\n[2.0.0]: https://github.com/python-poetry/poetry/releases/tag/2.0.0\n[1.8.5]: https://github.com/python-poetry/poetry/releases/tag/1.8.5\n[1.8.4]: https://github.com/python-poetry/poetry/releases/tag/1.8.4\n[1.8.3]: https://github.com/python-poetry/poetry/releases/tag/1.8.3\n[1.8.2]: https://github.com/python-poetry/poetry/releases/tag/1.8.2\n[1.8.1]: https://github.com/python-poetry/poetry/releases/tag/1.8.1\n[1.8.0]: https://github.com/python-poetry/poetry/releases/tag/1.8.0\n[1.7.1]: https://github.com/python-poetry/poetry/releases/tag/1.7.1\n[1.7.0]: https://github.com/python-poetry/poetry/releases/tag/1.7.0\n[1.6.1]: https://github.com/python-poetry/poetry/releases/tag/1.6.1\n[1.6.0]: https://github.com/python-poetry/poetry/releases/tag/1.6.0\n[1.5.1]: https://github.com/python-poetry/poetry/releases/tag/1.5.1\n[1.5.0]: https://github.com/python-poetry/poetry/releases/tag/1.5.0\n[1.4.2]: https://github.com/python-poetry/poetry/releases/tag/1.4.2\n[1.4.1]: https://github.com/python-poetry/poetry/releases/tag/1.4.1\n[1.4.0]: https://github.com/python-poetry/poetry/releases/tag/1.4.0\n[1.3.2]: https://github.com/python-poetry/poetry/releases/tag/1.3.2\n[1.3.1]: https://github.com/python-poetry/poetry/releases/tag/1.3.1\n[1.3.0]: https://github.com/python-poetry/poetry/releases/tag/1.3.0\n[1.2.2]: https://github.com/python-poetry/poetry/releases/tag/1.2.2\n[1.2.1]: https://github.com/python-poetry/poetry/releases/tag/1.2.1\n[1.2.0]: https://github.com/python-poetry/poetry/releases/tag/1.2.0\n[1.2.0rc2]: https://github.com/python-poetry/poetry/releases/tag/1.2.0rc2\n[1.2.0rc1]: https://github.com/python-poetry/poetry/releases/tag/1.2.0rc1\n[1.2.0b3]: https://github.com/python-poetry/poetry/releases/tag/1.2.0b3\n[1.2.0b2]: https://github.com/python-poetry/poetry/releases/tag/1.2.0b2\n[1.2.0b1]: https://github.com/python-poetry/poetry/releases/tag/1.2.0b1\n[1.2.0a2]: https://github.com/python-poetry/poetry/releases/tag/1.2.0a2\n[1.2.0a1]: https://github.com/python-poetry/poetry/releases/tag/1.2.0a1\n[1.1.15]: https://github.com/python-poetry/poetry/releases/tag/1.1.15\n[1.1.14]: https://github.com/python-poetry/poetry/releases/tag/1.1.14\n[1.1.13]: https://github.com/python-poetry/poetry/releases/tag/1.1.13\n[1.1.12]: https://github.com/python-poetry/poetry/releases/tag/1.1.12\n[1.1.11]: https://github.com/python-poetry/poetry/releases/tag/1.1.11\n[1.1.10]: https://github.com/python-poetry/poetry/releases/tag/1.1.10\n[1.1.9]: https://github.com/python-poetry/poetry/releases/tag/1.1.9\n[1.1.8]: https://github.com/python-poetry/poetry/releases/tag/1.1.8\n[1.1.7]: https://github.com/python-poetry/poetry/releases/tag/1.1.7\n[1.1.6]: https://github.com/python-poetry/poetry/releases/tag/1.1.6\n[1.1.5]: https://github.com/python-poetry/poetry/releases/tag/1.1.5\n[1.1.4]: https://github.com/python-poetry/poetry/releases/tag/1.1.4\n[1.1.3]: https://github.com/python-poetry/poetry/releases/tag/1.1.3\n[1.1.2]: https://github.com/python-poetry/poetry/releases/tag/1.1.2\n[1.1.1]: https://github.com/python-poetry/poetry/releases/tag/1.1.1\n[1.1.0]: https://github.com/python-poetry/poetry/releases/tag/1.1.0\n[1.1.0rc1]: https://github.com/python-poetry/poetry/releases/tag/1.1.0rc1\n[1.1.0b4]: https://github.com/python-poetry/poetry/releases/tag/1.1.0b4\n[1.1.0b3]: https://github.com/python-poetry/poetry/releases/tag/1.1.0b3\n[1.1.0b2]: https://github.com/python-poetry/poetry/releases/tag/1.1.0b2\n[1.1.0b1]: https://github.com/python-poetry/poetry/releases/tag/1.1.0b1\n[1.1.0a3]: https://github.com/python-poetry/poetry/releases/tag/1.1.0a3\n[1.1.0a2]: https://github.com/python-poetry/poetry/releases/tag/1.1.0a2\n[1.1.0a1]: https://github.com/python-poetry/poetry/releases/tag/1.1.0a1\n[1.0.10]: https://github.com/python-poetry/poetry/releases/tag/1.0.10\n[1.0.9]: https://github.com/python-poetry/poetry/releases/tag/1.0.9\n[1.0.8]: https://github.com/python-poetry/poetry/releases/tag/1.0.8\n[1.0.7]: https://github.com/python-poetry/poetry/releases/tag/1.0.7\n[1.0.6]: https://github.com/python-poetry/poetry/releases/tag/1.0.6\n[1.0.5]: https://github.com/python-poetry/poetry/releases/tag/1.0.5\n[1.0.4]: https://github.com/python-poetry/poetry/releases/tag/1.0.4\n[1.0.3]: https://github.com/python-poetry/poetry/releases/tag/1.0.3\n[1.0.2]: https://github.com/python-poetry/poetry/releases/tag/1.0.2\n[1.0.1]: https://github.com/python-poetry/poetry/releases/tag/1.0.1\n[1.0.0]: https://github.com/python-poetry/poetry/releases/tag/1.0.0\n[0.12.17]: https://github.com/python-poetry/poetry/releases/tag/0.12.17\n[0.12.16]: https://github.com/python-poetry/poetry/releases/tag/0.12.16\n[0.12.15]: https://github.com/python-poetry/poetry/releases/tag/0.12.15\n[0.12.14]: https://github.com/python-poetry/poetry/releases/tag/0.12.14\n[0.12.13]: https://github.com/python-poetry/poetry/releases/tag/0.12.13\n[0.12.12]: https://github.com/python-poetry/poetry/releases/tag/0.12.12\n[0.12.11]: https://github.com/python-poetry/poetry/releases/tag/0.12.11\n[0.12.10]: https://github.com/python-poetry/poetry/releases/tag/0.12.10\n[0.12.9]: https://github.com/python-poetry/poetry/releases/tag/0.12.9\n[0.12.8]: https://github.com/python-poetry/poetry/releases/tag/0.12.8\n[0.12.7]: https://github.com/python-poetry/poetry/releases/tag/0.12.7\n[0.12.6]: https://github.com/python-poetry/poetry/releases/tag/0.12.6\n[0.12.5]: https://github.com/python-poetry/poetry/releases/tag/0.12.5\n[0.12.4]: https://github.com/python-poetry/poetry/releases/tag/0.12.4\n[0.12.3]: https://github.com/python-poetry/poetry/releases/tag/0.12.3\n[0.12.2]: https://github.com/python-poetry/poetry/releases/tag/0.12.2\n[0.12.1]: https://github.com/python-poetry/poetry/releases/tag/0.12.1\n[0.12.0]: https://github.com/python-poetry/poetry/releases/tag/0.12.0\n[0.11.5]: https://github.com/python-poetry/poetry/releases/tag/0.11.5\n[0.11.4]: https://github.com/python-poetry/poetry/releases/tag/0.11.4\n[0.11.3]: https://github.com/python-poetry/poetry/releases/tag/0.11.3\n[0.11.2]: https://github.com/python-poetry/poetry/releases/tag/0.11.2\n[0.11.1]: https://github.com/python-poetry/poetry/releases/tag/0.11.1\n[0.11.0]: https://github.com/python-poetry/poetry/releases/tag/0.11.0\n[0.10.3]: https://github.com/python-poetry/poetry/releases/tag/0.10.3\n[0.10.2]: https://github.com/python-poetry/poetry/releases/tag/0.10.2\n[0.10.1]: https://github.com/python-poetry/poetry/releases/tag/0.10.1\n[0.10.0]: https://github.com/python-poetry/poetry/releases/tag/0.10.0\n[0.9.1]: https://github.com/python-poetry/poetry/releases/tag/0.9.1\n[0.9.0]: https://github.com/python-poetry/poetry/releases/tag/0.9.0\n[0.8.6]: https://github.com/python-poetry/poetry/releases/tag/0.8.6\n[0.8.5]: https://github.com/python-poetry/poetry/releases/tag/0.8.5\n[0.8.4]: https://github.com/python-poetry/poetry/releases/tag/0.8.4\n[0.8.3]: https://github.com/python-poetry/poetry/releases/tag/0.8.3\n[0.8.2]: https://github.com/python-poetry/poetry/releases/tag/0.8.2\n[0.8.1]: https://github.com/python-poetry/poetry/releases/tag/0.8.1\n[0.8.0]: https://github.com/python-poetry/poetry/releases/tag/0.8.0\n[0.7.1]: https://github.com/python-poetry/poetry/releases/tag/0.7.1\n[0.7.0]: https://github.com/python-poetry/poetry/releases/tag/0.7.0\n[0.6.5]: https://github.com/python-poetry/poetry/releases/tag/0.6.5\n[0.6.4]: https://github.com/python-poetry/poetry/releases/tag/0.6.4\n[0.6.3]: https://github.com/python-poetry/poetry/releases/tag/0.6.3\n[0.6.2]: https://github.com/python-poetry/poetry/releases/tag/0.6.2\n[0.6.1]: https://github.com/python-poetry/poetry/releases/tag/0.6.1\n[0.6.0]: https://github.com/python-poetry/poetry/releases/tag/0.6.0\n[0.5.0]: https://github.com/python-poetry/poetry/releases/tag/0.5.0\n[0.4.2]: https://github.com/python-poetry/poetry/releases/tag/0.4.2\n[0.4.1]: https://github.com/python-poetry/poetry/releases/tag/0.4.1\n[0.4.0]: https://github.com/python-poetry/poetry/releases/tag/0.4.0\n[0.3.0]: https://github.com/python-poetry/poetry/releases/tag/0.3.0\n[0.2.0]: https://github.com/python-poetry/poetry/releases/tag/0.2.0\n[0.1.0]: https://github.com/python-poetry/poetry/releases/tag/0.1.0\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.7890625,
          "content": "cff-version: 1.2.0\ntitle: \"Poetry: Python packaging and dependency management made easy\"\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\nauthors:\n  - family-names: Eustace\n    given-names: Sébastien\n  - name: \"The Poetry contributors\"\nabstract:  >-\n  Poetry helps you declare, manage and install dependencies of Python projects, ensuring you have the right stack everywhere.\n  Poetry replaces setup.py, requirements.txt, setup.cfg, MANIFEST.in and Pipfile with a simple pyproject.toml based project format.\nlicense: MIT\nlicense-url: \"https://github.com/python-poetry/poetry/blob/master/LICENSE\"\nrepository-code: \"https://github.com/python-poetry/poetry\"\nkeywords:\n  - python\n  - packaging\n  - dependency management\ntype: software\nurl: \"https://python-poetry.org\"\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at sebastien@eustace.io. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "Copyright (c) 2018-present Sébastien Eustace\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8212890625,
          "content": "# Poetry: Python packaging and dependency management made easy\n\n[![Poetry](https://img.shields.io/endpoint?url=https://python-poetry.org/badge/v0.json)](https://python-poetry.org/)\n[![Stable Version](https://img.shields.io/pypi/v/poetry?label=stable)][PyPI Releases]\n[![Pre-release Version](https://img.shields.io/github/v/release/python-poetry/poetry?label=pre-release&include_prereleases&sort=semver)][PyPI Releases]\n[![Python Versions](https://img.shields.io/pypi/pyversions/poetry)][PyPI]\n[![Download Stats](https://img.shields.io/pypi/dm/poetry)](https://pypistats.org/packages/poetry)\n[![Discord](https://img.shields.io/discord/487711540787675139?logo=discord)][Discord]\n\nPoetry helps you declare, manage and install dependencies of Python projects,\nensuring you have the right stack everywhere.\n\n![Poetry Install](https://raw.githubusercontent.com/python-poetry/poetry/master/assets/install.gif)\n\nPoetry replaces `setup.py`, `requirements.txt`, `setup.cfg`, `MANIFEST.in` and `Pipfile` with a simple `pyproject.toml`\nbased project format.\n\n```toml\n[tool.poetry]\nname = \"my-package\"\nversion = \"0.1.0\"\ndescription = \"The description of the package\"\n\nlicense = \"MIT\"\n\nauthors = [\n    \"Sébastien Eustace <sebastien@eustace.io>\"\n]\n\nrepository = \"https://github.com/python-poetry/poetry\"\nhomepage = \"https://python-poetry.org\"\n\n# README file(s) are used as the package description\nreadme = [\"README.md\", \"LICENSE\"]\n\n# Keywords (translated to tags on the package index)\nkeywords = [\"packaging\", \"poetry\"]\n\n[tool.poetry.dependencies]\n# Compatible Python versions\npython = \">=3.8\"\n# Standard dependency with semver constraints\naiohttp = \"^3.8.1\"\n# Dependency with extras\nrequests = { version = \"^2.28\", extras = [\"security\"] }\n# Version-specific dependencies with prereleases allowed\ntomli = { version = \"^2.0.1\", python = \"<3.11\", allow-prereleases = true }\n# Git dependencies\ncleo = { git = \"https://github.com/python-poetry/cleo.git\", branch = \"main\" }\n# Optional dependencies (installed by extras)\npendulum = { version = \"^2.1.2\", optional = true }\n\n# Dependency groups are supported for organizing your dependencies\n[tool.poetry.group.dev.dependencies]\npytest = \"^7.1.2\"\npytest-cov = \"^3.0\"\n\n# ...and can be installed only when explicitly requested\n[tool.poetry.group.docs]\noptional = true\n[tool.poetry.group.docs.dependencies]\nSphinx = \"^5.1.1\"\n\n# Python-style entrypoints and scripts are easily expressed\n[tool.poetry.scripts]\nmy-script = \"my_package:main\"\n```\n\n## Installation\n\nPoetry supports multiple installation methods, including a simple script found at [install.python-poetry.org]. For full\ninstallation instructions, including advanced usage of the script, alternate install methods, and CI best practices, see\nthe full [installation documentation].\n\n## Documentation\n\n[Documentation] for the current version of Poetry (as well as the development branch and recently out of support\nversions) is available from the [official website].\n\n## Contribute\n\nPoetry is a large, complex project always in need of contributors. For those new to the project, a list of\n[suggested issues] to work on in Poetry and poetry-core is available. The full [contributing documentation] also\nprovides helpful guidance.\n\n## Resources\n\n* [Releases][PyPI Releases]\n* [Official Website]\n* [Documentation]\n* [Issue Tracker]\n* [Discord]\n\n  [PyPI]: https://pypi.org/project/poetry/\n  [PyPI Releases]: https://pypi.org/project/poetry/#history\n  [Official Website]: https://python-poetry.org\n  [Documentation]: https://python-poetry.org/docs/\n  [Issue Tracker]: https://github.com/python-poetry/poetry/issues\n  [Suggested Issues]: https://github.com/python-poetry/poetry/contribute\n  [Contributing Documentation]: https://python-poetry.org/docs/contributing\n  [Discord]: https://discord.com/invite/awxPgve\n  [install.python-poetry.org]: https://install.python-poetry.org\n  [Installation Documentation]: https://python-poetry.org/docs/#installation\n\n## Related Projects\n\n* [poetry-core](https://github.com/python-poetry/poetry-core): PEP 517 build-system for Poetry projects, and\ndependency-free core functionality of the Poetry frontend\n* [poetry-plugin-export](https://github.com/python-poetry/poetry-plugin-export): Export Poetry projects/lock files to\nforeign formats like requirements.txt\n* [poetry-plugin-bundle](https://github.com/python-poetry/poetry-plugin-bundle): Install Poetry projects/lock files to\nexternal formats like virtual environments\n* [install.python-poetry.org](https://github.com/python-poetry/install.python-poetry.org): The official Poetry\ninstallation script\n* [website](https://github.com/python-poetry/website): The official Poetry website and blog\n\n## Supporters\n\nThanks to [JetBrains](https://www.jetbrains.com) for supporting us with licenses for their tools.\n\n[<img src=\"https://resources.jetbrains.com/storage/products/company/brand/logos/jetbrains.svg\" width=\"150\" alt=\"JetBrains logo.\" />](https://www.jetbrains.com)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "poetry.lock",
          "type": "blob",
          "size": 138.4208984375,
          "content": "# This file is automatically @generated by Poetry 2.0.0 and should not be changed by hand.\n\n[[package]]\nname = \"backports-tarfile\"\nversion = \"1.2.0\"\ndescription = \"Backport of CPython tarfile module\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nmarkers = \"python_version < \\\"3.12\\\"\"\nfiles = [\n    {file = \"backports.tarfile-1.2.0-py3-none-any.whl\", hash = \"sha256:77e284d754527b01fb1e6fa8a1afe577858ebe4e9dad8919e34c862cb399bc34\"},\n    {file = \"backports_tarfile-1.2.0.tar.gz\", hash = \"sha256:d75e02c268746e1b8144c278978b6e98e85de6ad16f8e4b0844a154557eca991\"},\n]\n\n[package.extras]\ndocs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\ntesting = [\"jaraco.test\", \"pytest (!=8.0.*)\", \"pytest (>=6,!=8.1.*)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\"]\n\n[[package]]\nname = \"build\"\nversion = \"1.2.2.post1\"\ndescription = \"A simple, correct Python build frontend\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"build-1.2.2.post1-py3-none-any.whl\", hash = \"sha256:1d61c0887fa860c01971625baae8bdd338e517b836a2f70dd1f7aa3a6b2fc5b5\"},\n    {file = \"build-1.2.2.post1.tar.gz\", hash = \"sha256:b36993e92ca9375a219c99e606a122ff365a760a2d4bba0caa09bd5278b608b7\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"os_name == \\\"nt\\\"\"}\nimportlib-metadata = {version = \">=4.6\", markers = \"python_full_version < \\\"3.10.2\\\"\"}\npackaging = \">=19.1\"\npyproject_hooks = \"*\"\ntomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ndocs = [\"furo (>=2023.08.17)\", \"sphinx (>=7.0,<8.0)\", \"sphinx-argparse-cli (>=1.5)\", \"sphinx-autodoc-typehints (>=1.10)\", \"sphinx-issues (>=3.0.0)\"]\ntest = [\"build[uv,virtualenv]\", \"filelock (>=3)\", \"pytest (>=6.2.4)\", \"pytest-cov (>=2.12)\", \"pytest-mock (>=2)\", \"pytest-rerunfailures (>=9.1)\", \"pytest-xdist (>=1.34)\", \"setuptools (>=42.0.0)\", \"setuptools (>=56.0.0)\", \"setuptools (>=56.0.0)\", \"setuptools (>=67.8.0)\", \"wheel (>=0.36.0)\"]\ntyping = [\"build[uv]\", \"importlib-metadata (>=5.1)\", \"mypy (>=1.9.0,<1.10.0)\", \"tomli\", \"typing-extensions (>=3.7.4.3)\"]\nuv = [\"uv (>=0.1.18)\"]\nvirtualenv = [\"virtualenv (>=20.0.35)\"]\n\n[[package]]\nname = \"cachecontrol\"\nversion = \"0.14.1\"\ndescription = \"httplib2 caching for requests\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"cachecontrol-0.14.1-py3-none-any.whl\", hash = \"sha256:65e3abd62b06382ce3894df60dde9e0deb92aeb734724f68fa4f3b91e97206b9\"},\n    {file = \"cachecontrol-0.14.1.tar.gz\", hash = \"sha256:06ef916a1e4eb7dba9948cdfc9c76e749db2e02104a9a1277e8b642591a0f717\"},\n]\n\n[package.dependencies]\nfilelock = {version = \">=3.8.0\", optional = true, markers = \"extra == \\\"filecache\\\"\"}\nmsgpack = \">=0.5.2,<2.0.0\"\nrequests = \">=2.16.0\"\n\n[package.extras]\ndev = [\"CacheControl[filecache,redis]\", \"build\", \"cherrypy\", \"codespell[tomli]\", \"furo\", \"mypy\", \"pytest\", \"pytest-cov\", \"ruff\", \"sphinx\", \"sphinx-copybutton\", \"tox\", \"types-redis\", \"types-requests\"]\nfilecache = [\"filelock (>=3.8.0)\"]\nredis = [\"redis (>=2.10.5)\"]\n\n[[package]]\nname = \"certifi\"\nversion = \"2024.12.14\"\ndescription = \"Python package for providing Mozilla's CA Bundle.\"\noptional = false\npython-versions = \">=3.6\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"certifi-2024.12.14-py3-none-any.whl\", hash = \"sha256:1275f7a45be9464efc1173084eaa30f866fe2e47d389406136d332ed4967ec56\"},\n    {file = \"certifi-2024.12.14.tar.gz\", hash = \"sha256:b650d30f370c2b724812bee08008be0c4163b163ddaec3f2546c1caf65f191db\"},\n]\n\n[[package]]\nname = \"cffi\"\nversion = \"1.17.1\"\ndescription = \"Foreign Function Interface for Python calling C code.\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nmarkers = \"sys_platform == \\\"linux\\\" and platform_python_implementation != \\\"PyPy\\\" or sys_platform == \\\"darwin\\\"\"\nfiles = [\n    {file = \"cffi-1.17.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:df8b1c11f177bc2313ec4b2d46baec87a5f3e71fc8b45dab2ee7cae86d9aba14\"},\n    {file = \"cffi-1.17.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:8f2cdc858323644ab277e9bb925ad72ae0e67f69e804f4898c070998d50b1a67\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:edae79245293e15384b51f88b00613ba9f7198016a5948b5dddf4917d4d26382\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:45398b671ac6d70e67da8e4224a065cec6a93541bb7aebe1b198a61b58c7b702\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ad9413ccdeda48c5afdae7e4fa2192157e991ff761e7ab8fdd8926f40b160cc3\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5da5719280082ac6bd9aa7becb3938dc9f9cbd57fac7d2871717b1feb0902ab6\"},\n    {file = \"cffi-1.17.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2bb1a08b8008b281856e5971307cc386a8e9c5b625ac297e853d36da6efe9c17\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:045d61c734659cc045141be4bae381a41d89b741f795af1dd018bfb532fd0df8\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:6883e737d7d9e4899a8a695e00ec36bd4e5e4f18fabe0aca0efe0a4b44cdb13e\"},\n    {file = \"cffi-1.17.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:6b8b4a92e1c65048ff98cfe1f735ef8f1ceb72e3d5f0c25fdb12087a23da22be\"},\n    {file = \"cffi-1.17.1-cp310-cp310-win32.whl\", hash = \"sha256:c9c3d058ebabb74db66e431095118094d06abf53284d9c81f27300d0e0d8bc7c\"},\n    {file = \"cffi-1.17.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:0f048dcf80db46f0098ccac01132761580d28e28bc0f78ae0d58048063317e15\"},\n    {file = \"cffi-1.17.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:a45e3c6913c5b87b3ff120dcdc03f6131fa0065027d0ed7ee6190736a74cd401\"},\n    {file = \"cffi-1.17.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:30c5e0cb5ae493c04c8b42916e52ca38079f1b235c2f8ae5f4527b963c401caf\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f75c7ab1f9e4aca5414ed4d8e5c0e303a34f4421f8a0d47a4d019ceff0ab6af4\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a1ed2dd2972641495a3ec98445e09766f077aee98a1c896dcb4ad0d303628e41\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:46bf43160c1a35f7ec506d254e5c890f3c03648a4dbac12d624e4490a7046cd1\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a24ed04c8ffd54b0729c07cee15a81d964e6fee0e3d4d342a27b020d22959dc6\"},\n    {file = \"cffi-1.17.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:610faea79c43e44c71e1ec53a554553fa22321b65fae24889706c0a84d4ad86d\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:a9b15d491f3ad5d692e11f6b71f7857e7835eb677955c00cc0aefcd0669adaf6\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:de2ea4b5833625383e464549fec1bc395c1bdeeb5f25c4a3a82b5a8c756ec22f\"},\n    {file = \"cffi-1.17.1-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:fc48c783f9c87e60831201f2cce7f3b2e4846bf4d8728eabe54d60700b318a0b\"},\n    {file = \"cffi-1.17.1-cp311-cp311-win32.whl\", hash = \"sha256:85a950a4ac9c359340d5963966e3e0a94a676bd6245a4b55bc43949eee26a655\"},\n    {file = \"cffi-1.17.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:caaf0640ef5f5517f49bc275eca1406b0ffa6aa184892812030f04c2abf589a0\"},\n    {file = \"cffi-1.17.1-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:805b4371bf7197c329fcb3ead37e710d1bca9da5d583f5073b799d5c5bd1eee4\"},\n    {file = \"cffi-1.17.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:733e99bc2df47476e3848417c5a4540522f234dfd4ef3ab7fafdf555b082ec0c\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1257bdabf294dceb59f5e70c64a3e2f462c30c7ad68092d01bbbfb1c16b1ba36\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da95af8214998d77a98cc14e3a3bd00aa191526343078b530ceb0bd710fb48a5\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d63afe322132c194cf832bfec0dc69a99fb9bb6bbd550f161a49e9e855cc78ff\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f79fc4fc25f1c8698ff97788206bb3c2598949bfe0fef03d299eb1b5356ada99\"},\n    {file = \"cffi-1.17.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b62ce867176a75d03a665bad002af8e6d54644fad99a3c70905c543130e39d93\"},\n    {file = \"cffi-1.17.1-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:386c8bf53c502fff58903061338ce4f4950cbdcb23e2902d86c0f722b786bbe3\"},\n    {file = \"cffi-1.17.1-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:4ceb10419a9adf4460ea14cfd6bc43d08701f0835e979bf821052f1805850fe8\"},\n    {file = \"cffi-1.17.1-cp312-cp312-win32.whl\", hash = \"sha256:a08d7e755f8ed21095a310a693525137cfe756ce62d066e53f502a83dc550f65\"},\n    {file = \"cffi-1.17.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:51392eae71afec0d0c8fb1a53b204dbb3bcabcb3c9b807eedf3e1e6ccf2de903\"},\n    {file = \"cffi-1.17.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f3a2b4222ce6b60e2e8b337bb9596923045681d71e5a082783484d845390938e\"},\n    {file = \"cffi-1.17.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:0984a4925a435b1da406122d4d7968dd861c1385afe3b45ba82b750f229811e2\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d01b12eeeb4427d3110de311e1774046ad344f5b1a7403101878976ecd7a10f3\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:706510fe141c86a69c8ddc029c7910003a17353970cff3b904ff0686a5927683\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:de55b766c7aa2e2a3092c51e0483d700341182f08e67c63630d5b6f200bb28e5\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c59d6e989d07460165cc5ad3c61f9fd8f1b4796eacbd81cee78957842b834af4\"},\n    {file = \"cffi-1.17.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dd398dbc6773384a17fe0d3e7eeb8d1a21c2200473ee6806bb5e6a8e62bb73dd\"},\n    {file = \"cffi-1.17.1-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:3edc8d958eb099c634dace3c7e16560ae474aa3803a5df240542b305d14e14ed\"},\n    {file = \"cffi-1.17.1-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:72e72408cad3d5419375fc87d289076ee319835bdfa2caad331e377589aebba9\"},\n    {file = \"cffi-1.17.1-cp313-cp313-win32.whl\", hash = \"sha256:e03eab0a8677fa80d646b5ddece1cbeaf556c313dcfac435ba11f107ba117b5d\"},\n    {file = \"cffi-1.17.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:f6a16c31041f09ead72d69f583767292f750d24913dadacf5756b966aacb3f1a\"},\n    {file = \"cffi-1.17.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:636062ea65bd0195bc012fea9321aca499c0504409f413dc88af450b57ffd03b\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c7eac2ef9b63c79431bc4b25f1cd649d7f061a28808cbc6c47b534bd789ef964\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e221cf152cff04059d011ee126477f0d9588303eb57e88923578ace7baad17f9\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:31000ec67d4221a71bd3f67df918b1f88f676f1c3b535a7eb473255fdc0b83fc\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:6f17be4345073b0a7b8ea599688f692ac3ef23ce28e5df79c04de519dbc4912c\"},\n    {file = \"cffi-1.17.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0e2b1fac190ae3ebfe37b979cc1ce69c81f4e4fe5746bb401dca63a9062cdaf1\"},\n    {file = \"cffi-1.17.1-cp38-cp38-win32.whl\", hash = \"sha256:7596d6620d3fa590f677e9ee430df2958d2d6d6de2feeae5b20e82c00b76fbf8\"},\n    {file = \"cffi-1.17.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:78122be759c3f8a014ce010908ae03364d00a1f81ab5c7f4a7a5120607ea56e1\"},\n    {file = \"cffi-1.17.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:b2ab587605f4ba0bf81dc0cb08a41bd1c0a5906bd59243d56bad7668a6fc6c16\"},\n    {file = \"cffi-1.17.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:28b16024becceed8c6dfbc75629e27788d8a3f9030691a1dbf9821a128b22c36\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:1d599671f396c4723d016dbddb72fe8e0397082b0a77a4fab8028923bec050e8\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ca74b8dbe6e8e8263c0ffd60277de77dcee6c837a3d0881d8c1ead7268c9e576\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f7f5baafcc48261359e14bcd6d9bff6d4b28d9103847c9e136694cb0501aef87\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:98e3969bcff97cae1b2def8ba499ea3d6f31ddfdb7635374834cf89a1a08ecf0\"},\n    {file = \"cffi-1.17.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cdf5ce3acdfd1661132f2a9c19cac174758dc2352bfe37d98aa7512c6b7178b3\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:9755e4345d1ec879e3849e62222a18c7174d65a6a92d5b346b1863912168b595\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:f1e22e8c4419538cb197e4dd60acc919d7696e5ef98ee4da4e01d3f8cfa4cc5a\"},\n    {file = \"cffi-1.17.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:c03e868a0b3bc35839ba98e74211ed2b05d2119be4e8a0f224fba9384f1fe02e\"},\n    {file = \"cffi-1.17.1-cp39-cp39-win32.whl\", hash = \"sha256:e31ae45bc2e29f6b2abd0de1cc3b9d5205aa847cafaecb8af1476a609a2f6eb7\"},\n    {file = \"cffi-1.17.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:d016c76bdd850f3c626af19b0542c9677ba156e4ee4fccfdd7848803533ef662\"},\n    {file = \"cffi-1.17.1.tar.gz\", hash = \"sha256:1c39c6016c32bc48dd54561950ebd6836e1670f2ae46128f67cf49e789c52824\"},\n]\n\n[package.dependencies]\npycparser = \"*\"\n\n[[package]]\nname = \"cfgv\"\nversion = \"3.4.0\"\ndescription = \"Validate configuration and produce human readable error messages.\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"dev\"]\nfiles = [\n    {file = \"cfgv-3.4.0-py2.py3-none-any.whl\", hash = \"sha256:b7265b1f29fd3316bfcd2b330d63d024f2bfd8bcb8b0272f8e19a504856c48f9\"},\n    {file = \"cfgv-3.4.0.tar.gz\", hash = \"sha256:e52591d4c5f5dead8e0f673fb16db7949d2cfb3f7da4582893288f0ded8fe560\"},\n]\n\n[[package]]\nname = \"charset-normalizer\"\nversion = \"3.4.1\"\ndescription = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"\noptional = false\npython-versions = \">=3.7\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:91b36a978b5ae0ee86c394f5a54d6ef44db1de0815eb43de826d41d21e4af3de\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7461baadb4dc00fd9e0acbe254e3d7d2112e7f92ced2adc96e54ef6501c5f176\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e218488cd232553829be0664c2292d3af2eeeb94b32bea483cf79ac6a694e037\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:80ed5e856eb7f30115aaf94e4a08114ccc8813e6ed1b5efa74f9f82e8509858f\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b010a7a4fd316c3c484d482922d13044979e78d1861f0e0650423144c616a46a\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4532bff1b8421fd0a320463030c7520f56a79c9024a4e88f01c537316019005a\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:d973f03c0cb71c5ed99037b870f2be986c3c05e63622c017ea9816881d2dd247\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:3a3bd0dcd373514dcec91c411ddb9632c0d7d92aed7093b8c3bbb6d69ca74408\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d9c3cdf5390dcd29aa8056d13e8e99526cda0305acc038b96b30352aff5ff2bb\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:2bdfe3ac2e1bbe5b59a1a63721eb3b95fc9b6817ae4a46debbb4e11f6232428d\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:eab677309cdb30d047996b36d34caeda1dc91149e4fdca0b1a039b3f79d9a807\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-win32.whl\", hash = \"sha256:c0429126cf75e16c4f0ad00ee0eae4242dc652290f940152ca8c75c3a4b6ee8f\"},\n    {file = \"charset_normalizer-3.4.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:9f0b8b1c6d84c8034a44893aba5e767bf9c7a211e313a9605d9c617d7083829f\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:8bfa33f4f2672964266e940dd22a195989ba31669bd84629f05fab3ef4e2d125\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:28bf57629c75e810b6ae989f03c0828d64d6b26a5e205535585f96093e405ed1\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f08ff5e948271dc7e18a35641d2f11a4cd8dfd5634f55228b691e62b37125eb3\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:234ac59ea147c59ee4da87a0c0f098e9c8d169f4dc2a159ef720f1a61bbe27cd\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fd4ec41f914fa74ad1b8304bbc634b3de73d2a0889bd32076342a573e0779e00\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:eea6ee1db730b3483adf394ea72f808b6e18cf3cb6454b4d86e04fa8c4327a12\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:c96836c97b1238e9c9e3fe90844c947d5afbf4f4c92762679acfe19927d81d77\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:4d86f7aff21ee58f26dcf5ae81a9addbd914115cdebcbb2217e4f0ed8982e146\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:09b5e6733cbd160dcc09589227187e242a30a49ca5cefa5a7edd3f9d19ed53fd\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:5777ee0881f9499ed0f71cc82cf873d9a0ca8af166dfa0af8ec4e675b7df48e6\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:237bdbe6159cff53b4f24f397d43c6336c6b0b42affbe857970cefbb620911c8\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-win32.whl\", hash = \"sha256:8417cb1f36cc0bc7eaba8ccb0e04d55f0ee52df06df3ad55259b9a323555fc8b\"},\n    {file = \"charset_normalizer-3.4.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:d7f50a1f8c450f3925cb367d011448c39239bb3eb4117c36a6d354794de4ce76\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-macosx_10_13_universal2.whl\", hash = \"sha256:73d94b58ec7fecbc7366247d3b0b10a21681004153238750bb67bd9012414545\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dad3e487649f498dd991eeb901125411559b22e8d7ab25d3aeb1af367df5efd7\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c30197aa96e8eed02200a83fba2657b4c3acd0f0aa4bdc9f6c1af8e8962e0757\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2369eea1ee4a7610a860d88f268eb39b95cb588acd7235e02fd5a5601773d4fa\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bc2722592d8998c870fa4e290c2eec2c1569b87fe58618e67d38b4665dfa680d\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ffc9202a29ab3920fa812879e95a9e78b2465fd10be7fcbd042899695d75e616\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:804a4d582ba6e5b747c625bf1255e6b1507465494a40a2130978bda7b932c90b\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:0f55e69f030f7163dffe9fd0752b32f070566451afe180f99dbeeb81f511ad8d\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c4c3e6da02df6fa1410a7680bd3f63d4f710232d3139089536310d027950696a\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:5df196eb874dae23dcfb968c83d4f8fdccb333330fe1fc278ac5ceeb101003a9\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:e358e64305fe12299a08e08978f51fc21fac060dcfcddd95453eabe5b93ed0e1\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-win32.whl\", hash = \"sha256:9b23ca7ef998bc739bf6ffc077c2116917eabcc901f88da1b9856b210ef63f35\"},\n    {file = \"charset_normalizer-3.4.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:6ff8a4a60c227ad87030d76e99cd1698345d4491638dfa6673027c48b3cd395f\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:aabfa34badd18f1da5ec1bc2715cadc8dca465868a4e73a0173466b688f29dda\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:22e14b5d70560b8dd51ec22863f370d1e595ac3d024cb8ad7d308b4cd95f8313\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8436c508b408b82d87dc5f62496973a1805cd46727c34440b0d29d8a2f50a6c9\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2d074908e1aecee37a7635990b2c6d504cd4766c7bc9fc86d63f9c09af3fa11b\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:955f8851919303c92343d2f66165294848d57e9bba6cf6e3625485a70a038d11\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:44ecbf16649486d4aebafeaa7ec4c9fed8b88101f4dd612dcaf65d5e815f837f\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:0924e81d3d5e70f8126529951dac65c1010cdf117bb75eb02dd12339b57749dd\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:2967f74ad52c3b98de4c3b32e1a44e32975e008a9cd2a8cc8966d6a5218c5cb2\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:c75cb2a3e389853835e84a2d8fb2b81a10645b503eca9bcb98df6b5a43eb8886\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:09b26ae6b1abf0d27570633b2b078a2a20419c99d66fb2823173d73f188ce601\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:fa88b843d6e211393a37219e6a1c1df99d35e8fd90446f1118f4216e307e48cd\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-win32.whl\", hash = \"sha256:eb8178fe3dba6450a3e024e95ac49ed3400e506fd4e9e5c32d30adda88cbd407\"},\n    {file = \"charset_normalizer-3.4.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:b1ac5992a838106edb89654e0aebfc24f5848ae2547d22c2c3f66454daa11971\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f30bf9fd9be89ecb2360c7d94a711f00c09b976258846efe40db3d05828e8089\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:97f68b8d6831127e4787ad15e6757232e14e12060bec17091b85eb1486b91d8d\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7974a0b5ecd505609e3b19742b60cee7aa2aa2fb3151bc917e6e2646d7667dcf\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fc54db6c8593ef7d4b2a331b58653356cf04f67c960f584edb7c3d8c97e8f39e\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:311f30128d7d333eebd7896965bfcfbd0065f1716ec92bd5638d7748eb6f936a\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_aarch64.whl\", hash = \"sha256:7d053096f67cd1241601111b698f5cad775f97ab25d81567d3f59219b5f1adbd\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_i686.whl\", hash = \"sha256:807f52c1f798eef6cf26beb819eeb8819b1622ddfeef9d0977a8502d4db6d534\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_ppc64le.whl\", hash = \"sha256:dccbe65bd2f7f7ec22c4ff99ed56faa1e9f785482b9bbd7c717e26fd723a1d1e\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_s390x.whl\", hash = \"sha256:2fb9bd477fdea8684f78791a6de97a953c51831ee2981f8e4f583ff3b9d9687e\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-musllinux_1_2_x86_64.whl\", hash = \"sha256:01732659ba9b5b873fc117534143e4feefecf3b2078b0a6a2e925271bb6f4cfa\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-win32.whl\", hash = \"sha256:7a4f97a081603d2050bfaffdefa5b02a9ec823f8348a572e39032caa8404a487\"},\n    {file = \"charset_normalizer-3.4.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:7b1bef6280950ee6c177b326508f86cad7ad4dff12454483b51d8b7d673a2c5d\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:ecddf25bee22fe4fe3737a399d0d177d72bc22be6913acfab364b40bce1ba83c\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8c60ca7339acd497a55b0ea5d506b2a2612afb2826560416f6894e8b5770d4a9\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b7b2d86dd06bfc2ade3312a83a5c364c7ec2e3498f8734282c6c3d4b07b346b8\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:dd78cfcda14a1ef52584dbb008f7ac81c1328c0f58184bf9a84c49c605002da6\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6e27f48bcd0957c6d4cb9d6fa6b61d192d0b13d5ef563e5f2ae35feafc0d179c\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:01ad647cdd609225c5350561d084b42ddf732f4eeefe6e678765636791e78b9a\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:619a609aa74ae43d90ed2e89bdd784765de0a25ca761b93e196d938b8fd1dbbd\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:89149166622f4db9b4b6a449256291dc87a99ee53151c74cbd82a53c8c2f6ccd\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_ppc64le.whl\", hash = \"sha256:7709f51f5f7c853f0fb938bcd3bc59cdfdc5203635ffd18bf354f6967ea0f824\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_s390x.whl\", hash = \"sha256:345b0426edd4e18138d6528aed636de7a9ed169b4aaf9d61a8c19e39d26838ca\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:0907f11d019260cdc3f94fbdb23ff9125f6b5d1039b76003b5b0ac9d6a6c9d5b\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-win32.whl\", hash = \"sha256:ea0d8d539afa5eb2728aa1932a988a9a7af94f18582ffae4bc10b3fbdad0626e\"},\n    {file = \"charset_normalizer-3.4.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:329ce159e82018d646c7ac45b01a430369d526569ec08516081727a20e9e4af4\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b97e690a2118911e39b4042088092771b4ae3fc3aa86518f84b8cf6888dbdb41\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:78baa6d91634dfb69ec52a463534bc0df05dbd546209b79a3880a34487f4b84f\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1a2bc9f351a75ef49d664206d51f8e5ede9da246602dc2d2726837620ea034b2\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:75832c08354f595c760a804588b9357d34ec00ba1c940c15e31e96d902093770\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0af291f4fe114be0280cdd29d533696a77b5b49cfde5467176ecab32353395c4\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0167ddc8ab6508fe81860a57dd472b2ef4060e8d378f0cc555707126830f2537\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:2a75d49014d118e4198bcee5ee0a6f25856b29b12dbf7cd012791f8a6cc5c496\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:363e2f92b0f0174b2f8238240a1a30142e3db7b957a5dd5689b0e75fb717cc78\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:ab36c8eb7e454e34e60eb55ca5d241a5d18b2c6244f6827a30e451c42410b5f7\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:4c0907b1928a36d5a998d72d64d8eaa7244989f7aaaf947500d3a800c83a3fd6\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:04432ad9479fa40ec0f387795ddad4437a2b50417c69fa275e212933519ff294\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-win32.whl\", hash = \"sha256:3bed14e9c89dcb10e8f3a29f9ccac4955aebe93c71ae803af79265c9ca5644c5\"},\n    {file = \"charset_normalizer-3.4.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:49402233c892a461407c512a19435d1ce275543138294f7ef013f0b63d5d3765\"},\n    {file = \"charset_normalizer-3.4.1-py3-none-any.whl\", hash = \"sha256:d98b1668f06378c6dbefec3b92299716b931cd4e6061f3c875a71ced1780ab85\"},\n    {file = \"charset_normalizer-3.4.1.tar.gz\", hash = \"sha256:44251f18cd68a75b56585dd00dae26183e102cd5e0f9f1466e6df5da2ed64ea3\"},\n]\n\n[[package]]\nname = \"cleo\"\nversion = \"2.1.0\"\ndescription = \"Cleo allows you to create beautiful and testable command-line interfaces.\"\noptional = false\npython-versions = \">=3.7,<4.0\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"cleo-2.1.0-py3-none-any.whl\", hash = \"sha256:4a31bd4dd45695a64ee3c4758f583f134267c2bc518d8ae9a29cf237d009b07e\"},\n    {file = \"cleo-2.1.0.tar.gz\", hash = \"sha256:0b2c880b5d13660a7ea651001fb4acb527696c01f15c9ee650f377aa543fd523\"},\n]\n\n[package.dependencies]\ncrashtest = \">=0.4.1,<0.5.0\"\nrapidfuzz = \">=3.0.0,<4.0.0\"\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.6\"\ndescription = \"Cross-platform colored terminal text.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\ngroups = [\"main\", \"github-actions\", \"test\"]\nfiles = [\n    {file = \"colorama-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:4f1d9991f5acc0ca119f9d443620b77f9d6b33703e51011c16baf57afb285fc6\"},\n    {file = \"colorama-0.4.6.tar.gz\", hash = \"sha256:08695f5cb7ed6e0531a20572697297273c47b8cae5a63ffc6d6ed5c201be6e44\"},\n]\nmarkers = {main = \"os_name == \\\"nt\\\"\", github-actions = \"sys_platform == \\\"win32\\\"\", test = \"sys_platform == \\\"win32\\\"\"}\n\n[[package]]\nname = \"coverage\"\nversion = \"7.6.10\"\ndescription = \"Code coverage measurement for Python\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"coverage-7.6.10-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:5c912978f7fbf47ef99cec50c4401340436d200d41d714c7a4766f377c5b7b78\"},\n    {file = \"coverage-7.6.10-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:a01ec4af7dfeb96ff0078ad9a48810bb0cc8abcb0115180c6013a6b26237626c\"},\n    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a3b204c11e2b2d883946fe1d97f89403aa1811df28ce0447439178cc7463448a\"},\n    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:32ee6d8491fcfc82652a37109f69dee9a830e9379166cb73c16d8dc5c2915165\"},\n    {file = \"coverage-7.6.10-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:675cefc4c06e3b4c876b85bfb7c59c5e2218167bbd4da5075cbe3b5790a28988\"},\n    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f4f620668dbc6f5e909a0946a877310fb3d57aea8198bde792aae369ee1c23b5\"},\n    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:4eea95ef275de7abaef630c9b2c002ffbc01918b726a39f5a4353916ec72d2f3\"},\n    {file = \"coverage-7.6.10-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:e2f0280519e42b0a17550072861e0bc8a80a0870de260f9796157d3fca2733c5\"},\n    {file = \"coverage-7.6.10-cp310-cp310-win32.whl\", hash = \"sha256:bc67deb76bc3717f22e765ab3e07ee9c7a5e26b9019ca19a3b063d9f4b874244\"},\n    {file = \"coverage-7.6.10-cp310-cp310-win_amd64.whl\", hash = \"sha256:0f460286cb94036455e703c66988851d970fdfd8acc2a1122ab7f4f904e4029e\"},\n    {file = \"coverage-7.6.10-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:ea3c8f04b3e4af80e17bab607c386a830ffc2fb88a5484e1df756478cf70d1d3\"},\n    {file = \"coverage-7.6.10-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:507a20fc863cae1d5720797761b42d2d87a04b3e5aeb682ef3b7332e90598f43\"},\n    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d37a84878285b903c0fe21ac8794c6dab58150e9359f1aaebbeddd6412d53132\"},\n    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a534738b47b0de1995f85f582d983d94031dffb48ab86c95bdf88dc62212142f\"},\n    {file = \"coverage-7.6.10-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0d7a2bf79378d8fb8afaa994f91bfd8215134f8631d27eba3e0e2c13546ce994\"},\n    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:6713ba4b4ebc330f3def51df1d5d38fad60b66720948112f114968feb52d3f99\"},\n    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:ab32947f481f7e8c763fa2c92fd9f44eeb143e7610c4ca9ecd6a36adab4081bd\"},\n    {file = \"coverage-7.6.10-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:7bbd8c8f1b115b892e34ba66a097b915d3871db7ce0e6b9901f462ff3a975377\"},\n    {file = \"coverage-7.6.10-cp311-cp311-win32.whl\", hash = \"sha256:299e91b274c5c9cdb64cbdf1b3e4a8fe538a7a86acdd08fae52301b28ba297f8\"},\n    {file = \"coverage-7.6.10-cp311-cp311-win_amd64.whl\", hash = \"sha256:489a01f94aa581dbd961f306e37d75d4ba16104bbfa2b0edb21d29b73be83609\"},\n    {file = \"coverage-7.6.10-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:27c6e64726b307782fa5cbe531e7647aee385a29b2107cd87ba7c0105a5d3853\"},\n    {file = \"coverage-7.6.10-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:c56e097019e72c373bae32d946ecf9858fda841e48d82df7e81c63ac25554078\"},\n    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c7827a5bc7bdb197b9e066cdf650b2887597ad124dd99777332776f7b7c7d0d0\"},\n    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:204a8238afe787323a8b47d8be4df89772d5c1e4651b9ffa808552bdf20e1d50\"},\n    {file = \"coverage-7.6.10-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e67926f51821b8e9deb6426ff3164870976fe414d033ad90ea75e7ed0c2e5022\"},\n    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:e78b270eadb5702938c3dbe9367f878249b5ef9a2fcc5360ac7bff694310d17b\"},\n    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:714f942b9c15c3a7a5fe6876ce30af831c2ad4ce902410b7466b662358c852c0\"},\n    {file = \"coverage-7.6.10-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:abb02e2f5a3187b2ac4cd46b8ced85a0858230b577ccb2c62c81482ca7d18852\"},\n    {file = \"coverage-7.6.10-cp312-cp312-win32.whl\", hash = \"sha256:55b201b97286cf61f5e76063f9e2a1d8d2972fc2fcfd2c1272530172fd28c359\"},\n    {file = \"coverage-7.6.10-cp312-cp312-win_amd64.whl\", hash = \"sha256:e4ae5ac5e0d1e4edfc9b4b57b4cbecd5bc266a6915c500f358817a8496739247\"},\n    {file = \"coverage-7.6.10-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:05fca8ba6a87aabdd2d30d0b6c838b50510b56cdcfc604d40760dae7153b73d9\"},\n    {file = \"coverage-7.6.10-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:9e80eba8801c386f72e0712a0453431259c45c3249f0009aff537a517b52942b\"},\n    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a372c89c939d57abe09e08c0578c1d212e7a678135d53aa16eec4430adc5e690\"},\n    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ec22b5e7fe7a0fa8509181c4aac1db48f3dd4d3a566131b313d1efc102892c18\"},\n    {file = \"coverage-7.6.10-cp313-cp313-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:26bcf5c4df41cad1b19c84af71c22cbc9ea9a547fc973f1f2cc9a290002c8b3c\"},\n    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:4e4630c26b6084c9b3cb53b15bd488f30ceb50b73c35c5ad7871b869cb7365fd\"},\n    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:2396e8116db77789f819d2bc8a7e200232b7a282c66e0ae2d2cd84581a89757e\"},\n    {file = \"coverage-7.6.10-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:79109c70cc0882e4d2d002fe69a24aa504dec0cc17169b3c7f41a1d341a73694\"},\n    {file = \"coverage-7.6.10-cp313-cp313-win32.whl\", hash = \"sha256:9e1747bab246d6ff2c4f28b4d186b205adced9f7bd9dc362051cc37c4a0c7bd6\"},\n    {file = \"coverage-7.6.10-cp313-cp313-win_amd64.whl\", hash = \"sha256:254f1a3b1eef5f7ed23ef265eaa89c65c8c5b6b257327c149db1ca9d4a35f25e\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-macosx_10_13_x86_64.whl\", hash = \"sha256:2ccf240eb719789cedbb9fd1338055de2761088202a9a0b73032857e53f612fe\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-macosx_11_0_arm64.whl\", hash = \"sha256:0c807ca74d5a5e64427c8805de15b9ca140bba13572d6d74e262f46f50b13273\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2bcfa46d7709b5a7ffe089075799b902020b62e7ee56ebaed2f4bdac04c508d8\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4e0de1e902669dccbf80b0415fb6b43d27edca2fbd48c74da378923b05316098\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3f7b444c42bbc533aaae6b5a2166fd1a797cdb5eb58ee51a92bee1eb94a1e1cb\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_aarch64.whl\", hash = \"sha256:b330368cb99ef72fcd2dc3ed260adf67b31499584dc8a20225e85bfe6f6cfed0\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_i686.whl\", hash = \"sha256:9a7cfb50515f87f7ed30bc882f68812fd98bc2852957df69f3003d22a2aa0abf\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-musllinux_1_2_x86_64.whl\", hash = \"sha256:6f93531882a5f68c28090f901b1d135de61b56331bba82028489bc51bdd818d2\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-win32.whl\", hash = \"sha256:89d76815a26197c858f53c7f6a656686ec392b25991f9e409bcef020cd532312\"},\n    {file = \"coverage-7.6.10-cp313-cp313t-win_amd64.whl\", hash = \"sha256:54a5f0f43950a36312155dae55c505a76cd7f2b12d26abeebbe7a0b36dbc868d\"},\n    {file = \"coverage-7.6.10-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:656c82b8a0ead8bba147de9a89bda95064874c91a3ed43a00e687f23cc19d53a\"},\n    {file = \"coverage-7.6.10-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ccc2b70a7ed475c68ceb548bf69cec1e27305c1c2606a5eb7c3afff56a1b3b27\"},\n    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a5e37dc41d57ceba70956fa2fc5b63c26dba863c946ace9705f8eca99daecdc4\"},\n    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:0aa9692b4fdd83a4647eeb7db46410ea1322b5ed94cd1715ef09d1d5922ba87f\"},\n    {file = \"coverage-7.6.10-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:aa744da1820678b475e4ba3dfd994c321c5b13381d1041fe9c608620e6676e25\"},\n    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:c0b1818063dc9e9d838c09e3a473c1422f517889436dd980f5d721899e66f315\"},\n    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:59af35558ba08b758aec4d56182b222976330ef8d2feacbb93964f576a7e7a90\"},\n    {file = \"coverage-7.6.10-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:7ed2f37cfce1ce101e6dffdfd1c99e729dd2ffc291d02d3e2d0af8b53d13840d\"},\n    {file = \"coverage-7.6.10-cp39-cp39-win32.whl\", hash = \"sha256:4bcc276261505d82f0ad426870c3b12cb177752834a633e737ec5ee79bbdff18\"},\n    {file = \"coverage-7.6.10-cp39-cp39-win_amd64.whl\", hash = \"sha256:457574f4599d2b00f7f637a0700a6422243b3565509457b2dbd3f50703e11f59\"},\n    {file = \"coverage-7.6.10-pp39.pp310-none-any.whl\", hash = \"sha256:fd34e7b3405f0cc7ab03d54a334c17a9e802897580d964bd8c2001f4b9fd488f\"},\n    {file = \"coverage-7.6.10.tar.gz\", hash = \"sha256:7fb105327c8f8f0682e29843e2ff96af9dcbe5bab8eeb4b398c6a33a16d80a23\"},\n]\n\n[package.dependencies]\ntomli = {version = \"*\", optional = true, markers = \"python_full_version <= \\\"3.11.0a6\\\" and extra == \\\"toml\\\"\"}\n\n[package.extras]\ntoml = [\"tomli\"]\n\n[[package]]\nname = \"crashtest\"\nversion = \"0.4.1\"\ndescription = \"Manage Python errors with ease\"\noptional = false\npython-versions = \">=3.7,<4.0\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"crashtest-0.4.1-py3-none-any.whl\", hash = \"sha256:8d23eac5fa660409f57472e3851dab7ac18aba459a8d19cbbba86d3d5aecd2a5\"},\n    {file = \"crashtest-0.4.1.tar.gz\", hash = \"sha256:80d7b1f316ebfbd429f648076d6275c877ba30ba48979de4191714a75266f0ce\"},\n]\n\n[[package]]\nname = \"cryptography\"\nversion = \"43.0.3\"\ndescription = \"cryptography is a package which provides cryptographic recipes and primitives to Python developers.\"\noptional = false\npython-versions = \">=3.7\"\ngroups = [\"main\"]\nmarkers = \"sys_platform == \\\"linux\\\"\"\nfiles = [\n    {file = \"cryptography-43.0.3-cp37-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:bf7a1932ac4176486eab36a19ed4c0492da5d97123f1406cf15e41b05e787d2e\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:63efa177ff54aec6e1c0aefaa1a241232dcd37413835a9b674b6e3f0ae2bfd3e\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7e1ce50266f4f70bf41a2c6dc4358afadae90e2a1e5342d3c08883df1675374f\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-manylinux_2_28_aarch64.whl\", hash = \"sha256:443c4a81bb10daed9a8f334365fe52542771f25aedaf889fd323a853ce7377d6\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-manylinux_2_28_x86_64.whl\", hash = \"sha256:74f57f24754fe349223792466a709f8e0c093205ff0dca557af51072ff47ab18\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:9762ea51a8fc2a88b70cf2995e5675b38d93bf36bd67d91721c309df184f49bd\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:81ef806b1fef6b06dcebad789f988d3b37ccaee225695cf3e07648eee0fc6b73\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-win32.whl\", hash = \"sha256:cbeb489927bd7af4aa98d4b261af9a5bc025bd87f0e3547e11584be9e9427be2\"},\n    {file = \"cryptography-43.0.3-cp37-abi3-win_amd64.whl\", hash = \"sha256:f46304d6f0c6ab8e52770addfa2fc41e6629495548862279641972b6215451cd\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:8ac43ae87929a5982f5948ceda07001ee5e83227fd69cf55b109144938d96984\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:846da004a5804145a5f441b8530b4bf35afbf7da70f82409f151695b127213d5\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0f996e7268af62598f2fc1204afa98a3b5712313a55c4c9d434aef49cadc91d4\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-manylinux_2_28_aarch64.whl\", hash = \"sha256:f7b178f11ed3664fd0e995a47ed2b5ff0a12d893e41dd0494f406d1cf555cab7\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-manylinux_2_28_x86_64.whl\", hash = \"sha256:c2e6fc39c4ab499049df3bdf567f768a723a5e8464816e8f009f121a5a9f4405\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-musllinux_1_2_aarch64.whl\", hash = \"sha256:e1be4655c7ef6e1bbe6b5d0403526601323420bcf414598955968c9ef3eb7d16\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-musllinux_1_2_x86_64.whl\", hash = \"sha256:df6b6c6d742395dd77a23ea3728ab62f98379eff8fb61be2744d4679ab678f73\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-win32.whl\", hash = \"sha256:d56e96520b1020449bbace2b78b603442e7e378a9b3bd68de65c782db1507995\"},\n    {file = \"cryptography-43.0.3-cp39-abi3-win_amd64.whl\", hash = \"sha256:0c580952eef9bf68c4747774cde7ec1d85a6e61de97281f2dba83c7d2c806362\"},\n    {file = \"cryptography-43.0.3-pp310-pypy310_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:d03b5621a135bffecad2c73e9f4deb1a0f977b9a8ffe6f8e002bf6c9d07b918c\"},\n    {file = \"cryptography-43.0.3-pp310-pypy310_pp73-manylinux_2_28_aarch64.whl\", hash = \"sha256:a2a431ee15799d6db9fe80c82b055bae5a752bef645bba795e8e52687c69efe3\"},\n    {file = \"cryptography-43.0.3-pp310-pypy310_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:281c945d0e28c92ca5e5930664c1cefd85efe80e5c0d2bc58dd63383fda29f83\"},\n    {file = \"cryptography-43.0.3-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:f18c716be16bc1fea8e95def49edf46b82fccaa88587a45f8dc0ff6ab5d8e0a7\"},\n    {file = \"cryptography-43.0.3-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:4a02ded6cd4f0a5562a8887df8b3bd14e822a90f97ac5e544c162899bc467664\"},\n    {file = \"cryptography-43.0.3-pp39-pypy39_pp73-manylinux_2_28_aarch64.whl\", hash = \"sha256:53a583b6637ab4c4e3591a15bc9db855b8d9dee9a669b550f311480acab6eb08\"},\n    {file = \"cryptography-43.0.3-pp39-pypy39_pp73-manylinux_2_28_x86_64.whl\", hash = \"sha256:1ec0bcf7e17c0c5669d881b1cd38c4972fade441b27bda1051665faaa89bdcaa\"},\n    {file = \"cryptography-43.0.3-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:2ce6fae5bdad59577b44e4dfed356944fbf1d925269114c28be377692643b4ff\"},\n    {file = \"cryptography-43.0.3.tar.gz\", hash = \"sha256:315b9001266a492a6ff443b61238f956b214dbec9910a081ba5b6646a055a805\"},\n]\n\n[package.dependencies]\ncffi = {version = \">=1.12\", markers = \"platform_python_implementation != \\\"PyPy\\\"\"}\n\n[package.extras]\ndocs = [\"sphinx (>=5.3.0)\", \"sphinx-rtd-theme (>=1.1.1)\"]\ndocstest = [\"pyenchant (>=1.6.11)\", \"readme-renderer\", \"sphinxcontrib-spelling (>=4.0.1)\"]\nnox = [\"nox\"]\npep8test = [\"check-sdist\", \"click\", \"mypy\", \"ruff\"]\nsdist = [\"build\"]\nssh = [\"bcrypt (>=3.1.5)\"]\ntest = [\"certifi\", \"cryptography-vectors (==43.0.3)\", \"pretend\", \"pytest (>=6.2.0)\", \"pytest-benchmark\", \"pytest-cov\", \"pytest-xdist\"]\ntest-randomorder = [\"pytest-randomly\"]\n\n[[package]]\nname = \"deepdiff\"\nversion = \"8.1.1\"\ndescription = \"Deep Difference and Search of any Python object/data. Recreate objects by adding adding deltas to each other.\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"deepdiff-8.1.1-py3-none-any.whl\", hash = \"sha256:b0231fa3afb0f7184e82535f2b4a36636442ed21e94a0cf3aaa7982157e7ebca\"},\n    {file = \"deepdiff-8.1.1.tar.gz\", hash = \"sha256:dd7bc7d5c8b51b5b90f01b0e2fe23c801fd8b4c6a7ee7e31c5a3c3663fcc7ceb\"},\n]\n\n[package.dependencies]\norderly-set = \">=5.2.3,<6\"\n\n[package.extras]\ncli = [\"click (==8.1.7)\", \"pyyaml (==6.0.2)\"]\noptimize = [\"orjson\"]\n\n[[package]]\nname = \"distlib\"\nversion = \"0.3.9\"\ndescription = \"Distribution utilities\"\noptional = false\npython-versions = \"*\"\ngroups = [\"main\", \"dev\"]\nfiles = [\n    {file = \"distlib-0.3.9-py2.py3-none-any.whl\", hash = \"sha256:47f8c22fd27c27e25a65601af709b38e4f0a45ea4fc2e710f65755fa8caaaf87\"},\n    {file = \"distlib-0.3.9.tar.gz\", hash = \"sha256:a60f20dea646b8a33f3e7772f74dc0b2d0772d2837ee1342a00645c81edf9403\"},\n]\n\n[[package]]\nname = \"dulwich\"\nversion = \"0.22.7\"\ndescription = \"Python Git Library\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"dulwich-0.22.7-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:01e484d44014fef78cdef3b3adc34564808b4677497a57a0950c90a1d6349be3\"},\n    {file = \"dulwich-0.22.7-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bb258c62d7fb4cfe03b3fba09f702ebb84a924f2f004833435e32c93fe8a7f13\"},\n    {file = \"dulwich-0.22.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fdbd087e9e99bc809b15864ebc79dbefe869e3038b64c953d7736f6e6b382dc7\"},\n    {file = \"dulwich-0.22.7-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6c830d63c691b5f979964a2d6b325930b7a53f14836598352690601cd205f04b\"},\n    {file = \"dulwich-0.22.7-cp310-cp310-win32.whl\", hash = \"sha256:925cec97aeefda3f950e45e8d4c247e4ce6f83b6ee96e383c82f9bced626151f\"},\n    {file = \"dulwich-0.22.7-cp310-cp310-win_amd64.whl\", hash = \"sha256:f73668ecc29e0a20d20970489fffe2ba466e5486eae2f20104bc38bcbe611f64\"},\n    {file = \"dulwich-0.22.7-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:df5a179e5d95ac0263b5e0ccd53311eac486091979dcac106c5cc9e0ee4f2aa2\"},\n    {file = \"dulwich-0.22.7-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ca7ed207956001e6a8a2e3f319cdc37591e53f7eb04aedafa78f96768048c53e\"},\n    {file = \"dulwich-0.22.7-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:052715452b729544c611a107b2eef6111e527f041c1b666f8ed36c04e39c36b5\"},\n    {file = \"dulwich-0.22.7-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:74b7cf6f0d46ac777be617dad7c1b992380004de74c0e0652bed174686249f34\"},\n    {file = \"dulwich-0.22.7-cp311-cp311-win32.whl\", hash = \"sha256:5b9806a75f4b74fa891926b1d830e21f9cead80ed6dd803ed668369b26fb8b5f\"},\n    {file = \"dulwich-0.22.7-cp311-cp311-win_amd64.whl\", hash = \"sha256:01544915c4056d0820de8cf126b971f7c180743ff64c4435c89168e44b30df4b\"},\n    {file = \"dulwich-0.22.7-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:2b7a3ac4baa49bd988cc0d0891a93aa26307c01f35caeed8729b7928a1f483af\"},\n    {file = \"dulwich-0.22.7-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7d72ce1377eac23bd77aa3541ceb91f2d8bd68687659f8625af8301f0b6b0a63\"},\n    {file = \"dulwich-0.22.7-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6bda2eca0847c30a9312a72f219af9e63feb7d2ca89f47fdaa240b0d0cdd6b84\"},\n    {file = \"dulwich-0.22.7-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a8886b2c9750ba15193356d9e8608e031cd89a780d0afc53b3101391605b3793\"},\n    {file = \"dulwich-0.22.7-cp312-cp312-win32.whl\", hash = \"sha256:1782854c10878b5cb8423e74b0ef4256c3667f7b0266513af028ac28dbab1f2d\"},\n    {file = \"dulwich-0.22.7-cp312-cp312-win_amd64.whl\", hash = \"sha256:fe324dc40b93e8be996c9fa9291a439bef835a92a2e4cb5c8cbdb1171c168fd6\"},\n    {file = \"dulwich-0.22.7-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:2220c8b7cac5794e2260a924e81b05baa7836c18ba805d5a6731071a5ff6b860\"},\n    {file = \"dulwich-0.22.7-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1cbd5ecbc95e18c745965fc7b2b71209443987a99e499c7bb074234d7c6142e2\"},\n    {file = \"dulwich-0.22.7-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9f418779837a3249b7dfc4b3dc7266fa40687e5f0249eedfa7185560ba1ee148\"},\n    {file = \"dulwich-0.22.7-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9c01db2ef6d5f5b9192c0011624701b0de328868fe0c32601368cd337e77cd1a\"},\n    {file = \"dulwich-0.22.7-cp313-cp313-win32.whl\", hash = \"sha256:a64e61fa6ab60db0f897f1c30f32b26b330d3a9dc264f089ee9c44f5900fb657\"},\n    {file = \"dulwich-0.22.7-cp313-cp313-win_amd64.whl\", hash = \"sha256:9f5954cd491313743d7bd3623d323b72afceb83d2c2a47921f621bdd9d4c615b\"},\n    {file = \"dulwich-0.22.7-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:6bea11b98e854ff2abec390eeac752586b83921a22091dae65470ccbb003fc1b\"},\n    {file = \"dulwich-0.22.7-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cdbcf206d4b1e5ba2affc6189948cb292cc647593876b96a0b71db44e79a05a1\"},\n    {file = \"dulwich-0.22.7-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:aa0bb9afa799c0301b2760e9af99083a2b08f655c55037945b6a5e227566adc1\"},\n    {file = \"dulwich-0.22.7-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:62027dfccee97268eadf0c54df3d72ce30e4402cf5cf06c021e474b9a9eb3536\"},\n    {file = \"dulwich-0.22.7-cp39-cp39-win32.whl\", hash = \"sha256:637a9ac27512b8c04e6a29bf92e3f73386cd85dfe8609f523ffbc96e659bde4b\"},\n    {file = \"dulwich-0.22.7-cp39-cp39-win_amd64.whl\", hash = \"sha256:986943e27a5c94c0be42fdcc688be1ae1a1349a3dbaa773fa7f9bdada1232b68\"},\n    {file = \"dulwich-0.22.7-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:b25848041c51d09affafd2708236205cc4483bed8f7f43ecbe63b6a66b447604\"},\n    {file = \"dulwich-0.22.7-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:71b20bd6a25658e968e813eb69164332d3a2ab6029b51d3c6af8b64f2471847a\"},\n    {file = \"dulwich-0.22.7-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c68ab3540809bedcdd9b99e51c12adf11c2ab26554f74d899d8cf55bfa2639a6\"},\n    {file = \"dulwich-0.22.7-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:257abd49a768a52cf7f508daf2d30fe73f54fd32b7a674abd43817f66b0ca17b\"},\n    {file = \"dulwich-0.22.7-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:8dd5df3919c648887e550e836f87b4b83f1429876adce5ead5b5977e333c874d\"},\n    {file = \"dulwich-0.22.7-pp39-pypy39_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:5ada6a2fd400a4f51adfedd0267bfb08c61e2d9846c18ea653b0eb88a7b851d0\"},\n    {file = \"dulwich-0.22.7-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:007d8160b511bb149d31c08548307982f6ce752a46e7088b020517de00c3bd46\"},\n    {file = \"dulwich-0.22.7-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:40260034a6ecc3141a0d42360e888a73e58b9c0c9363c454cae182957fe602ac\"},\n    {file = \"dulwich-0.22.7-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:753eec461434f0ccbe0956ec825250e12230e8f1b365c8be1604386d94c2d8d0\"},\n    {file = \"dulwich-0.22.7-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:7649f0c9b4760d72768805155e66579761f282fdca123e351019c85efce811eb\"},\n    {file = \"dulwich-0.22.7-py3-none-any.whl\", hash = \"sha256:10c5ee20430714ea6a79dde22c1f77078848930d27021aa810204738bc175e95\"},\n    {file = \"dulwich-0.22.7.tar.gz\", hash = \"sha256:d53935832dd182d4c1415042187093efcee988af5cd397fb1f394f5bb27f0707\"},\n]\n\n[package.dependencies]\nurllib3 = \">=1.25\"\n\n[package.extras]\ndev = [\"mypy (==1.13.0)\", \"ruff (==0.8.3)\"]\nfastimport = [\"fastimport\"]\nhttps = [\"urllib3 (>=1.24.1)\"]\nparamiko = [\"paramiko\"]\npgp = [\"gpg\"]\n\n[[package]]\nname = \"exceptiongroup\"\nversion = \"1.2.2\"\ndescription = \"Backport of PEP 654 (exception groups)\"\noptional = false\npython-versions = \">=3.7\"\ngroups = [\"github-actions\", \"test\"]\nmarkers = \"python_version < \\\"3.11\\\"\"\nfiles = [\n    {file = \"exceptiongroup-1.2.2-py3-none-any.whl\", hash = \"sha256:3111b9d131c238bec2f8f516e123e14ba243563fb135d3fe885990585aa7795b\"},\n    {file = \"exceptiongroup-1.2.2.tar.gz\", hash = \"sha256:47c2edf7c6738fafb49fd34290706d1a1a2f4d1c6df275526b62cbb4aa5393cc\"},\n]\n\n[package.extras]\ntest = [\"pytest (>=6)\"]\n\n[[package]]\nname = \"execnet\"\nversion = \"2.1.1\"\ndescription = \"execnet: rapid multi-Python deployment\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"execnet-2.1.1-py3-none-any.whl\", hash = \"sha256:26dee51f1b80cebd6d0ca8e74dd8745419761d3bef34163928cbebbdc4749fdc\"},\n    {file = \"execnet-2.1.1.tar.gz\", hash = \"sha256:5189b52c6121c24feae288166ab41b32549c7e2348652736540b9e6e7d4e72e3\"},\n]\n\n[package.extras]\ntesting = [\"hatch\", \"pre-commit\", \"pytest\", \"tox\"]\n\n[[package]]\nname = \"fastjsonschema\"\nversion = \"2.21.1\"\ndescription = \"Fastest Python implementation of JSON schema\"\noptional = false\npython-versions = \"*\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"fastjsonschema-2.21.1-py3-none-any.whl\", hash = \"sha256:c9e5b7e908310918cf494a434eeb31384dd84a98b57a30bcb1f535015b554667\"},\n    {file = \"fastjsonschema-2.21.1.tar.gz\", hash = \"sha256:794d4f0a58f848961ba16af7b9c85a3e88cd360df008c59aac6fc5ae9323b5d4\"},\n]\n\n[package.extras]\ndevel = [\"colorama\", \"json-spec\", \"jsonschema\", \"pylint\", \"pytest\", \"pytest-benchmark\", \"pytest-cache\", \"validictory\"]\n\n[[package]]\nname = \"filelock\"\nversion = \"3.16.1\"\ndescription = \"A platform independent file lock.\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"dev\"]\nfiles = [\n    {file = \"filelock-3.16.1-py3-none-any.whl\", hash = \"sha256:2082e5703d51fbf98ea75855d9d5527e33d8ff23099bec374a134febee6946b0\"},\n    {file = \"filelock-3.16.1.tar.gz\", hash = \"sha256:c249fbfcd5db47e5e2d6d62198e565475ee65e4831e2561c8e313fa7eb961435\"},\n]\n\n[package.extras]\ndocs = [\"furo (>=2024.8.6)\", \"sphinx (>=8.0.2)\", \"sphinx-autodoc-typehints (>=2.4.1)\"]\ntesting = [\"covdefaults (>=2.3)\", \"coverage (>=7.6.1)\", \"diff-cover (>=9.2)\", \"pytest (>=8.3.3)\", \"pytest-asyncio (>=0.24)\", \"pytest-cov (>=5)\", \"pytest-mock (>=3.14)\", \"pytest-timeout (>=2.3.1)\", \"virtualenv (>=20.26.4)\"]\ntyping = [\"typing-extensions (>=4.12.2)\"]\n\n[[package]]\nname = \"httpretty\"\nversion = \"1.1.4\"\ndescription = \"HTTP client mock for Python\"\noptional = false\npython-versions = \">=3\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"httpretty-1.1.4.tar.gz\", hash = \"sha256:20de0e5dd5a18292d36d928cc3d6e52f8b2ac73daec40d41eb62dee154933b68\"},\n]\n\n[[package]]\nname = \"identify\"\nversion = \"2.6.4\"\ndescription = \"File identification library for Python\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"dev\"]\nfiles = [\n    {file = \"identify-2.6.4-py2.py3-none-any.whl\", hash = \"sha256:993b0f01b97e0568c179bb9196391ff391bfb88a99099dbf5ce392b68f42d0af\"},\n    {file = \"identify-2.6.4.tar.gz\", hash = \"sha256:285a7d27e397652e8cafe537a6cc97dd470a970f48fb2e9d979aa38eae5513ac\"},\n]\n\n[package.extras]\nlicense = [\"ukkonen\"]\n\n[[package]]\nname = \"idna\"\nversion = \"3.10\"\ndescription = \"Internationalized Domain Names in Applications (IDNA)\"\noptional = false\npython-versions = \">=3.6\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"idna-3.10-py3-none-any.whl\", hash = \"sha256:946d195a0d259cbba61165e88e65941f16e9b36ea6ddb97f00452bae8b1287d3\"},\n    {file = \"idna-3.10.tar.gz\", hash = \"sha256:12f65c9b470abda6dc35cf8e63cc574b1c52b11df2c86030af0ac09b01b13ea9\"},\n]\n\n[package.extras]\nall = [\"flake8 (>=7.1.1)\", \"mypy (>=1.11.2)\", \"pytest (>=8.3.2)\", \"ruff (>=0.6.2)\"]\n\n[[package]]\nname = \"importlib-metadata\"\nversion = \"8.5.0\"\ndescription = \"Read metadata from Python packages\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"test\"]\nfiles = [\n    {file = \"importlib_metadata-8.5.0-py3-none-any.whl\", hash = \"sha256:45e54197d28b7a7f1559e60b95e7c567032b602131fbd588f1497f47880aa68b\"},\n    {file = \"importlib_metadata-8.5.0.tar.gz\", hash = \"sha256:71522656f0abace1d072b9e5481a48f07c138e00f079c38c8f883823f9c26bd7\"},\n]\nmarkers = {main = \"python_version < \\\"3.12\\\"\", test = \"python_version < \\\"3.10\\\"\"}\n\n[package.dependencies]\nzipp = \">=3.20\"\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\nperf = [\"ipython\"]\ntest = [\"flufl.flake8\", \"importlib-resources (>=1.3)\", \"jaraco.test (>=5.4)\", \"packaging\", \"pyfakefs\", \"pytest (>=6,!=8.1.*)\", \"pytest-perf (>=0.9.2)\"]\ntype = [\"pytest-mypy\"]\n\n[[package]]\nname = \"iniconfig\"\nversion = \"2.0.0\"\ndescription = \"brain-dead simple config-ini parsing\"\noptional = false\npython-versions = \">=3.7\"\ngroups = [\"github-actions\", \"test\"]\nfiles = [\n    {file = \"iniconfig-2.0.0-py3-none-any.whl\", hash = \"sha256:b6a85871a79d2e3b22d2d1b94ac2824226a63c6b741c88f7ae975f18b6778374\"},\n    {file = \"iniconfig-2.0.0.tar.gz\", hash = \"sha256:2d91e135bf72d31a410b17c16da610a82cb55f6b0477d1a902134b24a455b8b3\"},\n]\n\n[[package]]\nname = \"installer\"\nversion = \"0.7.0\"\ndescription = \"A library for installing Python wheels.\"\noptional = false\npython-versions = \">=3.7\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"installer-0.7.0-py3-none-any.whl\", hash = \"sha256:05d1933f0a5ba7d8d6296bb6d5018e7c94fa473ceb10cf198a92ccea19c27b53\"},\n    {file = \"installer-0.7.0.tar.gz\", hash = \"sha256:a26d3e3116289bb08216e0d0f7d925fcef0b0194eedfa0c944bcaaa106c4b631\"},\n]\n\n[[package]]\nname = \"jaraco-classes\"\nversion = \"3.4.0\"\ndescription = \"Utility functions for Python class constructs\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"test\"]\nfiles = [\n    {file = \"jaraco.classes-3.4.0-py3-none-any.whl\", hash = \"sha256:f662826b6bed8cace05e7ff873ce0f9283b5c924470fe664fff1c2f00f581790\"},\n    {file = \"jaraco.classes-3.4.0.tar.gz\", hash = \"sha256:47a024b51d0239c0dd8c8540c6c7f484be3b8fcf0b2d85c13825780d3b3f3acd\"},\n]\n\n[package.dependencies]\nmore-itertools = \"*\"\n\n[package.extras]\ndocs = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\ntesting = [\"pytest (>=6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy\", \"pytest-ruff (>=0.2.1)\"]\n\n[[package]]\nname = \"jaraco-context\"\nversion = \"6.0.1\"\ndescription = \"Useful decorators and context managers\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"jaraco.context-6.0.1-py3-none-any.whl\", hash = \"sha256:f797fc481b490edb305122c9181830a3a5b76d84ef6d1aef2fb9b47ab956f9e4\"},\n    {file = \"jaraco_context-6.0.1.tar.gz\", hash = \"sha256:9bae4ea555cf0b14938dc0aee7c9f32ed303aa20a3b73e7dc80111628792d1b3\"},\n]\n\n[package.dependencies]\n\"backports.tarfile\" = {version = \"*\", markers = \"python_version < \\\"3.12\\\"\"}\n\n[package.extras]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\ntest = [\"portend\", \"pytest (>=6,!=8.1.*)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=2.2)\", \"pytest-mypy\", \"pytest-ruff (>=0.2.1)\"]\n\n[[package]]\nname = \"jaraco-functools\"\nversion = \"4.1.0\"\ndescription = \"Functools like those found in stdlib\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"jaraco.functools-4.1.0-py3-none-any.whl\", hash = \"sha256:ad159f13428bc4acbf5541ad6dec511f91573b90fba04df61dafa2a1231cf649\"},\n    {file = \"jaraco_functools-4.1.0.tar.gz\", hash = \"sha256:70f7e0e2ae076498e212562325e805204fc092d7b4c17e0e86c959e249701a9d\"},\n]\n\n[package.dependencies]\nmore-itertools = \"*\"\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\ntest = [\"jaraco.classes\", \"pytest (>=6,!=8.1.*)\"]\ntype = [\"pytest-mypy\"]\n\n[[package]]\nname = \"jeepney\"\nversion = \"0.8.0\"\ndescription = \"Low-level, pure Python DBus protocol wrapper.\"\noptional = false\npython-versions = \">=3.7\"\ngroups = [\"main\"]\nmarkers = \"sys_platform == \\\"linux\\\"\"\nfiles = [\n    {file = \"jeepney-0.8.0-py3-none-any.whl\", hash = \"sha256:c0a454ad016ca575060802ee4d590dd912e35c122fa04e70306de3d076cce755\"},\n    {file = \"jeepney-0.8.0.tar.gz\", hash = \"sha256:5efe48d255973902f6badc3ce55e2aa6c5c3b3bc642059ef3a91247bcfcc5806\"},\n]\n\n[package.extras]\ntest = [\"async-timeout\", \"pytest\", \"pytest-asyncio (>=0.17)\", \"pytest-trio\", \"testpath\", \"trio\"]\ntrio = [\"async_generator\", \"trio\"]\n\n[[package]]\nname = \"keyring\"\nversion = \"25.6.0\"\ndescription = \"Store and access your passwords safely.\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"keyring-25.6.0-py3-none-any.whl\", hash = \"sha256:552a3f7af126ece7ed5c89753650eec89c7eaae8617d0aa4d9ad2b75111266bd\"},\n    {file = \"keyring-25.6.0.tar.gz\", hash = \"sha256:0b39998aa941431eb3d9b0d4b2460bc773b9df6fed7621c2dfb291a7e0187a66\"},\n]\n\n[package.dependencies]\nimportlib_metadata = {version = \">=4.11.4\", markers = \"python_version < \\\"3.12\\\"\"}\n\"jaraco.classes\" = \"*\"\n\"jaraco.context\" = \"*\"\n\"jaraco.functools\" = \"*\"\njeepney = {version = \">=0.4.2\", markers = \"sys_platform == \\\"linux\\\"\"}\npywin32-ctypes = {version = \">=0.2.0\", markers = \"sys_platform == \\\"win32\\\"\"}\nSecretStorage = {version = \">=3.2\", markers = \"sys_platform == \\\"linux\\\"\"}\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\"]\ncompletion = [\"shtab (>=1.1.0)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\ntest = [\"pyfakefs\", \"pytest (>=6,!=8.1.*)\"]\ntype = [\"pygobject-stubs\", \"pytest-mypy\", \"shtab\", \"types-pywin32\"]\n\n[[package]]\nname = \"more-itertools\"\nversion = \"10.5.0\"\ndescription = \"More routines for operating on iterables, beyond itertools\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"test\"]\nfiles = [\n    {file = \"more-itertools-10.5.0.tar.gz\", hash = \"sha256:5482bfef7849c25dc3c6dd53a6173ae4795da2a41a80faea6700d9f5846c5da6\"},\n    {file = \"more_itertools-10.5.0-py3-none-any.whl\", hash = \"sha256:037b0d3203ce90cca8ab1defbbdac29d5f993fc20131f3664dc8d6acfa872aef\"},\n]\n\n[[package]]\nname = \"msgpack\"\nversion = \"1.1.0\"\ndescription = \"MessagePack serializer\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"msgpack-1.1.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:7ad442d527a7e358a469faf43fda45aaf4ac3249c8310a82f0ccff9164e5dccd\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:74bed8f63f8f14d75eec75cf3d04ad581da6b914001b474a5d3cd3372c8cc27d\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:914571a2a5b4e7606997e169f64ce53a8b1e06f2cf2c3a7273aa106236d43dd5\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c921af52214dcbb75e6bdf6a661b23c3e6417f00c603dd2070bccb5c3ef499f5\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d8ce0b22b890be5d252de90d0e0d119f363012027cf256185fc3d474c44b1b9e\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:73322a6cc57fcee3c0c57c4463d828e9428275fb85a27aa2aa1a92fdc42afd7b\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:e1f3c3d21f7cf67bcf2da8e494d30a75e4cf60041d98b3f79875afb5b96f3a3f\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:64fc9068d701233effd61b19efb1485587560b66fe57b3e50d29c5d78e7fef68\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:42f754515e0f683f9c79210a5d1cad631ec3d06cea5172214d2176a42e67e19b\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-win32.whl\", hash = \"sha256:3df7e6b05571b3814361e8464f9304c42d2196808e0119f55d0d3e62cd5ea044\"},\n    {file = \"msgpack-1.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:685ec345eefc757a7c8af44a3032734a739f8c45d1b0ac45efc5d8977aa4720f\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:3d364a55082fb2a7416f6c63ae383fbd903adb5a6cf78c5b96cc6316dc1cedc7\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:79ec007767b9b56860e0372085f8504db5d06bd6a327a335449508bbee9648fa\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:6ad622bf7756d5a497d5b6836e7fc3752e2dd6f4c648e24b1803f6048596f701\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8e59bca908d9ca0de3dc8684f21ebf9a690fe47b6be93236eb40b99af28b6ea6\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5e1da8f11a3dd397f0a32c76165cf0c4eb95b31013a94f6ecc0b280c05c91b59\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:452aff037287acb1d70a804ffd022b21fa2bb7c46bee884dbc864cc9024128a0\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:8da4bf6d54ceed70e8861f833f83ce0814a2b72102e890cbdfe4b34764cdd66e\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:41c991beebf175faf352fb940bf2af9ad1fb77fd25f38d9142053914947cdbf6\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:a52a1f3a5af7ba1c9ace055b659189f6c669cf3657095b50f9602af3a3ba0fe5\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-win32.whl\", hash = \"sha256:58638690ebd0a06427c5fe1a227bb6b8b9fdc2bd07701bec13c2335c82131a88\"},\n    {file = \"msgpack-1.1.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:fd2906780f25c8ed5d7b323379f6138524ba793428db5d0e9d226d3fa6aa1788\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:d46cf9e3705ea9485687aa4001a76e44748b609d260af21c4ceea7f2212a501d\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:5dbad74103df937e1325cc4bfeaf57713be0b4f15e1c2da43ccdd836393e2ea2\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:58dfc47f8b102da61e8949708b3eafc3504509a5728f8b4ddef84bd9e16ad420\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4676e5be1b472909b2ee6356ff425ebedf5142427842aa06b4dfd5117d1ca8a2\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:17fb65dd0bec285907f68b15734a993ad3fc94332b5bb21b0435846228de1f39\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a51abd48c6d8ac89e0cfd4fe177c61481aca2d5e7ba42044fd218cfd8ea9899f\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:2137773500afa5494a61b1208619e3871f75f27b03bcfca7b3a7023284140247\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:398b713459fea610861c8a7b62a6fec1882759f308ae0795b5413ff6a160cf3c\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:06f5fd2f6bb2a7914922d935d3b8bb4a7fff3a9a91cfce6d06c13bc42bec975b\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-win32.whl\", hash = \"sha256:ad33e8400e4ec17ba782f7b9cf868977d867ed784a1f5f2ab46e7ba53b6e1e1b\"},\n    {file = \"msgpack-1.1.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:115a7af8ee9e8cddc10f87636767857e7e3717b7a2e97379dc2054712693e90f\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-macosx_10_13_universal2.whl\", hash = \"sha256:071603e2f0771c45ad9bc65719291c568d4edf120b44eb36324dcb02a13bfddf\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:0f92a83b84e7c0749e3f12821949d79485971f087604178026085f60ce109330\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:4a1964df7b81285d00a84da4e70cb1383f2e665e0f1f2a7027e683956d04b734\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:59caf6a4ed0d164055ccff8fe31eddc0ebc07cf7326a2aaa0dbf7a4001cd823e\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0907e1a7119b337971a689153665764adc34e89175f9a34793307d9def08e6ca\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:65553c9b6da8166e819a6aa90ad15288599b340f91d18f60b2061f402b9a4915\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:7a946a8992941fea80ed4beae6bff74ffd7ee129a90b4dd5cf9c476a30e9708d\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:4b51405e36e075193bc051315dbf29168d6141ae2500ba8cd80a522964e31434\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:b4c01941fd2ff87c2a934ee6055bda4ed353a7846b8d4f341c428109e9fcde8c\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-win32.whl\", hash = \"sha256:7c9a35ce2c2573bada929e0b7b3576de647b0defbd25f5139dcdaba0ae35a4cc\"},\n    {file = \"msgpack-1.1.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:bce7d9e614a04d0883af0b3d4d501171fbfca038f12c77fa838d9f198147a23f\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c40ffa9a15d74e05ba1fe2681ea33b9caffd886675412612d93ab17b58ea2fec\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f1ba6136e650898082d9d5a5217d5906d1e138024f836ff48691784bbe1adf96\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e0856a2b7e8dcb874be44fea031d22e5b3a19121be92a1e098f46068a11b0870\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-musllinux_1_2_aarch64.whl\", hash = \"sha256:471e27a5787a2e3f974ba023f9e265a8c7cfd373632247deb225617e3100a3c7\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-musllinux_1_2_i686.whl\", hash = \"sha256:646afc8102935a388ffc3914b336d22d1c2d6209c773f3eb5dd4d6d3b6f8c1cb\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:13599f8829cfbe0158f6456374e9eea9f44eee08076291771d8ae93eda56607f\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-win32.whl\", hash = \"sha256:8a84efb768fb968381e525eeeb3d92857e4985aacc39f3c47ffd00eb4509315b\"},\n    {file = \"msgpack-1.1.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:879a7b7b0ad82481c52d3c7eb99bf6f0645dbdec5134a4bddbd16f3506947feb\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:53258eeb7a80fc46f62fd59c876957a2d0e15e6449a9e71842b6d24419d88ca1\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:7e7b853bbc44fb03fbdba34feb4bd414322180135e2cb5164f20ce1c9795ee48\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:f3e9b4936df53b970513eac1758f3882c88658a220b58dcc1e39606dccaaf01c\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:46c34e99110762a76e3911fc923222472c9d681f1094096ac4102c18319e6468\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:8a706d1e74dd3dea05cb54580d9bd8b2880e9264856ce5068027eed09680aa74\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:534480ee5690ab3cbed89d4c8971a5c631b69a8c0883ecfea96c19118510c846\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:8cf9e8c3a2153934a23ac160cc4cba0ec035f6867c8013cc6077a79823370346\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:3180065ec2abbe13a4ad37688b61b99d7f9e012a535b930e0e683ad6bc30155b\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:c5a91481a3cc573ac8c0d9aace09345d989dc4a0202b7fcb312c88c26d4e71a8\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-win32.whl\", hash = \"sha256:f80bc7d47f76089633763f952e67f8214cb7b3ee6bfa489b3cb6a84cfac114cd\"},\n    {file = \"msgpack-1.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:4d1b7ff2d6146e16e8bd665ac726a89c74163ef8cd39fa8c1087d4e52d3a2325\"},\n    {file = \"msgpack-1.1.0.tar.gz\", hash = \"sha256:dd432ccc2c72b914e4cb77afce64aab761c1137cc698be3984eee260bcb2896e\"},\n]\n\n[[package]]\nname = \"mypy\"\nversion = \"1.14.1\"\ndescription = \"Optional static typing for Python\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"typing\"]\nfiles = [\n    {file = \"mypy-1.14.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:52686e37cf13d559f668aa398dd7ddf1f92c5d613e4f8cb262be2fb4fedb0fcb\"},\n    {file = \"mypy-1.14.1-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:1fb545ca340537d4b45d3eecdb3def05e913299ca72c290326be19b3804b39c0\"},\n    {file = \"mypy-1.14.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:90716d8b2d1f4cd503309788e51366f07c56635a3309b0f6a32547eaaa36a64d\"},\n    {file = \"mypy-1.14.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:2ae753f5c9fef278bcf12e1a564351764f2a6da579d4a81347e1d5a15819997b\"},\n    {file = \"mypy-1.14.1-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:e0fe0f5feaafcb04505bcf439e991c6d8f1bf8b15f12b05feeed96e9e7bf1427\"},\n    {file = \"mypy-1.14.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:7d54bd85b925e501c555a3227f3ec0cfc54ee8b6930bd6141ec872d1c572f81f\"},\n    {file = \"mypy-1.14.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:f995e511de847791c3b11ed90084a7a0aafdc074ab88c5a9711622fe4751138c\"},\n    {file = \"mypy-1.14.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:d64169ec3b8461311f8ce2fd2eb5d33e2d0f2c7b49116259c51d0d96edee48d1\"},\n    {file = \"mypy-1.14.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:ba24549de7b89b6381b91fbc068d798192b1b5201987070319889e93038967a8\"},\n    {file = \"mypy-1.14.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:183cf0a45457d28ff9d758730cd0210419ac27d4d3f285beda038c9083363b1f\"},\n    {file = \"mypy-1.14.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:f2a0ecc86378f45347f586e4163d1769dd81c5a223d577fe351f26b179e148b1\"},\n    {file = \"mypy-1.14.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:ad3301ebebec9e8ee7135d8e3109ca76c23752bac1e717bc84cd3836b4bf3eae\"},\n    {file = \"mypy-1.14.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:30ff5ef8519bbc2e18b3b54521ec319513a26f1bba19a7582e7b1f58a6e69f14\"},\n    {file = \"mypy-1.14.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:cb9f255c18052343c70234907e2e532bc7e55a62565d64536dbc7706a20b78b9\"},\n    {file = \"mypy-1.14.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:8b4e3413e0bddea671012b063e27591b953d653209e7a4fa5e48759cda77ca11\"},\n    {file = \"mypy-1.14.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:553c293b1fbdebb6c3c4030589dab9fafb6dfa768995a453d8a5d3b23784af2e\"},\n    {file = \"mypy-1.14.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:fad79bfe3b65fe6a1efaed97b445c3d37f7be9fdc348bdb2d7cac75579607c89\"},\n    {file = \"mypy-1.14.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:8fa2220e54d2946e94ab6dbb3ba0a992795bd68b16dc852db33028df2b00191b\"},\n    {file = \"mypy-1.14.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:92c3ed5afb06c3a8e188cb5da4984cab9ec9a77ba956ee419c68a388b4595255\"},\n    {file = \"mypy-1.14.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:dbec574648b3e25f43d23577309b16534431db4ddc09fda50841f1e34e64ed34\"},\n    {file = \"mypy-1.14.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:8c6d94b16d62eb3e947281aa7347d78236688e21081f11de976376cf010eb31a\"},\n    {file = \"mypy-1.14.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:d4b19b03fdf54f3c5b2fa474c56b4c13c9dbfb9a2db4370ede7ec11a2c5927d9\"},\n    {file = \"mypy-1.14.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:0c911fde686394753fff899c409fd4e16e9b294c24bfd5e1ea4675deae1ac6fd\"},\n    {file = \"mypy-1.14.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:8b21525cb51671219f5307be85f7e646a153e5acc656e5cebf64bfa076c50107\"},\n    {file = \"mypy-1.14.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:7084fb8f1128c76cd9cf68fe5971b37072598e7c31b2f9f95586b65c741a9d31\"},\n    {file = \"mypy-1.14.1-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:8f845a00b4f420f693f870eaee5f3e2692fa84cc8514496114649cfa8fd5e2c6\"},\n    {file = \"mypy-1.14.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:44bf464499f0e3a2d14d58b54674dee25c031703b2ffc35064bd0df2e0fac319\"},\n    {file = \"mypy-1.14.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:c99f27732c0b7dc847adb21c9d47ce57eb48fa33a17bc6d7d5c5e9f9e7ae5bac\"},\n    {file = \"mypy-1.14.1-cp38-cp38-musllinux_1_2_x86_64.whl\", hash = \"sha256:bce23c7377b43602baa0bd22ea3265c49b9ff0b76eb315d6c34721af4cdf1d9b\"},\n    {file = \"mypy-1.14.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:8edc07eeade7ebc771ff9cf6b211b9a7d93687ff892150cb5692e4f4272b0837\"},\n    {file = \"mypy-1.14.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:3888a1816d69f7ab92092f785a462944b3ca16d7c470d564165fe703b0970c35\"},\n    {file = \"mypy-1.14.1-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:46c756a444117c43ee984bd055db99e498bc613a70bbbc120272bd13ca579fbc\"},\n    {file = \"mypy-1.14.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_28_aarch64.whl\", hash = \"sha256:27fc248022907e72abfd8e22ab1f10e903915ff69961174784a3900a8cba9ad9\"},\n    {file = \"mypy-1.14.1-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl\", hash = \"sha256:499d6a72fb7e5de92218db961f1a66d5f11783f9ae549d214617edab5d4dbdbb\"},\n    {file = \"mypy-1.14.1-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:57961db9795eb566dc1d1b4e9139ebc4c6b0cb6e7254ecde69d1552bf7613f60\"},\n    {file = \"mypy-1.14.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:07ba89fdcc9451f2ebb02853deb6aaaa3d2239a236669a63ab3801bbf923ef5c\"},\n    {file = \"mypy-1.14.1-py3-none-any.whl\", hash = \"sha256:b66a60cc4073aeb8ae00057f9c1f64d49e90f918fbcef9a977eb121da8b8f1d1\"},\n    {file = \"mypy-1.14.1.tar.gz\", hash = \"sha256:7ec88144fe9b510e8475ec2f5f251992690fcf89ccb4500b214b4226abcd32d6\"},\n]\n\n[package.dependencies]\nmypy_extensions = \">=1.0.0\"\ntomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\ntyping_extensions = \">=4.6.0\"\n\n[package.extras]\ndmypy = [\"psutil (>=4.0)\"]\nfaster-cache = [\"orjson\"]\ninstall-types = [\"pip\"]\nmypyc = [\"setuptools (>=50)\"]\nreports = [\"lxml\"]\n\n[[package]]\nname = \"mypy-extensions\"\nversion = \"1.0.0\"\ndescription = \"Type system extensions for programs checked with the mypy type checker.\"\noptional = false\npython-versions = \">=3.5\"\ngroups = [\"typing\"]\nfiles = [\n    {file = \"mypy_extensions-1.0.0-py3-none-any.whl\", hash = \"sha256:4392f6c0eb8a5668a69e23d168ffa70f0be9ccfd32b5cc2d26a34ae5b844552d\"},\n    {file = \"mypy_extensions-1.0.0.tar.gz\", hash = \"sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782\"},\n]\n\n[[package]]\nname = \"nodeenv\"\nversion = \"1.9.1\"\ndescription = \"Node.js virtual environment builder\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\ngroups = [\"dev\"]\nfiles = [\n    {file = \"nodeenv-1.9.1-py2.py3-none-any.whl\", hash = \"sha256:ba11c9782d29c27c70ffbdda2d7415098754709be8a7056d79a737cd901155c9\"},\n    {file = \"nodeenv-1.9.1.tar.gz\", hash = \"sha256:6ec12890a2dab7946721edbfbcd91f3319c6ccc9aec47be7c7e6b7011ee6645f\"},\n]\n\n[[package]]\nname = \"orderly-set\"\nversion = \"5.2.3\"\ndescription = \"Orderly set\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"orderly_set-5.2.3-py3-none-any.whl\", hash = \"sha256:d357cedcf67f4ebff0d4cbd5b0997e98eeb65dd24fdf5c990a501ae9e82c7d34\"},\n    {file = \"orderly_set-5.2.3.tar.gz\", hash = \"sha256:571ed97c5a5fca7ddeb6b2d26c19aca896b0ed91f334d9c109edd2f265fb3017\"},\n]\n\n[[package]]\nname = \"packaging\"\nversion = \"24.2\"\ndescription = \"Core utilities for Python packages\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"github-actions\", \"test\"]\nfiles = [\n    {file = \"packaging-24.2-py3-none-any.whl\", hash = \"sha256:09abb1bccd265c01f4a3aa3f7a7db064b36514d2cba19a2f694fe6150451a759\"},\n    {file = \"packaging-24.2.tar.gz\", hash = \"sha256:c228a6dc5e932d346bc5739379109d49e8853dd8223571c7c5b55260edc0b97f\"},\n]\n\n[[package]]\nname = \"pkginfo\"\nversion = \"1.12.0\"\ndescription = \"Query metadata from sdists / bdists / installed packages.\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"pkginfo-1.12.0-py3-none-any.whl\", hash = \"sha256:dcd589c9be4da8973eceffa247733c144812759aa67eaf4bbf97016a02f39088\"},\n    {file = \"pkginfo-1.12.0.tar.gz\", hash = \"sha256:8ad91a0445a036782b9366ef8b8c2c50291f83a553478ba8580c73d3215700cf\"},\n]\n\n[package.extras]\ntesting = [\"pytest\", \"pytest-cov\", \"wheel\"]\n\n[[package]]\nname = \"platformdirs\"\nversion = \"4.3.6\"\ndescription = \"A small Python package for determining appropriate platform-specific dirs, e.g. a `user data dir`.\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"dev\"]\nfiles = [\n    {file = \"platformdirs-4.3.6-py3-none-any.whl\", hash = \"sha256:73e575e1408ab8103900836b97580d5307456908a03e92031bab39e4554cc3fb\"},\n    {file = \"platformdirs-4.3.6.tar.gz\", hash = \"sha256:357fb2acbc885b0419afd3ce3ed34564c13c9b95c89360cd9563f73aa5e2b907\"},\n]\n\n[package.extras]\ndocs = [\"furo (>=2024.8.6)\", \"proselint (>=0.14)\", \"sphinx (>=8.0.2)\", \"sphinx-autodoc-typehints (>=2.4)\"]\ntest = [\"appdirs (==1.4.4)\", \"covdefaults (>=2.3)\", \"pytest (>=8.3.2)\", \"pytest-cov (>=5)\", \"pytest-mock (>=3.14)\"]\ntype = [\"mypy (>=1.11.2)\"]\n\n[[package]]\nname = \"pluggy\"\nversion = \"1.5.0\"\ndescription = \"plugin and hook calling mechanisms for python\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"github-actions\", \"test\"]\nfiles = [\n    {file = \"pluggy-1.5.0-py3-none-any.whl\", hash = \"sha256:44e1ad92c8ca002de6377e165f3e0f1be63266ab4d554740532335b9d75ea669\"},\n    {file = \"pluggy-1.5.0.tar.gz\", hash = \"sha256:2cffa88e94fdc978c4c574f15f9e59b7f4201d439195c3715ca9e2486f1d0cf1\"},\n]\n\n[package.extras]\ndev = [\"pre-commit\", \"tox\"]\ntesting = [\"pytest\", \"pytest-benchmark\"]\n\n[[package]]\nname = \"poetry-core\"\nversion = \"2.0.1.dev0\"\ndescription = \"Poetry PEP 517 Build Backend\"\noptional = false\npython-versions = \">=3.9, <4.0\"\ngroups = [\"main\"]\nfiles = []\ndevelop = false\n\n[package.source]\ntype = \"git\"\nurl = \"https://github.com/python-poetry/poetry-core\"\nreference = \"main\"\nresolved_reference = \"6243e3f18ac2be4bfd651530da1df6dc9aadf3ff\"\n\n[[package]]\nname = \"pre-commit\"\nversion = \"4.0.1\"\ndescription = \"A framework for managing and maintaining multi-language pre-commit hooks.\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"dev\"]\nfiles = [\n    {file = \"pre_commit-4.0.1-py2.py3-none-any.whl\", hash = \"sha256:efde913840816312445dc98787724647c65473daefe420785f885e8ed9a06878\"},\n    {file = \"pre_commit-4.0.1.tar.gz\", hash = \"sha256:80905ac375958c0444c65e9cebebd948b3cdb518f335a091a670a89d652139d2\"},\n]\n\n[package.dependencies]\ncfgv = \">=2.0.0\"\nidentify = \">=1.0.0\"\nnodeenv = \">=0.11.1\"\npyyaml = \">=5.1\"\nvirtualenv = \">=20.10.0\"\n\n[[package]]\nname = \"psutil\"\nversion = \"6.1.1\"\ndescription = \"Cross-platform lib for process and system monitoring in Python.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"psutil-6.1.1-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:9ccc4316f24409159897799b83004cb1e24f9819b0dcf9c0b68bdcb6cefee6a8\"},\n    {file = \"psutil-6.1.1-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:ca9609c77ea3b8481ab005da74ed894035936223422dc591d6772b147421f777\"},\n    {file = \"psutil-6.1.1-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:8df0178ba8a9e5bc84fed9cfa61d54601b371fbec5c8eebad27575f1e105c0d4\"},\n    {file = \"psutil-6.1.1-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:1924e659d6c19c647e763e78670a05dbb7feaf44a0e9c94bf9e14dfc6ba50468\"},\n    {file = \"psutil-6.1.1-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:018aeae2af92d943fdf1da6b58665124897cfc94faa2ca92098838f83e1b1bca\"},\n    {file = \"psutil-6.1.1-cp27-none-win32.whl\", hash = \"sha256:6d4281f5bbca041e2292be3380ec56a9413b790579b8e593b1784499d0005dac\"},\n    {file = \"psutil-6.1.1-cp27-none-win_amd64.whl\", hash = \"sha256:c777eb75bb33c47377c9af68f30e9f11bc78e0f07fbf907be4a5d70b2fe5f030\"},\n    {file = \"psutil-6.1.1-cp36-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:fc0ed7fe2231a444fc219b9c42d0376e0a9a1a72f16c5cfa0f68d19f1a0663e8\"},\n    {file = \"psutil-6.1.1-cp36-abi3-macosx_11_0_arm64.whl\", hash = \"sha256:0bdd4eab935276290ad3cb718e9809412895ca6b5b334f5a9111ee6d9aff9377\"},\n    {file = \"psutil-6.1.1-cp36-abi3-manylinux_2_12_i686.manylinux2010_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:b6e06c20c05fe95a3d7302d74e7097756d4ba1247975ad6905441ae1b5b66003\"},\n    {file = \"psutil-6.1.1-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:97f7cb9921fbec4904f522d972f0c0e1f4fabbdd4e0287813b21215074a0f160\"},\n    {file = \"psutil-6.1.1-cp36-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:33431e84fee02bc84ea36d9e2c4a6d395d479c9dd9bba2376c1f6ee8f3a4e0b3\"},\n    {file = \"psutil-6.1.1-cp36-cp36m-win32.whl\", hash = \"sha256:384636b1a64b47814437d1173be1427a7c83681b17a450bfc309a1953e329603\"},\n    {file = \"psutil-6.1.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:8be07491f6ebe1a693f17d4f11e69d0dc1811fa082736500f649f79df7735303\"},\n    {file = \"psutil-6.1.1-cp37-abi3-win32.whl\", hash = \"sha256:eaa912e0b11848c4d9279a93d7e2783df352b082f40111e078388701fd479e53\"},\n    {file = \"psutil-6.1.1-cp37-abi3-win_amd64.whl\", hash = \"sha256:f35cfccb065fff93529d2afb4a2e89e363fe63ca1e4a5da22b603a85833c2649\"},\n    {file = \"psutil-6.1.1.tar.gz\", hash = \"sha256:cf8496728c18f2d0b45198f06895be52f36611711746b7f30c464b422b50e2f5\"},\n]\n\n[package.extras]\ndev = [\"abi3audit\", \"black\", \"check-manifest\", \"coverage\", \"packaging\", \"pylint\", \"pyperf\", \"pypinfo\", \"pytest-cov\", \"requests\", \"rstcheck\", \"ruff\", \"sphinx\", \"sphinx_rtd_theme\", \"toml-sort\", \"twine\", \"virtualenv\", \"vulture\", \"wheel\"]\ntest = [\"pytest\", \"pytest-xdist\", \"setuptools\"]\n\n[[package]]\nname = \"pycparser\"\nversion = \"2.22\"\ndescription = \"C parser in Python\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nmarkers = \"sys_platform == \\\"linux\\\" and platform_python_implementation != \\\"PyPy\\\" or sys_platform == \\\"darwin\\\"\"\nfiles = [\n    {file = \"pycparser-2.22-py3-none-any.whl\", hash = \"sha256:c3702b6d3dd8c7abc1afa565d7e63d53a1d0bd86cdc24edd75470f4de499cfcc\"},\n    {file = \"pycparser-2.22.tar.gz\", hash = \"sha256:491c8be9c040f5390f5bf44a5b07752bd07f56edf992381b05c701439eec10f6\"},\n]\n\n[[package]]\nname = \"pyproject-hooks\"\nversion = \"1.2.0\"\ndescription = \"Wrappers to call pyproject.toml-based build backend hooks.\"\noptional = false\npython-versions = \">=3.7\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"pyproject_hooks-1.2.0-py3-none-any.whl\", hash = \"sha256:9e5c6bfa8dcc30091c74b0cf803c81fdd29d94f01992a7707bc97babb1141913\"},\n    {file = \"pyproject_hooks-1.2.0.tar.gz\", hash = \"sha256:1e859bd5c40fae9448642dd871adf459e5e2084186e8d2c2a79a824c970da1f8\"},\n]\n\n[[package]]\nname = \"pytest\"\nversion = \"8.3.4\"\ndescription = \"pytest: simple powerful testing with Python\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"github-actions\", \"test\"]\nfiles = [\n    {file = \"pytest-8.3.4-py3-none-any.whl\", hash = \"sha256:50e16d954148559c9a74109af1eaf0c945ba2d8f30f0a3d3335edde19788b6f6\"},\n    {file = \"pytest-8.3.4.tar.gz\", hash = \"sha256:965370d062bce11e73868e0335abac31b4d3de0e82f4007408d242b4f8610761\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\nexceptiongroup = {version = \">=1.0.0rc8\", markers = \"python_version < \\\"3.11\\\"\"}\niniconfig = \"*\"\npackaging = \"*\"\npluggy = \">=1.5,<2\"\ntomli = {version = \">=1\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ndev = [\"argcomplete\", \"attrs (>=19.2)\", \"hypothesis (>=3.56)\", \"mock\", \"pygments (>=2.7.2)\", \"requests\", \"setuptools\", \"xmlschema\"]\n\n[[package]]\nname = \"pytest-cov\"\nversion = \"6.0.0\"\ndescription = \"Pytest plugin for measuring coverage.\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"pytest-cov-6.0.0.tar.gz\", hash = \"sha256:fde0b595ca248bb8e2d76f020b465f3b107c9632e6a1d1705f17834c89dcadc0\"},\n    {file = \"pytest_cov-6.0.0-py3-none-any.whl\", hash = \"sha256:eee6f1b9e61008bd34975a4d5bab25801eb31898b032dd55addc93e96fcaaa35\"},\n]\n\n[package.dependencies]\ncoverage = {version = \">=7.5\", extras = [\"toml\"]}\npytest = \">=4.6\"\n\n[package.extras]\ntesting = [\"fields\", \"hunter\", \"process-tests\", \"pytest-xdist\", \"virtualenv\"]\n\n[[package]]\nname = \"pytest-github-actions-annotate-failures\"\nversion = \"0.1.8\"\ndescription = \"pytest plugin to annotate failed tests with a workflow command for GitHub Actions\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*\"\ngroups = [\"github-actions\"]\nfiles = [\n    {file = \"pytest-github-actions-annotate-failures-0.1.8.tar.gz\", hash = \"sha256:2d6e6cb5f8d0aae4a27a20cc4e20fabd3199a121c57f44bc48fe28e372e0be23\"},\n    {file = \"pytest_github_actions_annotate_failures-0.1.8-py2.py3-none-any.whl\", hash = \"sha256:6a882ff21672fa79deae8d917eb965a6bde2b25191e7632e1adfc23ffac008ab\"},\n]\n\n[package.dependencies]\npytest = \">=4.0.0\"\n\n[[package]]\nname = \"pytest-mock\"\nversion = \"3.14.0\"\ndescription = \"Thin-wrapper around the mock package for easier use with pytest\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"pytest-mock-3.14.0.tar.gz\", hash = \"sha256:2719255a1efeceadbc056d6bf3df3d1c5015530fb40cf347c0f9afac88410bd0\"},\n    {file = \"pytest_mock-3.14.0-py3-none-any.whl\", hash = \"sha256:0b72c38033392a5f4621342fe11e9219ac11ec9d375f8e2a0c164539e0d70f6f\"},\n]\n\n[package.dependencies]\npytest = \">=6.2.5\"\n\n[package.extras]\ndev = [\"pre-commit\", \"pytest-asyncio\", \"tox\"]\n\n[[package]]\nname = \"pytest-randomly\"\nversion = \"3.16.0\"\ndescription = \"Pytest plugin to randomly order tests and control random.seed.\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"pytest_randomly-3.16.0-py3-none-any.whl\", hash = \"sha256:8633d332635a1a0983d3bba19342196807f6afb17c3eef78e02c2f85dade45d6\"},\n    {file = \"pytest_randomly-3.16.0.tar.gz\", hash = \"sha256:11bf4d23a26484de7860d82f726c0629837cf4064b79157bd18ec9d41d7feb26\"},\n]\n\n[package.dependencies]\nimportlib-metadata = {version = \">=3.6\", markers = \"python_version < \\\"3.10\\\"\"}\npytest = \"*\"\n\n[[package]]\nname = \"pytest-xdist\"\nversion = \"3.6.1\"\ndescription = \"pytest xdist plugin for distributed testing, most importantly across multiple CPUs\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"test\"]\nfiles = [\n    {file = \"pytest_xdist-3.6.1-py3-none-any.whl\", hash = \"sha256:9ed4adfb68a016610848639bb7e02c9352d5d9f03d04809919e2dafc3be4cca7\"},\n    {file = \"pytest_xdist-3.6.1.tar.gz\", hash = \"sha256:ead156a4db231eec769737f57668ef58a2084a34b2e55c4a8fa20d861107300d\"},\n]\n\n[package.dependencies]\nexecnet = \">=2.1\"\npsutil = {version = \">=3.0\", optional = true, markers = \"extra == \\\"psutil\\\"\"}\npytest = \">=7.0.0\"\n\n[package.extras]\npsutil = [\"psutil (>=3.0)\"]\nsetproctitle = [\"setproctitle\"]\ntesting = [\"filelock\"]\n\n[[package]]\nname = \"pywin32-ctypes\"\nversion = \"0.2.3\"\ndescription = \"A (partial) reimplementation of pywin32 using ctypes/cffi\"\noptional = false\npython-versions = \">=3.6\"\ngroups = [\"main\"]\nmarkers = \"sys_platform == \\\"win32\\\"\"\nfiles = [\n    {file = \"pywin32-ctypes-0.2.3.tar.gz\", hash = \"sha256:d162dc04946d704503b2edc4d55f3dba5c1d539ead017afa00142c38b9885755\"},\n    {file = \"pywin32_ctypes-0.2.3-py3-none-any.whl\", hash = \"sha256:8a1513379d709975552d202d942d9837758905c8d01eb82b8bcc30918929e7b8\"},\n]\n\n[[package]]\nname = \"pyyaml\"\nversion = \"6.0.2\"\ndescription = \"YAML parser and emitter for Python\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"dev\"]\nfiles = [\n    {file = \"PyYAML-6.0.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:0a9a2848a5b7feac301353437eb7d5957887edbf81d56e903999a75a3d743086\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:29717114e51c84ddfba879543fb232a6ed60086602313ca38cce623c1d62cfbf\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8824b5a04a04a047e72eea5cec3bc266db09e35de6bdfe34c9436ac5ee27d237\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:7c36280e6fb8385e520936c3cb3b8042851904eba0e58d277dca80a5cfed590b\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ec031d5d2feb36d1d1a24380e4db6d43695f3748343d99434e6f5f9156aaa2ed\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:936d68689298c36b53b29f23c6dbb74de12b4ac12ca6cfe0e047bedceea56180\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:23502f431948090f597378482b4812b0caae32c22213aecf3b55325e049a6c68\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-win32.whl\", hash = \"sha256:2e99c6826ffa974fe6e27cdb5ed0021786b03fc98e5ee3c5bfe1fd5015f42b99\"},\n    {file = \"PyYAML-6.0.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:a4d3091415f010369ae4ed1fc6b79def9416358877534caf6a0fdd2146c87a3e\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:cc1c1159b3d456576af7a3e4d1ba7e6924cb39de8f67111c735f6fc832082774\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:1e2120ef853f59c7419231f3bf4e7021f1b936f6ebd222406c3b60212205d2ee\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5d225db5a45f21e78dd9358e58a98702a0302f2659a3c6cd320564b75b86f47c\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5ac9328ec4831237bec75defaf839f7d4564be1e6b25ac710bd1a96321cc8317\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3ad2a3decf9aaba3d29c8f537ac4b243e36bef957511b4766cb0057d32b0be85\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:ff3824dc5261f50c9b0dfb3be22b4567a6f938ccce4587b38952d85fd9e9afe4\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:797b4f722ffa07cc8d62053e4cff1486fa6dc094105d13fea7b1de7d8bf71c9e\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-win32.whl\", hash = \"sha256:11d8f3dd2b9c1207dcaf2ee0bbbfd5991f571186ec9cc78427ba5bd32afae4b5\"},\n    {file = \"PyYAML-6.0.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:e10ce637b18caea04431ce14fabcf5c64a1c61ec9c56b071a4b7ca131ca52d44\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:c70c95198c015b85feafc136515252a261a84561b7b1d51e3384e0655ddf25ab\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ce826d6ef20b1bc864f0a68340c8b3287705cae2f8b4b1d932177dcc76721725\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1f71ea527786de97d1a0cc0eacd1defc0985dcf6b3f17bb77dcfc8c34bec4dc5\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9b22676e8097e9e22e36d6b7bda33190d0d400f345f23d4065d48f4ca7ae0425\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:80bab7bfc629882493af4aa31a4cfa43a4c57c83813253626916b8c7ada83476\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:0833f8694549e586547b576dcfaba4a6b55b9e96098b36cdc7ebefe667dfed48\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:8b9c7197f7cb2738065c481a0461e50ad02f18c78cd75775628afb4d7137fb3b\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-win32.whl\", hash = \"sha256:ef6107725bd54b262d6dedcc2af448a266975032bc85ef0172c5f059da6325b4\"},\n    {file = \"PyYAML-6.0.2-cp312-cp312-win_amd64.whl\", hash = \"sha256:7e7401d0de89a9a855c839bc697c079a4af81cf878373abd7dc625847d25cbd8\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:efdca5630322a10774e8e98e1af481aad470dd62c3170801852d752aa7a783ba\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:50187695423ffe49e2deacb8cd10510bc361faac997de9efef88badc3bb9e2d1\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0ffe8360bab4910ef1b9e87fb812d8bc0a308b0d0eef8c8f44e0254ab3b07133\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:17e311b6c678207928d649faa7cb0d7b4c26a0ba73d41e99c4fff6b6c3276484\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:70b189594dbe54f75ab3a1acec5f1e3faa7e8cf2f1e08d9b561cb41b845f69d5\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_aarch64.whl\", hash = \"sha256:41e4e3953a79407c794916fa277a82531dd93aad34e29c2a514c2c0c5fe971cc\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-musllinux_1_1_x86_64.whl\", hash = \"sha256:68ccc6023a3400877818152ad9a1033e3db8625d899c72eacb5a668902e4d652\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-win32.whl\", hash = \"sha256:bc2fa7c6b47d6bc618dd7fb02ef6fdedb1090ec036abab80d4681424b84c1183\"},\n    {file = \"PyYAML-6.0.2-cp313-cp313-win_amd64.whl\", hash = \"sha256:8388ee1976c416731879ac16da0aff3f63b286ffdd57cdeb95f3f2e085687563\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:24471b829b3bf607e04e88d79542a9d48bb037c2267d7927a874e6c205ca7e9a\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d7fded462629cfa4b685c5416b949ebad6cec74af5e2d42905d41e257e0869f5\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d84a1718ee396f54f3a086ea0a66d8e552b2ab2017ef8b420e92edbc841c352d\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9056c1ecd25795207ad294bcf39f2db3d845767be0ea6e6a34d856f006006083\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:82d09873e40955485746739bcb8b4586983670466c23382c19cffecbf1fd8706\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-win32.whl\", hash = \"sha256:43fa96a3ca0d6b1812e01ced1044a003533c47f6ee8aca31724f78e93ccc089a\"},\n    {file = \"PyYAML-6.0.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:01179a4a8559ab5de078078f37e5c1a30d76bb88519906844fd7bdea1b7729ff\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:688ba32a1cffef67fd2e9398a2efebaea461578b0923624778664cc1c914db5d\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:a8786accb172bd8afb8be14490a16625cbc387036876ab6ba70912730faf8e1f\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d8e03406cac8513435335dbab54c0d385e4a49e4945d2909a581c83647ca0290\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f753120cb8181e736c57ef7636e83f31b9c0d1722c516f7e86cf15b7aa57ff12\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3b1fdb9dc17f5a7677423d508ab4f243a726dea51fa5e70992e59a7411c89d19\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:0b69e4ce7a131fe56b7e4d770c67429700908fc0752af059838b1cfb41960e4e\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:a9f8c2e67970f13b16084e04f134610fd1d374bf477b17ec1599185cf611d725\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-win32.whl\", hash = \"sha256:6395c297d42274772abc367baaa79683958044e5d3835486c16da75d2a694631\"},\n    {file = \"PyYAML-6.0.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:39693e1f8320ae4f43943590b49779ffb98acb81f788220ea932a6b6c51004d8\"},\n    {file = \"pyyaml-6.0.2.tar.gz\", hash = \"sha256:d584d9ec91ad65861cc08d42e834324ef890a082e591037abe114850ff7bbc3e\"},\n]\n\n[[package]]\nname = \"rapidfuzz\"\nversion = \"3.11.0\"\ndescription = \"rapid fuzzy string matching\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:eb8a54543d16ab1b69e2c5ed96cabbff16db044a50eddfc028000138ca9ddf33\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:231c8b2efbd7f8d2ecd1ae900363ba168b8870644bb8f2b5aa96e4a7573bde19\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:54e7f442fb9cca81e9df32333fb075ef729052bcabe05b0afc0441f462299114\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:906f1f2a1b91c06599b3dd1be207449c5d4fc7bd1e1fa2f6aef161ea6223f165\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8ed59044aea9eb6c663112170f2399b040d5d7b162828b141f2673e822093fa8\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:1cb1965a28b0fa64abdee130c788a0bc0bb3cf9ef7e3a70bf055c086c14a3d7e\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0b488b244931d0291412917e6e46ee9f6a14376625e150056fe7c4426ef28225\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-musllinux_1_2_aarch64.whl\", hash = \"sha256:f0ba13557fec9d5ffc0a22826754a7457cc77f1b25145be10b7bb1d143ce84c6\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-musllinux_1_2_i686.whl\", hash = \"sha256:3871fa7dfcef00bad3c7e8ae8d8fd58089bad6fb21f608d2bf42832267ca9663\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-musllinux_1_2_ppc64le.whl\", hash = \"sha256:b2669eafee38c5884a6e7cc9769d25c19428549dcdf57de8541cf9e82822e7db\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-musllinux_1_2_s390x.whl\", hash = \"sha256:ffa1bb0e26297b0f22881b219ffc82a33a3c84ce6174a9d69406239b14575bd5\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-musllinux_1_2_x86_64.whl\", hash = \"sha256:45b15b8a118856ac9caac6877f70f38b8a0d310475d50bc814698659eabc1cdb\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-win32.whl\", hash = \"sha256:22033677982b9c4c49676f215b794b0404073f8974f98739cb7234e4a9ade9ad\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:be15496e7244361ff0efcd86e52559bacda9cd975eccf19426a0025f9547c792\"},\n    {file = \"rapidfuzz-3.11.0-cp310-cp310-win_arm64.whl\", hash = \"sha256:714a7ba31ba46b64d30fccfe95f8013ea41a2e6237ba11a805a27cdd3bce2573\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:8724a978f8af7059c5323d523870bf272a097478e1471295511cf58b2642ff83\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:8b63cb1f2eb371ef20fb155e95efd96e060147bdd4ab9fc400c97325dfee9fe1\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:82497f244aac10b20710448645f347d862364cc4f7d8b9ba14bd66b5ce4dec18\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:339607394941801e6e3f6c1ecd413a36e18454e7136ed1161388de674f47f9d9\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:84819390a36d6166cec706b9d8f0941f115f700b7faecab5a7e22fc367408bc3\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:eea8d9e20632d68f653455265b18c35f90965e26f30d4d92f831899d6682149b\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5b659e1e2ea2784a9a397075a7fc395bfa4fe66424042161c4bcaf6e4f637b38\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:1315cd2a351144572e31fe3df68340d4b83ddec0af8b2e207cd32930c6acd037\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:a7743cca45b4684c54407e8638f6d07b910d8d811347b9d42ff21262c7c23245\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-musllinux_1_2_ppc64le.whl\", hash = \"sha256:5bb636b0150daa6d3331b738f7c0f8b25eadc47f04a40e5c23c4bfb4c4e20ae3\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-musllinux_1_2_s390x.whl\", hash = \"sha256:42f4dd264ada7a9aa0805ea0da776dc063533917773cf2df5217f14eb4429eae\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:51f24cb39e64256221e6952f22545b8ce21cacd59c0d3e367225da8fc4b868d8\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-win32.whl\", hash = \"sha256:aaf391fb6715866bc14681c76dc0308f46877f7c06f61d62cc993b79fc3c4a2a\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:ebadd5b8624d8ad503e505a99b8eb26fe3ea9f8e9c2234e805a27b269e585842\"},\n    {file = \"rapidfuzz-3.11.0-cp311-cp311-win_arm64.whl\", hash = \"sha256:d895998fec712544c13cfe833890e0226585cf0391dd3948412441d5d68a2b8c\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:f382fec4a7891d66fb7163c90754454030bb9200a13f82ee7860b6359f3f2fa8\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:dfaefe08af2a928e72344c800dcbaf6508e86a4ed481e28355e8d4b6a6a5230e\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:92ebb7c12f682b5906ed98429f48a3dd80dd0f9721de30c97a01473d1a346576\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9a1b3ebc62d4bcdfdeba110944a25ab40916d5383c5e57e7c4a8dc0b6c17211a\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9c6d7fea39cb33e71de86397d38bf7ff1a6273e40367f31d05761662ffda49e4\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:99aebef8268f2bc0b445b5640fd3312e080bd17efd3fbae4486b20ac00466308\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4469307f464ae3089acf3210b8fc279110d26d10f79e576f385a98f4429f7d97\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:eb97c53112b593f89a90b4f6218635a9d1eea1d7f9521a3b7d24864228bbc0aa\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:ef8937dae823b889c0273dfa0f0f6c46a3658ac0d851349c464d1b00e7ff4252\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-musllinux_1_2_ppc64le.whl\", hash = \"sha256:d95f9e9f3777b96241d8a00d6377cc9c716981d828b5091082d0fe3a2924b43e\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-musllinux_1_2_s390x.whl\", hash = \"sha256:b1d67d67f89e4e013a5295e7523bc34a7a96f2dba5dd812c7c8cb65d113cbf28\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:d994cf27e2f874069884d9bddf0864f9b90ad201fcc9cb2f5b82bacc17c8d5f2\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-win32.whl\", hash = \"sha256:ba26d87fe7fcb56c4a53b549a9e0e9143f6b0df56d35fe6ad800c902447acd5b\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-win_amd64.whl\", hash = \"sha256:b1f7efdd7b7adb32102c2fa481ad6f11923e2deb191f651274be559d56fc913b\"},\n    {file = \"rapidfuzz-3.11.0-cp312-cp312-win_arm64.whl\", hash = \"sha256:ed78c8e94f57b44292c1a0350f580e18d3a3c5c0800e253f1583580c1b417ad2\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:e60814edd0c9b511b5f377d48b9782b88cfe8be07a98f99973669299c8bb318a\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:3f28952da055dbfe75828891cd3c9abf0984edc8640573c18b48c14c68ca5e06\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5e8f93bc736020351a6f8e71666e1f486bb8bd5ce8112c443a30c77bfde0eb68\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:76a4a11ba8f678c9e5876a7d465ab86def047a4fcc043617578368755d63a1bc\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:dc0e0d41ad8a056a9886bac91ff9d9978e54a244deb61c2972cc76b66752de9c\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5e8ea35f2419c7d56b3e75fbde2698766daedb374f20eea28ac9b1f668ef4f74\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cd340bbd025302276b5aa221dccfe43040c7babfc32f107c36ad783f2ffd8775\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:494eef2c68305ab75139034ea25328a04a548d297712d9cf887bf27c158c388b\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:5a167344c1d6db06915fb0225592afdc24d8bafaaf02de07d4788ddd37f4bc2f\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-musllinux_1_2_ppc64le.whl\", hash = \"sha256:8c7af25bda96ac799378ac8aba54a8ece732835c7b74cfc201b688a87ed11152\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-musllinux_1_2_s390x.whl\", hash = \"sha256:d2a0f7e17f33e7890257367a1662b05fecaf56625f7dbb6446227aaa2b86448b\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:4d0d26c7172bdb64f86ee0765c5b26ea1dc45c52389175888ec073b9b28f4305\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-win32.whl\", hash = \"sha256:6ad02bab756751c90fa27f3069d7b12146613061341459abf55f8190d899649f\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-win_amd64.whl\", hash = \"sha256:b1472986fd9c5d318399a01a0881f4a0bf4950264131bb8e2deba9df6d8c362b\"},\n    {file = \"rapidfuzz-3.11.0-cp313-cp313-win_arm64.whl\", hash = \"sha256:c408f09649cbff8da76f8d3ad878b64ba7f7abdad1471efb293d2c075e80c822\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:1bac4873f6186f5233b0084b266bfb459e997f4c21fc9f029918f44a9eccd304\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:4f9f12c2d0aa52b86206d2059916153876a9b1cf9dfb3cf2f344913167f1c3d4\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8dd501de6f7a8f83557d20613b58734d1cb5f0be78d794cde64fe43cfc63f5f2\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4416ca69af933d4a8ad30910149d3db6d084781d5c5fdedb713205389f535385\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:f0821b9bdf18c5b7d51722b906b233a39b17f602501a966cfbd9b285f8ab83cd\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:d0edecc3f90c2653298d380f6ea73b536944b767520c2179ec5d40b9145e47aa\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:4513dd01cee11e354c31b75f652d4d466c9440b6859f84e600bdebfccb17735a\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-musllinux_1_2_aarch64.whl\", hash = \"sha256:d9727b85511b912571a76ce53c7640ba2c44c364e71cef6d7359b5412739c570\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-musllinux_1_2_i686.whl\", hash = \"sha256:ab9eab33ee3213f7751dc07a1a61b8d9a3d748ca4458fffddd9defa6f0493c16\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-musllinux_1_2_ppc64le.whl\", hash = \"sha256:6b01c1ddbb054283797967ddc5433d5c108d680e8fa2684cf368be05407b07e4\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-musllinux_1_2_s390x.whl\", hash = \"sha256:3857e335f97058c4b46fa39ca831290b70de554a5c5af0323d2f163b19c5f2a6\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-musllinux_1_2_x86_64.whl\", hash = \"sha256:d98a46cf07c0c875d27e8a7ed50f304d83063e49b9ab63f21c19c154b4c0d08d\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-win32.whl\", hash = \"sha256:c36539ed2c0173b053dafb221458812e178cfa3224ade0960599bec194637048\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:ec8d7d8567e14af34a7911c98f5ac74a3d4a743cd848643341fc92b12b3784ff\"},\n    {file = \"rapidfuzz-3.11.0-cp39-cp39-win_arm64.whl\", hash = \"sha256:62171b270ecc4071be1c1f99960317db261d4c8c83c169e7f8ad119211fe7397\"},\n    {file = \"rapidfuzz-3.11.0-pp310-pypy310_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:f06e3c4c0a8badfc4910b9fd15beb1ad8f3b8fafa8ea82c023e5e607b66a78e4\"},\n    {file = \"rapidfuzz-3.11.0-pp310-pypy310_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:fe7aaf5a54821d340d21412f7f6e6272a9b17a0cbafc1d68f77f2fc11009dcd5\"},\n    {file = \"rapidfuzz-3.11.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:25398d9ac7294e99876a3027ffc52c6bebeb2d702b1895af6ae9c541ee676702\"},\n    {file = \"rapidfuzz-3.11.0-pp310-pypy310_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9a52eea839e4bdc72c5e60a444d26004da00bb5bc6301e99b3dde18212e41465\"},\n    {file = \"rapidfuzz-3.11.0-pp310-pypy310_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2c87319b0ab9d269ab84f6453601fd49b35d9e4a601bbaef43743f26fabf496c\"},\n    {file = \"rapidfuzz-3.11.0-pp310-pypy310_pp73-win_amd64.whl\", hash = \"sha256:3048c6ed29d693fba7d2a7caf165f5e0bb2b9743a0989012a98a47b975355cca\"},\n    {file = \"rapidfuzz-3.11.0-pp39-pypy39_pp73-macosx_10_15_x86_64.whl\", hash = \"sha256:b04f29735bad9f06bb731c214f27253bd8bedb248ef9b8a1b4c5bde65b838454\"},\n    {file = \"rapidfuzz-3.11.0-pp39-pypy39_pp73-macosx_11_0_arm64.whl\", hash = \"sha256:7864e80a0d4e23eb6194254a81ee1216abdc53f9dc85b7f4d56668eced022eb8\"},\n    {file = \"rapidfuzz-3.11.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3794df87313dfb56fafd679b962e0613c88a293fd9bd5dd5c2793d66bf06a101\"},\n    {file = \"rapidfuzz-3.11.0-pp39-pypy39_pp73-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d71da0012face6f45432a11bc59af19e62fac5a41f8ce489e80c0add8153c3d1\"},\n    {file = \"rapidfuzz-3.11.0-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:ff38378346b7018f42cbc1f6d1d3778e36e16d8595f79a312b31e7c25c50bd08\"},\n    {file = \"rapidfuzz-3.11.0-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:6668321f90aa02a5a789d4e16058f2e4f2692c5230252425c3532a8a62bc3424\"},\n    {file = \"rapidfuzz-3.11.0.tar.gz\", hash = \"sha256:a53ca4d3f52f00b393fab9b5913c5bafb9afc27d030c8a1db1283da6917a860f\"},\n]\n\n[package.extras]\nall = [\"numpy\"]\n\n[[package]]\nname = \"requests\"\nversion = \"2.32.3\"\ndescription = \"Python HTTP for Humans.\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"requests-2.32.3-py3-none-any.whl\", hash = \"sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6\"},\n    {file = \"requests-2.32.3.tar.gz\", hash = \"sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760\"},\n]\n\n[package.dependencies]\ncertifi = \">=2017.4.17\"\ncharset-normalizer = \">=2,<4\"\nidna = \">=2.5,<4\"\nurllib3 = \">=1.21.1,<3\"\n\n[package.extras]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7)\"]\nuse-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]\n\n[[package]]\nname = \"requests-toolbelt\"\nversion = \"1.0.0\"\ndescription = \"A utility belt for advanced users of python-requests\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"requests-toolbelt-1.0.0.tar.gz\", hash = \"sha256:7681a0a3d047012b5bdc0ee37d7f8f07ebe76ab08caeccfc3921ce23c88d5bc6\"},\n    {file = \"requests_toolbelt-1.0.0-py2.py3-none-any.whl\", hash = \"sha256:cccfdd665f0a24fcf4726e690f65639d272bb0637b9b92dfd91a5568ccf6bd06\"},\n]\n\n[package.dependencies]\nrequests = \">=2.0.1,<3.0.0\"\n\n[[package]]\nname = \"secretstorage\"\nversion = \"3.3.3\"\ndescription = \"Python bindings to FreeDesktop.org Secret Service API\"\noptional = false\npython-versions = \">=3.6\"\ngroups = [\"main\"]\nmarkers = \"sys_platform == \\\"linux\\\"\"\nfiles = [\n    {file = \"SecretStorage-3.3.3-py3-none-any.whl\", hash = \"sha256:f356e6628222568e3af06f2eba8df495efa13b3b63081dafd4f7d9a7b7bc9f99\"},\n    {file = \"SecretStorage-3.3.3.tar.gz\", hash = \"sha256:2403533ef369eca6d2ba81718576c5e0f564d5cca1b58f73a8b23e7d4eeebd77\"},\n]\n\n[package.dependencies]\ncryptography = \">=2.0\"\njeepney = \">=0.6\"\n\n[[package]]\nname = \"setuptools\"\nversion = \"75.6.0\"\ndescription = \"Easily download, build, install, upgrade, and uninstall Python packages\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"dev\"]\nmarkers = \"python_version < \\\"3.10\\\"\"\nfiles = [\n    {file = \"setuptools-75.6.0-py3-none-any.whl\", hash = \"sha256:ce74b49e8f7110f9bf04883b730f4765b774ef3ef28f722cce7c273d253aaf7d\"},\n    {file = \"setuptools-75.6.0.tar.gz\", hash = \"sha256:8199222558df7c86216af4f84c30e9b34a61d8ba19366cc914424cdbd28252f6\"},\n]\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\", \"ruff (>=0.7.0)\"]\ncore = [\"importlib_metadata (>=6)\", \"jaraco.collections\", \"jaraco.functools (>=4)\", \"jaraco.text (>=3.7)\", \"more_itertools\", \"more_itertools (>=8.8)\", \"packaging\", \"packaging (>=24.2)\", \"platformdirs (>=4.2.2)\", \"tomli (>=2.0.1)\", \"wheel (>=0.43.0)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"pyproject-hooks (!=1.1)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-favicon\", \"sphinx-inline-tabs\", \"sphinx-lint\", \"sphinx-notfound-page (>=1,<2)\", \"sphinx-reredirects\", \"sphinxcontrib-towncrier\", \"towncrier (<24.7)\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\ntest = [\"build[virtualenv] (>=1.0.3)\", \"filelock (>=3.4.0)\", \"ini2toml[lite] (>=0.14)\", \"jaraco.develop (>=7.21)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"jaraco.test (>=5.5)\", \"packaging (>=24.2)\", \"pip (>=19.1)\", \"pyproject-hooks (!=1.1)\", \"pytest (>=6,!=8.1.*)\", \"pytest-home (>=0.5)\", \"pytest-perf\", \"pytest-subprocess\", \"pytest-timeout\", \"pytest-xdist (>=3)\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel (>=0.44.0)\"]\ntype = [\"importlib_metadata (>=7.0.2)\", \"jaraco.develop (>=7.21)\", \"mypy (>=1.12,<1.14)\", \"pytest-mypy\"]\n\n[[package]]\nname = \"shellingham\"\nversion = \"1.5.4\"\ndescription = \"Tool to Detect Surrounding Shell\"\noptional = false\npython-versions = \">=3.7\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"shellingham-1.5.4-py2.py3-none-any.whl\", hash = \"sha256:7ecfff8f2fd72616f7481040475a65b2bf8af90a56c89140852d1120324e8686\"},\n    {file = \"shellingham-1.5.4.tar.gz\", hash = \"sha256:8dbca0739d487e5bd35ab3ca4b36e11c4078f3a234bfce294b0a0291363404de\"},\n]\n\n[[package]]\nname = \"tomli\"\nversion = \"2.2.1\"\ndescription = \"A lil' TOML parser\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"github-actions\", \"test\", \"typing\"]\nfiles = [\n    {file = \"tomli-2.2.1-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:678e4fa69e4575eb77d103de3df8a895e1591b48e740211bd1067378c69e8249\"},\n    {file = \"tomli-2.2.1-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:023aa114dd824ade0100497eb2318602af309e5a55595f76b626d6d9f3b7b0a6\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ece47d672db52ac607a3d9599a9d48dcb2f2f735c6c2d1f34130085bb12b112a\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6972ca9c9cc9f0acaa56a8ca1ff51e7af152a9f87fb64623e31d5c83700080ee\"},\n    {file = \"tomli-2.2.1-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c954d2250168d28797dd4e3ac5cf812a406cd5a92674ee4c8f123c889786aa8e\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_aarch64.whl\", hash = \"sha256:8dd28b3e155b80f4d54beb40a441d366adcfe740969820caf156c019fb5c7ec4\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_i686.whl\", hash = \"sha256:e59e304978767a54663af13c07b3d1af22ddee3bb2fb0618ca1593e4f593a106\"},\n    {file = \"tomli-2.2.1-cp311-cp311-musllinux_1_2_x86_64.whl\", hash = \"sha256:33580bccab0338d00994d7f16f4c4ec25b776af3ffaac1ed74e0b3fc95e885a8\"},\n    {file = \"tomli-2.2.1-cp311-cp311-win32.whl\", hash = \"sha256:465af0e0875402f1d226519c9904f37254b3045fc5084697cefb9bdde1ff99ff\"},\n    {file = \"tomli-2.2.1-cp311-cp311-win_amd64.whl\", hash = \"sha256:2d0f2fdd22b02c6d81637a3c95f8cd77f995846af7414c5c4b8d0545afa1bc4b\"},\n    {file = \"tomli-2.2.1-cp312-cp312-macosx_10_13_x86_64.whl\", hash = \"sha256:4a8f6e44de52d5e6c657c9fe83b562f5f4256d8ebbfe4ff922c495620a7f6cea\"},\n    {file = \"tomli-2.2.1-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:8d57ca8095a641b8237d5b079147646153d22552f1c637fd3ba7f4b0b29167a8\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4e340144ad7ae1533cb897d406382b4b6fede8890a03738ff1683af800d54192\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:db2b95f9de79181805df90bedc5a5ab4c165e6ec3fe99f970d0e302f384ad222\"},\n    {file = \"tomli-2.2.1-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:40741994320b232529c802f8bc86da4e1aa9f413db394617b9a256ae0f9a7f77\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_aarch64.whl\", hash = \"sha256:400e720fe168c0f8521520190686ef8ef033fb19fc493da09779e592861b78c6\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_i686.whl\", hash = \"sha256:02abe224de6ae62c19f090f68da4e27b10af2b93213d36cf44e6e1c5abd19fdd\"},\n    {file = \"tomli-2.2.1-cp312-cp312-musllinux_1_2_x86_64.whl\", hash = \"sha256:b82ebccc8c8a36f2094e969560a1b836758481f3dc360ce9a3277c65f374285e\"},\n    {file = \"tomli-2.2.1-cp312-cp312-win32.whl\", hash = \"sha256:889f80ef92701b9dbb224e49ec87c645ce5df3fa2cc548664eb8a25e03127a98\"},\n    {file = \"tomli-2.2.1-cp312-cp312-win_amd64.whl\", hash = \"sha256:7fc04e92e1d624a4a63c76474610238576942d6b8950a2d7f908a340494e67e4\"},\n    {file = \"tomli-2.2.1-cp313-cp313-macosx_10_13_x86_64.whl\", hash = \"sha256:f4039b9cbc3048b2416cc57ab3bda989a6fcf9b36cf8937f01a6e731b64f80d7\"},\n    {file = \"tomli-2.2.1-cp313-cp313-macosx_11_0_arm64.whl\", hash = \"sha256:286f0ca2ffeeb5b9bd4fcc8d6c330534323ec51b2f52da063b11c502da16f30c\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a92ef1a44547e894e2a17d24e7557a5e85a9e1d0048b0b5e7541f76c5032cb13\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9316dc65bed1684c9a98ee68759ceaed29d229e985297003e494aa825ebb0281\"},\n    {file = \"tomli-2.2.1-cp313-cp313-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e85e99945e688e32d5a35c1ff38ed0b3f41f43fad8df0bdf79f72b2ba7bc5272\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_aarch64.whl\", hash = \"sha256:ac065718db92ca818f8d6141b5f66369833d4a80a9d74435a268c52bdfa73140\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_i686.whl\", hash = \"sha256:d920f33822747519673ee656a4b6ac33e382eca9d331c87770faa3eef562aeb2\"},\n    {file = \"tomli-2.2.1-cp313-cp313-musllinux_1_2_x86_64.whl\", hash = \"sha256:a198f10c4d1b1375d7687bc25294306e551bf1abfa4eace6650070a5c1ae2744\"},\n    {file = \"tomli-2.2.1-cp313-cp313-win32.whl\", hash = \"sha256:d3f5614314d758649ab2ab3a62d4f2004c825922f9e370b29416484086b264ec\"},\n    {file = \"tomli-2.2.1-cp313-cp313-win_amd64.whl\", hash = \"sha256:a38aa0308e754b0e3c67e344754dff64999ff9b513e691d0e786265c93583c69\"},\n    {file = \"tomli-2.2.1-py3-none-any.whl\", hash = \"sha256:cb55c73c5f4408779d0cf3eef9f762b9c9f147a77de7b258bef0a5628adc85cc\"},\n    {file = \"tomli-2.2.1.tar.gz\", hash = \"sha256:cd45e1dc79c835ce60f7404ec8119f2eb06d38b1deba146f07ced3bbc44505ff\"},\n]\nmarkers = {main = \"python_version < \\\"3.11\\\"\", github-actions = \"python_version < \\\"3.11\\\"\", test = \"python_full_version <= \\\"3.11.0a6\\\"\", typing = \"python_version < \\\"3.11\\\"\"}\n\n[[package]]\nname = \"tomlkit\"\nversion = \"0.13.2\"\ndescription = \"Style preserving TOML library\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"tomlkit-0.13.2-py3-none-any.whl\", hash = \"sha256:7a974427f6e119197f670fbbbeae7bef749a6c14e793db934baefc1b5f03efde\"},\n    {file = \"tomlkit-0.13.2.tar.gz\", hash = \"sha256:fff5fe59a87295b278abd31bec92c15d9bc4a06885ab12bcea52c71119392e79\"},\n]\n\n[[package]]\nname = \"trove-classifiers\"\nversion = \"2024.10.21.16\"\ndescription = \"Canonical source for classifiers on PyPI (pypi.org).\"\noptional = false\npython-versions = \"*\"\ngroups = [\"main\"]\nfiles = [\n    {file = \"trove_classifiers-2024.10.21.16-py3-none-any.whl\", hash = \"sha256:0fb11f1e995a757807a8ef1c03829fbd4998d817319abcef1f33165750f103be\"},\n    {file = \"trove_classifiers-2024.10.21.16.tar.gz\", hash = \"sha256:17cbd055d67d5e9d9de63293a8732943fabc21574e4c7b74edf112b4928cf5f3\"},\n]\n\n[[package]]\nname = \"types-requests\"\nversion = \"2.32.0.20241016\"\ndescription = \"Typing stubs for requests\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"typing\"]\nfiles = [\n    {file = \"types-requests-2.32.0.20241016.tar.gz\", hash = \"sha256:0d9cad2f27515d0e3e3da7134a1b6f28fb97129d86b867f24d9c726452634d95\"},\n    {file = \"types_requests-2.32.0.20241016-py3-none-any.whl\", hash = \"sha256:4195d62d6d3e043a4eaaf08ff8a62184584d2e8684e9d2aa178c7915a7da3747\"},\n]\n\n[package.dependencies]\nurllib3 = \">=2\"\n\n[[package]]\nname = \"typing-extensions\"\nversion = \"4.12.2\"\ndescription = \"Backported and Experimental Type Hints for Python 3.8+\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"typing\"]\nfiles = [\n    {file = \"typing_extensions-4.12.2-py3-none-any.whl\", hash = \"sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d\"},\n    {file = \"typing_extensions-4.12.2.tar.gz\", hash = \"sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8\"},\n]\n\n[[package]]\nname = \"urllib3\"\nversion = \"2.2.3\"\ndescription = \"HTTP library with thread-safe connection pooling, file post, and more.\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"test\", \"typing\"]\nfiles = [\n    {file = \"urllib3-2.2.3-py3-none-any.whl\", hash = \"sha256:ca899ca043dcb1bafa3e262d73aa25c465bfb49e0bd9dd5d59f1d0acba2f8fac\"},\n    {file = \"urllib3-2.2.3.tar.gz\", hash = \"sha256:e7d814a81dad81e6caf2ec9fdedb284ecc9c73076b62654547cc64ccdcae26e9\"},\n]\n\n[package.extras]\nbrotli = [\"brotli (>=1.0.9)\", \"brotlicffi (>=0.8.0)\"]\nh2 = [\"h2 (>=4,<5)\"]\nsocks = [\"pysocks (>=1.5.6,!=1.5.7,<2.0)\"]\nzstd = [\"zstandard (>=0.18.0)\"]\n\n[[package]]\nname = \"virtualenv\"\nversion = \"20.28.1\"\ndescription = \"Virtual Python Environment builder\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\", \"dev\"]\nfiles = [\n    {file = \"virtualenv-20.28.1-py3-none-any.whl\", hash = \"sha256:412773c85d4dab0409b83ec36f7a6499e72eaf08c80e81e9576bca61831c71cb\"},\n    {file = \"virtualenv-20.28.1.tar.gz\", hash = \"sha256:5d34ab240fdb5d21549b76f9e8ff3af28252f5499fb6d6f031adac4e5a8c5329\"},\n]\n\n[package.dependencies]\ndistlib = \">=0.3.7,<1\"\nfilelock = \">=3.12.2,<4\"\nplatformdirs = \">=3.9.1,<5\"\n\n[package.extras]\ndocs = [\"furo (>=2023.7.26)\", \"proselint (>=0.13)\", \"sphinx (>=7.1.2,!=7.3)\", \"sphinx-argparse (>=0.4)\", \"sphinxcontrib-towncrier (>=0.2.1a0)\", \"towncrier (>=23.6)\"]\ntest = [\"covdefaults (>=2.3)\", \"coverage (>=7.2.7)\", \"coverage-enable-subprocess (>=1)\", \"flaky (>=3.7)\", \"packaging (>=23.1)\", \"pytest (>=7.4)\", \"pytest-env (>=0.8.2)\", \"pytest-freezer (>=0.4.8)\", \"pytest-mock (>=3.11.1)\", \"pytest-randomly (>=3.12)\", \"pytest-timeout (>=2.1)\", \"setuptools (>=68)\", \"time-machine (>=2.10)\"]\n\n[[package]]\nname = \"xattr\"\nversion = \"1.1.0\"\ndescription = \"Python wrapper for extended filesystem attributes\"\noptional = false\npython-versions = \">=3.8\"\ngroups = [\"main\"]\nmarkers = \"sys_platform == \\\"darwin\\\"\"\nfiles = [\n    {file = \"xattr-1.1.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:ef2fa0f85458736178fd3dcfeb09c3cf423f0843313e25391db2cfd1acec8888\"},\n    {file = \"xattr-1.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:ccab735d0632fe71f7d72e72adf886f45c18b7787430467ce0070207882cfe25\"},\n    {file = \"xattr-1.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:9013f290387f1ac90bccbb1926555ca9aef75651271098d99217284d9e010f7c\"},\n    {file = \"xattr-1.1.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9dcd5dfbcee73c7be057676ecb900cabb46c691aff4397bf48c579ffb30bb963\"},\n    {file = \"xattr-1.1.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6480589c1dac7785d1f851347a32c4a97305937bf7b488b857fe8b28a25de9e9\"},\n    {file = \"xattr-1.1.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:08f61cbed52dc6f7c181455826a9ff1e375ad86f67dd9d5eb7663574abb32451\"},\n    {file = \"xattr-1.1.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:918e1f83f2e8a072da2671eac710871ee5af337e9bf8554b5ce7f20cdb113186\"},\n    {file = \"xattr-1.1.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:0f06e0c1e4d06b4e0e49aaa1184b6f0e81c3758c2e8365597918054890763b53\"},\n    {file = \"xattr-1.1.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:46a641ac038a9f53d2f696716147ca4dbd6a01998dc9cd4bc628801bc0df7f4d\"},\n    {file = \"xattr-1.1.0-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:7e4ca0956fd11679bb2e0c0d6b9cdc0f25470cc00d8da173bb7656cc9a9cf104\"},\n    {file = \"xattr-1.1.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:6881b120f9a4b36ccd8a28d933bc0f6e1de67218b6ce6e66874e0280fc006844\"},\n    {file = \"xattr-1.1.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:dab29d9288aa28e68a6f355ddfc3f0a7342b40c9012798829f3e7bd765e85c2c\"},\n    {file = \"xattr-1.1.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:e0c80bbf55339c93770fc294b4b6586b5bf8e85ec00a4c2d585c33dbd84b5006\"},\n    {file = \"xattr-1.1.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d1418705f253b6b6a7224b69773842cac83fcbcd12870354b6e11dd1cd54630f\"},\n    {file = \"xattr-1.1.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:687e7d18611ef8d84a6ecd8f4d1ab6757500c1302f4c2046ce0aa3585e13da3f\"},\n    {file = \"xattr-1.1.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:b6ceb9efe0657a982ccb8b8a2efe96b690891779584c901d2f920784e5d20ae3\"},\n    {file = \"xattr-1.1.0-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:b489b7916f239100956ea0b39c504f3c3a00258ba65677e4c8ba1bd0b5513446\"},\n    {file = \"xattr-1.1.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:0a9c431b0e66516a078125e9a273251d4b8e5ba84fe644b619f2725050d688a0\"},\n    {file = \"xattr-1.1.0-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:1a5921ea3313cc1c57f2f53b63ea8ca9a91e48f4cc7ebec057d2447ec82c7efe\"},\n    {file = \"xattr-1.1.0-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:f6ad2a7bd5e6cf71d4a862413234a067cf158ca0ae94a40d4b87b98b62808498\"},\n    {file = \"xattr-1.1.0-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:0683dae7609f7280b0c89774d00b5957e6ffcb181c6019c46632b389706b77e6\"},\n    {file = \"xattr-1.1.0-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:54cb15cd94e5ef8a0ef02309f1bf973ba0e13c11e87686e983f371948cfee6af\"},\n    {file = \"xattr-1.1.0-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ff6223a854229055e803c2ad0c0ea9a6da50c6be30d92c198cf5f9f28819a921\"},\n    {file = \"xattr-1.1.0-cp312-cp312-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d44e8f955218638c9ab222eed21e9bd9ab430d296caf2176fb37abe69a714e5c\"},\n    {file = \"xattr-1.1.0-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:caab2c2986c30f92301f12e9c50415d324412e8e6a739a52a603c3e6a54b3610\"},\n    {file = \"xattr-1.1.0-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:d6eb7d5f281014cd44e2d847a9107491af1bf3087f5afeded75ed3e37ec87239\"},\n    {file = \"xattr-1.1.0-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:47a3bdfe034b4fdb70e5941d97037405e3904accc28e10dbef6d1c9061fb6fd7\"},\n    {file = \"xattr-1.1.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:00d2b415cf9d6a24112d019e721aa2a85652f7bbc9f3b9574b2d1cd8668eb491\"},\n    {file = \"xattr-1.1.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:78b377832dd0ee408f9f121a354082c6346960f7b6b1480483ed0618b1912120\"},\n    {file = \"xattr-1.1.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:6461a43b585e5f2e049b39bcbfcb6391bfef3c5118231f1b15d10bdb89ef17fe\"},\n    {file = \"xattr-1.1.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:24d97f0d28f63695e3344ffdabca9fcc30c33e5c8ccc198c7524361a98d526f2\"},\n    {file = \"xattr-1.1.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6ad47d89968c9097900607457a0c89160b4771601d813e769f68263755516065\"},\n    {file = \"xattr-1.1.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dc53cab265f6e8449bd683d5ee3bc5a191e6dd940736f3de1a188e6da66b0653\"},\n    {file = \"xattr-1.1.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:cd11e917f5b89f2a0ad639d9875943806c6c9309a3dd02da5a3e8ef92db7bed9\"},\n    {file = \"xattr-1.1.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:9c5a78c7558989492c4cb7242e490ffb03482437bf782967dfff114e44242343\"},\n    {file = \"xattr-1.1.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:cebcf8a303a44fbc439b68321408af7267507c0d8643229dbb107f6c132d389c\"},\n    {file = \"xattr-1.1.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:b0d73150f2f9655b4da01c2369eb33a294b7f9d56eccb089819eafdbeb99f896\"},\n    {file = \"xattr-1.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:793c01deaadac50926c0e1481702133260c7cb5e62116762f6fe1543d07b826f\"},\n    {file = \"xattr-1.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:e189e440bcd04ccaad0474720abee6ee64890823ec0db361fb0a4fb5e843a1bf\"},\n    {file = \"xattr-1.1.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:afacebbc1fa519f41728f8746a92da891c7755e6745164bd0d5739face318e86\"},\n    {file = \"xattr-1.1.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:9b1664edf003153ac8d1911e83a0fc60db1b1b374ee8ac943f215f93754a1102\"},\n    {file = \"xattr-1.1.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:dda2684228798e937a7c29b0e1c7ef3d70e2b85390a69b42a1c61b2039ba81de\"},\n    {file = \"xattr-1.1.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:b735ac2625a4fc2c9343b19f806793db6494336338537d2911c8ee4c390dda46\"},\n    {file = \"xattr-1.1.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:fa6a7af7a4ada43f15ccc58b6f9adcdbff4c36ba040013d2681e589e07ae280a\"},\n    {file = \"xattr-1.1.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:d1059b2f726e2702c8bbf9bbf369acfc042202a4cc576c2dec6791234ad5e948\"},\n    {file = \"xattr-1.1.0-pp310-pypy310_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:e2255f36ebf2cb2dbf772a7437ad870836b7396e60517211834cf66ce678b595\"},\n    {file = \"xattr-1.1.0-pp310-pypy310_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dba4f80b9855cc98513ddf22b7ad8551bc448c70d3147799ea4f6c0b758fb466\"},\n    {file = \"xattr-1.1.0-pp310-pypy310_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:4cb70c16e7c3ae6ba0ab6c6835c8448c61d8caf43ea63b813af1f4dbe83dd156\"},\n    {file = \"xattr-1.1.0-pp310-pypy310_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:83652910ef6a368b77b00825ad67815e5c92bfab551a848ca66e9981d14a7519\"},\n    {file = \"xattr-1.1.0-pp38-pypy38_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:7a92aff66c43fa3e44cbeab7cbeee66266c91178a0f595e044bf3ce51485743b\"},\n    {file = \"xattr-1.1.0-pp38-pypy38_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:9d4f71b673339aeaae1f6ea9ef8ea6c9643c8cd0df5003b9a0eaa75403e2e06c\"},\n    {file = \"xattr-1.1.0-pp38-pypy38_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a20de1c47b5cd7b47da61799a3b34e11e5815d716299351f82a88627a43f9a96\"},\n    {file = \"xattr-1.1.0-pp38-pypy38_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:23705c7079b05761ff2fa778ad17396e7599c8759401abc05b312dfb3bc99f69\"},\n    {file = \"xattr-1.1.0-pp39-pypy39_pp73-macosx_10_9_x86_64.whl\", hash = \"sha256:27272afeba8422f2a9d27e1080a9a7b807394e88cce73db9ed8d2dde3afcfb87\"},\n    {file = \"xattr-1.1.0-pp39-pypy39_pp73-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:dd43978966de3baf4aea367c99ffa102b289d6c2ea5f3d9ce34a203dc2f2ab73\"},\n    {file = \"xattr-1.1.0-pp39-pypy39_pp73-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ded771eaf27bb4eb3c64c0d09866460ee8801d81dc21097269cf495b3cac8657\"},\n    {file = \"xattr-1.1.0-pp39-pypy39_pp73-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:96ca300c0acca4f0cddd2332bb860ef58e1465d376364f0e72a1823fdd58e90d\"},\n    {file = \"xattr-1.1.0.tar.gz\", hash = \"sha256:fecbf3b05043ed3487a28190dec3e4c4d879b2fcec0e30bafd8ec5d4b6043630\"},\n]\n\n[package.dependencies]\ncffi = \">=1.16.0\"\n\n[package.extras]\ntest = [\"pytest\"]\n\n[[package]]\nname = \"zipp\"\nversion = \"3.21.0\"\ndescription = \"Backport of pathlib-compatible object wrapper for zip files\"\noptional = false\npython-versions = \">=3.9\"\ngroups = [\"main\", \"test\"]\nfiles = [\n    {file = \"zipp-3.21.0-py3-none-any.whl\", hash = \"sha256:ac1bbe05fd2991f160ebce24ffbac5f6d11d83dc90891255885223d42b3cd931\"},\n    {file = \"zipp-3.21.0.tar.gz\", hash = \"sha256:2c9958f6430a2040341a52eb608ed6dd93ef4392e02ffe219417c1b28b5dd1f4\"},\n]\nmarkers = {main = \"python_version < \\\"3.12\\\"\", test = \"python_version < \\\"3.10\\\"\"}\n\n[package.extras]\ncheck = [\"pytest-checkdocs (>=2.4)\", \"pytest-ruff (>=0.2.1)\"]\ncover = [\"pytest-cov\"]\ndoc = [\"furo\", \"jaraco.packaging (>=9.3)\", \"jaraco.tidelift (>=1.4)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-lint\"]\nenabler = [\"pytest-enabler (>=2.2)\"]\ntest = [\"big-O\", \"importlib-resources\", \"jaraco.functools\", \"jaraco.itertools\", \"jaraco.test\", \"more-itertools\", \"pytest (>=6,!=8.1.*)\", \"pytest-ignore-flaky\"]\ntype = [\"pytest-mypy\"]\n\n[metadata]\nlock-version = \"2.1\"\npython-versions = \">=3.9,<4.0\"\ncontent-hash = \"627ed538dc55e47a76e2532ef5e374a830504544966277d3128c664aac1e677f\"\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 5.962890625,
          "content": "[project]\nname = \"poetry\"\nversion = \"2.0.0\"\ndescription = \"Python dependency management and packaging made easy.\"\nrequires-python = \">=3.9,<4.0\"\ndependencies = [\n    \"poetry-core @ git+https://github.com/python-poetry/poetry-core@main\",\n    \"build (>=1.2.1,<2.0.0)\",\n    \"cachecontrol[filecache] (>=0.14.0,<0.15.0)\",\n    \"cleo (>=2.1.0,<3.0.0)\",\n    \"dulwich (>=0.22.6,<0.23.0)\",\n    \"fastjsonschema (>=2.18.0,<3.0.0)\",\n    \"importlib-metadata (>=4.4) ; python_version < '3.10'\",\n    \"installer (>=0.7.0,<0.8.0)\",\n    \"keyring (>=25.1.0,<26.0.0)\",\n    # packaging uses calver, so version is unclamped\n    \"packaging (>=24.0)\",\n    \"pkginfo (>=1.12,<2.0)\",\n    \"platformdirs (>=3.0.0,<5)\",\n    \"pyproject-hooks (>=1.0.0,<2.0.0)\",\n    \"requests (>=2.26,<3.0)\",\n    \"requests-toolbelt (>=1.0.0,<2.0.0)\",\n    \"shellingham (>=1.5,<2.0)\",\n    \"tomli (>=2.0.1,<3.0.0) ; python_version < '3.11'\",\n    \"tomlkit (>=0.11.4,<1.0.0)\",\n    # trove-classifiers uses calver, so version is unclamped\n    \"trove-classifiers (>=2022.5.19)\",\n    \"virtualenv (>=20.26.6,<21.0.0)\",\n    \"xattr (>=1.0.0,<2.0.0) ; sys_platform == 'darwin'\",\n]\nauthors = [\n    { name = \"Sébastien Eustace\", email = \"sebastien@eustace.io\" }\n]\nmaintainers = [\n    { name = \"Arun Babu Neelicattu\", email = \"arun.neelicattu@gmail.com\" },\n    { name = \"Bjorn Neergaard\", email = \"bjorn@neersighted.com\" },\n    { name = \"Branch Vincent\", email = \"branchevincent@gmail.com\" },\n    { name = \"Randy Döring\", email = \"radoering.poetry@gmail.com\" },\n    { name = \"Steph Samson\", email = \"hello@stephsamson.com\" },\n    { name = \"finswimmer\", email = \"finswimmer77@gmail.com\" },\n    { name = \"Bartosz Sokorski\", email = \"b.sokorski@gmail.com\" },\n]\nlicense = { text = \"MIT\" }\nreadme = \"README.md\"\nkeywords = [\"packaging\", \"dependency\", \"poetry\"]\n# classifieres is dynamic because we want to create Python classifiers automatically\ndynamic = [ \"classifiers\" ]\n\n[project.urls]\nHomepage = \"https://python-poetry.org/\"\nChangelog = \"https://python-poetry.org/history/\"\nRepository = \"https://github.com/python-poetry/poetry\"\nDocumentation = \"https://python-poetry.org/docs\"\n\n[project.scripts]\npoetry = \"poetry.console.application:main\"\n\n\n[tool.poetry]\nrequires-poetry = \">=2.0\"\nclassifiers = [\n    \"Topic :: Software Development :: Build Tools\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n]\ninclude = [{ path = \"tests\", format = \"sdist\" }]\n\n[tool.poetry.group.dev.dependencies]\npre-commit = \">=2.10\"\n# add setuptools for PyCharm\n# see https://youtrack.jetbrains.com/issue/PY-48909\n# and https://github.com/JetBrains/intellij-community/commit/3f37786ec0bf5066e4527690d1068b5a00680ea3\nsetuptools = { version = \">=60\", python = \"<3.10\" }\n\n[tool.poetry.group.test.dependencies]\ncoverage = \">=7.2.0\"\ndeepdiff = \">=6.3\"\nhttpretty = \">=1.1\"\njaraco-classes = \">=3.3.1\"\npytest = \">=8.0\"\npytest-cov = \">=4.0\"\npytest-mock = \">=3.9\"\npytest-randomly = \">=3.12\"\npytest-xdist = { version = \">=3.1\", extras = [\"psutil\"] }\nurllib3 = \"<2.3\"  # see https://github.com/gabrielfalcao/HTTPretty/issues/484\n\n[tool.poetry.group.typing.dependencies]\nmypy = \">=1.8.0\"\ntypes-requests = \">=2.28.8\"\n\n# only used in github actions\n[tool.poetry.group.github-actions]\noptional = true\n[tool.poetry.group.github-actions.dependencies]\npytest-github-actions-annotate-failures = \"^0.1.7\"\n\n\n[build-system]\nrequires = [\"poetry-core>=2.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n\n[tool.ruff]\nextend-exclude = [\n    \"docs/*\",\n    # External to the project's coding standards\n    \"tests/fixtures/git/*\",\n    \"tests/fixtures/project_with_setup*/*\",\n]\nfix = true\nline-length = 88\ntarget-version = \"py39\"\n\n[tool.ruff.lint]\nextend-select = [\n    \"B\",   # flake8-bugbear\n    \"C4\",  # flake8-comprehensions\n    \"ERA\", # flake8-eradicate/eradicate\n    \"I\",   # isort\n    \"N\",   # pep8-naming\n    \"PIE\", # flake8-pie\n    \"PGH\", # pygrep\n    \"RUF\", # ruff checks\n    \"SIM\", # flake8-simplify\n    \"T20\", # flake8-print\n    \"TCH\", # flake8-type-checking\n    \"TID\", # flake8-tidy-imports\n    \"UP\",  # pyupgrade\n]\nignore = [\n    \"B904\", # use 'raise ... from err'\n    \"B905\", # use explicit 'strict=' parameter with 'zip()'\n]\nextend-safe-fixes = [\n    \"TCH\", # move import from and to TYPE_CHECKING blocks\n]\nunfixable = [\n    \"ERA\", # do not autoremove commented out code\n]\n\n[tool.ruff.lint.flake8-tidy-imports]\nban-relative-imports = \"all\"\n\n[tool.ruff.lint.isort]\nforce-single-line = true\nlines-between-types = 1\nlines-after-imports = 2\nknown-first-party = [\"poetry\"]\nknown-third-party = [\"poetry.core\"]\nrequired-imports = [\"from __future__ import annotations\"]\n\n\n[tool.mypy]\nfiles = \"src, tests\"\nmypy_path = \"src\"\nnamespace_packages = true\nexplicit_package_bases = true\nstrict = true\nenable_error_code = [\n    \"ignore-without-code\",\n    \"redundant-expr\",\n    \"truthy-bool\",\n]\nexclude = [\n    \"tests/fixtures\",\n    \"tests/masonry/builders/fixtures\",\n    \"tests/utils/fixtures\",\n]\n\n# use of importlib-metadata backport makes it impossible to satisfy mypy\n# without some ignores: but we get different sets of ignores at different\n# python versions.\n[[tool.mypy.overrides]]\nmodule = [\n    'poetry.repositories.installed_repository',\n    'tests.console.commands.self.test_show_plugins',\n    'tests.repositories.test_installed_repository',\n    'tests.helpers',\n]\nwarn_unused_ignores = false\n\n[[tool.mypy.overrides]]\nmodule = [\n    'deepdiff.*',\n    'fastjsonschema.*',\n    'httpretty.*',\n    'requests_toolbelt.*',\n    'shellingham.*',\n    'virtualenv.*',\n    'xattr.*',\n]\nignore_missing_imports = true\n\n\n[tool.pytest.ini_options]\naddopts = [ \"-n\", \"logical\", \"-ra\", \"--strict-config\", \"--strict-markers\" ]\ntestpaths = [\"tests\"]\nmarkers = [\n    \"network: mark tests that require internet access\",\n    \"skip_git_mock: mark tests that should not auto-apply git_mock\"\n]\nlog_cli_level = \"INFO\"\nxfail_strict = true\n\n\n[tool.coverage.report]\nexclude_also = [\n    \"if TYPE_CHECKING:\"\n]\n\n\n[tool.repo-review]\nignore = [\n    \"PY007\",\n    \"PP302\",\n    \"PP309\",\n    \"GH101\",\n    \"GH212\",\n    \"PC111\",\n    \"PC140\",\n    \"PC160\",\n    \"PC170\",\n    \"PC180\",\n    \"PC180\",\n    \"PC901\",\n    \"MY103\",\n    \"RTD100\",\n]\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}