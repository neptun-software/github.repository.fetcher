{
  "metadata": {
    "timestamp": 1736561408006,
    "page": 45,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ultralytics/ultralytics",
      "stars": 35209,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.287109375,
          "content": "# Python\n__pycache__\n*.pyc\n*.pyo\n*.pyd\n.Python\n*.py[cod]\n*$py.class\n.pytest_cache\n.coverage\ncoverage.xml\n.ruff_cache\n*.egg-info\ndist\nbuild\n\n# Development\n.env\n.venv\nenv/\nvenv/\nENV/\n.idea\n.vscode\n*.swp\n*.swo\n.DS_Store\n\n# Project specific\n*.log\nbenchmarks.log\nruns/\n\n# Dependencies\nnode_modules/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.3994140625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\nrequirements.txt\nsetup.py\nultralytics.egg-info\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other info into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\nmlruns/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# Profiling\n*.pclprof\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\n.idea\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# VSCode project settings\n.vscode/\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# datasets and projects (ignore /datasets dir at root only to allow for docs/en/datasets dir)\n/datasets\nruns/\nwandb/\n.DS_Store\n\n# Neural Network weights -----------------------------------------------------------------------------------------------\nweights/\n*.weights\n*.pt\n*.pb\n*.onnx\n*.engine\n*.mlmodel\n*.mlpackage\n*.torchscript\n*.tflite\n*.h5\n*.mnn\n*_saved_model/\n*_web_model/\n*_openvino_model/\n*_paddle_model/\n*_ncnn_model/\n*_imx_model/\npnnx*\n\n# Autogenerated files for tests\n/ultralytics/assets/\n\n# calibration image\ncalibration_*.npy\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.74609375,
          "content": "# This CITATION.cff file was generated with https://bit.ly/cffinit\n\ncff-version: 1.2.0\ntitle: Ultralytics YOLO\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Glenn\n    family-names: Jocher\n    affiliation: Ultralytics\n    orcid: 'https://orcid.org/0000-0001-5950-6979'\n  - family-names: Qiu\n    given-names: Jing\n    affiliation: Ultralytics\n    orcid: 'https://orcid.org/0000-0003-3783-7069'\n  - given-names: Ayush\n    family-names: Chaurasia\n    affiliation: Ultralytics\n    orcid: 'https://orcid.org/0000-0002-7603-6750'\nrepository-code: 'https://github.com/ultralytics/ultralytics'\nurl: 'https://ultralytics.com'\nlicense: AGPL-3.0\nversion: 8.0.0\ndate-released: '2023-01-10'\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.0546875,
          "content": "---\ncomments: true\ndescription: Learn how to contribute to Ultralytics YOLO open-source repositories. Follow guidelines for pull requests, code of conduct, and bug reporting.\nkeywords: Ultralytics, YOLO, open-source, contribution, pull request, code of conduct, bug reporting, GitHub, CLA, Google-style docstrings\n---\n\n# Contributing to Ultralytics Open-Source Projects\n\nWelcome! We're thrilled that you're considering contributing to our [Ultralytics](https://www.ultralytics.com/) [open-source](https://github.com/ultralytics) projects. Your involvement not only helps enhance the quality of our repositories but also benefits the entire community. This guide provides clear guidelines and best practices to help you get started.\n\n<a href=\"https://github.com/ultralytics/ultralytics/graphs/contributors\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/image-contributors.png\" alt=\"Ultralytics open-source contributors\"></a>\n\n## Table of Contents\n\n1. [Code of Conduct](#code-of-conduct)\n2. [Contributing via Pull Requests](#contributing-via-pull-requests)\n   - [CLA Signing](#cla-signing)\n   - [Google-Style Docstrings](#google-style-docstrings)\n   - [GitHub Actions CI Tests](#github-actions-ci-tests)\n3. [Reporting Bugs](#reporting-bugs)\n4. [License](#license)\n5. [Conclusion](#conclusion)\n6. [FAQ](#faq)\n\n## Code of Conduct\n\nTo ensure a welcoming and inclusive environment for everyone, all contributors must adhere to our [Code of Conduct](https://docs.ultralytics.com/help/code_of_conduct/). Respect, kindness, and professionalism are at the heart of our community.\n\n## Contributing via Pull Requests\n\nWe greatly appreciate contributions in the form of pull requests. To make the review process as smooth as possible, please follow these steps:\n\n1. **[Fork the repository](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/fork-a-repo):** Start by forking the Ultralytics YOLO repository to your GitHub account.\n\n2. **[Create a branch](https://docs.github.com/en/desktop/making-changes-in-a-branch/managing-branches-in-github-desktop):** Create a new branch in your forked repository with a clear, descriptive name that reflects your changes.\n\n3. **Make your changes:** Ensure your code adheres to the project's style guidelines and does not introduce any new errors or warnings.\n\n4. **[Test your changes](https://github.com/ultralytics/ultralytics/tree/main/tests):** Before submitting, test your changes locally to confirm they work as expected and don't cause any new issues.\n\n5. **[Commit your changes](https://docs.github.com/en/desktop/making-changes-in-a-branch/committing-and-reviewing-changes-to-your-project-in-github-desktop):** Commit your changes with a concise and descriptive commit message. If your changes address a specific issue, include the issue number in your commit message.\n\n6. **[Create a pull request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request):** Submit a pull request from your forked repository to the main Ultralytics YOLO repository. Provide a clear and detailed explanation of your changes and how they improve the project.\n\n### CLA Signing\n\nBefore we can merge your pull request, you must sign our [Contributor License Agreement (CLA)](https://docs.ultralytics.com/help/CLA/). This legal agreement ensures that your contributions are properly licensed, allowing the project to continue being distributed under the AGPL-3.0 license.\n\nAfter submitting your pull request, the CLA bot will guide you through the signing process. To sign the CLA, simply add a comment in your PR stating:\n\n```\nI have read the CLA Document and I sign the CLA\n```\n\n### Google-Style Docstrings\n\nWhen adding new functions or classes, please include [Google-style docstrings](https://google.github.io/styleguide/pyguide.html). These docstrings provide clear, standardized documentation that helps other developers understand and maintain your code.\n\n#### Example\n\nThis example illustrates a Google-style docstring. Ensure that both input and output `types` are always enclosed in parentheses, e.g., `(bool)`.\n\n```python\ndef example_function(arg1, arg2=4):\n    \"\"\"\n    Example function demonstrating Google-style docstrings.\n\n    Args:\n        arg1 (int): The first argument.\n        arg2 (int): The second argument, with a default value of 4.\n\n    Returns:\n        (bool): True if successful, False otherwise.\n\n    Examples:\n        >>> result = example_function(1, 2)  # returns False\n    \"\"\"\n    if arg1 == arg2:\n        return True\n    return False\n```\n\n#### Example with type hints\n\nThis example includes both a Google-style docstring and type hints for arguments and returns, though using either independently is also acceptable.\n\n```python\ndef example_function(arg1: int, arg2: int = 4) -> bool:\n    \"\"\"\n    Example function demonstrating Google-style docstrings.\n\n    Args:\n        arg1: The first argument.\n        arg2: The second argument, with a default value of 4.\n\n    Returns:\n        True if successful, False otherwise.\n\n    Examples:\n        >>> result = example_function(1, 2)  # returns False\n    \"\"\"\n    if arg1 == arg2:\n        return True\n    return False\n```\n\n#### Example Single-line\n\nFor smaller or simpler functions, a single-line docstring may be sufficient. The docstring must use three double-quotes, be a complete sentence, start with a capital letter, and end with a period.\n\n```python\ndef example_small_function(arg1: int, arg2: int = 4) -> bool:\n    \"\"\"Example function with a single-line docstring.\"\"\"\n    return arg1 == arg2\n```\n\n### GitHub Actions CI Tests\n\nAll pull requests must pass the GitHub Actions [Continuous Integration](https://docs.ultralytics.com/help/CI/) (CI) tests before they can be merged. These tests include linting, unit tests, and other checks to ensure that your changes meet the project's quality standards. Review the CI output and address any issues that arise.\n\n## Reporting Bugs\n\nWe highly value bug reports as they help us maintain the quality of our projects. When reporting a bug, please provide a [Minimum Reproducible Example](https://docs.ultralytics.com/help/minimum_reproducible_example/)—a simple, clear code example that consistently reproduces the issue. This allows us to quickly identify and resolve the problem.\n\n## License\n\nUltralytics uses the [GNU Affero General Public License v3.0 (AGPL-3.0)](https://github.com/ultralytics/ultralytics/blob/main/LICENSE) for its repositories. This license promotes openness, transparency, and collaborative improvement in software development. It ensures that all users have the freedom to use, modify, and share the software, fostering a strong community of collaboration and innovation.\n\nWe encourage all contributors to familiarize themselves with the terms of the AGPL-3.0 license to contribute effectively and ethically to the Ultralytics open-source community.\n\n## Conclusion\n\nThank you for your interest in contributing to [Ultralytics](https://www.ultralytics.com/) [open-source](https://github.com/ultralytics) YOLO projects. Your participation is essential in shaping the future of our software and building a vibrant community of innovation and collaboration. Whether you're enhancing code, reporting bugs, or suggesting new features, your contributions are invaluable.\n\nWe're excited to see your ideas come to life and appreciate your commitment to advancing object detection technology. Together, let's continue to grow and innovate in this exciting open-source journey. Happy coding! 🚀🌟\n\n## FAQ\n\n### Why should I contribute to Ultralytics YOLO open-source repositories?\n\nContributing to Ultralytics YOLO open-source repositories improves the software, making it more robust and feature-rich for the entire community. Contributions can include code enhancements, bug fixes, documentation improvements, and new feature implementations. Additionally, contributing allows you to collaborate with other skilled developers and experts in the field, enhancing your own skills and reputation. For details on how to get started, refer to the [Contributing via Pull Requests](#contributing-via-pull-requests) section.\n\n### How do I sign the Contributor License Agreement (CLA) for Ultralytics YOLO?\n\nTo sign the Contributor License Agreement (CLA), follow the instructions provided by the CLA bot after submitting your pull request. This process ensures that your contributions are properly licensed under the AGPL-3.0 license, maintaining the legal integrity of the open-source project. Add a comment in your pull request stating:\n\n```\nI have read the CLA Document and I sign the CLA.\n```\n\nFor more information, see the [CLA Signing](#cla-signing) section.\n\n### What are Google-style docstrings, and why are they required for Ultralytics YOLO contributions?\n\nGoogle-style docstrings provide clear, concise documentation for functions and classes, improving code readability and maintainability. These docstrings outline the function's purpose, arguments, and return values with specific formatting rules. When contributing to Ultralytics YOLO, following Google-style docstrings ensures that your additions are well-documented and easily understood. For examples and guidelines, visit the [Google-Style Docstrings](#google-style-docstrings) section.\n\n### How can I ensure my changes pass the GitHub Actions CI tests?\n\nBefore your pull request can be merged, it must pass all GitHub Actions Continuous Integration (CI) tests. These tests include linting, unit tests, and other checks to ensure the code meets\n\nthe project's quality standards. Review the CI output and fix any issues. For detailed information on the CI process and troubleshooting tips, see the [GitHub Actions CI Tests](#github-actions-ci-tests) section.\n\n### How do I report a bug in Ultralytics YOLO repositories?\n\nTo report a bug, provide a clear and concise [Minimum Reproducible Example](https://docs.ultralytics.com/help/minimum_reproducible_example/) along with your bug report. This helps developers quickly identify and fix the issue. Ensure your example is minimal yet sufficient to replicate the problem. For more detailed steps on reporting bugs, refer to the [Reporting Bugs](#reporting-bugs) section.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7138671875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 30.2529296875,
          "content": "<div align=\"center\">\n  <p>\n    <a href=\"https://www.ultralytics.com/events/yolovision\" target=\"_blank\">\n      <img width=\"100%\" src=\"https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/banner-yolov8.png\" alt=\"YOLO Vision banner\"></a>\n  </p>\n\n[中文](https://docs.ultralytics.com/zh) | [한국어](https://docs.ultralytics.com/ko) | [日本語](https://docs.ultralytics.com/ja) | [Русский](https://docs.ultralytics.com/ru) | [Deutsch](https://docs.ultralytics.com/de) | [Français](https://docs.ultralytics.com/fr) | [Español](https://docs.ultralytics.com/es) | [Português](https://docs.ultralytics.com/pt) | [Türkçe](https://docs.ultralytics.com/tr) | [Tiếng Việt](https://docs.ultralytics.com/vi) | [العربية](https://docs.ultralytics.com/ar) <br>\n\n<div>\n    <a href=\"https://github.com/ultralytics/ultralytics/actions/workflows/ci.yaml\"><img src=\"https://github.com/ultralytics/ultralytics/actions/workflows/ci.yaml/badge.svg\" alt=\"Ultralytics CI\"></a>\n    <a href=\"https://pepy.tech/projects/ultralytics\"><img src=\"https://static.pepy.tech/badge/ultralytics\" alt=\"Ultralytics Downloads\"></a>\n    <a href=\"https://zenodo.org/badge/latestdoi/264818686\"><img src=\"https://zenodo.org/badge/264818686.svg\" alt=\"Ultralytics YOLO Citation\"></a>\n    <a href=\"https://discord.com/invite/ultralytics\"><img alt=\"Ultralytics Discord\" src=\"https://img.shields.io/discord/1089800235347353640?logo=discord&logoColor=white&label=Discord&color=blue\"></a>\n    <a href=\"https://community.ultralytics.com/\"><img alt=\"Ultralytics Forums\" src=\"https://img.shields.io/discourse/users?server=https%3A%2F%2Fcommunity.ultralytics.com&logo=discourse&label=Forums&color=blue\"></a>\n    <a href=\"https://reddit.com/r/ultralytics\"><img alt=\"Ultralytics Reddit\" src=\"https://img.shields.io/reddit/subreddit-subscribers/ultralytics?style=flat&logo=reddit&logoColor=white&label=Reddit&color=blue\"></a>\n    <br>\n    <a href=\"https://console.paperspace.com/github/ultralytics/ultralytics\"><img src=\"https://assets.paperspace.io/img/gradient-badge.svg\" alt=\"Run Ultralytics on Gradient\"></a>\n    <a href=\"https://colab.research.google.com/github/ultralytics/ultralytics/blob/main/examples/tutorial.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open Ultralytics In Colab\"></a>\n    <a href=\"https://www.kaggle.com/models/ultralytics/yolo11\"><img src=\"https://kaggle.com/static/images/open-in-kaggle.svg\" alt=\"Open Ultralytics In Kaggle\"></a>\n    <a href=\"https://mybinder.org/v2/gh/ultralytics/ultralytics/HEAD?labpath=examples%2Ftutorial.ipynb\"><img src=\"https://mybinder.org/badge_logo.svg\" alt=\"Open Ultralytics In Binder\"></a>\n</div>\n<br>\n\n[Ultralytics](https://www.ultralytics.com/) [YOLO11](https://github.com/ultralytics/ultralytics) is a cutting-edge, state-of-the-art (SOTA) model that builds upon the success of previous YOLO versions and introduces new features and improvements to further boost performance and flexibility. YOLO11 is designed to be fast, accurate, and easy to use, making it an excellent choice for a wide range of object detection and tracking, instance segmentation, image classification and pose estimation tasks.\n\nWe hope that the resources here will help you get the most out of YOLO. Please browse the Ultralytics <a href=\"https://docs.ultralytics.com/\">Docs</a> for details, raise an issue on <a href=\"https://github.com/ultralytics/ultralytics/issues/new/choose\">GitHub</a> for support, questions, or discussions, become a member of the Ultralytics <a href=\"https://discord.com/invite/ultralytics\">Discord</a>, <a href=\"https://reddit.com/r/ultralytics\">Reddit</a> and <a href=\"https://community.ultralytics.com/\">Forums</a>!\n\nTo request an Enterprise License please complete the form at [Ultralytics Licensing](https://www.ultralytics.com/license).\n\n<a href=\"https://docs.ultralytics.com/models/yolo11/\" target=\"_blank\">\n  <img width=\"100%\" src=\"https://raw.githubusercontent.com/ultralytics/assets/refs/heads/main/yolo/performance-comparison.png\" alt=\"YOLO11 performance plots\">\n</a>\n\n<div align=\"center\">\n  <a href=\"https://github.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png\" width=\"2%\" alt=\"Ultralytics GitHub\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.linkedin.com/company/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png\" width=\"2%\" alt=\"Ultralytics LinkedIn\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://twitter.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png\" width=\"2%\" alt=\"Ultralytics Twitter\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://youtube.com/ultralytics?sub_confirmation=1\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png\" width=\"2%\" alt=\"Ultralytics YouTube\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.tiktok.com/@ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png\" width=\"2%\" alt=\"Ultralytics TikTok\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://ultralytics.com/bilibili\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-bilibili.png\" width=\"2%\" alt=\"Ultralytics BiliBili\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://discord.com/invite/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-discord.png\" width=\"2%\" alt=\"Ultralytics Discord\"></a>\n</div>\n</div>\n\n## <div align=\"center\">Documentation</div>\n\nSee below for a quickstart install and usage examples, and see our [Docs](https://docs.ultralytics.com/) for full documentation on training, validation, prediction and deployment.\n\n<details open>\n<summary>Install</summary>\n\nPip install the Ultralytics package including all [requirements](https://github.com/ultralytics/ultralytics/blob/main/pyproject.toml) in a [**Python>=3.8**](https://www.python.org/) environment with [**PyTorch>=1.8**](https://pytorch.org/get-started/locally/).\n\n[![PyPI - Version](https://img.shields.io/pypi/v/ultralytics?logo=pypi&logoColor=white)](https://pypi.org/project/ultralytics/) [![Ultralytics Downloads](https://static.pepy.tech/badge/ultralytics)](https://www.pepy.tech/projects/ultralytics) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ultralytics?logo=python&logoColor=gold)](https://pypi.org/project/ultralytics/)\n\n```bash\npip install ultralytics\n```\n\nFor alternative installation methods including [Conda](https://anaconda.org/conda-forge/ultralytics), [Docker](https://hub.docker.com/r/ultralytics/ultralytics), and Git, please refer to the [Quickstart Guide](https://docs.ultralytics.com/quickstart/).\n\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/ultralytics?logo=condaforge)](https://anaconda.org/conda-forge/ultralytics) [![Docker Image Version](https://img.shields.io/docker/v/ultralytics/ultralytics?sort=semver&logo=docker)](https://hub.docker.com/r/ultralytics/ultralytics) [![Ultralytics Docker Pulls](https://img.shields.io/docker/pulls/ultralytics/ultralytics?logo=docker)](https://hub.docker.com/r/ultralytics/ultralytics)\n\n</details>\n\n<details open>\n<summary>Usage</summary>\n\n### CLI\n\nYOLO may be used directly in the Command Line Interface (CLI) with a `yolo` command:\n\n```bash\nyolo predict model=yolo11n.pt source='https://ultralytics.com/images/bus.jpg'\n```\n\n`yolo` can be used for a variety of tasks and modes and accepts additional arguments, e.g. `imgsz=640`. See the YOLO [CLI Docs](https://docs.ultralytics.com/usage/cli/) for examples.\n\n### Python\n\nYOLO may also be used directly in a Python environment, and accepts the same [arguments](https://docs.ultralytics.com/usage/cfg/) as in the CLI example above:\n\n```python\nfrom ultralytics import YOLO\n\n# Load a model\nmodel = YOLO(\"yolo11n.pt\")\n\n# Train the model\ntrain_results = model.train(\n    data=\"coco8.yaml\",  # path to dataset YAML\n    epochs=100,  # number of training epochs\n    imgsz=640,  # training image size\n    device=\"cpu\",  # device to run on, i.e. device=0 or device=0,1,2,3 or device=cpu\n)\n\n# Evaluate model performance on the validation set\nmetrics = model.val()\n\n# Perform object detection on an image\nresults = model(\"path/to/image.jpg\")\nresults[0].show()\n\n# Export the model to ONNX format\npath = model.export(format=\"onnx\")  # return path to exported model\n```\n\nSee YOLO [Python Docs](https://docs.ultralytics.com/usage/python/) for more examples.\n\n</details>\n\n## <div align=\"center\">Models</div>\n\nYOLO11 [Detect](https://docs.ultralytics.com/tasks/detect/), [Segment](https://docs.ultralytics.com/tasks/segment/) and [Pose](https://docs.ultralytics.com/tasks/pose/) models pretrained on the [COCO](https://docs.ultralytics.com/datasets/detect/coco/) dataset are available here, as well as YOLO11 [Classify](https://docs.ultralytics.com/tasks/classify/) models pretrained on the [ImageNet](https://docs.ultralytics.com/datasets/classify/imagenet/) dataset. [Track](https://docs.ultralytics.com/modes/track/) mode is available for all Detect, Segment and Pose models. All [Models](https://docs.ultralytics.com/models/) download automatically from the latest Ultralytics [release](https://github.com/ultralytics/assets/releases) on first use.\n\n<a href=\"https://docs.ultralytics.com/tasks/\" target=\"_blank\">\n    <img width=\"100%\" src=\"https://github.com/ultralytics/docs/releases/download/0/ultralytics-yolov8-tasks-banner.avif\" alt=\"Ultralytics YOLO supported tasks\">\n</a>\n<br>\n<br>\n\n<details open><summary>Detection (COCO)</summary>\n\nSee [Detection Docs](https://docs.ultralytics.com/tasks/detect/) for usage examples with these models trained on [COCO](https://docs.ultralytics.com/datasets/detect/coco/), which include 80 pre-trained classes.\n\n| Model                                                                                | size<br><sup>(pixels) | mAP<sup>val<br>50-95 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) |\n| ------------------------------------------------------------------------------------ | --------------------- | -------------------- | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [YOLO11n](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n.pt) | 640                   | 39.5                 | 56.1 ± 0.8                     | 1.5 ± 0.0                           | 2.6                | 6.5               |\n| [YOLO11s](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s.pt) | 640                   | 47.0                 | 90.0 ± 1.2                     | 2.5 ± 0.0                           | 9.4                | 21.5              |\n| [YOLO11m](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m.pt) | 640                   | 51.5                 | 183.2 ± 2.0                    | 4.7 ± 0.1                           | 20.1               | 68.0              |\n| [YOLO11l](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l.pt) | 640                   | 53.4                 | 238.6 ± 1.4                    | 6.2 ± 0.1                           | 25.3               | 86.9              |\n| [YOLO11x](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x.pt) | 640                   | 54.7                 | 462.8 ± 6.7                    | 11.3 ± 0.2                          | 56.9               | 194.9             |\n\n- **mAP<sup>val</sup>** values are for single-model single-scale on [COCO val2017](https://cocodataset.org/) dataset. <br>Reproduce by `yolo val detect data=coco.yaml device=0`\n- **Speed** averaged over COCO val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val detect data=coco.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>Segmentation (COCO)</summary>\n\nSee [Segmentation Docs](https://docs.ultralytics.com/tasks/segment/) for usage examples with these models trained on [COCO-Seg](https://docs.ultralytics.com/datasets/segment/coco/), which include 80 pre-trained classes.\n\n| Model                                                                                        | size<br><sup>(pixels) | mAP<sup>box<br>50-95 | mAP<sup>mask<br>50-95 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) |\n| -------------------------------------------------------------------------------------------- | --------------------- | -------------------- | --------------------- | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [YOLO11n-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-seg.pt) | 640                   | 38.9                 | 32.0                  | 65.9 ± 1.1                     | 1.8 ± 0.0                           | 2.9                | 10.4              |\n| [YOLO11s-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-seg.pt) | 640                   | 46.6                 | 37.8                  | 117.6 ± 4.9                    | 2.9 ± 0.0                           | 10.1               | 35.5              |\n| [YOLO11m-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-seg.pt) | 640                   | 51.5                 | 41.5                  | 281.6 ± 1.2                    | 6.3 ± 0.1                           | 22.4               | 123.3             |\n| [YOLO11l-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-seg.pt) | 640                   | 53.4                 | 42.9                  | 344.2 ± 3.2                    | 7.8 ± 0.2                           | 27.6               | 142.2             |\n| [YOLO11x-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-seg.pt) | 640                   | 54.7                 | 43.8                  | 664.5 ± 3.2                    | 15.8 ± 0.7                          | 62.1               | 319.0             |\n\n- **mAP<sup>val</sup>** values are for single-model single-scale on [COCO val2017](https://cocodataset.org/) dataset. <br>Reproduce by `yolo val segment data=coco.yaml device=0`\n- **Speed** averaged over COCO val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val segment data=coco.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>Classification (ImageNet)</summary>\n\nSee [Classification Docs](https://docs.ultralytics.com/tasks/classify/) for usage examples with these models trained on [ImageNet](https://docs.ultralytics.com/datasets/classify/imagenet/), which include 1000 pretrained classes.\n\n| Model                                                                                        | size<br><sup>(pixels) | acc<br><sup>top1 | acc<br><sup>top5 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) at 640 |\n| -------------------------------------------------------------------------------------------- | --------------------- | ---------------- | ---------------- | ------------------------------ | ----------------------------------- | ------------------ | ------------------------ |\n| [YOLO11n-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-cls.pt) | 224                   | 70.0             | 89.4             | 5.0 ± 0.3                      | 1.1 ± 0.0                           | 1.6                | 3.3                      |\n| [YOLO11s-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-cls.pt) | 224                   | 75.4             | 92.7             | 7.9 ± 0.2                      | 1.3 ± 0.0                           | 5.5                | 12.1                     |\n| [YOLO11m-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-cls.pt) | 224                   | 77.3             | 93.9             | 17.2 ± 0.4                     | 2.0 ± 0.0                           | 10.4               | 39.3                     |\n| [YOLO11l-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-cls.pt) | 224                   | 78.3             | 94.3             | 23.2 ± 0.3                     | 2.8 ± 0.0                           | 12.9               | 49.4                     |\n| [YOLO11x-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-cls.pt) | 224                   | 79.5             | 94.9             | 41.4 ± 0.9                     | 3.8 ± 0.0                           | 28.4               | 110.4                    |\n\n- **acc** values are model accuracies on the [ImageNet](https://www.image-net.org/) dataset validation set. <br>Reproduce by `yolo val classify data=path/to/ImageNet device=0`\n- **Speed** averaged over ImageNet val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val classify data=path/to/ImageNet batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>Pose (COCO)</summary>\n\nSee [Pose Docs](https://docs.ultralytics.com/tasks/pose/) for usage examples with these models trained on [COCO-Pose](https://docs.ultralytics.com/datasets/pose/coco/), which include 1 pre-trained class, person.\n\n| Model                                                                                          | size<br><sup>(pixels) | mAP<sup>pose<br>50-95 | mAP<sup>pose<br>50 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) |\n| ---------------------------------------------------------------------------------------------- | --------------------- | --------------------- | ------------------ | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [YOLO11n-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-pose.pt) | 640                   | 50.0                  | 81.0               | 52.4 ± 0.5                     | 1.7 ± 0.0                           | 2.9                | 7.6               |\n| [YOLO11s-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-pose.pt) | 640                   | 58.9                  | 86.3               | 90.5 ± 0.6                     | 2.6 ± 0.0                           | 9.9                | 23.2              |\n| [YOLO11m-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-pose.pt) | 640                   | 64.9                  | 89.4               | 187.3 ± 0.8                    | 4.9 ± 0.1                           | 20.9               | 71.7              |\n| [YOLO11l-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-pose.pt) | 640                   | 66.1                  | 89.9               | 247.7 ± 1.1                    | 6.4 ± 0.1                           | 26.2               | 90.7              |\n| [YOLO11x-pose](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-pose.pt) | 640                   | 69.5                  | 91.1               | 488.0 ± 13.9                   | 12.1 ± 0.2                          | 58.8               | 203.3             |\n\n- **mAP<sup>val</sup>** values are for single-model single-scale on [COCO Keypoints val2017](https://cocodataset.org/) dataset. <br>Reproduce by `yolo val pose data=coco-pose.yaml device=0`\n- **Speed** averaged over COCO val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val pose data=coco-pose.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>OBB (DOTAv1)</summary>\n\nSee [OBB Docs](https://docs.ultralytics.com/tasks/obb/) for usage examples with these models trained on [DOTAv1](https://docs.ultralytics.com/datasets/obb/dota-v2/#dota-v10/), which include 15 pre-trained classes.\n\n| Model                                                                                        | size<br><sup>(pixels) | mAP<sup>test<br>50 | Speed<br><sup>CPU ONNX<br>(ms) | Speed<br><sup>T4 TensorRT10<br>(ms) | params<br><sup>(M) | FLOPs<br><sup>(B) |\n| -------------------------------------------------------------------------------------------- | --------------------- | ------------------ | ------------------------------ | ----------------------------------- | ------------------ | ----------------- |\n| [YOLO11n-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-obb.pt) | 1024                  | 78.4               | 117.6 ± 0.8                    | 4.4 ± 0.0                           | 2.7                | 17.2              |\n| [YOLO11s-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-obb.pt) | 1024                  | 79.5               | 219.4 ± 4.0                    | 5.1 ± 0.0                           | 9.7                | 57.5              |\n| [YOLO11m-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-obb.pt) | 1024                  | 80.9               | 562.8 ± 2.9                    | 10.1 ± 0.4                          | 20.9               | 183.5             |\n| [YOLO11l-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-obb.pt) | 1024                  | 81.0               | 712.5 ± 5.0                    | 13.5 ± 0.6                          | 26.2               | 232.0             |\n| [YOLO11x-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-obb.pt) | 1024                  | 81.3               | 1408.6 ± 7.7                   | 28.6 ± 1.0                          | 58.8               | 520.2             |\n\n- **mAP<sup>test</sup>** values are for single-model multiscale on [DOTAv1](https://captain-whu.github.io/DOTA/index.html) dataset. <br>Reproduce by `yolo val obb data=DOTAv1.yaml device=0 split=test` and submit merged results to [DOTA evaluation](https://captain-whu.github.io/DOTA/evaluation.html).\n- **Speed** averaged over DOTAv1 val images using an [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) instance. <br>Reproduce by `yolo val obb data=DOTAv1.yaml batch=1 device=0|cpu`\n\n</details>\n\n## <div align=\"center\">Integrations</div>\n\nOur key integrations with leading AI platforms extend the functionality of Ultralytics' offerings, enhancing tasks like dataset labeling, training, visualization, and model management. Discover how Ultralytics, in collaboration with [W&B](https://docs.wandb.ai/guides/integrations/ultralytics/), [Comet](https://bit.ly/yolov8-readme-comet), [Roboflow](https://roboflow.com/?ref=ultralytics) and [OpenVINO](https://docs.ultralytics.com/integrations/openvino/), can optimize your AI workflow.\n\n<a href=\"https://www.ultralytics.com/hub\" target=\"_blank\">\n    <img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/yolov8/banner-integrations.png\" alt=\"Ultralytics active learning integrations\">\n</a>\n<br>\n<br>\n\n<div align=\"center\">\n  <a href=\"https://www.ultralytics.com/hub\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-ultralytics-hub.png\" width=\"10%\" alt=\"Ultralytics HUB logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://docs.wandb.ai/guides/integrations/ultralytics/\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-wb.png\" width=\"10%\" alt=\"ClearML logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://bit.ly/yolov8-readme-comet\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-comet.png\" width=\"10%\" alt=\"Comet ML logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://bit.ly/yolov5-neuralmagic\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-neuralmagic.png\" width=\"10%\" alt=\"NeuralMagic logo\"></a>\n</div>\n\n|                                                         Ultralytics HUB 🚀                                                         |                                                               W&B                                                               |                                                                       Comet ⭐ NEW                                                                        |                                              Neural Magic                                              |\n| :--------------------------------------------------------------------------------------------------------------------------------: | :-----------------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------: |\n| Streamline YOLO workflows: Label, train, and deploy effortlessly with [Ultralytics HUB](https://www.ultralytics.com/hub). Try now! | Track experiments, hyperparameters, and results with [Weights & Biases](https://docs.wandb.ai/guides/integrations/ultralytics/) | Free forever, [Comet](https://bit.ly/yolov5-readme-comet) lets you save YOLO11 models, resume training, and interactively visualize and debug predictions | Run YOLO11 inference up to 6x faster with [Neural Magic DeepSparse](https://bit.ly/yolov5-neuralmagic) |\n\n## <div align=\"center\">Ultralytics HUB</div>\n\nExperience seamless AI with [Ultralytics HUB](https://www.ultralytics.com/hub) ⭐, the all-in-one solution for data visualization, YOLO11 🚀 model training and deployment, without any coding. Transform images into actionable insights and bring your AI visions to life with ease using our cutting-edge platform and user-friendly [Ultralytics App](https://www.ultralytics.com/app-install). Start your journey for **Free** now!\n\n<a href=\"https://www.ultralytics.com/hub\" target=\"_blank\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/ultralytics-hub.png\" alt=\"Ultralytics HUB preview image\"></a>\n\n## <div align=\"center\">Contribute</div>\n\nWe love your input! Ultralytics YOLO would not be possible without help from our community. Please see our [Contributing Guide](https://docs.ultralytics.com/help/contributing/) to get started, and fill out our [Survey](https://www.ultralytics.com/survey?utm_source=github&utm_medium=social&utm_campaign=Survey) to send us feedback on your experience. Thank you 🙏 to all our contributors!\n\n<!-- SVG image from https://opencollective.com/ultralytics/contributors.svg?width=990 -->\n\n<a href=\"https://github.com/ultralytics/ultralytics/graphs/contributors\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/image-contributors.png\" alt=\"Ultralytics open-source contributors\"></a>\n\n## <div align=\"center\">License</div>\n\nUltralytics offers two licensing options to accommodate diverse use cases:\n\n- **AGPL-3.0 License**: This [OSI-approved](https://opensource.org/license) open-source license is ideal for students and enthusiasts, promoting open collaboration and knowledge sharing. See the [LICENSE](https://github.com/ultralytics/ultralytics/blob/main/LICENSE) file for more details.\n- **Enterprise License**: Designed for commercial use, this license permits seamless integration of Ultralytics software and AI models into commercial goods and services, bypassing the open-source requirements of AGPL-3.0. If your scenario involves embedding our solutions into a commercial offering, reach out through [Ultralytics Licensing](https://www.ultralytics.com/license).\n\n## <div align=\"center\">Contact</div>\n\nFor Ultralytics bug reports and feature requests please visit [GitHub Issues](https://github.com/ultralytics/ultralytics/issues). Become a member of the Ultralytics [Discord](https://discord.com/invite/ultralytics), [Reddit](https://www.reddit.com/r/ultralytics/), or [Forums](https://community.ultralytics.com/) for asking questions, sharing projects, learning discussions, or for help with all things Ultralytics!\n\n<br>\n<div align=\"center\">\n  <a href=\"https://github.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png\" width=\"3%\" alt=\"Ultralytics GitHub\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.linkedin.com/company/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png\" width=\"3%\" alt=\"Ultralytics LinkedIn\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://twitter.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png\" width=\"3%\" alt=\"Ultralytics Twitter\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://youtube.com/ultralytics?sub_confirmation=1\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png\" width=\"3%\" alt=\"Ultralytics YouTube\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.tiktok.com/@ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png\" width=\"3%\" alt=\"Ultralytics TikTok\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://ultralytics.com/bilibili\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-bilibili.png\" width=\"3%\" alt=\"Ultralytics BiliBili\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://discord.com/invite/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-discord.png\" width=\"3%\" alt=\"Ultralytics Discord\"></a>\n</div>\n"
        },
        {
          "name": "README.zh-CN.md",
          "type": "blob",
          "size": 29.5380859375,
          "content": "<div align=\"center\">\n  <p>\n    <a href=\"https://www.ultralytics.com/events/yolovision\" target=\"_blank\">\n      <img width=\"100%\" src=\"https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/banner-yolov8.png\" alt=\"YOLO Vision banner\"></a>\n  </p>\n\n[中文](https://docs.ultralytics.com/zh) | [한국어](https://docs.ultralytics.com/ko) | [日本語](https://docs.ultralytics.com/ja) | [Русский](https://docs.ultralytics.com/ru) | [Deutsch](https://docs.ultralytics.com/de) | [Français](https://docs.ultralytics.com/fr) | [Español](https://docs.ultralytics.com/es) | [Português](https://docs.ultralytics.com/pt) | [Türkçe](https://docs.ultralytics.com/tr) | [Tiếng Việt](https://docs.ultralytics.com/vi) | [العربية](https://docs.ultralytics.com/ar) <br>\n\n<div>\n    <a href=\"https://github.com/ultralytics/ultralytics/actions/workflows/ci.yaml\"><img src=\"https://github.com/ultralytics/ultralytics/actions/workflows/ci.yaml/badge.svg\" alt=\"Ultralytics CI\"></a>\n    <a href=\"https://pepy.tech/projects/ultralytics\"><img src=\"https://static.pepy.tech/badge/ultralytics\" alt=\"Ultralytics Downloads\"></a>\n    <a href=\"https://zenodo.org/badge/latestdoi/264818686\"><img src=\"https://zenodo.org/badge/264818686.svg\" alt=\"Ultralytics YOLO Citation\"></a>\n    <a href=\"https://discord.com/invite/ultralytics\"><img alt=\"Ultralytics Discord\" src=\"https://img.shields.io/discord/1089800235347353640?logo=discord&logoColor=white&label=Discord&color=blue\"></a>\n    <a href=\"https://community.ultralytics.com/\"><img alt=\"Ultralytics Forums\" src=\"https://img.shields.io/discourse/users?server=https%3A%2F%2Fcommunity.ultralytics.com&logo=discourse&label=Forums&color=blue\"></a>\n    <a href=\"https://reddit.com/r/ultralytics\"><img alt=\"Ultralytics Reddit\" src=\"https://img.shields.io/reddit/subreddit-subscribers/ultralytics?style=flat&logo=reddit&logoColor=white&label=Reddit&color=blue\"></a>\n    <br>\n    <a href=\"https://console.paperspace.com/github/ultralytics/ultralytics\"><img src=\"https://assets.paperspace.io/img/gradient-badge.svg\" alt=\"Run Ultralytics on Gradient\"></a>\n    <a href=\"https://colab.research.google.com/github/ultralytics/ultralytics/blob/main/examples/tutorial.ipynb\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open Ultralytics In Colab\"></a>\n    <a href=\"https://www.kaggle.com/models/ultralytics/yolo11\"><img src=\"https://kaggle.com/static/images/open-in-kaggle.svg\" alt=\"Open Ultralytics In Kaggle\"></a>\n    <a href=\"https://mybinder.org/v2/gh/ultralytics/ultralytics/HEAD?labpath=examples%2Ftutorial.ipynb\"><img src=\"https://mybinder.org/badge_logo.svg\" alt=\"Open Ultralytics In Binder\"></a>\n</div>\n<br>\n\n[Ultralytics](https://www.ultralytics.com/) [YOLO11](https://github.com/ultralytics/ultralytics) 是一个尖端的、最先进（SOTA）的模型，基于之前 YOLO 版本的成功，并引入了新功能和改进以进一步提升性能和灵活性。YOLO11 被设计得快速、准确且易于使用，是进行广泛对象检测和跟踪、实例分割、图像分类和姿态估计任务的理想选择。\n\n我们希望这里的资源能帮助你充分利用 YOLO。请浏览 Ultralytics <a href=\"https://docs.ultralytics.com/\">文档</a> 以获取详细信息，在 <a href=\"https://github.com/ultralytics/ultralytics/issues/new/choose\">GitHub</a> 上提出问题或讨论，成为 Ultralytics <a href=\"https://discord.com/invite/ultralytics\">Discord</a>、<a href=\"https://reddit.com/r/ultralytics\">Reddit</a> 和 <a href=\"https://community.ultralytics.com/\">论坛</a> 的成员！\n\n想申请企业许可证，请完成 [Ultralytics Licensing](https://www.ultralytics.com/license) 上的表单。\n\n<a href=\"https://docs.ultralytics.com/models/yolo11/\" target=\"_blank\">\n  <img width=\"100%\" src=\"https://raw.githubusercontent.com/ultralytics/assets/refs/heads/main/yolo/performance-comparison.png\" alt=\"YOLO11 performance plots\">\n</a>\n\n<div align=\"center\">\n  <a href=\"https://github.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png\" width=\"2%\" alt=\"Ultralytics GitHub\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.linkedin.com/company/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png\" width=\"2%\" alt=\"Ultralytics LinkedIn\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://twitter.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png\" width=\"2%\" alt=\"Ultralytics Twitter\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://youtube.com/ultralytics?sub_confirmation=1\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png\" width=\"2%\" alt=\"Ultralytics YouTube\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://www.tiktok.com/@ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png\" width=\"2%\" alt=\"Ultralytics TikTok\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://ultralytics.com/bilibili\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-bilibili.png\" width=\"2%\" alt=\"Ultralytics BiliBili\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"2%\" alt=\"space\">\n  <a href=\"https://discord.com/invite/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-discord.png\" width=\"2%\" alt=\"Ultralytics Discord\"></a>\n</div>\n</div>\n\n## <div align=\"center\">文档</div>\n\n请参阅下方的快速开始安装和使用示例，并查看我们的 [文档](https://docs.ultralytics.com/) 以获取有关训练、验证、预测和部署的完整文档。\n\n<details open>\n<summary>安装</summary>\n\n在 [**Python>=3.8**](https://www.python.org/) 环境中使用 [**PyTorch>=1.8**](https://pytorch.org/get-started/locally/) 通过 pip 安装包含所有[依赖项](https://github.com/ultralytics/ultralytics/blob/main/pyproject.toml) 的 ultralytics 包。\n\n[![PyPI - Version](https://img.shields.io/pypi/v/ultralytics?logo=pypi&logoColor=white)](https://pypi.org/project/ultralytics/) [![Ultralytics Downloads](https://static.pepy.tech/badge/ultralytics)](https://www.pepy.tech/projects/ultralytics) [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ultralytics?logo=python&logoColor=gold)](https://pypi.org/project/ultralytics/)\n\n```bash\npip install ultralytics\n```\n\n有关其他安装方法，包括 [Conda](https://anaconda.org/conda-forge/ultralytics)、[Docker](https://hub.docker.com/r/ultralytics/ultralytics) 和 Git，请参阅 [快速开始指南](https://docs.ultralytics.com/quickstart/)。\n\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/ultralytics?logo=condaforge)](https://anaconda.org/conda-forge/ultralytics) [![Docker Image Version](https://img.shields.io/docker/v/ultralytics/ultralytics?sort=semver&logo=docker)](https://hub.docker.com/r/ultralytics/ultralytics) [![Ultralytics Docker Pulls](https://img.shields.io/docker/pulls/ultralytics/ultralytics?logo=docker)](https://hub.docker.com/r/ultralytics/ultralytics)\n\n</details>\n\n<details open>\n<summary>使用</summary>\n\n### CLI\n\nYOLO 可以直接在命令行接口（CLI）中使用 `yolo` 命令：\n\n```bash\nyolo predict model=yolo11n.pt source='https://ultralytics.com/images/bus.jpg'\n```\n\n`yolo` 可以用于各种任务和模式，并接受额外参数，例如 `imgsz=640`。请参阅 YOLO [CLI 文档](https://docs.ultralytics.com/usage/cli/) 以获取示例。\n\n### Python\n\nYOLO 也可以直接在 Python 环境中使用，并接受与上述 CLI 示例中相同的[参数](https://docs.ultralytics.com/usage/cfg/)：\n\n```python\nfrom ultralytics import YOLO\n\n# 加载模型\nmodel = YOLO(\"yolo11n.pt\")\n\n# 训练模型\ntrain_results = model.train(\n    data=\"coco8.yaml\",  # 数据集 YAML 路径\n    epochs=100,  # 训练轮次\n    imgsz=640,  # 训练图像尺寸\n    device=\"cpu\",  # 运行设备，例如 device=0 或 device=0,1,2,3 或 device=cpu\n)\n\n# 评估模型在验证集上的性能\nmetrics = model.val()\n\n# 在图像上执行对象检测\nresults = model(\"path/to/image.jpg\")\nresults[0].show()\n\n# 将模型导出为 ONNX 格式\npath = model.export(format=\"onnx\")  # 返回导出模型的路径\n```\n\n请参阅 YOLO [Python 文档](https://docs.ultralytics.com/usage/python/) 以获取更多示例。\n\n</details>\n\n## <div align=\"center\">模型</div>\n\nYOLO11 [检测](https://docs.ultralytics.com/tasks/detect/)、[分割](https://docs.ultralytics.com/tasks/segment/) 和 [姿态](https://docs.ultralytics.com/tasks/pose/) 模型在 [COCO](https://docs.ultralytics.com/datasets/detect/coco/) 数据集上进行预训练，这些模型可在此处获得，此外还有在 [ImageNet](https://docs.ultralytics.com/datasets/classify/imagenet/) 数据集上预训练的 YOLO11 [分类](https://docs.ultralytics.com/tasks/classify/) 模型。所有检测、分割和姿态模型均支持 [跟踪](https://docs.ultralytics.com/modes/track/) 模式。所有[模型](https://docs.ultralytics.com/models/)在首次使用时自动从最新的 Ultralytics [发布](https://github.com/ultralytics/assets/releases)下载。\n\n<a href=\"https://docs.ultralytics.com/tasks/\" target=\"_blank\">\n    <img width=\"100%\" src=\"https://github.com/ultralytics/docs/releases/download/0/ultralytics-yolov8-tasks-banner.avif\" alt=\"Ultralytics YOLO supported tasks\">\n</a>\n<br>\n<br>\n\n<details open><summary>检测 (COCO)</summary>\n\n请参阅 [检测文档](https://docs.ultralytics.com/tasks/detect/) 以获取使用这些在 [COCO](https://docs.ultralytics.com/datasets/detect/coco/) 数据集上训练的模型的示例，其中包含 80 个预训练类别。\n\n| 模型                                                                                 | 尺寸<br><sup>(像素) | mAP<sup>val<br>50-95 | 速度<br><sup>CPU ONNX<br>(ms) | 速度<br><sup>T4 TensorRT10<br>(ms) | 参数<br><sup>(M) | FLOPs<br><sup>(B) |\n| ------------------------------------------------------------------------------------ | ------------------- | -------------------- | ----------------------------- | ---------------------------------- | ---------------- | ----------------- |\n| [YOLO11n](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n.pt) | 640                 | 39.5                 | 56.1 ± 0.8                    | 1.5 ± 0.0                          | 2.6              | 6.5               |\n| [YOLO11s](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s.pt) | 640                 | 47.0                 | 90.0 ± 1.2                    | 2.5 ± 0.0                          | 9.4              | 21.5              |\n| [YOLO11m](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m.pt) | 640                 | 51.5                 | 183.2 ± 2.0                   | 4.7 ± 0.1                          | 20.1             | 68.0              |\n| [YOLO11l](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l.pt) | 640                 | 53.4                 | 238.6 ± 1.4                   | 6.2 ± 0.1                          | 25.3             | 86.9              |\n| [YOLO11x](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x.pt) | 640                 | 54.7                 | 462.8 ± 6.7                   | 11.3 ± 0.2                         | 56.9             | 194.9             |\n\n- **mAP<sup>val</sup>** 值针对单模型单尺度在 [COCO val2017](https://cocodataset.org/) 数据集上进行。 <br>复制命令 `yolo val detect data=coco.yaml device=0`\n- **速度**在使用 [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) 实例的 COCO 验证图像上平均。 <br>复制命令 `yolo val detect data=coco.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>分割 (COCO)</summary>\n\n请参阅 [分割文档](https://docs.ultralytics.com/tasks/segment/) 以获取使用这些在 [COCO-Seg](https://docs.ultralytics.com/datasets/segment/coco/) 数据集上训练的模型的示例，其中包含 80 个预训练类别。\n\n| 模型                                                                                         | 尺寸<br><sup>(像素) | mAP<sup>box<br>50-95 | mAP<sup>mask<br>50-95 | 速度<br><sup>CPU ONNX<br>(ms) | 速度<br><sup>T4 TensorRT10<br>(ms) | 参数<br><sup>(M) | FLOPs<br><sup>(B) |\n| -------------------------------------------------------------------------------------------- | ------------------- | -------------------- | --------------------- | ----------------------------- | ---------------------------------- | ---------------- | ----------------- |\n| [YOLO11n-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-seg.pt) | 640                 | 38.9                 | 32.0                  | 65.9 ± 1.1                    | 1.8 ± 0.0                          | 2.9              | 10.4              |\n| [YOLO11s-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-seg.pt) | 640                 | 46.6                 | 37.8                  | 117.6 ± 4.9                   | 2.9 ± 0.0                          | 10.1             | 35.5              |\n| [YOLO11m-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-seg.pt) | 640                 | 51.5                 | 41.5                  | 281.6 ± 1.2                   | 6.3 ± 0.1                          | 22.4             | 123.3             |\n| [YOLO11l-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-seg.pt) | 640                 | 53.4                 | 42.9                  | 344.2 ± 3.2                   | 7.8 ± 0.2                          | 27.6             | 142.2             |\n| [YOLO11x-seg](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-seg.pt) | 640                 | 54.7                 | 43.8                  | 664.5 ± 3.2                   | 15.8 ± 0.7                         | 62.1             | 319.0             |\n\n- **mAP<sup>val</sup>** 值针对单模型单尺度在 [COCO val2017](https://cocodataset.org/) 数据集上进行。 <br>复制命令 `yolo val segment data=coco.yaml device=0`\n- **速度**在使用 [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) 实例的 COCO 验证图像上平均。 <br>复制命令 `yolo val segment data=coco.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>分类 (ImageNet)</summary>\n\n请参阅 [分类文档](https://docs.ultralytics.com/tasks/classify/) 以获取使用这些在 [ImageNet](https://docs.ultralytics.com/datasets/classify/imagenet/) 数据集上训练的模型的示例，其中包含 1000 个预训练类别。\n\n| 模型                                                                                         | 尺寸<br><sup>(像素) | acc<br><sup>top1 | acc<br><sup>top5 | 速度<br><sup>CPU ONNX<br>(ms) | 速度<br><sup>T4 TensorRT10<br>(ms) | 参数<br><sup>(M) | FLOPs<br><sup>(B) at 640 |\n| -------------------------------------------------------------------------------------------- | ------------------- | ---------------- | ---------------- | ----------------------------- | ---------------------------------- | ---------------- | ------------------------ |\n| [YOLO11n-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-cls.pt) | 224                 | 70.0             | 89.4             | 5.0 ± 0.3                     | 1.1 ± 0.0                          | 1.6              | 3.3                      |\n| [YOLO11s-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-cls.pt) | 224                 | 75.4             | 92.7             | 7.9 ± 0.2                     | 1.3 ± 0.0                          | 5.5              | 12.1                     |\n| [YOLO11m-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-cls.pt) | 224                 | 77.3             | 93.9             | 17.2 ± 0.4                    | 2.0 ± 0.0                          | 10.4             | 39.3                     |\n| [YOLO11l-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-cls.pt) | 224                 | 78.3             | 94.3             | 23.2 ± 0.3                    | 2.8 ± 0.0                          | 12.9             | 49.4                     |\n| [YOLO11x-cls](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-cls.pt) | 224                 | 79.5             | 94.9             | 41.4 ± 0.9                    | 3.8 ± 0.0                          | 28.4             | 110.4                    |\n\n- **acc** 值为在 [ImageNet](https://www.image-net.org/) 数据集验证集上的模型准确率。 <br>复制命令 `yolo val classify data=path/to/ImageNet device=0`\n- **速度**在使用 [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) 实例的 ImageNet 验证图像上平均。 <br>复制命令 `yolo val classify data=path/to/ImageNet batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>姿态 (COCO)</summary>\n\n请参阅 [姿态文档](https://docs.ultralytics.com/tasks/pose/) 以获取使用这些在 [COCO-Pose](https://docs.ultralytics.com/datasets/pose/coco/) 数据集上训练的模型的示例，其中包含 1 个预训练类别（人）。\n\n| 模型                                                                                         | 尺寸<br><sup>(像素) | mAP<sup>pose<br>50-95 | mAP<sup>pose<br>50 | 速度<br><sup>CPU ONNX<br>(ms) | 速度<br><sup>T4 TensorRT10<br>(ms) | 参数<br><sup>(M) | FLOPs<br><sup>(B) |\n| -------------------------------------------------------------------------------------------- | ------------------- | --------------------- | ------------------ | ----------------------------- | ---------------------------------- | ---------------- | ----------------- |\n| [YOLO11n-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-obb.pt) | 1024                | 78.4                  | 117.6 ± 0.8        | 4.4 ± 0.0                     | 2.7                                | 17.2             |\n| [YOLO11s-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-obb.pt) | 1024                | 79.5                  | 219.4 ± 4.0        | 5.1 ± 0.0                     | 9.7                                | 57.5             |\n| [YOLO11m-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-obb.pt) | 1024                | 80.9                  | 562.8 ± 2.9        | 10.1 ± 0.4                    | 20.9                               | 183.5            |\n| [YOLO11l-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-obb.pt) | 1024                | 81.0                  | 712.5 ± 5.0        | 13.5 ± 0.6                    | 26.2                               | 232.0            |\n| [YOLO11x-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-obb.pt) | 1024                | 81.3                  | 1408.6 ± 7.7       | 28.6 ± 1.0                    | 58.8                               | 520.2            |\n\n- **mAP<sup>val</sup>** 值针对单模型单尺度在 [COCO Keypoints val2017](https://cocodataset.org/) 数据集上进行。 <br>复制命令 `yolo val pose data=coco-pose.yaml device=0`\n- **速度**在使用 [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) 实例的 COCO 验证图像上平均。 <br>复制命令 `yolo val pose data=coco-pose.yaml batch=1 device=0|cpu`\n\n</details>\n\n<details><summary>OBB (DOTAv1)</summary>\n\n请参阅 [OBB 文档](https://docs.ultralytics.com/tasks/obb/) 以获取使用这些在 [DOTAv1](https://docs.ultralytics.com/datasets/obb/dota-v2/#dota-v10/) 数据集上训练的模型的示例，其中包含 15 个预训练类别。\n\n| 模型                                                                                         | 尺寸<br><sup>(像素) | mAP<sup>test<br>50 | 速度<br><sup>CPU ONNX<br>(ms) | 速度<br><sup>T4 TensorRT10<br>(ms) | 参数<br><sup>(M) | FLOPs<br><sup>(B) |\n| -------------------------------------------------------------------------------------------- | ------------------- | ------------------ | ----------------------------- | ---------------------------------- | ---------------- | ----------------- |\n| [YOLO11n-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11n-obb.pt) | 1024                | 78.4               | 117.56 ± 0.80                 | 4.43 ± 0.01                        | 2.7              | 17.2              |\n| [YOLO11s-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11s-obb.pt) | 1024                | 79.5               | 219.41 ± 4.00                 | 5.13 ± 0.02                        | 9.7              | 57.5              |\n| [YOLO11m-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11m-obb.pt) | 1024                | 80.9               | 562.81 ± 2.87                 | 10.07 ± 0.38                       | 20.9             | 183.5             |\n| [YOLO11l-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11l-obb.pt) | 1024                | 81.0               | 712.49 ± 4.98                 | 13.46 ± 0.55                       | 26.2             | 232.0             |\n| [YOLO11x-obb](https://github.com/ultralytics/assets/releases/download/v8.3.0/yolo11x-obb.pt) | 1024                | 81.3               | 1408.63 ± 7.67                | 28.59 ± 0.96                       | 58.8             | 520.2             |\n\n- **mAP<sup>test</sup>** 值针对单模型多尺度在 [DOTAv1](https://captain-whu.github.io/DOTA/index.html) 数据集上进行。 <br>复制命令 `yolo val obb data=DOTAv1.yaml device=0 split=test` 并提交合并结果到 [DOTA 评估](https://captain-whu.github.io/DOTA/evaluation.html)。\n- **速度**在使用 [Amazon EC2 P4d](https://aws.amazon.com/ec2/instance-types/p4/) 实例的 DOTAv1 验证图像上平均。 <br>复制命令 `yolo val obb data=DOTAv1.yaml batch=1 device=0|cpu`\n\n</details>\n\n## <div align=\"center\">集成</div>\n\n我们与领先的 AI 平台的关键集成扩展了 Ultralytics 产品的功能，提升了数据集标注、训练、可视化和模型管理等任务。探索 Ultralytics 如何通过与 [W&B](https://docs.wandb.ai/guides/integrations/ultralytics/)、[Comet](https://bit.ly/yolov8-readme-comet)、[Roboflow](https://roboflow.com/?ref=ultralytics) 和 [OpenVINO](https://docs.ultralytics.com/integrations/openvino/) 的合作，优化您的 AI 工作流程。\n\n<a href=\"https://www.ultralytics.com/hub\" target=\"_blank\">\n    <img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/yolov8/banner-integrations.png\" alt=\"Ultralytics active learning integrations\">\n</a>\n<br>\n<br>\n\n<div align=\"center\">\n  <a href=\"https://www.ultralytics.com/hub\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-ultralytics-hub.png\" width=\"10%\" alt=\"Ultralytics HUB logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://docs.wandb.ai/guides/integrations/ultralytics/\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-wb.png\" width=\"10%\" alt=\"W&B logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://bit.ly/yolov8-readme-comet\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-comet.png\" width=\"10%\" alt=\"Comet ML logo\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"15%\" height=\"0\" alt=\"space\">\n  <a href=\"https://bit.ly/yolov5-neuralmagic\">\n    <img src=\"https://github.com/ultralytics/assets/raw/main/partners/logo-neuralmagic.png\" width=\"10%\" alt=\"NeuralMagic logo\"></a>\n</div>\n\n|                                              Ultralytics HUB 🚀                                              |                                                  W&B                                                   |                                                     Comet ⭐ 全新                                                      |                                            Neural Magic                                             |\n| :----------------------------------------------------------------------------------------------------------: | :----------------------------------------------------------------------------------------------------: | :--------------------------------------------------------------------------------------------------------------------: | :-------------------------------------------------------------------------------------------------: |\n| 简化 YOLO 工作流程：通过 [Ultralytics HUB](https://www.ultralytics.com/hub) 轻松标注、训练和部署。立即试用！ | 使用 [Weights & Biases](https://docs.wandb.ai/guides/integrations/ultralytics/) 跟踪实验、超参数和结果 | 永久免费，[Comet](https://bit.ly/yolov5-readme-comet) 允许您保存 YOLO11 模型、恢复训练，并交互式地可视化和调试预测结果 | 使用 [Neural Magic DeepSparse](https://bit.ly/yolov5-neuralmagic) 运行 YOLO11 推理，速度提升至 6 倍 |\n\n## <div align=\"center\">Ultralytics HUB</div>\n\n体验无缝 AI 使用 [Ultralytics HUB](https://www.ultralytics.com/hub) ⭐，一个集数据可视化、YOLO11 🚀 模型训练和部署于一体的解决方案，无需编写代码。利用我们最先进的平台和用户友好的 [Ultralytics 应用](https://www.ultralytics.com/app-install)，将图像转换为可操作见解，并轻松实现您的 AI 愿景。免费开始您的旅程！\n\n<a href=\"https://www.ultralytics.com/hub\" target=\"_blank\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/ultralytics-hub.png\" alt=\"Ultralytics HUB preview image\"></a>\n\n## <div align=\"center\">贡献</div>\n\n我们欢迎您的意见！没有社区的帮助，Ultralytics YOLO 就不可能实现。请参阅我们的 [贡献指南](https://docs.ultralytics.com/help/contributing/) 开始，并填写我们的 [调查问卷](https://www.ultralytics.com/survey?utm_source=github&utm_medium=social&utm_campaign=Survey) 向我们提供您体验的反馈。感谢所有贡献者 🙏！\n\n<!-- SVG image from https://opencollective.com/ultralytics/contributors.svg?width=990 -->\n\n<a href=\"https://github.com/ultralytics/ultralytics/graphs/contributors\">\n<img width=\"100%\" src=\"https://github.com/ultralytics/assets/raw/main/im/image-contributors.png\" alt=\"Ultralytics open-source contributors\"></a>\n\n## <div align=\"center\">许可</div>\n\nUltralytics 提供两种许可选项以适应各种用例：\n\n- **AGPL-3.0 许可**：这是一个 [OSI 批准](https://opensource.org/license) 的开源许可，适合学生和爱好者，促进开放协作和知识共享。有关详细信息，请参阅 [LICENSE](https://github.com/ultralytics/ultralytics/blob/main/LICENSE) 文件。\n- **企业许可**：专为商业使用设计，此许可允许将 Ultralytics 软件和 AI 模型无缝集成到商业产品和服务中，无需满足 AGPL-3.0 的开源要求。如果您的场景涉及将我们的解决方案嵌入到商业产品，请通过 [Ultralytics Licensing](https://www.ultralytics.com/license) 联系我们。\n\n## <div align=\"center\">联系</div>\n\n如需 Ultralytics 的错误报告和功能请求，请访问 [GitHub Issues](https://github.com/ultralytics/ultralytics/issues)。成为 Ultralytics [Discord](https://discord.com/invite/ultralytics)、[Reddit](https://www.reddit.com/r/ultralytics/) 或 [论坛](https://community.ultralytics.com/) 的成员，提出问题、分享项目、探讨学习讨论，或寻求所有 Ultralytics 相关的帮助！\n\n<br>\n<div align=\"center\">\n  <a href=\"https://github.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-github.png\" width=\"3%\" alt=\"Ultralytics GitHub\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.linkedin.com/company/ultralytics/\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-linkedin.png\" width=\"3%\" alt=\"Ultralytics LinkedIn\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://twitter.com/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-twitter.png\" width=\"3%\" alt=\"Ultralytics Twitter\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://youtube.com/ultralytics?sub_confirmation=1\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-youtube.png\" width=\"3%\" alt=\"Ultralytics YouTube\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://www.tiktok.com/@ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-tiktok.png\" width=\"3%\" alt=\"Ultralytics TikTok\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://ultralytics.com/bilibili\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-bilibili.png\" width=\"3%\" alt=\"Ultralytics BiliBili\"></a>\n  <img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-transparent.png\" width=\"3%\" alt=\"space\">\n  <a href=\"https://discord.com/invite/ultralytics\"><img src=\"https://github.com/ultralytics/assets/raw/main/social/logo-social-discord.png\" width=\"3%\" alt=\"Ultralytics Discord\"></a>\n</div>\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 35.6103515625,
          "content": "# Ultralytics YOLO 🚀, AGPL-3.0 license\n\n# Configuration file for building the Ultralytics YOLO documentation site using MkDocs.\n# Provides settings to control site metadata, customize the appearance using the\n# Material theme, define the navigation structure, and enable various plugins.\n\n# Site metadata\nsite_name: Ultralytics YOLO Docs\nsite_description: Explore Ultralytics YOLO, a cutting-edge real-time object detection and image segmentation model for various applications and hardware platforms.\nsite_url: https://docs.ultralytics.com\nsite_author: Ultralytics\nrepo_url: https://github.com/ultralytics/ultralytics\nedit_uri: https://github.com/ultralytics/ultralytics/tree/main/docs/en/\nrepo_name: ultralytics/ultralytics\nremote_name: https://github.com/ultralytics/docs\ndocs_dir: \"docs/en/\" # where to find the markdown files\nsite_dir: \"site/\" # where to publish to\nuse_directory_urls: true # don't display 'index.html' in slugs\n\n# Theme customization\ntheme:\n  name: material\n  language: en\n  custom_dir: docs/overrides/\n  logo: https://raw.githubusercontent.com/ultralytics/assets/main/logo/Ultralytics_Logotype_Reverse.svg\n  favicon: https://raw.githubusercontent.com/ultralytics/assets/refs/heads/main/logo/favicon-yolo.png\n  icon:\n    repo: fontawesome/brands/github\n  # font:  # disabled for faster page load times\n  #  text: Helvetica\n  #  code: Roboto Mono\n  palette:\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: black\n      accent: indigo\n      toggle:\n        icon: material/brightness-4\n        name: Switch to system preference\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: indigo\n      accent: indigo\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n  features:\n    - content.action.edit\n    - content.code.annotate\n    - content.code.copy\n    - content.tooltips\n    - search.highlight\n    - search.share\n    - search.suggest\n    - toc.follow\n    - navigation.top\n    - navigation.tabs\n    - navigation.tabs.sticky\n    - navigation.prune\n    - navigation.footer\n    - navigation.tracking\n    - navigation.instant\n    - navigation.instant.progress\n    - navigation.indexes\n    - navigation.sections # navigation.expand or navigation.sections\n    - content.tabs.link # all code tabs change simultaneously\n\n# Customization\ncopyright: <a href=\"https://www.ultralytics.com/\" target=\"_blank\">© 2024 Ultralytics Inc.</a> All rights reserved.\nextra: # version:\n  homepage: https://www.ultralytics.com/\n  #   provider: mike  #  version drop-down menu\n  robots: robots.txt\n  analytics:\n    provider: google\n    property: G-2M5EHKC0BH\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/ultralytics\n    - icon: fontawesome/brands/linkedin\n      link: https://www.linkedin.com/company/ultralytics/\n    - icon: fontawesome/brands/x-twitter\n      link: https://twitter.com/ultralytics\n    - icon: fontawesome/brands/youtube\n      link: https://youtube.com/ultralytics?sub_confirmation=1\n    - icon: fontawesome/brands/docker\n      link: https://hub.docker.com/r/ultralytics/ultralytics/\n    - icon: fontawesome/brands/python\n      link: https://pypi.org/project/ultralytics/\n    - icon: fontawesome/brands/discord\n      link: https://discord.com/invite/ultralytics\n    - icon: fontawesome/brands/reddit\n      link: https://reddit.com/r/ultralytics\n\nextra_css:\n  - stylesheets/style.css\n\nextra_javascript:\n  - javascript/extra.js\n  - javascript/giscus.js\n\nmarkdown_extensions:\n  - admonition\n  - md_in_html\n  - tables\n  - attr_list\n  - def_list\n  - pymdownx.critic\n  - pymdownx.caret\n  - pymdownx.keys\n  - pymdownx.mark\n  - pymdownx.tilde\n  - pymdownx.details\n  - pymdownx.superfences\n  - pymdownx.inlinehilite\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.snippets:\n      base_path: ./\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - pymdownx.tabbed:\n      alternate_style: true\n\n# Validation settings https://www.mkdocs.org/user-guide/configuration/#validation\nvalidation:\n  nav:\n    omitted_files: info\n    not_found: warn\n    absolute_links: info\n  links:\n    absolute_links: relative_to_docs\n    anchors: warn\n    unrecognized_links: warn\n\n# Primary navigation ---------------------------------------------------------------------------------------------------\nnav:\n  - Home:\n      - Home: index.md\n      - Quickstart: quickstart.md\n      - Modes:\n          - modes/index.md\n          - Train: modes/train.md\n          - Val: modes/val.md\n          - Predict: modes/predict.md\n          - Export: modes/export.md\n          - Track: modes/track.md\n          - Benchmark: modes/benchmark.md\n      - Tasks:\n          - tasks/index.md\n          - Detect: tasks/detect.md\n          - Segment: tasks/segment.md\n          - Classify: tasks/classify.md\n          - Pose: tasks/pose.md\n          - OBB: tasks/obb.md\n      - Models:\n          - models/index.md\n      - Datasets:\n          - datasets/index.md\n      - Solutions:\n          - solutions/index.md\n      - Guides:\n          - guides/index.md\n      - YOLO11 🚀 NEW: models/yolo11.md # for promotion of new pages\n      - Languages:\n          - 🇬🇧&nbsp English: https://ultralytics.com/docs/\n          - 🇨🇳&nbsp 简体中文: https://docs.ultralytics.com/zh/\n          - 🇰🇷&nbsp 한국어: https://docs.ultralytics.com/ko/\n          - 🇯🇵&nbsp 日本語: https://docs.ultralytics.com/ja/\n          - 🇷🇺&nbsp Русский: https://docs.ultralytics.com/ru/\n          - 🇩🇪&nbsp Deutsch: https://docs.ultralytics.com/de/\n          - 🇫🇷&nbsp Français: https://docs.ultralytics.com/fr/\n          - 🇪🇸&nbsp Español: https://docs.ultralytics.com/es/\n          - 🇵🇹&nbsp Português: https://docs.ultralytics.com/pt/\n          - 🇮🇹&nbsp Italiano: https://docs.ultralytics.com/it/\n          - 🇹🇷&nbsp Türkçe: https://docs.ultralytics.com/tr/\n          - 🇻🇳&nbsp Tiếng Việt: https://docs.ultralytics.com/vi/\n          - 🇸🇦&nbsp العربية: https://docs.ultralytics.com/ar/\n  - Quickstart:\n      - quickstart.md\n      - Usage:\n          - CLI: usage/cli.md\n          - Python: usage/python.md\n          - Callbacks: usage/callbacks.md\n          - Configuration: usage/cfg.md\n          - Simple Utilities: usage/simple-utilities.md\n          - Advanced Customization: usage/engine.md\n      - Modes:\n          - modes/index.md\n          - Train: modes/train.md\n          - Val: modes/val.md\n          - Predict: modes/predict.md\n          - Export: modes/export.md\n          - Track: modes/track.md\n          - Benchmark: modes/benchmark.md\n      - Tasks:\n          - tasks/index.md\n          - Detect: tasks/detect.md\n          - Segment: tasks/segment.md\n          - Classify: tasks/classify.md\n          - Pose: tasks/pose.md\n          - OBB: tasks/obb.md\n      - Models:\n          - models/index.md\n      - Datasets:\n          - datasets/index.md\n      - Solutions:\n          - solutions/index.md\n      - Guides:\n          - guides/index.md\n  - Modes:\n      - modes/index.md\n      - Train: modes/train.md\n      - Val: modes/val.md\n      - Predict: modes/predict.md\n      - Export: modes/export.md\n      - Track: modes/track.md\n      - Benchmark: modes/benchmark.md\n      - Tasks:\n          - tasks/index.md\n          - Detect: tasks/detect.md\n          - Segment: tasks/segment.md\n          - Classify: tasks/classify.md\n          - Pose: tasks/pose.md\n          - OBB: tasks/obb.md\n  - Tasks:\n      - tasks/index.md\n      - Detect: tasks/detect.md\n      - Segment: tasks/segment.md\n      - Classify: tasks/classify.md\n      - Pose: tasks/pose.md\n      - OBB: tasks/obb.md\n      - Modes:\n          - modes/index.md\n          - Train: modes/train.md\n          - Val: modes/val.md\n          - Predict: modes/predict.md\n          - Export: modes/export.md\n          - Track: modes/track.md\n          - Benchmark: modes/benchmark.md\n  - Models:\n      - models/index.md\n      - YOLOv3: models/yolov3.md\n      - YOLOv4: models/yolov4.md\n      - YOLOv5: models/yolov5.md\n      - YOLOv6: models/yolov6.md\n      - YOLOv7: models/yolov7.md\n      - YOLOv8: models/yolov8.md\n      - YOLOv9: models/yolov9.md\n      - YOLOv10: models/yolov10.md\n      - YOLO11 🚀 NEW: models/yolo11.md\n      - SAM (Segment Anything Model): models/sam.md\n      - SAM 2 (Segment Anything Model 2): models/sam-2.md\n      - MobileSAM (Mobile Segment Anything Model): models/mobile-sam.md\n      - FastSAM (Fast Segment Anything Model): models/fast-sam.md\n      - YOLO-NAS (Neural Architecture Search): models/yolo-nas.md\n      - RT-DETR (Realtime Detection Transformer): models/rtdetr.md\n      - YOLO-World (Real-Time Open-Vocabulary Object Detection): models/yolo-world.md\n  - Datasets:\n      - datasets/index.md\n      - Detection:\n          - datasets/detect/index.md\n          - Argoverse: datasets/detect/argoverse.md\n          - COCO: datasets/detect/coco.md\n          - LVIS: datasets/detect/lvis.md\n          - COCO8: datasets/detect/coco8.md\n          - GlobalWheat2020: datasets/detect/globalwheat2020.md\n          - Objects365: datasets/detect/objects365.md\n          - OpenImagesV7: datasets/detect/open-images-v7.md\n          - SKU-110K: datasets/detect/sku-110k.md\n          - VisDrone: datasets/detect/visdrone.md\n          - VOC: datasets/detect/voc.md\n          - xView: datasets/detect/xview.md\n          - RF100: datasets/detect/roboflow-100.md\n          - Brain-tumor: datasets/detect/brain-tumor.md\n          - African-wildlife: datasets/detect/african-wildlife.md\n          - Signature: datasets/detect/signature.md\n          - Medical-pills: datasets/detect/medical-pills.md\n      - Segmentation:\n          - datasets/segment/index.md\n          - COCO: datasets/segment/coco.md\n          - COCO8-seg: datasets/segment/coco8-seg.md\n          - Crack-seg: datasets/segment/crack-seg.md\n          - Carparts-seg: datasets/segment/carparts-seg.md\n          - Package-seg: datasets/segment/package-seg.md\n      - Pose:\n          - datasets/pose/index.md\n          - COCO: datasets/pose/coco.md\n          - COCO8-pose: datasets/pose/coco8-pose.md\n          - Tiger-pose: datasets/pose/tiger-pose.md\n          - Hand-keypoints: datasets/pose/hand-keypoints.md\n          - Dog-pose: datasets/pose/dog-pose.md\n      - Classification:\n          - datasets/classify/index.md\n          - Caltech 101: datasets/classify/caltech101.md\n          - Caltech 256: datasets/classify/caltech256.md\n          - CIFAR-10: datasets/classify/cifar10.md\n          - CIFAR-100: datasets/classify/cifar100.md\n          - Fashion-MNIST: datasets/classify/fashion-mnist.md\n          - ImageNet: datasets/classify/imagenet.md\n          - ImageNet-10: datasets/classify/imagenet10.md\n          - Imagenette: datasets/classify/imagenette.md\n          - Imagewoof: datasets/classify/imagewoof.md\n          - MNIST: datasets/classify/mnist.md\n      - Oriented Bounding Boxes (OBB):\n          - datasets/obb/index.md\n          - DOTAv2: datasets/obb/dota-v2.md\n          - DOTA8: datasets/obb/dota8.md\n      - Multi-Object Tracking:\n          - datasets/track/index.md\n  - Solutions 🚀 NEW:\n      - solutions/index.md\n      - Object Counting: guides/object-counting.md\n      - Object Cropping: guides/object-cropping.md\n      - Object Blurring: guides/object-blurring.md\n      - Workouts Monitoring: guides/workouts-monitoring.md\n      - Objects Counting in Regions: guides/region-counting.md\n      - Security Alarm System: guides/security-alarm-system.md\n      - Heatmaps: guides/heatmaps.md\n      - Instance Segmentation with Object Tracking: guides/instance-segmentation-and-tracking.md\n      - VisionEye Mapping: guides/vision-eye.md\n      - Speed Estimation: guides/speed-estimation.md\n      - Distance Calculation: guides/distance-calculation.md\n      - Queue Management: guides/queue-management.md\n      - Parking Management: guides/parking-management.md\n      - Analytics: guides/analytics.md\n      - Live Inference: guides/streamlit-live-inference.md\n      - Track Objects in Zone 🚀 NEW: guides/trackzone.md\n  - Guides:\n      - guides/index.md\n      - YOLO Common Issues: guides/yolo-common-issues.md\n      - YOLO Performance Metrics: guides/yolo-performance-metrics.md\n      - YOLO Thread-Safe Inference: guides/yolo-thread-safe-inference.md\n      - Model Deployment Options: guides/model-deployment-options.md\n      - K-Fold Cross Validation: guides/kfold-cross-validation.md\n      - Hyperparameter Tuning: guides/hyperparameter-tuning.md\n      - SAHI Tiled Inference: guides/sahi-tiled-inference.md\n      - AzureML Quickstart: guides/azureml-quickstart.md\n      - Conda Quickstart: guides/conda-quickstart.md\n      - Docker Quickstart: guides/docker-quickstart.md\n      - Raspberry Pi: guides/raspberry-pi.md\n      - NVIDIA Jetson: guides/nvidia-jetson.md\n      - DeepStream on NVIDIA Jetson: guides/deepstream-nvidia-jetson.md\n      - Triton Inference Server: guides/triton-inference-server.md\n      - Isolating Segmentation Objects: guides/isolating-segmentation-objects.md\n      - Edge TPU on Raspberry Pi: guides/coral-edge-tpu-on-raspberry-pi.md\n      - Viewing Inference Images in a Terminal: guides/view-results-in-terminal.md\n      - OpenVINO Latency vs Throughput modes: guides/optimizing-openvino-latency-vs-throughput-modes.md\n      - ROS Quickstart: guides/ros-quickstart.md\n      - Steps of a Computer Vision Project: guides/steps-of-a-cv-project.md\n      - Defining A Computer Vision Project's Goals: guides/defining-project-goals.md\n      - Data Collection and Annotation: guides/data-collection-and-annotation.md\n      - Preprocessing Annotated Data: guides/preprocessing_annotated_data.md\n      - Tips for Model Training: guides/model-training-tips.md\n      - Insights on Model Evaluation and Fine-Tuning: guides/model-evaluation-insights.md\n      - A Guide on Model Testing: guides/model-testing.md\n      - Best Practices for Model Deployment: guides/model-deployment-practices.md\n      - Maintaining Your Computer Vision Model: guides/model-monitoring-and-maintenance.md\n      - Explorer:\n          - datasets/explorer/index.md\n          - Explorer API: datasets/explorer/api.md\n          - Explorer Dashboard Demo: datasets/explorer/dashboard.md\n          - VOC Exploration Example: datasets/explorer/explorer.md\n      - YOLOv5:\n          - yolov5/index.md\n          - Quickstart: yolov5/quickstart_tutorial.md\n          - Environments:\n              - Amazon Web Services (AWS): yolov5/environments/aws_quickstart_tutorial.md\n              - Google Cloud (GCP): yolov5/environments/google_cloud_quickstart_tutorial.md\n              - AzureML: yolov5/environments/azureml_quickstart_tutorial.md\n              - Docker Image: yolov5/environments/docker_image_quickstart_tutorial.md\n          - Tutorials:\n              - Train Custom Data: yolov5/tutorials/train_custom_data.md\n              - Tips for Best Training Results: yolov5/tutorials/tips_for_best_training_results.md\n              - Multi-GPU Training: yolov5/tutorials/multi_gpu_training.md\n              - PyTorch Hub: yolov5/tutorials/pytorch_hub_model_loading.md\n              - TFLite, ONNX, CoreML, TensorRT Export: yolov5/tutorials/model_export.md\n              - Test-Time Augmentation (TTA): yolov5/tutorials/test_time_augmentation.md\n              - Model Ensembling: yolov5/tutorials/model_ensembling.md\n              - Pruning/Sparsity Tutorial: yolov5/tutorials/model_pruning_and_sparsity.md\n              - Hyperparameter evolution: yolov5/tutorials/hyperparameter_evolution.md\n              - Transfer learning with frozen layers: yolov5/tutorials/transfer_learning_with_frozen_layers.md\n              - Architecture Summary: yolov5/tutorials/architecture_description.md\n              - Roboflow Datasets: yolov5/tutorials/roboflow_datasets_integration.md\n              - Neural Magic's DeepSparse: yolov5/tutorials/neural_magic_pruning_quantization.md\n              - Comet Logging: yolov5/tutorials/comet_logging_integration.md\n              - Clearml Logging: yolov5/tutorials/clearml_logging_integration.md\n  - Integrations:\n      - integrations/index.md\n      - Amazon SageMaker: integrations/amazon-sagemaker.md\n      - ClearML: integrations/clearml.md\n      - Comet ML: integrations/comet.md\n      - CoreML: integrations/coreml.md\n      - DVC: integrations/dvc.md\n      - Google Colab: integrations/google-colab.md\n      - Gradio: integrations/gradio.md\n      - IBM Watsonx: integrations/ibm-watsonx.md\n      - JupyterLab: integrations/jupyterlab.md\n      - Kaggle: integrations/kaggle.md\n      - MLflow: integrations/mlflow.md\n      - Neural Magic: integrations/neural-magic.md\n      - ONNX: integrations/onnx.md\n      - OpenVINO: integrations/openvino.md\n      - PaddlePaddle: integrations/paddlepaddle.md\n      - MNN: integrations/mnn.md\n      - NCNN: integrations/ncnn.md\n      - Paperspace Gradient: integrations/paperspace.md\n      - Ray Tune: integrations/ray-tune.md\n      - Roboflow: integrations/roboflow.md\n      - TF GraphDef: integrations/tf-graphdef.md\n      - TF SavedModel: integrations/tf-savedmodel.md\n      - TF.js: integrations/tfjs.md\n      - TFLite: integrations/tflite.md\n      - TFLite Edge TPU: integrations/edge-tpu.md\n      - TensorBoard: integrations/tensorboard.md\n      - TensorRT: integrations/tensorrt.md\n      - TorchScript: integrations/torchscript.md\n      - VS Code: integrations/vscode.md\n      - Weights & Biases: integrations/weights-biases.md\n      - Albumentations: integrations/albumentations.md\n      - SONY IMX500: integrations/sony-imx500.md\n  - HUB:\n      - hub/index.md\n      - Web:\n          - hub/index.md\n          - Quickstart: hub/quickstart.md\n          - Datasets: hub/datasets.md\n          - Projects: hub/projects.md\n          - Models: hub/models.md\n          - Pro: hub/pro.md\n          - Cloud Training: hub/cloud-training.md\n          - Inference API: hub/inference-api.md\n          - Teams: hub/teams.md\n          - Integrations: hub/integrations.md\n      - App:\n          - hub/app/index.md\n          - iOS: hub/app/ios.md\n          - Android: hub/app/android.md\n      - Python SDK:\n          - hub/sdk/index.md\n          - Quickstart: hub/sdk/quickstart.md\n          - Model: hub/sdk/model.md\n          - Dataset: hub/sdk/dataset.md\n          - Project: hub/sdk/project.md\n          - Reference:\n              - base:\n                  - api_client: hub/sdk/reference/base/api_client.md\n                  - auth: hub/sdk/reference/base/auth.md\n                  - crud_client: hub/sdk/reference/base/crud_client.md\n                  - paginated_list: hub/sdk/reference/base/paginated_list.md\n                  - server_clients: hub/sdk/reference/base/server_clients.md\n              - helpers:\n                  - error_handler: hub/sdk/reference/helpers/error_handler.md\n                  - exceptions: hub/sdk/reference/helpers/exceptions.md\n                  - logger: hub/sdk/reference/helpers/logger.md\n                  - utils: hub/sdk/reference/helpers/utils.md\n              - hub_client: hub/sdk/reference/hub_client.md\n              - modules:\n                  - datasets: hub/sdk/reference/modules/datasets.md\n                  - models: hub/sdk/reference/modules/models.md\n                  - projects: hub/sdk/reference/modules/projects.md\n                  - teams: hub/sdk/reference/modules/teams.md\n                  - users: hub/sdk/reference/modules/users.md\n      - REST API:\n          - hub/api/index.md\n\n  - Reference:\n      - cfg:\n          - __init__: reference/cfg/__init__.md\n      - data:\n          - annotator: reference/data/annotator.md\n          - augment: reference/data/augment.md\n          - base: reference/data/base.md\n          - build: reference/data/build.md\n          - converter: reference/data/converter.md\n          - dataset: reference/data/dataset.md\n          - loaders: reference/data/loaders.md\n          - split_dota: reference/data/split_dota.md\n          - utils: reference/data/utils.md\n      - engine:\n          - exporter: reference/engine/exporter.md\n          - model: reference/engine/model.md\n          - predictor: reference/engine/predictor.md\n          - results: reference/engine/results.md\n          - trainer: reference/engine/trainer.md\n          - tuner: reference/engine/tuner.md\n          - validator: reference/engine/validator.md\n      - hub:\n          - __init__: reference/hub/__init__.md\n          - auth: reference/hub/auth.md\n          - google:\n              - __init__: reference/hub/google/__init__.md\n          - session: reference/hub/session.md\n          - utils: reference/hub/utils.md\n      - models:\n          - fastsam:\n              - model: reference/models/fastsam/model.md\n              - predict: reference/models/fastsam/predict.md\n              - utils: reference/models/fastsam/utils.md\n              - val: reference/models/fastsam/val.md\n          - nas:\n              - model: reference/models/nas/model.md\n              - predict: reference/models/nas/predict.md\n              - val: reference/models/nas/val.md\n          - rtdetr:\n              - model: reference/models/rtdetr/model.md\n              - predict: reference/models/rtdetr/predict.md\n              - train: reference/models/rtdetr/train.md\n              - val: reference/models/rtdetr/val.md\n          - sam:\n              - amg: reference/models/sam/amg.md\n              - build: reference/models/sam/build.md\n              - model: reference/models/sam/model.md\n              - modules:\n                  - blocks: reference/models/sam/modules/blocks.md\n                  - decoders: reference/models/sam/modules/decoders.md\n                  - encoders: reference/models/sam/modules/encoders.md\n                  - memory_attention: reference/models/sam/modules/memory_attention.md\n                  - sam: reference/models/sam/modules/sam.md\n                  - tiny_encoder: reference/models/sam/modules/tiny_encoder.md\n                  - transformer: reference/models/sam/modules/transformer.md\n                  - utils: reference/models/sam/modules/utils.md\n              - predict: reference/models/sam/predict.md\n          - utils:\n              - loss: reference/models/utils/loss.md\n              - ops: reference/models/utils/ops.md\n          - yolo:\n              - classify:\n                  - predict: reference/models/yolo/classify/predict.md\n                  - train: reference/models/yolo/classify/train.md\n                  - val: reference/models/yolo/classify/val.md\n              - detect:\n                  - predict: reference/models/yolo/detect/predict.md\n                  - train: reference/models/yolo/detect/train.md\n                  - val: reference/models/yolo/detect/val.md\n              - model: reference/models/yolo/model.md\n              - obb:\n                  - predict: reference/models/yolo/obb/predict.md\n                  - train: reference/models/yolo/obb/train.md\n                  - val: reference/models/yolo/obb/val.md\n              - pose:\n                  - predict: reference/models/yolo/pose/predict.md\n                  - train: reference/models/yolo/pose/train.md\n                  - val: reference/models/yolo/pose/val.md\n              - segment:\n                  - predict: reference/models/yolo/segment/predict.md\n                  - train: reference/models/yolo/segment/train.md\n                  - val: reference/models/yolo/segment/val.md\n              - world:\n                  - train: reference/models/yolo/world/train.md\n                  - train_world: reference/models/yolo/world/train_world.md\n      - nn:\n          - autobackend: reference/nn/autobackend.md\n          - modules:\n              - activation: reference/nn/modules/activation.md\n              - block: reference/nn/modules/block.md\n              - conv: reference/nn/modules/conv.md\n              - head: reference/nn/modules/head.md\n              - transformer: reference/nn/modules/transformer.md\n              - utils: reference/nn/modules/utils.md\n          - tasks: reference/nn/tasks.md\n      - solutions:\n          - ai_gym: reference/solutions/ai_gym.md\n          - analytics: reference/solutions/analytics.md\n          - distance_calculation: reference/solutions/distance_calculation.md\n          - heatmap: reference/solutions/heatmap.md\n          - object_counter: reference/solutions/object_counter.md\n          - parking_management: reference/solutions/parking_management.md\n          - queue_management: reference/solutions/queue_management.md\n          - region_counter: reference/solutions/region_counter.md\n          - security_alarm: reference/solutions/security_alarm.md\n          - solutions: reference/solutions/solutions.md\n          - speed_estimation: reference/solutions/speed_estimation.md\n          - streamlit_inference: reference/solutions/streamlit_inference.md\n          - trackzone: reference/solutions/trackzone.md\n      - trackers:\n          - basetrack: reference/trackers/basetrack.md\n          - bot_sort: reference/trackers/bot_sort.md\n          - byte_tracker: reference/trackers/byte_tracker.md\n          - track: reference/trackers/track.md\n          - utils:\n              - gmc: reference/trackers/utils/gmc.md\n              - kalman_filter: reference/trackers/utils/kalman_filter.md\n              - matching: reference/trackers/utils/matching.md\n      - utils:\n          - __init__: reference/utils/__init__.md\n          - autobatch: reference/utils/autobatch.md\n          - benchmarks: reference/utils/benchmarks.md\n          - callbacks:\n              - base: reference/utils/callbacks/base.md\n              - clearml: reference/utils/callbacks/clearml.md\n              - comet: reference/utils/callbacks/comet.md\n              - dvc: reference/utils/callbacks/dvc.md\n              - hub: reference/utils/callbacks/hub.md\n              - mlflow: reference/utils/callbacks/mlflow.md\n              - neptune: reference/utils/callbacks/neptune.md\n              - raytune: reference/utils/callbacks/raytune.md\n              - tensorboard: reference/utils/callbacks/tensorboard.md\n              - wb: reference/utils/callbacks/wb.md\n          - checks: reference/utils/checks.md\n          - dist: reference/utils/dist.md\n          - downloads: reference/utils/downloads.md\n          - errors: reference/utils/errors.md\n          - files: reference/utils/files.md\n          - instance: reference/utils/instance.md\n          - loss: reference/utils/loss.md\n          - metrics: reference/utils/metrics.md\n          - ops: reference/utils/ops.md\n          - patches: reference/utils/patches.md\n          - plotting: reference/utils/plotting.md\n          - tal: reference/utils/tal.md\n          - torch_utils: reference/utils/torch_utils.md\n          - triton: reference/utils/triton.md\n          - tuner: reference/utils/tuner.md\n\n  - Help:\n      - Help: help/index.md\n      - Frequently Asked Questions (FAQ): help/FAQ.md\n      - Contributing Guide: help/contributing.md\n      - Continuous Integration (CI) Guide: help/CI.md\n      - Contributor License Agreement (CLA): help/CLA.md\n      - Minimum Reproducible Example (MRE) Guide: help/minimum_reproducible_example.md\n      - Code of Conduct: help/code_of_conduct.md\n      - Environmental, Health and Safety (EHS) Policy: help/environmental-health-safety.md\n      - Security Policy: help/security.md\n      - Privacy Policy: help/privacy.md\n\n# Plugins including 301 redirects navigation ---------------------------------------------------------------------------\nplugins:\n  - macros\n  # - search:\n  #     lang: en\n  - mkdocstrings:\n      enabled: true\n      default_handler: python\n      handlers:\n        python:\n          options:\n            docstring_options:\n              ignore_init_summary: true\n            merge_init_into_class: true\n            docstring_style: google\n            show_root_heading: true\n            show_source: true\n            separate_signature: true\n            line_length: 80\n            show_signature_annotations: true\n            show_symbol_type_heading: true # insiders\n            show_symbol_type_toc: true # insiders\n            show_inheritance_diagram: true # insiders\n  - ultralytics:\n      add_desc: False\n      add_image: True\n      add_authors: True\n      add_json_ld: True\n      add_share_buttons: True\n      add_css: False\n      default_image: https://raw.githubusercontent.com/ultralytics/assets/main/yolov8/banner-yolov8.png\n  - redirects:\n      redirect_maps:\n        hi/index.md: index.md\n        nl/index.md: index.md\n        callbacks.md: usage/callbacks.md\n        cfg.md: usage/cfg.md\n        cli.md: usage/cli.md\n        config.md: usage/cfg.md\n        engine.md: usage/engine.md\n        environments/AWS-Quickstart.md: yolov5/environments/aws_quickstart_tutorial.md\n        environments/Docker-Quickstart.md: yolov5/environments/docker_image_quickstart_tutorial.md\n        environments/GCP-Quickstart.md: yolov5/environments/google_cloud_quickstart_tutorial.md\n        FAQ/augmentation.md: yolov5/tutorials/tips_for_best_training_results.md\n        package-framework.md: index.md\n        package-framework/mock_detector.md: index.md\n        predict.md: modes/predict.md\n        python.md: usage/python.md\n        quick-start.md: quickstart.md\n        app.md: hub/app/index.md\n        sdk.md: index.md\n        hub/inference_api.md: hub/inference-api.md\n        usage/hyperparameter_tuning.md: integrations/ray-tune.md\n        models/sam2.md: models/sam-2.md\n        reference/base_pred.md: reference/engine/predictor.md\n        reference/base_trainer.md: reference/engine/trainer.md\n        reference/exporter.md: reference/engine/exporter.md\n        reference/model.md: reference/engine/model.md\n        reference/nn.md: reference/nn/modules/head.md\n        reference/ops.md: reference/utils/ops.md\n        reference/results.md: reference/engine/results.md\n        reference/base_val.md: index.md\n        reference/index.md: reference/cfg/__init__.md\n        tasks/classification.md: tasks/classify.md\n        tasks/detection.md: tasks/detect.md\n        tasks/segmentation.md: tasks/segment.md\n        tasks/keypoints.md: tasks/pose.md\n        tasks/tracking.md: modes/track.md\n        SECURITY.md: help/security.md\n        tutorials/architecture-summary.md: yolov5/tutorials/architecture_description.md\n        tutorials/clearml-logging.md: yolov5/tutorials/clearml_logging_integration.md\n        tutorials/comet-logging.md: yolov5/tutorials/comet_logging_integration.md\n        tutorials/hyperparameter-evolution.md: yolov5/tutorials/hyperparameter_evolution.md\n        tutorials/model-ensembling.md: yolov5/tutorials/model_ensembling.md\n        tutorials/multi-gpu-training.md: yolov5/tutorials/multi_gpu_training.md\n        tutorials/nvidia-jetson.md: guides/nvidia-jetson.md\n        tutorials/pruning-sparsity.md: yolov5/tutorials/model_pruning_and_sparsity.md\n        tutorials/pytorch-hub.md: yolov5/tutorials/pytorch_hub_model_loading.md\n        tutorials/roboflow.md: yolov5/tutorials/roboflow_datasets_integration.md\n        tutorials/test-time-augmentation.md: yolov5/tutorials/test_time_augmentation.md\n        tutorials/torchscript-onnx-coreml-export.md: yolov5/tutorials/model_export.md\n        tutorials/train-custom-datasets.md: yolov5/tutorials/train_custom_data.md\n        tutorials/training-tips-best-results.md: yolov5/tutorials/tips_for_best_training_results.md\n        tutorials/transfer-learning-froze-layers.md: yolov5/tutorials/transfer_learning_with_frozen_layers.md\n        tutorials/weights-and-biasis-logging.md: yolov5/tutorials/comet_logging_integration.md\n        yolov5/pytorch_hub.md: yolov5/tutorials/pytorch_hub_model_loading.md\n        yolov5/hyp_evolution.md: yolov5/tutorials/hyperparameter_evolution.md\n        yolov5/pruning_sparsity.md: yolov5/tutorials/model_pruning_and_sparsity.md\n        yolov5/roboflow.md: yolov5/tutorials/roboflow_datasets_integration.md\n        yolov5/comet.md: yolov5/tutorials/comet_logging_integration.md\n        yolov5/clearml.md: yolov5/tutorials/clearml_logging_integration.md\n        yolov5/tta.md: yolov5/tutorials/test_time_augmentation.md\n        yolov5/multi_gpu_training.md: yolov5/tutorials/multi_gpu_training.md\n        yolov5/ensemble.md: yolov5/tutorials/model_ensembling.md\n        yolov5/jetson_nano.md: guides/nvidia-jetson.md\n        yolov5/transfer_learn_frozen.md: yolov5/tutorials/transfer_learning_with_frozen_layers.md\n        yolov5/neural_magic.md: yolov5/tutorials/neural_magic_pruning_quantization.md\n        yolov5/train_custom_data.md: yolov5/tutorials/train_custom_data.md\n        yolov5/architecture.md: yolov5/tutorials/architecture_description.md\n        yolov5/export.md: yolov5/tutorials/model_export.md\n        yolov5/yolov5_quickstart_tutorial.md: yolov5/quickstart_tutorial.md\n        yolov5/tips_for_best_training_results.md: yolov5/tutorials/tips_for_best_training_results.md\n        yolov5/tutorials/yolov5_neural_magic_tutorial.md: yolov5/tutorials/neural_magic_pruning_quantization.md\n        yolov5/tutorials/model_ensembling_tutorial.md: yolov5/tutorials/model_ensembling.md\n        yolov5/tutorials/pytorch_hub_tutorial.md: yolov5/tutorials/pytorch_hub_model_loading.md\n        yolov5/tutorials/yolov5_architecture_tutorial.md: yolov5/tutorials/architecture_description.md\n        yolov5/tutorials/multi_gpu_training_tutorial.md: yolov5/tutorials/multi_gpu_training.md\n        yolov5/tutorials/yolov5_pytorch_hub_tutorial.md: yolov5/tutorials/pytorch_hub_model_loading.md\n        yolov5/tutorials/model_export_tutorial.md: yolov5/tutorials/model_export.md\n        yolov5/tutorials/jetson_nano_tutorial.md: guides/nvidia-jetson.md\n        yolov5/tutorials/yolov5_model_ensembling_tutorial.md: yolov5/tutorials/model_ensembling.md\n        yolov5/tutorials/roboflow_integration.md: yolov5/tutorials/roboflow_datasets_integration.md\n        yolov5/tutorials/pruning_and_sparsity_tutorial.md: yolov5/tutorials/model_pruning_and_sparsity.md\n        yolov5/tutorials/yolov5_transfer_learning_with_frozen_layers_tutorial.md: yolov5/tutorials/transfer_learning_with_frozen_layers.md\n        yolov5/tutorials/transfer_learning_with_frozen_layers_tutorial.md: yolov5/tutorials/transfer_learning_with_frozen_layers.md\n        yolov5/tutorials/yolov5_model_export_tutorial.md: yolov5/tutorials/model_export.md\n        yolov5/tutorials/neural_magic_tutorial.md: yolov5/tutorials/neural_magic_pruning_quantization.md\n        yolov5/tutorials/yolov5_clearml_integration_tutorial.md: yolov5/tutorials/clearml_logging_integration.md\n        yolov5/tutorials/yolov5_train_custom_data.md: yolov5/tutorials/train_custom_data.md\n        yolov5/tutorials/comet_integration_tutorial.md: yolov5/tutorials/comet_logging_integration.md\n        yolov5/tutorials/yolov5_pruning_and_sparsity_tutorial.md: yolov5/tutorials/model_pruning_and_sparsity.md\n        yolov5/tutorials/yolov5_jetson_nano_tutorial.md: guides/nvidia-jetson.md\n        yolov5/tutorials/running_on_jetson_nano.md: guides/nvidia-jetson.md\n        yolov5/tutorials/yolov5_roboflow_integration.md: yolov5/tutorials/roboflow_datasets_integration.md\n        yolov5/tutorials/hyperparameter_evolution_tutorial.md: yolov5/tutorials/hyperparameter_evolution.md\n        yolov5/tutorials/yolov5_hyperparameter_evolution_tutorial.md: yolov5/tutorials/hyperparameter_evolution.md\n        yolov5/tutorials/clearml_integration_tutorial.md: yolov5/tutorials/clearml_logging_integration.md\n        yolov5/tutorials/test_time_augmentation_tutorial.md: yolov5/tutorials/test_time_augmentation.md\n        yolov5/tutorials/yolov5_test_time_augmentation_tutorial.md: yolov5/tutorials/test_time_augmentation.md\n        yolov5/environments/yolov5_amazon_web_services_quickstart_tutorial.md: yolov5/environments/aws_quickstart_tutorial.md\n        yolov5/environments/yolov5_google_cloud_platform_quickstart_tutorial.md: yolov5/environments/google_cloud_quickstart_tutorial.md\n        yolov5/environments/yolov5_docker_image_quickstart_tutorial.md: yolov5/environments/docker_image_quickstart_tutorial.md\n        reference/data/explorer/explorer.md: datasets/explorer/index.md\n        reference/data/explorer/gui/dash.md: datasets/explorer/index.md\n        reference/data/explorer/utils.md: datasets/explorer/index.md\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 7.6796875,
          "content": "# Ultralytics YOLO 🚀, AGPL-3.0 license\n\n# Overview:\n# This pyproject.toml file manages the build, packaging, and distribution of the Ultralytics library.\n# It defines essential project metadata, dependencies, and settings used to develop and deploy the library.\n\n# Key Sections:\n# - [build-system]: Specifies the build requirements and backend (e.g., setuptools, wheel).\n# - [project]: Includes details like name, version, description, authors, dependencies and more.\n# - [project.optional-dependencies]: Provides additional, optional packages for extended features.\n# - [tool.*]: Configures settings for various tools (pytest, yapf, etc.) used in the project.\n\n# Installation:\n# The Ultralytics library can be installed using the command: 'pip install ultralytics'\n# For development purposes, you can install the package in editable mode with: 'pip install -e .'\n# This approach allows for real-time code modifications without the need for re-installation.\n\n# Documentation:\n# For comprehensive documentation and usage instructions, visit: https://docs.ultralytics.com\n\n[build-system]\nrequires = [\"setuptools>=70.0.0\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n# Project settings -----------------------------------------------------------------------------------------------------\n[project]\nname = \"ultralytics\"\ndynamic = [\"version\"]\ndescription = \"Ultralytics YOLO 🚀 for SOTA object detection, multi-object tracking, instance segmentation, pose estimation and image classification.\"\nreadme = \"README.md\"\nrequires-python = \">=3.8\"\nlicense = { \"text\" = \"AGPL-3.0\" }\nkeywords = [\"machine-learning\", \"deep-learning\", \"computer-vision\", \"ML\", \"DL\", \"AI\", \"YOLO\", \"YOLOv3\", \"YOLOv5\", \"YOLOv8\", \"YOLOv9\", \"YOLOv10\", \"YOLO11\", \"HUB\", \"Ultralytics\"]\nauthors = [\n    { name = \"Glenn Jocher\", email = \"glenn.jocher@ultralytics.com\" },\n    { name = \"Jing Qiu\", email = \"jing.qiu@ultralytics.com\" },\n]\nmaintainers = [\n    { name = \"Ultralytics\", email = \"hello@ultralytics.com\" },\n]\nclassifiers = [\n    \"Development Status :: 4 - Beta\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: Education\",\n    \"Intended Audience :: Science/Research\",\n    \"License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Topic :: Software Development\",\n    \"Topic :: Scientific/Engineering\",\n    \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n    \"Topic :: Scientific/Engineering :: Image Recognition\",\n    \"Operating System :: POSIX :: Linux\",\n    \"Operating System :: MacOS\",\n    \"Operating System :: Microsoft :: Windows\",\n]\n\n# Required dependencies ------------------------------------------------------------------------------------------------\ndependencies = [\n    \"numpy>=1.23.0\",\n    \"numpy<2.0.0; sys_platform == 'darwin'\", # macOS OpenVINO errors https://github.com/ultralytics/ultralytics/pull/17221\n    \"matplotlib>=3.3.0\",\n    \"opencv-python>=4.6.0\",\n    \"pillow>=7.1.2\",\n    \"pyyaml>=5.3.1\",\n    \"requests>=2.23.0\",\n    \"scipy>=1.4.1\",\n    \"torch>=1.8.0\",\n    \"torch>=1.8.0,!=2.4.0; sys_platform == 'win32'\", # Windows CPU errors w/ 2.4.0 https://github.com/ultralytics/ultralytics/issues/15049\n    \"torchvision>=0.9.0\",\n    \"tqdm>=4.64.0\", # progress bars\n    \"psutil\", # system utilization\n    \"py-cpuinfo\", # display CPU info\n    \"pandas>=1.1.4\",\n    \"seaborn>=0.11.0\", # plotting\n    \"ultralytics-thop>=2.0.0\", # FLOPs computation https://github.com/ultralytics/thop\n]\n\n# Optional dependencies ------------------------------------------------------------------------------------------------\n[project.optional-dependencies]\ndev = [\n    \"ipython\",\n    \"pytest\",\n    \"pytest-cov\",\n    \"coverage[toml]\",\n    \"mkdocs>=1.6.0\",\n    \"mkdocs-material>=9.5.9\",\n    \"mkdocstrings[python]\",\n    \"mkdocs-redirects\", # 301 redirects\n    \"mkdocs-ultralytics-plugin>=0.1.8\", # for meta descriptions and images, dates and authors\n    \"mkdocs-macros-plugin>=1.0.5\"  # duplicating content (i.e. export tables) in multiple places\n]\nexport = [\n    \"onnx>=1.12.0\", # ONNX export\n    \"coremltools>=7.0; platform_system != 'Windows' and python_version <= '3.11'\", # CoreML supported on macOS and Linux\n    \"scikit-learn>=1.3.2; platform_system != 'Windows' and python_version <= '3.11'\", # CoreML k-means quantization\n    \"openvino>=2024.0.0\", # OpenVINO export\n    \"tensorflow>=2.0.0\", # TF bug https://github.com/ultralytics/ultralytics/issues/5161\n    \"tensorflowjs>=3.9.0\", # TF.js export, automatically installs tensorflow\n    \"tensorstore>=0.1.63; platform_machine == 'aarch64' and python_version >= '3.9'\", # for TF Raspberry Pi exports\n    \"keras\", # not installed automatically by tensorflow>=2.16\n    \"flatbuffers>=23.5.26,<100; platform_machine == 'aarch64'\", # update old 'flatbuffers' included inside tensorflow package\n    \"numpy==1.23.5; platform_machine == 'aarch64'\", # fix error: `np.bool` was a deprecated alias for the builtin `bool` when using TensorRT models on NVIDIA Jetson\n    \"h5py!=3.11.0; platform_machine == 'aarch64'\", # fix h5py build issues due to missing aarch64 wheels in 3.11 release\n]\nsolutions = [\n    \"shapely>=2.0.0\",    # shapely for point and polygon data matching\n    \"streamlit\",    # for live inference on web browser i.e `yolo streamlit-predict`\n]\nlogging = [\n    \"comet\", # https://docs.ultralytics.com/integrations/comet/\n    \"tensorboard>=2.13.0\",\n    \"dvclive>=2.12.0\",\n]\nextra = [\n    \"hub-sdk>=0.0.12\", # Ultralytics HUB\n    \"ipython\", # interactive notebook\n    \"albumentations>=1.4.6\", # training augmentations\n    \"pycocotools>=2.0.7\", # COCO mAP\n]\n\n[project.urls]\n\"Homepage\" = \"https://ultralytics.com\"\n\"Source\" = \"https://github.com/ultralytics/ultralytics\"\n\"Documentation\" = \"https://docs.ultralytics.com\"\n\"Bug Reports\" = \"https://github.com/ultralytics/ultralytics/issues\"\n\"Changelog\" = \"https://github.com/ultralytics/ultralytics/releases\"\n\n[project.scripts]\nyolo = \"ultralytics.cfg:entrypoint\"\nultralytics = \"ultralytics.cfg:entrypoint\"\n\n# Tools settings -------------------------------------------------------------------------------------------------------\n[tool.setuptools]  # configuration specific to the `setuptools` build backend.\npackages = { find = { where = [\".\"], include = [\"ultralytics\", \"ultralytics.*\"] } }\npackage-data = { \"ultralytics\" = [\"**/*.yaml\", \"../tests/*.py\"], \"ultralytics.assets\" = [\"*.jpg\"] }\n\n[tool.setuptools.dynamic]\nversion = { attr = \"ultralytics.__version__\" }\n\n[tool.pytest.ini_options]\naddopts = \"--doctest-modules --durations=30 --color=yes\"\nmarkers = [\n    \"slow: skip slow tests unless --slow is set\",\n]\nnorecursedirs = [\".git\", \"dist\", \"build\"]\n\n[tool.coverage.run]\nsource = [\"ultralytics/\"]\ndata_file = \"tests/.coverage\"\nomit = [\"ultralytics/utils/callbacks/*\"]\n\n[tool.isort]\nline_length = 120\nmulti_line_output = 0\n\n[tool.yapf]\nbased_on_style = \"pep8\"\nspaces_before_comment = 2\ncolumn_limit = 120\ncoalesce_brackets = true\nspaces_around_power_operator = true\nspace_between_ending_comma_and_closing_bracket = true\nsplit_before_closing_bracket = false\nsplit_before_first_argument = false\n\n[tool.ruff]\nline-length = 120\n\n[tool.ruff.format]\ndocstring-code-format = true\n\n[tool.docformatter]\nwrap-summaries = 120\nwrap-descriptions = 120\npre-summary-newline = true\nclose-quotes-on-newline = true\nin-place = true\n\n[tool.codespell]\nignore-words-list = \"crate,nd,ned,strack,dota,ane,segway,fo,gool,winn,commend,bloc,nam,afterall\"\nskip = '*.pt,*.pth,*.torchscript,*.onnx,*.tflite,*.pb,*.bin,*.param,*.mlmodel,*.engine,*.npy,*.data*,*.csv,*pnnx*,*venv*,*translat*,__pycache__*,*.ico,*.jpg,*.png,*.mp4,*.mov,/runs,/.git,./docs/??/*.md,./docs/mkdocs_??.yml'\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "ultralytics",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}