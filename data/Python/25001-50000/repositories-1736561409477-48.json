{
  "metadata": {
    "timestamp": 1736561409477,
    "page": 48,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ray-project/ray",
      "stars": 34830,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 10.2666015625,
          "content": "# Must be first. Enables build:windows, build:linux, build:macos, build:freebsd, build:openbsd\nbuild --enable_platform_specific_config\n###############################################################################\n# On       Windows, provide: BAZEL_SH, and BAZEL_LLVM (if using clang-cl)\n# On all platforms, provide: PYTHON3_BIN_PATH=python\n###############################################################################\nbuild:windows --action_env=PATH\n# For --compilation_mode=dbg, consider enabling checks in the standard library as well (below).\nbuild --compilation_mode=opt\n# Using C++ 17 on all platforms.\nbuild:linux --host_cxxopt=\"-std=c++17\"\nbuild:macos --host_cxxopt=\"-std=c++17\"\nbuild:clang-cl --host_cxxopt=\"-std=c++17\"\nbuild:msvc-cl --host_cxxopt=\"/std:c++17\"\nbuild:windows --host_cxxopt=\"/std:c++17\"\nbuild:linux --cxxopt=\"-std=c++17\"\nbuild:macos --cxxopt=\"-std=c++17\"\nbuild:clang-cl --cxxopt=\"-std=c++17\"\nbuild:msvc-cl --cxxopt=\"/std:c++17\"\nbuild:windows --cxxopt=\"/std:c++17\"\n# This workaround is needed to prevent Bazel from compiling the same file twice (once PIC and once not).\nbuild:linux --copt=\"-fPIC\"\nbuild:macos --copt=\"-fPIC\"\nbuild:clang-cl --compiler=clang-cl\nbuild:msvc-cl --compiler=msvc-cl\n# `LC_ALL` and `LANG` is needed for cpp worker tests, because they will call \"ray start\".\n# If we don't add them, python's `click` library will raise an error.\ntest --test_env=LC_ALL\ntest --test_env=LANG\n# Allow C++ worker tests to execute \"ray start\" with the correct version of Python.\ntest --test_env=VIRTUAL_ENV\ntest --test_env=PYENV_VIRTUAL_ENV\ntest --test_env=PYENV_VERSION\ntest --test_env=PYENV_SHELL\n# Do not send usage stats to the server for tests\ntest --test_env=RAY_USAGE_STATS_REPORT_URL=\"http://127.0.0.1:8000\"\n# Enable cluster mode for OSX and Windows. By default, Ray\n# will not allow multinode OSX and Windows clusters.\ntest --test_env=RAY_ENABLE_WINDOWS_OR_OSX_CLUSTER=\"1\"\n# This is needed for some core tests to run correctly\nbuild:windows --enable_runfiles\n# TODO(mehrdadn): Revert the \"-\\\\.(asm|S)$\" exclusion when this Bazel bug\n#                 for compiling assembly files is fixed on Windows:\n#                 https://github.com/bazelbuild/bazel/issues/8924\n# Warnings should be errors\nbuild:linux    --per_file_copt=\"-\\\\.(asm|S)$@-Werror\"\nbuild:macos    --per_file_copt=\"-\\\\.(asm|S)$@-Werror\"\nbuild:clang-cl --per_file_copt=\"-\\\\.(asm|S)$@-Werror\"\nbuild:msvc-cl     --per_file_copt=\"-\\\\.(asm|S)$@-WX\"\n# Ignore warnings for protobuf generated files and external projects.\nbuild --per_file_copt=\"\\\\.pb\\\\.cc$@-w\"\nbuild:linux --per_file_copt=\"-\\\\.(asm|S)$,external/.*@-w,-Wno-error=implicit-function-declaration,-Wno-error=unused-function\"\nbuild:macos --per_file_copt=\"-\\\\.(asm|S)$,external/.*@-w,-Wno-error=implicit-function-declaration,-Wno-error=unused-function\"\n# Ignore warnings for host tools, which we generally can't control.\n# Ideally we only want to ignore warnings for external project\n# but the current bazel version doesn't support host_per_file_copt yet.\nbuild:macos --host_copt=\"-w\"\nbuild:clang-cl --host_copt=\"-Wno-inconsistent-missing-override\"\nbuild:clang-cl --host_copt=\"-Wno-microsoft-unqualified-friend\"\n# This workaround is needed due to https://github.com/bazelbuild/bazel/issues/4341\nbuild --per_file_copt=\"-\\\\.(asm|S)$,external/com_github_grpc_grpc/.*@-DGRPC_BAZEL_BUILD\"\n# Don't generate warnings about kernel features we don't need https://github.com/ray-project/ray/issues/6832\nbuild:linux --per_file_copt=\"-\\\\.(asm|S)$,external/com_github_grpc_grpc/.*@-DGPR_MANYLINUX1\"\n# Ignore wchar_t -> char conversion warning on MSVC\nbuild:msvc-cl --per_file_copt=\"external/boost/libs/regex/src/wc_regex_traits\\\\.cpp@-wd4244\"\nbuild --http_timeout_scaling=5.0\nbuild --verbose_failures\nbuild:iwyu --experimental_action_listener=//:iwyu_cpp\n\n# Print relative paths when possible\nbuild:windows --attempt_to_print_relative_paths\n# Save disk space by hardlinking cache hits instead of copying\nbuild:windows --experimental_repository_cache_hardlinks\n# Clean the environment before building, to make builds more deterministic\nbuild:windows --incompatible_strict_action_env\n# For colored output (seems necessary on Windows)\nbuild:windows --color=yes\n# For compiler colored output (seems necessary on Windows)\nbuild:clang-cl --per_file_copt=\"-\\\\.(asm|S)$@-fansi-escape-codes\"\nbuild:clang-cl --per_file_copt=\"-\\\\.(asm|S)$@-fcolor-diagnostics\"\n\n\n# Debug build flags. Uncomment in '-c dbg' builds to enable checks in the C++ standard library:\nbuild:linux-debug --config linux\nbuild:linux-debug --cxxopt=\"-D_GLIBCXX_DEBUG=1\"\nbuild:linux-debug --cxxopt=\"-D_GLIBCXX_DEBUG_PEDANTIC=1\"\nbuild:linux-debug --cxxopt=\"-D_LIBCPP_DEBUG=1\"\nbuild:macos-debug --config macos\nbuild:macos-debug --cxxopt=\"-D_GLIBCXX_DEBUG=1\"\nbuild:macos-debug --cxxopt=\"-D_GLIBCXX_DEBUG_PEDANTIC=1\"\nbuild:windows-debug --config windows\nbuild:windows-debug --cxxopt=\"-D_ITERATOR_DEBUG_LEVEL=2\"\n\n# LLVM (clang & libc++) build flags common across Linux installations and systems.\n# On Ubuntu, the remaining configurations can be generated by running ci/env/install-llvm-binaries.sh\nbuild:llvm --action_env=CXXFLAGS=-stdlib=libc++\nbuild:llvm --action_env=LDFLAGS=-stdlib=libc++\nbuild:llvm --action_env=BAZEL_CXXOPTS=-stdlib=libc++\nbuild:llvm --action_env=BAZEL_LINKLIBS=-l%:libc++.a:-l%:libc++abi.a\nbuild:llvm --action_env=BAZEL_LINKOPTS=-lm:-pthread\nbuild:llvm --define force_libcpp=enabled\n\n# Thread sanitizer configuration:\nbuild:tsan --per_file_copt=\"-bazel-ray/external/com_github_antirez_redis/.*$@-fsanitize=thread\"\nbuild:tsan --per_file_copt=\"-bazel-ray/external/com_github_antirez_redis/.*$@-DTHREAD_SANITIZER\"\nbuild:tsan --strip=never\nbuild:tsan --copt -O2\nbuild:tsan --copt -g\nbuild:tsan --copt -fno-omit-frame-pointer\nbuild:tsan --copt -Wno-uninitialized\nbuild:tsan --linkopt -fsanitize=thread\nbuild:tsan --cxxopt=\"-D_RAY_TSAN_BUILD\"\nbuild:tsan --no//:jemalloc_flag\n# This config is only for running TSAN with LLVM toolchain on Linux.\nbuild:tsan-clang --config=tsan\nbuild:tsan-clang --config=llvm\ntest:tsan --test_env=TSAN_OPTIONS=\"report_atomic_races=0\"\n\n# Memory sanitizer configuration\nbuild:asan --strip=never\nbuild:asan --copt -g\nbuild:asan --copt -fsanitize=address\nbuild:asan --copt -DADDRESS_SANITIZER\nbuild:asan --copt -fno-omit-frame-pointer\nbuild:asan --linkopt -fsanitize=address\nbuild:asan --no//:jemalloc_flag\ntest:asan --jobs=1\ntest:asan --test_env=ASAN_OPTIONS=\"detect_leaks=0\"\n# This config is only for running ASAN with LLVM toolchain on Linux.\n# https://github.com/google/sanitizers/issues/1017\nbuild:asan-clang --config=asan\nbuild:asan-clang --config=llvm\nbuild:asan-clang --copt -mllvm\nbuild:asan-clang --copt -asan-use-private-alias=1\n\nbuild:asan-build --strip=never\nbuild:asan-build -c dbg\nbuild:asan-build --copt -fsanitize=address\nbuild:asan-build --copt -DADDRESS_SANITIZER\nbuild:asan-build --copt -O1\nbuild:asan-build --copt -g\nbuild:asan-build --copt -fno-omit-frame-pointer\nbuild:asan-build --copt -static-libasan\nbuild:asan-build --linkopt -fsanitize=address\nbuild:asan-build --linkopt -static-libasan\n# For example, for Ubuntu 18.04 libasan can be found here:\n# test:asan --test_env=LD_PRELOAD=\"/usr/lib/gcc/x86_64-linux-gnu/7/libasan.so\"\ntest:asan-buildkite --test_env=LD_PRELOAD=\"/usr/lib/x86_64-linux-gnu/libasan.so.5\"\n\n# CI configuration:\naquery:ci --color=no\naquery:ci --noshow_progress\nbuild:ci --color=yes\nbuild:ci --curses=no\nbuild:ci --keep_going\nbuild:ci --progress_report_interval=100\nbuild:ci --show_progress_rate_limit=15\nbuild:ci --ui_actions_shown=1024\nbuild:ci --show_timestamps\ntest:ci --flaky_test_attempts=3\n# Disable test result caching because py_test under Bazel can import from outside of sandbox, but Bazel only looks at\n# declared dependencies to determine if a result should be cached. More details at:\n# https://github.com/bazelbuild/bazel/issues/7091, https://github.com/bazelbuild/rules_python/issues/382\ntest:ci --nocache_test_results\ntest:ci --spawn_strategy=local\ntest:ci --test_output=errors\ntest:ci --experimental_ui_max_stdouterr_bytes=-1\ntest:ci --test_verbose_timeout_warnings\ntest:ci-debug -c dbg\ntest:ci-debug --copt=\"-g\"\ntest:ci-debug --flaky_test_attempts=3\n# Disable test result caching for the same reason above.\ntest:ci-debug --nocache_test_results\ntest:ci-debug --spawn_strategy=local\ntest:ci-debug --test_output=errors\ntest:ci-debug --test_verbose_timeout_warnings\n\naquery:get-toolchain --include_commandline=false\naquery:get-toolchain --noimplicit_deps\n\n# [Linux] Uncomment this line (or use --config) to print a stack trace on exit.\n#test:linux --config=strace\ntest:strace --run_under=\"bash -c 'if command -v strace >/dev/null && strace -qq -k -e exit true 2>/dev/null; then strace -qq -k -e exit -e trace=\\\"!all\\\" -s 32768 -f -o >(awk \\\"/^[0-9]+ / { y = \\\\$3 != \\\\\\\"SIGCHLD\\\\\\\" && \\\\$3 != \\\\\\\"SIGTERM\\\\\\\" && \\\\$5 != \\\\\\\"SIGTERM\\\\\\\" && \\\\$5 != \\\\\\\"SIGKILL2\\\\\\\"; } y { print; }\\\" 1>&2 && cat 1>&2) -- \\\"$@\\\"; else \\\"$@\\\"; fi' -\"\n# [Linux] Uncomment this line (or use --config) to preload libSegFault.so if available, to print a stack trace on aborts and segfault. (Note: This doesn't always work.)\n#test:linux --config=segfault\ntest:segfault --run_under=\"bash -c 'unset GREP_OPTIONS && if ! grep -q -o Microsoft /proc/version 2>/dev/null; then libs=\\\"$(command -v ldconfig >/dev/null && ldconfig -p | grep -F -o -e \\\"libSegFault.so\\\" | uniq | tr \\\"\\\\\\\\n\\\" :)\\\" && if [ -n \\\"${libs%:}\\\" ]; then export SEGFAULT_SIGNALS=\\\"abrt segv\\\" LD_PRELOAD=\\\"${libs}${LD_PRELOAD-}\\\"; fi; fi && \\\"$@\\\"' -\"\n\n# Debug build:\nbuild:debug -c dbg\nbuild:debug --copt=\"-g\"\nbuild:debug --copt -fno-omit-frame-pointer\nbuild:debug --strip=\"never\"\n\n# Undefined Behavior Sanitizer\nbuild:ubsan --strip=never\nbuild:ubsan --copt -fno-sanitize=vptr\nbuild:ubsan --copt -fno-sanitize-recover=all\nbuild:ubsan --copt -g\nbuild:ubsan --linkopt -fsanitize=undefined\nbuild:ubsan --linkopt -fno-sanitize-recover=all\nbuild:ubsan --per_file_copt=\"-external/com_github_grpc_grpc/.*@-fsanitize=undefined\"\n\n# Import local specific llvm config options, which can be generated by\n# ci/env/install-llvm-dependencies.sh\ntry-import %workspace%/.llvm-local.bazelrc\n\n# Even with sandbox mode bazel prioritizes system headers over the ones in the sandbox.\n# It picks up the system headers when someone has protobuf installed via Homebrew.\n# Work around for https://github.com/bazelbuild/bazel/issues/8053\nbuild:macos --sandbox_block_path=/usr/local/\n# This option controls whether javac checks for missing direct dependencies.\nbuild --experimental_strict_java_deps=off\n"
        },
        {
          "name": ".bazelversion",
          "type": "blob",
          "size": 0.005859375,
          "content": "6.5.0\n"
        },
        {
          "name": ".buildkite",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.16015625,
          "content": "BasedOnStyle: Google\nColumnLimit: 90\nDerivePointerAlignment: false\nIndentCaseLabels: false\nPointerAlignment: Right\nBinPackArguments: false\nBinPackParameters: false\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 3.3603515625,
          "content": "# Disable the following checks with reasons in parenthesis:\n#\n# -bugprone-macro-parentheses (inconsistent style)\n# -google-readability-todo (potentially too restrictive)\n# -misc-non-private-member-variables-in-classes (potentially too restrictive)\n# -misc-unused-parameters (can be cleaned up in batch and enabled)\n# -modernize-avoid-c-arrays (too restrictive)\n# -modernize-concat-nested-namespaces (inconsistent style)\n# -modernize-pass-by-value (too restrictive)\n# -modernize-return-braced-init-list (inconsistent style)\n# -modernize-use-emplace (more subtle behavior)\n# -modernize-use-nodiscard (too much noise)\n# -modernize-use-trailing-return-type (inconsistent style)\n# -modernize-use-override (TODO(mwtian): re-enable after fixing existing derived classes)\n# -modernize-avoid-bind (incorrect conversion)\n# -modernize-loop-convert (more subtle behavior)\n# -modernize-replace-disallow-copy-and-assign-macro (inconsistent style)\n# -modernize-make-unique (doesn't work with private constructor)\n# -modernize-make-shared (doesn't work with private constructor)\n# Other readability-* rules (potentially too noisy, inconsistent style)\n# Other rules not mentioned here or below (not yet evaluated)\n#\n# TODO: enable google-* and readability-* families of checks.\nChecks: >\n  abseil-*,\n  bugprone-*,\n  -bugprone-macro-parentheses,\n  -bugprone-easily-swappable-parameters,\n  -bugprone-narrowing-conversions,\n  -bugprone-implicit-widening-of-multiplication-result,\n  cert-*,\n  cppcoreguidelines-*,\n  -cppcoreguidelines-non-private-member-variables-in-classes,\n  -cppcoreguidelines-narrowing-conversions,\n  -cppcoreguidelines-avoid-magic-numbers,\n  -cppcoreguidelines-avoid-do-while,\n  google-*,\n  -google-readability-todo,\n  -google-default-arguments,\n  misc-*,\n  -misc-non-private-member-variables-in-classes,\n  -misc-unused-parameters,\n  -misc-include-cleaner,\n  -misc-const-correctness,\n  modernize-*,\n  -modernize-concat-nested-namespaces,\n  -modernize-return-braced-init-list,\n  -modernize-use-nodiscard,\n  -modernize-use-trailing-return-type,\n  -modernize-avoid-bind,\n  -modernize-loop-convert,\n  performance-*,\n  readability-braces-around-statements,\n  readability-const-return-type,\n  readability-container-contains,\n  readability-container-data-pointer,\n  readability-container-size-empty,\n  readability-delete-null-pointer,\n  readability-duplicate-include,\n  readability-implicit-bool-conversion,\n  readability-make-member-function-const,\n  readability-misleading-indentation,\n  readability-misplaced-array-index,\n  readability-named-parameter,\n  readability-non-const-parameter,\n  readability-redundant-*,\n  -readability-redundant-access-specifiers,\n  readability-static-definition-in-anonymous-namespace,\n  readability-string-compare,\n  readability-suspicious-call-argument,\n\nCheckOptions:\n  # Reduce noisiness of the bugprone-narrowing-conversions check.\n  - key:   bugprone-narrowing-conversions.IgnoreConversionFromTypes\n    value: 'size_t;ptrdiff_t;size_type;difference_type'\n  - key:   bugprone-narrowing-conversions.WarnOnEquivalentBitWidth\n    value: 'false'\n  - key: cppcoreguidelines-special-member-functions.AllowMissingMoveFunctionsWhenCopyIsDeleted\n    value: 'true'\n  - key: cppcoreguidelines-special-member-functions.AllowSoleDefaultDtor\n    value: 'true'\n  - key: performance-move-const-arg.CheckTriviallyCopyableMove\n    value: 'false'\n\n# Turn all the warnings from the checks above into errors.\nWarningsAsErrors: \"*\"\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2998046875,
          "content": "root = true\n\n[*]\nindent_style = space\nend_of_line = lf\n\n[*.{bzl,bazel}]\nindent_size = 4\n\n[*.{h,hpp,hxx,cpp,cxx,cc,c}]\nindent_size = 2\nwrap_width = 90\n\n[*.html]\nindent_size = 2\n\n[*.java]\nindent_size = 2\n\n[*.proto]\nindent_size = 2\n\n[*.{py,pyx,pxd,pxi}]\nindent_size = 4\nwrap_width = 79\n\n[*.sh]\nindent_size = 2\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.9267578125,
          "content": "[flake8]\nexclude =\n  python/ray/core/generated/\n  doc/source/conf.py\n  python/ray/cloudpickle/\n  python/ray/thirdparty_files/\n  python/ray/_private/runtime_env/agent/thirdparty_files/\n  python/build/\n  python/.eggs/\n  python/ray/_private/thirdparty/*\n  python/ray/workflow/tests/mock_server.py\n  python/ray/serve/tests/test_config_files/syntax_error.py\n  python/ray/serve/_private/benchmarks/streaming/_grpc/test_server_pb2_grpc.py\nmax-line-length = 88\ninline-quotes = \"\nignore =\n  B028\n  C408\n  C417\n  E121\n  E123\n  E126\n  E203\n  E226\n  E24\n  E704\n  W503\n  W504\n  W605\n  I\n  N\n  B001\n  B002\n  B003\n  B004\n  B005\n  B007\n  B008\n  B009\n  B010\n  B011\n  B012\n  B013\n  B014\n  B015\n  B016\n  B017\navoid-escape = no\n# Error E731 is ignored because of the migration from YAPF to Black.\n# See https://github.com/ray-project/ray/issues/21315 for more information.\nper-file-ignores =\n    rllib/evaluation/worker_set.py:E731\n    rllib/evaluation/sampler.py:E731\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.07421875,
          "content": "# Formatted Python code with Black\n7f1bacc7dc9caf6d0ec042e39499bbf1d9a7d065\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.544921875,
          "content": "# The build output should clearly not be checked in\n*test-output.xml\n/bazel-*\n/python/ray/core\n/python/ray/thirdparty_files/\n/python/ray/_private/runtime_env/agent/thirdparty_files/\n/python/ray/pyarrow_files/\n/python/ray/jars/\n/python/ray/cpp/\n/python/build\n/python/dist\n/python/python-driver-*\n/python/ray/serve/generated\n/thirdparty/pkg/\n/build/java\n.jar\n/dashboard/client/build\n/.whl\n\n# KubeRay config lives in a separate repository\npython/ray/autoscaler/kuberay/config\n\n# Files generated by flatc should be ignored\n/src/ray/gcs/format/*_generated.h\n/src/ray/object_manager/format/*_generated.h\n/src/ray/raylet/format/*_generated.h\n/java/runtime/src/main/java/io/ray/runtime/generated/*\n/java/serve/src/main/java/io/ray/serve/generated/*\n\n# Files genrated by c++ worker should be ignored.\n/cpp/example/thirdparty/\n/cpp/example/bazel-*\n/python/ray/cpp\n\n# Redis temporary files\n*dump.rdb\n\n# Python byte code files\n*.pyc\npython/.eggs\n\n# Backup files\n*.bak\n\n# Emacs temporary files\n*~\n*#\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.xo\n*.obj\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\npython/ray/_raylet.pyd\n\n# Incremental linking files\n*.ilk\n\n# Library export files\n*.exp\n\n# Debug symbols\n*.pdb\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n*.lib\n\n# Executables\n*.exe\n*.out\n*.app\n\n# Visual Studio files\n/packages\n*.suo\n*.user\n*.VC.db\n*.VC.opendb\n\n# Protobuf-generated files\n*_pb2.py\n*.pb.h\n*.pb.cc\n\n# Ray cluster configuration\nscripts/nodes.txt\n\n# OS X folder attributes\n.DS_Store\n\n# Debug files\n*.dSYM/\n*.su\n\n# Python setup files\n*.egg-info\n\n# Compressed files\n*.gz\n\n# Datasets from examples\n**/MNIST_data/\n**/cifar-10-batches-bin/\n\n# Generated documentation files\n/doc/_build\n/doc/source/_static/thumbs\n/doc/source/tune/generated_guides/\n/doc/source/**/doc/\n\n# User-specific stuff:\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/dictionaries\n.llvm-local.bazelrc\n\n# Sensitive or high-churn files:\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.xml\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n\n# Gradle:\n.idea/**/gradle.xml\n.idea/**/libraries\n.idea\n\n# Website\n/site/Gemfile.lock\n/site/.sass-cache\n/site/_site\n\n# Pytest Cache\n**/.pytest_cache\n**/.cache\n.benchmarks\npython-driver-*\n\n# Vscode\n.vscode/\n\n*.iml\n\n# Java\njava/**/target\njava/**/lib\njava/**/.settings\njava/**/.classpath\njava/**/.project\njava/runtime/native_dependencies/\njava/testng_custom.xml\ntest-output\n\ndependency-reduced-pom.xml\n\n# Cpp\ncpp/example/thirdparty/\n\n.clwb\n\n# pom.xml files generated from pom_template.xml\njava/**/pom.xml\n\n# python virtual env\nvenv\n.venv\n\n# pyenv version file\n.python-version\n\n# Vim\n.*.swp\n*.swp\n.*.swo\n*.swo\ntags\ntags.lock\ntags.temp\n*.vim\n\n# Emacs\n.#*\n\n# tools\ntools/prometheus*\n\n# ray project files\nproject-id\n.mypy_cache/\n\n# release test related\n.anyscale.yaml\ntest_state.json\n\n# workflow storage\nworkflow_data/\n\n# vscode java extention generated\n.factorypath\n\n# Jupyter notebook autosave checkpoints\n**/.ipynb_checkpoints/\n\n# Jupyter notebook temporary documents used by LSP\n.virtual_documents/\n\n### Added by Hedron's Bazel Compile Commands Extractor: https://github.com/hedronvision/bazel-compile-commands-extractor\n# The external link: Differs on Windows vs macOS/Linux, so we can't check it in. The pattern needs to not have a trailing / because it's a symlink on macOS/Linux.\n/external\n# Compiled output -> don't check in\n/compile_commands.json\n# Directory where clangd puts its indexing work\n/.cache/\n\n# Auto-generated tag mapping\ntag-mapping.json\n\n# Temporary files generated by import sorting linter.\n*.isorted\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 1.29296875,
          "content": "[settings]\n# This is to make isort compatible with Black. See\n# https://black.readthedocs.io/en/stable/the_black_code_style.html#how-black-wraps-lines.\nline_length=88\nprofile=black\nmulti_line_output=3\ninclude_trailing_comma=True\nuse_parentheses=True\nfloat_to_top=True\nfilter_files=True\n\n# Some of the directories need to be kept in the blacklist:\n# python/ray/cloudpickle/*\n# python/build/*\n# python/ray/thirdparty_files/*\n# python/ray/_private/thirdparty/*\n# doc/*\n# python/ray/__init__.py\n# python/ray/setup-dev.py\n# For the rest we will gradually remove them from the blacklist as we\n# reformat the code to follow the style guide.\nskip_glob=doc/*,python/ray/__init__.py,python/ray/setup-dev.py,python/build/*,python/ray/cloudpickle/*,python/ray/thirdparty_files/*,python/ray/_private/thirdparty/*,python/ray/_private/runtime_env/agent/thirdparty_files/*,python/ray/dag/*.py,ci/*,python/ray/_private/*,python/ray/includes/*,python/ray/internal/*,python/ray/ray_operator/*,python/ray/scripts/*,python/ray/serve/generated/serve_pb2.py,python/ray/streaming/*,python/ray/tests/*,python/ray/tests/*,python/ray/util/*,python/ray/workers/*,python/ray/workflow/*,rllib/*,release/*,\n\nknown_local_folder=ray\nknown_afterray=psutil,setproctitle\nknown_third_party=grpc\nsections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER,AFTERRAY\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 4.5625,
          "content": "exclude: |\n  (?x)^(\n    python/ray/core/generated/|\n    python/ray/serve/generated/|\n    python/ray/cloudpickle/|\n    python/ray/_private/runtime_env/_clonevirtualenv.py|\n    doc/external/\n  )\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.4.0\n    hooks:\n      - id: trailing-whitespace\n      - id: end-of-file-fixer\n      - id: check-added-large-files\n      - id: check-ast\n        exclude: |\n          (?x)(\n            python/ray/serve/tests/test_config_files/syntax_error\\.py\n          )$\n      - id: check-json\n        exclude: |\n          (?x)^(\n            # Intentionally bad json schema\n            python/ray/tests/test_runtime_env_validation_bad_2_schema.json|\n            # json5 comments prevent parsing\n            python/asv.conf.json|\n            rllib/asv.conf.json\n          )\n      - id: check-toml\n\n  - repo: https://github.com/psf/black\n    rev: 22.10.0\n    hooks:\n      - id: black\n        exclude: |\n          (?x)^(\n            python/ray/cloudpickle/|\n            python/build/|\n            python/ray/core/src/ray/gcs/|\n            python/ray/thirdparty_files/|\n            python/ray/_private/thirdparty/|\n            python/ray/serve/tests/test_config_files/syntax_error\\.py|\n            python/ray/serve/_private/benchmarks/streaming/_grpc/test_server_pb2_grpc\\.py|\n            doc/external/\n          )\n        types_or: [python]\n\n  - repo: https://github.com/pycqa/flake8\n    rev: 3.9.1\n    hooks:\n      - id: flake8\n        additional_dependencies:\n          [\n            flake8-comprehensions==3.10.1,\n            flake8-quotes==2.0.0,\n            flake8-bugbear==21.9.2,\n          ]\n\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v3.0.3\n    hooks:\n      - id: prettier\n        files: 'doc/'\n        types_or: [javascript, ts, tsx, html, css]\n\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.7.0\n    hooks:\n      - id: mypy\n        args: ['--follow-imports=skip', '--ignore-missing-imports']\n        files: |\n          (?x)^(\n            python/ray/autoscaler/node_provider.py|\n            python/ray/autoscaler/sdk/__init__.py|\n            python/ray/autoscaler/sdk/sdk.py|\n            python/ray/autoscaler/_private/commands.py|\n            python/ray/autoscaler/_private/autoscaler.py|\n            python/ray/_private/gcs_utils.py\n          )\n        additional_dependencies:\n          [\n            types-PyYAML==6.0.12.2,\n          ]\n\n  - repo: https://github.com/pycqa/isort\n    rev: 5.12.0\n    hooks:\n      - id: isort\n        name: isort (python)\n        types_or: [python]\n\n  - repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.10.0\n    hooks:\n      - id: rst-directive-colons\n      - id: rst-inline-touching-normal\n      - id: python-no-log-warn\n      - id: python-check-mock-methods\n\n  - repo: https://github.com/koalaman/shellcheck-precommit\n    rev: v0.9.0\n    hooks:\n      - id: shellcheck\n        args: ['--exclude=1090,1091,2207']\n          # 1090: Can't follow non-constant source. Use a directive to specify location.\n          # 1091: Not following {file} due to some error\n          # 2207: Prefer mapfile or read -a to split command output (or quote to avoid splitting). -- these aren't compatible with macOS's old Bash\n\n  - repo: https://github.com/pocc/pre-commit-hooks\n    rev: v1.3.5\n    hooks:\n      - id: clang-format\n        args: [--version=12.0.1]\n\n  - repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks\n    rev: v2.11.0\n    hooks:\n      - id: pretty-format-java\n        args: [--autofix, --google-java-formatter-version=1.7]\n        exclude: |\n          (?x)^(\n            java/api/src/main/java/io/ray/api/ActorCall.java|\n            java/api/src/main/java/io/ray/api/CppActorCall.java|\n            java/api/src/main/java/io/ray/api/PyActorCall.java|\n            java/api/src/main/java/io/ray/api/RayCall.java\n          )\n\n  - repo: local\n    hooks:\n      - id: docstyle\n        name: Check for Ray docstyle violations\n        entry: ci/lint/check-docstyle.sh\n        language: system\n        types: [python]\n\n  - repo: local\n    hooks:\n      - id: check-import-order\n        name: Check for Ray import order violations\n        entry: python ci/lint/check_import_order.py\n        language: python\n        types: [python]\n        pass_filenames: false\n        args: [\".\", \"-s\", \"ci\", \"-s\", \"python/ray/thirdparty_files\", \"-s\", \"python/build\", \"-s\", \"lib\"]\n\n  - repo: local\n    hooks:\n      - id: check_cpp_files_inclusion\n        name: Check ray core C++ files inclusion violations\n        entry: ci/lint/check_cpp_files_inclusion.py\n        language: python\n        files: '^src/ray/'\n        types: [c++]\n"
        },
        {
          "name": ".prettierrc.toml",
          "type": "blob",
          "size": 0.0771484375,
          "content": "singleQuote = true\nbracketSpacing = false\nhtmlWhitespaceSensitivity = 'ignore'\n"
        },
        {
          "name": ".rayciversion",
          "type": "blob",
          "size": 0.005859375,
          "content": "0.8.0\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.591796875,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-24.04\n  tools:\n    python: \"3.12\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: doc/source/conf.py\n  fail_on_warning: true\n\n# We recommend specifying your dependencies to enable reproducible builds:\n# https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\npython:\n  install:\n    - requirements: doc/requirements-doc.txt\n"
        },
        {
          "name": ".vale.ini",
          "type": "blob",
          "size": 0.646484375,
          "content": "StylesPath = .vale/styles\n\nVocab = General, Data, RLlib, Train\n\nMinAlertLevel = suggestion\n\nPackages = Google\n\n[*.rst]\n# HACK(@bveeramani): I have no clue why we need to include `(:class:`.*`)` in addition\n# to `(:.*:`.*`)`, but we get false positives if we don't. `TokenIgnores` is weird.\nTokenIgnores = (:class:`.*`)|(:.*:`.*`)|(`.*`)\n\n[*.{md,rst}]\nBasedOnStyles = Vale, Google\n# We're disabling \"Colons\" because we disagree with Google's suggestion to lowercase the\n# first word after a colon.\nGoogle.Colons = No\n# TODO(@bveeramani): We're temporarily disabling \"Heading\". In the future, we'll update\n# all headings and enable this rule.\nGoogle.Headings = No\n"
        },
        {
          "name": ".vale",
          "type": "tree",
          "content": null
        },
        {
          "name": "BUILD.bazel",
          "type": "blob",
          "size": 66.2607421875,
          "content": "# Bazel build\n# C/C++ documentation: https://docs.bazel.build/versions/master/be/c-cpp.html\n\n# ************************** IMPORTANT ***********************\n# If a target or file is not found here, then please try searching in /src\n# We are in the middle of transitioning to a tree of build files.\n# If you would like to help with the move in your PR, please use `git mv` so that the history of the file is retained.\n\nload(\"@bazel_skylib//rules:common_settings.bzl\", \"bool_flag\")\nload(\"@com_github_google_flatbuffers//:build_defs.bzl\", \"flatbuffer_cc_library\")\nload(\"@com_github_grpc_grpc//bazel:cc_grpc_library.bzl\", \"cc_grpc_library\")\nload(\"@com_github_grpc_grpc//bazel:cython_library.bzl\", \"pyx_library\")\nload(\"@hedron_compile_commands//:refresh_compile_commands.bzl\", \"refresh_compile_commands\")\nload(\"@python3_9//:defs.bzl\", python39 = \"interpreter\")\nload(\"@rules_cc//cc:defs.bzl\", \"cc_proto_library\")\nload(\"@rules_proto//proto:defs.bzl\", \"proto_library\")\nload(\"@rules_python//python:defs.bzl\", \"py_library\", \"py_runtime\", \"py_runtime_pair\")\nload(\"//bazel:ray.bzl\", \"COPTS\", \"PYX_COPTS\", \"PYX_SRCS\", \"copy_to_workspace\", \"ray_cc_binary\", \"ray_cc_library\", \"ray_cc_test\")\n\npackage(\n    default_visibility = [\"//visibility:public\"],\n)\n\n# Hermetic python envionment, currently only used for CI infra and scripts.\n\npy_runtime(\n    name = \"python3_runtime\",\n    interpreter = python39,\n    python_version = \"PY3\",\n    visibility = [\"//visibility:private\"],\n)\n\npy_runtime_pair(\n    name = \"python_runtime_pair\",\n    py2_runtime = None,\n    py3_runtime = \":python3_runtime\",\n    visibility = [\"//visibility:private\"],\n)\n\nconstraint_setting(name = \"hermetic\")\n\nconstraint_value(\n    name = \"hermetic_python\",\n    constraint_setting = \":hermetic\",\n)\n\ntoolchain(\n    name = \"python_toolchain\",\n    exec_compatible_with = [\":hermetic_python\"],\n    toolchain = \":python_runtime_pair\",\n    toolchain_type = \"@bazel_tools//tools/python:toolchain_type\",\n)\n\nplatform(\n    name = \"hermetic_python_platform\",\n    constraint_values = [\":hermetic_python\"],\n    parents = [\"@local_config_platform//:host\"],\n    visibility = [\"//visibility:private\"],\n)\n\n# C/C++ toolchain constraint configs.\n\nconfig_setting(\n    name = \"msvc-cl\",\n    flag_values = {\"@bazel_tools//tools/cpp:compiler\": \"msvc-cl\"},\n)\n\nconfig_setting(\n    name = \"clang-cl\",\n    flag_values = {\"@bazel_tools//tools/cpp:compiler\": \"clang-cl\"},\n)\n\nconfig_setting(\n    name = \"opt\",\n    values = {\"compilation_mode\": \"opt\"},\n)\n\nbool_flag(\n    name = \"jemalloc_flag\",\n    build_setting_default = True,\n)\n\nconfig_setting(\n    name = \"jemalloc\",\n    constraint_values = [\"@platforms//os:linux\"],\n    flag_values = {\":jemalloc_flag\": \"true\"},\n)\n\n# bazel run :refresh_compile_commands for compile_commands generation for clangd\n# https://github.com/hedronvision/bazel-compile-commands-extractor?tab=readme-ov-file#vscode - directions for clangd config\nrefresh_compile_commands(\n    name = \"refresh_compile_commands\",\n    exclude_external_sources = True,  # removed below to have lsp index external cc files at the cost of 2x index time\n    # Specify the targets of interest.\n    # For example, specify a dict of targets and any flags required to build.\n    targets = {\n        \"//:ray_pkg\": \"\",\n    },\n    # No need to add flags already in .bazelrc. They're automatically picked up.\n)\n\n# bazel run :refresh_compile_commands_external_sources for generation with external source files (cc files)\nrefresh_compile_commands(\n    name = \"refresh_compile_commands_external_sources\",\n    targets = {\n        \"//:ray_pkg\": \"\",\n    },\n)\n\n# === Begin of rpc definitions ===\n# GRPC common lib.\nray_cc_library(\n    name = \"grpc_common_lib\",\n    srcs = [\n        \"src/ray/rpc/common.cc\",\n        \"src/ray/rpc/grpc_server.cc\",\n        \"src/ray/rpc/retryable_grpc_client.cc\",\n        \"src/ray/rpc/rpc_chaos.cc\",\n        \"src/ray/rpc/server_call.cc\",\n    ],\n    hdrs = glob([\n        \"src/ray/rpc/rpc_chaos.h\",\n        \"src/ray/rpc/client_call.h\",\n        \"src/ray/rpc/common.h\",\n        \"src/ray/rpc/grpc_client.h\",\n        \"src/ray/rpc/retryable_grpc_client.h\",\n        \"src/ray/rpc/grpc_server.h\",\n        \"src/ray/rpc/metrics_agent_client.h\",\n        \"src/ray/rpc/server_call.h\",\n        \"src/ray/rpc/grpc_util.h\",\n        \"src/ray/raylet_client/*.h\",\n    ]),\n    deps = [\n        \":stats_metric\",\n        \"//src/ray/common:asio\",\n        \"//src/ray/common:grpc_util\",\n        \"//src/ray/common:id\",\n        \"//src/ray/common:ray_config\",\n        \"//src/ray/common:status\",\n        \"@com_github_grpc_grpc//:grpc++\",\n        \"@com_github_grpc_grpc//:grpc++_reflection\",\n        \"@com_github_grpc_grpc//:grpcpp_admin\",\n        \"@com_google_protobuf//:protobuf\",\n    ],\n)\n\n# Node manager gRPC lib.\ncc_grpc_library(\n    name = \"node_manager_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:node_manager_proto\"],\n    grpc_only = True,\n    deps = [\"//src/ray/protobuf:node_manager_cc_proto\"],\n)\n\n# Node manager server and client.\nray_cc_library(\n    name = \"node_manager_rpc\",\n    srcs = glob([\n        \"src/ray/rpc/node_manager/*.cc\",\n    ]),\n    hdrs = glob([\n        \"src/ray/rpc/node_manager/*.h\",\n    ]),\n    deps = [\n        \":grpc_common_lib\",\n        \":node_manager_cc_grpc\",\n        \":ray_common\",\n        \"@boost//:asio\",\n        \"@com_github_grpc_grpc//:grpc++\",\n    ],\n)\n\n# gcs_service gRPC lib.\ncc_grpc_library(\n    name = \"gcs_service_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:gcs_service_proto\"],\n    grpc_only = True,\n    deps = [\"//src/ray/protobuf:gcs_service_cc_proto\"],\n)\n\n# gcs_service gRPC lib.\ncc_grpc_library(\n    name = \"test_service_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:test_service_proto\"],\n    grpc_only = True,\n    deps = [\"//src/ray/protobuf:test_service_cc_proto\"],\n)\n\n# gcs rpc server and client.\nray_cc_library(\n    name = \"gcs_service_rpc\",\n    hdrs = [\n        \"src/ray/rpc/gcs_server/gcs_rpc_client.h\",\n        \"src/ray/rpc/gcs_server/gcs_rpc_server.h\",\n    ],\n    deps = [\n        \":autoscaler_cc_grpc\",\n        \":gcs_service_cc_grpc\",\n        \":grpc_common_lib\",\n        \":pubsub_lib\",\n        \":ray_common\",\n        \"@boost//:asio\",\n        \"@com_github_grpc_grpc//:grpc++\",\n        \"@com_google_absl//absl/container:btree\",\n    ],\n)\n\n# Object manager gRPC lib.\ncc_grpc_library(\n    name = \"object_manager_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:object_manager_proto\"],\n    grpc_only = True,\n    deps = [\"//src/ray/protobuf:object_manager_cc_proto\"],\n)\n\n# Object manager rpc server and client.\nray_cc_library(\n    name = \"object_manager_rpc\",\n    hdrs = glob([\n        \"src/ray/rpc/object_manager/*.h\",\n    ]),\n    deps = [\n        \":grpc_common_lib\",\n        \":object_manager_cc_grpc\",\n        \":ray_common\",\n        \"@boost//:asio\",\n        \"@com_github_grpc_grpc//:grpc++\",\n    ],\n)\n\n# Worker gRPC lib.\ncc_grpc_library(\n    name = \"worker_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:core_worker_proto\"],\n    grpc_only = True,\n    deps = [\"//src/ray/protobuf:worker_cc_proto\"],\n)\n\n# worker server and client.\nray_cc_library(\n    name = \"worker_rpc\",\n    srcs = glob([\n        \"src/ray/rpc/worker/*.cc\",\n    ]),\n    hdrs = glob([\n        \"src/ray/rpc/worker/*.h\",\n    ]),\n    deps = [\n        \":grpc_common_lib\",\n        \":pubsub_lib\",\n        \":ray_common\",\n        \":worker_cc_grpc\",\n        \"@boost//:asio\",\n        \"@boost//:thread\",\n        \"@com_github_grpc_grpc//:grpc++\",\n    ],\n)\n\n# Metrics Agent gRPC lib.\ncc_grpc_library(\n    name = \"reporter_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:reporter_proto\"],\n    grpc_only = True,\n    deps = [\"//src/ray/protobuf:reporter_cc_proto\"],\n)\n\n# Metrics Agent client.\nray_cc_library(\n    name = \"reporter_rpc\",\n    hdrs = glob([\n        \"src/ray/rpc/metrics_agent_client.h\",\n    ]),\n    deps = [\n        \":grpc_common_lib\",\n        \":reporter_cc_grpc\",\n        \"//src/ray/common:status\",\n        \"@boost//:asio\",\n        \"@boost//:thread\",\n        \"@com_github_grpc_grpc//:grpc++\",\n    ],\n)\n\n# pubsub.\ncc_grpc_library(\n    name = \"pubsub_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:pubsub_proto\"],\n    grpc_only = True,\n    deps = [\n        \"//src/ray/protobuf:common_cc_proto\",\n        \"//src/ray/protobuf:gcs_cc_proto\",\n        \"//src/ray/protobuf:pubsub_cc_proto\",\n    ],\n)\n\nray_cc_library(\n    name = \"pubsub_rpc\",\n    deps = [\n        \"pubsub_cc_grpc\",\n        \":grpc_common_lib\",\n        \":ray_common\",\n    ],\n)\n\ncc_grpc_library(\n    name = \"autoscaler_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:autoscaler_proto\"],\n    grpc_only = True,\n    deps = [\n        \"//src/ray/protobuf:autoscaler_cc_proto\",\n    ],\n)\n\nray_cc_library(\n    name = \"autoscaler_rpc\",\n    deps = [\n        \":autoscaler_cc_grpc\",\n    ],\n)\n\n# === End of rpc definitions ===\n\n# === Begin of plasma definitions ===\n\n# TODO(mehrdadn): (How to) support dynamic linking?\nPROPAGATED_WINDOWS_DEFINES = [\"ARROW_STATIC\"]\n\nPLASMA_COPTS = COPTS + select({\n    \"@platforms//os:windows\": [\n    ] + [\"-D\" + define for define in PROPAGATED_WINDOWS_DEFINES],\n    \"//conditions:default\": [\n        \"-DARROW_USE_GLOG\",\n    ],\n})\n\nPLASMA_LINKOPTS = [] + select({\n    \"@platforms//os:windows\": [\n        \"-DefaultLib:\" + \"ws2_32.lib\",\n    ],\n    \"//conditions:default\": [\n    ],\n})\n\nray_cc_library(\n    name = \"plasma_client\",\n    srcs = [\n        \"src/ray/object_manager/common.cc\",\n        \"src/ray/object_manager/plasma/client.cc\",\n        \"src/ray/object_manager/plasma/connection.cc\",\n        \"src/ray/object_manager/plasma/malloc.cc\",\n        \"src/ray/object_manager/plasma/plasma.cc\",\n        \"src/ray/object_manager/plasma/protocol.cc\",\n        \"src/ray/object_manager/plasma/shared_memory.cc\",\n    ] + select({\n        \"@platforms//os:windows\": [\n        ],\n        \"//conditions:default\": [\n            \"src/ray/object_manager/plasma/fling.cc\",\n        ],\n    }),\n    hdrs = [\n        \"src/ray/object_manager/common.h\",\n        \"src/ray/object_manager/plasma/client.h\",\n        \"src/ray/object_manager/plasma/common.h\",\n        \"src/ray/object_manager/plasma/compat.h\",\n        \"src/ray/object_manager/plasma/connection.h\",\n        \"src/ray/object_manager/plasma/malloc.h\",\n        \"src/ray/object_manager/plasma/plasma.h\",\n        \"src/ray/object_manager/plasma/plasma_generated.h\",\n        \"src/ray/object_manager/plasma/protocol.h\",\n        \"src/ray/object_manager/plasma/shared_memory.h\",\n    ] + select({\n        \"@platforms//os:windows\": [\n        ],\n        \"//conditions:default\": [\n            \"src/ray/object_manager/plasma/fling.h\",\n        ],\n    }),\n    copts = PLASMA_COPTS,\n    defines = select({\n        \"@platforms//os:windows\": PROPAGATED_WINDOWS_DEFINES,\n        \"//conditions:default\": [],\n    }),\n    linkopts = PLASMA_LINKOPTS,\n    deps = [\n        \":plasma_fbs\",\n        \":ray_common\",\n        \"//src/ray/protobuf:common_cc_proto\",\n        \"//src/ray/util\",\n        \"@msgpack\",\n    ],\n)\n\nray_cc_library(\n    name = \"plasma_store_server_lib\",\n    srcs = [\n        \"src/ray/object_manager/plasma/create_request_queue.cc\",\n        \"src/ray/object_manager/plasma/dlmalloc.cc\",\n        \"src/ray/object_manager/plasma/eviction_policy.cc\",\n        \"src/ray/object_manager/plasma/get_request_queue.cc\",\n        \"src/ray/object_manager/plasma/object_lifecycle_manager.cc\",\n        \"src/ray/object_manager/plasma/object_store.cc\",\n        \"src/ray/object_manager/plasma/plasma_allocator.cc\",\n        \"src/ray/object_manager/plasma/stats_collector.cc\",\n        \"src/ray/object_manager/plasma/store.cc\",\n        \"src/ray/object_manager/plasma/store_runner.cc\",\n    ],\n    hdrs = [\n        \"src/ray/object_manager/common.h\",\n        \"src/ray/object_manager/plasma/allocator.h\",\n        \"src/ray/object_manager/plasma/create_request_queue.h\",\n        \"src/ray/object_manager/plasma/eviction_policy.h\",\n        \"src/ray/object_manager/plasma/get_request_queue.h\",\n        \"src/ray/object_manager/plasma/object_lifecycle_manager.h\",\n        \"src/ray/object_manager/plasma/object_store.h\",\n        \"src/ray/object_manager/plasma/plasma_allocator.h\",\n        \"src/ray/object_manager/plasma/stats_collector.h\",\n        \"src/ray/object_manager/plasma/store.h\",\n        \"src/ray/object_manager/plasma/store_runner.h\",\n        \"src/ray/thirdparty/dlmalloc.c\",\n    ],\n    copts = PLASMA_COPTS,\n    linkopts = PLASMA_LINKOPTS,\n    deps = [\n        \":plasma_client\",\n        \":stats_lib\",\n        \"//src/ray/common:network\",\n    ],\n)\n\nFLATC_ARGS = [\n    \"--gen-object-api\",\n    \"--gen-mutable\",\n    \"--scoped-enums\",\n]\n\nflatbuffer_cc_library(\n    name = \"plasma_fbs\",\n    srcs = [\"src/ray/object_manager/plasma/plasma.fbs\"],\n    flatc_args = FLATC_ARGS,\n    out_prefix = \"src/ray/object_manager/plasma/\",\n)\n\n# === End of plasma definitions ===\n\nray_cc_library(\n    name = \"ray_mock\",\n    hdrs = glob(\n        [\"src/mock/**/*.h\"],\n    ),\n)\n\ncc_grpc_library(\n    name = \"ray_syncer_cc_grpc\",\n    srcs = [\"//src/ray/protobuf:ray_syncer_proto\"],\n    grpc_only = True,\n    deps = [\"//src/ray/protobuf:ray_syncer_cc_proto\"],\n)\n\nray_cc_library(\n    name = \"ray_common\",\n    deps = [\n        \":stats_metric\",\n        \"//src/ray/common:asio\",\n        \"//src/ray/common:constants\",\n        \"//src/ray/common:event_stats\",\n        \"//src/ray/common:file_system_monitor\",\n        \"//src/ray/common:grpc_util\",\n        \"//src/ray/common:id\",\n        \"//src/ray/common:memory_monitor\",\n        \"//src/ray/common:network\",\n        \"//src/ray/common:ray_config\",\n        \"//src/ray/common:ray_syncer\",\n        \"//src/ray/common:status\",\n        \"//src/ray/common:task_common\",\n        \"//src/ray/common:test_util\",\n        \"//src/ray/protobuf:gcs_cc_proto\",\n        \"@com_google_googletest//:gtest\",\n    ],\n)\n\nray_cc_binary(\n    name = \"raylet\",\n    srcs = [\"src/ray/raylet/main.cc\"],\n    visibility = [\"//java:__subpackages__\"],\n    deps = [\n        \":raylet_lib\",\n        \"//src/ray/util\",\n        \"@com_github_gflags_gflags//:gflags\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs_pub_sub_lib\",\n    srcs = [\n        \"src/ray/gcs/pubsub/gcs_pub_sub.cc\",\n    ],\n    hdrs = [\n        \"src/ray/gcs/pubsub/gcs_pub_sub.h\",\n    ],\n    deps = [\n        \":gcs\",\n        \":gcs_service_rpc\",\n        \":pubsub_lib\",\n        \":ray_common\",\n        \":redis_client\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs_server_lib\",\n    srcs = glob(\n        [\n            \"src/ray/gcs/gcs_server/*.cc\",\n        ],\n        exclude = [\n            \"src/ray/gcs/gcs_server/gcs_server_main.cc\",\n            \"src/ray/gcs/gcs_server/test/*.cc\",\n        ],\n    ),\n    hdrs = glob(\n        [\n            \"src/ray/gcs/gcs_server/*.h\",\n        ],\n    ),\n    deps = [\n        \":autoscaler_rpc\",\n        \":gcs\",\n        \":gcs_pub_sub_lib\",\n        \":gcs_service_cc_grpc\",\n        \":gcs_service_rpc\",\n        \":gcs_table_storage_lib\",\n        \":node_manager_rpc\",\n        \":observable_store_client\",\n        \":pubsub_lib\",\n        \":raylet_client_lib\",\n        \":scheduler\",\n        \":worker_rpc\",\n        \"//src/ray/protobuf:agent_manager_cc_proto\",\n        \"//src/ray/util:thread_checker\",\n        \"@boost//:bimap\",\n        \"@com_github_grpc_grpc//src/proto/grpc/health/v1:health_proto\",\n        \"@com_google_absl//absl/container:btree\",\n    ],\n)\n\nray_cc_binary(\n    name = \"gcs_server\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/gcs_server_main.cc\",\n    ],\n    visibility = [\"//java:__subpackages__\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":stats_lib\",\n        \"@com_github_gflags_gflags//:gflags\",\n    ],\n)\n\n# Ray native pubsub module.\nray_cc_library(\n    name = \"pubsub_lib\",\n    srcs = glob([\n        \"src/ray/pubsub/*.cc\",\n    ]),\n    hdrs = glob([\n        \"src/ray/pubsub/*.h\",\n    ]),\n    deps = [\n        \":pubsub_rpc\",\n        \"@boost//:any\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/synchronization\",\n    ],\n)\n\nray_cc_library(\n    name = \"stats_metric\",\n    srcs = [\n        \"src/ray/stats/metric.cc\",\n        \"src/ray/stats/metric_defs.cc\",\n        \"src/ray/stats/tag_defs.cc\",\n    ],\n    hdrs = [\n        \"src/ray/stats/metric.h\",\n        \"src/ray/stats/metric_defs.h\",\n        \"src/ray/stats/tag_defs.h\",\n    ],\n    deps = [\n        \"//src/ray/util\",\n        \"@com_github_jupp0r_prometheus_cpp//pull\",\n        \"@com_google_absl//absl/base:core_headers\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_googletest//:gtest\",\n        \"@io_opencensus_cpp//opencensus/exporters/stats/prometheus:prometheus_exporter\",\n        \"@io_opencensus_cpp//opencensus/exporters/stats/stdout:stdout_exporter\",\n        \"@io_opencensus_cpp//opencensus/stats\",\n        \"@io_opencensus_cpp//opencensus/tags\",\n    ],\n)\n\nray_cc_library(\n    name = \"stats_lib\",\n    srcs = [\n        \"src/ray/stats/metric_exporter.cc\",\n    ],\n    hdrs = [\n        \"src/ray/stats/metric.h\",\n        \"src/ray/stats/metric_exporter.h\",\n        \"src/ray/stats/stats.h\",\n        \"src/ray/stats/tag_defs.h\",\n    ],\n    linkopts = select({\n        \"@platforms//os:windows\": [\n        ],\n        \"//conditions:default\": [\n            \"-lpthread\",\n        ],\n    }),\n    deps = [\n        \":reporter_rpc\",\n        \":stats_metric\",\n        \"//src/ray/util:size_literals\",\n        \"@com_github_grpc_grpc//:grpc_opencensus_plugin\",\n    ],\n)\n\nray_cc_library(\n    name = \"scheduler\",\n    srcs = glob(\n        [\n            \"src/ray/raylet/scheduling/**/*.cc\",\n        ],\n        exclude = [\n            \"src/ray/raylet/scheduling/**/*_test.cc\",\n        ],\n    ),\n    hdrs = glob(\n        [\n            \"src/ray/raylet/scheduling/**/*.h\",\n            \"src/ray/core_worker/common.h\",\n        ],\n    ),\n    linkopts = select({\n        \"@platforms//os:windows\": [\n        ],\n        \"//conditions:default\": [\n            \"-lpthread\",\n        ],\n    }),\n    deps = [\n        \":gcs_client_lib\",\n        \":ray_common\",\n        \":stats_lib\",\n        \"//src/ray/protobuf:common_cc_proto\",\n        \"//src/ray/util\",\n        \"@boost//:asio\",\n        \"@boost//:system\",\n        \"@com_github_jupp0r_prometheus_cpp//pull\",\n        \"@com_google_absl//absl/base:core_headers\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/random\",\n        \"@com_google_absl//absl/random:bit_gen_ref\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_googletest//:gtest\",\n        \"@io_opencensus_cpp//opencensus/exporters/stats/prometheus:prometheus_exporter\",\n        \"@io_opencensus_cpp//opencensus/stats\",\n        \"@io_opencensus_cpp//opencensus/tags\",\n    ],\n)\n\nray_cc_library(\n    name = \"raylet_lib\",\n    srcs = glob(\n        [\n            \"src/ray/raylet/**/*.cc\",\n        ],\n        exclude = [\n            \"src/ray/raylet/**/*_test.cc\",\n            \"src/ray/raylet/scheduling/**/*.cc\",\n            \"src/ray/raylet/main.cc\",\n        ],\n    ),\n    hdrs = glob(\n        [\n            \"src/ray/raylet/**/*.h\",\n        ],\n        exclude = [\n            \"src/ray/raylet/scheduling/**/*.h\",\n            \"src/ray/raylet/main.cc\",\n        ],\n    ),\n    linkopts = select({\n        \"@platforms//os:windows\": [\n        ],\n        \"//conditions:default\": [\n            \"-lpthread\",\n        ],\n    }),\n    deps = [\n        \":gcs\",\n        \":gcs_client_lib\",\n        \":node_manager_fbs\",\n        \":node_manager_rpc\",\n        \":object_manager\",\n        \":plasma_client\",\n        \":pubsub_lib\",\n        \":ray_common\",\n        \":scheduler\",\n        \":stats_lib\",\n        \":worker_rpc\",\n        \"//src/ray/protobuf:agent_manager_cc_proto\",\n        \"//src/ray/protobuf:common_cc_proto\",\n        \"//src/ray/protobuf:runtime_env_agent_cc_proto\",\n        \"//src/ray/util\",\n        \"@boost//:asio\",\n        \"@boost//:beast\",\n        \"@boost//:system\",\n        \"@com_github_jupp0r_prometheus_cpp//pull\",\n        \"@com_google_absl//absl/base:core_headers\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/memory\",\n        \"@com_google_absl//absl/strings\",\n        \"@com_google_googletest//:gtest\",\n        \"@io_opencensus_cpp//opencensus/exporters/stats/prometheus:prometheus_exporter\",\n        \"@io_opencensus_cpp//opencensus/stats\",\n        \"@io_opencensus_cpp//opencensus/tags\",\n    ],\n)\n\nray_cc_library(\n    name = \"raylet_client_lib\",\n    srcs = glob([\n        \"src/ray/raylet_client/*.cc\",\n    ]),\n    hdrs = glob([\n        \"src/ray/raylet_client/*.h\",\n    ]),\n    linkopts = select({\n        \"@platforms//os:windows\": [\n        ],\n        \"//conditions:default\": [\n            \"-lpthread\",\n        ],\n    }),\n    deps = [\n        \":node_manager_fbs\",\n        \":node_manager_rpc\",\n        \":ray_common\",\n        \"//src/ray/protobuf:gcs_cc_proto\",\n        \"//src/ray/util\",\n        \"@boost//:asio\",\n    ],\n)\n\nray_cc_library(\n    name = \"core_worker_lib\",\n    srcs = glob(\n        [\n            \"src/ray/core_worker/*.cc\",\n            \"src/ray/core_worker/store_provider/*.cc\",\n            \"src/ray/core_worker/store_provider/memory_store/*.cc\",\n            \"src/ray/core_worker/transport/*.cc\",\n        ],\n        exclude = [\n            \"src/ray/core_worker/**/*_test.cc\",\n        ],\n    ),\n    hdrs = glob([\n        \"src/ray/core_worker/*.h\",\n        \"src/ray/core_worker/store_provider/*.h\",\n        \"src/ray/core_worker/store_provider/memory_store/*.h\",\n        \"src/ray/core_worker/transport/*.h\",\n    ]),\n    deps = [\n        \":gcs\",\n        \":gcs_client_lib\",\n        \":plasma_client\",\n        \":ray_common\",\n        \":raylet_client_lib\",\n        \":stats_lib\",\n        \":worker_rpc\",\n        \"//src/ray/protobuf:worker_cc_proto\",\n        \"//src/ray/util\",\n        \"@boost//:circular_buffer\",\n        \"@boost//:fiber\",\n        \"@com_google_absl//absl/cleanup\",\n        \"@com_google_absl//absl/container:btree\",\n        \"@com_google_absl//absl/container:flat_hash_map\",\n        \"@com_google_absl//absl/container:flat_hash_set\",\n        \"@com_google_absl//absl/container:node_hash_map\",\n        \"@nlohmann_json\",\n    ],\n)\n\n# This header is used to wrap some internal codes so we can reduce suspicious\n# symbols export.\nray_cc_library(\n    name = \"exported_internal\",\n    srcs =\n        [\n            \"src/ray/internal/internal.cc\",\n        ],\n    hdrs =\n        [\n            \"src/ray/internal/internal.h\",\n        ],\n    copts = COPTS,\n    strip_include_prefix = \"src\",\n    deps = [\n        \":core_worker_lib\",\n    ],\n    alwayslink = 1,\n)\n\nray_cc_test(\n    name = \"core_worker_resubmit_queue_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/core_worker_resubmit_queue_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"memory_store_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/memory_store_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"direct_actor_transport_test\",\n    srcs = [\"src/ray/core_worker/test/direct_actor_transport_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"direct_actor_transport_mock_test\",\n    srcs = [\"src/ray/core_worker/test/direct_actor_transport_mock_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_function_manager_test\",\n    srcs = [\"src/ray/gcs/gcs_server/test/gcs_function_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"dependency_resolver_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/dependency_resolver_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"normal_task_submitter_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/normal_task_submitter_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"reference_count_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/reference_count_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"object_recovery_manager_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/object_recovery_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"scheduling_queue_test\",\n    srcs = [\"src/ray/core_worker/test/scheduling_queue_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"concurrency_group_manager_test\",\n    srcs = [\"src/ray/core_worker/test/concurrency_group_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"fiber_state_test\",\n    srcs = [\"src/ray/core_worker/test/fiber_state_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"actor_submit_queue_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/actor_submit_queue_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"task_manager_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/task_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"task_event_buffer_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/task_event_buffer_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"task_event_buffer_export_event_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/task_event_buffer_export_event_test.cc\"],\n    tags = [\n        \"no_windows\",\n        \"team:core\",\n    ],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"actor_creator_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/actor_creator_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":gcs_client_lib\",\n        \":ray_mock\",\n        \"//src/ray/common:test_util\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"generator_waiter_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/generator_waiter_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":gcs_client_lib\",\n        \":ray_mock\",\n        \"//src/ray/common:test_util\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"actor_manager_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/actor_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"lease_policy_test\",\n    size = \"small\",\n    srcs = [\"src/ray/core_worker/test/lease_policy_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":core_worker_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"cluster_resource_scheduler_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/scheduling/cluster_resource_scheduler_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":ray_mock\",\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"local_resource_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/scheduling/local_resource_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":ray_mock\",\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"cluster_resource_scheduler_2_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/scheduling/cluster_resource_scheduler_2_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"scheduling_policy_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/scheduling/policy/scheduling_policy_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"hybrid_scheduling_policy_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/scheduling/policy/hybrid_scheduling_policy_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":scheduler\",\n        \"@com_google_absl//absl/random:mock_distributions\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"cluster_task_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/scheduling/cluster_task_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":ray_mock\",\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"cluster_resource_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/scheduling/cluster_resource_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"local_object_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/test/local_object_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"pull_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/object_manager/test/pull_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":object_manager\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"object_buffer_pool_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/object_manager/test/object_buffer_pool_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":object_manager\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"ownership_based_object_directory_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/object_manager/test/ownership_based_object_directory_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":object_manager\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"push_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/object_manager/test/push_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"spilled_object_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/object_manager/test/spilled_object_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":raylet_lib\",\n        \"@boost//:endian\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"fallback_allocator_test\",\n    srcs = [\n        \"src/ray/object_manager/plasma/test/fallback_allocator_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":plasma_store_server_lib\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"object_store_test\",\n    srcs = [\n        \"src/ray/object_manager/plasma/test/object_store_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":plasma_store_server_lib\",\n        \"@com_google_absl//absl/random\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"mutable_object_test\",\n    srcs = [\n        \"src/ray/object_manager/plasma/test/mutable_object_test.cc\",\n    ],\n    tags = [\n        \"no_windows\",\n        \"team:core\",\n    ],\n    target_compatible_with = [\n        \"@platforms//os:linux\",\n    ],\n    deps = [\n        \":core_worker_lib\",\n        \":plasma_store_server_lib\",\n        \"@com_google_absl//absl/random\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"mutable_object_provider_test\",\n    srcs = [\n        \"src/ray/core_worker/test/mutable_object_provider_test.cc\",\n    ],\n    tags = [\n        \"no_tsan\",\n        \"no_windows\",\n        \"team:core\",\n    ],\n    target_compatible_with = select({\n        \"@platforms//os:osx\": [],\n        \"@platforms//os:linux\": [],\n        \"//conditions:default\": [\"@platforms//:incompatible\"],\n    }),\n    deps = [\n        \":core_worker_lib\",\n        \":plasma_store_server_lib\",\n        \"@com_google_absl//absl/random\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"object_lifecycle_manager_test\",\n    srcs = [\n        \"src/ray/object_manager/plasma/test/object_lifecycle_manager_test.cc\",\n        \"src/ray/object_manager/plasma/test/stats_collector_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":plasma_store_server_lib\",\n        \"@com_google_absl//absl/random\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"eviction_policy_test\",\n    srcs = [\n        \"src/ray/object_manager/plasma/test/eviction_policy_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":plasma_store_server_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"create_request_queue_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/object_manager/test/create_request_queue_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":plasma_store_server_lib\",\n        \"@com_google_googletest//:gtest\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"get_request_queue_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/object_manager/test/get_request_queue_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":plasma_store_server_lib\",\n        \"@com_google_googletest//:gtest\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"worker_pool_test\",\n    size = \"small\",\n    srcs = [\"src/ray/raylet/worker_pool_test.cc\"],\n    tags = [\n        \"no_tsan\",\n        \"team:core\",\n    ],\n    deps = [\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_placement_group_manager_mock_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_placement_group_manager_mock_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"placement_group_resource_manager_test\",\n    size = \"small\",\n    srcs = [\"src/ray/raylet/placement_group_resource_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \"gcs_test_util_lib\",\n        \"ray_common\",\n        \"raylet_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"runtime_env_agent_client_test\",\n    size = \"small\",\n    srcs = [\"src/ray/raylet/runtime_env_agent_client_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \"gcs_test_util_lib\",\n        \"ray_common\",\n        \"raylet_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"dependency_manager_test\",\n    size = \"small\",\n    srcs = [\"src/ray/raylet/dependency_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"local_task_manager_test\",\n    size = \"small\",\n    srcs = [\"src/ray/raylet/local_task_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":ray_mock\",\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"wait_manager_test\",\n    size = \"small\",\n    srcs = [\"src/ray/raylet/wait_manager_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"worker_killing_policy_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/worker_killing_policy_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":ray_common\",\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"worker_killing_policy_group_by_owner_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/worker_killing_policy_group_by_owner_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":ray_common\",\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"worker_killing_policy_retriable_fifo_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/raylet/worker_killing_policy_retriable_fifo_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":ray_common\",\n        \":raylet_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"pubsub_integration_test\",\n    size = \"small\",\n    srcs = [\"src/ray/pubsub/test/integration_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":pubsub_cc_grpc\",\n        \":pubsub_lib\",\n        \"//src/ray/protobuf:pubsub_cc_proto\",\n        \"@com_google_absl//absl/synchronization\",\n        \"@com_google_absl//absl/time\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"publisher_test\",\n    size = \"small\",\n    srcs = [\"src/ray/pubsub/test/publisher_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":pubsub_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"subscriber_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/pubsub/test/subscriber_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":pubsub_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"stats_test\",\n    size = \"small\",\n    srcs = [\"src/ray/stats/stats_test.cc\"],\n    tags = [\n        \"no_tsan\",\n        \"stats\",\n        \"team:core\",\n    ],\n    deps = [\n        \":stats_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"metric_exporter_grpc_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/stats/metric_exporter_grpc_test.cc\",\n    ],\n    tags = [\n        \"stats\",\n        \"team:core\",\n    ],\n    deps = [\n        \":stats_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs_test_util_lib\",\n    hdrs = [\n        \"src/ray/gcs/test/gcs_test_util.h\",\n    ],\n    deps = [\n        \":gcs\",\n        \":gcs_service_rpc\",\n    ],\n)\n\nray_cc_test(\n    name = \"grpc_server_client_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/rpc/test/grpc_server_client_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":grpc_common_lib\",\n        \":test_service_cc_grpc\",\n    ],\n)\n\nray_cc_test(\n    name = \"rpc_chaos_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/rpc/test/rpc_chaos_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":grpc_common_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"core_worker_client_pool_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/rpc/worker/test/core_worker_client_pool_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":worker_rpc\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_server_rpc_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_server_rpc_test.cc\",\n    ],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    tags = [\n        \"no_tsan\",\n        \"no_windows\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_test_util_lib\",\n        \"@com_google_googletest//:gtest\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_kv_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_kv_manager_test.cc\",\n    ],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_test_util_lib\",\n        \"@com_google_googletest//:gtest\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs_server_test_util\",\n    hdrs = [\n        \"src/ray/gcs/gcs_server/test/gcs_server_test_util.h\",\n    ],\n    deps = [\n        \":gcs_client_lib\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_health_check_manager_test\",\n    size = \"medium\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_health_check_manager_test.cc\",\n    ],\n    tags = [\n        \"no_windows\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_server_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_node_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_node_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_job_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_job_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_task_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_task_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_placement_group_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_placement_group_manager_test.cc\",\n    ],\n    tags = [\n        \"no_tsan\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_placement_group_scheduler_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_placement_group_scheduler_test.cc\",\n    ],\n    tags = [\n        \"no_tsan\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_actor_scheduler_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_actor_scheduler_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_client_lib\",\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_actor_scheduler_mock_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_actor_scheduler_mock_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_actor_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_actor_manager_test.cc\",\n    ],\n    tags = [\n        \"no_tsan\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_worker_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_worker_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs_table_storage_lib\",\n    srcs = glob(\n        [\n            \"src/ray/gcs/gcs_server/gcs_table_storage.cc\",\n        ],\n    ),\n    hdrs = glob(\n        [\n            \"src/ray/gcs/gcs_server/gcs_table_storage.h\",\n        ],\n    ),\n    deps = [\n        \":gcs\",\n        \":gcs_in_memory_store_client\",\n        \":observable_store_client\",\n        \":pubsub_lib\",\n        \":ray_common\",\n        \":redis_store_client\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs_table_storage_test_lib\",\n    hdrs = [\n        \"src/ray/gcs/gcs_server/test/gcs_table_storage_test_base.h\",\n    ],\n    deps = [\n        \"redis_store_client\",\n    ],\n)\n\nray_cc_test(\n    name = \"redis_gcs_table_storage_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/redis_gcs_table_storage_test.cc\",\n    ],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_table_storage_lib\",\n        \":gcs_table_storage_test_lib\",\n        \":gcs_test_util_lib\",\n        \":store_client_test_lib\",\n        \"@com_google_googletest//:gtest\",\n    ],\n)\n\nray_cc_test(\n    name = \"in_memory_gcs_table_storage_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/in_memory_gcs_table_storage_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_table_storage_lib\",\n        \":gcs_table_storage_test_lib\",\n        \":gcs_test_util_lib\",\n        \":store_client_test_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_autoscaler_state_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_autoscaler_state_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_resource_manager_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/gcs_resource_manager_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"usage_stats_client_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_server/test/usage_stats_client_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs_client_lib\",\n    srcs = [\n        \"src/ray/gcs/gcs_client/accessor.cc\",\n        \"src/ray/gcs/gcs_client/gcs_client.cc\",\n    ],\n    hdrs = [\n        \"src/ray/gcs/gcs_client/accessor.h\",\n        \"src/ray/gcs/gcs_client/gcs_client.h\",\n    ],\n    deps = [\n        \":gcs\",\n        \":gcs_pub_sub_lib\",\n        \":gcs_service_rpc\",\n        \":pubsub_lib\",\n        \":ray_common\",\n        \":redis_store_client\",\n        \"//src/ray/protobuf:usage_cc_proto\",\n    ],\n)\n\nray_cc_library(\n    name = \"global_state_accessor_lib\",\n    srcs = glob(\n        [\n            \"src/ray/gcs/gcs_client/global_state_accessor.cc\",\n        ],\n    ),\n    hdrs = glob(\n        [\n            \"src/ray/gcs/gcs_client/global_state_accessor.h\",\n        ],\n    ),\n    deps = [\n        \":gcs_client_lib\",\n    ],\n)\n\nray_cc_test(\n    name = \"accessor_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_client/test/accessor_test.cc\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_client_lib\",\n        \":gcs_test_util_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"global_state_accessor_test\",\n    size = \"small\",\n    srcs = [\n        \"src/ray/gcs/gcs_client/test/global_state_accessor_test.cc\",\n    ],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_client_lib\",\n        \":gcs_server_lib\",\n        \":gcs_test_util_lib\",\n        \":global_state_accessor_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_client_test\",\n    size = \"medium\",\n    srcs = [\n        \"src/ray/gcs/gcs_client/test/gcs_client_test.cc\",\n    ],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    tags = [\n        \"no_tsan\",\n        \"team:core\",\n        \"exclusive\",\n    ],\n    deps = [\n        \":gcs_client_lib\",\n        \":gcs_server_lib\",\n        \":gcs_test_util_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_client_reconnection_test\",\n    srcs = [\n        \"src/ray/gcs/gcs_client/test/gcs_client_reconnection_test.cc\",\n    ],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    tags = [\n        \"no_windows\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_client_lib\",\n        \":gcs_server_lib\",\n        \":gcs_test_util_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_library(\n    name = \"object_manager\",\n    srcs = glob([\n        \"src/ray/object_manager/*.cc\",\n        \"src/ray/object_manager/notification/*.cc\",\n    ]),\n    hdrs = glob([\n        \"src/ray/object_manager/*.h\",\n        \"src/ray/object_manager/notification/*.h\",\n    ]),\n    deps = [\n        \":core_worker_lib\",\n        \":gcs\",\n        \":object_manager_rpc\",\n        \":plasma_store_server_lib\",\n        \":ray_common\",\n        \"//src/ray/util\",\n        \"@boost//:asio\",\n    ],\n)\n\nray_cc_library(\n    name = \"platform_shims\",\n    srcs = [] + select({\n        \"@platforms//os:windows\": glob([\n            \"src/shims/windows/**/*.c\",\n            \"src/shims/windows/**/*.cc\",\n            \"src/shims/windows/**/*.h\",\n        ]),\n        \"//conditions:default\": [],\n    }),\n    hdrs = [] + select({\n        \"@platforms//os:windows\": glob([\n            \"src/shims/windows/**/*.h\",\n        ]),\n        \"//conditions:default\": [],\n    }),\n    strip_include_prefix = select({\n        \"@platforms//os:windows\": \"src/shims/windows\",\n        \"//conditions:default\": \"\",\n    }),\n)\n\nfilegroup(\n    name = \"extra_actions_base_proto\",\n    srcs = [\n        \"thirdparty/protobuf/extra_actions_base.proto\",\n    ],\n)\n\nproto_library(\n    name = \"extra_actions_base_proto_lib\",\n    srcs = [\"thirdparty/protobuf/extra_actions_base.proto\"],\n)\n\ncc_proto_library(\n    name = \"extra_actions_cc_proto_lib\",\n    deps = [\":extra_actions_base_proto_lib\"],\n)\n\nfilegroup(\n    name = \"iwyu_sh\",\n    srcs = [\"ci/run/iwyu.sh\"],\n)\n\naction_listener(\n    name = \"iwyu_cpp\",\n    extra_actions = [\":iwyu_action\"],\n    mnemonics = [\"CppCompile\"],\n)\n\nextra_action(\n    name = \"iwyu_action\",\n    cmd = \"$(location :iwyu_sh) postbuild $(location @com_google_protobuf//:protoc) $(location :extra_actions_base_proto) --extra_action_file=$(EXTRA_ACTION_FILE) > $(output $(ACTION_ID).iwyu.txt)\",\n    out_templates = [\n        \"$(ACTION_ID).iwyu.txt\",\n    ],\n    tools = [\n        \":extra_actions_base_proto\",\n        \":iwyu_sh\",\n        \"@com_google_protobuf//:protoc\",\n    ],\n)\n\nray_cc_library(\n    name = \"sha256\",\n    srcs = [\n        \"src/ray/thirdparty/sha256.c\",\n    ],\n    hdrs = [\n        \"src/ray/thirdparty/sha256.h\",\n    ],\n)\n\nray_cc_library(\n    name = \"aligned_alloc\",\n    srcs = [\n        \"src/ray/thirdparty/aligned_alloc.c\",\n    ],\n    hdrs = [\n        \"src/ray/thirdparty/aligned_alloc.h\",\n    ],\n)\n\nalias(\n    name = \"hiredis\",\n    actual = \"@com_github_redis_hiredis//:hiredis\",\n)\n\nray_cc_library(\n    name = \"redis_client\",\n    srcs = [\n        \"src/ray/gcs/redis_async_context.cc\",\n        \"src/ray/gcs/redis_client.cc\",\n        \"src/ray/gcs/redis_context.cc\",\n    ],\n    hdrs = [\n        \"src/ray/gcs/redis_async_context.h\",\n        \"src/ray/gcs/redis_client.h\",\n        \"src/ray/gcs/redis_context.h\",\n    ],\n    deps = [\n        \":hiredis\",\n        \":ray_common\",\n        \":stats_lib\",\n        \"//src/ray/util\",\n        \"@boost//:asio\",\n    ],\n)\n\nray_cc_library(\n    name = \"redis_store_client\",\n    srcs = [\n        \"src/ray/gcs/store_client/redis_store_client.cc\",\n    ],\n    hdrs = [\n        \"src/ray/gcs/callback.h\",\n        \"src/ray/gcs/store_client/redis_store_client.h\",\n        \"src/ray/gcs/store_client/store_client.h\",\n    ],\n    deps = [\n        \"redis_client\",\n        \"@com_google_absl//absl/strings:str_format\",\n        \"@com_google_absl//absl/synchronization\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs_in_memory_store_client\",\n    srcs = [\n        \"src/ray/gcs/store_client/in_memory_store_client.cc\",\n    ],\n    hdrs = [\n        \"src/ray/gcs/callback.h\",\n        \"src/ray/gcs/store_client/in_memory_store_client.h\",\n        \"src/ray/gcs/store_client/store_client.h\",\n    ],\n    deps = [\n        \":ray_common\",\n        \"//src/ray/util\",\n        \"@com_google_absl//absl/container:node_hash_map\",\n    ],\n)\n\nray_cc_library(\n    name = \"observable_store_client\",\n    srcs = [\n        \"src/ray/gcs/store_client/observable_store_client.cc\",\n    ],\n    hdrs = [\n        \"src/ray/gcs/callback.h\",\n        \"src/ray/gcs/store_client/observable_store_client.h\",\n        \"src/ray/gcs/store_client/store_client.h\",\n    ],\n    deps = [\n        \":ray_common\",\n        \"//src/ray/util\",\n    ],\n)\n\nray_cc_library(\n    name = \"store_client_test_lib\",\n    hdrs = [\n        \"src/ray/gcs/store_client/test/store_client_test_base.h\",\n    ],\n    deps = [\n        \"redis_store_client\",\n    ],\n)\n\nray_cc_test(\n    name = \"redis_store_client_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/store_client/test/redis_store_client_test.cc\"],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":redis_store_client\",\n        \":store_client_test_lib\",\n        \"@boost//:optional\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"chaos_redis_store_client_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/store_client/test/redis_store_client_test.cc\"],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    env = {\"REDIS_CHAOS\": \"1\"},\n    tags = [\n        \"no_windows\",\n        \"team:core\",\n    ],\n    target_compatible_with = [\n        \"@platforms//os:linux\",\n    ],\n    deps = [\n        \":redis_store_client\",\n        \":store_client_test_lib\",\n        \"@boost//:optional\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"in_memory_store_client_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/store_client/test/in_memory_store_client_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_in_memory_store_client\",\n        \":store_client_test_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"observable_store_client_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/store_client/test/in_memory_store_client_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs_in_memory_store_client\",\n        \":observable_store_client\",\n        \":store_client_test_lib\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_library(\n    name = \"gcs\",\n    srcs = glob(\n        [\n            \"src/ray/gcs/*.cc\",\n        ],\n        exclude = [\n            \"src/ray/gcs/*_test.cc\",\n        ],\n    ),\n    hdrs = glob([\n        \"src/ray/gcs/*.h\",\n    ]),\n    deps = [\n        \":hiredis\",\n        \":node_manager_fbs\",\n        \":node_manager_rpc\",\n        \":ray_common\",\n        \":stats_lib\",\n        \"//src/ray/protobuf:agent_manager_cc_proto\",\n        \"//src/ray/protobuf:gcs_cc_proto\",\n        \"//src/ray/protobuf:gcs_service_cc_proto\",\n        \"//src/ray/util\",\n        \"@boost//:asio\",\n    ],\n)\n\nray_cc_test(\n    name = \"callback_reply_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/test/callback_reply_test.cc\"],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"redis_async_context_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/test/redis_async_context_test.cc\"],\n    args = [\n        \"$(location redis-server)\",\n        \"$(location redis-cli)\",\n    ],\n    data = [\n        \"//:redis-cli\",\n        \"//:redis-server\",\n    ],\n    tags = [\"team:core\"],\n    deps = [\n        \":gcs\",\n        \"//src/ray/util\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_job_manager_export_event_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/gcs_server/test/export_api/gcs_job_manager_export_event_test.cc\"],\n    tags = [\n        \"no_windows\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_actor_manager_export_event_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/gcs_server/test/export_api/gcs_actor_manager_export_event_test.cc\"],\n    tags = [\n        \"no_windows\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nray_cc_test(\n    name = \"gcs_node_manager_export_event_test\",\n    size = \"small\",\n    srcs = [\"src/ray/gcs/gcs_server/test/export_api/gcs_node_manager_export_event_test.cc\"],\n    tags = [\n        \"no_windows\",\n        \"team:core\",\n    ],\n    deps = [\n        \":gcs_server_lib\",\n        \":gcs_server_test_util\",\n        \":gcs_test_util_lib\",\n        \":ray_mock\",\n        \"@com_google_googletest//:gtest_main\",\n    ],\n)\n\nflatbuffer_cc_library(\n    name = \"node_manager_fbs\",\n    srcs = [\"src/ray/raylet/format/node_manager.fbs\"],\n    flatc_args = FLATC_ARGS,\n    out_prefix = \"ray/raylet/format/\",\n)\n\nray_cc_library(\n    name = \"python_callbacks\",\n    hdrs = [\n        \"src/ray/gcs/gcs_client/python_callbacks.h\",\n    ],\n)\n\npyx_library(\n    name = \"_raylet\",\n    srcs = glob([\n        \"python/ray/__init__.py\",\n        \"python/ray/_raylet.pxd\",\n        \"python/ray/_raylet.pyx\",\n        \"python/ray/includes/*.pxd\",\n        \"python/ray/includes/*.pxi\",\n    ]),\n    # Export ray ABI symbols, which can then be used by _streaming.so.\n    # We need to dlopen this lib with RTLD_GLOBAL to use ABI in this\n    # shared lib, see python/ray/__init__.py.\n    cc_kwargs = dict(\n        srcs = PYX_SRCS,\n        copts = COPTS + PYX_COPTS,\n        # see https://github.com/tensorflow/tensorflow/blob/r2.1/tensorflow/lite/BUILD#L444\n        linkopts = select({\n            \"@platforms//os:osx\": [\n                \"-Wl,-exported_symbols_list,$(location //:src/ray/ray_exported_symbols.lds)\",\n            ],\n            \"@platforms//os:windows\": [],\n            \"//conditions:default\": [\n                \"-Wl,--version-script,$(location //:src/ray/ray_version_script.lds)\",\n            ],\n        }),\n        linkstatic = 1,\n    ),\n    deps = [\n        \":python_callbacks\",\n        \"//:core_worker_lib\",\n        \"//:exported_internal\",\n        \"//:gcs_server_lib\",\n        \"//:global_state_accessor_lib\",\n        \"//:raylet_lib\",\n        \"//:redis_client\",\n        \"//:src/ray/ray_exported_symbols.lds\",\n        \"//:src/ray/ray_version_script.lds\",\n        \"//:stats_lib\",\n        \"//src/ray/protobuf:serialization_cc_proto\",\n        \"//src/ray/util\",\n    ],\n)\n\nray_cc_binary(\n    name = \"libcore_worker_library_java.so\",\n    srcs = glob([\n        \"src/ray/core_worker/lib/java/*.h\",\n        \"src/ray/core_worker/lib/java/*.cc\",\n    ]),\n    # Export ray ABI symbols, which can then be used by libstreaming_java.so. see `//:_raylet`\n    linkopts = select({\n        \"@platforms//os:osx\": [\n            \"-Wl,-exported_symbols_list,$(location //:src/ray/ray_exported_symbols.lds)\",\n        ],\n        \"@platforms//os:windows\": [],\n        \"//conditions:default\": [\n            \"-Wl,--version-script,$(location //:src/ray/ray_version_script.lds)\",\n        ],\n    }),\n    linkshared = 1,\n    linkstatic = 1,\n    visibility = [\"//java:__subpackages__\"],\n    deps = [\n        \"//:core_worker_lib\",\n        \"//:exported_internal\",\n        \"//:global_state_accessor_lib\",\n        \"//:src/ray/ray_exported_symbols.lds\",\n        \"//:src/ray/ray_version_script.lds\",\n        \"//:stats_lib\",\n        \"@bazel_tools//tools/jdk:jni\",\n    ],\n)\n\nfilegroup(\n    name = \"python_sources\",\n    srcs = glob([\n        \"python/ray/*.py\",\n        \"python/ray/autoscaler/*.py\",\n        \"python/ray/autoscaler/_private/*.py\",\n        \"python/ray/autoscaler/_private/_azure/*.json\",\n        \"python/ray/autoscaler/aws/defaults.yaml\",\n        \"python/ray/autoscaler/azure/defaults.yaml\",\n        \"python/ray/autoscaler/gcp/defaults.yaml\",\n        \"python/ray/autoscaler/local/defaults.yaml\",\n        \"python/ray/autoscaler/vsphere/defaults.yaml\",\n        \"python/ray/cloudpickle/*.py\",\n        \"python/ray/core/__init__.py\",\n        \"python/ray/core/generated/__init__.py\",\n        \"python/ray/core/generated/ray/__init__.py\",\n        \"python/ray/core/generated/ray/protocol/__init__.py\",\n        \"python/ray/dashboard/**/*.py\",\n        \"python/ray/experimental/*.py\",\n        \"python/ray/util/*.py\",\n        \"python/ray/internal/*.py\",\n        \"python/ray/workers/default_worker.py\",\n    ]),\n)\n\nalias(\n    name = \"redis-server\",\n    actual = select({\n        \"@platforms//os:windows\": \"@com_github_tporadowski_redis_bin//:redis-server.exe\",\n        \"//conditions:default\": \"@com_github_antirez_redis//:redis-server\",\n    }),\n)\n\nalias(\n    name = \"redis-cli\",\n    actual = select({\n        \"@platforms//os:windows\": \"@com_github_tporadowski_redis_bin//:redis-cli.exe\",\n        \"//conditions:default\": \"@com_github_antirez_redis//:redis-cli\",\n    }),\n)\n\nfilegroup(\n    name = \"all_py_proto\",\n    srcs = [\n        \"//src/ray/protobuf:agent_manager_py_proto\",\n        \"//src/ray/protobuf:autoscaler_py_proto\",\n        \"//src/ray/protobuf:common_py_proto\",\n        \"//src/ray/protobuf:core_worker_py_proto\",\n        \"//src/ray/protobuf:event_py_proto\",\n        \"//src/ray/protobuf:export_event_py_proto\",\n        \"//src/ray/protobuf:gcs_py_proto\",\n        \"//src/ray/protobuf:gcs_service_py_proto\",\n        \"//src/ray/protobuf:instance_manager_py_proto\",\n        \"//src/ray/protobuf:node_manager_py_proto\",\n        \"//src/ray/protobuf:ray_client_py_proto\",\n        \"//src/ray/protobuf:reporter_py_proto\",\n        \"//src/ray/protobuf:runtime_env_agent_py_proto\",\n        \"//src/ray/protobuf:runtime_env_common_py_proto\",\n        \"//src/ray/protobuf:usage_py_proto\",\n    ],\n)\n\nfilegroup(\n    name = \"serve_py_proto\",\n    srcs = [\n        \"//src/ray/protobuf:serve_py_proto\",\n    ],\n)\n\n# This is a dummy test dependency that causes the python tests to be\n# re-run if any of these files changes.\npy_library(\n    name = \"ray_lib\",\n    srcs = glob(\n        [\"python/ray/**/*.py\"],\n        exclude = [\"python/ray/tests/*.py\"],\n    ),\n    visibility = [\"__subpackages__\"],\n)\n\ncopy_to_workspace(\n    name = \"cp_raylet_so\",\n    srcs = [\"python/ray/_raylet.so\"],\n    dstdir = \"python/ray\",\n)\n\ncopy_to_workspace(\n    name = \"cp_all_py_proto\",\n    srcs = [\":all_py_proto\"],\n    dstdir = \"python/ray/core/generated\",\n)\n\ncopy_to_workspace(\n    name = \"cp_serve_py_proto\",\n    srcs = [\":serve_py_proto\"],\n    dstdir = \"python/ray/serve/generated\",\n)\n\ncopy_to_workspace(\n    name = \"cp_redis\",\n    srcs = [\n        \":redis-cli\",\n        \":redis-server\",\n    ],\n    dstdir = \"python/ray/core/src/ray/thirdparty/redis/src\",\n)\n\ncopy_to_workspace(\n    name = \"cp_raylet\",\n    srcs = [\":raylet\"],\n    dstdir = \"python/ray/core/src/ray/raylet\",\n)\n\ncopy_to_workspace(\n    name = \"cp_gcs_server\",\n    srcs = [\":gcs_server\"],\n    dstdir = \"python/ray/core/src/ray/gcs\",\n)\n\ncopy_to_workspace(\n    name = \"cp_jemalloc\",\n    srcs = [\"@jemalloc//:shared\"],\n    dstdir = \"python/ray/core/\",\n)\n\ngenrule(\n    name = \"install_py_proto\",\n    srcs = [\n        \":cp_all_py_proto\",\n        \":cp_serve_py_proto\",\n    ],\n    outs = [\"install_py_proto.out\"],\n    cmd = \"\"\"\n        # NOTE(hchen): Protobuf doesn't allow specifying Python package name. So we use this `sed`\n        # command to change the import path in the generated file.\n        # shellcheck disable=SC2006\n        files=(\n            `ls python/ray/core/generated/*_pb2*.py` \\\n            `ls python/ray/serve/generated/*_pb2*.py` \\\n            )\n        sed -i -E 's/from src.ray.protobuf/from ./' \"$${files[@]}\"\n        # Help the generated serve files to have the correct module\n        serve_files=(`ls python/ray/serve/generated/*_pb2*.py`)\n        sed -i -E 's/'\"'\"'src.ray.protobuf./'\"'\"'ray.serve.generated./' \"$${serve_files[@]}\"\n        # TODO(sang): Build our own proto instead of creating a new proto for opencensus separately.\n        # https://github.com/ray-project/ray/issues/31358\n        sed -i -E 's/from opencensus.proto.metrics.v1 import/from . import/' \"$${files[@]}\"\n        sed -i -E 's/from opencensus.proto.resource.v1 import/from . import/' \"$${files[@]}\"\n        # TODO(rickyx): Remove this experimental path rewrite once we move autoscaler proto out\n        # of experimental.\n        autoscale_files=(`ls python/ray/core/generated/instance_manager_pb2*.py`)\n        sed -i -E 's/from ..experimental/from ./' \"$${autoscale_files[@]}\"\n        # Help the generated export api files to have the correct module\n        export_api_files=(`ls python/ray/core/generated/export*_pb2*.py`)\n        sed -i -E 's/from ..export_api/from ./' \"$${export_api_files[@]}\"\n        echo \"$${PWD}\" > $@\n    \"\"\",\n    local = 1,\n)\n\ngenrule(\n    name = \"ray_pkg\",\n    srcs = [\n        \":cp_raylet_so\",\n        \":python_sources\",\n        \":install_py_proto\",\n        \":cp_redis\",\n        \":cp_raylet\",\n        \":cp_gcs_server\",\n    ] + select({\n        \":jemalloc\": [\n            \":cp_jemalloc\",\n        ],\n        \"//conditions:default\": [],\n    }),\n    outs = [\"ray_pkg.out\"],\n    cmd = \"\"\"\n        if [ \"$${OSTYPE-}\" = \"msys\" ]; then\n            ln -P -f -- python/ray/_raylet.so python/ray/_raylet.pyd\n        fi\n        echo \"$${PWD}\" > $@\n    \"\"\",\n    local = 1,\n)\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 1.9013671875,
          "content": "Contributing to Ray\n===================\n\nReporting bugs and asking questions\n-----------------------------------\n\nYou can post questions or issues or feedback through the following channels:\n\n1. `Discourse forum`_: For discussions about development and questions about usage.\n2. `GitHub Issues`_: For bug reports and feature requests.\n3. `StackOverflow`_\n\nTo contribute a patch:\n----------------------\n\nWe welcome contributions! See `Getting Involved`_. To set up your development environment, see\nthe `Setting up your development environment`_ section.\n\n\n.. _`Discourse forum`: https://discuss.ray.io/\n.. _`GitHub Issues`: https://github.com/ray-project/ray/issues\n.. _`StackOverflow`: https://stackoverflow.com/questions/tagged/ray\n.. _`Getting Involved`: https://docs.ray.io/en/latest/ray-contribute/getting-involved.html\n.. _`Setting up your development environment`: https://docs.ray.io/en/latest/ray-contribute/getting-involved.html#setting-up-your-development-environment\n\nPR Review Process\n-----------------\n\nFor contributors who are in the ray-project organization:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- When you first create a PR, add an reviewer to the `assignee` section.\n- Assignees will review your PR and add `@author-action-required` label if further actions are required.\n- Address their comments and remove `@author-action-required` label from the PR.\n- Repeat this process until assignees approve your PR.\n- Once the PR is approved, the author is in charge of ensuring the PR passes the build. Add `test-ok` label if the build succeeds.\n- Committers will merge the PR once the build is passing.\n\nFor contributors who are not in the ray-project organization:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Your PRs will have assignees shortly. Assignees or PRs will be actively engaging with contributors to merge the PR.\n- Please actively ping assignees after you address your comments!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 24.921875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2023 Ray Authors\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n--------------------------------------------------------------------------------\n\nCode in python/ray/rllib/{evolution_strategies, dqn} adapted from\nhttps://github.com/openai (MIT License)\n\nCopyright (c) 2016 OpenAI (http://openai.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nCode in python/ray/rllib/impala/vtrace.py from\nhttps://github.com/deepmind/scalable_agent\n\nCopyright 2018 Google LLC\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n--------------------------------------------------------------------------------\nCode in python/ray/rllib/ars is adapted from https://github.com/modestyachts/ARS\n\nCopyright (c) 2018, ARS contributors (Horia Mania, Aurelia Guy, Benjamin Recht)\nAll rights reserved.\n\nRedistribution and use of ARS in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n------------------\nCode in python/ray/_private/prometheus_exporter.py is adapted from https://github.com/census-instrumentation/opencensus-python/blob/master/contrib/opencensus-ext-prometheus/opencensus/ext/prometheus/stats_exporter/__init__.py\n\n# Copyright 2018, OpenCensus Authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n--------------------------------------------------------------------------------\nCode in python/ray/tests/modin/test_modin and\npython/ray/tests/modin/modin_test_utils adapted from:\n- http://github.com/modin-project/modin/master/modin/pandas/test/test_general.py\n- http://github.com/modin-project/modin/master/modin/pandas/test/utils.py\n\nCopyright (c) 2018-2020 Modin Developers.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n--------------------------------------------------------------------------------\nCode in src/ray/util/logging.h is adapted from\nhttps://github.com/google/glog/blob/master/src/glog/logging.h.in\n\nCopyright (c) 2008, Google Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\nCode in python/ray/_private/runtime_env/conda_utils.py is adapted from\nhttps://github.com/mlflow/mlflow/blob/master/mlflow/utils/conda.py\n\nCopyright (c) 2018, Databricks, Inc.\nAll rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n--------------------------------------------------------------------------------\nCode in python/ray/_private/runtime_env/_clonevirtualenv.py is adapted from https://github.com/edwardgeorge/virtualenv-clone/blob/master/clonevirtualenv.py\n\nCopyright (c) 2011, Edward George, based on code contained within the\nvirtualenv project.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n---------------------------------------------------------------------------------------------------------------\nCode in python/ray/_private/thirdparty/tabulate/tabulate.py is adapted from https://github.com/astanin/python-tabulate/blob/4892c6e9a79638c7897ccea68b602040da9cc7a7/tabulate.py\n\nCopyright (c) 2011-2020 Sergey Astanin and contributors\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n--------------------------------------------------------------------------------\nCode in python/ray/_private/thirdparty/dacite is adapted from https://github.com/konradhalas/dacite/blob/master/dacite\n\nCopyright (c) 2018 Konrad Hałas\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n--------------------------------------------------------------------------------\n\nCode in python/ray/autoscaler/_private/kuberay/utils.py is adapted from https://github.com/kubernetes-client/python/blob/master/kubernetes/utils/quantity.py\n\nCopyright 2019 The Kubernetes Authors.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n--------------------------------------------------------------------------------\n\nCode in python/ray/_private/thirdparty/pynvml is adapted from https://pypi.org/project/nvidia-ml-py\n\nCopyright (c) 2011-2022, NVIDIA Corporation.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of staged-recipes nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 6.38671875,
          "content": ".. image:: https://github.com/ray-project/ray/raw/master/doc/source/images/ray_header_logo.png\n\n.. image:: https://readthedocs.org/projects/ray/badge/?version=master\n    :target: http://docs.ray.io/en/master/?badge=master\n\n.. image:: https://img.shields.io/badge/Ray-Join%20Slack-blue\n    :target: https://forms.gle/9TSdDYUgxYs8SA9e8\n\n.. image:: https://img.shields.io/badge/Discuss-Ask%20Questions-blue\n    :target: https://discuss.ray.io/\n\n.. image:: https://img.shields.io/twitter/follow/raydistributed.svg?style=social&logo=twitter\n    :target: https://twitter.com/raydistributed\n\n.. image:: https://img.shields.io/badge/Get_started_for_free-3C8AE9?logo=data%3Aimage%2Fpng%3Bbase64%2CiVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8%2F9hAAAAAXNSR0IArs4c6QAAAERlWElmTU0AKgAAAAgAAYdpAAQAAAABAAAAGgAAAAAAA6ABAAMAAAABAAEAAKACAAQAAAABAAAAEKADAAQAAAABAAAAEAAAAAA0VXHyAAABKElEQVQ4Ea2TvWoCQRRGnWCVWChIIlikC9hpJdikSbGgaONbpAoY8gKBdAGfwkfwKQypLQ1sEGyMYhN1Pd%2B6A8PqwBZeOHt%2FvsvMnd3ZXBRFPQjBZ9K6OY8ZxF%2B0IYw9PW3qz8aY6lk92bZ%2BVqSI3oC9T7%2FyCVnrF1ngj93us%2B540sf5BrCDfw9b6jJ5lx%2FyjtGKBBXc3cnqx0INN4ImbI%2Bl%2BPnI8zWfFEr4chLLrWHCp9OO9j19Kbc91HX0zzzBO8EbLK2Iv4ZvNO3is3h6jb%2BCwO0iL8AaWqB7ILPTxq3kDypqvBuYuwswqo6wgYJbT8XxBPZ8KS1TepkFdC79TAHHce%2F7LbVioi3wEfTpmeKtPRGEeoldSP%2FOeoEftpP4BRbgXrYZefsAI%2BP9JU7ImyEAAAAASUVORK5CYII%3D\n   :target: https://www.anyscale.com/ray-on-anyscale?utm_source=github&utm_medium=ray_readme&utm_campaign=get_started_badge\n\nRay is a unified framework for scaling AI and Python applications. Ray consists of a core distributed runtime and a set of AI libraries for simplifying ML compute:\n\n.. image:: https://github.com/ray-project/ray/raw/master/doc/source/images/what-is-ray-padded.svg\n\n..\n  https://docs.google.com/drawings/d/1Pl8aCYOsZCo61cmp57c7Sja6HhIygGCvSZLi_AuBuqo/edit\n\nLearn more about `Ray AI Libraries`_:\n\n- `Data`_: Scalable Datasets for ML\n- `Train`_: Distributed Training\n- `Tune`_: Scalable Hyperparameter Tuning\n- `RLlib`_: Scalable Reinforcement Learning\n- `Serve`_: Scalable and Programmable Serving\n\nOr more about `Ray Core`_ and its key abstractions:\n\n- `Tasks`_: Stateless functions executed in the cluster.\n- `Actors`_: Stateful worker processes created in the cluster.\n- `Objects`_: Immutable values accessible across the cluster.\n\nLearn more about Monitoring and Debugging:\n\n- Monitor Ray apps and clusters with the `Ray Dashboard <https://docs.ray.io/en/latest/ray-core/ray-dashboard.html>`__.\n- Debug Ray apps with the `Ray Distributed Debugger <https://docs.ray.io/en/latest/ray-observability/ray-distributed-debugger.html>`__.\n\nRay runs on any machine, cluster, cloud provider, and Kubernetes, and features a growing\n`ecosystem of community integrations`_.\n\nInstall Ray with: ``pip install ray``. For nightly wheels, see the\n`Installation page <https://docs.ray.io/en/latest/ray-overview/installation.html>`__.\n\n.. _`Serve`: https://docs.ray.io/en/latest/serve/index.html\n.. _`Data`: https://docs.ray.io/en/latest/data/dataset.html\n.. _`Workflow`: https://docs.ray.io/en/latest/workflows/concepts.html\n.. _`Train`: https://docs.ray.io/en/latest/train/train.html\n.. _`Tune`: https://docs.ray.io/en/latest/tune/index.html\n.. _`RLlib`: https://docs.ray.io/en/latest/rllib/index.html\n.. _`ecosystem of community integrations`: https://docs.ray.io/en/latest/ray-overview/ray-libraries.html\n\n\nWhy Ray?\n--------\n\nToday's ML workloads are increasingly compute-intensive. As convenient as they are, single-node development environments such as your laptop cannot scale to meet these demands.\n\nRay is a unified way to scale Python and AI applications from a laptop to a cluster.\n\nWith Ray, you can seamlessly scale the same code from a laptop to a cluster. Ray is designed to be general-purpose, meaning that it can performantly run any kind of workload. If your application is written in Python, you can scale it with Ray, no other infrastructure required.\n\nMore Information\n----------------\n\n- `Documentation`_\n- `Ray Architecture whitepaper`_\n- `Exoshuffle: large-scale data shuffle in Ray`_\n- `Ownership: a distributed futures system for fine-grained tasks`_\n- `RLlib paper`_\n- `Tune paper`_\n\n*Older documents:*\n\n- `Ray paper`_\n- `Ray HotOS paper`_\n- `Ray Architecture v1 whitepaper`_\n\n.. _`Ray AI Libraries`: https://docs.ray.io/en/latest/ray-air/getting-started.html\n.. _`Ray Core`: https://docs.ray.io/en/latest/ray-core/walkthrough.html\n.. _`Tasks`: https://docs.ray.io/en/latest/ray-core/tasks.html\n.. _`Actors`: https://docs.ray.io/en/latest/ray-core/actors.html\n.. _`Objects`: https://docs.ray.io/en/latest/ray-core/objects.html\n.. _`Documentation`: http://docs.ray.io/en/latest/index.html\n.. _`Ray Architecture v1 whitepaper`: https://docs.google.com/document/d/1lAy0Owi-vPz2jEqBSaHNQcy2IBSDEHyXNOQZlGuj93c/preview\n.. _`Ray Architecture whitepaper`: https://docs.google.com/document/d/1tBw9A4j62ruI5omIJbMxly-la5w4q_TjyJgJL_jN2fI/preview\n.. _`Exoshuffle: large-scale data shuffle in Ray`: https://arxiv.org/abs/2203.05072\n.. _`Ownership: a distributed futures system for fine-grained tasks`: https://www.usenix.org/system/files/nsdi21-wang.pdf\n.. _`Ray paper`: https://arxiv.org/abs/1712.05889\n.. _`Ray HotOS paper`: https://arxiv.org/abs/1703.03924\n.. _`RLlib paper`: https://arxiv.org/abs/1712.09381\n.. _`Tune paper`: https://arxiv.org/abs/1807.05118\n\nGetting Involved\n----------------\n\n.. list-table::\n   :widths: 25 50 25 25\n   :header-rows: 1\n\n   * - Platform\n     - Purpose\n     - Estimated Response Time\n     - Support Level\n   * - `Discourse Forum`_\n     - For discussions about development and questions about usage.\n     - < 1 day\n     - Community\n   * - `GitHub Issues`_\n     - For reporting bugs and filing feature requests.\n     - < 2 days\n     - Ray OSS Team\n   * - `Slack`_\n     - For collaborating with other Ray users.\n     - < 2 days\n     - Community\n   * - `StackOverflow`_\n     - For asking questions about how to use Ray.\n     - 3-5 days\n     - Community\n   * - `Meetup Group`_\n     - For learning about Ray projects and best practices.\n     - Monthly\n     - Ray DevRel\n   * - `Twitter`_\n     - For staying up-to-date on new features.\n     - Daily\n     - Ray DevRel\n\n.. _`Discourse Forum`: https://discuss.ray.io/\n.. _`GitHub Issues`: https://github.com/ray-project/ray/issues\n.. _`StackOverflow`: https://stackoverflow.com/questions/tagged/ray\n.. _`Meetup Group`: https://www.meetup.com/Bay-Area-Ray-Meetup/\n.. _`Twitter`: https://twitter.com/raydistributed\n.. _`Slack`: https://www.ray.io/join-slack?utm_source=github&utm_medium=ray_readme&utm_campaign=getting_involved\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1806640625,
          "content": "# Security Policy\n\nIf you are deploying Ray, read [Security](doc/source/ray-security/index.md).\n\n## Reporting a vulnerability\n\nPlease report security issues to `security@anyscale.com`.\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 2.5849609375,
          "content": "workspace(name = \"com_github_ray_project_ray\")\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"platforms\",\n    sha256 = \"5eda539c841265031c2f82d8ae7a3a6490bd62176e0c038fc469eabf91f6149b\",\n    urls = [\n        \"https://github.com/bazelbuild/platforms/releases/download/0.0.9/platforms-0.0.9.tar.gz\",\n    ],\n)\n\nload(\"//bazel:ray_deps_setup.bzl\", \"ray_deps_setup\")\n\nray_deps_setup()\n\nload(\"//bazel:ray_deps_build_all.bzl\", \"ray_deps_build_all\")\n\nray_deps_build_all()\n\n# This needs to be run after grpc_deps() in ray_deps_build_all() to make\n# sure all the packages loaded by grpc_deps() are available. However a\n# load() statement cannot be in a function so we put it here.\nload(\"@com_github_grpc_grpc//bazel:grpc_extra_deps.bzl\", \"grpc_extra_deps\")\n\ngrpc_extra_deps()\n\nload(\"@bazel_skylib//lib:versions.bzl\", \"versions\")\n\n# Please keep this in sync with the .bazelversion file.\nversions.check(\n    maximum_bazel_version = \"6.5.0\",\n    minimum_bazel_version = \"6.5.0\",\n)\n\nload(\"@hedron_compile_commands//:workspace_setup.bzl\", \"hedron_compile_commands_setup\")\n\nhedron_compile_commands_setup()\n\nhttp_archive(\n    name = \"rules_python\",\n    sha256 = \"c68bdc4fbec25de5b5493b8819cfc877c4ea299c0dcb15c244c5a00208cde311\",\n    strip_prefix = \"rules_python-0.31.0\",\n    url = \"https://github.com/bazelbuild/rules_python/releases/download/0.31.0/rules_python-0.31.0.tar.gz\",\n)\n\nload(\"@rules_python//python:repositories.bzl\", \"python_register_toolchains\")\n\npython_register_toolchains(\n    name = \"python3_9\",\n    python_version = \"3.9\",\n    register_toolchains = False,\n)\n\nload(\"@python3_9//:defs.bzl\", python39 = \"interpreter\")\nload(\"@rules_python//python/pip_install:repositories.bzl\", \"pip_install_dependencies\")\n\npip_install_dependencies()\n\nload(\"@rules_python//python:pip.bzl\", \"pip_parse\")\n\npip_parse(\n    name = \"py_deps_buildkite\",\n    python_interpreter_target = python39,\n    requirements_lock = \"//release:requirements_buildkite.txt\",\n)\n\nload(\"@py_deps_buildkite//:requirements.bzl\", install_py_deps_buildkite = \"install_deps\")\n\ninstall_py_deps_buildkite()\n\nregister_toolchains(\"//:python_toolchain\")\n\nregister_execution_platforms(\n    \"@local_config_platform//:host\",\n    \"//:hermetic_python_platform\",\n)\n\nhttp_archive(\n    name = \"crane_linux_x86_64\",\n    build_file_content = \"\"\"\nfilegroup(\n    name = \"file\",\n    srcs = glob([\"**\"]),\n    visibility = [\"//visibility:public\"],\n)\n\"\"\",\n    sha256 = \"daa629648e1d1d10fc8bde5e6ce4176cbc0cd48a32211b28c3fd806e0fa5f29b\",\n    urls = [\"https://github.com/google/go-containerregistry/releases/download/v0.19.0/go-containerregistry_Linux_x86_64.tar.gz\"],\n)\n"
        },
        {
          "name": "bazel",
          "type": "tree",
          "content": null
        },
        {
          "name": "binder",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-docker.sh",
          "type": "blob",
          "size": 2.9130859375,
          "content": "#!/bin/bash\n# shellcheck disable=SC2086\n# This script is for users to build docker images locally. It is most useful for users wishing to edit the\n# base-deps, or ray images. This script is *not* tested.\n\nGPU=\"\"\nBASE_IMAGE=\"ubuntu:22.04\"\nWHEEL_URL=\"https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp39-cp39-manylinux2014_x86_64.whl\"\nCPP_WHEEL_URL=\"https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray_cpp-3.0.0.dev0-cp39-cp39-manylinux2014_x86_64.whl\"\nPYTHON_VERSION=\"3.9\"\n\nBUILD_ARGS=()\n\nwhile [[ $# -gt 0 ]]; do\n    case \"$1\" in\n        --gpu)\n            GPU=\"-gpu\"\n            BASE_IMAGE=\"nvidia/cuda:11.8.0-cudnn8-devel-ubuntu22.04\"\n        ;;\n        --base-image)\n            # Override for the base image.\n            shift\n            BASE_IMAGE=\"$1\"\n        ;;\n        --no-cache-build)\n            BUILD_ARGS+=(\"--no-cache\")\n        ;;\n        --shas-only)\n            # output the SHA sum of each build. This is useful for scripting tests,\n            # especially when builds of different versions are running on the same machine.\n            # It also can facilitate cleanup.\n            OUTPUT_SHA=YES\n            BUILD_ARGS+=(\"-q\")\n        ;;\n        --python-version)\n            # Python version to install. e.g. 3.9\n            # Changing python versions may require a different wheel.\n            # If not provided defaults to 3.9\n            shift\n            PYTHON_VERSION=\"$1\"\n        ;;\n        *)\n            echo \"Usage: build-docker.sh [ --gpu ] [ --base-image ] [ --no-cache-build ] [ --shas-only ] [ --build-development-image ] [ --build-examples ] [ --python-version ]\"\n            exit 1\n    esac\n    shift\ndone\n\nexport DOCKER_BUILDKIT=1\n\n\n# Build base-deps image\nif [[ \"$OUTPUT_SHA\" != \"YES\" ]]; then\n    echo \"=== Building base-deps image ===\" >/dev/stderr\nfi\n\nBUILD_CMD=(\n    docker build \"${BUILD_ARGS[@]}\"\n    --build-arg BASE_IMAG=\"$BASE_IMAGE\"\n    --build-arg PYTHON_VERSION=\"${PYTHON_VERSION}\"\n    -t \"rayproject/base-deps:dev$GPU\" \"docker/base-deps\"\n)\n\nif [[ \"$OUTPUT_SHA\" == \"YES\" ]]; then\n    IMAGE_SHA=\"$(\"${BUILD_CMD[@]}\")\"\n    echo \"rayproject/base-deps:dev$GPU SHA:$IMAGE_SHA\"\nelse\n    \"${BUILD_CMD[@]}\"\nfi\n\n\n# Build ray image\nif [[ \"$OUTPUT_SHA\" != \"YES\" ]]; then\n    echo \"=== Building ray image ===\" >/dev/stderr\nfi\n\nRAY_BUILD_DIR=\"$(mktemp -d)\"\nmkdir -p \"$RAY_BUILD_DIR/.whl\"\nwget --quiet \"$WHEEL_URL\" -P \"$RAY_BUILD_DIR/.whl\"\nwget --quiet \"$CPP_WHEEL_URL\" -P \"$RAY_BUILD_DIR/.whl\"\ncp python/requirements_compiled.txt \"$RAY_BUILD_DIR\"\ncp docker/ray/Dockerfile \"$RAY_BUILD_DIR\"\n\nWHEEL=\"$(basename \"$WHEEL_DIR\"/.whl/ray-*.whl)\"\n\nBUILD_CMD=(\n    docker build \"${BUILD_ARGS[@]}\"\n    --build-arg FULL_BASE_IMAGE=\"rayproject/base-deps:dev$GPU\"\n    --build-arg WHEEL_PATH=\".whl/${WHEEL}\"\n    -t \"rayproject/ray:dev$GPU\" \"$RAY_BUILD_DIR\"\n)\n\nif [[ \"$OUTPUT_SHA\" == \"YES\" ]]; then\n    IMAGE_SHA=\"$(\"${BUILD_CMD[@]}\")\"\n    echo \"rayproject/ray:dev$GPU SHA:$IMAGE_SHA\"\nelse\n    \"${BUILD_CMD[@]}\"\nfi\n\nrm -rf \"$WHEEL_DIR\"\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.4345703125,
          "content": "#!/usr/bin/env bash\n\nif [ \"${OSTYPE}\" = msys ]; then\n  echo \"WARNING: ${0##*/} is not recommended on MSYS2, as MSYS2 alters the build environment.\"\nfi\n\nif [ -z \"${PYTHON3_BIN_PATH-}\" ]; then\n  PYTHON3_BIN_PATH=\"$(command -v python3 || command -v python || echo python)\"\nfi\n\nBAZEL_SH=\"${SHELL}\" exec \\\n  \"${PYTHON3_BIN_PATH}\" -c \\\n  \"import runpy, sys; runpy.run_path(sys.argv.pop(), run_name='__api__')\" \\\n  build \"$@\" \"${0%/*}\"/python/setup.py\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 13.4775390625,
          "content": "[MASTER]\n\n# Specify a configuration file.\n#rcfile=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Add files or directories to the ignore list. They should be base names, not\n# paths.\nignore=CVS\n\n# Add files or directories matching the regex patterns to the ignore list. The\n# regex matches against base names, not paths.\nignore-patterns=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Use multiple processes to speed up Pylint.\njobs=1\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-allow-list=\n\n# Allow optimization of some AST trees. This will activate a peephole AST\n# optimizer, which will apply various small optimizations. For instance, it can\n# be used to obtain the result of joining multiple strings with the addition\n# operator. Joining a lot of strings can lead to a maximum recursion error in\n# Pylint and this flag can prevent that. It has one side effect, the resulting\n# AST will be different than the one from reality. This option is deprecated\n# and it will be removed in Pylint 2.0.\noptimize-ast=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=HIGH\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=import-star-module-level,old-octal-literal,oct-method,print-statement,unpacking-in-except,parameter-unpacking,backtick,old-raise-syntax,old-ne-operator,long-suffix,dict-view-method,dict-iter-method,metaclass-assignment,next-method-called,raising-string,indexing-exception,raw_input-builtin,long-builtin,file-builtin,execfile-builtin,coerce-builtin,cmp-builtin,buffer-builtin,basestring-builtin,apply-builtin,filter-builtin-not-iterating,using-cmp-argument,useless-suppression,range-builtin-not-iterating,suppressed-message,no-absolute-import,old-division,cmp-method,reload-builtin,zip-builtin-not-iterating,intern-builtin,unichr-builtin,reduce-builtin,standarderror-builtin,unicode-builtin,xrange-builtin,coerce-method,delslice-method,getslice-method,setslice-method,input-builtin,round-builtin,hex-method,nonzero-method,map-builtin-not-iterating,invalid-name,missing-docstring\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\". This option is deprecated\n# and it will be removed in Pylint 2.0.\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=yes\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n\n[BASIC]\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k,ex,Run,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for function names\nfunction-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for variable names\nvariable-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct constant names\nconst-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Naming hint for constant names\nconst-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Regular expression matching correct attribute names\nattr-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for attribute names\nattr-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct argument names\nargument-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for argument names\nargument-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Naming hint for class attribute names\nclass-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Naming hint for inline iteration names\ninlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Naming hint for class names\nclass-name-hint=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression matching correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Naming hint for module names\nmodule-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression matching correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for method names\nmethod-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n\n[ELIF]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=1000\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=trailing-comma,dict-separator\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='  '\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=2\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=(_+[a-zA-Z0-9]*?$)|dummy\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,future.builtins\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n\n# Maximum number of locals for function / method body\nmax-locals=15\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of statements in function / method body\nmax-statements=50\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of boolean expressions in a if statement\nmax-bool-expr=5\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,TERMIOS,Bastion,rexec\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.48828125,
          "content": "[pytest]\n\nfilterwarnings =\n    # This means: treat every warning as error, except for warnings that match .* (aka all warnings), ignore those.\n    # This triggers the SyntaxError described in https://github.com/ray-project/ray/pull/31523 but keeps the status quo\n    # warning behavior until https://github.com/ray-project/ray/pull/31219 .\n    error\n\n    # The format is `action:message_regex:category:module:line`.\n    ignore:.*:\n\n# Default to 3 min timeout for all individual pytest.\ntimeout = 180\n"
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "rllib",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "semgrep.yml",
          "type": "blob",
          "size": 1.125,
          "content": "rules:\n  - id: code-block-python\n    paths:\n      include:\n        # Ray Core\n        - \"python/ray/util/**/*.py\"\n        - \"python/ray/_private/**/*.py\"\n        - \"python/ray/core/**/*.py\"\n        - \"doc/source/ray-core/**/*.rst\"\n        - \"doc/source/ray-overview/**/*.rst\"\n        - \"doc/source/ray-observability/**/*.rst\"\n        # Ray Data\n        - \"python/ray/data/**/*.py\"\n        - \"doc/source/data/**/*.rst\"\n        # Ray Train\n        - \"python/ray/train/**/*.py\"\n        - \"doc/source/train/**/*.rst\"\n      exclude:\n        # These files use the :emphasize-lines: option, which isn't supported by testcode.\n        - \"doc/source/train/getting-started-pytorch-lightning.rst\"\n        - \"doc/source/train/getting-started-pytorch.rst\"\n        - \"doc/source/train/getting-started-transformers.rst\"\n        - \"doc/source/train/user-guides/data-loading-preprocessing.rst\"\n\n    languages:\n      - generic\n    message: \"Don't use 'code-block:: python', it's not tested! Use 'testcode' instead! For more information, see https://docs.ray.io/en/master/ray-contribute/writing-code-snippets.html.\"\n    pattern: \"code-block:: python\"\n    severity: ERROR\n"
        },
        {
          "name": "setup_hooks.sh",
          "type": "blob",
          "size": 0.4580078125,
          "content": "#!/bin/sh\nset -eu\n\n# This stops git rev-parse from failing if we run this from the .git directory\nbuiltin cd \"$(dirname \"${BASH_SOURCE:-$0}\")\"\n\nROOT=\"$(git rev-parse --show-toplevel)\"\nbuiltin cd \"${ROOT}\"\n\n# If we change the lint location we should modify the path of lint relative .git\nRELATIVE_PATH=\"../../ci/lint\"\n\nln -sf \"${RELATIVE_PATH}/pre-push\" \"${ROOT}/.git/hooks/pre-push\"\nln -sf \"${RELATIVE_PATH}/prepare-commit-msg\" \"${ROOT}/.git/hooks/prepare-commit-msg\"\n\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}