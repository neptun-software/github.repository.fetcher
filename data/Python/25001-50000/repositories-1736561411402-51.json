{
  "metadata": {
    "timestamp": 1736561411402,
    "page": 51,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "httpie/cli",
      "stars": 34367,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.240234375,
          "content": "# https://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.yml]\nindent_size = 2\n\n[Makefile]\nindent_style = tab\nindent_size = 8\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.205078125,
          "content": ".DS_Store\n.idea/\n*.egg-info\n.cache/\n*.pyc\nhtmlcov\n\n\n##############################################################################\n# The below is GitHub template for Python project. gitignore.\n# <https://github.com/github/gitignore/blob/master/Python.gitignore>\n##############################################################################\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.spec\n*.manifest\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nvenv*/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# Packit\n/httpie.spec\n/httpie-*.rpm\n/httpie-*.tar.gz\n\n# VS Code\n.vscode/\n\n# Windows Chocolatey\n*.nupkg\n\nartifacts/\n"
        },
        {
          "name": ".packit.yaml",
          "type": "blob",
          "size": 0.5078125,
          "content": "# See the documentation for more information:\n# https://packit.dev/docs/configuration/\nspecfile_path: httpie.spec\nactions:\n  # get the current Fedora Rawhide specfile:\n  post-upstream-clone: \"wget https://src.fedoraproject.org/rpms/httpie/raw/rawhide/f/httpie.spec -O httpie.spec\"\n  # Use this when the latest spec is not up-to-date.\n  # post-upstream-clone: \"cp docs/packaging/linux-fedora/httpie.spec.txt httpie.spec\"\njobs:\n- job: propose_downstream\n  trigger: release\n  metadata:\n    dist_git_branches:\n    - rawhide\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 1.7431640625,
          "content": "# HTTPie authors\n\n- [Jakub Roztocil](https://github.com/jakubroztocil)\n\n## Patches, features, ideas\n\n[Complete list of contributors on GitHub](https://github.com/httpie/cli/graphs/contributors)\n\n- [Cláudia T. Delgado](https://github.com/claudiatd)\n- [Hank Gay](https://github.com/gthank)\n- [Jake Basile](https://github.com/jakebasile)\n- [Vladimir Berkutov](https://github.com/dair-targ)\n- [Jakob Kramer](https://github.com/gandaro)\n- [Chris Faulkner](https://github.com/faulkner)\n- [Alen Mujezinovic](https://github.com/flashingpumpkin)\n- [Praful Mathur](https://github.com/tictactix)\n- [Marc Abramowitz](https://github.com/msabramo)\n- [Ismail Badawi](https://github.com/isbadawi)\n- [Laurent Bachelier](https://github.com/laurentb)\n- [Isman Firmansyah](https://github.com/iromli)\n- [Simon Olofsson](https://github.com/simono)\n- [Churkin Oleg](https://github.com/Bahus)\n- [Jökull Sólberg Auðunsson](https://github.com/jokull)\n- [Matthew M. Boedicker](https://github.com/mmb)\n- [marblar](https://github.com/marblar)\n- [Tomek Wójcik](https://github.com/tomekwojcik)\n- [Davey Shafik](https://github.com/dshafik)\n- [cido](https://github.com/cido)\n- [Justin Bonnar](https://github.com/jargonjustin)\n- [Nathan LaFreniere](https://github.com/nlf)\n- [Matthias Lehmann](https://github.com/matleh)\n- [Dennis Brakhane](https://github.com/brakhane)\n- [Matt Layman](https://github.com/mblayman)\n- [Edward Yang](https://github.com/honorabrutroll)\n- [Aleksandr Vinokurov](https://github.com/aleksandr-vin)\n- [Jeff Byrnes](https://github.com/jeffbyrnes)\n- [Denis Belavin](https://github.com/LuckyDenis)\n- [Mickaël Schoentgen](https://github.com/BoboTiG)\n- [Elena Lape](https://github.com/elenalape)\n- [Rohit Sehgal](https://github.com/r0hi7)\n- [Bartłomiej Jacak](https://github.com/bartekjacak)\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 25.9140625,
          "content": "# Change Log\n\nThis document records all notable changes to [HTTPie](https://httpie.io).\nThis project adheres to [Semantic Versioning](https://semver.org/).\n\n## [3.2.4](https://github.com/httpie/cli/compare/3.2.3...3.2.4) (2024-11-01)\n\n- Fix default certs loading and unpin `requests`. ([#1596](https://github.com/httpie/cli/issues/1596))\n\n## [3.2.3](https://github.com/httpie/cli/compare/3.2.2...3.2.3) (2024-07-10)\n\n- Fix SSL connections by pinning the `requests` version to `2.31.0`. (#1583, #1581)\n- Make it possible to [unset](https://httpie.io/docs/cli/default-request-headers) the `User-Agent` and `Accept-Encoding` request headers. ([#1502](https://github.com/httpie/cli/issues/1502))\n\n## [3.2.2](https://github.com/httpie/cli/compare/3.2.1...3.2.2) (2023-05-19)\n\n- Fixed compatibility with urllib3 2.0.0. ([#1499](https://github.com/httpie/cli/issues/1499))\n\n## [3.2.1](https://github.com/httpie/cli/compare/3.1.0...3.2.1) (2022-05-06)\n\n- Improved support for determining auto-streaming when the `Content-Type` header includes encoding information. ([#1383](https://github.com/httpie/cli/pull/1383))\n- Fixed the display of the crash happening in the secondary process for update checks. ([#1388](https://github.com/httpie/cli/issues/1388))\n\n## [3.2.0](https://github.com/httpie/cli/compare/3.1.0...3.2.0) (2022-05-05)\n\n- Added a warning for notifying the user about the new updates. ([#1336](https://github.com/httpie/cli/pull/1336))\n- Added support for single binary executables. ([#1330](https://github.com/httpie/cli/pull/1330))\n- Added support for man pages (and auto generation of them from the parser declaration). ([#1317](https://github.com/httpie/cli/pull/1317))\n- Added `http --manual` for man pages & regular manual with pager. ([#1343](https://github.com/httpie/cli/pull/1343))\n- Added support for session persistence of repeated headers with the same name. ([#1335](https://github.com/httpie/cli/pull/1335))\n- Added support for sending `Secure` cookies to the `localhost` (and `.local` suffixed domains). ([#1308](https://github.com/httpie/cli/issues/1308))\n- Improved UI for the progress bars. ([#1324](https://github.com/httpie/cli/pull/1324))\n- Fixed redundant creation of `Content-Length` header on `OPTIONS` requests. ([#1310](https://github.com/httpie/cli/issues/1310))\n- Fixed blocking of warning thread on some use cases. ([#1349](https://github.com/httpie/cli/issues/1349))\n- Changed `httpie plugins` to the new `httpie cli` namespace as `httpie cli plugins` (`httpie plugins` continues to work as a hidden alias). ([#1320](https://github.com/httpie/cli/issues/1320))\n- Soft deprecated the `--history-print`. ([#1380](https://github.com/httpie/cli/pull/1380))\n\n## [3.1.0](https://github.com/httpie/cli/compare/3.0.2...3.1.0) (2022-03-08)\n\n- **SECURITY** Fixed the [vulnerability](https://github.com/httpie/cli/security/advisories/GHSA-9w4w-cpc8-h2fq) that caused exposure of cookies on redirects to third party hosts. ([#1312](https://github.com/httpie/cli/pull/1312))\n- Fixed escaping of integer indexes with multiple backslashes in the nested JSON builder. ([#1285](https://github.com/httpie/cli/issues/1285))\n- Fixed displaying of status code without a status message on non-`auto` themes. ([#1300](https://github.com/httpie/cli/issues/1300))\n- Fixed redundant issuance of stdin detection warnings on some rare cases due to underlying implementation. ([#1303](https://github.com/httpie/cli/pull/1303))\n- Fixed double `--quiet` so that it will now suppress all python level warnings. ([#1271](https://github.com/httpie/cli/issues/1271))\n- Added support for specifying certificate private key passphrases through `--cert-key-pass` and prompts. ([#946](https://github.com/httpie/cli/issues/946))\n- Added `httpie cli export-args` command for exposing the parser specification for the `http`/`https` commands. ([#1293](https://github.com/httpie/cli/pull/1293))\n- Improved regulation of top-level arrays. ([#1292](https://github.com/httpie/cli/commit/225dccb2186f14f871695b6c4e0bfbcdb2e3aa28))\n- Improved UI layout for standalone invocations. ([#1296](https://github.com/httpie/cli/pull/1296))\n\n## [3.0.2](https://github.com/httpie/cli/compare/3.0.1...3.0.2) (2022-01-24)\n\n[What’s new in HTTPie for Terminal 3.0 →](https://httpie.io/blog/httpie-3.0.0)\n\n- Fixed usage of `httpie` when there is a presence of a config with `default_options`. ([#1280](https://github.com/httpie/cli/pull/1280))\n\n## [3.0.1](https://github.com/httpie/cli/compare/3.0.0...3.0.1) (2022-01-23)\n\n[What’s new in HTTPie for Terminal 3.0 →](https://httpie.io/blog/httpie-3.0.0)\n\n- Changed the value shown as time elapsed from time-to-read-headers to total exchange time. ([#1277](https://github.com/httpie/cli/issues/1277))\n\n## [3.0.0](https://github.com/httpie/cli/compare/2.6.0...3.0.0) (2022-01-21)\n\n[What’s new in HTTPie for Terminal 3.0 →](https://httpie.io/blog/httpie-3.0.0)\n\n- Dropped support for Python 3.6. ([#1177](https://github.com/httpie/cli/issues/1177))\n- Improved startup time by 40%. ([#1211](https://github.com/httpie/cli/pull/1211))\n- Added support for nested JSON syntax. ([#1169](https://github.com/httpie/cli/issues/1169))\n- Added `httpie plugins` interface for plugin management. ([#566](https://github.com/httpie/cli/issues/566))\n- Added support for Bearer authentication via `--auth-type=bearer` ([#1215](https://github.com/httpie/cli/issues/1215)).\n- Added support for quick conversions of pasted URLs into HTTPie calls by adding a space after the protocol name (`$ https ://pie.dev` → `https://pie.dev`). ([#1195](https://github.com/httpie/cli/issues/1195))\n- Added support for _sending_ multiple HTTP header lines with the same name. ([#130](https://github.com/httpie/cli/issues/130))\n- Added support for _receiving_ multiple HTTP headers lines with the same name. ([#1207](https://github.com/httpie/cli/issues/1207))\n- Added support for basic JSON types on `--form`/`--multipart` when using JSON only operators (`:=`/`:=@`). ([#1212](https://github.com/httpie/cli/issues/1212))\n- Added support for automatically enabling `--stream` when `Content-Type` is `text/event-stream`. ([#376](https://github.com/httpie/cli/issues/376))\n- Added support for displaying the total elapsed time through `--meta`/`-vv` or `--print=m`. ([#243](https://github.com/httpie/cli/issues/243))\n- Added new `pie-dark`/`pie-light` (and `pie`) styles that match with [HTTPie for Web and Desktop](https://httpie.io/product). ([#1237](https://github.com/httpie/cli/issues/1237))\n- Added support for better error handling on DNS failures. ([#1248](https://github.com/httpie/cli/issues/1248))\n- Added support for storing prompted passwords in the local sessions. ([#1098](https://github.com/httpie/cli/issues/1098))\n- Added warnings about the `--ignore-stdin`, when there is no incoming data from stdin. ([#1255](https://github.com/httpie/cli/issues/1255))\n- Fixed crashing due to broken plugins. ([#1204](https://github.com/httpie/cli/issues/1204))\n- Fixed auto addition of XML declaration to every formatted XML response. ([#1156](https://github.com/httpie/cli/issues/1156))\n- Fixed highlighting when `Content-Type` specifies `charset`. ([#1242](https://github.com/httpie/cli/issues/1242))\n- Fixed an unexpected crash when `--raw` is used with `--chunked`. ([#1253](https://github.com/httpie/cli/issues/1253))\n- Changed the default Windows theme from `fruity` to `auto`. ([#1266](https://github.com/httpie/cli/issues/1266))\n\n## [2.6.0](https://github.com/httpie/cli/compare/2.5.0...2.6.0) (2021-10-14)\n\n[What’s new in HTTPie for Terminal 2.6.0 →](https://httpie.io/blog/httpie-2.6.0)\n\n- Added support for formatting & coloring of JSON bodies preceded by non-JSON data (e.g., an XXSI prefix). ([#1130](https://github.com/httpie/cli/issues/1130))\n- Added charset auto-detection when `Content-Type` doesn’t include it. ([#1110](https://github.com/httpie/cli/issues/1110), [#1168](https://github.com/httpie/cli/issues/1168))\n- Added `--response-charset` to allow overriding the response encoding for terminal display purposes. ([#1168](https://github.com/httpie/cli/issues/1168))\n- Added `--response-mime` to allow overriding the response mime type for coloring and formatting for the terminal. ([#1168](https://github.com/httpie/cli/issues/1168))\n- Added the ability to silence warnings through using `-q` or `--quiet` twice (e.g. `-qq`) ([#1175](https://github.com/httpie/cli/issues/1175))\n- Added installed plugin list to `--debug` output. ([#1165](https://github.com/httpie/cli/issues/1165))\n- Fixed duplicate keys preservation in JSON data. ([#1163](https://github.com/httpie/cli/issues/1163))\n\n## [2.5.0](https://github.com/httpie/cli/compare/2.4.0...2.5.0) (2021-09-06)\n\n[What’s new in HTTPie for Terminal 2.5.0 →](https://httpie.io/blog/httpie-2.5.0)\n\n- Added `--raw` to allow specifying the raw request body without extra processing as\n  an alternative to `stdin`. ([#534](https://github.com/httpie/cli/issues/534))\n- Added support for XML formatting. ([#1129](https://github.com/httpie/cli/issues/1129))\n- Added internal support for file-like object responses to improve adapter plugin support. ([#1094](https://github.com/httpie/cli/issues/1094))\n- Fixed `--continue --download` with a single byte to be downloaded left. ([#1032](https://github.com/httpie/cli/issues/1032))\n- Fixed `--verbose` HTTP 307 redirects with streamed request body. ([#1088](https://github.com/httpie/cli/issues/1088))\n- Fixed handling of session files with `Cookie:` followed by other headers. ([#1126](https://github.com/httpie/cli/issues/1126))\n\n## [2.4.0](https://github.com/httpie/cli/compare/2.3.0...2.4.0) (2021-02-06)\n\n- Added support for `--session` cookie expiration based on `Set-Cookie: max-age=<n>`. ([#1029](https://github.com/httpie/cli/issues/1029))\n- Show a `--check-status` warning with `--quiet` as well, not only when the output is redirected. ([#1026](https://github.com/httpie/cli/issues/1026))\n- Fixed upload with `--session` ([#1020](https://github.com/httpie/cli/issues/1020)).\n- Fixed a missing blank line between request and response ([#1006](https://github.com/httpie/cli/issues/1006)).\n\n## [2.3.0](https://github.com/httpie/cli/compare/2.2.0...2.3.0) (2020-10-25)\n\n- Added support for streamed uploads ([#201](https://github.com/httpie/cli/issues/201)).\n- Added support for multipart upload streaming ([#684](https://github.com/httpie/cli/issues/684)).\n- Added support for body-from-file upload streaming (`http pie.dev/post @file`).\n- Added `--chunked` to enable chunked transfer encoding ([#753](https://github.com/httpie/cli/issues/753)).\n- Added `--multipart` to allow `multipart/form-data` encoding for non-file `--form` requests as well.\n- Added support for preserving field order in multipart requests ([#903](https://github.com/httpie/cli/issues/903)).\n- Added `--boundary` to allow a custom boundary string for `multipart/form-data` requests.\n- Added support for combining cookies specified on the CLI and in a session file ([#932](https://github.com/httpie/cli/issues/932)).\n- Added out of the box SOCKS support with no extra installation ([#904](https://github.com/httpie/cli/issues/904)).\n- Added `--quiet, -q` flag to enforce silent behaviour.\n- Fixed the handling of invalid `expires` dates in `Set-Cookie` headers ([#963](https://github.com/httpie/cli/issues/963)).\n- Removed Tox testing entirely ([#943](https://github.com/httpie/cli/issues/943)).\n\n## [2.2.0](https://github.com/httpie/cli/compare/2.1.0...2.2.0) (2020-06-18)\n\n- Added support for custom content types for uploaded files ([#668](https://github.com/httpie/cli/issues/668)).\n- Added support for `$XDG_CONFIG_HOME` ([#920](https://github.com/httpie/cli/issues/920)).\n- Added support for `Set-Cookie`-triggered cookie expiration ([#853](https://github.com/httpie/cli/issues/853)).\n- Added `--format-options` to allow disabling sorting, etc. ([#128](https://github.com/httpie/cli/issues/128))\n- Added `--sorted` and `--unsorted` shortcuts for (un)setting all sorting-related `--format-options`. ([#128](https://github.com/httpie/cli/issues/128))\n- Added `--ciphers` to allow configuring OpenSSL ciphers ([#870](https://github.com/httpie/cli/issues/870)).\n- Added `netrc` support for auth plugins. Enabled for `--auth-type=basic`\n  and `digest`, 3rd parties may opt in ([#718](https://github.com/httpie/cli/issues/718), [#719](https://github.com/httpie/cli/issues/719), [#852](https://github.com/httpie/cli/issues/852), [#934](https://github.com/httpie/cli/issues/934)).\n- Fixed built-in plugins-related circular imports ([#925](https://github.com/httpie/cli/issues/925)).\n\n## [2.1.0](https://github.com/httpie/cli/compare/2.0.0...2.1.0) (2020-04-18)\n\n- Added `--path-as-is` to bypass dot segment (`/../` or `/./`)\n  URL squashing ([#895](https://github.com/httpie/cli/issues/895)).\n- Changed the default `Accept` header value for JSON requests from\n  `application/json, */*` to `application/json, */*;q=0.5`\n  to clearly indicate preference ([#488](https://github.com/httpie/cli/issues/488)).\n- Fixed `--form` file upload mixed with redirected `stdin` error handling\n  ([#840](https://github.com/httpie/cli/issues/840)).\n\n## [2.0.0](https://github.com/httpie/cli/compare/1.0.3...2.0.0) (2020-01-12)\n\n- Removed Python 2.7 support ([EOL Jan 2020](https://www.python.org/doc/sunset-python-2/).\n- Added `--offline` to allow building an HTTP request and printing it but not\n  actually sending it over the network.\n- Replaced the old collect-all-then-process handling of HTTP communication\n  with one-by-one processing of each HTTP request or response as they become\n  available. This means that you can see headers immediately,\n  see what is being sent even if the request fails, etc.\n- Removed automatic config file creation to avoid concurrency issues.\n- Removed the default 30-second connection `--timeout` limit.\n- Removed Python’s default limit of 100 response headers.\n- Added `--max-headers` to allow setting the max header limit.\n- Added `--compress` to allow request body compression.\n- Added `--ignore-netrc` to allow bypassing credentials from `.netrc`.\n- Added `https` alias command with `https://` as the default scheme.\n- Added `$ALL_PROXY` documentation.\n- Added type annotations throughout the codebase.\n- Added `tests/` to the PyPi package for the convenience of\n  downstream package maintainers.\n- Fixed an error when `stdin` was a closed fd.\n- Improved `--debug` output formatting.\n\n## [1.0.3](https://github.com/httpie/cli/compare/1.0.2...1.0.3) (2019-08-26)\n\n- Fixed CVE-2019-10751 — the way the output filename is generated for\n  `--download` requests without `--output` resulting in a redirect has\n  been changed to only consider the initial URL as the base for the generated\n  filename, and not the final one. This fixes a potential security issue under\n  the following scenario:\n\n  1. A `--download` request with no explicit `--output` is made (e.g.,\n     `$ http -d example.org/file.txt`), instructing httpie to\n     [generate the output filename](https://httpie.org/doc#downloaded-filename)\n     from the `Content-Disposition` response header, or from the URL if the header\n     is not provided.\n  2. The server handling the request has been modified by an attacker and\n     instead of the expected response the URL returns a redirect to another\n     URL, e.g., `attacker.example.org/.bash_profile`, whose response does\n     not provide  a `Content-Disposition` header (i.e., the base for the\n     generated filename becomes `.bash_profile` instead of `file.txt`).\n  3. Your current directory doesn’t already contain `.bash_profile`\n     (i.e., no unique suffix is added to the generated filename).\n  4. You don’t notice the potentially unexpected output filename\n     as reported by httpie in the console output\n     (e.g., `Downloading 100.00 B to \".bash_profile\"`).\n\n  Reported by Raul Onitza and Giulio Comi.\n\n## [1.0.2](https://github.com/httpie/cli/compare/1.0.1...1.0.2) (2018-11-14)\n\n- Fixed tests for installation with pyOpenSSL.\n\n## [1.0.1](https://github.com/httpie/cli/compare/1.0.0...1.0.1) (2018-11-14)\n\n- Removed external URL calls from tests.\n\n## [1.0.0](https://github.com/httpie/cli/compare/0.9.9...1.0.0) (2018-11-02)\n\n- Added `--style=auto` which follows the terminal ANSI color styles.\n- Added support for selecting TLS 1.3 via `--ssl=tls1.3`\n  (available once implemented in upstream libraries).\n- Added `true`/`false` as valid values for `--verify`\n  (in addition to `yes`/`no`) and the boolean value is case-insensitive.\n- Changed the default `--style` from `solarized` to `auto` (on Windows it stays `fruity`).\n- Fixed default headers being incorrectly case-sensitive.\n- Removed Python 2.6 support.\n\n## [0.9.9](https://github.com/httpie/cli/compare/0.9.8...0.9.9) (2016-12-08)\n\n- Fixed README.\n\n## [0.9.8](https://github.com/httpie/cli/compare/0.9.6...0.9.8) (2016-12-08)\n\n- Extended auth plugin API.\n- Added exit status code `7` for plugin errors.\n- Added support for `curses`-less Python installations.\n- Fixed `REQUEST_ITEM` arg incorrectly being reported as required.\n- Improved `CTRL-C` interrupt handling.\n- Added the standard exit status code `130` for keyboard interrupts.\n\n## [0.9.6](https://github.com/httpie/cli/compare/0.9.4...0.9.6) (2016-08-13)\n\n- Added Python 3 as a dependency for Homebrew installations\n  to ensure some of the newer HTTP features work out of the box\n  for macOS users (starting with HTTPie 0.9.4.).\n- Added the ability to unset a request header with `Header:`, and send an\n  empty value with `Header;`.\n- Added `--default-scheme <URL_SCHEME>` to enable things like\n  `$ alias https='http --default-scheme=https`.\n- Added `-I` as a shortcut for `--ignore-stdin`.\n- Added fish shell completion (located in `extras/httpie-completion.fish`\n  in the GitHub repo).\n- Updated `requests` to 2.10.0 so that SOCKS support can be added via\n  `pip install requests[socks]`.\n- Changed the default JSON `Accept` header from `application/json`\n  to `application/json, */*`.\n- Changed the pre-processing of request HTTP headers so that any leading\n  and trailing whitespace is removed.\n\n## [0.9.4](https://github.com/httpie/cli/compare/0.9.3...0.9.4) (2016-07-01)\n\n- Added `Content-Type` of files uploaded in `multipart/form-data` requests\n- Added `--ssl=<PROTOCOL>` to specify the desired SSL/TLS protocol version\n  to use for HTTPS requests.\n- Added JSON detection with `--json, -j` to work around incorrect\n  `Content-Type`\n- Added `--all` to show intermediate responses such as redirects (with `--follow`)\n- Added `--history-print, -P WHAT` to specify formatting of intermediate responses\n- Added `--max-redirects=N` (default 30)\n- Added `-A` as short name for `--auth-type`\n- Added `-F` as short name for `--follow`\n- Removed the `implicit_content_type` config option\n  (use `\"default_options\": [\"--form\"]` instead)\n- Redirected `stdout` doesn't trigger an error anymore when `--output FILE`\n  is set\n- Changed the default `--style` back to `solarized` for better support\n  of light and dark terminals\n- Improved `--debug` output\n- Fixed `--session` when used with `--download`\n- Fixed `--download` to trim too long filenames before saving the file\n- Fixed the handling of `Content-Type` with multiple `+subtype` parts\n- Removed the XML formatter as the implementation suffered from multiple issues\n\n## [0.9.3](https://github.com/httpie/cli/compare/0.9.2...0.9.3) (2016-01-01)\n\n- Changed the default color `--style` from `solarized` to `monokai`\n- Added basic Bash autocomplete support (need to be installed manually)\n- Added request details to connection error messages\n- Fixed `'requests.packages.urllib3' has no attribute 'disable_warnings'`\n  errors that occurred in some installations\n- Fixed colors and formatting on Windows\n- Fixed `--auth` prompt on Windows\n\n## [0.9.2](https://github.com/httpie/cli/compare/0.9.1...0.9.2) (2015-02-24)\n\n- Fixed compatibility with Requests 2.5.1\n- Changed the default JSON `Content-Type` to `application/json` as UTF-8\n  is the default JSON encoding\n\n## [0.9.1](https://github.com/httpie/cli/compare/0.9.0...0.9.1) (2015-02-07)\n\n- Added support for Requests transport adapter plugins\n  (see [httpie-unixsocket](https://github.com/httpie/httpie-unixsocket)\n  and [httpie-http2](https://github.com/httpie/httpie-http2))\n\n## [0.9.0](https://github.com/httpie/cli/compare/0.8.0...0.9.0) (2015-01-31)\n\n- Added `--cert` and `--cert-key` parameters to specify a client side\n  certificate and private key for SSL\n- Improved unicode support\n- Improved terminal color depth detection via `curses`\n- To make it easier to deal with Windows paths in request items, `\\`\n  now only escapes special characters (the ones that are used as key-value\n  separators by HTTPie)\n- Switched from `unittest` to `pytest`\n- Added Python `wheel` support\n- Various test suite improvements\n- Added `CONTRIBUTING`\n- Fixed `User-Agent` overwriting when used within a session\n- Fixed handling of empty passwords in URL credentials\n- Fixed multiple file uploads with the same form field name\n- Fixed `--output=/dev/null` on Linux\n- Miscellaneous bugfixes\n\n## [0.8.0](https://github.com/httpie/cli/compare/0.7.1...0.8.0) (2014-01-25)\n\n- Added `field=@file.txt` and `field:=@file.json` for embedding\n  the contents of text and JSON files into request data\n- Added curl-style shorthand for localhost\n- Fixed request `Host` header value output so that it doesn't contain\n  credentials, if included in the URL\n\n## [0.7.1](https://github.com/httpie/cli/compare/0.6.0...0.7.1) (2013-09-24)\n\n- Added `--ignore-stdin`\n- Added support for auth plugins\n- Improved `--help` output\n- Improved `Content-Disposition` parsing for `--download` mode\n- Update to Requests 2.0.0\n\n## [0.6.0](https://github.com/httpie/cli/compare/0.5.1...0.6.0) (2013-06-03)\n\n- XML data is now formatted\n- `--session` and `--session-read-only` now also accept paths to\n  session files (eg. `http --session=/tmp/session.json example.org`)\n\n## [0.5.1](https://github.com/httpie/cli/compare/0.5.0...0.5.1) (2013-05-13)\n\n- `Content-*` and `If-*` request headers are not stored in sessions\n  anymore as they are request-specific\n\n## [0.5.0](https://github.com/httpie/cli/compare/0.4.1...0.5.0) (2013-04-27)\n\n- Added a download mode via `--download`\n- Fixes miscellaneous bugs\n\n## [0.4.1](https://github.com/httpie/cli/compare/0.4.0...0.4.1) (2013-02-26)\n\n- Fixed `setup.py`\n\n## [0.4.0](https://github.com/httpie/cli/compare/0.3.0...0.4.0) (2013-02-22)\n\n- Added Python 3.3 compatibility\n- Added Requests >= v1.0.4 compatibility\n- Added support for credentials in URL\n- Added `--no-option` for every `--option` to be config-friendly\n- Mutually exclusive arguments can be specified multiple times. The\n  last value is used\n\n## [0.3.0](https://github.com/httpie/cli/compare/0.2.7...0.3.0) (2012-09-21)\n\n- Allow output redirection on Windows\n- Added configuration file\n- Added persistent session support\n- Renamed `--allow-redirects` to `--follow`\n- Improved the usability of `http --help`\n- Fixed installation on Windows with Python 3\n- Fixed colorized output on Windows with Python 3\n- CRLF HTTP header field separation in the output\n- Added exit status code `2` for timed-out requests\n- Added the option to separate colorizing and formatting\n  (`--pretty=all`, `--pretty=colors` and `--pretty=format`)\n  `--ugly` has bee removed in favor of `--pretty=none`\n\n## [0.2.7](https://github.com/httpie/cli/compare/0.2.5...0.2.7) (2012-08-07)\n\n- Added compatibility with Requests 0.13.6\n- Added streamed terminal output. `--stream, -S` can be used to enable\n  streaming also with `--pretty` and to ensure a more frequent output\n  flushing\n- Added support for efficient large file downloads\n- Sort headers by name (unless `--pretty=none`)\n- Response body is fetched only when needed (e.g., not with `--headers`)\n- Improved content type matching\n- Updated Solarized color scheme\n- Windows: Added `--output FILE` to store output into a file\n  (piping results in corrupted data on Windows)\n- Proper handling of binary requests and responses\n- Fixed printing of `multipart/form-data` requests\n- Renamed `--traceback` to `--debug`\n\n## [0.2.6](https://github.com/httpie/cli/compare/0.2.5...0.2.6) (2012-07-26)\n\n- The short option for `--headers` is now `-h` (`-t` has been\n  removed, for usage use `--help`)\n- Form data and URL parameters can have multiple fields with the same name\n  (e.g.,`http -f url a=1 a=2`)\n- Added `--check-status` to exit with an error on HTTP 3xx, 4xx and\n  5xx (3, 4, and 5, respectively)\n- If the output is piped to another program or redirected to a file,\n  the default behaviour is to only print the response body\n  (It can still be overwritten via the `--print` flag.)\n- Improved highlighting of HTTP headers\n- Added query string parameters (`param==value`)\n- Added support for terminal colors under Windows\n\n## [0.2.5](https://github.com/httpie/cli/compare/0.2.2...0.2.5) (2012-07-17)\n\n- Unicode characters in prettified JSON now don't get escaped for\n  improved readability\n- --auth now prompts for a password if only a username provided\n- Added support for request payloads from a file path with automatic\n  `Content-Type` (`http URL @/path`)\n- Fixed missing query string when displaying the request headers via\n  `--verbose`\n- Fixed Content-Type for requests with no data\n\n## [0.2.2](https://github.com/httpie/cli/compare/0.2.1...0.2.2) (2012-06-24)\n\n- The `METHOD` positional argument can now be omitted (defaults to\n  `GET`, or to `POST` with data)\n- Fixed --verbose --form\n- Added support for Tox\n\n## [0.2.1](https://github.com/httpie/cli/compare/0.2.0...0.2.1) (2012-06-13)\n\n- Added compatibility with `requests-0.12.1`\n- Dropped custom JSON and HTTP lexers in favor of the ones newly included\n  in `pygments-1.5`\n\n## [0.2.0](https://github.com/httpie/cli/compare/0.1.6...0.2.0) (2012-04-25)\n\n- Added Python 3 support\n- Added the ability to print the HTTP request as well as the response\n  (see `--print` and `--verbose`)\n- Added support for Digest authentication\n- Added file upload support\n  (`http -f POST file_field_name@/path/to/file`)\n- Improved syntax highlighting for JSON\n- Added support for field name escaping\n- Many bug fixes\n\n## [0.1.6](https://github.com/httpie/cli/compare/0.1.5...0.1.6) (2012-03-04)\n\n- Fixed `setup.py`\n\n## [0.1.5](https://github.com/httpie/cli/compare/0.1.4...0.1.5) (2012-03-04)\n\n- Many improvements and bug fixes\n\n## [0.1.4](https://github.com/httpie/cli/compare/b966efa...0.1.4) (2012-02-28)\n\n- Many improvements and bug fixes\n\n## [0.1.0](https://github.com/httpie/cli/commit/b966efa) (2012-02-25)\n\n- Initial public release\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.255859375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n- Using welcoming and inclusive language\n- Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n- The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at jakub@roztocil.co. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://www.contributor-covenant.org),\nversion 1.4, available at <https://www.contributor-covenant.org/version/1/4/code-of-conduct.html>\n\nFor answers to common questions about this code of conduct, see\n<https://www.contributor-covenant.org/faq>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.6494140625,
          "content": "# Contributing to HTTPie\n\nBug reports and code and documentation patches are welcome. You can\nhelp this project also by using the development version of HTTPie\nand by reporting any bugs you might encounter.\n\n## 1. Reporting bugs\n\n**It's important that you provide the full command argument list\nas well as the output of the failing command.**\n\nUse the `--debug` flag and copy&paste both the command and its output\nto your bug report, e.g.:\n\n```bash\n$ http --debug <COMPLETE ARGUMENT LIST THAT TRIGGERS THE ERROR>\n<COMPLETE OUTPUT>\n```\n\n## 2. Contributing Code and Docs\n\nBefore working on a new feature or a bug, please browse [existing issues](https://github.com/httpie/cli/issues)\nto see whether it has previously been discussed.\n\nIf your change alters HTTPie’s behaviour or interface, it's a good idea to\ndiscuss it before you start working on it.\n\nIf you are fixing an issue, the first step should be to create a test case that\nreproduces the incorrect behaviour. That will also help you to build an\nunderstanding of the issue at hand.\n\n**Pull requests introducing code changes without tests\nwill generally not get merged. The same goes for PRs changing HTTPie’s\nbehaviour and not providing documentation.**\n\nConversely, PRs consisting of documentation improvements or tests\nfor existing-yet-previously-untested behavior will very likely be merged.\nTherefore, docs and tests improvements are a great candidate for your first\ncontribution.\n\nConsider also adding a [CHANGELOG](https://github.com/httpie/cli/blob/master/CHANGELOG.md) entry for your changes.\n\n### Development Environment\n\n#### Getting the code\n\nGo to <https://github.com/httpie/cli> and fork the project repository.\n\n```bash\n# Clone your fork\n$ git clone git@github.com:<YOU>/httpie.git\n\n# Enter the project directory\n$ cd httpie\n\n# Create a branch for your changes\n$ git checkout -b my_topical_branch\n```\n\n#### Setup\n\nThe [Makefile](https://github.com/httpie/cli/blob/master/Makefile) contains a bunch of tasks to get you started.\nYou can run `$ make` to see all the available tasks.\n\nTo get started, run the command below, which:\n\n- Creates an isolated Python virtual environment inside `./venv`\n  (via the standard library [venv](https://docs.python.org/3/library/venv.html) tool);\n- installs all dependencies and also installs HTTPie\n  (in editable mode so that the `http` command will point to your\n  working copy).\n- and runs tests (It is the same as running `make install test`).\n\n```bash\n$ make all\n```\n\n#### Python virtual environment\n\nActivate the Python virtual environment—created via the `make install`\ntask during [setup](#setup) for your active shell session using the following command:\n\n```bash\n$ source venv/bin/activate\n```\n\n(If you use `virtualenvwrapper`, you can also use `workon httpie` to\nactivate the environment — we have created a symlink for you. It’s a bit of\na hack but it works™.)\n\nYou should now see `(httpie)` next to your shell prompt, and\nthe `http` command should point to your development copy:\n\n```bash\n(httpie) ~/Code/httpie $ which http\n/Users/<user>/Code/httpie/venv/bin/http\n(httpie) ~/Code/httpie $ http --version\n2.0.0-dev\n```\n\n(Btw, you don’t need to activate the virtual environment if you just want\nrun some of the `make` tasks. You can also invoke the development\nversion of HTTPie directly with `./venv/bin/http` without having to activate\nthe environment first. The same goes for `./venv/bin/pytest`, etc.).\n\n### Making Changes\n\nPlease make sure your changes conform to [Style Guide for Python Code](https://python.org/dev/peps/pep-0008/) (PEP8)\nand that `make pycodestyle` passes.\n\n### Testing & CI\n\nPlease add tests for any new features and bug fixes.\n\nWhen you open a Pull Request, [GitHub Actions](https://github.com/httpie/cli/actions) will automatically run HTTPie’s [test suite](https://github.com/httpie/cli/tree/master/tests) against your code, so please make sure all checks pass.\n\n#### Running tests locally\n\nHTTPie uses the [pytest](https://pytest.org/) runner.\n\n```bash\n# Run tests on the current Python interpreter with coverage.\n$ make test\n\n# Run tests with coverage\n$ make test-cover\n\n# Test PEP8 compliance\n$ make codestyle\n\n# Run extended tests — for code as well as .md files syntax, packaging, etc.\n$ make test-all\n```\n\n#### Running specific tests\n\nAfter you have activated your virtual environment (see [setup](#setup)), you\ncan run specific tests from the terminal:\n\n```bash\n# Run specific tests on the current Python\n$ python -m pytest tests/test_uploads.py\n$ python -m pytest tests/test_uploads.py::TestMultipartFormDataFileUpload\n$ python -m pytest tests/test_uploads.py::TestMultipartFormDataFileUpload::test_upload_ok\n```\n\nSee [Makefile](https://github.com/httpie/cli/blob/master/Makefile) for additional development utilities.\n\n#### Running benchmarks\n\nIf you are trying to work on speeding up HTTPie and want to verify your results, you\ncan run the benchmark suite. The suite will compare the last commit of your branch\nwith the master branch of your repository (or a fresh checkout of HTTPie master, through\n`--fresh`) and report the results back.\n\n```bash\n$ python extras/profiling/run.py\n```\n\nThe benchmarks can also be run on the CI. Since it is a long process, it requires manual\noversight. Ping one of the maintainers to get a `benchmark` label on your branch.\n\n#### Windows\n\nIf you are on a Windows machine and not able to run `make`,\nfollow the next steps for a basic setup. As a prerequisite, you need to have\nPython 3.7+ installed.\n\nCreate a virtual environment and activate it:\n\n```powershell\nC:\\> python -m venv --prompt httpie venv\nC:\\> venv\\Scripts\\activate\n```\n\nInstall HTTPie in editable mode with all the dependencies:\n\n```powershell\nC:\\> python -m pip install --upgrade -e .[dev]\n```\n\nYou should now see `(httpie)` next to your shell prompt, and\nthe `http` command should point to your development copy:\n\n```powershell\n# In PowerShell:\n(httpie) PS C:\\Users\\<user>\\httpie> Get-Command http\nCommandType     Name                                               Version    Source\n-----------     ----                                               -------    ------\nApplication     http.exe                                           0.0.0.0    C:\\Users\\<user>\\httpie\\venv\\Scripts\\http.exe\n```\n\n```bash\n# In CMD:\n(httpie) C:\\Users\\<user>\\httpie> where http\nC:\\Users\\<user>\\httpie\\venv\\Scripts\\http.exe\nC:\\Users\\<user>\\AppData\\Local\\Programs\\Python\\Python38-32\\Scripts\\http.exe\n\n(httpie) C:\\Users\\<user>\\httpie> http --version\n2.3.0-dev\n```\n\nUse `pytest` to run tests locally with an active virtual environment:\n\n```bash\n# Run all tests\n$ python -m pytest\n```\n\n______________________________________________________________________\n\nFinally, feel free to add yourself to [AUTHORS](https://github.com/httpie/cli/blob/master/AUTHORS.md)!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.498046875,
          "content": "Copyright © 2012-2022 Jakub Roztocil <jakub@roztocil.co>\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice,\n       this list of conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    3. Neither the name of the copyright holder nor the names of its contributors\n       may be used to endorse or promote products derived from this software\n       without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.166015625,
          "content": "include LICENSE\ninclude README.md\ninclude CHANGELOG.md\ninclude AUTHORS.md\ninclude docs/README.md\n\n# <https://github.com/httpie/cli/issues/182>\nrecursive-include tests/ *\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 6.5,
          "content": "###############################################################################\n# See ./CONTRIBUTING.md\n###############################################################################\n\n.PHONY: build\n\nROOT_DIR:=$(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))\nVERSION=$(shell grep __version__ httpie/__init__.py)\nH1=\"\\n\\n\\033[0;32m\\#\\#\\# \"\nH1END=\" \\#\\#\\# \\033[0m\\n\"\n\n\n# Only used to create our venv.\nSYSTEM_PYTHON=python3\n\nVENV_ROOT=venv\nVENV_BIN=$(VENV_ROOT)/bin\nVENV_PIP=$(VENV_BIN)/pip3\nVENV_PYTHON=$(VENV_BIN)/python\n\n\nexport PATH := $(VENV_BIN):$(PATH)\n\n\n\ndefault: list-tasks\n\n\n###############################################################################\n# Default task to get a list of tasks when `make' is run without args.\n# <https://stackoverflow.com/questions/4219255>\n###############################################################################\n\nlist-tasks:\n\t@echo Available tasks:\n\t@echo ----------------\n\t@$(MAKE) -pRrq -f $(lastword $(MAKEFILE_LIST)) : 2>/dev/null | awk -v RS= -F: '/^# File/,/^# Finished Make data base/ {if ($$1 !~ \"^[#.]\") {print $$1}}' | sort | grep -E -v -e '^[^[:alnum:]]' -e '^$@$$'\n\t@echo\n\n\n###############################################################################\n# Installation\n###############################################################################\n\nall: uninstall-httpie install test\n\n\ninstall: venv install-reqs\n\n\ninstall-reqs:\n\t@echo $(H1)Updating package tools$(H1END)\n\t$(VENV_PIP) install --upgrade pip wheel build\n\n\t@echo $(H1)Installing dev requirements$(H1END)\n\t$(VENV_PIP) install --upgrade '.[dev]' '.[test]'\n\n\t@echo $(H1)Installing HTTPie$(H1END)\n\t$(VENV_PIP) install --upgrade --editable .\n\n\t@echo\n\n\nclean:\n\t@echo $(H1)Cleaning up$(H1END)\n\trm -rf $(VENV_ROOT)\n\t# Remove symlink for virtualenvwrapper, if we’ve created one.\n\t[ -n \"$(WORKON_HOME)\" -a -L \"$(WORKON_HOME)/httpie\" -a -f \"$(WORKON_HOME)/httpie\" ] && rm $(WORKON_HOME)/httpie || true\n\trm -rf *.egg dist build .coverage .cache .pytest_cache httpie.egg-info\n\tfind . -name '__pycache__' -delete -o -name '*.pyc' -delete\n\t@echo\n\n\nvenv:\n\t@echo $(H1)Creating a Python environment $(VENV_ROOT) $(H1END)\n\n\t$(SYSTEM_PYTHON) -m venv --prompt httpie $(VENV_ROOT)\n\n\t@echo\n\t@echo done.\n\t@echo\n\t@echo To active it manually, run:\n\t@echo\n\t@echo \"    source $(VENV_BIN)/activate\"\n\t@echo\n\t@echo '(learn more: https://docs.python.org/3/library/venv.html)'\n\t@echo\n\t@if [ -n \"$(WORKON_HOME)\" ]; then \\\n\t\techo $(ROOT_DIR) >  $(VENV_ROOT)/.project; \\\n\t\tif [ ! -d $(WORKON_HOME)/httpie -a ! -L $(WORKON_HOME)/httpie ]; then \\\n\t\t\tln -s $(ROOT_DIR)/$(VENV_ROOT) $(WORKON_HOME)/httpie ; \\\n\t\t\techo ''; \\\n\t\t\techo 'Since you use virtualenvwrapper, we created a symlink'; \\\n\t\t\techo 'so you can also use \"workon httpie\" to activate the venv.'; \\\n\t\t\techo ''; \\\n\t\tfi; \\\n\tfi\n\n\n###############################################################################\n# Testing\n###############################################################################\n\n\ntest:\n\t@echo $(H1)Running tests$(HEADER_EXTRA)$(H1END)\n\t$(VENV_BIN)/python -m pytest $(COV)\n\t@echo\n\n\ntest-cover: COV=--cov=httpie --cov=tests\ntest-cover: HEADER_EXTRA=' (with coverage)'\ntest-cover: test\n\n\n# test-all is meant to test everything — even this Makefile\ntest-all: clean install test test-dist codestyle\n\t@echo\n\n\ntest-dist: test-sdist test-bdist-wheel\n\t@echo\n\n\ntest-sdist: clean venv\n\t@echo $(H1)Testing sdist build an installation$(H1END)\n\t$(VENV_PIP) install build\n\t$(VENV_PYTHON) -m build --sdist\n\t$(VENV_PIP) install --force-reinstall --upgrade dist/*.gz\n\t$(VENV_BIN)/http --version\n\t@echo\n\n\ntest-bdist-wheel: clean venv\n\t@echo $(H1)Testing wheel build an installation$(H1END)\n\t$(VENV_PIP) install build\n\t$(VENV_PYTHON) -m build --wheel\n\t$(VENV_PIP) install --force-reinstall --upgrade dist/*.whl\n\t$(VENV_BIN)/http --version\n\t@echo\n\n\ntwine-check:\n\ttwine check dist/*\n\n\n# Kept for convenience, \"make codestyle\" is preferred though\npycodestyle: codestyle\n\n\ncodestyle:\n\t@echo $(H1)Running flake8$(H1END)\n\t@[ -f $(VENV_BIN)/flake8 ] || $(VENV_PIP) install --upgrade --editable '.[dev]'\n\t$(VENV_BIN)/flake8 httpie/ tests/ extras/profiling/ docs/packaging/brew/ *.py\n\t@echo\n\n\ncodecov-upload:\n\t@echo $(H1)Running codecov$(H1END)\n\t@[ -f $(VENV_BIN)/codecov ] || $(VENV_PIP) install codecov\n\t# $(VENV_BIN)/codecov --required\n\t$(VENV_BIN)/codecov\n\t@echo\n\n\ndoc-check:\n\t@echo $(H1)Running documentations checks$(H1END)\n\tmdl --git-recurse --style docs/markdownlint.rb .\n\n\n###############################################################################\n# Publishing to PyPi\n###############################################################################\n\n\nbuild:\n\trm -rf build/ dist/\n\tmv httpie/internal/__build_channel__.py httpie/internal/__build_channel__.py.original\n\techo 'BUILD_CHANNEL = \"pip\"' > httpie/internal/__build_channel__.py\n\t$(VENV_PYTHON) -m build --sdist --wheel --outdir dist/\n\tmv httpie/internal/__build_channel__.py.original httpie/internal/__build_channel__.py\n\n\npublish: test-all publish-no-test\n\n\npublish-no-test:\n\t@echo $(H1)Testing wheel build an installation$(H1END)\n\t@echo \"$(VERSION)\"\n\t@echo \"$(VERSION)\" | grep -q \"dev\" && echo '!!!Not publishing dev version!!!' && exit 1 || echo ok\n\tmake build\n\tmake twine-check\n\t$(VENV_BIN)/twine upload --repository=httpie dist/*\n\t@echo\n\n\n\n###############################################################################\n# Uninstalling\n###############################################################################\n\nuninstall-httpie:\n\t@echo $(H1)Uninstalling httpie$(H1END)\n\t- $(VENV_PIP) uninstall --yes httpie &2>/dev/null\n\n\t@echo \"Verifying…\"\n\tcd .. && ! $(VENV_PYTHON) -m httpie --version &2>/dev/null\n\n\t@echo \"Done\"\n\t@echo\n\n\n###############################################################################\n# Homebrew\n###############################################################################\n\nbrew-deps:\n\tdocs/packaging/brew/brew-deps.py\n\nbrew-test:\n\t@echo $(H1)Uninstalling httpie$(H1END)\n\t- brew uninstall httpie\n\n\t@echo $(H1)Building from source…$(H1END)\n\t- brew install --HEAD --build-from-source ./docs/packaging/brew/httpie.rb\n\n\t@echo $(H1)Verifying…$(H1END)\n\thttp --version\n\thttps --version\n\n\t@echo $(H1)Auditing…$(H1END)\n\tbrew audit --strict httpie\n\n###############################################################################\n# Generated content\n###############################################################################\n\ncontent: man installation-docs\n\nman: install\n\t@echo $(H1)Regenerate man pages$(H1END)\n\t$(VENV_PYTHON) extras/scripts/generate_man_pages.py\n\ninstallation-docs:\n\t@echo $(H1)Updating installation instructions in the docs$(H1END)\n\t$(VENV_PYTHON) docs/installation/generate.py\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.7783203125,
          "content": "<h2 align=\"center\">\n    <a href=\"https://httpie.io\" target=\"blank_\">\n        <img height=\"100\" alt=\"HTTPie\" src=\"https://raw.githubusercontent.com/httpie/cli/master/docs/httpie-logo.svg\" />\n    </a>\n    <br>\n    HTTPie CLI: human-friendly HTTP client for the API era\n</h2>\n\n<div align=\"center\">\n\n[![HTTPie for Desktop](https://img.shields.io/static/v1?label=HTTPie&message=Desktop&color=4B78E6)](https://httpie.io/product)\n[![](https://img.shields.io/static/v1?label=HTTPie&message=Web%20%26%20Mobile&color=73DC8C)](https://httpie.io/app)\n[![](https://img.shields.io/static/v1?label=HTTPie&message=CLI&color=FA9BFA)](https://httpie.io/cli)\n[![Twitter](https://img.shields.io/twitter/follow/httpie?style=flat&color=%234B78E6&logoColor=%234B78E6)](https://twitter.com/httpie)\n[![Chat](https://img.shields.io/discord/725351238698270761?style=flat&label=Chat%20on%20Discord&color=%23FA9BFA)](https://httpie.io/discord)\n\n</div>\n\n\n<div align=\"center\">\n\n[![Docs](https://img.shields.io/badge/stable%20docs-httpie.io%2Fdocs%2Fcli-brightgreen?style=flat&color=%2373DC8C&label=Docs)](https://httpie.org/docs/cli)\n[![Latest version](https://img.shields.io/pypi/v/httpie.svg?style=flat&label=Latest&color=%234B78E6&logo=&logoColor=white)](https://pypi.python.org/pypi/httpie)\n[![Build](https://img.shields.io/github/actions/workflow/status/httpie/cli/tests.yml?branch=master&color=%23FA9BFA&label=Build)](https://github.com/httpie/cli/actions)\n[![Coverage](https://img.shields.io/codecov/c/github/httpie/cli?style=flat&label=Coverage&color=%2373DC8C)](https://codecov.io/gh/httpie/cli)\n[![PyPi downloads](https://img.shields.io/pepy/dt/httpie?style=flat&label=Downloads%20from%20PyPi%20only&color=4B78E6)](https://www.pepy.tech/projects/httpie)\n\n</div>\n\nHTTPie (pronounced _aitch-tee-tee-pie_) is a command-line HTTP client.\nIts goal is to make CLI interaction with web services as human-friendly as possible.\nHTTPie is designed for testing, debugging, and generally interacting with APIs & HTTP servers.\nThe `http` & `https` commands allow for creating and sending arbitrary HTTP requests.\nThey use simple and natural syntax and provide formatted and colorized output.\n\n<div align=\"center\">\n\n<img src=\"https://raw.githubusercontent.com/httpie/cli/master/docs/httpie-animation.gif\" alt=\"HTTPie in action\" width=\"100%\"/>\n\n\n</div>\n\n\n\n\n## We lost 54k GitHub stars\n\nPlease note we recently accidentally made this repo private for a moment, and GitHub deleted our community that took a decade to build. Read the full story here: https://httpie.io/blog/stardust\n\n![](docs/stardust.png)\n\n\n## Getting started\n\n- [Installation instructions →](https://httpie.io/docs#installation)\n- [Full documentation →](https://httpie.io/docs)\n\n## Features\n\n- Expressive and intuitive syntax\n- Formatted and colorized terminal output\n- Built-in JSON support\n- Forms and file uploads\n- HTTPS, proxies, and authentication\n- Arbitrary request data\n- Custom headers\n- Persistent sessions\n- `wget`-like downloads\n\n[See all features →](https://httpie.io/docs)\n\n## Examples\n\nHello World:\n\n```bash\nhttps httpie.io/hello\n```\n\nCustom [HTTP method](https://httpie.io/docs#http-method), [HTTP headers](https://httpie.io/docs#http-headers) and [JSON](https://httpie.io/docs#json) data:\n\n```bash\nhttp PUT pie.dev/put X-API-Token:123 name=John\n```\n\nBuild and print a request without sending it using [offline mode](https://httpie.io/docs/cli/offline-mode):\n\n```bash\nhttp --offline pie.dev/post hello=offline\n```\n\nUse [GitHub API](https://developer.github.com/v3/issues/comments/#create-a-comment) to post a comment on an [Issue](https://github.com/httpie/cli/issues/83) with [authentication](https://httpie.io/docs#authentication):\n\n```bash\nhttp -a USERNAME POST https://api.github.com/repos/httpie/cli/issues/83/comments body='HTTPie is awesome! :heart:'\n```\n\n[See more examples →](https://httpie.io/docs#examples)\n\n## Community & support\n\n- Visit the [HTTPie website](https://httpie.io) for full documentation and useful links.\n- Join our [Discord server](https://httpie.io/discord) is to ask questions, discuss features, and for general API chat.\n- Tweet at [@httpie](https://twitter.com/httpie) on Twitter.\n- Use [StackOverflow](https://stackoverflow.com/questions/tagged/httpie) to ask questions and include a `httpie` tag.\n- Create [GitHub Issues](https://github.com/httpie/cli/issues) for bug reports and feature requests.\n- Subscribe to the [HTTPie newsletter](https://httpie.io) for occasional updates.\n\n## Contributing\n\nHave a look through existing [Issues](https://github.com/httpie/cli/issues) and [Pull Requests](https://github.com/httpie/cli/pulls) that you could help with. If you'd like to request a feature or report a bug, please [create a GitHub Issue](https://github.com/httpie/cli/issues) using one of the templates provided.\n\n[See contribution guide →](https://github.com/httpie/cli/blob/master/CONTRIBUTING.md)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.5751953125,
          "content": "# Security policy\n\n## Reporting a vulnerability\n\nWhen you identify a vulnerability in HTTPie, please report it privately using one of the following channels:\n\n- Email to [`security@httpie.io`](mailto:security@httpie.io)\n- Report on [huntr.dev](https://huntr.dev/)\n\nIn addition to the description of the vulnerability, include the following information:\n\n- A short reproducer to verify it (it can be a small HTTP server, shell script, docker image, etc.)\n- Your deemed severity level of the vulnerability (`LOW`/`MEDIUM`/`HIGH`/`CRITICAL`)\n- [CWE](https://cwe.mitre.org/) ID, if available.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "httpie",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.271484375,
          "content": "[pytest]\nmarkers =\n    # If you want to run tests without a full HTTPie installation\n    # we advise you to disable the markers below, e.g:\n    # pytest -m 'not requires_installation and not requires_external_processes'\n    requires_installation\n    requires_external_processes\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 2.5654296875,
          "content": "# Please keep all characters in this file in ASCII\n# distutils uses system's locale to interpret it and not everybody\n# uses UTF-8. See https://github.com/httpie/cli/issues/1039\n# for an example\n[wheel]\n\n\n[tool:pytest]\n# <https://docs.pytest.org/en/latest/customize.html>\ntestpaths = httpie tests\nnorecursedirs = tests/fixtures\naddopts = --tb=native --doctest-modules --verbose\nxfail_strict = True\n\n[metadata]\nname = httpie\nversion = attr: httpie.__version__\nauthor = Jakub Roztocil\nauthor_email = jakub@roztocil.co\nlicense = BSD\ndescription = HTTPie: modern, user-friendly command-line HTTP client for the API era.\nurl = https://httpie.io/\nlong_description = file: README.md\nlong_description_content_type = text/markdown\nclassifiers =\n    Development Status :: 5 - Production/Stable\n    Programming Language :: Python\n    Programming Language :: Python :: 3 :: Only\n    Environment :: Console\n    Intended Audience :: Developers\n    Intended Audience :: System Administrators\n    License :: OSI Approved :: BSD License\n    Topic :: Internet :: WWW/HTTP\n    Topic :: Software Development\n    Topic :: System :: Networking\n    Topic :: Terminals\n    Topic :: Text Processing\n    Topic :: Utilities\nproject_urls =\n    GitHub = https://github.com/httpie/cli\n    Twitter = https://twitter.com/httpie\n    Discord = https://httpie.io/discord\n    Documentation = https://httpie.io/docs\n    Online Demo = https://httpie.io/run\n\n\n[options]\npackages = find:\ninstall_requires =\n    pip\n    charset_normalizer>=2.0.0\n    defusedxml>=0.6.0\n    requests[socks] >=2.22.0\n    Pygments>=2.5.2\n    requests-toolbelt>=0.9.1\n    multidict>=4.7.0\n    setuptools\n    importlib-metadata>=1.4.0; python_version<\"3.8\"\n    rich>=9.10.0\n    colorama>=0.2.4; sys_platform==\"win32\"\npython_requires = >=3.7\n\n\n[flake8]\n# <https://flake8.pycqa.org/en/latest/user/error-codes.html>\n# E501 - line too long\n# W503 - line break before binary operator\nignore = E501,W503\n\n[options.packages.find]\ninclude =\n    httpie\n    httpie.*\n\n[options.entry_points]\nconsole_scripts =\n    http = httpie.__main__:main\n    https = httpie.__main__:main\n    httpie = httpie.manager.__main__:main\n\n[options.extras_require]\ndev =\n    pytest\n    pytest-httpbin>=0.0.6\n    responses\n    pytest-mock\n    werkzeug<2.1.0\n    flake8\n    flake8-comprehensions\n    flake8-deprecated\n    flake8-mutable\n    flake8-tuple\n    pyopenssl\n    pytest-cov\n    pyyaml\n    twine\n    wheel\n    Jinja2\ntest =\n    pytest\n    pytest-httpbin>=0.0.6\n    responses\n    pytest-mock\n    werkzeug<2.1.0\n\n[options.data_files]\nshare/man/man1 =\n    extras/man/http.1\n    extras/man/https.1\n    extras/man/httpie.1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.037109375,
          "content": "from setuptools import setup\n\nsetup()\n"
        },
        {
          "name": "snapcraft.yaml",
          "type": "blob",
          "size": 3.044921875,
          "content": "name: httpie\ntitle: HTTPie\nsummary: Modern, user-friendly command-line HTTP client for the API era\ndescription: |\n  HTTPie *aitch-tee-tee-pie* is a user-friendly command-line HTTP client\n  for the API era.\n  It comes with JSON support, syntax highlighting, persistent sessions,\n  wget-like downloads, plugins, and more.\n\n  The project's goal is to make CLI interaction with web services as\n  human-friendly as possible. HTTPie is designed for testing, debugging,\n  and generally interacting with APIs & HTTP servers.\n  The http & https commands allow for creating and sending arbitrary HTTP\n  requests. They use simple and natural syntax and provide formatted and\n  colorized output.\n\n  Main features:\n    - Built-in JSON support\n    - Colorized and formatted terminal output\n    - Sensible defaults for the API era\n    - Persistent sessions\n    - Forms and file uploads\n    - HTTPS, proxies, and authentication support\n    - Support for arbitrary request data and headers\n    - Wget-like downloads\n    - Extensions API\n    - Expressive and intuitive syntax\n    - Linux, macOS, Windows, and FreeBSD support\n    - All that & more in 2 simple commands: http + https\n\n  Links\n    - Documentation: https://httpie.io/docs\n    - Try in browser: https://httpie.io/run\n    - GitHub: https://github.com/httpie/cli\n    - Twitter: https://twitter.com/httpie\n    - Discord: https://httpie.io/chat\nlicense: BSD-3-Clause-LBNL\n\n# Automatically change the current version based on the source code\nadopt-info: httpie\n\n# https://snapcraft.io/docs/snapcraft-top-level-metadata#heading--icon\n# icon:\n\nbase: core20\nconfinement: strict\ngrade: stable\ncompression: lzo\n\nparts:\n  httpie:\n    source: .\n    plugin: python\n\n    # Guess the current version from sources\n    override-pull: |\n      snapcraftctl pull\n      snapcraftctl set-version $(grep '__version__' httpie/__init__.py | cut -d\"'\" -f2)\n\n    override-build: |\n      snapcraftctl build\n\n      echo \"Adding HTTPie plugins ...\"\n      python -m pip install httpie-unixsocket\n      python -m pip install httpie-snapdsocket\n\n    override-prime: |\n      snapcraftctl prime\n\n      echo \"Removing useless files ...\"\n      packages=$SNAPCRAFT_PRIME/lib/python3.8/site-packages\n      rm -rfv $packages/pkg_resources/tests\n      rm -rfv $packages/requests_unixsocket/test*\n\n      echo \"Compiling pyc files ...\"\n      python -m compileall -f $packages\n\n      echo \"Copying extra files ...\"\n      cp $SNAPCRAFT_PART_SRC/extras/httpie-completion.bash $SNAPCRAFT_PRIME/\n\nplugs:\n  dot-config-httpie:\n    interface: personal-files\n    write:\n      - $HOME/.config/httpie\n  dot-httpie:\n    interface: personal-files\n    write:\n      - $HOME/.httpie\n\napps:\n  http:\n    command: bin/http\n    plugs: &plugs\n      - dot-config-httpie\n      - dot-httpie\n      - home\n      - network\n      - removable-media\n    completer: httpie-completion.bash\n    environment:\n      LC_ALL: C.UTF-8\n\n  https:\n    command: bin/https\n    plugs: *plugs\n    completer: httpie-completion.bash\n    environment:\n      LC_ALL: C.UTF-8\n\n  httpie:\n    command: bin/httpie\n    plugs: *plugs\n    environment:\n      LC_ALL: C.UTF-8\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}