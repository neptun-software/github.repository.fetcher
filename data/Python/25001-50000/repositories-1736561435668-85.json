{
  "metadata": {
    "timestamp": 1736561435668,
    "page": 85,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "encode/django-rest-framework",
      "stars": 28655,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1533203125,
          "content": "*.pyc\n*.db\n*~\n.*\n*.py.bak\n\n\n/site/\n/htmlcov/\n/coverage/\n/build/\n/dist/\n/*.egg-info/\n/env/\nMANIFEST\ncoverage.*\n\n!.github\n!.gitignore\n!.pre-commit-config.yaml\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.8056640625,
          "content": "repos:\n- repo: https://github.com/pre-commit/pre-commit-hooks\n  rev: v4.5.0\n  hooks:\n  - id: check-added-large-files\n  - id: check-case-conflict\n  - id: check-json\n  - id: check-merge-conflict\n  - id: check-symlinks\n  - id: check-toml\n- repo: https://github.com/pycqa/isort\n  rev: 5.13.2\n  hooks:\n  - id: isort\n- repo: https://github.com/PyCQA/flake8\n  rev: 7.0.0\n  hooks:\n  - id: flake8\n    additional_dependencies:\n    - flake8-tidy-imports\n- repo: https://github.com/adamchainz/blacken-docs\n  rev: 1.16.0\n  hooks:\n  - id: blacken-docs\n    exclude: ^(?!docs).*$\n    additional_dependencies:\n    - black==23.1.0\n- repo: https://github.com/codespell-project/codespell\n  # Configuration for codespell is in .codespellrc\n  rev: v2.2.6\n  hooks:\n  - id: codespell\n    exclude: locale|kickstarter-announcement.md|coreapi-0.1.1.js\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.7177734375,
          "content": "# Contributing to REST framework\n\nAt this point in its lifespan we consider Django REST framework to be essentially feature-complete. We may accept pull requests that track the continued development of Django versions, but would prefer not to accept new features or code formatting changes.\n\nApart from minor documentation changes, the [GitHub discussions page](https://github.com/encode/django-rest-framework/discussions) should generally be your starting point. Please only raise an issue or pull request if you've been recommended to do so after discussion.\n\nThe [Contributing guide in the documentation](https://www.django-rest-framework.org/community/contributing/) gives some more information on our process and code of conduct.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.5009765625,
          "content": "# License\n\nCopyright Â© 2011-present, [Encode OSS Ltd](https://www.encode.io/).\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.314453125,
          "content": "include README.md\ninclude LICENSE.md\nrecursive-include tests/ *\nrecursive-include rest_framework/static *.js *.css *.map *.png *.ico *.eot *.svg *.ttf *.woff *.woff2\nrecursive-include rest_framework/templates *.html schema.js\nrecursive-include rest_framework/locale *.mo\nglobal-exclude __pycache__\nglobal-exclude *.py[co]\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.375,
          "content": "*Note*: Before submitting a code change, please review our [contributing guidelines](https://www.django-rest-framework.org/community/contributing/#pull-requests).\n\n## Description\n\nPlease describe your pull request. If it fixes a bug or resolves a feature request, be sure to link to that issue. When linking to an issue, please use `refs #...` in the description of the pull request.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.150390625,
          "content": "# [Django REST framework][docs]\n\n[![build-status-image]][build-status]\n[![coverage-status-image]][codecov]\n[![pypi-version]][pypi]\n\n**Awesome web-browsable Web APIs.**\n\nFull documentation for the project is available at [https://www.django-rest-framework.org/][docs].\n\n---\n\n# Funding\n\nREST framework is a *collaboratively funded project*. If you use\nREST framework commercially we strongly encourage you to invest in its\ncontinued development by [signing up for a paid plan][funding].\n\nThe initial aim is to provide a single full-time position on REST framework.\n*Every single sign-up makes a significant impact towards making that possible.*\n\n[![][sentry-img]][sentry-url]\n[![][stream-img]][stream-url]\n[![][spacinov-img]][spacinov-url]\n[![][retool-img]][retool-url]\n[![][bitio-img]][bitio-url]\n[![][posthog-img]][posthog-url]\n[![][cryptapi-img]][cryptapi-url]\n[![][fezto-img]][fezto-url]\n[![][svix-img]][svix-url]\n[![][zuplo-img]][zuplo-url]\n\nMany thanks to all our [wonderful sponsors][sponsors], and in particular to our premium backers, [Sentry][sentry-url], [Stream][stream-url], [Spacinov][spacinov-url], [Retool][retool-url], [bit.io][bitio-url], [PostHog][posthog-url], [CryptAPI][cryptapi-url], [FEZTO][fezto-url], [Svix][svix-url], and [Zuplo][zuplo-url].\n\n---\n\n# Overview\n\nDjango REST framework is a powerful and flexible toolkit for building Web APIs.\n\nSome reasons you might want to use REST framework:\n\n* The Web browsable API is a huge usability win for your developers.\n* [Authentication policies][authentication] including optional packages for [OAuth1a][oauth1-section] and [OAuth2][oauth2-section].\n* [Serialization][serializers] that supports both [ORM][modelserializer-section] and [non-ORM][serializer-section] data sources.\n* Customizable all the way down - just use [regular function-based views][functionview-section] if you don't need the [more][generic-views] [powerful][viewsets] [features][routers].\n* [Extensive documentation][docs], and [great community support][group].\n\n**Below**: *Screenshot from the browsable API*\n\n![Screenshot][image]\n\n----\n\n# Requirements\n\n* Python 3.8+\n* Django 4.2, 5.0, 5.1\n\nWe **highly recommend** and only officially support the latest patch release of\neach Python and Django series.\n\n# Installation\n\nInstall using `pip`...\n\n    pip install djangorestframework\n\nAdd `'rest_framework'` to your `INSTALLED_APPS` setting.\n```python\nINSTALLED_APPS = [\n    ...\n    'rest_framework',\n]\n```\n\n# Example\n\nLet's take a look at a quick example of using REST framework to build a simple model-backed API for accessing users and groups.\n\nStartup up a new project like so...\n\n    pip install django\n    pip install djangorestframework\n    django-admin startproject example .\n    ./manage.py migrate\n    ./manage.py createsuperuser\n\n\nNow edit the `example/urls.py` module in your project:\n\n```python\nfrom django.contrib.auth.models import User\nfrom django.urls import include, path\nfrom rest_framework import routers, serializers, viewsets\n\n\n# Serializers define the API representation.\nclass UserSerializer(serializers.HyperlinkedModelSerializer):\n    class Meta:\n        model = User\n        fields = ['url', 'username', 'email', 'is_staff']\n\n\n# ViewSets define the view behavior.\nclass UserViewSet(viewsets.ModelViewSet):\n    queryset = User.objects.all()\n    serializer_class = UserSerializer\n\n\n# Routers provide a way of automatically determining the URL conf.\nrouter = routers.DefaultRouter()\nrouter.register(r'users', UserViewSet)\n\n# Wire up our API using automatic URL routing.\n# Additionally, we include login URLs for the browsable API.\nurlpatterns = [\n    path('', include(router.urls)),\n    path('api-auth/', include('rest_framework.urls', namespace='rest_framework')),\n]\n```\n\nWe'd also like to configure a couple of settings for our API.\n\nAdd the following to your `settings.py` module:\n\n```python\nINSTALLED_APPS = [\n    ...  # Make sure to include the default installed apps here.\n    'rest_framework',\n]\n\nREST_FRAMEWORK = {\n    # Use Django's standard `django.contrib.auth` permissions,\n    # or allow read-only access for unauthenticated users.\n    'DEFAULT_PERMISSION_CLASSES': [\n        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',\n    ]\n}\n```\n\nThat's it, we're done!\n\n    ./manage.py runserver\n\nYou can now open the API in your browser at `http://127.0.0.1:8000/`, and view your new 'users' API. If you use the `Login` control in the top right corner you'll also be able to add, create and delete users from the system.\n\nYou can also interact with the API using command line tools such as [`curl`](https://curl.haxx.se/). For example, to list the users endpoint:\n\n    $ curl -H 'Accept: application/json; indent=4' -u admin:password http://127.0.0.1:8000/users/\n    [\n        {\n            \"url\": \"http://127.0.0.1:8000/users/1/\",\n            \"username\": \"admin\",\n            \"email\": \"admin@example.com\",\n            \"is_staff\": true,\n        }\n    ]\n\nOr to create a new user:\n\n    $ curl -X POST -d username=new -d email=new@example.com -d is_staff=false -H 'Accept: application/json; indent=4' -u admin:password http://127.0.0.1:8000/users/\n    {\n        \"url\": \"http://127.0.0.1:8000/users/2/\",\n        \"username\": \"new\",\n        \"email\": \"new@example.com\",\n        \"is_staff\": false,\n    }\n\n# Documentation & Support\n\nFull documentation for the project is available at [https://www.django-rest-framework.org/][docs].\n\nFor questions and support, use the [REST framework discussion group][group], or `#restframework` on libera.chat IRC.\n\n# Security\n\nPlease see the [security policy][security-policy].\n\n[build-status-image]: https://github.com/encode/django-rest-framework/actions/workflows/main.yml/badge.svg\n[build-status]: https://github.com/encode/django-rest-framework/actions/workflows/main.yml\n[coverage-status-image]: https://img.shields.io/codecov/c/github/encode/django-rest-framework/master.svg\n[codecov]: https://codecov.io/github/encode/django-rest-framework?branch=master\n[pypi-version]: https://img.shields.io/pypi/v/djangorestframework.svg\n[pypi]: https://pypi.org/project/djangorestframework/\n[group]: https://groups.google.com/forum/?fromgroups#!forum/django-rest-framework\n\n[funding]: https://fund.django-rest-framework.org/topics/funding/\n[sponsors]: https://fund.django-rest-framework.org/topics/funding/#our-sponsors\n\n[sentry-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/sentry-readme.png\n[stream-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/stream-readme.png\n[spacinov-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/spacinov-readme.png\n[retool-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/retool-readme.png\n[bitio-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/bitio-readme.png\n[posthog-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/posthog-readme.png\n[cryptapi-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/cryptapi-readme.png\n[fezto-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/fezto-readme.png\n[svix-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/svix-premium.png\n[zuplo-img]: https://raw.githubusercontent.com/encode/django-rest-framework/master/docs/img/premium/zuplo-readme.png\n\n[sentry-url]: https://getsentry.com/welcome/\n[stream-url]: https://getstream.io/?utm_source=DjangoRESTFramework&utm_medium=Webpage_Logo_Ad&utm_content=Developer&utm_campaign=DjangoRESTFramework_Jan2022_HomePage\n[spacinov-url]: https://www.spacinov.com/\n[retool-url]: https://retool.com/?utm_source=djangorest&utm_medium=sponsorship\n[bitio-url]: https://bit.io/jobs?utm_source=DRF&utm_medium=sponsor&utm_campaign=DRF_sponsorship\n[posthog-url]: https://posthog.com?utm_source=drf&utm_medium=sponsorship&utm_campaign=open-source-sponsorship\n[cryptapi-url]: https://cryptapi.io\n[fezto-url]: https://www.fezto.xyz/?utm_source=DjangoRESTFramework\n[svix-url]: https://www.svix.com/?utm_source=django-REST&utm_medium=sponsorship\n[zuplo-url]: https://zuplo.link/django-gh\n\n[oauth1-section]: https://www.django-rest-framework.org/api-guide/authentication/#django-rest-framework-oauth\n[oauth2-section]: https://www.django-rest-framework.org/api-guide/authentication/#django-oauth-toolkit\n[serializer-section]: https://www.django-rest-framework.org/api-guide/serializers/#serializers\n[modelserializer-section]: https://www.django-rest-framework.org/api-guide/serializers/#modelserializer\n[functionview-section]: https://www.django-rest-framework.org/api-guide/views/#function-based-views\n[generic-views]: https://www.django-rest-framework.org/api-guide/generic-views/\n[viewsets]: https://www.django-rest-framework.org/api-guide/viewsets/\n[routers]: https://www.django-rest-framework.org/api-guide/routers/\n[serializers]: https://www.django-rest-framework.org/api-guide/serializers/\n[authentication]: https://www.django-rest-framework.org/api-guide/authentication/\n[image]: https://www.django-rest-framework.org/img/quickstart.png\n\n[docs]: https://www.django-rest-framework.org/\n[security-policy]: https://github.com/encode/django-rest-framework/security/policy\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.3798828125,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nSecurity issues are handled under the supervision of the [Django security team](https://www.djangoproject.com/foundation/teams/#security-team).\n\n **Please report security issues by emailing security@djangoproject.com**.\n\n The project maintainers will then work with you to resolve any issues where required, prior to any public disclosure.\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.1279296875,
          "content": "coverage:\n  precision: 2\n  round: down\n  range: \"80...100\"\n\n  status:\n    project: yes\n    patch: no\n    changes: no\n\ncomment: off\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs_theme",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 4.0029296875,
          "content": "site_name: Django REST framework\nsite_url: https://www.django-rest-framework.org/\nsite_description: Django REST framework - Web APIs for Django\n\nrepo_url: https://github.com/encode/django-rest-framework\n\ntheme:\n    name: mkdocs\n    custom_dir: docs_theme\n\nmarkdown_extensions:\n - admonition\n - toc:\n    anchorlink: True\n\nnav:\n - Home: 'index.md'\n - Tutorial:\n    - 'Quickstart': 'tutorial/quickstart.md'\n    - '1 - Serialization': 'tutorial/1-serialization.md'\n    - '2 - Requests and responses': 'tutorial/2-requests-and-responses.md'\n    - '3 - Class based views': 'tutorial/3-class-based-views.md'\n    - '4 - Authentication and permissions': 'tutorial/4-authentication-and-permissions.md'\n    - '5 - Relationships and hyperlinked APIs': 'tutorial/5-relationships-and-hyperlinked-apis.md'\n    - '6 - Viewsets and routers': 'tutorial/6-viewsets-and-routers.md'\n - API Guide:\n    - 'Requests': 'api-guide/requests.md'\n    - 'Responses': 'api-guide/responses.md'\n    - 'Views': 'api-guide/views.md'\n    - 'Generic views': 'api-guide/generic-views.md'\n    - 'Viewsets': 'api-guide/viewsets.md'\n    - 'Routers': 'api-guide/routers.md'\n    - 'Parsers': 'api-guide/parsers.md'\n    - 'Renderers': 'api-guide/renderers.md'\n    - 'Serializers': 'api-guide/serializers.md'\n    - 'Serializer fields': 'api-guide/fields.md'\n    - 'Serializer relations': 'api-guide/relations.md'\n    - 'Validators': 'api-guide/validators.md'\n    - 'Authentication': 'api-guide/authentication.md'\n    - 'Permissions': 'api-guide/permissions.md'\n    - 'Caching': 'api-guide/caching.md'\n    - 'Throttling': 'api-guide/throttling.md'\n    - 'Filtering': 'api-guide/filtering.md'\n    - 'Pagination': 'api-guide/pagination.md'\n    - 'Versioning': 'api-guide/versioning.md'\n    - 'Content negotiation': 'api-guide/content-negotiation.md'\n    - 'Metadata': 'api-guide/metadata.md'\n    - 'Schemas': 'api-guide/schemas.md'\n    - 'Format suffixes': 'api-guide/format-suffixes.md'\n    - 'Returning URLs': 'api-guide/reverse.md'\n    - 'Exceptions': 'api-guide/exceptions.md'\n    - 'Status codes': 'api-guide/status-codes.md'\n    - 'Testing': 'api-guide/testing.md'\n    - 'Settings': 'api-guide/settings.md'\n - Topics:\n     - 'Documenting your API': 'topics/documenting-your-api.md'\n     - 'Internationalization': 'topics/internationalization.md'\n     - 'AJAX, CSRF & CORS': 'topics/ajax-csrf-cors.md'\n     - 'HTML & Forms': 'topics/html-and-forms.md'\n     - 'Browser Enhancements': 'topics/browser-enhancements.md'\n     - 'The Browsable API': 'topics/browsable-api.md'\n     - 'REST, Hypermedia & HATEOAS': 'topics/rest-hypermedia-hateoas.md'\n - Community:\n     - 'Tutorials and Resources': 'community/tutorials-and-resources.md'\n     - 'Third Party Packages': 'community/third-party-packages.md'\n     - 'Contributing to REST framework': 'community/contributing.md'\n     - 'Project management': 'community/project-management.md'\n     - 'Release Notes': 'community/release-notes.md'\n     - '3.15 Announcement': 'community/3.15-announcement.md'\n     - '3.14 Announcement': 'community/3.14-announcement.md'\n     - '3.13 Announcement': 'community/3.13-announcement.md'\n     - '3.12 Announcement': 'community/3.12-announcement.md'\n     - '3.11 Announcement': 'community/3.11-announcement.md'\n     - '3.10 Announcement': 'community/3.10-announcement.md'\n     - '3.9 Announcement': 'community/3.9-announcement.md'\n     - '3.8 Announcement': 'community/3.8-announcement.md'\n     - '3.7 Announcement': 'community/3.7-announcement.md'\n     - '3.6 Announcement': 'community/3.6-announcement.md'\n     - '3.5 Announcement': 'community/3.5-announcement.md'\n     - '3.4 Announcement': 'community/3.4-announcement.md'\n     - '3.3 Announcement': 'community/3.3-announcement.md'\n     - '3.2 Announcement': 'community/3.2-announcement.md'\n     - '3.1 Announcement': 'community/3.1-announcement.md'\n     - '3.0 Announcement': 'community/3.0-announcement.md'\n     - 'Kickstarter Announcement': 'community/kickstarter-announcement.md'\n     - 'Mozilla Grant': 'community/mozilla-grant.md'\n     - 'Funding': 'community/funding.md'\n     - 'Jobs': 'community/jobs.md'\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.5478515625,
          "content": "# The base set of requirements for REST framework is actually\n# just Django and pytz, but for the purposes of development\n# and testing there are a number of packages that are useful\n# to install.\n\n# Laying these out as separate requirements files, allows us to\n# only included the relevant sets when running tox, and ensures\n# we are only ever declaring our dependencies in one place.\n\n-r requirements/requirements-optionals.txt\n-r requirements/requirements-testing.txt\n-r requirements/requirements-documentation.txt\n-r requirements/requirements-packaging.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "rest_framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "runtests.py",
          "type": "blob",
          "size": 1.9267578125,
          "content": "#! /usr/bin/env python3\nimport os\nimport sys\n\nimport pytest\n\n\ndef split_class_and_function(string):\n    class_string, function_string = string.split('.', 1)\n    return \"%s and %s\" % (class_string, function_string)\n\n\ndef is_function(string):\n    # `True` if it looks like a test function is included in the string.\n    return string.startswith('test_') or '.test_' in string\n\n\ndef is_class(string):\n    # `True` if first character is uppercase - assume it's a class name.\n    return string[0] == string[0].upper()\n\n\nif __name__ == \"__main__\":\n    if len(sys.argv) > 1:\n        pytest_args = sys.argv[1:]\n        first_arg = pytest_args[0]\n\n        try:\n            pytest_args.remove('--coverage')\n        except ValueError:\n            pass\n        else:\n            pytest_args = [\n                '--cov', '.',\n                '--cov-report', 'xml',\n            ] + pytest_args\n\n        try:\n            pytest_args.remove('--no-pkgroot')\n        except ValueError:\n            pass\n        else:\n            sys.path.pop(0)\n\n            # import rest_framework before pytest re-adds the package root directory.\n            import rest_framework\n            package_dir = os.path.join(os.getcwd(), 'rest_framework')\n            assert not rest_framework.__file__.startswith(package_dir)\n\n        if first_arg.startswith('-'):\n            # `runtests.py [flags]`\n            pytest_args = ['tests'] + pytest_args\n        elif is_class(first_arg) and is_function(first_arg):\n            # `runtests.py TestCase.test_function [flags]`\n            expression = split_class_and_function(first_arg)\n            pytest_args = ['tests', '-k', expression] + pytest_args[1:]\n        elif is_class(first_arg) or is_function(first_arg):\n            # `runtests.py TestCase [flags]`\n            # `runtests.py test_function [flags]`\n            pytest_args = ['tests', '-k', pytest_args[0]] + pytest_args[1:]\n    else:\n        pytest_args = []\n\n    sys.exit(pytest.main(pytest_args))\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.896484375,
          "content": "[metadata]\nlicense_files = LICENSE.md\n\n[tool:pytest]\naddopts=--tb=short --strict-markers -ra\ntestpaths = tests\nfilterwarnings = ignore:CoreAPI compatibility is deprecated*:rest_framework.RemovedInDRF317Warning\n\n[flake8]\nignore = E501,W503,W504\nbanned-modules = json = use from rest_framework.utils import json!\n\n[isort]\nskip=.tox\natomic=true\nmulti_line_output=5\nextra_standard_library=types\nknown_third_party=pytest,_pytest,django,pytz,uritemplate\nknown_first_party=rest_framework,tests\n\n[coverage:run]\n# NOTE: source is ignored with pytest-cov (but uses the same).\nsource = .\ninclude = rest_framework/*,tests/*\nbranch = 1\n\n[coverage:report]\ninclude = rest_framework/*,tests/*\nexclude_lines =\n    pragma: no cover\n    raise NotImplementedError\n\n[codespell]\n# Ref: https://github.com/codespell-project/codespell#using-a-config-file\nskip = */kickstarter-announcement.md,*.js,*.map,*.po\nignore-words-list = fo,malcom,ser\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.1015625,
          "content": "import os\nimport re\nimport shutil\nimport sys\nfrom io import open\n\nfrom setuptools import find_packages, setup\n\nCURRENT_PYTHON = sys.version_info[:2]\nREQUIRED_PYTHON = (3, 8)\n\n# This check and everything above must remain compatible with Python 2.7.\nif CURRENT_PYTHON < REQUIRED_PYTHON:\n    sys.stderr.write(\"\"\"\n==========================\nUnsupported Python version\n==========================\n\nThis version of Django REST Framework requires Python {}.{}, but you're trying\nto install it on Python {}.{}.\n\nThis may be because you are using a version of pip that doesn't\nunderstand the python_requires classifier. Make sure you\nhave pip >= 9.0 and setuptools >= 24.2, then try again:\n\n    $ python -m pip install --upgrade pip setuptools\n    $ python -m pip install djangorestframework\n\nThis will install the latest version of Django REST Framework which works on\nyour version of Python. If you can't upgrade your pip (or Python), request\nan older version of Django REST Framework:\n\n    $ python -m pip install \"djangorestframework<3.10\"\n\"\"\".format(*(REQUIRED_PYTHON + CURRENT_PYTHON)))\n    sys.exit(1)\n\n\ndef read(f):\n    with open(f, 'r', encoding='utf-8') as file:\n        return file.read()\n\n\ndef get_version(package):\n    \"\"\"\n    Return package version as listed in `__version__` in `init.py`.\n    \"\"\"\n    init_py = open(os.path.join(package, '__init__.py')).read()\n    return re.search(\"__version__ = ['\\\"]([^'\\\"]+)['\\\"]\", init_py).group(1)\n\n\nversion = get_version('rest_framework')\n\n\nif sys.argv[-1] == 'publish':\n    if os.system(\"pip freeze | grep twine\"):\n        print(\"twine not installed.\\nUse `pip install twine`.\\nExiting.\")\n        sys.exit()\n    os.system(\"python setup.py sdist bdist_wheel\")\n    if os.system(\"twine check dist/*\"):\n        print(\"twine check failed. Packages might be outdated.\")\n        print(\"Try using `pip install -U twine wheel`.\\nExiting.\")\n        sys.exit()\n    os.system(\"twine upload dist/*\")\n    print(\"You probably want to also tag the version now:\")\n    print(\"  git tag -a %s -m 'version %s'\" % (version, version))\n    print(\"  git push --tags\")\n    shutil.rmtree('dist')\n    shutil.rmtree('build')\n    shutil.rmtree('djangorestframework.egg-info')\n    sys.exit()\n\n\nsetup(\n    name='djangorestframework',\n    version=version,\n    url='https://www.django-rest-framework.org/',\n    license='BSD',\n    description='Web APIs for Django, made easy.',\n    long_description=read('README.md'),\n    long_description_content_type='text/markdown',\n    author='Tom Christie',\n    author_email='tom@tomchristie.com',  # SEE NOTE BELOW (*)\n    packages=find_packages(exclude=['tests*']),\n    include_package_data=True,\n    install_requires=[\"django>=4.2\", 'backports.zoneinfo;python_version<\"3.9\"'],\n    python_requires=\">=3.8\",\n    zip_safe=False,\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Environment :: Web Environment',\n        'Framework :: Django',\n        'Framework :: Django :: 4.2',\n        'Framework :: Django :: 5.0',\n        'Framework :: Django :: 5.1',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: BSD License',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n        'Programming Language :: Python :: 3.12',\n        'Programming Language :: Python :: 3.13',\n        'Programming Language :: Python :: 3 :: Only',\n        'Topic :: Internet :: WWW/HTTP',\n    ],\n    project_urls={\n        'Funding': 'https://fund.django-rest-framework.org/topics/funding/',\n        'Source': 'https://github.com/encode/django-rest-framework',\n        'Changelog': 'https://www.django-rest-framework.org/community/release-notes/',\n    },\n)\n\n# (*) Please direct queries to the discussion group, rather than to me directly\n#     Doing so helps ensure your question is helpful to other users.\n#     Queries directly to my email are likely to receive a canned response.\n#\n#     Many thanks for your understanding.\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.5029296875,
          "content": "[tox]\nenvlist =\n       {py38,py39}-{django42}\n       {py310}-{django42,django50,django51,djangomain}\n       {py311}-{django42,django50,django51,djangomain}\n       {py312}-{django42,django50,django51,djangomain}\n       {py313}-{django51,djangomain}\n       base\n       dist\n       docs\n\n[testenv]\ncommands = python -W error::DeprecationWarning -W error::PendingDeprecationWarning runtests.py --coverage {posargs}\nenvdir = {toxworkdir}/venvs/{envname}\nsetenv =\n       PYTHONDONTWRITEBYTECODE=1\n       PYTHONWARNINGS=once\ndeps =\n        django42: Django>=4.2,<5.0\n        django50: Django>=5.0,<5.1\n        django51: Django>=5.1,<5.2\n        djangomain: https://github.com/django/django/archive/main.tar.gz\n        -rrequirements/requirements-testing.txt\n        -rrequirements/requirements-optionals.txt\n        setuptools\n\n[testenv:base]\n; Ensure optional dependencies are not required\ndeps =\n        django\n        -rrequirements/requirements-testing.txt\n\n[testenv:dist]\ncommands = python -W error::DeprecationWarning -W error::PendingDeprecationWarning runtests.py --no-pkgroot --staticfiles {posargs}\ndeps =\n        django\n        -rrequirements/requirements-testing.txt\n        -rrequirements/requirements-optionals.txt\n\n[testenv:docs]\nskip_install = true\ncommands = mkdocs build\ndeps =\n       -rrequirements/requirements-testing.txt\n       -rrequirements/requirements-documentation.txt\n\n[testenv:py310-djangomain]\nignore_outcome = true\n\n[testenv:py311-djangomain]\nignore_outcome = true\n\n[testenv:py312-djangomain]\nignore_outcome = true\n"
        }
      ]
    }
  ]
}