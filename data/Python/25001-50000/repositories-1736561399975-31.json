{
  "metadata": {
    "timestamp": 1736561399975,
    "page": 31,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lm-sys/FastChat",
      "stars": 37465,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.330078125,
          "content": "# Python\n__pycache__\n*.pyc\n*.egg-info\ndist\n.venv\n\n# Log\n*.log\n*.log.*\n*.json\n!playground/deepspeed_config_s2.json\n!playground/deepspeed_config_s3.json\n\n# Editor\n.idea\n*.swp\n\n# Other\n.DS_Store\nwandb\noutput\ncheckpoints_flant5_3b\n\n# Data\n*.pkl\n*.csv\ntests/state_of_the_union.txt\n\n# Build\nbuild\n\n# Image data\nserve_images\nval2014\nvqa_examples"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 14.4189453125,
          "content": "# This Pylint rcfile contains a best-effort configuration to uphold the\n# best-practices and style described in the Google Python style guide:\n#   https://google.github.io/styleguide/pyguide.html\n#\n# Its canonical open-source location is:\n#   https://google.github.io/styleguide/pylintrc\n\n[MASTER]\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=third_party,ray_patches,providers\n\n# Files or directories matching the regex patterns are skipped. The regex\n# matches against base names, not paths.\nignore-patterns=\n\n# Pickle collected data for later comparisons.\npersistent=no\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Use multiple processes to speed up Pylint.\njobs=4\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=abstract-method,\n        apply-builtin,\n        arguments-differ,\n        attribute-defined-outside-init,\n        backtick,\n        bad-option-value,\n        basestring-builtin,\n        buffer-builtin,\n        c-extension-no-member,\n        consider-using-enumerate,\n        cmp-builtin,\n        cmp-method,\n        coerce-builtin,\n        coerce-method,\n        delslice-method,\n        div-method,\n        duplicate-code,\n        eq-without-hash,\n        execfile-builtin,\n        file-builtin,\n        filter-builtin-not-iterating,\n        fixme,\n        getslice-method,\n        global-statement,\n        hex-method,\n        idiv-method,\n        implicit-str-concat-in-sequence,\n        import-error,\n        import-self,\n        import-star-module-level,\n        inconsistent-return-statements,\n        input-builtin,\n        intern-builtin,\n        invalid-str-codec,\n        locally-disabled,\n        logging-format-interpolation,  # FIXME(sky): make pass.\n        logging-fstring-interpolation,  # FIXME(sky): make pass.\n        long-builtin,\n        long-suffix,\n        map-builtin-not-iterating,\n        misplaced-comparison-constant,\n        missing-function-docstring,\n        metaclass-assignment,\n        next-method-called,\n        next-method-defined,\n        no-absolute-import,\n        no-else-break,\n        no-else-continue,\n        no-else-raise,\n        no-else-return,\n        no-init,  # added\n        no-member,\n        no-name-in-module,\n        no-self-use,\n        nonzero-method,\n        oct-method,\n        old-division,\n        old-ne-operator,\n        old-octal-literal,\n        old-raise-syntax,\n        parameter-unpacking,\n        print-statement,\n        raising-string,\n        range-builtin-not-iterating,\n        raw_input-builtin,\n        rdiv-method,\n        reduce-builtin,\n        relative-import,\n        reload-builtin,\n        round-builtin,\n        setslice-method,\n        signature-differs,\n        standarderror-builtin,\n        suppressed-message,\n        sys-max-int,\n        too-few-public-methods,\n        too-many-ancestors,\n        too-many-arguments,\n        too-many-boolean-expressions,\n        too-many-branches,\n        too-many-instance-attributes,\n        too-many-locals,\n        too-many-nested-blocks,\n        too-many-public-methods,\n        too-many-return-statements,\n        too-many-statements,\n        trailing-newlines,\n        unichr-builtin,\n        unicode-builtin,\n        unnecessary-pass,\n        unpacking-in-except,\n        useless-else-on-loop,\n        useless-object-inheritance,\n        useless-suppression,\n        using-cmp-argument,\n        wrong-import-order,\n        xrange-builtin,\n        zip-builtin-not-iterating,\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\". This option is deprecated\n# and it will be removed in Pylint 2.0.\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n\n[BASIC]\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=main,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\nproperty-classes=abc.abstractproperty,cached_property.cached_property,cached_property.threaded_cached_property,cached_property.cached_property_with_ttl,cached_property.threaded_cached_property_with_ttl\n\n# Regular expression matching correct function names\nfunction-rgx=^(?:(?P<exempt>setUp|tearDown|setUpModule|tearDownModule)|(?P<camel_case>_?[A-Z][a-zA-Z0-9]*)|(?P<snake_case>_?[a-z][a-z0-9_]*))$\n\n# Regular expression matching correct variable names\nvariable-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct constant names\nconst-rgx=^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$\n\n# Regular expression matching correct attribute names\nattr-rgx=^_{0,2}[a-z][a-z0-9_]*$\n\n# Regular expression matching correct argument names\nargument-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=^[a-z][a-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=^_?[A-Z][a-zA-Z0-9]*$\n\n# Regular expression matching correct module names\nmodule-rgx=^(_?[a-z][a-z0-9_]*|__init__)$\n\n# Regular expression matching correct method names\nmethod-rgx=(?x)^(?:(?P<exempt>_[a-z0-9_]+__|runTest|setUp|tearDown|setUpTestCase|tearDownTestCase|setupSelf|tearDownClass|setUpClass|(test|assert)_*[A-Z0-9][a-zA-Z0-9_]*|next)|(?P<camel_case>_{0,2}[A-Z][a-zA-Z0-9_]*)|(?P<snake_case>_{0,2}[a-z][a-z0-9_]*))$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=(__.*__|main|test.*|.*test|.*Test)$\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=10\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager,contextlib2.contextmanager\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=100\n\n# TODO(https://github.com/PyCQA/pylint/issues/3352): Direct pylint to exempt\n# lines made too long by directives to pytype.\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=(?x)(\n  ^\\s*(\\#\\ )?<?https?://\\S+>?$|\n  ^\\s*(from\\s+\\S+\\s+)?import\\s+.+$)\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=yes\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=\n\n# Maximum number of lines in a module\nmax-module-lines=99999\n\n# String used as indentation unit.  The internal Google style guide mandates 2\n# spaces.  Google's externaly-published style guide says 4, consistent with\n# PEP 8. Here we use 4 spaces.\nindent-string='    '\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=TODO\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=yes\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=^\\*{0,2}(_$|unused_|dummy_)\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six,six.moves,past.builtins,future.builtins,functools\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging,absl.logging,tensorflow.io.logging\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,\n                   TERMIOS,\n                   Bastion,\n                   rexec,\n                   sets\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant, absl\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls,\n                            class_\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=StandardError,\n                       Exception,\n                       BaseException\n\n#######\n\n# https://github.com/edaniszewski/pylint-quotes#configuration\nstring-quote=single\ntriple-quote=double\ndocstring-quote=double\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.6318359375,
          "content": "# FastChat\n| [**Demo**](https://lmarena.ai/) | [**Discord**](https://discord.gg/6GXcFg3TH8) | [**X**](https://x.com/lmsysorg) |\n\nFastChat is an open platform for training, serving, and evaluating large language model based chatbots.\n- FastChat powers Chatbot Arena ([lmarena.ai](https://lmarena.ai)), serving over 10 million chat requests for 70+ LLMs.\n- Chatbot Arena has collected over 1.5M human votes from side-by-side LLM battles to compile an online [LLM Elo leaderboard](https://lmarena.ai/?leaderboard).\n\nFastChat's core features include:\n- The training and evaluation code for state-of-the-art models (e.g., Vicuna, MT-Bench).\n- A distributed multi-model serving system with web UI and OpenAI-compatible RESTful APIs.\n\n## News\n- [2024/03] 🔥 We released Chatbot Arena technical [report](https://arxiv.org/abs/2403.04132).\n- [2023/09] We released **LMSYS-Chat-1M**, a large-scale real-world LLM conversation dataset. Read the [report](https://arxiv.org/abs/2309.11998).\n- [2023/08] We released **Vicuna v1.5** based on Llama 2 with 4K and 16K context lengths. Download [weights](#vicuna-weights).\n- [2023/07] We released **Chatbot Arena Conversations**, a dataset containing 33k conversations with human preferences. Download it [here](https://huggingface.co/datasets/lmsys/chatbot_arena_conversations).\n\n<details>\n<summary>More</summary>\n\n- [2023/08] We released **LongChat v1.5** based on Llama 2 with 32K context lengths. Download [weights](#longchat).\n- [2023/06] We introduced **MT-bench**, a challenging multi-turn question set for evaluating chatbots. Check out the blog [post](https://lmsys.org/blog/2023-06-22-leaderboard/).\n- [2023/06] We introduced **LongChat**, our long-context chatbots and evaluation tools. Check out the blog [post](https://lmsys.org/blog/2023-06-29-longchat/).\n- [2023/05] We introduced **Chatbot Arena** for battles among LLMs. Check out the blog [post](https://lmsys.org/blog/2023-05-03-arena).\n- [2023/03] We released **Vicuna: An Open-Source Chatbot Impressing GPT-4 with 90% ChatGPT Quality**. Check out the blog [post](https://vicuna.lmsys.org).\n\n</details>\n\n<a href=\"https://lmarena.ai\"><img src=\"assets/demo_narrow.gif\" width=\"70%\"></a>\n\n## Contents\n- [Install](#install)\n- [Model Weights](#model-weights)\n- [Inference with Command Line Interface](#inference-with-command-line-interface)\n- [Serving with Web GUI](#serving-with-web-gui)\n- [API](#api)\n- [Evaluation](#evaluation)\n- [Fine-tuning](#fine-tuning)\n- [Citation](#citation)\n\n## Install\n\n### Method 1: With pip\n\n```bash\npip3 install \"fschat[model_worker,webui]\"\n```\n\n### Method 2: From source\n\n1. Clone this repository and navigate to the FastChat folder\n```bash\ngit clone https://github.com/lm-sys/FastChat.git\ncd FastChat\n```\n\nIf you are running on Mac:\n```bash\nbrew install rust cmake\n```\n\n2. Install Package\n```bash\npip3 install --upgrade pip  # enable PEP 660 support\npip3 install -e \".[model_worker,webui]\"\n```\n\n## Model Weights\n### Vicuna Weights\n[Vicuna](https://lmsys.org/blog/2023-03-30-vicuna/) is based on Llama 2 and should be used under Llama's [model license](https://github.com/facebookresearch/llama/blob/main/LICENSE).\n\nYou can use the commands below to start chatting. It will automatically download the weights from Hugging Face repos.\nDownloaded weights are stored in a `.cache` folder in the user's home folder (e.g., `~/.cache/huggingface/hub/<model_name>`).\n\nSee more command options and how to handle out-of-memory in the \"Inference with Command Line Interface\" section below.\n\n**NOTE: `transformers>=4.31` is required for 16K versions.**\n\n| Size | Chat Command | Hugging Face Repo |\n| ---  | --- | --- |\n| 7B   | `python3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5`  | [lmsys/vicuna-7b-v1.5](https://huggingface.co/lmsys/vicuna-7b-v1.5)   |\n| 7B-16k   | `python3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5-16k`  | [lmsys/vicuna-7b-v1.5-16k](https://huggingface.co/lmsys/vicuna-7b-v1.5-16k)   |\n| 13B  | `python3 -m fastchat.serve.cli --model-path lmsys/vicuna-13b-v1.5` | [lmsys/vicuna-13b-v1.5](https://huggingface.co/lmsys/vicuna-13b-v1.5) |\n| 13B-16k  | `python3 -m fastchat.serve.cli --model-path lmsys/vicuna-13b-v1.5-16k` | [lmsys/vicuna-13b-v1.5-16k](https://huggingface.co/lmsys/vicuna-13b-v1.5-16k) |\n| 33B  | `python3 -m fastchat.serve.cli --model-path lmsys/vicuna-33b-v1.3` | [lmsys/vicuna-33b-v1.3](https://huggingface.co/lmsys/vicuna-33b-v1.3) |\n\n**Old weights**: see [docs/vicuna_weights_version.md](docs/vicuna_weights_version.md) for all versions of weights and their differences.\n\n### Other Models\nBesides Vicuna, we also released two additional models: [LongChat](https://lmsys.org/blog/2023-06-29-longchat/) and FastChat-T5.\nYou can use the commands below to chat with them. They will automatically download the weights from Hugging Face repos.\n\n| Model | Chat Command | Hugging Face Repo |\n| ---  | --- | --- |\n| LongChat-7B   | `python3 -m fastchat.serve.cli --model-path lmsys/longchat-7b-32k-v1.5`  | [lmsys/longchat-7b-32k](https://huggingface.co/lmsys/longchat-7b-32k-v1.5)   |\n| FastChat-T5-3B   | `python3 -m fastchat.serve.cli --model-path lmsys/fastchat-t5-3b-v1.0`  | [lmsys/fastchat-t5-3b-v1.0](https://huggingface.co/lmsys/fastchat-t5-3b-v1.0) |\n\n## Inference with Command Line Interface\n\n<a href=\"https://lmarena.ai\"><img src=\"assets/screenshot_cli.png\" width=\"70%\"></a>\n\n(Experimental Feature: You can specify `--style rich` to enable rich text output and better text streaming quality for some non-ASCII content. This may not work properly on certain terminals.)\n\n#### Supported Models\nFastChat supports a wide range of models, including\nLLama 2, Vicuna, Alpaca, Baize, ChatGLM, Dolly, Falcon, FastChat-T5, GPT4ALL, Guanaco, MTP, OpenAssistant, OpenChat, RedPajama, StableLM, WizardLM, xDAN-AI and more.\n\nSee a complete list of supported models and instructions to add a new model [here](docs/model_support.md).\n\n#### Single GPU\nThe command below requires around 14GB of GPU memory for Vicuna-7B and 28GB of GPU memory for Vicuna-13B.\nSee the [\"Not Enough Memory\" section](#not-enough-memory) below if you do not have enough memory.\n`--model-path` can be a local folder or a Hugging Face repo name.\n```\npython3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5\n```\n\n#### Multiple GPUs\nYou can use model parallelism to aggregate GPU memory from multiple GPUs on the same machine. \n```\npython3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5 --num-gpus 2\n```\n\nTips:\nSometimes the \"auto\" device mapping strategy in huggingface/transformers does not perfectly balance the memory allocation across multiple GPUs.\nYou can use `--max-gpu-memory` to specify the maximum memory per GPU for storing model weights.\nThis allows it to allocate more memory for activations, so you can use longer context lengths or larger batch sizes. For example,\n\n```\npython3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5 --num-gpus 2 --max-gpu-memory 8GiB\n```\n\n#### CPU Only\nThis runs on the CPU only and does not require GPU. It requires around 30GB of CPU memory for Vicuna-7B and around 60GB of CPU memory for Vicuna-13B.\n```\npython3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5 --device cpu\n```\n\nUse Intel AI Accelerator AVX512_BF16/AMX to accelerate CPU inference.\n```\nCPU_ISA=amx python3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5 --device cpu\n```\n\n#### Metal Backend (Mac Computers with Apple Silicon or AMD GPUs)\nUse `--device mps` to enable GPU acceleration on Mac computers (requires torch >= 2.0).\nUse `--load-8bit` to turn on 8-bit compression.\n```\npython3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5 --device mps --load-8bit\n```\nVicuna-7B can run on a 32GB M1 Macbook with 1 - 2 words / second.\n\n#### Intel XPU (Intel Data Center and Arc A-Series GPUs)\nInstall the [Intel Extension for PyTorch](https://intel.github.io/intel-extension-for-pytorch/xpu/latest/tutorials/installation.html). Set the OneAPI environment variables:\n```\nsource /opt/intel/oneapi/setvars.sh\n```\n\nUse `--device xpu` to enable XPU/GPU acceleration.\n```\npython3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5 --device xpu\n```\nVicuna-7B can run on an Intel Arc A770 16GB.\n\n#### Ascend NPU\nInstall the [Ascend PyTorch Adapter](https://github.com/Ascend/pytorch). Set the CANN environment variables:\n```\nsource /usr/local/Ascend/ascend-toolkit/set_env.sh\n```\n\nUse `--device npu` to enable NPU acceleration.\n```\npython3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5 --device npu\n```\nVicuna-7B/13B can run on an Ascend NPU.\n\n#### Not Enough Memory\nIf you do not have enough memory, you can enable 8-bit compression by adding `--load-8bit` to commands above.\nThis can reduce memory usage by around half with slightly degraded model quality.\nIt is compatible with the CPU, GPU, and Metal backend.\n\nVicuna-13B with 8-bit compression can run on a single GPU with 16 GB of VRAM, like an Nvidia RTX 3090, RTX 4080, T4, V100 (16GB), or an AMD RX 6800 XT.\n\n```\npython3 -m fastchat.serve.cli --model-path lmsys/vicuna-7b-v1.5 --load-8bit\n```\n\nIn addition to that, you can add `--cpu-offloading` to commands above to offload weights that don't fit on your GPU onto the CPU memory.\nThis requires 8-bit compression to be enabled and the bitsandbytes package to be installed, which is only available on linux operating systems.\n\n#### More Platforms and Quantization\n- For AMD GPU users, please install ROCm and [the ROCm version of PyTorch](https://pytorch.org/get-started/locally/) before you install FastChat. See also this [post](https://github.com/lm-sys/FastChat/issues/104#issuecomment-1613791563).\n- FastChat supports ExLlama V2. See [docs/exllama_v2.md](/docs/exllama_v2.md).\n- FastChat supports GPTQ 4bit inference with [GPTQ-for-LLaMa](https://github.com/qwopqwop200/GPTQ-for-LLaMa). See [docs/gptq.md](/docs/gptq.md).\n- FastChat supports AWQ 4bit inference with [mit-han-lab/llm-awq](https://github.com/mit-han-lab/llm-awq). See [docs/awq.md](/docs/awq.md).\n- [MLC LLM](https://mlc.ai/mlc-llm/), backed by [TVM Unity](https://github.com/apache/tvm/tree/unity) compiler, deploys Vicuna natively on phones, consumer-class GPUs and web browsers via Vulkan, Metal, CUDA and WebGPU.\n\n#### Use models from modelscope\nFor Chinese users, you can use models from www.modelscope.cn via specify the following environment variables.\n```bash\nexport FASTCHAT_USE_MODELSCOPE=True\n```\n\n## Serving with Web GUI\n\n<a href=\"https://lmarena.ai\"><img src=\"assets/screenshot_gui.png\" width=\"70%\"></a>\n\nTo serve using the web UI, you need three main components: web servers that interface with users, model workers that host one or more models, and a controller to coordinate the webserver and model workers. You can learn more about the architecture [here](docs/server_arch.md).\n\nHere are the commands to follow in your terminal:\n\n#### Launch the controller\n```bash\npython3 -m fastchat.serve.controller\n```\n\nThis controller manages the distributed workers.\n\n#### Launch the model worker(s)\n```bash\npython3 -m fastchat.serve.model_worker --model-path lmsys/vicuna-7b-v1.5\n```\nWait until the process finishes loading the model and you see \"Uvicorn running on ...\". The model worker will register itself to the controller .\n\nTo ensure that your model worker is connected to your controller properly, send a test message using the following command:\n```bash\npython3 -m fastchat.serve.test_message --model-name vicuna-7b-v1.5\n```\nYou will see a short output.\n\n#### Launch the Gradio web server\n```bash\npython3 -m fastchat.serve.gradio_web_server\n```\n\nThis is the user interface that users will interact with.\n\nBy following these steps, you will be able to serve your models using the web UI. You can open your browser and chat with a model now.\nIf the models do not show up, try to reboot the gradio web server.\n\n## Launch Chatbot Arena (side-by-side battle UI)\n\nCurrently, Chatbot Arena is powered by FastChat. Here is how you can launch an instance of Chatbot Arena locally.\n\nFastChat supports popular API-based models such as OpenAI, Anthropic, Gemini, Mistral and more. To add a custom API, please refer to the model support [doc](./docs/model_support.md). Below we take OpenAI models as an example.\n\nCreate a JSON configuration file `api_endpoint.json` with the api endpoints of the models you want to serve, for example:\n```\n{\n    \"gpt-4o-2024-05-13\": {\n        \"model_name\": \"gpt-4o-2024-05-13\",\n        \"api_base\": \"https://api.openai.com/v1\",\n        \"api_type\": \"openai\",\n        \"api_key\": [Insert API Key],\n        \"anony_only\": false\n    }\n}\n```\nFor Anthropic models, specify `\"api_type\": \"anthropic_message\"` with your Anthropic key. Similarly, for gemini model, specify `\"api_type\": \"gemini\"`. More details can be found in [api_provider.py](https://github.com/lm-sys/FastChat/blob/main/fastchat/serve/api_provider.py).\n\nTo serve your own model using local gpus, follow the instructions in [Serving with Web GUI](#serving-with-web-gui).\n\nNow you're ready to launch the server:\n```\npython3 -m fastchat.serve.gradio_web_server_multi --register-api-endpoint-file api_endpoint.json\n```\n\n#### (Optional): Advanced Features, Scalability, Third Party UI\n- You can register multiple model workers to a single controller, which can be used for serving a single model with higher throughput or serving multiple models at the same time. When doing so, please allocate different GPUs and ports for different model workers.\n```\n# worker 0\nCUDA_VISIBLE_DEVICES=0 python3 -m fastchat.serve.model_worker --model-path lmsys/vicuna-7b-v1.5 --controller http://localhost:21001 --port 31000 --worker http://localhost:31000\n# worker 1\nCUDA_VISIBLE_DEVICES=1 python3 -m fastchat.serve.model_worker --model-path lmsys/fastchat-t5-3b-v1.0 --controller http://localhost:21001 --port 31001 --worker http://localhost:31001\n```\n- You can also launch a multi-tab gradio server, which includes the Chatbot Arena tabs.\n```bash\npython3 -m fastchat.serve.gradio_web_server_multi\n```\n- The default model worker based on huggingface/transformers has great compatibility but can be slow. If you want high-throughput batched serving, you can try [vLLM integration](docs/vllm_integration.md).\n- If you want to host it on your own UI or third party UI, see [Third Party UI](docs/third_party_ui.md).\n\n## API\n### OpenAI-Compatible RESTful APIs & SDK\nFastChat provides OpenAI-compatible APIs for its supported models, so you can use FastChat as a local drop-in replacement for OpenAI APIs.\nThe FastChat server is compatible with both [openai-python](https://github.com/openai/openai-python) library and cURL commands.\nThe REST API is capable of being executed from Google Colab free tier, as demonstrated in the [FastChat_API_GoogleColab.ipynb](https://github.com/lm-sys/FastChat/blob/main/playground/FastChat_API_GoogleColab.ipynb) notebook, available in our repository.\nSee [docs/openai_api.md](docs/openai_api.md).\n\n### Hugging Face Generation APIs\nSee [fastchat/serve/huggingface_api.py](fastchat/serve/huggingface_api.py).\n\n### LangChain Integration\nSee [docs/langchain_integration](docs/langchain_integration.md).\n\n## Evaluation\nWe use MT-bench, a set of challenging multi-turn open-ended questions to evaluate models. \nTo automate the evaluation process, we prompt strong LLMs like GPT-4 to act as judges and assess the quality of the models' responses.\nSee instructions for running MT-bench at [fastchat/llm_judge](fastchat/llm_judge).\n\nMT-bench is the new recommended way to benchmark your models. If you are still looking for the old 80 questions used in the vicuna blog post, please go to [vicuna-blog-eval](https://github.com/lm-sys/vicuna-blog-eval).\n\n## Fine-tuning\n### Data\n\nVicuna is created by fine-tuning a Llama base model using approximately 125K user-shared conversations gathered from ShareGPT.com with public APIs. To ensure data quality, we convert the HTML back to markdown and filter out some inappropriate or low-quality samples. Additionally, we divide lengthy conversations into smaller segments that fit the model's maximum context length. For detailed instructions to clean the ShareGPT data, check out [here](docs/commands/data_cleaning.md).\n\nWe will not release the ShareGPT dataset. If you would like to try the fine-tuning code, you can run it with some dummy conversations in [dummy_conversation.json](data/dummy_conversation.json). You can follow the same format and plug in your own data.\n\n### Code and Hyperparameters\nOur code is based on [Stanford Alpaca](https://github.com/tatsu-lab/stanford_alpaca) with additional support for multi-turn conversations.\nWe use similar hyperparameters as the Stanford Alpaca.\n\n| Hyperparameter | Global Batch Size | Learning rate | Epochs | Max length | Weight decay |\n| --- | ---: | ---: | ---: | ---: | ---: |\n| Vicuna-13B | 128 | 2e-5 | 3 | 2048 | 0 |\n\n### Fine-tuning Vicuna-7B with Local GPUs\n\n- Install dependency\n```bash\npip3 install -e \".[train]\"\n```\n\n- You can use the following command to train Vicuna-7B with 4 x A100 (40GB). Update `--model_name_or_path` with the actual path to Llama weights and `--data_path` with the actual path to data.\n```bash\ntorchrun --nproc_per_node=4 --master_port=20001 fastchat/train/train_mem.py \\\n    --model_name_or_path meta-llama/Llama-2-7b-hf \\\n    --data_path data/dummy_conversation.json \\\n    --bf16 True \\\n    --output_dir output_vicuna \\\n    --num_train_epochs 3 \\\n    --per_device_train_batch_size 2 \\\n    --per_device_eval_batch_size 2 \\\n    --gradient_accumulation_steps 16 \\\n    --evaluation_strategy \"no\" \\\n    --save_strategy \"steps\" \\\n    --save_steps 1200 \\\n    --save_total_limit 10 \\\n    --learning_rate 2e-5 \\\n    --weight_decay 0. \\\n    --warmup_ratio 0.03 \\\n    --lr_scheduler_type \"cosine\" \\\n    --logging_steps 1 \\\n    --fsdp \"full_shard auto_wrap\" \\\n    --fsdp_transformer_layer_cls_to_wrap 'LlamaDecoderLayer' \\\n    --tf32 True \\\n    --model_max_length 2048 \\\n    --gradient_checkpointing True \\\n    --lazy_preprocess True\n```\n\nTips:\n- If you are using V100 which is not supported by FlashAttention, you can use the [memory-efficient attention](https://arxiv.org/abs/2112.05682) implemented in [xFormers](https://github.com/facebookresearch/xformers). Install xformers and replace `fastchat/train/train_mem.py` above with [fastchat/train/train_xformers.py](fastchat/train/train_xformers.py).\n- If you meet out-of-memory due to \"FSDP Warning: When using FSDP, it is efficient and recommended... \", see solutions [here](https://github.com/huggingface/transformers/issues/24724#issuecomment-1645189539).\n- If you meet out-of-memory during model saving, see solutions [here](https://github.com/pytorch/pytorch/issues/98823).\n- To turn on logging to popular experiment tracking tools such as Tensorboard, MLFlow or Weights & Biases, use the `report_to` argument, e.g. pass `--report_to wandb` to turn on logging to Weights & Biases.\n\n### Other models, platforms and LoRA support\nMore instructions to train other models (e.g., FastChat-T5) and use LoRA are in [docs/training.md](docs/training.md).\n\n### Fine-tuning on Any Cloud with SkyPilot\n[SkyPilot](https://github.com/skypilot-org/skypilot) is a framework built by UC Berkeley for easily and cost effectively running ML workloads on any cloud (AWS, GCP, Azure, Lambda, etc.).\nFind SkyPilot documentation [here](https://github.com/skypilot-org/skypilot/tree/master/llm/vicuna) on using managed spot instances to train Vicuna and save on your cloud costs.\n\n## Citation\nThe code (training, serving, and evaluation) in this repository is mostly developed for or derived from the paper below.\nPlease cite it if you find the repository helpful.\n\n```\n@misc{zheng2023judging,\n      title={Judging LLM-as-a-judge with MT-Bench and Chatbot Arena},\n      author={Lianmin Zheng and Wei-Lin Chiang and Ying Sheng and Siyuan Zhuang and Zhanghao Wu and Yonghao Zhuang and Zi Lin and Zhuohan Li and Dacheng Li and Eric. P Xing and Hao Zhang and Joseph E. Gonzalez and Ion Stoica},\n      year={2023},\n      eprint={2306.05685},\n      archivePrefix={arXiv},\n      primaryClass={cs.CL}\n}\n```\n\nWe are also planning to add more of our research to this repository.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastchat",
          "type": "tree",
          "content": null
        },
        {
          "name": "format.sh",
          "type": "blob",
          "size": 2.267578125,
          "content": "#!/usr/bin/env bash\n\n# Adapted from https://github.com/skypilot-org/skypilot/blob/master/format.sh\n\n# Cause the script to exit if a single command fails\nset -eo pipefail\n\n# this stops git rev-parse from failing if we run this from the .git directory\nbuiltin cd \"$(dirname \"${BASH_SOURCE:-$0}\")\"\nROOT=\"$(git rev-parse --show-toplevel)\"\nbuiltin cd \"$ROOT\" || exit 1\n\nBLACK_VERSION=$(black --version | head -n 1 | awk '{print $2}')\nPYLINT_VERSION=$(pylint --version | head -n 1 | awk '{print $2}')\n\n# # params: tool name, tool version, required version\ntool_version_check() {\n    if [[ $2 != $3 ]]; then\n        echo \"Wrong $1 version installed: $3 is required, not $2.\"\n        exit 1\n    fi\n}\n\ntool_version_check \"black\" $BLACK_VERSION \"23.3.0\"\ntool_version_check \"pylint\" $PYLINT_VERSION \"2.8.2\"\n\n# Format files that differ from main branch. Ignores dirs that are not slated\n# for autoformat yet.\nformat_changed() {\n    # The `if` guard ensures that the list of filenames is not empty, which\n    # could cause yapf to receive 0 positional arguments, making it hang\n    # waiting for STDIN.\n    #\n    # `diff-filter=ACM` and $MERGEBASE is to ensure we only format files that\n    # exist on both branches.\n    MERGEBASE=\"$(git merge-base origin/main HEAD)\"\n\n    if ! git diff --diff-filter=ACM --quiet --exit-code \"$MERGEBASE\" -- '*.py' '*.pyi' &>/dev/null; then\n        git diff --name-only --diff-filter=ACM \"$MERGEBASE\" -- '*.py' '*.pyi' | xargs -P 5 black\n    fi\n}\n\n## This flag formats individual files. --files *must* be the first command line\n## arg to use this option.\nif [[ \"$1\" == '--files' ]]; then\n   black \"${@:2}\"\n   # If `--all` is passed, then any further arguments are ignored and the\n   # entire python directory is formatted.\nelif [[ \"$1\" == '--all' ]]; then\n   # Format all files\n   black fastchat\nelse\n   # Format only the files that changed in last commit.\n   format_changed\nfi\necho 'FastChat Black: Done'\n\n# Run Pylint\necho 'FastChat Pylint:'\npylint fastchat\n# TODO(suquark): disable 'pylint_quotes' for now due to too many inconsistent quotes\n# pylint --load-plugins pylint_quotes fastchat\n\nif ! git diff --quiet &>/dev/null; then\n    echo 'Reformatted files. Please review and stage the changes.'\n    echo 'Changes not staged for commit:'\n    echo\n    git --no-pager diff --name-only\n\n    exit 1\nfi\n"
        },
        {
          "name": "playground",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.26953125,
          "content": "[build-system]\nrequires = [\"setuptools>=61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"fschat\"\nversion = \"0.2.36\"\ndescription = \"An open platform for training, serving, and evaluating large language model based chatbots.\"\nreadme = \"README.md\"\nrequires-python = \">=3.8\"\nclassifiers = [\n    \"Programming Language :: Python :: 3\",\n    \"License :: OSI Approved :: Apache Software License\",\n]\ndependencies = [\n    \"aiohttp\", \"fastapi\", \"httpx\", \"markdown2[all]\", \"nh3\", \"numpy\",\n    \"prompt_toolkit>=3.0.0\", \"pydantic<3,>=2.0.0\", \"pydantic-settings\", \"psutil\", \"requests\", \"rich>=10.0.0\",\n    \"shortuuid\", \"tiktoken\", \"uvicorn\",\n]\n\n[project.optional-dependencies]\nmodel_worker = [\"accelerate>=0.21\", \"peft\", \"sentencepiece\", \"torch\", \"transformers>=4.31.0\", \"protobuf\"]\nwebui = [\"gradio>=4.10\"]\ntrain = [\"einops\", \"flash-attn>=2.0\", \"wandb\"]\nllm_judge = [\"openai<1\", \"anthropic>=0.3\", \"ray\"]\ndev = [\"black==23.3.0\", \"pylint==2.8.2\"]\n\n[project.urls]\n\"Homepage\" = \"https://github.com/lm-sys/fastchat\"\n\"Bug Tracker\" = \"https://github.com/lm-sys/fastchat/issues\"\n\n[tool.setuptools.packages.find]\nexclude = [\"assets*\", \"benchmark*\", \"docs\", \"dist*\", \"playground*\", \"scripts*\", \"tests*\"]\n\n[tool.wheel]\nexclude = [\"assets*\", \"benchmark*\", \"docs\", \"dist*\", \"playground*\", \"scripts*\", \"tests*\"]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "theme.json",
          "type": "blob",
          "size": 12.3994140625,
          "content": "{\"theme\": {\"text_size\": \"20px\", \"background_fill_primary\": \"white\", \"background_fill_primary_dark\": \"*neutral_950\", \"background_fill_secondary\": \"*neutral_50\", \"background_fill_secondary_dark\": \"*neutral_900\", \"block_background_fill\": \"*background_fill_primary\", \"block_background_fill_dark\": \"*neutral_800\", \"block_border_color\": \"*border_color_primary\", \"block_border_color_dark\": \"*border_color_primary\", \"block_border_width\": \"1px\", \"block_border_width_dark\": \"1px\", \"block_info_text_color\": \"*body_text_color_subdued\", \"block_info_text_color_dark\": \"*body_text_color_subdued\", \"block_info_text_size\": \"*text_sm\", \"block_info_text_weight\": \"400\", \"block_label_background_fill\": \"*background_fill_primary\", \"block_label_background_fill_dark\": \"*background_fill_secondary\", \"block_label_border_color\": \"*border_color_primary\", \"block_label_border_color_dark\": \"*border_color_primary\", \"block_label_border_width\": \"1px\", \"block_label_border_width_dark\": \"1px\", \"block_label_margin\": \"0\", \"block_label_padding\": \"*spacing_sm *spacing_lg\", \"block_label_radius\": \"calc(*radius_lg - 1px) 0 calc(*radius_lg - 1px) 0\", \"block_label_right_radius\": \"0 calc(*radius_lg - 1px) 0 calc(*radius_lg - 1px)\", \"block_label_shadow\": \"*block_shadow\", \"block_label_text_color\": \"*neutral_500\", \"block_label_text_color_dark\": \"*neutral_200\", \"block_label_text_size\": \"*text_sm\", \"block_label_text_weight\": \"400\", \"block_padding\": \"*spacing_xl calc(*spacing_xl + 2px)\", \"block_radius\": \"*radius_lg\", \"block_shadow\": \"none\", \"block_shadow_dark\": \"none\", \"block_title_background_fill\": \"none\", \"block_title_background_fill_dark\": \"none\", \"block_title_border_color\": \"none\", \"block_title_border_color_dark\": \"none\", \"block_title_border_width\": \"0px\", \"block_title_border_width_dark\": \"0px\", \"block_title_padding\": \"0\", \"block_title_radius\": \"none\", \"block_title_text_color\": \"*neutral_500\", \"block_title_text_color_dark\": \"*neutral_200\", \"block_title_text_size\": \"*text_md\", \"block_title_text_weight\": \"400\", \"body_background_fill\": \"*background_fill_primary\", \"body_background_fill_dark\": \"*background_fill_primary\", \"body_text_color\": \"*neutral_700\", \"body_text_color_dark\": \"*neutral_200\", \"body_text_color_subdued\": \"*neutral_400\", \"body_text_color_subdued_dark\": \"*neutral_500\", \"body_text_size\": \"*text_md\", \"body_text_weight\": \"400\", \"border_color_accent\": \"*primary_300\", \"border_color_accent_dark\": \"*neutral_600\", \"border_color_primary\": \"*neutral_200\", \"border_color_primary_dark\": \"*neutral_700\", \"button_border_width\": \"*input_border_width\", \"button_border_width_dark\": \"*input_border_width\", \"button_cancel_background_fill\": \"*button_secondary_background_fill\", \"button_cancel_background_fill_dark\": \"*button_secondary_background_fill\", \"button_cancel_background_fill_hover\": \"*button_cancel_background_fill\", \"button_cancel_background_fill_hover_dark\": \"*button_cancel_background_fill\", \"button_cancel_border_color\": \"*button_secondary_border_color\", \"button_cancel_border_color_dark\": \"*button_secondary_border_color\", \"button_cancel_border_color_hover\": \"*button_cancel_border_color\", \"button_cancel_border_color_hover_dark\": \"*button_cancel_border_color\", \"button_cancel_text_color\": \"*button_secondary_text_color\", \"button_cancel_text_color_dark\": \"*button_secondary_text_color\", \"button_cancel_text_color_hover\": \"*button_cancel_text_color\", \"button_cancel_text_color_hover_dark\": \"*button_cancel_text_color\", \"button_large_padding\": \"*spacing_lg calc(2 * *spacing_lg)\", \"button_large_radius\": \"*radius_lg\", \"button_large_text_size\": \"*text_lg\", \"button_large_text_weight\": \"500\", \"button_primary_background_fill\": \"*primary_200\", \"button_primary_background_fill_dark\": \"*primary_700\", \"button_primary_background_fill_hover\": \"*button_primary_background_fill\", \"button_primary_background_fill_hover_dark\": \"*button_primary_background_fill\", \"button_primary_border_color\": \"*primary_200\", \"button_primary_border_color_dark\": \"*primary_600\", \"button_primary_border_color_hover\": \"*button_primary_border_color\", \"button_primary_border_color_hover_dark\": \"*button_primary_border_color\", \"button_primary_text_color\": \"*primary_600\", \"button_primary_text_color_dark\": \"white\", \"button_primary_text_color_hover\": \"*button_primary_text_color\", \"button_primary_text_color_hover_dark\": \"*button_primary_text_color\", \"button_secondary_background_fill\": \"*neutral_200\", \"button_secondary_background_fill_dark\": \"*neutral_600\", \"button_secondary_background_fill_hover\": \"*neutral_300\", \"button_secondary_background_fill_hover_dark\": \"*neutral_500\", \"button_secondary_border_color\": \"*neutral_200\", \"button_secondary_border_color_dark\": \"*neutral_600\", \"button_secondary_border_color_hover\": \"*button_secondary_border_color\", \"button_secondary_border_color_hover_dark\": \"*button_secondary_border_color\", \"button_secondary_text_color\": \"*neutral_700\", \"button_secondary_text_color_dark\": \"white\", \"button_secondary_text_color_hover\": \"*button_secondary_text_color\", \"button_secondary_text_color_hover_dark\": \"*button_secondary_text_color\", \"button_shadow\": \"none\", \"button_shadow_active\": \"none\", \"button_shadow_hover\": \"none\", \"button_small_padding\": \"*spacing_sm calc(2 * *spacing_sm)\", \"button_small_radius\": \"*radius_lg\", \"button_small_text_size\": \"*text_md\", \"button_small_text_weight\": \"400\", \"button_transition\": \"background-color 0.2s ease\", \"checkbox_background_color\": \"*background_fill_primary\", \"checkbox_background_color_dark\": \"*neutral_800\", \"checkbox_background_color_focus\": \"*checkbox_background_color\", \"checkbox_background_color_focus_dark\": \"*checkbox_background_color\", \"checkbox_background_color_hover\": \"*checkbox_background_color\", \"checkbox_background_color_hover_dark\": \"*checkbox_background_color\", \"checkbox_background_color_selected\": \"*secondary_600\", \"checkbox_background_color_selected_dark\": \"*secondary_600\", \"checkbox_border_color\": \"*neutral_300\", \"checkbox_border_color_dark\": \"*neutral_700\", \"checkbox_border_color_focus\": \"*secondary_500\", \"checkbox_border_color_focus_dark\": \"*secondary_500\", \"checkbox_border_color_hover\": \"*neutral_300\", \"checkbox_border_color_hover_dark\": \"*neutral_600\", \"checkbox_border_color_selected\": \"*secondary_600\", \"checkbox_border_color_selected_dark\": \"*secondary_600\", \"checkbox_border_radius\": \"*radius_sm\", \"checkbox_border_width\": \"*input_border_width\", \"checkbox_border_width_dark\": \"*input_border_width\", \"checkbox_check\": \"url(\\\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M12.207 4.793a1 1 0 010 1.414l-5 5a1 1 0 01-1.414 0l-2-2a1 1 0 011.414-1.414L6.5 9.086l4.293-4.293a1 1 0 011.414 0z'/%3e%3c/svg%3e\\\")\", \"checkbox_label_background_fill\": \"*button_secondary_background_fill\", \"checkbox_label_background_fill_dark\": \"*button_secondary_background_fill\", \"checkbox_label_background_fill_hover\": \"*button_secondary_background_fill_hover\", \"checkbox_label_background_fill_hover_dark\": \"*button_secondary_background_fill_hover\", \"checkbox_label_background_fill_selected\": \"*checkbox_label_background_fill\", \"checkbox_label_background_fill_selected_dark\": \"*checkbox_label_background_fill\", \"checkbox_label_border_color\": \"*border_color_primary\", \"checkbox_label_border_color_dark\": \"*border_color_primary\", \"checkbox_label_border_color_hover\": \"*checkbox_label_border_color\", \"checkbox_label_border_color_hover_dark\": \"*checkbox_label_border_color\", \"checkbox_label_border_width\": \"*input_border_width\", \"checkbox_label_border_width_dark\": \"*input_border_width\", \"checkbox_label_gap\": \"*spacing_lg\", \"checkbox_label_padding\": \"*spacing_md calc(2 * *spacing_md)\", \"checkbox_label_shadow\": \"none\", \"checkbox_label_text_color\": \"*body_text_color\", \"checkbox_label_text_color_dark\": \"*body_text_color\", \"checkbox_label_text_color_selected\": \"*checkbox_label_text_color\", \"checkbox_label_text_color_selected_dark\": \"*checkbox_label_text_color\", \"checkbox_label_text_size\": \"*text_md\", \"checkbox_label_text_weight\": \"400\", \"checkbox_shadow\": \"*input_shadow\", \"color_accent\": \"*primary_500\", \"color_accent_soft\": \"*primary_50\", \"color_accent_soft_dark\": \"*neutral_700\", \"container_radius\": \"*radius_lg\", \"embed_radius\": \"*radius_md\", \"error_background_fill\": \"#fee2e2\", \"error_background_fill_dark\": \"*background_fill_primary\", \"error_border_color\": \"#fecaca\", \"error_border_color_dark\": \"*border_color_primary\", \"error_border_width\": \"1px\", \"error_border_width_dark\": \"1px\", \"error_text_color\": \"#ef4444\", \"error_text_color_dark\": \"#ef4444\", \"form_gap_width\": \"0px\", \"input_background_fill\": \"*neutral_100\", \"input_background_fill_dark\": \"*neutral_700\", \"input_background_fill_focus\": \"*secondary_500\", \"input_background_fill_focus_dark\": \"*secondary_600\", \"input_background_fill_hover\": \"*input_background_fill\", \"input_background_fill_hover_dark\": \"*input_background_fill\", \"input_border_color\": \"*border_color_primary\", \"input_border_color_dark\": \"*border_color_primary\", \"input_border_color_focus\": \"*secondary_300\", \"input_border_color_focus_dark\": \"*neutral_700\", \"input_border_color_hover\": \"*input_border_color\", \"input_border_color_hover_dark\": \"*input_border_color\", \"input_border_width\": \"0px\", \"input_border_width_dark\": \"0px\", \"input_padding\": \"*spacing_xl\", \"input_placeholder_color\": \"*neutral_400\", \"input_placeholder_color_dark\": \"*neutral_500\", \"input_radius\": \"*radius_lg\", \"input_shadow\": \"none\", \"input_shadow_dark\": \"none\", \"input_shadow_focus\": \"*input_shadow\", \"input_shadow_focus_dark\": \"*input_shadow\", \"input_text_size\": \"*text_md\", \"input_text_weight\": \"400\", \"layout_gap\": \"*spacing_xxl\", \"link_text_color\": \"*secondary_600\", \"link_text_color_active\": \"*secondary_600\", \"link_text_color_active_dark\": \"*secondary_500\", \"link_text_color_dark\": \"*secondary_500\", \"link_text_color_hover\": \"*secondary_700\", \"link_text_color_hover_dark\": \"*secondary_400\", \"link_text_color_visited\": \"*secondary_500\", \"link_text_color_visited_dark\": \"*secondary_600\", \"loader_color\": \"*color_accent\", \"loader_color_dark\": \"*color_accent\", \"name\": \"base\", \"neutral_100\": \"#f5f5f4\", \"neutral_200\": \"#e7e5e4\", \"neutral_300\": \"#d6d3d1\", \"neutral_400\": \"#a8a29e\", \"neutral_50\": \"#fafaf9\", \"neutral_500\": \"#78716c\", \"neutral_600\": \"#57534e\", \"neutral_700\": \"#44403c\", \"neutral_800\": \"#292524\", \"neutral_900\": \"#1c1917\", \"neutral_950\": \"#0f0e0d\", \"panel_background_fill\": \"*background_fill_secondary\", \"panel_background_fill_dark\": \"*background_fill_secondary\", \"panel_border_color\": \"*border_color_primary\", \"panel_border_color_dark\": \"*border_color_primary\", \"panel_border_width\": \"0\", \"panel_border_width_dark\": \"0\", \"primary_100\": \"#e0f2fe\", \"primary_200\": \"#bae6fd\", \"primary_300\": \"#7dd3fc\", \"primary_400\": \"#38bdf8\", \"primary_50\": \"#f0f9ff\", \"primary_500\": \"#0ea5e9\", \"primary_600\": \"#0284c7\", \"primary_700\": \"#0369a1\", \"primary_800\": \"#075985\", \"primary_900\": \"#0c4a6e\", \"primary_950\": \"#0b4165\", \"prose_header_text_weight\": \"500\", \"prose_text_size\": \"*text_md\", \"prose_text_weight\": \"400\", \"radio_circle\": \"url(\\\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle cx='8' cy='8' r='3'/%3e%3c/svg%3e\\\")\", \"radius_lg\": \"3px\", \"radius_md\": \"3px\", \"radius_sm\": \"3px\", \"radius_xl\": \"3px\", \"radius_xs\": \"3px\", \"radius_xxl\": \"3px\", \"radius_xxs\": \"3px\", \"secondary_100\": \"#e0f2fe\", \"secondary_200\": \"#bae6fd\", \"secondary_300\": \"#7dd3fc\", \"secondary_400\": \"#38bdf8\", \"secondary_50\": \"#f0f9ff\", \"secondary_500\": \"#0ea5e9\", \"secondary_600\": \"#0284c7\", \"secondary_700\": \"#0369a1\", \"secondary_800\": \"#075985\", \"secondary_900\": \"#0c4a6e\", \"secondary_950\": \"#0b4165\", \"section_header_text_size\": \"*text_md\", \"section_header_text_weight\": \"400\", \"shadow_drop\": \"rgba(0,0,0,0.05) 0px 1px 2px 0px\", \"shadow_drop_lg\": \"0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1)\", \"shadow_inset\": \"rgba(0,0,0,0.05) 0px 2px 4px 0px inset\", \"shadow_spread\": \"3px\", \"shadow_spread_dark\": \"1px\", \"slider_color\": \"*primary_600\", \"slider_color_dark\": \"*primary_600\", \"spacing_lg\": \"8px\", \"spacing_md\": \"6px\", \"spacing_sm\": \"4px\", \"spacing_xl\": \"10px\", \"spacing_xs\": \"2px\", \"spacing_xxl\": \"16px\", \"spacing_xxs\": \"1px\", \"stat_background_fill\": \"*primary_300\", \"stat_background_fill_dark\": \"*primary_500\", \"table_border_color\": \"*neutral_300\", \"table_border_color_dark\": \"*neutral_700\", \"table_even_background_fill\": \"white\", \"table_even_background_fill_dark\": \"*neutral_950\", \"table_odd_background_fill\": \"*neutral_50\", \"table_odd_background_fill_dark\": \"*neutral_900\", \"table_radius\": \"*radius_lg\", \"table_row_focus\": \"*color_accent_soft\", \"table_row_focus_dark\": \"*color_accent_soft\", \"text_lg\": \"20px\", \"text_md\": \"16px\", \"text_sm\": \"14px\", \"text_xl\": \"24px\", \"text_xs\": \"12px\", \"text_xxl\": \"28px\", \"text_xxs\": \"10px\"}, \"version\": \"0.0.1\"}"
        }
      ]
    }
  ]
}