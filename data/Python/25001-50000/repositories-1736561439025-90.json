{
  "metadata": {
    "timestamp": 1736561439025,
    "page": 90,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "meta-llama/llama3",
      "stars": 27880,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.005859375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.4541015625,
          "content": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\naddress, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\nprofessional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\nThis Code of Conduct also applies outside the project spaces when there is a\nreasonable belief that an individual's behavior may have a negative impact on\nthe project or its community.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <opensource-conduct@meta.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.40625,
          "content": "# Contributing to Llama 3\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n## Our Development Process\n... (in particular how this is synced with internal changes to the project)\n\n## Pull Requests\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `main`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. Make sure your code lints.\n6. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n## Contributor License Agreement (\"CLA\")\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Meta's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\nMeta has a [bounty program](http://facebook.com/whitehat/info) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n## Coding Style  \n* 2 spaces for indentation rather than tabs\n* 80 character line length\n* ...\n\n## License\nBy contributing to Llama 3, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 12.1123046875,
          "content": "META LLAMA 3 COMMUNITY LICENSE AGREEMENT\n\nMeta Llama 3 Version Release Date: April 18, 2024\n“Agreement” means the terms and conditions for use, reproduction, distribution and modification of the Llama Materials set forth herein.\n\n“Documentation” means the specifications, manuals and documentation accompanying Meta Llama 3 distributed by Meta at https://llama.meta.com/get-started/.\n\n“Licensee” or “you” means you, or your employer or any other person or entity (if you are entering into this Agreement on such person or entity’s behalf), of the age required under applicable laws, rules or regulations to provide legal consent and that has legal authority to bind your employer or such other person or entity if you are entering in this Agreement on their behalf.\n\n“Meta Llama 3” means the foundational large language models and software and algorithms, including machine-learning model code, trained model weights, inference-enabling code, training-enabling code, fine-tuning enabling code and other elements of the foregoing distributed by Meta at https://llama.meta.com/llama-downloads.\n\n“Llama Materials” means, collectively, Meta’s proprietary Meta Llama 3 and Documentation (and any portion thereof) made available under this Agreement.\n\n“Meta” or “we” means Meta Platforms Ireland Limited (if you are located in or, if you are an entity, your principal place of business is in the EEA or Switzerland) and Meta Platforms, Inc. (if you are located outside of the EEA or Switzerland). \n\nBy clicking “I Accept” below or by using or distributing any portion or element of the Llama Materials, you agree to be bound by this Agreement.\n\n1. License Rights and Redistribution.\n\n\ta. Grant of Rights. You are granted a non-exclusive, worldwide, non-transferable and royalty-free limited license under Meta’s intellectual property or other rights owned by Meta embodied in the Llama Materials to use, reproduce, distribute, copy, create derivative works of, and make modifications to the Llama Materials. \n\tb. Redistribution and Use.  \n\t\ti. If you distribute or make available the Llama Materials (or any derivative works thereof), or a product or service that uses any of them, including another AI model, you shall (A) provide a copy of this Agreement with any such Llama Materials; and (B) prominently display “Built with Meta Llama 3” on a related website, user interface, blogpost, about page, or product documentation. If you use the Llama Materials to create, train, fine tune, or otherwise improve an AI model, which is distributed or made available, you shall also include “Llama 3” at the beginning of any such AI model name.\n\t\tii. If you receive Llama Materials, or any derivative works thereof, from a Licensee as part of an integrated end user product, then Section 2 of this Agreement will not apply to you. \n\t\tiii. You must retain in all copies of the Llama Materials that you distribute the following attribution notice within a “Notice” text file distributed as a part of such copies: “Meta Llama 3 is licensed under the Meta Llama 3 Community License, Copyright © Meta Platforms, Inc. All Rights Reserved.”\n\t\tiv. Your use of the Llama Materials must comply with applicable laws and regulations (including trade compliance laws and regulations) and adhere to the Acceptable Use Policy for the Llama Materials (available at https://llama.meta.com/llama3/use-policy), which is hereby incorporated by reference into this Agreement.\n\t\tv. You will not use the Llama Materials or any output or results of the Llama Materials to improve any other large language model (excluding Meta Llama 3 or derivative works thereof).  \n\n2. Additional Commercial Terms. If, on the Meta Llama 3 version release date, the monthly active users of the products or services made available by or for Licensee, or Licensee’s affiliates, is greater than 700 million monthly active users in the preceding calendar month, you must request a license from Meta, which Meta may grant to you in its sole discretion, and you are not authorized to exercise any of the rights under this Agreement unless or until Meta otherwise expressly grants you such rights.\n\n3. Disclaimer of Warranty. UNLESS REQUIRED BY APPLICABLE LAW, THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS THEREFROM ARE PROVIDED ON AN “AS IS” BASIS, WITHOUT WARRANTIES OF ANY KIND, AND META DISCLAIMS ALL WARRANTIES OF ANY KIND, BOTH EXPRESS AND IMPLIED, INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY, OR FITNESS FOR A PARTICULAR PURPOSE. YOU ARE SOLELY RESPONSIBLE FOR DETERMINING THE APPROPRIATENESS OF USING OR REDISTRIBUTING THE LLAMA MATERIALS AND ASSUME ANY RISKS ASSOCIATED WITH YOUR USE OF THE LLAMA MATERIALS AND ANY OUTPUT AND RESULTS.\n\n4. Limitation of Liability. IN NO EVENT WILL META OR ITS AFFILIATES BE LIABLE UNDER ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, TORT, NEGLIGENCE, PRODUCTS LIABILITY, OR OTHERWISE, ARISING OUT OF THIS AGREEMENT, FOR ANY LOST PROFITS OR ANY INDIRECT, SPECIAL, CONSEQUENTIAL, INCIDENTAL, EXEMPLARY OR PUNITIVE DAMAGES, EVEN IF META OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF ANY OF THE FOREGOING.\n \n5. Intellectual Property.\n\ta. No trademark licenses are granted under this Agreement, and in connection with the Llama Materials, neither Meta nor Licensee may use any name or mark owned by or associated with the other or any of its affiliates, except as required for reasonable and customary use in describing and redistributing the Llama Materials or as set forth in this Section 5(a). Meta hereby grants you a license to use “Llama 3” (the “Mark”) solely as required to comply with the last sentence of Section 1.b.i. You will comply with Meta’s brand guidelines (currently accessible at https://about.meta.com/brand/resources/meta/company-brand/  ). All goodwill arising out of your use of the Mark will inure to the benefit of Meta.\n\tb. Subject to Meta’s ownership of Llama Materials and derivatives made by or for Meta, with respect to any derivative works and modifications of the Llama Materials that are made by you, as between you and Meta, you are and will be the owner of such derivative works and modifications.\n\tc. If you institute litigation or other proceedings against Meta or any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Llama Materials or Meta Llama 3 outputs or results, or any portion of any of the foregoing, constitutes infringement of intellectual property or other rights owned or licensable by you, then any licenses granted to you under this Agreement shall terminate as of the date such litigation or claim is filed or instituted. You will indemnify and hold harmless Meta from and against any claim by any third party arising out of or related to your use or distribution of the Llama Materials.\n\n6. Term and Termination. The term of this Agreement will commence upon your acceptance of this Agreement or access to the Llama Materials and will continue in full force and effect until terminated in accordance with the terms and conditions herein. Meta may terminate this Agreement if you are in breach of any term or condition of this Agreement. Upon termination of this Agreement, you shall delete and cease use of the Llama Materials. Sections 3, 4 and 7 shall survive the termination of this Agreement. \n\n7. Governing Law and Jurisdiction. This Agreement will be governed and construed under the laws of the State of California without regard to choice of law principles, and the UN Convention on Contracts for the International Sale of Goods does not apply to this Agreement. The courts of California shall have exclusive jurisdiction of any dispute arising out of this Agreement. \n\n\nMeta Llama 3 Acceptable Use Policy\nMeta is committed to promoting safe and fair use of its tools and features, including Meta Llama 3. If you access or use Meta Llama 3, you agree to this Acceptable Use Policy (“Policy”). The most recent copy of this policy can be found at https://llama.meta.com/llama3/use-policy\nProhibited Uses\nWe want everyone to use Meta Llama 3 safely and responsibly. You agree you will not use, or allow others to use, Meta Llama 3 to: \n1. Violate the law or others’ rights, including to:\n\ta. Engage in, promote, generate, contribute to, encourage, plan, incite, or further illegal or unlawful activity or content, such as: \n      \t\ti. Violence or terrorism \n      \t\tii. Exploitation or harm to children, including the solicitation, creation, acquisition, or dissemination of child exploitative content or failure to report Child Sexual Abuse Material\n      \t\tiii. Human trafficking, exploitation, and sexual violence\n      \t\tiv. The illegal distribution of information or materials to minors, including obscene materials, or failure to employ legally required age-gating in connection with such information or materials.\n      \t\tv. Sexual solicitation\n      \t\tvi. Any other criminal activity\n   \tb. Engage in, promote, incite, or facilitate the harassment, abuse, threatening, or bullying of individuals or groups of individuals\n   \tc. Engage in, promote, incite, or facilitate discrimination or other unlawful or harmful conduct in the provision of employment, employment benefits, credit, housing, other economic benefits, or other essential goods and services\n   \td. Engage in the unauthorized or unlicensed practice of any profession including, but not limited to, financial, legal, medical/health, or related professional practices \n   \te. Collect, process, disclose, generate, or infer health, demographic, or other sensitive personal or private information about individuals without rights and consents required by applicable laws\n   \tf. Engage in or facilitate any action or generate any content that infringes, misappropriates, or otherwise violates any third-party rights, including the outputs or results of any products or services using the Llama Materials\n   \tg. Create, generate, or facilitate the creation of malicious code, malware, computer viruses or do anything else that could disable, overburden, interfere with or impair the proper working, integrity, operation or appearance of a website or computer system \n\n2. Engage in, promote, incite, facilitate, or assist in the planning or development of activities that present a risk of death or bodily harm to individuals, including use of Meta Llama 3 related to the following:\n   \ta. Military, warfare, nuclear industries or applications, espionage, use for materials or activities that are subject to the International Traffic Arms Regulations (ITAR) maintained by the United States Department of State\n   \tb. Guns and illegal weapons (including weapon development)\n   \tc. Illegal drugs and regulated/controlled substances\n   \td. Operation of critical infrastructure, transportation technologies, or heavy machinery\n   \te. Self-harm or harm to others, including suicide, cutting, and eating disorders\n   \tf. Any content intended to incite or promote violence, abuse, or any infliction of bodily harm to an individual\n\n3. Intentionally deceive or mislead others, including use of Meta Llama 3 related to the following:\n   \ta. Generating, promoting, or furthering fraud or the creation or promotion of disinformation\n   \tb. Generating, promoting, or furthering defamatory content, including the creation of defamatory statements, images, or other content\n   \tc. Generating, promoting, or further distributing spam\n   \td. Impersonating another individual without consent, authorization, or legal right\n   \te. Representing that the use of Meta Llama 3 or outputs are human-generated\n   \tf. Generating or facilitating false online engagement, including fake reviews and other means of fake online engagement \n   \tg. Fail to appropriately disclose to end users any known dangers of your AI system \n\nPlease report any violation of this Policy, software “bug,” or other problems that could lead to a violation of this Policy through one of the following means:\n   \t* Reporting issues with the model: https://github.com/meta-llama/llama3\n   \t* Reporting risky content generated by the model: developers.facebook.com/llama_output_feedback\n   \t* Reporting bugs and security concerns: facebook.com/whitehat/info\n   \t* Reporting violations of the Acceptable Use Policy or unlicensed uses of Meta Llama 3: LlamaUseReport@meta.com\n"
        },
        {
          "name": "Llama3_Repo.jpeg",
          "type": "blob",
          "size": 445.548828125,
          "content": null
        },
        {
          "name": "MODEL_CARD.md",
          "type": "blob",
          "size": 22.1025390625,
          "content": "## Model Details\n\nMeta developed and released the Meta Llama 3 family of large language models (LLMs), a collection of pretrained and instruction tuned generative text models in 8 and 70B sizes. The Llama 3 instruction tuned models are optimized for dialogue use cases and outperform many of the available open source chat models on common industry benchmarks. Further, in developing these models, we took great care to optimize helpfulness and safety. \n\n**Model developers** Meta\n\n**Llama 3 family of models** Llama 3 comes in two sizes — 8B and 70B parameters — in pre-trained and instruction tuned variants.\n\n**Input** Models input text only.\n\n**Output** Models generate text and code only.\n\n**Model Architecture** Llama 3 is an auto-regressive language model that uses an optimized transformer architecture. Llama 3 uses a tokenizer with a vocabulary of 128K tokens, and was trained on on sequences of 8,192 tokens. Grouped-Query Attention (GQA) is used for all models to improve inference efficiency. The tuned versions use supervised fine-tuning (SFT) and reinforcement learning with human feedback (RLHF) to align with human preferences for helpfulness and safety.\n\n\n<table>\n  <tr>\n   <td>\n   </td>\n   <td><strong>Training Data</strong>\n   </td>\n   <td><strong>Params</strong>\n   </td>\n   <td><strong>Context length</strong>\n   </td>\n   <td><strong>GQA</strong>\n   </td>\n   <td><strong>Token count</strong>\n   </td>\n   <td><strong>Knowledge cutoff</strong>\n   </td>\n  </tr>\n  <tr>\n   <td rowspan=\"2\" >Llama 3\n   </td>\n   <td rowspan=\"2\" >A new mix of publicly available online data.\n   </td>\n   <td>8B\n   </td>\n   <td>8k\n   </td>\n   <td>Yes\n   </td>\n   <td rowspan=\"2\" >15T+\n   </td>\n   <td>March, 2023\n   </td>\n  </tr>\n  <tr>\n   <td>70B\n   </td>\n   <td>8k\n   </td>\n   <td>Yes\n   </td>\n   <td>December, 2023\n   </td>\n  </tr>\n</table>\n\n\nNote: Token counts refer to pretraining data only.\n\n**Model Release Date** April 18, 2024.\n\n**Status** This is a static model trained on an offline dataset. Future versions of the tuned models will be released as we improve model safety with community feedback.\n\n**License** A custom commercial license is available at: [https://llama.meta.com/llama3/license](https://llama.meta.com/llama3/license)\n\nWhere to send questions or comments about the model Instructions on how to provide feedback or comments on the model can be found in the model [README](https://github.com/meta-llama/llama3). For more technical information about generation parameters and recipes for how to use Llama 3 in applications, please go [here](https://github.com/meta-llama/llama-recipes). \n\n\n## Intended Use\n\n**Intended Use Cases** Llama 3 is intended for commercial and research use in English. Instruction tuned models are intended for assistant-like chat, whereas pretrained models can be adapted for a variety of natural language generation tasks.\n\n**Out-of-scope** Use in any manner that violates applicable laws or regulations (including trade compliance laws). Use in any other way that is prohibited by the [Acceptable Use Policy](https://llama.meta.com/llama3/use-policy/) and [Llama 3 Community License](https://llama.meta.com/llama3/license/). Use in languages other than English**.\n\n**Note: Developers may fine-tune Llama 3 models for languages beyond English provided they comply with the [Llama 3 Community License](https://llama.meta.com/llama3/license/) and the [Acceptable Use Policy](https://llama.meta.com/llama3/use-policy/).\n\n\n## Hardware and Software\n\n**Training Factors** We used custom training libraries, Meta's Research SuperCluster, and production clusters for pretraining. Fine-tuning, annotation, and evaluation were also performed on third-party cloud compute.\n\n**Carbon Footprint Pretraining utilized a cumulative** 7.7M GPU hours of computation on hardware of type H100-80GB (TDP of 700W). Estimated total emissions were 2290 tCO2eq, 100% of which were offset by Meta’s sustainability program.\n\n\n<table>\n  <tr>\n   <td>\n   </td>\n   <td><strong>Time (GPU hours)</strong>\n   </td>\n   <td><strong>Power Consumption (W)</strong>\n   </td>\n   <td><strong>Carbon Emitted(tCO2eq)</strong>\n   </td>\n  </tr>\n  <tr>\n   <td>Llama 3 8B\n   </td>\n   <td>1.3M\n   </td>\n   <td>700\n   </td>\n   <td>390\n   </td>\n  </tr>\n  <tr>\n   <td>Llama 3 70B\n   </td>\n   <td>6.4M\n   </td>\n   <td>700\n   </td>\n   <td>1900\n   </td>\n  </tr>\n  <tr>\n   <td>Total\n   </td>\n   <td>7.7M\n   </td>\n   <td>\n   </td>\n   <td>2290\n   </td>\n  </tr>\n</table>\n\n\n\n**CO2 emissions during pre-training**. Time: total GPU time required for training each model. Power Consumption: peak power capacity per GPU device for the GPUs used adjusted for power usage efficiency. 100% of the emissions are directly offset by Meta's sustainability program, and because we are openly releasing these models, the pretraining costs do not need to be incurred by others.\n\n\n## Training Data\n\n**Overview** Llama 3 was pretrained on over 15 trillion tokens of data from publicly available sources. The fine-tuning data includes publicly available instruction datasets, as well as over 10M human-annotated examples. Neither the pretraining nor the fine-tuning datasets include Meta user data.\n\n**Data Freshness** The pretraining data has a cutoff of March 2023 for the 8B and December 2023 for the 70B models respectively. \n\n\n## Benchmarks \n\nIn this section, we report the results for Llama 3 models on standard automatic benchmarks. For all the evaluations, we use our internal evaluations library. For details on the methodology see [here](https://github.com/meta-llama/llama3/blob/main/eval_details.md).\n\n\n### Base pretrained models\n\n\n<table>\n  <tr>\n   <td><strong>Category</strong>\n   </td>\n   <td><strong>Benchmark</strong>\n   </td>\n   <td><strong>Llama 3 8B</strong>\n   </td>\n   <td><strong>Llama2 7B</strong>\n   </td>\n   <td><strong>Llama2 13B</strong>\n   </td>\n   <td><strong>Llama 3 70B</strong>\n   </td>\n   <td><strong>Llama2 70B</strong>\n   </td>\n  </tr>\n  <tr>\n   <td rowspan=\"6\" >General\n   </td>\n   <td>MMLU (5-shot)\n   </td>\n   <td>66.6\n   </td>\n   <td>45.7\n   </td>\n   <td>53.8\n   </td>\n   <td>79.5\n   </td>\n   <td>69.7\n   </td>\n  </tr>\n  <tr>\n   <td>AGIEval English (3-5 shot)\n   </td>\n   <td>45.9\n   </td>\n   <td>28.8\n   </td>\n   <td>38.7\n   </td>\n   <td>63.0\n   </td>\n   <td>54.8\n   </td>\n  </tr>\n  <tr>\n   <td>CommonSenseQA (7-shot)\n   </td>\n   <td>72.6\n   </td>\n   <td>57.6\n   </td>\n   <td>67.6\n   </td>\n   <td>83.8\n   </td>\n   <td>78.7\n   </td>\n  </tr>\n  <tr>\n   <td>Winogrande (5-shot)\n   </td>\n   <td>76.1\n   </td>\n   <td>73.3\n   </td>\n   <td>75.4\n   </td>\n   <td>83.1\n   </td>\n   <td>81.8\n   </td>\n  </tr>\n  <tr>\n   <td>BIG-Bench Hard (3-shot, CoT)\n   </td>\n   <td>61.1\n   </td>\n   <td>38.1\n   </td>\n   <td>47.0\n   </td>\n   <td>81.3\n   </td>\n   <td>65.7\n   </td>\n  </tr>\n  <tr>\n   <td>ARC-Challenge (25-shot)\n   </td>\n   <td>78.6\n   </td>\n   <td>53.7\n   </td>\n   <td>67.6\n   </td>\n   <td>93.0\n   </td>\n   <td>85.3\n   </td>\n  </tr>\n  <tr>\n   <td>Knowledge reasoning\n   </td>\n   <td>TriviaQA-Wiki (5-shot)\n   </td>\n   <td>78.5\n   </td>\n   <td>72.1\n   </td>\n   <td>79.6\n   </td>\n   <td>89.7\n   </td>\n   <td>87.5\n   </td>\n  </tr>\n  <tr>\n   <td rowspan=\"4\" >Reading comprehension\n   </td>\n   <td>SQuAD (1-shot)\n   </td>\n   <td>76.4\n   </td>\n   <td>72.2\n   </td>\n   <td>72.1\n   </td>\n   <td>85.6\n   </td>\n   <td>82.6\n   </td>\n  </tr>\n  <tr>\n   <td>QuAC (1-shot, F1)\n   </td>\n   <td>44.4\n   </td>\n   <td>39.6\n   </td>\n   <td>44.9\n   </td>\n   <td>51.1\n   </td>\n   <td>49.4\n   </td>\n  </tr>\n  <tr>\n   <td>BoolQ (0-shot)\n   </td>\n   <td>75.7\n   </td>\n   <td>65.5\n   </td>\n   <td>66.9\n   </td>\n   <td>79.0\n   </td>\n   <td>73.1\n   </td>\n  </tr>\n  <tr>\n   <td>DROP (3-shot, F1)\n   </td>\n   <td>58.4\n   </td>\n   <td>37.9\n   </td>\n   <td>49.8\n   </td>\n   <td>79.7\n   </td>\n   <td>70.2\n   </td>\n  </tr>\n</table>\n\n\n\n### Instruction tuned models\n\n\n<table>\n  <tr>\n   <td><strong>Benchmark</strong>\n   </td>\n   <td><strong>Llama 3 8B</strong>\n   </td>\n   <td><strong>Llama 2 7B</strong>\n   </td>\n   <td><strong>Llama 2 13B</strong>\n   </td>\n   <td><strong>Llama 3 70B</strong>\n   </td>\n   <td><strong>Llama 2 70B</strong>\n   </td>\n  </tr>\n  <tr>\n   <td>MMLU (5-shot)\n   </td>\n   <td>68.4\n   </td>\n   <td>34.1\n   </td>\n   <td>47.8\n   </td>\n   <td>82.0\n   </td>\n   <td>52.9\n   </td>\n  </tr>\n  <tr>\n   <td>GPQA (0-shot)\n   </td>\n   <td>34.2\n   </td>\n   <td>21.7\n   </td>\n   <td>22.3\n   </td>\n   <td>39.5\n   </td>\n   <td>21.0\n   </td>\n  </tr>\n  <tr>\n   <td>HumanEval (0-shot)\n   </td>\n   <td>62.2\n   </td>\n   <td>7.9\n   </td>\n   <td>14.0\n   </td>\n   <td>81.7\n   </td>\n   <td>25.6\n   </td>\n  </tr>\n  <tr>\n   <td>GSM-8K (8-shot, CoT)\n   </td>\n   <td>79.6\n   </td>\n   <td>25.7\n   </td>\n   <td>41.2\n   </td>\n   <td>93.0\n   </td>\n   <td>57.5\n   </td>\n  </tr>\n  <tr>\n   <td>MATH (4-shot, CoT)\n   </td>\n   <td>30.0\n   </td>\n   <td>3.8\n   </td>\n   <td>6.7\n   </td>\n   <td>50.4\n   </td>\n   <td>11.6\n   </td>\n  </tr>\n</table>\n\n\n\n### Responsibility & Safety\n\nWe believe that an open approach to AI leads to better, safer products, faster innovation, and a bigger overall market. We are committed to Responsible AI development and took a series of steps to limit misuse and harm and support the open source community.\n\nFoundation models are widely capable technologies that are built to be used for a diverse range of applications. They are not designed to meet every developer preference on safety levels for all use cases, out-of-the-box, as those by their nature will differ across different applications. \n\nRather, responsible LLM-application deployment is achieved by implementing a series of safety best practices throughout the development of such applications, from the model pre-training, fine-tuning and the deployment of systems composed of safeguards to tailor the safety needs specifically to the use case and audience. \n\n\nAs part of the Llama 3 release, we updated our [Responsible Use Guide](https://llama.meta.com/responsible-use-guide/) to outline the steps and best practices for developers to implement model and system level safety for their application. We also provide a set of resources including [Meta Llama Guard 2](https://llama.meta.com/purple-llama/) and [Code Shield](https://llama.meta.com/purple-llama/) safeguards. These tools have proven to drastically reduce residual risks of LLM Systems, while maintaining a high level of helpfulness. We encourage developers to tune and deploy these safeguards according to their needs and we provide a [reference implementation](https://github.com/meta-llama/llama-recipes/tree/main/recipes/responsible_ai) to get you started.\n\n\n#### Llama 3-Instruct\n\nAs outlined in the Responsible Use Guide, some trade-off between model helpfulness and model alignment is likely unavoidable. Developers should exercise discretion about how to weigh the benefits of alignment and helpfulness for their specific use case and audience. Developers should be mindful of residual risks when using Llama models and leverage additional safety tools as needed to reach the right safety bar for their use case. \n\n<span style=\"text-decoration:underline;\">Safety</span>\n\nFor our instruction tuned model, we conducted extensive red teaming exercises, performed adversarial evaluations and implemented safety mitigations techniques to lower residual risks. As with any Large Language Model, residual risks will likely remain and we recommend that developers assess these risks in the context of their use case. In parallel, we are working with the community to make AI safety benchmark standards transparent, rigorous and interpretable. \n\n<span style=\"text-decoration:underline;\">Refusals</span>\n\nIn addition to residual risks, we put a great emphasis on model refusals to benign prompts. Over-refusing not only can impact the user experience but could even be harmful in certain contexts as well. We’ve heard the feedback from the developer community and improved our fine tuning to ensure that Llama 3 is significantly less likely to falsely refuse to answer prompts than Llama 2. \n\nWe built internal benchmarks and developed mitigations to limit false refusals making Llama 3 our most helpful model to date. \n\n\n#### Responsible release \n\nIn addition to responsible use considerations outlined above, we followed a rigorous process that requires us to take extra measures against misuse and critical risks before we make our release decision. \n\nMisuse\n\nIf you access or use Llama 3, you agree to the Acceptable Use Policy. The most recent copy of this policy can be found at [https://llama.meta.com/llama3/use-policy/](https://llama.meta.com/llama3/use-policy/).\n\n\n#### Critical risks \n\n<span style=\"text-decoration:underline;\">CBRNE</span> (Chemical, Biological, Radiological, Nuclear, and high yield Explosives)\n\nWe have conducted a two fold assessment of the safety of the model in this area:\n\n\n\n* Iterative testing during model training to assess the safety of responses related to CBRNE threats and other adversarial risks.\n* Involving external CBRNE experts to conduct an uplift test assessing the ability of the model to accurately provide expert knowledge and reduce barriers to potential CBRNE misuse, by reference to what can be achieved using web search (without the model).\n\n\n### <span style=\"text-decoration:underline;\">Cyber Security </span>\n\nWe have evaluated Llama 3 with CyberSecEval, Meta’s cybersecurity safety eval suite, measuring Llama 3’s propensity to suggest insecure code when used as a coding assistant, and Llama 3’s propensity to comply with requests to help carry out cyber attacks, where attacks are defined by the industry standard MITRE ATT&CK cyber attack ontology. On our insecure coding and cyber attacker helpfulness tests, Llama 3 behaved in the same range or safer than models of [equivalent coding capability](https://huggingface.co/spaces/facebook/CyberSecEval). \n\n\n### <span style=\"text-decoration:underline;\">Child Safety</span>\n\nChild Safety risk assessments were conducted using a team of experts, to assess the model’s capability to produce outputs that could result in Child Safety risks and inform on any necessary and appropriate risk mitigations via fine tuning. We leveraged those expert red teaming sessions to expand the coverage of our evaluation benchmarks through Llama 3 model development.  For Llama 3, we conducted new in-depth sessions using objective based methodologies to assess the model risks along multiple attack vectors. We also partnered with content specialists to perform red teaming exercises assessing potentially violating content while taking account of market specific nuances or experiences. \n\n\n### Community \n\nGenerative AI safety requires expertise and tooling, and we believe in the strength of the open community to accelerate its progress. We are active members of open consortiums, including the AI Alliance, Partnership in AI and MLCommons, actively contributing to safety standardization and transparency. We encourage the community to adopt taxonomies like the MLCommons Proof of Concept evaluation to facilitate collaboration and transparency on safety and content evaluations. Our Purple Llama tools are open sourced for the community to use and widely distributed across ecosystem partners including cloud service providers. We encourage community contributions to our [GitHub repository](https://github.com/meta-llama/PurpleLlama). \n\nFinally, we put in place a set of resources including an [output reporting mechanism](https://developers.facebook.com/llama_output_feedback) and [bug bounty program](https://www.facebook.com/whitehat) to continuously improve the Llama technology with the help of the community. \n\n\n## Ethical Considerations and Limitations\n\nThe core values of Llama 3 are openness, inclusivity and helpfulness. It is meant to serve everyone, and to work for a wide range of use cases. It is thus designed to be accessible to people across many different backgrounds, experiences and perspectives. Llama 3 addresses users and their needs as they are, without insertion unnecessary judgment or normativity, while reflecting the understanding that even content that may appear problematic in some cases can serve valuable purposes in others. It respects the dignity and autonomy of all users, especially in terms of the values of free thought and expression that power innovation and progress. \n\nBut Llama 3 is a new technology, and like any new technology, there are risks associated with its use. Testing conducted to date has been in English, and has not covered, nor could it cover, all scenarios. For these reasons, as with all LLMs, Llama 3’s potential outputs cannot be predicted in advance, and the model may in some instances produce inaccurate, biased or other objectionable responses to user prompts. Therefore, before deploying any applications of Llama 3 models, developers should perform safety testing and tuning tailored to their specific applications of the model. As outlined in the Responsible Use Guide, we recommend incorporating [Purple Llama](https://github.com/facebookresearch/PurpleLlama) solutions into your workflows and specifically [Llama Guard](https://ai.meta.com/research/publications/llama-guard-llm-based-input-output-safeguard-for-human-ai-conversations/) which provides a base model to filter input and output prompts to layer system-level safety on top of model-level safety. \n\nPlease see the Responsible Use Guide available at [http://llama.meta.com/responsible-use-guide](http://llama.meta.com/responsible-use-guide)\n\n\n## Citation instructions\n\n```\n@article{llama3modelcard,\n  title={Llama 3 Model Card},\n  author={AI@Meta},\n  year={2024},\n  url = {https://github.com/meta-llama/llama3/blob/main/MODEL_CARD.md}\n}\n```\n\n## Contributors\n\nAaditya Singh; Aaron Grattafiori; Abhimanyu Dubey; Abhinav Jauhri; Abhinav Pandey; Abhishek Kadian; Adam Kelsey; Adi Gangidi; Ahmad Al-Dahle; Amit Sangani; Ahuva Goldstand; Aiesha Letman; Ajay Menon; Akhil Mathur; Alan Schelten; Alex Vaughan; Amy Yang; Andrei Lupu; Andres Alvarado; Andrew Gallagher; Andrew Gu; Andrew Ho; Andrew Poulton; Andrew Ryan; Angela Fan; Ankit Ramchandani; Anthony Hartshorn; Archi Mitra; Archie Sravankumar; Artem Korenev; Arun Rao; Ashley Gabriel; Ashwin Bharambe; Assaf Eisenman; Aston Zhang; Ash JJhaveri; Aurelien Rodriguez; Austen Gregerson; Ava Spataru; Baptiste Roziere; Ben Maurer; Benjamin Leonhardi; Bernie Huang; Bhargavi Paranjape; Bing Liu; Binh Tang; Bobbie Chern; Brani Stojkovic; Brian Fuller; Catalina Mejia Arenas; Chao Zhou; Charlotte Caucheteux; Chaya Nayak; Ching-Hsiang Chu; Chloe Bi; Chris Cai; Chris Cox; Chris Marra; Chris McConnell; Christian Keller; Christoph Feichtenhofer; Christophe Touret; Chunyang Wu; Corinne Wong; Cristian Canton Ferrer; Damien Allonsius; Daniel Kreymer; Daniel Haziza; Daniel Li; Danielle Pintz; Danny Livshits; Danny Wyatt; David Adkins; David Esiobu; David Xu; Davide Testuggine; Delia David; Devi Parikh; Dhruv Choudhary; Dhruv Mahajan; Diana Liskovich; Diego Garcia-Olano; Diego Perino; Dieuwke Hupkes; Dingkang Wang; Dustin Holland; Egor Lakomkin; Elina Lobanova; Xiaoqing Ellen Tan; Emily Dinan; Eric Smith; Erik Brinkman; Esteban Arcaute; Filip Radenovic; Firat Ozgenel; Francesco Caggioni; Frank Seide; Frank Zhang; Gabriel Synnaeve; Gabriella Schwarz; Gabrielle Lee; Gada Badeer; Georgia Anderson; Graeme Nail; Gregoire Mialon; Guan Pang; Guillem Cucurell; Hailey Nguyen; Hamid Shojanazeri; Hannah Korevaar; Hannah Wang; Haroun Habeeb; Harrison Rudolph; Henry Aspegren; Hu Xu; Hugo Touvron; Iga Kozlowska; Igor Molybog; Igor Tufanov; Iliyan Zarov; Imanol Arrieta Ibarra; Irina-Elena Veliche; Isabel Kloumann; Ishan Misra; Ivan Evtimov; Jade Copet; Jake Weissman; Jan Geffert; Jana Vranes; Japhet Asher; Jason Park; Jay Mahadeokar; Jean-Baptiste Gaya; Jeet Shah; Jelmer van der Linde; Jennifer Chan; Jenny Hong; Jenya Lee; Jeremy Fu; Jeremy Teboul; Jianfeng Chi; Jianyu Huang; Jie Wang; Jiecao Yu; Joanna Bitton; Joe Spisak; Joelle Pineau; Jon Carvill; Jongsoo Park; Joseph Rocca; Joshua Johnstun; Junteng Jia; Kalyan Vasuden Alwala; Kam Hou U; Kate Plawiak; Kartikeya Upasani; Kaushik Veeraraghavan; Ke Li; Kenneth Heafield; Kevin Stone; Khalid El-Arini; Krithika Iyer; Kshitiz Malik; Kuenley Chiu; Kunal Bhalla; Kyle Huang; Lakshya Garg; Lauren Rantala-Yeary; Laurens van der Maaten; Lawrence Chen; Leandro Silva; Lee Bell; Lei Zhang; Liang Tan; Louis Martin; Lovish Madaan; Luca Wehrstedt; Lukas Blecher; Luke de Oliveira; Madeline Muzzi; Madian Khabsa; Manav Avlani; Mannat Singh; Manohar Paluri; Mark Zuckerberg; Marcin Kardas; Martynas Mankus; Mathew Oldham; Mathieu Rita; Matthew Lennie; Maya Pavlova; Meghan Keneally; Melanie Kambadur; Mihir Patel; Mikayel Samvelyan; Mike Clark; Mike Lewis; Min Si; Mitesh Kumar Singh; Mo Metanat; Mona Hassan; Naman Goyal; Narjes Torabi; Nicolas Usunier; Nikolay Bashlykov; Nikolay Bogoychev; Niladri Chatterji; Ning Dong; Oliver Aobo Yang; Olivier Duchenne; Onur Celebi; Parth Parekh; Patrick Alrassy; Paul Saab; Pavan Balaji; Pedro Rittner; Pengchuan Zhang; Pengwei Li; Petar Vasic; Peter Weng; Polina Zvyagina; Prajjwal Bhargava; Pratik Dubal; Praveen Krishnan; Punit Singh Koura; Puxin Xu; Qing He; Rachel Rodriguez; Ragavan Srinivasan; Rahul Mitra; Ramon Calderer; Raymond Li; Robert Stojnic; Roberta Raileanu; Robin Battey; Rocky Wang; Rohit Girdhar; Rohit Patel; Romain Sauvestre; Ronnie Polidoro; Roshan Sumbaly; Ross Taylor; Ruan Silva; Rui Hou; Rui Wang; Russ Howes; Ruty Rinott; Saghar Hosseini; Sai Jayesh Bondu; Samyak Datta; Sanjay Singh; Sara Chugh; Sargun Dhillon; Satadru Pan; Sean Bell; Sergey Edunov; Shaoliang Nie; Sharan Narang; Sharath Raparthy; Shaun Lindsay; Sheng Feng; Sheng Shen; Shenghao Lin; Shiva Shankar; Shruti Bhosale; Shun Zhang; Simon Vandenhende; Sinong Wang; Seohyun Sonia Kim; Soumya Batra; Sten Sootla; Steve Kehoe; Suchin Gururangan; Sumit Gupta; Sunny Virk; Sydney Borodinsky; Tamar Glaser; Tamar Herman; Tamara Best; Tara Fowler; Thomas Georgiou; Thomas Scialom; Tianhe Li; Todor Mihaylov; Tong Xiao; Ujjwal Karn; Vedanuj Goswami; Vibhor Gupta; Vignesh Ramanathan; Viktor Kerkez; Vinay Satish Kumar; Vincent Gonguet; Vish Vogeti; Vlad Poenaru; Vlad Tiberiu Mihailescu; Vladan Petrovic; Vladimir Ivanov; Wei Li; Weiwei Chu; Wenhan Xiong; Wenyin Fu; Wes Bouaziz; Whitney Meers; Will Constable; Xavier Martinet; Xiaojian Wu; Xinbo Gao; Xinfeng Xie; Xuchao Jia; Yaelle Goldschlag; Yann LeCun; Yashesh Gaur; Yasmine Babaei; Ye Qi; Yenda Li; Yi Wen; Yiwen Song; Youngjin Nam; Yuchen Hao; Yuchen Zhang; Yun Wang; Yuning Mao; Yuzi He; Zacharie Delpierre Coudert; Zachary DeVito; Zahra Hankir; Zhaoduo Wen; Zheng Yan; Zhengxing Chen; Zhenyu Yang; Zoe Papakipos\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.3544921875,
          "content": "<p align=\"center\">\n  <img src=\"https://github.com/meta-llama/llama3/blob/main/Llama3_Repo.jpeg\" width=\"400\"/>\n</p>\n\n<p align=\"center\">\n        🤗 <a href=\"https://huggingface.co/meta-Llama\"> Models on Hugging Face</a>&nbsp | <a href=\"https://ai.meta.com/blog/\"> Blog</a>&nbsp |  <a href=\"https://llama.meta.com/\">Website</a>&nbsp | <a href=\"https://llama.meta.com/get-started/\">Get Started</a>&nbsp\n<br>\n\n---\n\n## **Note of deprecation**\n\nThank you for developing with Llama models. As part of the Llama 3.1 release, we’ve consolidated GitHub repos and added some additional repos as we’ve expanded Llama’s functionality into being an e2e Llama Stack. Please use the following repos going forward:\n- [llama-models](https://github.com/meta-llama/llama-models) - Central repo for the foundation models including basic utilities, model cards, license and use policies\n- [PurpleLlama](https://github.com/meta-llama/PurpleLlama) - Key component of Llama Stack focusing on safety risks and inference time mitigations \n- [llama-toolchain](https://github.com/meta-llama/llama-toolchain) - Model development (inference/fine-tuning/safety shields/synthetic data generation) interfaces and canonical implementations\n- [llama-agentic-system](https://github.com/meta-llama/llama-agentic-system) - E2E standalone Llama Stack system, along with opinionated underlying interface, that enables creation of agentic applications\n- [llama-recipes](https://github.com/meta-llama/llama-recipes) - Community driven scripts and integrations\n\nIf you have any questions, please feel free to file an issue on any of the above repos and we will do our best to respond in a timely manner. \n\nThank you!\n\n\n# (Deprecated) Meta Llama 3\n\nWe are unlocking the power of large language models. Our latest version of Llama is now accessible to individuals, creators, researchers, and businesses of all sizes so that they can experiment, innovate, and scale their ideas responsibly.\n\nThis release includes model weights and starting code for pre-trained and instruction-tuned Llama 3 language models — including sizes of 8B to 70B parameters.\n\nThis repository is a minimal example of loading Llama 3 models and running inference. For more detailed examples, see [llama-recipes](https://github.com/facebookresearch/llama-recipes/).\n\n## Download\n\nTo download the model weights and tokenizer, please visit the [Meta Llama website](https://llama.meta.com/llama-downloads/) and accept our License.\n\nOnce your request is approved, you will receive a signed URL over email. Then, run the download.sh script, passing the URL provided when prompted to start the download.\n\nPre-requisites: Ensure you have `wget` and `md5sum` installed. Then run the script: `./download.sh`.\n\nRemember that the links expire after 24 hours and a certain amount of downloads. You can always re-request a link if you start seeing errors such as `403: Forbidden`.\n\n### Access to Hugging Face\n\nWe also provide downloads on [Hugging Face](https://huggingface.co/meta-llama), in both transformers and native `llama3` formats. To download the weights from Hugging Face, please follow these steps:\n\n- Visit one of the repos, for example [meta-llama/Meta-Llama-3-8B-Instruct](https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct).\n- Read and accept the license. Once your request is approved, you'll be granted access to all the Llama 3 models. Note that requests used to take up to one hour to get processed.\n- To download the original native weights to use with this repo, click on the \"Files and versions\" tab and download the contents of the `original` folder. You can also download them from the command line if you `pip install huggingface-hub`:\n\n```bash\nhuggingface-cli download meta-llama/Meta-Llama-3-8B-Instruct --include \"original/*\" --local-dir meta-llama/Meta-Llama-3-8B-Instruct\n```\n\n- To use with transformers, the following [pipeline](https://huggingface.co/docs/transformers/en/main_classes/pipelines) snippet will download and cache the weights:\n\n  ```python\n  import transformers\n  import torch\n\n  model_id = \"meta-llama/Meta-Llama-3-8B-Instruct\"\n\n  pipeline = transformers.pipeline(\n    \"text-generation\",\n    model=\"meta-llama/Meta-Llama-3-8B-Instruct\",\n    model_kwargs={\"torch_dtype\": torch.bfloat16},\n    device=\"cuda\",\n  )\n  ```\n\n## Quick Start\n\nYou can follow the steps below to get up and running with Llama 3 models quickly. These steps will let you run quick inference locally. For more examples, see the [Llama recipes repository](https://github.com/facebookresearch/llama-recipes).\n\n1. Clone and download this repository in a conda env with PyTorch / CUDA.\n\n2. In the top-level directory run:\n    ```bash\n    pip install -e .\n    ```\n3. Visit the [Meta Llama website](https://llama.meta.com/llama-downloads/) and register to download the model/s.\n\n4. Once registered, you will get an email with a URL to download the models. You will need this URL when you run the download.sh script.\n\n5. Once you get the email, navigate to your downloaded llama repository and run the download.sh script.\n    - Make sure to grant execution permissions to the download.sh script\n    - During this process, you will be prompted to enter the URL from the email.\n    - Do not use the “Copy Link” option; copy the link from the email manually.\n\n6. Once the model/s you want have been downloaded, you can run the model locally using the command below:\n```bash\ntorchrun --nproc_per_node 1 example_chat_completion.py \\\n    --ckpt_dir Meta-Llama-3-8B-Instruct/ \\\n    --tokenizer_path Meta-Llama-3-8B-Instruct/tokenizer.model \\\n    --max_seq_len 512 --max_batch_size 6\n```\n**Note**\n- Replace  `Meta-Llama-3-8B-Instruct/` with the path to your checkpoint directory and `Meta-Llama-3-8B-Instruct/tokenizer.model` with the path to your tokenizer model.\n- The `–nproc_per_node` should be set to the [MP](#inference) value for the model you are using.\n- Adjust the `max_seq_len` and `max_batch_size` parameters as needed.\n- This example runs the [example_chat_completion.py](example_chat_completion.py) found in this repository, but you can change that to a different .py file.\n\n## Inference\n\nDifferent models require different model-parallel (MP) values:\n\n|  Model | MP |\n|--------|----|\n| 8B     | 1  |\n| 70B    | 8  |\n\nAll models support sequence length up to 8192 tokens, but we pre-allocate the cache according to `max_seq_len` and `max_batch_size` values. So set those according to your hardware.\n\n### Pretrained Models\n\nThese models are not finetuned for chat or Q&A. They should be prompted so that the expected answer is the natural continuation of the prompt.\n\nSee `example_text_completion.py` for some examples. To illustrate, see the command below to run it with the llama-3-8b model (`nproc_per_node` needs to be set to the `MP` value):\n\n```\ntorchrun --nproc_per_node 1 example_text_completion.py \\\n    --ckpt_dir Meta-Llama-3-8B/ \\\n    --tokenizer_path Meta-Llama-3-8B/tokenizer.model \\\n    --max_seq_len 128 --max_batch_size 4\n```\n\n### Instruction-tuned Models\n\nThe fine-tuned models were trained for dialogue applications. To get the expected features and performance for them, specific formatting defined in [`ChatFormat`](https://github.com/meta-llama/llama3/blob/main/llama/tokenizer.py#L202)\nneeds to be followed: The prompt begins with a `<|begin_of_text|>` special token, after which one or more messages follow. Each message starts with the `<|start_header_id|>` tag, the role `system`, `user` or `assistant`, and the `<|end_header_id|>` tag. After a double newline `\\n\\n`, the message's contents follow. The end of each message is marked by the `<|eot_id|>` token.\n\nYou can also deploy additional classifiers to filter out inputs and outputs that are deemed unsafe. See the llama-recipes repo for [an example](https://github.com/meta-llama/llama-recipes/blob/main/recipes/inference/local_inference/inference.py) of how to add a safety checker to the inputs and outputs of your inference code.\n\nExamples using llama-3-8b-chat:\n\n```\ntorchrun --nproc_per_node 1 example_chat_completion.py \\\n    --ckpt_dir Meta-Llama-3-8B-Instruct/ \\\n    --tokenizer_path Meta-Llama-3-8B-Instruct/tokenizer.model \\\n    --max_seq_len 512 --max_batch_size 6\n```\n\nLlama 3 is a new technology that carries potential risks with use. Testing conducted to date has not — and could not — cover all scenarios.\nTo help developers address these risks, we have created the [Responsible Use Guide](https://ai.meta.com/static-resource/responsible-use-guide/).\n\n## Issues\n\nPlease report any software “bug” or other problems with the models through one of the following means:\n- Reporting issues with the model: [https://github.com/meta-llama/llama3/issues](https://github.com/meta-llama/llama3/issues)\n- Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\n- Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\n\n## Model Card\nSee [MODEL_CARD.md](MODEL_CARD.md).\n\n## License\n\nOur model and weights are licensed for researchers and commercial entities, upholding the principles of openness. Our mission is to empower individuals and industry through this opportunity while fostering an environment of discovery and ethical AI advancements.\n\nSee the [LICENSE](LICENSE) file, as well as our accompanying [Acceptable Use Policy](USE_POLICY.md)\n\n## Questions\n\nFor common questions, the FAQ can be found [here](https://llama.meta.com/faq), which will be updated over time as new questions arise.\n"
        },
        {
          "name": "USE_POLICY.md",
          "type": "blob",
          "size": 4.6591796875,
          "content": "# Meta Llama 3 Acceptable Use Policy\n\nMeta is committed to promoting safe and fair use of its tools and features, including Llama 3. If you access or use Llama 3, you agree to this Acceptable Use Policy (“Policy”). The most recent copy of this policy can be found at [ai.meta.com/llama/use-policy](http://ai.meta.com/llama/use-policy).\n\n## Prohibited Uses\nWe want everyone to use Llama 3 safely and responsibly. You agree you will not use, or allow others to use, Llama 3 to: \n\n1. Violate the law or others’ rights, including to:\n    1. Engage in, promote, generate, contribute to, encourage, plan, incite, or further illegal or unlawful activity or content, such as: \n        1. Violence or terrorism \n        2. Exploitation or harm to children, including the solicitation, creation, acquisition, or dissemination of child exploitative content or failure to report Child Sexual Abuse Material\n        3. Human trafficking, exploitation, and sexual violence\n        4. The illegal distribution of information or materials to minors, including obscene materials, or failure to employ legally required age-gating in connection with such information or materials.\n        5. Sexual solicitation\n        6. Any other criminal activity\n    2. Engage in, promote, incite, or facilitate the harassment, abuse, threatening, or bullying of individuals or groups of individuals\n    3. Engage in, promote, incite, or facilitate discrimination or other unlawful or harmful conduct in the provision of employment, employment benefits, credit, housing, other economic benefits, or other essential goods and services\n    4. Engage in the unauthorized or unlicensed practice of any profession including, but not limited to, financial, legal, medical/health, or related professional practices \n    5. Collect, process, disclose, generate, or infer health, demographic, or other sensitive personal or private information about individuals without rights and consents required by applicable laws\n    6. Engage in or facilitate any action or generate any content that infringes, misappropriates, or otherwise violates any third-party rights, including the outputs or results of any products or services using the Llama 3 Materials\n    7. Create, generate, or facilitate the creation of malicious code, malware, computer viruses or do anything else that could disable, overburden, interfere with or impair the proper working, integrity, operation or appearance of a website or computer system \n\n\n\n2. Engage in, promote, incite, facilitate, or assist in the planning or development of activities that present a risk of death or bodily harm to individuals, including use of Llama 3 related to the following:\n    1. Military, warfare, nuclear industries or applications, espionage, use for materials or activities that are subject to the International Traffic Arms Regulations (ITAR) maintained by the United States Department of State\n    2. Guns and illegal weapons (including weapon development)\n    3. Illegal drugs and regulated/controlled substances\n    4. Operation of critical infrastructure, transportation technologies, or heavy machinery\n    5. Self-harm or harm to others, including suicide, cutting, and eating disorders\n    6. Any content intended to incite or promote violence, abuse, or any infliction of bodily harm to an individual\n\n\n\n3. Intentionally deceive or mislead others, including use of Llama 3 related to the following:\n    1. Generating, promoting, or furthering fraud or the creation or promotion of disinformation\n    2. Generating, promoting, or furthering defamatory content, including the creation of defamatory statements, images, or other content\n    3. Generating, promoting, or further distributing spam\n    4. Impersonating another individual without consent, authorization, or legal right\n    5. Representing that the use of Llama 3 or outputs are human-generated\n    6. Generating or facilitating false online engagement, including fake reviews and other means of fake online engagement \n4. Fail to appropriately disclose to end users any known dangers of your AI system \n\nPlease report any violation of this Policy, software “bug,” or other problems that could lead to a violation of this Policy through one of the following means:\n\n* Reporting issues with the model: [github.com/facebookresearch/llama](http://github.com/facebookresearch/llama)\n* Reporting risky content generated by the model: [developers.facebook.com/llama_output_feedback](http://developers.facebook.com/llama_output_feedback)\n* Reporting bugs and security concerns: [facebook.com/whitehat/info](http://facebook.com/whitehat/info)\n* Reporting violations of the Acceptable Use Policy or unlicensed uses of Llama: [LlamaUseReport@meta.com](mailto:LlamaUseReport@meta.com)\n\n"
        },
        {
          "name": "download.sh",
          "type": "blob",
          "size": 2.623046875,
          "content": "#!/usr/bin/env bash\n\n# Copyright (c) Meta Platforms, Inc. and affiliates.\n# This software may be used and distributed according to the terms of the Llama 2 Community License Agreement.\n\n####\n## NOTE: For downloading Llama 3.1 please refer to https://github.com/meta-llama/llama-models/tree/main/models/llama3_1#download\n####\n\nset -e\n\nread -p \"Enter the URL from email: \" PRESIGNED_URL\necho \"\"\nread -p \"Enter the list of models to download without spaces (8B,8B-instruct,70B,70B-instruct), or press Enter for all: \" MODEL_SIZE\nTARGET_FOLDER=\".\"             # where all files should end up\nmkdir -p ${TARGET_FOLDER}\n\nif [[ $MODEL_SIZE == \"\" ]]; then\n    MODEL_SIZE=\"8B,8B-instruct,70B,70B-instruct\"\nfi\n\necho \"Downloading LICENSE and Acceptable Usage Policy\"\nwget --continue ${PRESIGNED_URL/'*'/\"LICENSE\"} -O ${TARGET_FOLDER}\"/LICENSE\"\nwget --continue ${PRESIGNED_URL/'*'/\"USE_POLICY\"} -O ${TARGET_FOLDER}\"/USE_POLICY\"\n\nfor m in ${MODEL_SIZE//,/ }\ndo\n    if [[ $m == \"8B\" ]] || [[ $m == \"8b\" ]]; then\n        SHARD=0\n        MODEL_FOLDER_PATH=\"Meta-Llama-3-8B\"\n        MODEL_PATH=\"8b_pre_trained\"\n    elif [[ $m == \"8B-instruct\" ]] || [[ $m == \"8b-instruct\" ]] || [[ $m == \"8b-Instruct\" ]] || [[ $m == \"8B-Instruct\" ]]; then\n        SHARD=0\n        MODEL_FOLDER_PATH=\"Meta-Llama-3-8B-Instruct\"\n        MODEL_PATH=\"8b_instruction_tuned\"\n    elif [[ $m == \"70B\" ]] || [[ $m == \"70b\" ]]; then\n        SHARD=7\n        MODEL_FOLDER_PATH=\"Meta-Llama-3-70B\"\n        MODEL_PATH=\"70b_pre_trained\"\n    elif [[ $m == \"70B-instruct\" ]] || [[ $m == \"70b-instruct\" ]] || [[ $m == \"70b-Instruct\" ]] || [[ $m == \"70B-Instruct\" ]]; then\n        SHARD=7\n        MODEL_FOLDER_PATH=\"Meta-Llama-3-70B-Instruct\"\n        MODEL_PATH=\"70b_instruction_tuned\"\n    fi\n\n    echo \"Downloading ${MODEL_PATH}\"\n    mkdir -p ${TARGET_FOLDER}\"/${MODEL_FOLDER_PATH}\"\n\n    for s in $(seq -f \"0%g\" 0 ${SHARD})\n    do\n        wget --continue ${PRESIGNED_URL/'*'/\"${MODEL_PATH}/consolidated.${s}.pth\"} -O ${TARGET_FOLDER}\"/${MODEL_FOLDER_PATH}/consolidated.${s}.pth\"\n    done\n\n    wget --continue ${PRESIGNED_URL/'*'/\"${MODEL_PATH}/params.json\"} -O ${TARGET_FOLDER}\"/${MODEL_FOLDER_PATH}/params.json\"\n    wget --continue ${PRESIGNED_URL/'*'/\"${MODEL_PATH}/tokenizer.model\"} -O ${TARGET_FOLDER}\"/${MODEL_FOLDER_PATH}/tokenizer.model\"\n    wget --continue ${PRESIGNED_URL/'*'/\"${MODEL_PATH}/checklist.chk\"} -O ${TARGET_FOLDER}\"/${MODEL_FOLDER_PATH}/checklist.chk\"\n    echo \"Checking checksums\"\n    CPU_ARCH=$(uname -m)\n    if [[ \"$CPU_ARCH\" == \"arm64\" ]]; then\n      (cd ${TARGET_FOLDER}\"/${MODEL_FOLDER_PATH}\" && md5 checklist.chk)\n    else\n      (cd ${TARGET_FOLDER}\"/${MODEL_FOLDER_PATH}\" && md5sum -c checklist.chk)\n    fi\ndone\n"
        },
        {
          "name": "eval_details.md",
          "type": "blob",
          "size": 3.056640625,
          "content": "### Llama 3 Evaluation Details\nThis document contains additional context on the settings and parameters for how we evaluated the Llama 3 pre-trained and instruct-aligned models.\n### Auto-eval benchmark notes\n#### MMLU\n- We are reporting macro averages for MMLU benchmarks. The micro average numbers for MMLU are: 65.4 and 67.4 for the 8B pre-trained and instruct-aligned models, 78.9 and 82.0 for the 70B pre-trained and instruct-aligned models\n- The pre-trained models are evaluated in the standard way by calculating the likelihood of each choice character. For the instruct-aligned models, we use a  dialogue prompt (*user/assistant*) for the shots and ask the model to generate the best choice character as answer.\n#### AGI English\n- We use the default few-shot and prompt settings as specified [here](https://github.com/ruixiangcui/AGIEval). The score is averaged over the english subtasks.\n#### CommonSenseQA\n- We use the same 7-shot chain-of-thought prompt as in [Wei et al. (2022)](https://arxiv.org/pdf/2201.11903.pdf).\n#### Winogrande\n- We use a choice based setup for evaluation where we fill in the missing blank with the two possible choices and then compute log-likelihood over the suffix. We use 5 shots for evaluation.\n#### BIG-Bench Hard\n- We use a 3-shot chain of thought style prompting and compute the average exact match over the subsets in this task.\n#### ARC-Challenge\n- We use the arc-challenge subset from the arc benchmark. We use 25 shots and use the MMLU setup for evaluation where we provide all the choices in the prompt and calculate likelihood over choice characters\n#### TriviaQA-WIKI\n- We evaluate on the Wiki validation set and use 5 few-shot examples.\n#### SQuAD\n- We are using SQuAD v2 and compute exact match in a 1-shot setting.\n#### QuAC\n- Same setting as Llama 2 (1-shot, f1).\n#### BoolQ\n- Same setting as Llama 1 and Llama 2 (0-shot, accuracy).\n#### DROP\n- For each validation example, we draw 3 random few-shot examples from the train split.\n#### GPQA\n- We report 0-shot exact match scores over the possible options using the Main subset for our models and other open-source models (Mistral, Gemma).\n#### HumanEval\n- Same setting as Llama 1 and Llama 2 (pass@1).\n#### GSM8K\n- We use the same 8-shot chain-of-thought prompt as in [Wei et al. (2022)](https://arxiv.org/pdf/2201.11903.pdf) (maj@1).\n- Max generation length is 512 tokens.\n#### MATH\n- We use the 4-shot problem available in [Lewkowycz et al. (2022)](https://arxiv.org/pdf/2206.14858.pdf) (maj@1).\n### Human evaluation notes\nThis evaluation set contains 1,800 prompts that cover 12 key use cases: asking for advice, brainstorming, classification, closed question answering, coding, creative writing, extraction, inhabiting a character/persona, open question answering, reasoning, rewriting, and summarization.\n|Category|Count|\n|--------|-----|\n|Coding|150|\n|Mathematical reasoning|150|\n|Asking for Advice|150|\n|Brainstorming|150|\n|Classification|150|\n|Closed Question Answering|150|\n|Creative Writing|150|\n|Extraction|150|\n|Inhabiting a Character/Persona|150|\n|Open Question Answering|150|\n|Rewriting|150|\n|Summarization|150|\n"
        },
        {
          "name": "example_chat_completion.py",
          "type": "blob",
          "size": 3.19921875,
          "content": "# Copyright (c) Meta Platforms, Inc. and affiliates.\n# This software may be used and distributed in accordance with the terms of the Llama 3 Community License Agreement.\n\nfrom typing import List, Optional\n\nimport fire\n\nfrom llama import Dialog, Llama\n\n\ndef main(\n    ckpt_dir: str,\n    tokenizer_path: str,\n    temperature: float = 0.6,\n    top_p: float = 0.9,\n    max_seq_len: int = 512,\n    max_batch_size: int = 4,\n    max_gen_len: Optional[int] = None,\n):\n    \"\"\"\n    Examples to run with the models finetuned for chat. Prompts correspond of chat\n    turns between the user and assistant with the final one always being the user.\n\n    An optional system prompt at the beginning to control how the model should respond\n    is also supported.\n\n    The context window of llama3 models is 8192 tokens, so `max_seq_len` needs to be <= 8192.\n\n    `max_gen_len` is optional because finetuned models are able to stop generations naturally.\n    \"\"\"\n    generator = Llama.build(\n        ckpt_dir=ckpt_dir,\n        tokenizer_path=tokenizer_path,\n        max_seq_len=max_seq_len,\n        max_batch_size=max_batch_size,\n    )\n\n    dialogs: List[Dialog] = [\n        [{\"role\": \"user\", \"content\": \"what is the recipe of mayonnaise?\"}],\n        [\n            {\"role\": \"user\", \"content\": \"I am going to Paris, what should I see?\"},\n            {\n                \"role\": \"assistant\",\n                \"content\": \"\"\"\\\nParis, the capital of France, is known for its stunning architecture, art museums, historical landmarks, and romantic atmosphere. Here are some of the top attractions to see in Paris:\n\n1. The Eiffel Tower: The iconic Eiffel Tower is one of the most recognizable landmarks in the world and offers breathtaking views of the city.\n2. The Louvre Museum: The Louvre is one of the world's largest and most famous museums, housing an impressive collection of art and artifacts, including the Mona Lisa.\n3. Notre-Dame Cathedral: This beautiful cathedral is one of the most famous landmarks in Paris and is known for its Gothic architecture and stunning stained glass windows.\n\nThese are just a few of the many attractions that Paris has to offer. With so much to see and do, it's no wonder that Paris is one of the most popular tourist destinations in the world.\"\"\",\n            },\n            {\"role\": \"user\", \"content\": \"What is so great about #1?\"},\n        ],\n        [\n            {\"role\": \"system\", \"content\": \"Always answer with Haiku\"},\n            {\"role\": \"user\", \"content\": \"I am going to Paris, what should I see?\"},\n        ],\n        [\n            {\n                \"role\": \"system\",\n                \"content\": \"Always answer with emojis\",\n            },\n            {\"role\": \"user\", \"content\": \"How to go from Beijing to NY?\"},\n        ],\n    ]\n    results = generator.chat_completion(\n        dialogs,\n        max_gen_len=max_gen_len,\n        temperature=temperature,\n        top_p=top_p,\n    )\n\n    for dialog, result in zip(dialogs, results):\n        for msg in dialog:\n            print(f\"{msg['role'].capitalize()}: {msg['content']}\\n\")\n        print(\n            f\"> {result['generation']['role'].capitalize()}: {result['generation']['content']}\"\n        )\n        print(\"\\n==================================\\n\")\n\n\nif __name__ == \"__main__\":\n    fire.Fire(main)\n"
        },
        {
          "name": "example_text_completion.py",
          "type": "blob",
          "size": 1.9130859375,
          "content": "# Copyright (c) Meta Platforms, Inc. and affiliates.\n# This software may be used and distributed in accordance with the terms of the Llama 3 Community License Agreement.\n\nfrom typing import List\n\nimport fire\n\nfrom llama import Llama\n\n\ndef main(\n    ckpt_dir: str,\n    tokenizer_path: str,\n    temperature: float = 0.6,\n    top_p: float = 0.9,\n    max_seq_len: int = 128,\n    max_gen_len: int = 64,\n    max_batch_size: int = 4,\n):\n    \"\"\"\n    Examples to run with the pre-trained models (no fine-tuning). Prompts are\n    usually in the form of an incomplete text prefix that the model can then try to complete.\n\n    The context window of llama3 models is 8192 tokens, so `max_seq_len` needs to be <= 8192.\n    `max_gen_len` is needed because pre-trained models usually do not stop completions naturally.\n    \"\"\"\n    generator = Llama.build(\n        ckpt_dir=ckpt_dir,\n        tokenizer_path=tokenizer_path,\n        max_seq_len=max_seq_len,\n        max_batch_size=max_batch_size,\n    )\n\n    prompts: List[str] = [\n        # For these prompts, the expected answer is the natural continuation of the prompt\n        \"I believe the meaning of life is\",\n        \"Simply put, the theory of relativity states that \",\n        \"\"\"A brief message congratulating the team on the launch:\n\n        Hi everyone,\n\n        I just \"\"\",\n        # Few shot prompt (providing a few examples before asking model to complete more);\n        \"\"\"Translate English to French:\n\n        sea otter => loutre de mer\n        peppermint => menthe poivrée\n        plush girafe => girafe peluche\n        cheese =>\"\"\",\n    ]\n    results = generator.text_completion(\n        prompts,\n        max_gen_len=max_gen_len,\n        temperature=temperature,\n        top_p=top_p,\n    )\n    for prompt, result in zip(prompts, results):\n        print(prompt)\n        print(f\"> {result['generation']}\")\n        print(\"\\n==================================\\n\")\n\n\nif __name__ == \"__main__\":\n    fire.Fire(main)\n"
        },
        {
          "name": "llama",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.044921875,
          "content": "torch\nfairscale\nfire\ntiktoken==0.4.0\nblobfile\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.4228515625,
          "content": "# Copyright (c) Meta Platforms, Inc. and affiliates.\n# This software may be used and distributed in accordance with the terms of the Llama 3 Community License Agreement.\n\nfrom setuptools import find_packages, setup\n\n\ndef get_requirements(path: str):\n    return [l.strip() for l in open(path)]\n\n\nsetup(\n    name=\"llama3\",\n    version=\"0.0.1\",\n    packages=find_packages(),\n    install_requires=get_requirements(\"requirements.txt\"),\n)\n"
        }
      ]
    }
  ]
}