{
  "metadata": {
    "timestamp": 1736561061437,
    "page": 847,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "django-crispy-forms/django-crispy-forms",
      "stars": 5050,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2822265625,
          "content": "# http://editorconfig.org\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{html,py,rst}]\nindent_style = space\nindent_size = 4\n\n[*.{html,rst}]\ntrim_trailing_whitespace = false\n\n[Makefile]\nindent_style = tab\ninsert_final_newline = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3681640625,
          "content": "setuptools_git-0.3.4-py2.6.egg\n#buildout's specific\n.installed.cfg\neggs/*\nbin/*\nbuild/*\ndist/*\ndevelop-eggs/*\nparts/*\ndownloads/*\n\n#egg's specific\n*.egg-info\n\n#defaults\n*.pyc\n*.pyo\n__pycache__\n\n#temp file\ntempfile\n*.swp\n\n# testing\n.tox/\n\n# coverage\n.coverage\nhtmlcov\n_build\n\n# OSX\n*.DS_Store\n\n# editors\n.project\n.pydevproject\n.settings/\n/.pytest_cache\n.vscode\n/.python-version\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.333984375,
          "content": "repos:\n  - repo: https://github.com/psf/black\n    rev: 24.10.0\n    hooks:\n      - id: black\n  -   repo: https://github.com/pycqa/isort\n      rev: 5.13.2\n      hooks:\n      - id: isort\n  -   repo: https://github.com/pycqa/flake8\n      rev: 7.1.1\n      hooks:\n      - id: flake8\n        additional_dependencies:\n        - flake8-comprehensions\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.400390625,
          "content": "# https://docs.readthedocs.io/en/stable/config-file/v2.html\n\nversion: 2\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Build all formats\nformats: all\n\npython:\n  install:\n    - method: pip\n      path: .\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 37.4677734375,
          "content": "# CHANGELOG for django-crispy-forms\n\n## Next Release\n* Added support for Python 3.13.\n\n## 2.3 (2024-07-19)\n* Fixed a bug in `AccordionGroup` rendering then it gets an unexpected css class `active`.\n\n## 2.2 (2024-06-15)\n* Added support for Django 5.1.\n* Allowed pass through of context when rendering a ``Fieldset`` layout object.\n\n## 2.1 (2023-10-15)\n* Added support for Django 5.0.\n* Dropped support for Django 3.2, 4.0 and 4.1.\n* Added support for Python 3.12.\n* Dropped support for Python 3.7.\n\nSee the [2.1 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/20?closed=1) for the full change\nlist.\n\n## 2.0 (2023-02-13)\nRelease of django-crispy-forms 2.0. No changes introduced since 2.0a1.\n\n## 2.0a1 (2023-01-18)\n\n# Major Changes and Migration Guide\n* Removed all Bootstrap template packs. These template packs are now available as standalone packages.\n  To upgrade, install the required template pack and add it to your\n  [`INSTALLED_APPS`](https://docs.djangoproject.com/en/stable/ref/settings/#std-setting-INSTALLED_APPS) setting.\n\n    * Boostrap 2: [PyPI](https://pypi.org/project/crispy-forms-bootstrap2/) -- [GitHub](https://github.com/django-crispy-forms/crispy-forms-bootstrap2)\n    * Boostrap 3: [PyPI](https://pypi.org/project/crispy-bootstrap3/) -- [GitHub](https://github.com/django-crispy-forms/crispy-bootstrap3)\n    * Boostrap 4: [PyPI](https://pypi.org/project/crispy-bootstrap4/) -- [GitHub](https://github.com/django-crispy-forms/crispy-bootstrap4)\n\n  Also, support for Bootstrap 5 is provided by a 3rd party package under the `django-crispy-forms` organisation at\n  [crispy-bootstrap5](https://github.com/django-crispy-forms/crispy-bootstrap5).\n\n* Removed uni-form template pack. Uni-Form specific classes previously added to every template pack e.g. `textInput` are now removed.\n  If you require these classes, the previous behaviour can be restored by adding the following to [CRISPY_CLASS_CONVERTERS](https://django-crispy-forms.readthedocs.io/en/latest/crispy_tag_forms.html#change-crispy-forms-input-default-classes) in your settings file.\n\n  ```\n    converters = {\n      \"textinput\": \"textinput textInput\",\n      \"fileinput\": \"fileinput fileUpload\",\n      \"passwordinput\": \"textinput textInput\",\n  }\n  ```\n\n* The `uni-form` template pack allowed for rendering of templates using a `default` or `inline` layout. As the `uni-form` template\n  pack has been removed support for this has also been removed. This has resulted in the following **BREAKING** changes.\n\n    * The `form_style` attribute of `FormHelper` is removed.\n    * The `form_style` positional argument to `render_field()` is removed.\n    * The `form_style` positional argument to the `render()` method of all `LayoutObjects` is removed.\n\n  Audit for use of `render()` and `render_field()` due to the removal of the `form_style` positional argument is therefore\n  required. For example:\n\n  ```\n  # django-crispy-forms 1.x\n  html = my_layout_object.render(form, form_style, context)\n  # django-crispy-forms 2.x\n  html = my_layout_object.render(form, context)\n  ```\n\n* Widespread use of the `|safe` in crispy-form templates is removed. Audit for html input in your forms\n  especially for Field and Prepended/Appended text. To retain the previous behaviour mark text as safe\n  in your project code using\n  [`mark_safe()`](https://docs.djangoproject.com/en/4.0/ref/utils/#django.utils.safestring.mark_safe). Refs #296.\n\n# Other Changes\n* Dropped support for Django 2.2.\n* Added support for Django 4.1 and 4.2.\n* Added support for Python 3.11.\n* The `flat_attrs()` method of `FormActions` is removed. Attributes provided by `**kwargs` are now passed via the `flat_attrs` function during `__init__()` instead of with each call of `render()`\n* The `html5_required` attribute of `FormHelper` is removed. In all supported versions of Django the `required` attribute is provided by the core `forms` module.\n* The `FormActions` layout object learnt a `css_id` kwarg to add an `id` to the rendered `<div>`\n* The default values of \"form_error_title\" and \"formset_error_title\" of FormHelper changed from `None` to `\"\"`.\n* An attribute error is now raised if the `CRISPY_TEMPLATE_PACK` setting is not provided.\n* The `get_layout_objects()` and `get_field_names()` functions of `LayoutObject` now return a list of `Pointers` rather than a list\n  of lists. Pointers are a `dataclass` containing a list of `posistions` and the `name` of object/field.\n\n## 1.14.0 (2022-01-22)\n* Added support for Python 3.10\n* Dropped support for Django 3.1\n* Dropped support for Python 3.6\n* Added bootstrap modal layout object (#1204)\n* Added `input_size` argument to `FieldWithButtons` to allow customisation of the size of the input in the Bootstrap 4\n  template pack. (#1159)\n\nSee the [1.14.0 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/18?closed=1) for the full change list.\n\n## 1.13.0 (2021-09-25)\n* Added support for Django 4.0\n\n## 1.12.0 (2021-06-11)\n* Fixed rendering of grouped checkboxes and radio inputs in the Bootstrap 4 template pack. (#1155)\n* Introduced new `input_size` argument to `AppendedText`, `PrependedText` and `PrependedAppendedText`. This allows\n  the size of these grouped inputs to be changed in the Bootstrap 4 template pack. (#1114)\n* Confirmed support for Django 3.2\n* Dropped support for Python 3.5\n* Dropped support for Django 3.0\n\nSee the [1.12.0 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/16?closed=1) for the full change list.\n\n## 1.11.2 (2021-03-16)\n* Added HTML parsing tools to help testing of template packs (#1128)\n* Fixed rendering of all widget attributes for file fields (#1130)\n\nSee the [1.11.2 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/15?closed=1) for the full change list.\n\n## 1.11.1 (2021-02-21)\n* Added `custom-select` for select widgets within prepended and appended fields (#1116)\n\nSee the [1.11.1 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/14?closed=1) for the full change list.\n\n## 1.11.0 (2021-01-30)\n* Implemeneted `custom-select` for Select widgets in the Bootstrap4 Template Pack (#1091)\n* Fixed `data-parent` in AccodrianGroup (#1091)\n* Documentation improvements\n\nSee the [1.11.0 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/13?closed=1) for the full change list\n\n## 1.10.0 (2020-11-18)\n* Fixed test causing `SystemCheckError` in some cases. (#1075)\n* Radio and Checkbox now respect the field's `disabled` attribute when using the Bootstrap4 template pack. (#1057)\n* A number of documentation improvements.\n\nSee the [1.10.0 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/12?closed=1) for the full change list\n\n## 1.9.2 (2020-07-11)\n* Fixed FileField UI bug\n\nSee the [1.9.2 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/11?closed=1) for the full change list.\n\n## 1.9.1 (2020-05-16)\n* Added Bootstrap 4 styling for clearable file widget.\n* Fixed FileField UI bug.\n* Project now uses GitHub actions for testing.\n\nSee the [1.9.1 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/10) for the full change list.\n\n## 1.9.0 (2020-02-28)\n* Removed support for Python 2.\n* Removed support for Django versions prior to 2.2.\n* CSS for Column layout object in Bootstrap 4 template pack changed to 'col-md'. Default is now over ridden when another 'col' class is added to css_class.\n\nSee the [1.9.0 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/9) for the full change list.\n\n## 1.8.1 (2019-11-22)\n\n* Fixing FileField UI bug introduced with 1.8.0\n* Remove is-valid css class for radio (bug introduced with 1.8.0)\n* Various alignment and margin fixes for Bootstrap 4 template pack\n* Documentation : using read-the-docs template, documenting how to run test suite, documenting use_custom_control help attributes\n\nSee the [1.8.1 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/8?closed=1) for the full change list.\n\n## 1.8.0 (2019-10-17)\n\n* Updated compatibility for Django 1.11, 2.1, 2.2 and 3.0 in line with Django's\n  supported versions policy.\n* Numerous improvements to the Bootstrap 4 template pack, which may now be\n  considered mature.\n\n  Here are some changes that might affect custom templating you already have in\n  place when using Bootstrap 4 :\n\n    * Using [Custom Forms for radio and checkbox](https://www.w3schools.com/bootstrap4/bootstrap_forms_custom.asp).\n      You may disable this by setting  `FormHelper.use_custom_control = False`.\n    * Using [Bootstrap 4 `\"form-row\"` class in place of `\"row\"`](https://getbootstrap.com/docs/4.3/components/forms/#form-row).\n    * Fixing [layout hierarchy between input and its label for checkbox and radio](https://getbootstrap.com/docs/4.0/components/forms/#checkboxes-and-radios).\n\n  <small>Links are to the relevant Bootstap 4 docs.</small>\n\nSee the [1.8.0 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/7?closed=1) for the full change list.\n\nMany thanks to all involved in bringing together a great release!\n\n## 1.7.2 (2018-03-09)\n\n* Bugfixes following v1.7.1\n\nSee [1.7.1 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/6?closed=1)\nfor full issue list.\n\n## 1.7.1 (2018-03-05)\n\n* Bootstrap 4 template pack.\n\nSee [1.7.1 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/5?closed=1)\nfor full issue list.\n\n## 1.7.0 (2017-10-17)\n\n* Fixes compatibility with Django 2.0\n* Various other fixes.\n\nSee [1.7 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/4?closed=1)\nfor full issue list.\n\n## 1.6.1 (2016-10-17)\n\n  * Updates compatibility for Django 1.10\n  * A number of small Bootstrap 4 fixes.\n\nSee [1.6.1 Milestone](https://github.com/django-crispy-forms/django-crispy-forms/milestone/3?closed=1)\nfor full issue list.\n\n## 1.6.0 (2016/1/7)\n\n  * Fixed compatibility with Django 1.9\n  * Dropped support for Django 1.7\n  * Added Bootstrap 4 template pack\n  * Other small fixes.\n\nSee [1.6.0 Milestone](https://github.com/maraujop/django-crispy-forms/issues?q=milestone%3A1.6.0+is%3Aclosed) for full issue list.\n\n## 1.5.2 (2015/9/10)\n\n  * Fix: KeyError: u'wrapper_class' when clearing template context. #511, #512\n  * Fix: Alignment of stacked checkboxes and radio buttons in Bootstrap 3 #358\n\nSee [1.5.2 Milestone](https://github.com/maraujop/django-crispy-forms/issues?utf8=✓&q=milestone%3A1.5.2+) for full issue list.\n\n\n## 1.5.1 (2015/8/21)\n\nSpecial thanks in this release to Dmitry Dygalo @Stranger6667 for a marathon effort updating the\ntest suite and code base.\n\n  * Switched to py.test. Modernised test suite. Enabled tox, code coverage and Travis for all\n    supported Python/Django versions. [See list of Merged \"Testing/Process\" PRs here](https://github.com/maraujop/django-crispy-forms/pulls?q=is%3Apr+is%3Amerged+milestone%3A1.5.1+label%3ATesting%2FProcess)\n  * Added compatibility with Python 3.2\n  * Fix: Allow LayoutObject & BaseInputs to accept custom template #493\n\n\n## 1.5.0 (2015/8/16)\n\nSpecial thanks in this release for all the **<a href=\"http://flattr.com/thing/512037/django-crispy-forms\">supporters and donators</a>**.\n\n * Fixed compatibility with: Python 3, Django 1.7, Django 1.8 and Django 1.4.16. Merged PR #417, but thanks to PRs #369, #368 and #310. Closes also #383.\n * Updated test suite for compatibility with all supported Django versions 1.4, 1.7, 1.8 and run CI against these and Django `master`. See #451, #455.\n * Bug fix for specifying `template_pack` in `{% crispy %}` tag, `bootstrap3` couldn't be set that way.\n * New doc section for creating custom template packs.\n * Fixed Bootstrap3 checkbox alignment issues with label texts, see #275.\n * First `AccordionGroup` can now be set to `active=False`, see #246.\n * Fixed Bootstrap3 checkbox alignment issues for all device sizes, see #225 and #267.\n * All forms are now rendered with {{ form.media }}, this makes forms containing widgets with `Media` meta class work, see #263.\n * Adjusted `{% specialspaceless %}` to avoid breaking intended spaces and be less aggressive, see #250.\n * Fixed inputs rendering for bootstrap3 and redo `FormActions` layout object bootstrap3 template for correct alignment, see #279.\n * `MultiField` now obeys `form_show_labels`, see #278.\n * Added `wrapper_class` to `bootstrap.InlineRadios`, see #272.\n * Render label for checkboxes within `table_inline_formset.html`, see #262.\n * Removed deprecated layout object `AppendedPrependedText`, replaced by `PrependedAppendedText`.\n * Fixed `PrependedAppendedText` when rendering a select widget, in bootstrap and bootstrap3 template packs, see #258.\n * Added support to `{% crispy_addon %}` tag for `form_show_labels`, see #256.\n * Major cleanup and refactor of the template pack system thanks to @tepez, see #217 and #237:\n    - Template packs are now self contained/independent, removing dangerous cross references. If you have a custom template pack this can cause backwards incompatibility, but it will pay in the future to adjust to this changes.\n    - `MultiField` cannot be used with `bootstrap` or `bootstrap3` template packs.\n    - Added `template_pack` `FormHelper` attribute, so that template packs can be specified at form helper level. This changes layout objects `render` behavior.\n * Default template pack is now `bootstrap3`.\n * Make `CRISPY_TEMPLATE_PACK` setting optional, see #237 and #244.\n\n## 1.4.0 (2013/9/1)\n\nSpecial thanks in this release to **James Friedman <a href=\"https://github.com/jamesmfriedman\">@jamesmfriedman</a>**, for his amazing support in PR #213, adding initial Bootstrap 3 support.\n\n * Bootstrap 3 inline forms support and docs for inline forms with Bootstrap 3, see #233.\n * `update_attributes` can now work with a field name, see docs.\n * Adjusted unicode checkings for Python 3, see #231.\n * Adjusted how bootstrap `Tab` layout object attributes are applied to make sense, see #228.\n * Major refactor of testing suite architecture, breaking huge `tests.py` file into several and also splitting tests for different template packs into different tests cases, runners for template packs updated.\n * Added support for horizontal forms in bootstrap3, see #209.\n * Fixed spaces missing when rendering several submit inputs continued, see #211.\n * Fixed checkboxes and radios for Bootstrap3, adjusted multiple inline radios and checkboxes, see #225.\n * Update accordion markup for bootstrap3 compatibility, see #229.\n * Moved `UneditableField` to bootstrap module, place where it should live, no backwards compatible import left behind.\n * Added `bootstrap3` template pack thanks to James Friedman, see #213 and #209.\n * `RadioSelect` and `CheckboxSelectMultiple` widget values and texts were being localized, when they shouldn't bee, see #214.\n * If Django widget attrs where set for `RadioSelect` or `CheckboxSelectMultiple` they were not being rendered by crispy-forms, see #206.\n * `form_show_labels` wasn't working correctly with some layout objects, see #193.\n\n## 1.3.2 (2013/6/23)\n\n * Labels were not being rendered with `|crispy` filter, see #202.\n\n## 1.3.1 (2013/6/17)\n\n * Fix default value for `form_show_labels` in case FormHelper doesn't define it, see #199.\n * Added a backported version of `override_settings` for testing django 1.3.7 and adding it to Travis-ci matrix.\n\n## 1.3.0 (2013/6/16)\n\nSpecial thanks in this release to **Charlie Denton <a href=\"https://github.com/meshy\">@meshy</a>**, for his amazing support in PRs #189 and #190, long due.\n\n * Deprecated `Tab` and `TabHolder` imports from `layout.py` module, they now live in `bootstrap.py` module.\n * Removed Python 2.5 compatibility.\n * Added `disable_csrf` helper attribute, see docs.\n * Travis-ci support thanks to Charlie Denton, see #190.\n * Python 3 compatibility thanks to Charlie Denton, see #189 and #190.\n * Added a settings variable named `CRISPY_ALLOWED_TEMPLATE_PACKS` for adding easily support for new template packs, see #192.\n * Added `{% crispy_addon %}` tag, see #195.\n * Make `CRISPY_TEMPLATE_PACK` optional for tests\n * Make tests run the same exactly way with `runtests.py` and `manage.py test`, see #183.\n * Bug fix for `wrap_together` when using it with partial slices.\n * Fixes for `KeepContext` context manager, see #180.\n * Added `FormHelper.field_template` attribute, for easily override field template for a specific form/formset, see docs.\n * Added a template for rendering formsets inline within tables named `bootstrap/table_inline_formset.html`, that can be easily used in conjunction with `FormHelper.template`.\n * Added `FormHelper.template` attribute, that easily allows to override form/formset general structure template, see docs.\n * Added `form_show_labels` helper attribute.\n * Redoing filters to use `isinstance` instead of hacky internal name checking, this way subclasses of standard fields will work out of the box with crispy-forms, see #176.\n\n## 1.2.8 (2013/5/10)\n\n * Bug fix for `KeepContext` context manager, when crispy-forms used with Jingo/Jinja2 templates, see #179.\n * Some formset tests were breaking in some Django versions. Also added a `make test` for easily running project tests, see #178.\n\n## 1.2.7 (2013/5/6)\n\n * Bug fix for model formsets and inline formsets, when being rendered with a `FormHelper` with a layout set, where some hidden formset management fields would be missing, breaking saving to database.\n * Added `render_hidden_fields` attribute to `FormHelper`, see docs.\n * Added `render_hidden_fields` attribute to `FormHelper`, see docs.\n\n## 1.2.6 (2013/5/1)\n\n * Fixes to `Container` and `TabHolder`, affecting class variable helpers with layouts containing `TabHolder` or `AccordionGroup` objects, see #172.\n * Bug fix for `KeepContext` context manager, see #172.\n\n## 1.2.5 (2013/4/25)\n\n * Avoid raising Exceptions in `|as_crispy_field` filter when not in DEBUG mode.\n * Popping `css_id` to avoid having a css-id attribute, see #167.\n * Fixed a bug in dynamic layout API, when wrapping layout objects that had arguments passed after fields. Moving `LayoutSlice` to `layout_slice` module.\n * Fixed test failing when tests runned from manage.py test.\n * Fixed testing name conflict, see #130.\n\n## 1.2.4 (2013/4/13)\n\n * Added `wrapper_class` kwarg to `Field` layout object, see #163.\n * Added `Accordion` and `AccordionGroup` bootstrap layout objects, see #162.\n * Bug fix in `render_crispy_form` to avoid override existing context, see #153.\n * Use formset iterator instead of `forms` list attribute, see #152.\n * Don't display fieldset legend if empty, see #147 and #155.\n * Bug fix for pickling crispy forms by powderflask, see #107.\n * Switched from `django.form.utils.flatatt` to internal `flatatt` utils implementation, this allows adding data-attrs to `FormActions` and `StrictButton`.\n * `render_field` now uses a context manager to avoid side effects when layout objects update template context. This makes context mutability safe within layout objects.\n * Added `greedy` kwarg to `filter` dynamic API.\n * Fixing error logging on `|as_crispy_field` filter, see #135.\n * Implemented `__delitem__`, `__len__` and `__setitem__` in `LayoutObject` and `DynamicLayoutHandler`, this avoids pylint warnings, see #114.\n * Docs folder no longer included when installing crispy-forms, see #132.\n * Added `wrap_once`, `update_attributes`, `map` and `pre_map` to LayoutSlice.\n\n## 1.2.3 (2012/12/4)\n\n * Fixed imports to be relative to package, avoiding namespace collisions.\n * Removed circular dependency between `layout` and `bootstrap`, see #129.\n * Bug fix, adapted use of inspect module in `utils.py` to avoid breaking Python 2.5 compatibility.\n\n## 1.2.2 (2012-11-30)\n\n * Bug fix, reduction of white space in crispy-forms output could mess within tags, see #127, reverting part of this reduction.\n * Renamed `AppendedPrependedText` to `PrependedAppendedText`.\n * Moved `Tab` and `TabHolder` to `bootstrap.py`.\n\n## 1.2.1 (2012-11-28)\n\n * Bug fix `help_text_inline` set to True, see #117.\n * New fix for the space between buttons problems, see #62.\n * Reduced importantly whitespace in html generated by crispy-forms, forms are now more compact.\n * Added support for specifying a template pack per form, see #66 and #109.\n * Removed `clearfix` class from bootstrap templates, not necessary anymore, see #105.\n * Space cleanup in bootstrap templates, thanks to Si Feng, see #122.\n * Fixed `MultiField` to work with `form_show_errors` helper attribute.\n * Fixed a bug in `MultiField` that set error class when there were form errors, no matter if the fields with errors were contained within, see #120.\n * `FieldWithButtons` now supports `Field` layout object as its first parameter, for setting input attributes.\n * Bug fixes for `FieldWithButtons`, field label, `help_text` or error messages were not being rendered, see #121.\n * Fixed a bug that was making crispy-forms render extra fields with ModelForms that didn't have `Meta.fields` defined, thanks to Jean-Baptiste Juin for reporting it.\n * Fixed a bug that was breaking Django 1.2 compatibility when copying context variables, thanks to Alex Yakovlev for submitting a patch, see #108.\n * Fixed a bug for `AppendedText`, `PrependedText` and `AppendedPrependedText` layout objects, thanks to Bojan Mihelac, see #104.\n * Fixed a bug in appended and prepended text layout objects for respecting hidden fields, thanks to Bojan Mihelac, see #103.\n * Added two new bootstrap layout objects: `FieldWithButtons` and `StrictButton`.\n * Added checks and better error messages for dynamic API.\n * Fixed `get_layout_objects` recursive call for Python2.5 compatibility, thanks to Can Başçıl for reporting it.\n\n## 1.2.0 (2012-9-24)\n\n * Update prepended and appended templates to respect hidden fields, thanks to Bojan Mihelac, see #GH-103.\n * Added `InlineCheckboxes` to bootstrap layout objects, for rendering checkboxes inline.\n * `BaseInput` subclasses, like `Submit` can now have its value set to a context variable.\n * Rendering inputs added with `add_input` in bootstrap using the right templates, see #GH-95.\n * Improved formsets rendering docs thanks to Samuel Goldszmidt, see #GH-92.\n * Added `Tab` and `TabHolder` layout objects thanks to david-e, see #GH-91.\n * Fixed default bootstrap button default classes thanks to david-e, see #GH-90.\n * Fixed some flaws in new testing structure by Markus Hametner.\n * Added helper attribute `error_text_inline` thanks to Lee Semel for controlling how to render form errors, as a block or inline, see #GH-87.\n * Support `ModelMultipleChoiceField` on `checkboxselectmultiple`, see #GH-86.\n * Redoing testing structure a little bit, to run uni_form and bootstrap tests separately. They share most of the code base, but templates pack are separate and we need to care both have the same quality assurance.\n * `AppendedText`, `PrependedText` and `AppendedPrependedText` were not respecting `form_show_errors` helper attribute, see #GH-77.\n * Added a version string to the app under root __init__, see #GH-76.\n * Added `html5_required` helper attribute for rendering required fields using HTML5 required attribute within the input, see #GH-72. Thanks to Lloyd Philbrook.\n * Some docs typos and errors fixed, also a major upgrade to docs covering the new functionality.\n * Adding a `utils.render_crispy_form` function, that renders a form the crispy way in Python code. This might be useful with AJAX, testing or text generation/manipulation, see #GH-64.\n * Tiny cosmetic fix, that adds an space after a button, see #GH-62.\n * `MultiField` and `Fieldset` layout objects can now have any kind of attribute defined, thanks to Lloyd Philbrook, see #GH-71.\n * Making `Fieldset`, `MultiField` & `HTML` contents lazy translatable thanks to Rivo Laks, see #GH-69.\n * Fixing `radioselect` checked status when used for a FK in a ModelForm, see #GH-68.\n * Fixing `form.Meta` usage, using instance `fields` instead of static `Meta` definition, so that it works when updating forms on the go, see #GH-59.\n * Added a low level manipulation API for layout and layout objects. Added a `LayoutObject` base class that creates an interface. This allows to access nested fields easily and use list methods without know internals of the system.\n * Added a `|classes` filter that returns field's classes.\n * Now `FormHelper` can accept a form instance as an optional first argument, from which it can build a default layout.\n * Added an API for manipulating dynamic layouts and programmatic layout building.\n * Added `UneditableField` bootstrap layout object for uneditable fields.\n * Support for hiding fields using `Field('field_name', type=\"hidden\")`, see #GH-55.\n * Avoid template context pollution of variable `form` after using {% crispy %} tag, see #GH-54.\n * Added an `attrs` helper attribute, for more flexible form attributes, see #GH-48.\n * New `AppendedPrependedText` layout object thanks to Samuel Goldszmidt, see #GH-45.\n * Removal of some whitespace in crispy form's HTML generated, see #GH-42.\n * New `MultiWidgetField` layout object by Michal Kuffa, see #GH-39.\n\n## 1.1.4 (2012-5-24)\n\n * Multithread safety improvements for `BasicNode`.\n * Security fix: Thread safety fixes to `CrispyFieldNode` thanks to Paul Oswald. This avoids leaking information between requests in multithreaded WSGI servers.\n * Added css class `control-label` to `AppendedText` and `PrependedText` layout object's templates.\n * `{% crispy field %}` tag can now pass attrs to `MultiWidget` subclasses by Michal Kuffa. `attrs` are set for sub-widgets. Also `attrs` can now be an iterable for passing different attributes to different sub-widgets. For example,this way MultiWidget's widgets get css classes set correctly.\n * Turning underscores into hyphens for `Field` layout objects.\n * Fix for `ChoiceFields` using non-string choices with radio buttons thanks to Rudy Mutter. See #GH-46, #GH-43 and #GH-35.\n\n## 1.1.3 (2012-4-21)\n\n * `|crispy` and `|as_crispy_field` filters were not rendering errors. Thanks to @ximi for reporting it and submitting a patch. See issue #GH-28.\n * Fixing a test that was breaking when language was not English. Thanks to @gaftech, see #GH-30.\n * Fixing `radioselect.html` and `checkboxselectmultiple.html` templates. Thanks to Christopher Petrilli for submitting a patch for `radioselect`. See issue #GH-35.\n * HTML attributes can now be set in `BaseInput` subclasses like `Button` by @jamesmfriedman. See #GH-32.\n * Fix for dynamic crispy-forms with Meta classes by Jeroen Vloothuis. See #GH-37.\n * Labels now use `id_for_label` instead of `auto_id` to avoid ids breaking on multiwidgets. by Daniel Izquierdo. See #GH-38.\n * Adding a flatatt custom function in `utils.py` for flatting extra HTML attributes.\n * HTML attributes can now be set in `Div` layout object.\n * Adding tests for new functionality and bugs.\n\n## 1.1.2 (2012-2-29)\n\n * input name attribute is no longer slugified if only one word is provided, respecting caps.\n * Changes in bootstrap global error templates by David Bennett.\n * Added class `control-label` to labels, for horizontal layout thanks to bitrut.\n * Using `{{ field.html_name }}` instead of `{{ field.name }}` in field templates, so that they work with form prefixes (formwizard) by Patrick Toal.\n * Fixing error rendering in bootstrap AppendedText and PrependedText.\n * Applying `field.css_classes` in bootstrap `field.html` instead of widget classes.\n * Fixes for bootstrap simple checkbox input to be wrapped correctly.\n\n## 1.1.1 (2012-2-17)\n\n * Fixing a critical bug in bootstrap templates, that was breaking `{% load crispy_forms_tags %}`\n\n## 1.1.0\n\n * Fixing produced html by a checkbox field, closing label the right way and rendering checkbox in the right place.\n * Passing full context to field rendering, to be consistent and having access in `field.html` template to helper attributes.\n * Custom helper attributes can now be set and will be part of templates context, this way you can define custom specific behavior.\n * Adding @kennethlove bootstrap template pack into django-crispy-forms core.\n * Adding `CRISPY_TEMPLATE_PACK` setting variable to easily switch between different template packs. Default template pack is now bootstrap.\n * Upgrading bootstrap templates, fixing some bugs and redoing the hierarchy.\n * Upgrading tests for multiple template packs.\n * Renaming `UNIFORM_FAIL_SILENTLY` setting variable to `CRISPY_FAIL_SILENTLY`, upgrading migration instructions.\n * Redoing bootstrap `field.html` template to render `radioselect` and `checkboxselectmultiple` Django widgets a la bootstrap.\n * Adding a `render_unmentioned_fields` helper attribute, that renders all fields in a form, no matter what the layout is. Default is `False`.\n * Adding a `|css_class` filter that renders field classes in an elegant way.\n * Turning `|with_class` filter into `{% crispy_field %}` tag, so that parameters for rendering the field can be passed.\n * Adding a `help_text_inline` helper attribute, that controls whether to render help texts in bootstrap with \"help-inline\" or \"help-block\".\n * Adding a `flat_attrs` variable to the context passed to `field.html` to be able to do all kind of html attributes when rendering a field, using `Field` layout object.\n * Adding a `template` kwarg to `Field` layout object that allows to override template used for rendering a field.\n * Adding a `bootstrap.py` module that holds bootstrap specific layout objects, for higher bootstrap integration.\n * Adding a `AppendedText`, `PrependedText` and `FormActions` bootstrap layout objects. First two based in polyvalent `Field` layout object.\n\n## 1.0.0\n\n * Using `baseinput.html` template within `whole_uni_form.html`, to be DRY and consistent.\n * `BaseInput` subclasses like `Submit` can now have ids set, using `css_id`\n * Adding a simplified alternative syntax for `{% uni_form %}` tag. We can now do `{% uni_form form %}` for rendering a form using a helper, instead of `{% uni_form form form.helper %}`, if the `FormHelper` attribute attached to the form is named `helper`.\n * Improving `rendered_fields` checking performance.\n * Layouts are now rendered strictly. We don't render fields missed in the layout. If the form has a Meta class with `fields` or `exclude`, then we follow Django standards.\n * Added `Field` layout object. You can wrap name fields within and set all kind of attributes easily or override widget template.\n * Fixed #GH-111 we were not rendering all the classes in `|with_class` filter\n * Moving django-uni-form to django-crispy-forms. Renaming tags, filters and modules. Updating tests and so on. Adding migration instructions.\n * More work on simpler and easier docs.\n * Adding `form_show_errors` helper attribute, that controls whether to render or not `form.errors`\n * Improving template hierarchy for more template code reusability.\n\n# CHANGELOG for django-uni-form\n\n## 0.9.0\n\nYou can read on how to use new features included in this version at:\nhttp://tothinkornottothink.com/post/10398684502/django-uni-form-0-9-0-is-out-security-fix\n\n * Fixed a bug in `|with_class` filter so that it supports `show_hidden_initial`, see #GH-95 to not break.\n * Fixed a problem on Fieldset's legends internationalization. Thanks to Bojan Mihelac, see #GH-90.\n * Fixed XSS bug thanks to Charlie Denton, see #GH-98. Errors cannot be rendered safe, because field's input can be part of the error message, that would mean XSS.\n * Updating and improving docs, adding more use case examples.\n * Split `helpers.py` file into `helper.py`, `layout.py` and `utils.py`. Added a deprecation warning.\n * Improved testing coverage, specially for formsets and i18n.\n * Improved rendering performance of `{% uni_form %}` tag and `|as_uni_form` filter avoiding reloading templates every time, see #GH-81.\n * Added support for Django `Form.error_css_class` and `Form.required_css_class` custom CSS classes, see #GH-87.\n * Moved template code in Layout objects into separate files in `uni_form/layout` directory. Layout objects templates can now be easily overridden, see #GH-37.\n * `form_style` can now be used without having to set a helper Layout, see #GH-85.\n * `form_action` is not lowered anymore and `form_action` is set to \"\" by default instead of \".\" thanks to Jianbo Guo, see #GH-84.\n * `Multifield` field template `multifield.html` markup fixed, adding `help_text` support and removing `labelclass` from labels.\n * Fixed testing suite, when run not using `DjangoTestSuiteRunner` provided, thanks to Narsil #GH-82.\n * Removed test_project from the project.\n * Improved `MultiField` performance avoiding instantiating BoundFields twice.\n * Fixed a bug in `MultiField` that raised an exception when internal fields had errors, because of `self.css` not existing.\n * Added an extra optional parameter to `render_field` called `layout_object`, used for storing in it a list of bound fields.\n * Refactor all Layout objects to use templates and not having hardcoded HTML in the code, based on Jonas Obrist work. Resolves Issue #GH-37\n * Added a Layout object called `Div`. `Row` and `Column` both inherit from `Div`\n * `Layout` can now be a child of `Layout`, see issue #GH-76.\n\n## 0.8.0\n\nYou can read on how to use new features included in this version at:\nhttp://tothinkornottothink.com/post/7339670508/new-kung-fu-in-django-uni-form-0-8-0\n\n * Elevated Miguel Araujo to project lead!\n * Added a forloop simulator for formset forms rendering.\n * `ButtonHolder` Layout object added for holding `HTML` and buttons: `Submit`, `Reset`, `Button`.\n * Turned BaseInput inherited objects like: `Submit`, `Reset`, `Hidden` and `Button` into Layout objects.\n * Fixed a bug with `rendered_fields` when no fields where in the Layout.\n * `Fieldset` legends are now templates full context aware.\n * Based on @issackelly's and @johnthedebs's work a template called `betterform` has been added for supporting @carljm's form-utils BetterForms.\n * `FormHelper` method `get_attr` has been renamed to `get_attributes`\n * `uni_form_tags` has been split into two different files: `uni_form_tags` and `uni_form_filters`.\n * Removing i18n tags from the templates, as they are not necessary anymore.\n * Removed all the internationalized hardcoded text, in favor of template variables: `form_error_title` and `formset_error_title`, both can be set as helper's attributes.\n * `as_uni_errors` filter can now render formset's `non_form_errors` uni-form way.\n * Moved `{% uni_form_setup %}` tag to use STATIC_URL instead of MEDIA_URL\n * Added the possibility to specify a helper for formsets too.\n * Renamed media directory to static, to be compatible with Django 1.3 staticfiles.\n * Added a `form_style` FormHelper attribute for setting global style of a form: inline or default.\n * Turning `HTML` into a full context aware django template field, having access to the whole context of the template in which the form is rendered.\n * Turning `Layout` and `Fieldset` fields attributes into lists, so that they can be changed dynamically.\n * Changing formHints from paragraphs to divs, so ul or ol can be placed within.\n * Removing slugify filter from form ids, so they can be set as user's preferences.\n * Added CSS class 'asteriskField' for asterisks. Added CSS class 'fieldRequired' for required input labels.\n * `UNIFORM_FAIL_SILENTLY` variable setting has been added for making django-uni-form log errors and fail silently, based on Adam Cupiał's work.\n * Several bug fixes in `MultiField`.\n * Added unicode support for layout field names and improved error handling.\n * Refactored testing system and raised testing coverage.\n * Clean part of the code base and comments. All old CSRF code for supporting old versions of Django has been removed.\n * Refactored BasicNode for better readability and reducing lines of code.\n * Added formsets support based on Victor Nagy's (nagyv) and Antti Kaihola's (akahiola) work.\n * Bug fix in `{% uni_form %}` tag that didn't work without a helper and it was meant to be optional.\n * CSS classes can be set in Submit buttons.\n * Thanks to J. Javier Maestro (jjmaestro) now we can set ids and classes for `Fieldset`, `MultiField`, `Row` and `Column`.\n * Thanks to Richard Marko (sorki) changed CSS class of PasswordInput widget.\n * Removing `Toggle` class as it wasn't being used anywhere.\n * Moved `BaseInput` to helpers and removed `util.py` file.\n * Removed `{% uni_form_jquery %}` tag\n * Removed `namify` function from tags, as It wasn't being used anywhere.\n\n * Improved internal documentation\n * form methods generated by FormHelper are in lowercase (http://github.com/pydanny/django-uni-form/issues#issue/20)\n * Thanks to Nagy Viktor added form_tag attribute to FormHelper. Now you can use the uni_form tag without the leading and trailing form tags.\n * Thanks for Alison Rowland for giving django-uni-form sphinx docs\n * Incorporated uni-form 1.4 by Dragan Babic\n * Provide better adherence to uni-form specification of error messages\n * mirumee provided some great work for making FormHelper more subclassable.\n * django-uni-form 0.8 and higher lays out the HTML for the uni_form tag differently. The errorMsg div is now outside the fieldset as it should be.\n * Thanks to Casper S. Jensen django-uni-form now supports 1.2 style csrf_token.\n * csrf_token does not break earlier versions of Django. This will change when no version of django does not support csrf_token.\n * Thanks to j0hnsmith changed {{ error }} to {{ error|safe }} so that html (eg links) can be added to error messages.\n * Thanks to j0hnsmith changed {{ field.label }} to {{ field.label|safe }} so that html (eg  links) can be added to field labels\n * Kudos to Stepan Rakhimov fixed an admin datetime issue.\n * Thanks to patrys (Patryk Zawadzki) FormHelper class is now easily subclass-able.\n * Sorki (Richard Marko) made it so things work better in direct_to_template.\n\n## 0.7.0\n\n * Removed a <hr /> from the layout module.\n * Changed templatetags/uni_form.py to templatetags/uni_form_tags.py. Yes, this breaks backwards compatibility but fixes a namespace problems in Django with naming a templatetag library after the parent application.\n * Changed form_action attribute to accept not just named URLs but also any old URL.\n * Added in uni_form_setup tag.\n * Added tests\n * Added several new contributors including Dragan Babic\n * Added Danish language translation\n"
        },
        {
          "name": "CONTRIBUTORS.txt",
          "type": "blob",
          "size": 2.6201171875,
          "content": "============\nContributors\n============\n\ndjango-crispy-forms Project Maintainers\n=======================================\n\n* Miguel Araujo <miguel.araujo.perez@gmail.com>\n* Carlton Gibson <carlton.gibson@noumenal.es>\n\ndjango-uni-form Project Founder\n===============================\n\n* Daniel Greenfeld <pydanny@gmail.com>\n\nContributors\n============\n\n* Alison Rowland <arowla>\n* Bojan Mihelac <bmihelac>\n* bjunix\n* Casper S. Jensen <semadk>\n* Chris Adams <acdha>\n* Eddy Mulyono <eddymul>\n* j0hnsmith\n* James Pic <jamespic.com>\n* James Tauber <jtauber>\n* Karl Bowden <agentk>\n* Marcin Grzybowski <marcin.grzybowski@gildia.info>\n* Michael Lind Mortensen <illio>\n* mirumee\n* mvaerle\n* Nagy Viktor <nagyv>\n* Patrick Lauber <digi604>\n* Patryk Zawadzki <patrys>\n* Skylar Saveland <skyl>\n* Stepan Rakhimov\n* John Maxwell <astrofinch>\n* Richard Marko <sorki>\n* Victor Nagy <nagyv>\n* Antti Kaihola <akaihola>\n* J. Javier Maestro <jjmaestro>\n* Issac Kelly <issackelly>\n* John Debs <johnthedebs>\n* Adam Cupiał <adamcupial>\n* Nicolas Patry <narsil>\n* Jonas Obrist <ojii>\n* Charlie Denton <meshy>\n* Jason Culverhouse <jasonculverhouse>\n* James Turnbull <hturnbull>\n* Patrick Toal <ptoal>\n* David Bennett <dbinit>\n* bitrut <bitrut>\n* ximi\n* Christopher Petrilli <petrilli>\n* James Friedman <jamesmfriedman>\n* Jeroen Vloothuis <jeroenvloothuis>\n* Daniel Izquierdo <izquierdo>\n* gaftech\n* Michal Kuffa <beezz>\n* Paul Oswald <poswald>\n* Rudy Mutter <rmutter>\n* Samuel Goldszmidt <ouhouhsami>\n* Andrei Antoukh <niwibe>\n* <clairetheyers>\n* Rivo Laks <rivol>\n* Lloyd Philbrook <phoolish>\n* Piet Delport <pjdelport>\n* <lmoppert>\n* Markus Hametner <fin>\n* Thomas Grainger <graingert>\n* Lee Semel <lsemel>\n* <david-e>\n* Alex Yakovlev <libraM>\n* Si Feng <devfeng>\n* Igor Katson <ikatson>\n* Ben Delevingne <rockingskier>\n* <powderflask>\n* Evan Borgstrom <borgstrom>\n* Daniel Shapiro <danxshap>\n* <SpazioDati>\n* Stefan \"hr\" Berder (白峰) <hrbonz>\n* Suleyman Melikoglu <laplacesdemon>\n* Vladislav Mitov <VMitov>\n* Nemesis Fixx <mcnemesis>\n* Chris Vigelius <chrisv2>\n* David Cramer <dcramer>\n* Stas Rudakou <nott>\n* Tom Yam <tepez>\n* Svyatoslav Bulbakha <ssbb>\n* Andres Vargas <zodman>\n* Gabe Jackson <gabejackson>\n* Camilo Nova <camilonova>\n* <mrkre>\n* Daniel Mascarenhas <danielmt>\n* Paras Kuhad <pkuhad>\n* Kevin Trad <hekevintran>\n* Steven Klass <rh0dium>\n* David Fischer <davidfischer-ch>\n* Stefan Tjarks <stj>\n* Jan Dittberner <jandd>\n* Michael Nielsen <K0den>\n* Stephen Mitchell <scuml>\n* <pySilver>\n* Christopher Adams <adamsc64>\n* John Comeau <jcomeauictx>\n* Yoong Kang Lim <yoongkang>\n* Dmitry Dygalo <Stranger6667>\n* Lee Skillen <lskillen>\n* Bryan Brancotte <bryan-brancotte>\n* David Smith <smithdc1>\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0703125,
          "content": "Copyright (c) 2009-2021 Miguel Araujo, Daniel Feldroy and contributors.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.232421875,
          "content": "include MANIFEST.in\ninclude README.rst\ninclude *.md\ninclude *.txt\ninclude *.yaml\ninclude Makefile\ninclude tox.ini\ninclude .editorconfig\n\ngraft crispy_forms\ngraft docs\ngraft tests\ngraft requirements\n\nprune docs/_build\nglobal-exclude *.pyc\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.1748046875,
          "content": ".PHONY: develop test\n\ndevelop:\n\tpip install -q -r requirements.txt\n\tpip install -q -e .\n\ntest: develop\n\tDJANGO_SETTINGS_MODULE=tests.test_settings py.test tests --cov=crispy_forms"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 3.53515625,
          "content": "===================\ndjango-crispy-forms\n===================\n\n.. image:: https://github.com/django-crispy-forms/django-crispy-forms/actions/workflows/main.yml/badge.svg\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\n.. image:: http://codecov.io/github/django-crispy-forms/django-crispy-forms/coverage.svg?branch=main\n   :target: http://codecov.io/github/django-crispy-forms/django-crispy-forms?branch=main\n\nThe best way to have Django_ DRY forms. Build programmatic reusable layouts out of components, having full control of the rendered HTML without writing HTML in templates. All this without breaking the standard way of doing things in Django, so it plays nice with any other form application.\n\n`django-crispy-forms` supports Django 4.2+ with Python 3.8+.\n\nLooking for Bootstrap 5 support? See the `crispy-bootstrap5 package`_.\n\n.. _`crispy-bootstrap5 package`: https://github.com/django-crispy-forms/crispy-bootstrap5\n\nThe application mainly provides:\n\n* A filter named ``|crispy`` that will render elegant div based forms. Think of it as the built-in methods: ``as_table``, ``as_ul`` and ``as_p``. You cannot tune up the output, but it is easy to start using it.\n* A tag named ``{% crispy %}`` that will render a form based on your configuration and specific layout setup. This gives you amazing power without much hassle, helping you save tons of time.\n\nDjango-crispy-forms supports several frontend frameworks, such as Twitter `Bootstrap`_ (versions 2, 3, and 4), `tailwind`_, `Bulma`_ and Foundation. You can also easily adapt your custom company's one, creating your own, `see the docs`_ for more information. You can easily switch among them using ``CRISPY_TEMPLATE_PACK`` setting variable.\n\n.. _`tailwind`: https://github.com/django-crispy-forms/crispy-tailwind\n.. _`Bootstrap`: https://getbootstrap.com\n.. _`Bulma`: https://github.com/ckrybus/crispy-bulma\n.. _`see the docs`: https://django-crispy-forms.readthedocs.io\n\nAuthors\n=======\n\ndjango-crispy-forms is the new django-uni-form. django-uni-form was an application created by `Daniel Greenfeld`_ that I led since version 0.8.0. The name change tries to better explain the purpose of the application, which changed in a significant way since its birth.\n\nIf you are upgrading from django-uni-form, we have `instructions`_ for helping you.\n\n* Lead developer: `Miguel Araujo`_\n\n.. _`Daniel Greenfeld`: https://github.com/pydanny\n.. _`Miguel Araujo`: https://github.com/maraujop\n.. _`instructions`: https://django-crispy-forms.readthedocs.io/en/latest/install.html#moving-from-django-uni-form-to-django-crispy-forms\n\nExample\n=======\n\nThis is a teaser of what you can do with latest django-crispy-forms. `Find here the gist`_ for generating this form:\n\n.. image:: http://i.imgur.com/LSREg.png\n\n.. _`Find here the gist`: https://gist.github.com/1838193\n\nDocumentation\n=============\n\nFor extensive documentation see the ``docs`` folder or `read it on readthedocs`_\n\n.. _`read it on readthedocs`: https://django-crispy-forms.readthedocs.io/en/latest/index.html\n\nSpecial thanks\n==============\n\n* To Daniel Feldroy (`@pydanny`_) for his support, time and the opportunity given to me to do this.\n* The name of the project was suggested by the fantastic Audrey Feldroy (`@audreyfeldroy`_)\n* To Kenneth Love (`@kennethlove`_) for creating django-uni-form-contrib from which bootstrap template pack was started.\n\n.. _`@audreyfeldroy`: https://github.com/audreyfeldroy\n.. _`@pydanny`: https://github.com/pydanny\n.. _`@kennethlove`: https://github.com/kennethlove\n\n\n.. _Django: http://djangoproject.com\n"
        },
        {
          "name": "crispy_forms",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.7705078125,
          "content": "[build-system]\nrequires = [\"setuptools>=61.0\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"django-crispy-forms\"\nrequires-python = \">=3.8\"\ndescription = \"Best way to have Django DRY forms\"\nclassifiers=[\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Web Environment\",\n    \"Framework :: Django\",\n    \"Framework :: Django :: 4.2\",\n    \"Framework :: Django :: 5.0\",\n    \"Framework :: Django :: 5.1\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: JavaScript\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Topic :: Internet :: WWW/HTTP\",\n    \"Topic :: Internet :: WWW/HTTP :: Dynamic Content\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n]\nlicense = {text = \"MIT\"}\ndependencies = [\"django>=4.2\"]\nauthors = [{name = \"Miguel Araujo\", email = \"miguel.araujo.perez@gmail.com\"}]\ndynamic = ['version']\nreadme = \"README.rst\"\nkeywords = [\"forms\", \"django\", \"crispy\", \"DRY\"]\n\n[project.urls]\n\"Homepage\" = \"https://github.com/django-crispy-forms/django-crispy-forms\"\n\"Issues\" = \"https://github.com/django-crispy-forms/django-crispy-forms/issues\"\n\"Changelog\" = \"https://github.com/django-crispy-forms/django-crispy-forms/releases\"\n\n[tool.setuptools.dynamic]\nversion = {attr = \"crispy_forms.__version__\"}\n\n[tool.black]\nline-length = 119\ntarget-version = ['py38']\n\n[tool.isort]\nprofile = \"black\"\nline_length = 119\n\n[tool.coverage.run]\nbranch = true\n\n[tool.pytest.ini_options]\nDJANGO_SETTINGS_MODULE= \"tests.test_settings\"\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0751953125,
          "content": "-r requirements/dev.txt\n-r requirements/lint.txt\n-r requirements/testing.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.037109375,
          "content": "[metadata]\nlicense_file = LICENSE.txt\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.8359375,
          "content": "[tox]\nenvlist =\n    {py38,py39,py310,py311}-django{42},\n    {py310,py311,py312}-django{50,51,-latest},\n    {py313}-django{51,-latest},\n    lint\n\n[testenv]\ndeps =\n    django42: django>=4.2a,<5.0\n    django50: django>=5.0a,<5.1\n    django51: django>=5.1a,<5.2\n    django-latest: https://github.com/django/django/archive/main.tar.gz\n    -rrequirements/testing.txt\nallowlist_externals = make\ncommands = python -W error::DeprecationWarning -W error::PendingDeprecationWarning -m pytest {posargs} --cov=crispy_forms\nignore_outcome =\n    django-latest: True\nsetenv =\n    PYTHONDONTWRITEBYTECODE=1\n\n[testenv:lint]\nskip_install = true\ncommands =\n    black . --check\n    isort . --check --dif\n    flake8 crispy_forms tests\ndeps =\n    -rrequirements/lint.txt\n\n[flake8]\nexclude =\n    # The conf file is auto generated, ignore it\n    docs/conf.py\nmax-line-length = 119\n"
        }
      ]
    }
  ]
}