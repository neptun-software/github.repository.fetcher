{
  "metadata": {
    "timestamp": 1736560851919,
    "page": 555,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "django/channels",
      "stars": 6143,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.1484375,
          "content": "[run]\nbranch = True\nsource = channels\nomit = tests/*\n\n[report]\nshow_missing = True\nskip_covered = True\nomit = tests/*\n\n[html]\ndirectory = coverage_html\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2158203125,
          "content": "*.egg-info\ndist/\nbuild/\ndocs/_build\n__pycache__/\n.cache\n*.sqlite3\n.tox/\n*.swp\n*.pyc\n.coverage*\n.pytest_cache\nTODO\nnode_modules\n\n# Pipenv\nPipfile\nPipfile.lock\n\n# IDE and Tooling files\n.idea/*\n*~\n.vscode\n\n# macOS\n.DS_Store\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 1.0703125,
          "content": "# Read the Docs configuration file for Sphinx projects\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the OS, Python version and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n    # You can also specify other tool versions:\n    # nodejs: \"20\"\n    # rust: \"1.70\"\n    # golang: \"1.20\"\n\npython:\n  install:\n    - requirements: docs/requirements.txt\n\n# Build documentation in the \"docs/\" directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n  # You can configure Sphinx to use a different builder, for instance use the dirhtml builder for simpler URLs\n  # builder: \"dirhtml\"\n  # Fail on all warnings to avoid broken references\n  # fail_on_warning: true\n\n# Optionally build your docs in additional formats such as PDF and ePub\n# formats:\n#   - pdf\n#   - epub\n\n# Optional but recommended, declare the Python requirements required\n# to build your documentation\n# See https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\n# python:\n#   install:\n#     - requirements: docs/requirements.txt\n"
        },
        {
          "name": "CHANGELOG.txt",
          "type": "blob",
          "size": 17.8623046875,
          "content": "Full release notes, with more details and upgrade information, are available at:\nhttps://channels.readthedocs.io/en/latest/releases\n\n4.2.0 (2024-11-15)\n------------------\n\nChannels 4.2 introduces a couple of major but backwards-compatible\nchanges, including most notably enhanced async suppport and fixing\na long-standing bug where tests would try and close db connections\nand erroneously fail.\n\nThere are a number of other small bugfixes. Please ensure to review the\n`Version 4.2.0 release notes\n<https://channels.readthedocs.io/en/latest/releases/4.2.0.html>`_ for full\ndetails.\n\n4.1.0 (2024-04-03)\n------------------\n\nChannels 4.1 is maintenance release in the 4.x series.\n\nThe main change is an update in the required Python and Django version.\nPython 3.8, and Django 4.2 are now the minimum required versions.\n\nThere are a number of other small bugfixes. Please ensure to review the\n`Version 4.1.0 release notes\n<https://channels.readthedocs.io/en/latest/releases/4.1.0.html>`_ for full\ndetails.\n\n4.0.0 (2022-10-15)\n------------------\n\nChannels 4 is the next major version of the Channels package. Together with the\nmatching Daphne v4 and channels-redis v4 releases, it updates dependencies,\nfixes issues, and removes outdated code. It so provides the foundation for\nChannels development going forward.\n\nIn most cases, you can update now by updating ``channels``, ``daphne``, and\n``channels-redis`` as appropriate, with ``pip``, and by adding ``daphne`` at\nthe top of your ``INSTALLED_APPS`` setting.\n\nFirst ``pip``::\n\n    pip install -U 'channels[daphne]' channels-redis\n\nThen in your Django settings file::\n\n    INSTALLED_APPS = [\n        \"daphne\",\n        ...\n    ]\n\nAgain, this is a major version change. Amongst other changes, large amounts of\nthe Django-wrapping code deprecated in Channels v3 has now been removed, in\nfavour of Django's own ASGI handling, and the ``runserver`` command has been\nmoved into the Daphne package.\n\nPlease ensure to review the `Version 4.0.0 release notes\n<https://channels.readthedocs.io/en/latest/releases/4.0.0.html>`_ for full\ndetails.\n\n3.0.5 (2022-06-24)\n------------------\n\nChannels 3.0.5 is a bugfix release in the 3.0 series.\n\nPlease see the `Version 3.0.5 release notes\n<https://channels.readthedocs.io/en/latest/releases/3.0.5.html>`_ for full\ndetails.\n\n\n3.0.4 (2021-07-11)\n------------------\n\nChannels 3.0.4 is a bugfix release in the 3.0 series.\n\nPlease see the `Version 3.0.4 release notes\n<https://channels.readthedocs.io/en/latest/releases/3.0.4.html>`_ for full\ndetails.\n\n\n3.0.3 (2020-12-28)\n------------------\n\n* Fixed a bug in Channels 3.0 where the legacy ``channels.http.AsgiHandler``\n  would not correctly isolate per-request scopes.\n\n  This is a security release for CVE-2020-35681. Please see the `Version 3.0.3\n  release notes\n  <https://channels.readthedocs.io/en/latest/releases/3.0.3.html>`_ for full\n  details.\n\n\n3.0.2 (2020-11-9)\n-----------------\n\n* Fixes a bug in Channels 3.0 where ``StaticFilesWrapper`` was not updated to\n  the ASGI 3 single-callable interface.\n\n* Users of the ``runworker`` command should ensure to update ``asgiref`` to\n  version 3.3.1 or later.\n\n\n3.0.1 (2020-11-4)\n-----------------\n\n* Fixes a bug in Channels 3.0 where ``SessionMiddleware`` would not correctly\n  isolate per-instance scopes.\n\n\n3.0.0 (2020-10-30)\n------------------\n\nUpdated to ASGI v3, and added support for Django 3.0+.\n\nThis is a major version change requiring updates to consumers and middleware.\nPlease see the full `Version 3.0.0 release notes\n<https://channels.readthedocs.io/en/latest/releases/3.0.0.html>`_ for details.\n\n\n2.4.0 (2019-12-18)\n------------------\n\n* Wraps session save calls in ``database_sync_to_async()``, for compatibility\n  with Django 3.0's ``async_unsafe()`` checks.\n\n* Drops compatibility with all Django versions lower than 2.2.\n\n\n2.3.1 (2019-10-23)\n------------------\n\n* Adds compatibility with Python 3.8.\n\n\n2.3.0 (2019-09-18)\n------------------\n\n* Adjusted ``AsgiHandler`` HTTP body handling to use a spooled temporary file,\n  rather than reading the whole request body into memory.\n\n  As a result, ``AsgiRequest.__init__()`` is adjusted to expect a file-like\n  ``stream``, rather than the whole ``body`` as bytes. Test cases instantiating\n  requests directly will likely need to be updated to wrap the provided body\n  in, e.g., `io.BytesIO`.\n\n\n2.2.0 (2019-04-14)\n------------------\n\n* Updated requirements for ASGI v3 and Daphne 2.3.\n\n\n2.1.7 (2019-01-31)\n------------------\n\n* HTTP request body size limit is now enforced\n\n* database_sync_to_async now closes old connections before it runs code\n\n* Auth middleware closes old connections before it runs\n\n\n2.1.6 (2018-12-08)\n------------------\n\n* HttpCommunicator now extracts query strings correctly\n\n* AsyncHttpConsumer provides channel layer attributes\n\n* Prevent late-Daphne import errors\n\n\n2.1.5 (2018-10-22)\n------------------\n\n* Django middleware caching now works on Django 1.11 and Django 2.0.\n  The previous release only ran on 2.1.\n\n\n2.1.4 (2018-10-19)\n------------------\n\n* Django middleware is now cached rather than instantiated per request\n  resulting in a significant speed improvement\n\n* ChannelServerLiveTestCase now serves static files again\n\n* Improved error message resulting from bad Origin headers\n\n* runserver logging now goes through the Django logging framework\n\n* Generic consumers can now have non-default channel layers\n\n* Improved error when accessing scope['user'] before it's ready\n\n\n2.1.3 (2018-08-16)\n------------------\n\n* An ALLOWED_ORIGINS value of \"*\" will now also allow requests without a Host\n  header at all (especially important for tests)\n\n* The request.path value is now correct in cases when a server has SCRIPT_NAME\n  set\n\n* Errors that happen inside channel listeners inside a runworker or Worker\n  class are now raised rather than suppressed\n\n\n2.1.2 (2018-06-13)\n------------------\n\n* AsyncHttpConsumer now has a disconnect() method you can override\n\n* Session and authentication middleware is now non-blocking.\n\n* URL routing context now includes default arguments from the URLconf.\n\n* The FORCE_SCRIPT_NAME setting is now respected in ASGI mode.\n\n* ALLOWED_HOSTS is now set correctly during LiveServerTests.\n\n\n2.1.1 (2018-04-18)\n------------------\n\n* The scope[\"user\"] object is no longer a lazy object, as this conflicts with\n  any async-based consumers.\n\n\n2.1.0 (2018-04-11)\n------------------\n\n* Async HTTP Consumers and WebSocket Consumers both gained new functionality\n  (groups, subprotocols, and an async HTTP variant)\n\n* URLRouters now allow nesting\n\n* Async login and logout functions for sessions\n\n* Expiry and groups in the in-memory channel layer\n\n* Improved Live Server test case\n\n* More powerful OriginValidator\n\n* Other small changes and fixes in the full release notes.\n\n\n2.0.2 (2018-02-08)\n------------------\n\n* SyncConsumer now terminates old database connections, and there is a new\n  database_sync_to_async wrapper to allow async connections to do the same.\n\n\n2.0.1 (2018-02-05)\n------------------\n\n* AsyncWebsocketConsumer and AsyncJsonWebsocketConsumer classes added\n\n* OriginValidator and AllowedHostsOriginValidator ASGI middleware is now available\n\n* URLRouter now correctly resolves long lists of URLs\n\n\n2.0.0 (2018-02-01)\n------------------\n\n* Major backwards-incompatible rewrite to move to an asyncio base and remove\n  the requirement to transport data over the network, as well as overhauled\n  generic consumers, test helpers, routing and more.\n\n\n1.1.6 (2017-06-28)\n------------------\n\n* The ``runserver`` ``server_cls`` override no longer fails with more modern\n  Django versions that pass an ``ipv6`` parameter.\n\n\n1.1.5 (2017-06-16)\n------------------\n\n* The Daphne dependency requirement was bumped to 1.3.0.\n\n\n1.1.4 (2017-06-15)\n------------------\n\n* Pending messages correctly handle retries in backlog situations\n\n* Workers in threading mode now respond to ctrl-C and gracefully exit.\n\n* ``request.meta['QUERY_STRING']`` is now correctly encoded at all times.\n\n* Test client improvements\n\n* ``ChannelServerLiveTestCase`` added, allows an equivalent of the Django\n  ``LiveTestCase``.\n\n* Decorator added to check ``Origin`` headers (``allowed_hosts_only``)\n\n* New ``TEST_CONFIG`` setting in ``CHANNEL_LAYERS`` that allows varying of\n  the channel layer for tests (e.g. using a different Redis install)\n\n\n1.1.3 (2017-04-05)\n------------------\n\n* ``enforce_ordering`` now works correctly with the new-style process-specific\n  channels\n\n* ASGI channel layer versions are now explicitly checked for version compatibility\n\n\n1.1.2 (2017-04-01)\n------------------\n\n* Session name hash changed to SHA-1 to satisfy FIPS-140-2. Due to this,\n  please force all WebSockets to reconnect after the upgrade.\n\n* `scheme` key in ASGI-HTTP messages now translates into `request.is_secure()`\n  correctly.\n\n* WebsocketBridge now exposes the underlying WebSocket as `.socket`\n\n\n1.1.1 (2017-03-19)\n------------------\n\n* Fixed JS packaging issue\n\n\n1.1.0 (2017-03-18)\n------------------\n\n* Channels now includes a JavaScript wrapper that wraps reconnection and\n  multiplexing for you on the client side.\n\n* Test classes have been moved from ``channels.tests`` to ``channels.test``.\n\n* Bindings now support non-integer fields for primary keys on models.\n\n* The ``enforce_ordering`` decorator no longer suffers a race condition where\n  it would drop messages under high load.\n\n* ``runserver`` no longer errors if the ``staticfiles`` app is not enabled in Django.\n\n\n1.0.3 (2017-02-01)\n------------------\n\n* Database connections are no longer force-closed after each test is run.\n\n* Channel sessions are not re-saved if they're empty even if they're marked as\n  modified, allowing logout to work correctly.\n\n* WebsocketDemultiplexer now correctly does sessions for the second/third/etc.\n  connect and disconnect handlers.\n\n* Request reading timeouts now correctly return 408 rather than erroring out.\n\n* The ``rundelay`` delay server now only polls the database once per second,\n  and this interval is configurable with the ``--sleep`` option.\n\n\n1.0.2 (2017-01-12)\n------------------\n\n* Websockets can now be closed from anywhere using the new ``WebsocketCloseException``.\n  There is also a generic ``ChannelSocketException`` so you can do custom behaviours.\n\n* Calling ``Channel.send`` or ``Group.send`` from outside a consumer context\n  (i.e. in tests or management commands) will once again send the message immediately.\n\n* The base implementation of databinding now correctly only calls ``group_names(instance)``,\n  as documented.\n\n\n1.0.1 (2017-01-09)\n------------------\n\n* WebSocket generic views now accept connections by default in their connect\n  handler for better backwards compatibility.\n\n\n1.0.0 (2017-01-08)\n------------------\n\n* BREAKING CHANGE: WebSockets must now be explicitly accepted or denied.\n  See https://channels.readthedocs.io/en/latest/releases/1.0.0.html for more.\n\n* BREAKING CHANGE: Demultiplexers have been overhauled to directly dispatch\n  messages rather than using channels to new consumers. Consult the docs on\n  generic consumers for more: https://channels.readthedocs.io/en/latest/generics.html\n\n* BREAKING CHANGE: Databinding now operates from implicit group membership,\n  where your code just has to say what groups would be used and Channels will\n  work out if it's a creation, modification or removal from a client's\n  perspective, including with permissions.\n\n* Delay protocol server ships with Channels providing a specification on how\n  to delay jobs until later and a reference implementation.\n\n* Serializers can now specify fields as `__all__` to auto-include all fields.\n\n* Various other small fixes.\n\n0.17.3 (2016-10-12)\n-------------------\n\n* channel_session now also rehydrates the http session with an option\n\n* request.META['PATH_INFO'] is now present\n\n* runserver shows Daphne log messages\n\n* runserver --nothreading only starts a single worker thread\n\n* Databinding changed to call group_names dynamically and imply changed/created from that;\n  other small changes to databinding, and more changes likely.\n\n\n0.17.2 (2016-08-04)\n-------------------\n\n* New CHANNELS_WS_PROTOCOLS setting if you want Daphne to accept certain\n  subprotocols\n\n* WebsocketBindingWithMembers allows serialization of non-fields on instances\n\n* Class-based consumers have an .as_route() method that lets you skip using\n  route_class\n\n* Bindings now work if loaded after app ready state\n\n\n0.17.1 (2016-07-22)\n-------------------\n\n* Bindings now require that `fields` is defined on the class body so all fields\n  are not sent by default. To restore old behaviour, set it to ['__all__']\n\n* Bindings can now be declared after app.ready() has been called and still work.\n\n* Binding payloads now include the model name as `appname.modelname`.\n\n* A worker_ready signal now gets triggered when `runworker` starts consuming\n  messages. It does not fire from within `runserver`.\n\n\n0.17.0 (2016-07-19)\n-------------------\n\n* Data Binding framework is added, which allows easy tying of model changes\n  to WebSockets (and other protocols) and vice-versa.\n\n* Standardised WebSocket/JSON multiplexing introduced\n\n* WebSocket generic consumers now have a 'close' argument on send/group_send\n\n\n0.16.1 (2016-07-12)\n-------------------\n\n* WebsocketConsumer now has a http_user option for auto user sessions.\n\n* consumer_started and consumer_finished signals are now available under\n  channels.signals.\n\n* Database connections are closed whenever a consumer finishes.\n\n\n0.16.0 (2016-07-06)\n-------------------\n\n* websocket.connect and websocket.receive are now consumed by a no-op consumer\n  by default if you don't specify anything to consume it, to bring Channels in\n  line with the ASGI rules on WebSocket backpressure.\n\n* You no longer need to call super's setUp in ChannelTestCase.\n\n\n0.15.1 (2016-06-29)\n-------------------\n\n* Class based consumers now have a self.kwargs\n\n* Fixed bug where empty streaming responses did not send headers or status code\n\n\n0.15.0 (2016-06-22)\n-------------------\n\n* Query strings are now decoded entirely by Django. Must be used with Daphne\n  0.13 or higher.\n\n\n0.14.3 (2016-06-21)\n-------------------\n\n* + signs in query strings are no longer double-decoded\n\n* Message now has .values(), .keys() and .items() to match dict\n\n\n0.14.2 (2016-06-16)\n-------------------\n\n* Class based consumers now have built-in channel_session and\n  channel_session_user support\n\n\n0.14.1 (2016-06-09)\n-------------------\n\n* Fix unicode issues with test client under Python 2.7\n\n\n0.14.0 (2016-05-25)\n-------------------\n\n* Class-based consumer pattern and WebSocket consumer now come with Channels\n  (see docs for more details)\n\n* Better testing utilities including a higher-level Client abstraction with\n  optional HTTP/WebSocket HttpClient variant.\n\n\n0.13.1 (2016-05-13)\n-------------------\n\n* enforce_ordering now queues future messages in a channel rather than\n  spinlocking worker processes to achieve delays.\n\n* ConsumeLater no longer duplicates messages when they're requeued below the\n  limit.\n\n\n0.13.0 (2016-05-07)\n-------------------\n\n* Backpressure is now implemented, meaning responses will pause sending if\n  the client does not read them fast enough.\n\n* DatabaseChannelLayer has been removed; it was not sensible.\n\n\n0.12.0 (2016-04-26)\n-------------------\n\n* HTTP paths and query strings are now expected to be sent over ASGI as\n  unescaped unicode. Daphne 0.11.0 is updated to send things in this format.\n\n* request.FILES reading bug fixed\n\n\n0.11.0 (2016-04-05)\n-------------------\n\n* ChannelTestCase base testing class for easier testing of consumers\n\n* Routing rewrite to improve speed with nested includes and remove need for ^ operator\n\n* Timeouts reading very slow request bodies\n\n\n0.10.3 (2016-03-29)\n-------------------\n\n* Better error messages for wrongly-constructed routing lists\n\n* Error when trying to use signed cookie backend with channel_session\n\n* ASGI group_expiry implemented on database channel backend\n\n\n0.10.2 (2016-03-23)\n-------------------\n\n* Regular expressions for routing include() can now be Unicode under Python 3\n\n* Last-resort error handling for HTTP request exceptions inside Django's core\n  code. If DEBUG is on, shows plain text tracebacks; if it is off, shows\n  \"Internal Server Error\".\n\n\n0.10.1 (2016-03-22)\n-------------------\n\n* Regular expressions for HTTP paths can now be Unicode under Python 3\n\n* route() and include() now importable directly from `channels`\n\n* FileResponse send speed improved for all code (previously just for staticfiles)\n\n\n0.10.0 (2016-03-21)\n-------------------\n\n* New routing system\n\n* Updated to match new ASGI single-reader-channel name spec\n\n* Updated to match new ASGI HTTP header encoding spec\n\n\n0.9.5 (2016-03-10)\n------------------\n\n* `runworker` now has an --alias option to specify a different channel layer\n\n* `runserver` correctly falls back to WSGI mode if no channel layers configured\n\n\n0.9.4 (2016-03-08)\n------------------\n\n* Worker processes now exit gracefully (finish their current processing) when\n  sent SIGTERM or SIGINT.\n\n* `runserver` now has a shorter than standard HTTP timeout configured\n  of 60 seconds.\n\n\n0.9.3 (2016-02-28)\n------------------\n\n* Static file serving is significantly faster thanks to larger chunk size\n\n* `runworker` now refuses to start if an in memory layer is configured\n\n\n0.9.2 (2016-02-28)\n------------------\n\n* ASGI spec updated to include `order` field for WebSocket messages\n\n* `enforce_ordering` decorator introduced\n\n* DatabaseChannelLayer now uses transactions to stop duplicated messages\n\n\n0.9.1 (2016-02-21)\n------------------\n\n* Fix packaging issues with previous release\n\n\n0.9 (2016-02-21)\n----------------\n\n* Staticfiles support in runserver\n\n* Runserver logs requests and WebSocket connections to console\n\n* Runserver autoreloads correctly\n\n* --noasgi option on runserver to use the old WSGI-based server\n\n* --noworker option on runserver to make it not launch worker threads\n\n* Streaming responses work correctly\n\n* Authentication decorators work again with new ASGI spec\n\n* channel_session_user_from_http decorator introduced\n\n* HTTP Long Poll support (raise ResponseLater)\n\n* Handle non-latin1 request body encoding\n\n* ASGI conformance tests for built-in database backend\n\n* Moved some imports around for more sensible layout\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 1.26171875,
          "content": "Contributing to Channels\n========================\n\nAs an open source project, Channels welcomes contributions of many forms. By participating in this project, you\nagree to abide by the Django `code of conduct <https://www.djangoproject.com/conduct/>`_.\n\nExamples of contributions include:\n\n* Code patches\n* Documentation improvements\n* Bug reports and patch reviews\n\nFor more information, please see our `contribution guide <https://channels.readthedocs.io/en/latest/contributing.html>`_.\n\nQuick Setup\n-----------\n\nFork, then clone the repo:\n\n.. code-block:: sh\n\n    git clone git@github.com:your-username/channels.git\n\nMake sure the tests pass:\n\n.. code-block:: sh\n\n    python -m pip install -e .[tests,daphne]\n    pytest\n\n.. note::\n   If you're using ``zsh`` for your shell, the above command will fail with a\n   ``zsh: no matches found: .[tests]`` error.\n   To fix this use ``noglob``::\n\n       noglob python -m pip install -e .[tests]\n\nMake your change. Add tests for your change. Make the tests pass:\n\n.. code-block:: sh\n\n    tox\n\nMake sure your code conforms to the coding style:\n\n.. code-block:: sh\n\n    black ./channels ./tests\n    isort --check-only --diff --recursive ./channels ./tests\n\nPush to your fork and `submit a pull request <https://github.com/django/channels/compare/>`_.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.515625,
          "content": "Copyright (c) Django Software Foundation and individual contributors.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice,\n       this list of conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    3. Neither the name of Django nor the names of its contributors may be used\n       to endorse or promote products derived from this software without\n       specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.041015625,
          "content": "recursive-exclude tests *\ninclude LICENSE\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.955078125,
          "content": "Django Channels\n===============\n\n.. image:: https://github.com/django/channels/workflows/Tests/badge.svg?branch=master\n    :target: https://github.com/django/channels/actions\n\n.. image:: https://readthedocs.org/projects/channels/badge/?version=latest\n    :target: https://channels.readthedocs.io/en/latest/?badge=latest\n\n.. image:: https://img.shields.io/pypi/v/channels.svg\n    :target: https://pypi.python.org/pypi/channels\n\n.. image:: https://img.shields.io/pypi/l/channels.svg\n    :target: https://pypi.python.org/pypi/channels\n\nChannels augments Django to bring WebSocket, long-poll HTTP,\ntask offloading and other async support to your code, using familiar Django\ndesign patterns and a flexible underlying framework that lets you not only\ncustomize behaviours but also write support for your own protocols and needs.\n\nDocumentation, installation and getting started instructions are at\nhttps://channels.readthedocs.io\n\nChannels is an official Django Project and as such has a deprecation policy.\nDetails about what's deprecated or pending deprecation for each release is in\nthe `release notes <https://channels.readthedocs.io/en/latest/releases/index.html>`_.\n\nSupport can be obtained through several locations - see our\n`support docs <https://channels.readthedocs.io/en/latest/support.html>`_ for more.\n\nYou can install channels from PyPI as the ``channels`` package.\nSee our `installation <https://channels.readthedocs.io/en/latest/installation.html>`_\nand `tutorial <https://channels.readthedocs.io/en/latest/tutorial/index.html>`_ docs for more.\n\nDependencies\n------------\n\nAll Channels projects currently support Python 3.8 and up. ``channels`` is\ncompatible with Django 4.2 and 5.0.\n\n\nContributing\n------------\n\nTo learn more about contributing, please `read our contributing docs <https://channels.readthedocs.io/en/latest/contributing.html>`_.\n\n\nMaintenance and Security\n------------------------\n\nTo report security issues, please contact security@djangoproject.com. For GPG\nsignatures and more security process information, see\nhttps://docs.djangoproject.com/en/dev/internals/security/.\n\nTo report bugs or request new features, please open a new GitHub issue. For\nlarger discussions, please post to the\n`django-developers mailing list <https://groups.google.com/d/forum/django-developers>`_.\n\nMaintenance is overseen by Carlton Gibson with help from others. It is a\nbest-effort basis - we unfortunately can only dedicate guaranteed time to fixing\nsecurity holes.\n\nIf you are interested in joining the maintenance team, please\n`read more about contributing <https://channels.readthedocs.io/en/latest/contributing.html>`_\nand get in touch!\n\n\nOther Projects\n--------------\n\nThe Channels project is made up of several packages; the others are:\n\n* `Daphne <https://github.com/django/daphne/>`_, the HTTP and Websocket termination server\n* `channels_redis <https://github.com/django/channels_redis/>`_, the Redis channel backend\n* `asgiref <https://github.com/django/asgiref/>`_, the base ASGI library/memory backend\n"
        },
        {
          "name": "channels",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "loadtesting",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.0791015625,
          "content": "[build-system]\nrequires = [\"setuptools\"]\nbuild-backend = \"setuptools.build_meta\"\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.517578125,
          "content": "[metadata]\nname = channels\nversion = attr: channels.__version__\nurl = http://github.com/django/channels\nauthor = Django Software Foundation\nauthor_email = foundation@djangoproject.com\ndescription = Brings async, event-driven capabilities to Django.\nlong_description = file: README.rst\nlong_description_content_type = text/x-rst\nlicense = BSD\nclassifiers =\n    Development Status :: 5 - Production/Stable\n    Environment :: Web Environment\n    Intended Audience :: Developers\n    License :: OSI Approved :: BSD License\n    Operating System :: OS Independent\n    Programming Language :: Python\n    Programming Language :: Python :: 3\n    Programming Language :: Python :: 3.8\n    Programming Language :: Python :: 3.9\n    Programming Language :: Python :: 3.10\n    Programming Language :: Python :: 3.11\n    Programming Language :: Python :: 3.12\n    Programming Language :: Python :: 3.13\n    Framework :: Django\n    Framework :: Django :: 4.2\n    Framework :: Django :: 5.0\n    Framework :: Django :: 5.1\n    Topic :: Internet :: WWW/HTTP\n\n[options]\npackages = find:\ninclude_package_data = True\ninstall_requires =\n    Django>=4.2\n    asgiref>=3.6.0,<4\npython_requires = >=3.8\n\n[options.extras_require]\ntests =\n    async-timeout\n    coverage~=4.5\n    pytest\n    pytest-django\n    pytest-asyncio\ndaphne =\n    daphne>=4.0.0\n\n[options.packages.find]\nexclude =\n    tests\n\n[flake8]\nexclude = venv/*,tox/*,docs/*,testproject/*,build/*\nmax-line-length = 88\nextend-ignore = E203, W503\n\n[isort]\nprofile = black\n\n[tool:pytest]\ntestpaths = tests\nasyncio_mode = auto\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.53125,
          "content": "[tox]\nenvlist =\n    py{38,39,310,311}-dj42\n    py{310,311,312}-dj50\n    py{310,311,312,313}-dj51\n    py{310,311,312,313}-djmain\n    qa\n\n[testenv]\nextras = tests, daphne\ncommands =\n    pytest -v {posargs}\ndeps =\n    dj42: Django>=4.2,<5.0\n    dj50: Django>=5.0,<5.1\n    dj51: Django>=5.1a1,<5.2\n    djmain: https://github.com/django/django/archive/main.tar.gz\n\n[testenv:qa]\nskip_install=true\ndeps =\n    black\n    flake8\n    isort\ncommands =\n    flake8 channels tests\n    black --check channels tests\n    isort --check-only --diff channels tests\n"
        }
      ]
    }
  ]
}