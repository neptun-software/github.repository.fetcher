{
  "metadata": {
    "timestamp": 1736561007467,
    "page": 765,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "adap/flower",
      "stars": 5299,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3232421875,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\n\n[*.cc]\nindent_style = space\nindent_size = 2\n\n[*.py]\nprofile = black\n\n[*.rst]\nindent_style = space\nindent_size = 2\n\n[*.md]\nindent_style = space\nindent_size = 2\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n[*.toml]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.1396484375,
          "content": "[flake8]\nmax-line-length = 88\nexclude = src/py/flwr/proto\nignore = E302,W503,E203\nper-file-ignores =\n    src/py/flwr/server/strategy/*.py:E501\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.6103515625,
          "content": "# Flower\n.flower_ops\ndata/\nframework/docs/source/api_documentation\nframework/docs/source/_build\nframework/docs/source/dataset/\nflwr_logs\n.cache\n\n# Node.js\nnode_modules\n\n# Flower Examples\nexamples/**/dataset/**\n#examples/**/dev/*.sh\n\n# Flower Baselines\nbaselines/datasets/leaf\n\n# Exclude ee package\nsrc/py/flwr/ee\n\n# macOS\n.DS_Store\n\n# Editor\n.vscode\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n.srl\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Poetry\npoetry.lock\n*.pkl\n\n# iOS\nxcuserdata/\n\n# Android\n.gradle\n.idea\nlocal.properties\napp/src/main/assets\n/build\n*.iml\n/.idea/caches\n/.idea/libraries\n/.idea/modules.xml\n/.idea/workspace.xml\n/.idea/navEditor.xml\n/.idea/assetWizardSettings.xml\n.DS_Store\n/captures\n.externalNativeBuild\n.cxx\n\n# Pyright\npyrightconfig.json\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.4599609375,
          "content": "repos:\n  - repo: local\n    hooks:\n      - id: format-code\n        name: Format Code\n        entry: ./dev/format.sh\n        language: script\n        # Ensures the script runs from the repository root:\n        pass_filenames: false\n        stages: [commit]\n\n      - id: run-tests\n        name: Run Tests\n        entry: ./dev/test.sh\n        language: script\n        # Ensures the script runs from the repository root:\n        pass_filenames: false\n        stages: [commit]\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.2041015625,
          "content": "# Changelog\n\nFlower changes are tracked as part of the documentation: [Flower Changelog](https://flower.ai/docs/changelog.html).\n\nThe changelog source can be edited here: `framework/docs/source/changelog.rst`\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.81640625,
          "content": "# Contributing to Flower\n\nWe welcome contributions!\n\n## Legal Notice\n\nAll contributions must and will be licensed under [Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0.html).\n\n## Code of Conduct\n\nFlower has adopted the [Contributor Covenant](https://www.contributor-covenant.org/) as its Code of Conduct. All community members are expected to adhere to it. Please see [CODE_OF_CONDUCT.md](.github/CODE_OF_CONDUCT.md) for details.\n\n## Code Review & Acceptance Process\n\nAll contributions, including contributions from core project members, require code review. The process is simple: Open a [Pull Request on GitHub](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests) and ensure all CI checks pass. One of the responsible code owners will review your contribution.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.037109375,
          "content": "# Flower: A Friendly Federated AI Framework\n\n<p align=\"center\">\n  <a href=\"https://flower.ai/\">\n    <img src=\"https://flower.ai/_next/image/?url=%2F_next%2Fstatic%2Fmedia%2Fflower_white_border.c2012e70.png&w=640&q=75\" width=\"140px\" alt=\"Flower Website\" />\n  </a>\n</p>\n<p align=\"center\">\n    <a href=\"https://flower.ai/\">Website</a> |\n    <a href=\"https://flower.ai/blog\">Blog</a> |\n    <a href=\"https://flower.ai/docs/\">Docs</a> |\n    <a href=\"https://flower.ai/conf/flower-summit-2022\">Conference</a> |\n    <a href=\"https://flower.ai/join-slack\">Slack</a>\n    <br /><br />\n</p>\n\n[![GitHub license](https://img.shields.io/github/license/adap/flower)](https://github.com/adap/flower/blob/main/LICENSE)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/adap/flower/blob/main/CONTRIBUTING.md)\n![Build](https://github.com/adap/flower/actions/workflows/framework.yml/badge.svg)\n[![Downloads](https://static.pepy.tech/badge/flwr)](https://pepy.tech/project/flwr)\n[![Docker Hub](https://img.shields.io/badge/Docker%20Hub-flwr-blue)](https://hub.docker.com/u/flwr)\n[![Slack](https://img.shields.io/badge/Chat-Slack-red)](https://flower.ai/join-slack)\n\nFlower (`flwr`) is a framework for building federated AI systems. The\ndesign of Flower is based on a few guiding principles:\n\n- **Customizable**: Federated learning systems vary wildly from one use case to\n  another. Flower allows for a wide range of different configurations depending\n  on the needs of each individual use case.\n\n- **Extendable**: Flower originated from a research project at the University of\n  Oxford, so it was built with AI research in mind. Many components can be\n  extended and overridden to build new state-of-the-art systems.\n\n- **Framework-agnostic**: Different machine learning frameworks have different\n  strengths. Flower can be used with any machine learning framework, for\n  example, [PyTorch](https://pytorch.org), [TensorFlow](https://tensorflow.org), [Hugging Face Transformers](https://huggingface.co/), [PyTorch Lightning](https://pytorchlightning.ai/), [scikit-learn](https://scikit-learn.org/), [JAX](https://jax.readthedocs.io/), [TFLite](https://tensorflow.org/lite/), [MONAI](https://docs.monai.io/en/latest/index.html), [fastai](https://www.fast.ai/), [MLX](https://ml-explore.github.io/mlx/build/html/index.html), [XGBoost](https://xgboost.readthedocs.io/en/stable/), [LeRobot](https://github.com/huggingface/lerobot) for federated robots, [Pandas](https://pandas.pydata.org/) for federated analytics, or even raw [NumPy](https://numpy.org/)\n  for users who enjoy computing gradients by hand.\n\n- **Understandable**: Flower is written with maintainability in mind. The\n  community is encouraged to both read and contribute to the codebase.\n\nMeet the Flower community on [flower.ai](https://flower.ai)!\n\n## Federated Learning Tutorial\n\nFlower's goal is to make federated learning accessible to everyone. This series of tutorials introduces the fundamentals of federated learning and how to implement them in Flower.\n\n0. **What is Federated Learning?**\n\n   [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adap/flower/blob/main/framework/docs/source/tutorial-series-what-is-federated-learning.ipynb) (or open the [Jupyter Notebook](https://github.com/adap/flower/blob/main/framework/docs/source/tutorial-series-what-is-federated-learning.ipynb))\n\n1. **An Introduction to Federated Learning**\n\n   [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adap/flower/blob/main/framework/docs/source/tutorial-series-get-started-with-flower-pytorch.ipynb) (or open the [Jupyter Notebook](https://github.com/adap/flower/blob/main/framework/docs/source/tutorial-series-get-started-with-flower-pytorch.ipynb))\n\n2. **Using Strategies in Federated Learning**\n\n   [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adap/flower/blob/main/framework/docs/source/tutorial-series-use-a-federated-learning-strategy-pytorch.ipynb) (or open the [Jupyter Notebook](https://github.com/adap/flower/blob/main/framework/docs/source/tutorial-series-use-a-federated-learning-strategy-pytorch.ipynb))\n\n3. **Building Strategies for Federated Learning**\n\n   [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adap/flower/blob/main/framework/docs/source/tutorial-series-build-a-strategy-from-scratch-pytorch.ipynb) (or open the [Jupyter Notebook](https://github.com/adap/flower/blob/main/framework/docs/source/tutorial-series-build-a-strategy-from-scratch-pytorch.ipynb))\n\n4. **Custom Clients for Federated Learning**\n\n   [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adap/flower/blob/main/framework/docs/source/tutorial-series-customize-the-client-pytorch.ipynb) (or open the [Jupyter Notebook](https://github.com/adap/flower/blob/main/framework/docs/source/tutorial-series-customize-the-client-pytorch.ipynb))\n\nStay tuned, more tutorials are coming soon. Topics include **Privacy and Security in Federated Learning**, and **Scaling Federated Learning**.\n\n## 30-Minute Federated Learning Tutorial\n\n[![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/adap/flower/blob/main/examples/flower-in-30-minutes/tutorial.ipynb) (or open the [Jupyter Notebook](https://github.com/adap/flower/blob/main/examples/flower-in-30-minutes/tutorial.ipynb))\n\n## Documentation\n\n[Flower Docs](https://flower.ai/docs):\n\n- [Installation](https://flower.ai/docs/framework/how-to-install-flower.html)\n- [Quickstart (TensorFlow)](https://flower.ai/docs/framework/tutorial-quickstart-tensorflow.html)\n- [Quickstart (PyTorch)](https://flower.ai/docs/framework/tutorial-quickstart-pytorch.html)\n- [Quickstart (Hugging Face)](https://flower.ai/docs/framework/tutorial-quickstart-huggingface.html)\n- [Quickstart (PyTorch Lightning)](https://flower.ai/docs/framework/tutorial-quickstart-pytorch-lightning.html)\n- [Quickstart (Pandas)](https://flower.ai/docs/framework/tutorial-quickstart-pandas.html)\n- [Quickstart (fastai)](https://flower.ai/docs/framework/tutorial-quickstart-fastai.html)\n- [Quickstart (JAX)](https://flower.ai/docs/framework/tutorial-quickstart-jax.html)\n- [Quickstart (scikit-learn)](https://flower.ai/docs/framework/tutorial-quickstart-scikitlearn.html)\n- [Quickstart (Android [TFLite])](https://flower.ai/docs/framework/tutorial-quickstart-android.html)\n- [Quickstart (iOS [CoreML])](https://flower.ai/docs/framework/tutorial-quickstart-ios.html)\n\n## Flower Baselines\n\nFlower Baselines is a collection of community-contributed projects that reproduce the experiments performed in popular federated learning publications. Researchers can build on Flower Baselines to quickly evaluate new ideas. The Flower community loves contributions! Make your work more visible and enable others to build on it by contributing it as a baseline!\n\n- [DASHA](https://github.com/adap/flower/tree/main/baselines/dasha)\n- [DepthFL](https://github.com/adap/flower/tree/main/baselines/depthfl)\n- [FedBN](https://github.com/adap/flower/tree/main/baselines/fedbn)\n- [FedMeta](https://github.com/adap/flower/tree/main/baselines/fedmeta)\n- [FedMLB](https://github.com/adap/flower/tree/main/baselines/fedmlb)\n- [FedPer](https://github.com/adap/flower/tree/main/baselines/fedper)\n- [FedProx](https://github.com/adap/flower/tree/main/baselines/fedprox)\n- [FedNova](https://github.com/adap/flower/tree/main/baselines/fednova)\n- [HeteroFL](https://github.com/adap/flower/tree/main/baselines/heterofl)\n- [FedAvgM](https://github.com/adap/flower/tree/main/baselines/fedavgm)\n- [FedRep](https://github.com/adap/flower/tree/main/baselines/fedrep)\n- [FedStar](https://github.com/adap/flower/tree/main/baselines/fedstar)\n- [FedWav2vec2](https://github.com/adap/flower/tree/main/baselines/fedwav2vec2)\n- [FjORD](https://github.com/adap/flower/tree/main/baselines/fjord)\n- [MOON](https://github.com/adap/flower/tree/main/baselines/moon)\n- [niid-Bench](https://github.com/adap/flower/tree/main/baselines/niid_bench)\n- [TAMUNA](https://github.com/adap/flower/tree/main/baselines/tamuna)\n- [FedVSSL](https://github.com/adap/flower/tree/main/baselines/fedvssl)\n- [FedXGBoost](https://github.com/adap/flower/tree/main/baselines/hfedxgboost)\n- [FedPara](https://github.com/adap/flower/tree/main/baselines/fedpara)\n- [FedAvg](https://github.com/adap/flower/tree/main/baselines/flwr_baselines/flwr_baselines/publications/fedavg_mnist)\n- [FedOpt](https://github.com/adap/flower/tree/main/baselines/flwr_baselines/flwr_baselines/publications/adaptive_federated_optimization)\n\nPlease refer to the [Flower Baselines Documentation](https://flower.ai/docs/baselines/) for a detailed categorization of baselines and for additional info including:\n* [How to use Flower Baselines](https://flower.ai/docs/baselines/how-to-use-baselines.html)\n* [How to contribute a new Flower Baseline](https://flower.ai/docs/baselines/how-to-contribute-baselines.html)\n\n## Flower Usage Examples\n\nSeveral code examples show different usage scenarios of Flower (in combination with popular machine learning frameworks such as PyTorch or TensorFlow).\n\nQuickstart examples:\n\n- [Quickstart (TensorFlow)](https://github.com/adap/flower/tree/main/examples/quickstart-tensorflow)\n- [Quickstart (PyTorch)](https://github.com/adap/flower/tree/main/examples/quickstart-pytorch)\n- [Quickstart (Hugging Face)](https://github.com/adap/flower/tree/main/examples/quickstart-huggingface)\n- [Quickstart (PyTorch Lightning)](https://github.com/adap/flower/tree/main/examples/quickstart-pytorch-lightning)\n- [Quickstart (fastai)](https://github.com/adap/flower/tree/main/examples/quickstart-fastai)\n- [Quickstart (Pandas)](https://github.com/adap/flower/tree/main/examples/quickstart-pandas)\n- [Quickstart (JAX)](https://github.com/adap/flower/tree/main/examples/quickstart-jax)\n- [Quickstart (MONAI)](https://github.com/adap/flower/tree/main/examples/quickstart-monai)\n- [Quickstart (scikit-learn)](https://github.com/adap/flower/tree/main/examples/sklearn-logreg-mnist)\n- [Quickstart (Android [TFLite])](https://github.com/adap/flower/tree/main/examples/android)\n- [Quickstart (iOS [CoreML])](https://github.com/adap/flower/tree/main/examples/ios)\n- [Quickstart (MLX)](https://github.com/adap/flower/tree/main/examples/quickstart-mlx)\n- [Quickstart (XGBoost)](https://github.com/adap/flower/tree/main/examples/xgboost-quickstart)\n\nOther [examples](https://github.com/adap/flower/tree/main/examples):\n\n- [Raspberry Pi & Nvidia Jetson Tutorial](https://github.com/adap/flower/tree/main/examples/embedded-devices)\n- [PyTorch: From Centralized to Federated](https://github.com/adap/flower/tree/main/examples/pytorch-from-centralized-to-federated)\n- [Vertical FL](https://github.com/adap/flower/tree/main/examples/vertical-fl)\n- [Federated Finetuning of OpenAI's Whisper](https://github.com/adap/flower/tree/main/examples/whisper-federated-finetuning)\n- [Federated Finetuning of Large Language Model](https://github.com/adap/flower/tree/main/examples/flowertune-llm)\n- [Federated Finetuning of a Vision Transformer](https://github.com/adap/flower/tree/main/examples/flowertune-vit)\n- [Advanced Flower with TensorFlow/Keras](https://github.com/adap/flower/tree/main/examples/advanced-tensorflow)\n- [Advanced Flower with PyTorch](https://github.com/adap/flower/tree/main/examples/advanced-pytorch)\n- [Comprehensive Flower+XGBoost](https://github.com/adap/flower/tree/main/examples/xgboost-comprehensive)\n- [Flower through Docker Compose and with Grafana dashboard](https://github.com/adap/flower/tree/main/examples/flower-via-docker-compose)\n- [Flower with KaplanMeierFitter from the lifelines library](https://github.com/adap/flower/tree/main/examples/federated-kaplan-meier-fitter)\n- [Sample Level Privacy with Opacus](https://github.com/adap/flower/tree/main/examples/opacus)\n- [Sample Level Privacy with TensorFlow-Privacy](https://github.com/adap/flower/tree/main/examples/tensorflow-privacy)\n- [Flower with a Tabular Dataset](https://github.com/adap/flower/tree/main/examples/fl-tabular)\n\n## Community\n\nFlower is built by a wonderful community of researchers and engineers. [Join Slack](https://flower.ai/join-slack) to meet them, [contributions](#contributing-to-flower) are welcome.\n\n<a href=\"https://github.com/adap/flower/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=adap/flower&columns=10\" />\n</a>\n\n## Citation\n\nIf you publish work that uses Flower, please cite Flower as follows:\n\n```bibtex\n@article{beutel2020flower,\n  title={Flower: A Friendly Federated Learning Research Framework},\n  author={Beutel, Daniel J and Topal, Taner and Mathur, Akhil and Qiu, Xinchi and Fernandez-Marques, Javier and Gao, Yan and Sani, Lorenzo and Kwing, Hei Li and Parcollet, Titouan and Gusmão, Pedro PB de and Lane, Nicholas D},\n  journal={arXiv preprint arXiv:2007.14390},\n  year={2020}\n}\n```\n\nPlease also consider adding your publication to the list of Flower-based publications in the docs, just open a Pull Request.\n\n## Contributing to Flower\n\nWe welcome contributions. Please see [CONTRIBUTING.md](CONTRIBUTING.md) to get started!\n"
        },
        {
          "name": "baselines",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "datasets",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "glossary",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 6.5126953125,
          "content": "[build-system]\nrequires = [\"poetry-core>=1.4.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool.poetry]\nname = \"flwr\"\nversion = \"1.15.0\"\ndescription = \"Flower: A Friendly Federated AI Framework\"\nlicense = \"Apache-2.0\"\nauthors = [\"The Flower Authors <hello@flower.ai>\"]\nreadme = \"README.md\"\nhomepage = \"https://flower.ai\"\nrepository = \"https://github.com/adap/flower\"\ndocumentation = \"https://flower.ai\"\nkeywords = [\n    \"Artificial Intelligence\",\n    \"Federated AI\",\n    \"Federated Analytics\",\n    \"Federated Evaluation\",\n    \"Federated Learning\",\n    \"Flower\",\n    \"Machine Learning\",\n]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"Intended Audience :: Science/Research\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"Operating System :: MacOS :: MacOS X\",\n    \"Operating System :: POSIX :: Linux\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Topic :: Scientific/Engineering\",\n    \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n    \"Topic :: Scientific/Engineering :: Mathematics\",\n    \"Topic :: Software Development\",\n    \"Topic :: Software Development :: Libraries\",\n    \"Topic :: Software Development :: Libraries :: Python Modules\",\n    \"Typing :: Typed\",\n]\npackages = [{ include = \"flwr\", from = \"src/py\" }]\nexclude = [\"src/py/**/*_test.py\"]\n\n[tool.poetry.scripts]\n# `flwr` CLI\nflwr = \"flwr.cli.app:app\"\n# SuperExec (can run with either Deployment Engine or Simulation Engine)\nflower-superexec = \"flwr.superexec.app:run_superexec\" # Deprecated\n# Simulation Engine\nflwr-simulation = \"flwr.simulation.app:flwr_simulation\"\nflower-simulation = \"flwr.simulation.run_simulation:run_simulation_from_cli\"\n# Deployment Engine\nflower-superlink = \"flwr.server.app:run_superlink\"\nflower-supernode = \"flwr.client.supernode.app:run_supernode\"\nflwr-serverapp = \"flwr.server.serverapp:flwr_serverapp\"\nflower-server-app = \"flwr.server.run_serverapp:run_server_app\" # Deprecated\nflwr-clientapp = \"flwr.client.clientapp:flwr_clientapp\"\nflower-client-app = \"flwr.client.supernode:run_client_app\" # Deprecated\n\n[tool.poetry.dependencies]\npython = \"^3.9\"\n# Mandatory dependencies\nnumpy = \">=1.26.0,<3.0.0\"\ngrpcio = \"^1.60.0,!=1.64.2,<=1.64.3\"\nprotobuf = \"^4.25.2\"\ncryptography = \"^42.0.4\"\npycryptodome = \"^3.18.0\"\niterators = \"^0.0.2\"\ntyper = \"^0.12.5\"\ntomli = \"^2.0.1\"\ntomli-w = \"^1.0.0\"\npathspec = \"^0.12.1\"\nrich = \"^13.5.0\"\npyyaml = \"^6.0.2\"\nrequests = \"^2.31.0\"\n# Optional dependencies (Simulation Engine)\nray = { version = \"==2.10.0\", optional = true, python = \">=3.9,<3.12\" }\n# Optional dependencies (REST transport layer)\nstarlette = { version = \"^0.45.2\", optional = true }\nuvicorn = { version = \"^0.34.0\", extras = [\"standard\"], optional = true }\n\n[tool.poetry.extras]\nsimulation = [\"ray\"]\nrest = [\"starlette\", \"uvicorn\"]\n\n[tool.poetry.group.dev.dependencies]\ntypes-dataclasses = \"==0.6.6\"\ntypes-protobuf = \"==3.19.18\"\ntypes-requests = \"==2.31.0.20240125\"\ntypes-setuptools = \"==69.0.0.20240125\"\nclang-format = \"==17.0.6\"\nisort = \"==5.13.2\"\nblack = { version = \"==24.2.0\", extras = [\"jupyter\"] }\ntaplo = \"==0.9.3\"\ndocformatter = \"==1.7.5\"\nmypy = \"==1.8.0\"\npylint = \"==3.3.1\"\nflake8 = \"==5.0.4\"\nparameterized = \"==0.9.0\"\npytest = \"==7.4.4\"\npytest-cov = \"==4.1.0\"\npytest-watcher = \"==0.4.3\"\ngrpcio-tools = \"==1.60.0\"\nmypy-protobuf = \"==3.2.0\"\njupyterlab = \"==4.0.12\"\nrope = \"==1.13.0\"\nsemver = \"==3.0.2\"\nsphinx = \"==7.4.7\"\nsphinx-intl = \"==2.2.0\"\nsphinx-click = \"==6.0.0\"\nmyst-parser = \"==3.0.1\"\nsphinx-design = \"==0.6.1\"\nsphinx-copybutton = \"==0.5.2\"\nsphinxcontrib-mermaid = \"==0.9.2\"\nsphinxcontrib-youtube = \"==1.4.1\"\nfuro = \"==2024.8.6\"\nsphinx-reredirects = \"==0.1.5\"\nnbsphinx = \"==0.9.5\"\nnbstripout = \"==0.6.1\"\nruff = \"==0.4.5\"\nsphinx-argparse = \"==0.4.0\"\npipreqs = \"==0.4.13\"\nmdformat = \"==0.7.18\"\nmdformat-gfm = \"==0.3.6\"\nmdformat-frontmatter = \"==2.0.1\"\nmdformat-beautysh = \"==0.1.1\"\ntwine = \"==5.1.1\"\ntypes-PyYAML = \"^6.0.2\"\npyroma = \"==4.2\"\ncheck-wheel-contents = \"==0.4.0\"\nGitPython = \"==3.1.32\"\nPyGithub = \"==2.1.1\"\nlicensecheck = \"==2024\"\npre-commit = \"==3.5.0\"\nsphinx-substitution-extensions = \"2022.02.16\"\nsphinxext-opengraph = \"==0.9.1\"\ndocstrfmt = { git = \"https://github.com/charlesbvll/docstrfmt.git\", branch = \"patch-2\" }\ndocsig = \"==0.64.0\"\n\n[tool.docstrfmt]\nextend_exclude = [\n    \"framework/docs/source/conf.py\",\n    \"framework/docs/source/tutorial-quickstart-huggingface.rst\",\n    \"framework/docs/source/_templates/autosummary/*\",\n    \"framework/docs/source/ref-api/*\",\n]\n\n[tool.isort]\nprofile = \"black\"\nknown_first_party = [\"flwr\", \"flwr_tool\"]\n\n[tool.black]\nline-length = 88\ntarget-version = [\"py39\", \"py310\", \"py311\"]\n\n[tool.pylint.\"MESSAGES CONTROL\"]\ndisable = \"duplicate-code,too-few-public-methods,useless-import-alias\"\n\n[tool.pytest.ini_options]\nminversion = \"6.2\"\naddopts = \"-qq\"\ntestpaths = [\"src/py/flwr\", \"src/py/flwr_tool\"]\nfilterwarnings = \"ignore::DeprecationWarning\"\n\n[tool.pytest-watcher]\nnow = false\nclear = true\ndelay = 0.2\nrunner = \"pytest\"\nrunner_args = [\"-s\", \"-vvvvv\"]\npatterns = [\"*.py\"]\nignore_patterns = []\n\n[tool.mypy]\nplugins = [\"numpy.typing.mypy_plugin\"]\nignore_missing_imports = true\nstrict = true\n\n[[tool.mypy.overrides]]\nmodule = [\"importlib.metadata.*\", \"importlib_metadata.*\"]\nfollow_imports = \"skip\"\nfollow_imports_for_stubs = true\ndisallow_untyped_calls = false\n\n[[tool.mypy.overrides]]\nmodule = \"torch.*\"\nfollow_imports = \"skip\"\nfollow_imports_for_stubs = true\n\n[tool.docformatter]\nwrap-summaries = 88\nwrap-descriptions = 88\n\n[tool.ruff]\ntarget-version = \"py39\"\nline-length = 88\nexclude = [\n    \".bzr\",\n    \".direnv\",\n    \".eggs\",\n    \".git\",\n    \".hg\",\n    \".mypy_cache\",\n    \".nox\",\n    \".pants.d\",\n    \".pytype\",\n    \".ruff_cache\",\n    \".svn\",\n    \".tox\",\n    \".venv\",\n    \"__pypackages__\",\n    \"_build\",\n    \"buck-out\",\n    \"build\",\n    \"dist\",\n    \"node_modules\",\n    \"venv\",\n    \"proto\",\n]\n\n[tool.ruff.lint]\nselect = [\"D\", \"E\", \"F\", \"W\", \"B\", \"ISC\", \"C4\", \"UP\"]\nfixable = [\"D\", \"E\", \"F\", \"W\", \"B\", \"ISC\", \"C4\", \"UP\"]\nignore = [\"B024\", \"B027\", \"D205\", \"D209\"]\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"numpy\"\n\n[tool.ruff.lint.per-file-ignores]\n\"src/py/flwr/server/strategy/*.py\" = [\"E501\"]\n\n[tool.docsig]\nignore-no-params = true\nexclude = 'src/py/flwr/proto/.*|src/py/flwr/.*_test\\.py|src/py/flwr/cli/new/templates/.*\\.tpl'\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "taplo.toml",
          "type": "blob",
          "size": 0.533203125,
          "content": "include = [\"**/*.toml\"]\nexclude = [\"baselines/**\", \"datasets/**\"]\n\n[formatting]\nalign_comments = false\n# Defaults below\nalign_entries = false\narray_trailing_comma = true\narray_auto_expand = true\narray_auto_collapse = true\ncompact_arrays = true\ncompact_inline_tables = false\ninline_table_expand = true\ncompact_entries = false\ncolumn_width = 80\nindent_tables = false\nindent_entries = false\nindent_string = \"    \"\ntrailing_newline = true\nreorder_keys = false\nreorder_arrays = false\nreorder_inline_tables = false\nallowed_blank_lines = 2\ncrlf = false\n"
        }
      ]
    }
  ]
}