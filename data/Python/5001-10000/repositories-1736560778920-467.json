{
  "metadata": {
    "timestamp": 1736560778920,
    "page": 467,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mahmoud/boltons",
      "stars": 6552,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3798828125,
          "content": "docs/_build\ntmp.py\nhtmlcov/\nvenv/\n*.py[cod]\n\n# emacs\n*~\n._*\n.\\#*\n\\#*\\#\n\n# C extensions\n*.so\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\nlib\nlib64\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\nnosetests.xml\n\n# Translations\n*.mo\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n\n# Vim\n*.sw[op]\n\n.cache/\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.6240234375,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n   os: ubuntu-22.04\n   tools:\n     python: \"3.10\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n   configuration: docs/conf.py\n\n# If using Sphinx, optionally build your docs in additional formats such as PDF\n# formats:\n#    - pdf\n\n# Optionally declare the Python requirements required to build your docs\npython:\n   install:\n   - requirements: docs/requirements-rtd.txt\n   - method: pip\n     path: ."
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 59.3447265625,
          "content": "# boltons Changelog\n\nSince February 20, 2013 there have been 45 releases and 1492 commits\nfor an average of one 33-commit release about every 9 weeks. Versions\nare named according to the [CalVer](https://calver.org) versioning\nscheme (`YY.MINOR.MICRO`).\n\n## 24.1.0\n\n_(November 1, 2024)_\n\n- Added `max_depth` parameter to [`fileutils.iter_find_files`][fileutils.iter_find_files]\n- Added `enter` parameter to [`iterutils.research`][iterutils.research] to support traversing custom data types\n- Add optional print tracing for [`iterutils.remap`][iterutils.remap] for easier debugging\n- Fixed [`typeutils.Sentinel`][typeutils.make_sentinel] copy behavior to return self\n- Tentative Python 3.13 support ([#365][i365], [#366][i366])\n\n[i365]: https://github.com/mahmoud/boltons/issues/365\n[i366]: https://github.com/mahmoud/boltons/issues/366\n\n## 24.0.0\n\nPer the RFC in issue [#365][i339], boltons is now **Python 3 only**. 3.7+ for now.\nIf you're a Python 2 user, feel free to pin at `boltons<24.0.0`.\n\nOther minor changes:\n\n- Added Python 3.12 support ([#361][i361])\n- Fix [dictutils.OneToOne][dictutils.OneToOne]'s `update()` behavior with empty iterables\n\n[i339]: https://github.com/mahmoud/boltons/issues/339\n[i361]: https://github.com/mahmoud/boltons/issues/361\n\n## 23.1.1\n\n_(November 1, 2023)_\n\nTiny release to include more test files in the sdist (source distribution) on PyPI.\n\n## 23.1.0\n\n_(October 31, 2023)_\n\n- Add `fill`/`end` parameters for [`iterutils.windowed`][iterutils.windowed] and [`iterutils.pairwise`][iterutils.pairwise], respectively ([#350][i350])\n- Fix cache eviction for [`cacheutils.LRU`][cacheutils.LRU] ([#348][i348])\n- Fix OrderedMultiDict (OMD) pickleability under Py3 ([#337][i337])\n- `funcutils.copy_function` maintains kw-only defaults ([#336][i336])\n- Support OMD `ior` ([#341][i341])\n\n[i350]: https://github.com/mahmoud/boltons/issues/350\n[i348]: https://github.com/mahmoud/boltons/issues/348\n[i341]: https://github.com/mahmoud/boltons/issues/341\n[i337]: https://github.com/mahmoud/boltons/issues/337\n[i336]: https://github.com/mahmoud/boltons/issues/336\n[cacheutils.LRU]: http://boltons.readthedocs.org/en/latest/cacheutils.html#boltons.cacheutils.LRU\n[iterutils.windowed]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.windowed\n[iterutils.pairwise]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.pairwise\n\n## 23.0.0\n\n_(February 19, 2023)_\n\n- Overdue update for Python 3.10 and 3.11 support ([#294][i294], [#303][i303], [#320][i320], [#323][i323], [#326][i326]/[#327][i327])\n- Add [iterutils.chunk_ranges][iterutils.chunk_ranges] ([#312][i312])\n- Improvements to `SpooledBytesIO`/`SpooledStringIO` ([#305][i305])\n- Bugfix for infinite daterange issue when start and stop is the same ([#302][i302])\n- Fix `Bits.as_list` behavior ([#315][i315])\n\n  21.0.0\n\n---\n\n_(May 16, 2021)_\n\n- Fix [OMD][dictutils.OrderedMultiDict].addlist when the added list is empty\n- Add [funcutils.noop][funcutils.noop], satisfying [PEP 559](https://www.python.org/dev/peps/pep-0559/)\n- Support lists for [iterutils.bucketize][iterutils.bucketize]\n- Python 3.9 test fixes for OMD (PEP 584, see [#271][i271])\n- Make [typeutils.make_sentinel][typeutils.make_sentinel] more pickleable\n- [jsonutils.reverse_iter_lines][jsonutils.reverse_iter_lines] now works on Py3 and Windows\n\n[jsonutils.reverse_iter_lines]: http://boltons.readthedocs.org/en/latest/jsonutils.html#boltons.jsonutils.reverse_iter_lines\n[funcutils.noop]: https://boltons.readthedocs.io/en/latest/funcutils.html#boltons.funcutils.noop\n[i271]: https://github.com/mahmoud/boltons/issues/271\n\n## 20.2.1\n\n_(August 11, 2020)_\n\n- Improve import time of [iterutils][iterutils] by deferring hashlib/socket imports\n- Add custom `repr` parameter to [funcutils.format_invocation][funcutils.format_invocation]\n\n  20.2.0\n\n---\n\n_(June 21, 2020)_\n\n- Added [iterutils.lstrip][iterutils.lstrip], [iterutils.rstrip][iterutils.rstrip], [iterutils.strip][iterutils.strip]\n- More robust and complete [strutils.strip_ansi][strutils.strip_ansi]\n- Add [iterutils.untyped_sorted][iterutils.untyped_sorted]\n- Fixes to [IndexedSet][IndexedSet] rsub and index methods\n- Expose text mode flag in [fileutils.AtomicSaver][fileutils.AtomicSaver]\n- Add [strutils.int_list_complement][strutils.int_list_complement] and [strutils.int_list_to_int_tuples][strutils.int_list_to_int_tuples] to the _int_list_ suite.\n- Docs: intersphinx links finally point to Python 3 docs\n\n  20.1.0\n\n---\n\n_(March 29, 2020)_\n\n- Add [funcutils.update_wrapper][funcutils.update_wrapper], used to\n  make a wrapper function reflect various aspects of the wrapped\n  function's API.\n- Fix [FunctionBuilder][FunctionBuilder] handling of functions without `__module__`\n- Add `partial` support to [FunctionBuilder][FunctionBuilder]\n- Fix [NetstringSocket][socketutils.NetstringSocket]'s handling of arguments in `read_ns`\n- Fix [IndexedSet][IndexedSet]'s `index()` method to account for removals\n- Add `seekable`, `readable`, and `writable` to SpooledIOBase\n- Add a special case to `singularize`\n- Fix various warnings for Py3.9\n\n  20.0.0\n\n---\n\n_(January 8, 2020)_\n\n- New module [pathutils][pathutils]:\n  - [pathutils.augpath][pathutils.augpath] augments a path by modifying its components\n  - [pathutils.shrinkuser][pathutils.shrinkuser] inverts :func:`os.path.expanduser`.\n  - [pathutils.expandpath][pathutils.expandpath] shell-like environ and tilde expansion\n- add `include_dirs` param to [fileutils.iter_find_files][fileutils.iter_find_files]\n- Make [funcutils.format_invocation][funcutils.format_invocation] more deterministic\n- add [strutils.unwrap_text][strutils.unwrap_text] which does what you think to wrapped text\n- Py3 fixes\n  - [iterutils.chunked][iterutils.chunked] to work with the `bytes` type ([#231][i231])\n  - [cacheutils.ThresholdCounter][cacheutils.ThresholdCounter]'s `get_common_count()`\n\n[i231]: https://github.com/mahmoud/boltons/issues/231\n[pathutils]: https://boltons.readthedocs.io/en/latest/pathutils.html\n[pathutils.augpath]: https://boltons.readthedocs.io/en/latest/pathutils.html#boltons.pathutils.augpath\n[pathutils.augpath]: https://boltons.readthedocs.io/en/latest/pathutils.html#boltons.pathutils.augpath\n[pathutils.shrinkuser]: https://boltons.readthedocs.io/en/latest/pathutils.html#boltons.pathutils.shrinkuser\n[pathutils.expandpath]: https://boltons.readthedocs.io/en/latest/pathutils.html#boltons.pathutils.expandpath\n[strutils.unwrap_text]: https://boltons.readthedocs.io/en/latest/strutils.html#boltons.strutils.unwrap_text\n\n## 19.3.0\n\n_(October 28, 2019)_\n\nThree funcutils:\n\n- [funcutils.format_invocation][funcutils.format_invocation] for formatting simple function calls `func(pos1, pos2, kw_k=kw_v)`\n- [funcutils.format_exp_repr][funcutils.format_exp_repr] for formatting a repr like `Type(pos, kw_k=kw_v)`\n- [funcutils.format_nonexp_repr][funcutils.format_nonexp_repr] for formatting a repr like `<Type k=v>`\n\n[funcutils.format_invocation]: https://boltons.readthedocs.io/en/latest/funcutils.html#boltons.funcutils.format_invocation\n[funcutils.format_exp_repr]: https://boltons.readthedocs.io/en/latest/funcutils.html#boltons.funcutils.format_exp_repr\n[funcutils.format_nonexp_repr]: https://boltons.readthedocs.io/en/latest/funcutils.html#boltons.funcutils.format_nonexp_repr\n\n## 19.2.0\n\n_(October 19, 2019)_\n\nA bunch of small fixes and enhancements.\n\n- [tbutils.TracebackInfo][tbutils.TracebackInfo]'s from_frame now respects `level` arg\n- [OrderedMultiDict.sorted()][OrderedMultiDict.sorted] now maintains all items, not just the most recent\n- [setutils.complement()][setutils.complement] now supports `__rsub__` for better interop with the builtin `set`\n- [FunctionBuilder][FunctionBuilder] fixed a few py3 warnings related to inspect module usage (`formatargspec`)\n- [iterutils.bucketize][iterutils.bucketize] now takes a string key which works like an attribute getter, similar to other iterutils functions\n- Docstring fixes across the board\n- CI fixes for Travis default dist change\n\n[OrderedMultiDict.sorted]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict.sorted\n\n## 19.1.0\n\n_(February 28, 2019)_\n\nCouple of enhancements, couple of cleanups.\n\n- [queueutils][queueutils] now supports float-based priorities ([#204][i204])\n- [FunctionBuilder][funcutils.FunctionBuilder] has a new\n  `get_arg_names()` method, and its `get_defaults_dict()` method\n  finally includes kwonly argument defaults.\n- [strutils.gzip_bytes][strutils.gzip_bytes] arrives to match\n  [strutils.gunzip_bytes][strutils.gunzip_bytes]\n\n[i204]: https://github.com/mahmoud/boltons/issues/204\n\n## 19.0.1\n\n_(February 12, 2019)_\n\nQuick release to enhance [FunctionBuilder][funcutils.FunctionBuilder]\nand [funcutils.wraps][funcutils.wraps] to maintain function\nannotations on Python 3+. ([#133][i133], [#134][i134], [#203][i203])\n\n[i133]: https://github.com/mahmoud/boltons/issues/133\n[i134]: https://github.com/mahmoud/boltons/issues/134\n[i203]: https://github.com/mahmoud/boltons/issues/203\n\n## 19.0.0\n\n_(February 10, 2019)_\n\nA very big release indeed, perhaps the biggest yet. A big, big thank you to all the contributors!\n\n- New types and utilities\n  - [dictutils.ManyToMany][dictutils.ManyToMany] arrives, to complement [dictutils.OneToOne][dictutils.OneToOne]\n  - [dictutils.FrozenDict][dictutils.FrozenDict] brings immutable mapping to a module near you ([#105][i105])\n  - [setutils.complement()][setutils.complement] introduces \"negative\" sets, useful for exclusion and many other set operations\n  - [iterutils.soft_sorted()][iterutils.soft_sorted] allows for looser, more flexible sorting of sequences\n  - [iterutils.flatten_iter()][iterutils.flatten_iter] and [iterutils.flatten()][iterutils.flatten], to collapse nested iterables. ([#118][i118])\n  - [mathutils.Bits][mathutils.Bits] type for representing a bitstring and translating\n    between integer, bytestring, hex, and boolean sequence representations.\n- funcutils improvements\n  - [FunctionBuilder][funcutils.FunctionBuilder] and [funcutils.wraps][funcutils.wraps] now support coroutines/async ([#194][i194])\n  - [FunctionBuilder.add_arg()][funcutils.FunctionBuilder.add_arg] allows the addition of arguments to the signature, to match [FunctionBuilder.remove_arg()][funcutils.FunctionBuilder.remove_arg] ([#201][i201])\n  - Similarly [funcutils.wraps()][funcutils.wraps] now takes an \"expected\" argument, to complement \"injected\" ([#161][i161])\n- Other bugfixes and improvements\n  - [cacheutils.LRI][cacheutils.LRI] is now threadsafe and correctly evicts when duplicate keys are added ([#155][i155], [#157][i157])\n  - [dictutils.subdict()][dictutils.subdict] now does its best to return the same type of dictionary it was passed.\n  - [urlutils][urlutils] now has better IPv6 support and URL can be used more natively like a string\n  - Improve singularization in [strutils][strutils]\n  - Fix some deprecation warnings in Python 3.7 ([#165][i165], [#196][i196])\n  - Document the change in dict constructor behavior affecting [dictutils.OMD][dictutils.OMD] under Python 3.7+ ([#179][i179])\n\n[i105]: https://github.com/mahmoud/boltons/issues/105\n[i118]: https://github.com/mahmoud/boltons/issues/118\n[i155]: https://github.com/mahmoud/boltons/issues/155\n[i157]: https://github.com/mahmoud/boltons/issues/157\n[i161]: https://github.com/mahmoud/boltons/issues/161\n[i165]: https://github.com/mahmoud/boltons/issues/165\n[i179]: https://github.com/mahmoud/boltons/issues/179\n[i194]: https://github.com/mahmoud/boltons/issues/194\n[i195]: https://github.com/mahmoud/boltons/issues/195\n[i196]: https://github.com/mahmoud/boltons/issues/196\n[i201]: https://github.com/mahmoud/boltons/issues/201\n\n## 18.0.1\n\n_(August 29, 2018)_\n\nA few bugfixes and a handy text utility.\n\n- Add MultiSub for multiple string substitutions in a single call\n  ([#162][i162])\n- `tableutils.Table.to_text()` is more Markdown compatible\n- Add LICENSE to package ([#164][i164])\n- `atomic_save` works better with `overwrite=True` ([#161][i161])\n- Reduced memory footprint on `tbutils._DeferredLine` with `__slots__`\n\n  18.0.0\n\n---\n\n_(March 2, 2018)_\n\n- Add `<thead>` and `<tbody>` structure to tableutils.Table HTML\n  output, which helps with styling and other functionality (e.g.,\n  jQuery datatables).\n- Add [dictutils.subdict()][dictutils.subdict] to get a filtered version of a dictionary\n  based on a subset of keys. ([#150][i150])\n- Add beta version of cacheutils.MinIDMap.\n\n  17.2.0\n\n---\n\n_(December 16, 2017)_\n\nA big release with a lot of features and bugfixes, big and small. Just\nin time for the holidays!\n\n- Better handling of `file` and `file`-like objects in [remap][iterutils.remap]'s `default_enter`\n- Fix line-by-line iteration in [ioutils][ioutils] types\n- Change [strutils.slugify][strutils.slugify] to always output at\n  least a single-character slug (in cases of\n  all-punctuation/whitespace inputs).\n- Fix [DeferredValue][formatutils.DeferredValue] caching in [formatutils][formatutils]\n- Add [OneToOne][dictutils.OneToOne] to [dictutils][dictutils]\n- Add [MultiFileReader][ioutils.MultiFileReader] to [ioutils][ioutils] (see [#135][i135])\n- Support passing `dir` argument to [ioutils][ioutils] SpooledIO types\n- fix default arguments for [mathutils.clamp][mathutils.clamp] (see [#128][i128])\n- Add [iterutils.research][iterutils.research], a\n  [remap][iterutils.remap]-based recursive search function for nested\n  data\n- Improved and expanded [urlutils.SCHEME_PORT_MAP][urlutils.SCHEME_PORT_MAP]\n- Simplify [urlutils.find_all_links][urlutils.find_all_links] signature\n\n  17.1.0\n\n---\n\n_(February 27, 2017)_\n\nAdd urlutils module, with URL type and find_all_links function. also\nupdate Sentinel for Python 3 falsiness\n\n- Add urlutils module, complete with RFC3986-compliant `URL` type\n- Also add `urlutils.find_all_links` function, which heuristically\n  finds all links in plaintext, and creates URLs out of them.\n- Update typeutils.Sentinel to be appropriately falsy on Python 3\n\n  17.0.0\n\n---\n\n_(January 24, 2017)_\n\nSeveral tweaks and enhancements to ring in the new year.\n\n- [tbutils][tbutils] objects like the\n  [ExceptionInfo][tbutils.ExceptionInfo] are now more easily\n  JSON-serializable thanks to a tweak to [Callpoint][tbutils.Callpoint].\n- SpooledIO objects like\n  [ioutils.SpooledBytesIO][ioutils.SpooledBytesIO] are now\n  `bool`-able.\n- [iterutils.bucketize][iterutils.bucketize] gains the\n  `value_transform` and `key_filter` arguments.\n- [cachedproperty][cacheutils.cachedproperty] properly maintains\n  docstring\n- [funcutils.wraps][funcutils.wraps] maintains a reference to the\n  wrapped function with `__wrapped__` attribute.\n- A bit of cleanup to be backwards compatible to Python 3.3\n\n  16.5.1\n\n---\n\n_(November 6, 2016)_\n\nMostly bug fixes and various tweaks, optimizations, and\ndocumentation. Also added a bit of functionality in the form of\n[ioutils][ioutils] and some GUID stuff.\n\n- Add [ioutils][ioutils] with\n  [SpooledStringIO][ioutils.SpooledStringIO] and\n  [SpooledBytesIO][ioutils.SpooledBytesIO], two in-memory file-like\n  objects, like the stdlib [StringIO][StringIO], except that they\n  automatically spill over to disk when they reach a configurable\n  size.\n- Add [iterutils.GUIDerator][iterutils.GUIDerator] and\n  [iterutils.SequentialGUIDerator][iterutils.SequentialGUIDerator],\n  two methods of getting random iterables.\n- Add [mathutils.clamp][mathutils.clamp], a combined min-max function,\n  like numpy's clip.\n- Optimized [iterutils.first][iterutils.first].\n- Enabled spillover kwargs in [funcutils.wraps][funcutils.wraps]\n- fix for default [remap][iterutils.remap] set support, fixes [#84][i84]\n- improving and testing exceptions around classmethod and staticmethod\n  for [funcutils.wraps][funcutils.wraps] and\n  [FunctionBuilder][funcutils.FunctionBuilder], fixes [#86][i86] to\n  the degree possible.\n\n  16.5.0\n\n---\n\n_(July 16, 2016)_\n\nA few minor changes, and medium-sized breaking change to\n[cacheutils][cacheutils].\n\n- [cacheutils][cacheutils] caching decorators now take the\n  function/method into account by default. This was done by adding the\n  scoped argument to [@cached][cacheutils.cached] and\n  [@cachedmethod][cacheutils.cachedmethod] (and removing selfish from\n  cachedmethod). also fixed a bug in a cachedmethod test, as well as\n  added docs for scoped and key arguments. all of this to fix [#83][i83].\n- [tableutils.Table][tableutils.Table] cell html can be customized by\n  overriding `get_cell_html` method.\n- [funcutils.total_ordering][funcutils.total_ordering], a\n  [functools.total_ordering][functools.total_ordering] backport for\n  python 2.6.\n- [funcutils.FunctionBuilder][funcutils.FunctionBuilder] function\n  names are now configurable.\n\n  16.4.1\n\n---\n\n_(June 14, 2016)_\n\nThis release primarily contains several [statsutils][statsutils] updates.\n\n- The biggest change was the addition of\n  [Stats.format_histogram][statsutils.Stats.format_histogram] complete\n  with Freedman bin selection and other useful options.\n- Added inter-quartile range (iqr) to [statsutils.Stats][statsutils.Stats]\n- Adding mad (median absolute deviation) to\n  [Stats.describe][statsutils.Stats.describe], since median and\n  std_dev were already there.\n\n  16.4.0\n\n---\n\n_(June 8, 2016)_\n\nanother significant release, thanks to the addition of funcutils.wraps\nand funcutils.FunctionBuilder. also iterutils.chunked speedup, and\ntbutils.ParsedException.to_string.\n\n- [funcutils.wraps][funcutils.wraps]: Just like functools.wraps, but\n  can preserve the function signature as well.\n- [funcutils.FunctionBuilder][funcutils.FunctionBuilder]: The basis\n  for [funcutils.wraps][funcutils.wraps], this full-featured type\n  enables programmatically creating functions, from scratch or from\n  existing functions. Supports all Python 2 and 3 function features.\n- [ecoutils][ecoutils]: Python 2.4 and 2.5 support.\n- [iterutils][iterutils]: optimize\n  [iterutils.chunked_iter][iterutils.chunked_iter] (2-5x faster\n  depending on runtime). [See #79][i79].\n- [tbutils][tbutils]: add the\n  [ParsedException.to_string][tbutils.ParsedException.to_string]\n  method, to convert parsed exceptions back into strings, possibly\n  after manipulation\n- switch FunctionBuilder on Python 2 to be congruent with Python 3\n  (keywords attribute renamed to varkw, preview users might have to\n  adjust)\n\n## 16.3.1\n\n_(May 24, 2016)_\n\nJust a couple of [ecoutils][ecoutils] follow-ons, removing uuid\ndependency and adding the ability to scrub identifiable data.\n\n## 16.3.0\n\n_(May 23, 2016)_\n\nBig, big update. Lots of additions, a few bugfixes.\n\n- [ecoutils][ecoutils] - Python runtime/environment profile generator\n- [timeutils.strpdate][timeutils.strpdate] - like datetime.datetime.strpdate but for date\n- [timeutils.daterange][timeutils.daterange] - like range() but for datetime.date objects\n- [strutils.parse_int_list][strutils.parse_int_list]\n  and [strutils.format_int_list][strutils.format_int_list]\n- [cacheutils][cacheutils]\n  - [cachedproperty][cacheutils.cachedproperty]\n  - [cacheutils.cachedmethod][cacheutils.cachedmethod]\n  - [cacheutils.cached][cacheutils.cached] now accepts a callable, as well.\n  - `cacheutils.make_cache_key` is now public, should others need it\n- [statsutils.Stats][statsutils.Stats] update, several new methods,\n  including [Stats.describe][statsutils.Stats.describe]\n- A few [socketutils][socketutils] platform tweaks\n- `debugutils.wrap_trace` preview\n\n  16.2.2\n\n---\n\n_(May 3, 2016)_\n\nmany small tweaks to socketutils.BufferedSocket, including optional\ninclusion of the delimiter in recv_until. also undid the enabling of bak\nfiles with AtomicSaver on windows\n\n- Small [socketutils.BufferedSocket][socketutils.BufferedSocket] tweaks\n  - make recv_until conditionally return the delimiter (by default it\n    does not). also fix a NetstringException inheritance typo\n  - [socketutils][socketutils]: rename BufferedSocket.recv_lock to\n    \\_recv_lock, and same for send_lock.\n  - add a bunch of simple passthrough methods to better fill out\n    socket's API\n  - add .fileno/.close/.shutdown to [socketutils.BufferedSocket][socketutils.BufferedSocket]\n  - added type/family/proto\n    [socketutils.BufferedSocket][socketutils.BufferedSocket]\n    passthrough properties\n  - BufferedSocket: also lock on .shutdown()\n  - adding an rbuf_unconsumed attribute for post-close debugging, per\n    @doublereedkurt's request\n  - `getsendbuffer()` returns a bytestring and `recv_size()` uses the proper\n    `._recvsize` on the first socket fetch\n- [fileutils.AtomicSaver][fileutils.AtomicSaver]: revert bak file as\n  it was causing confusion, per [nvie/pip-tools#351](https://github.com/nvie/pip-tools/issues/351)\n\n## 16.2.1\n\n_(April 29, 2016)_\n\nThis version sees the soft debut of [socketutils][socketutils], which\nincludes wrappers and tools for working with the built-in socket. A\nlot of [socketutils.BufferedSocket][socketutils.BufferedSocket] changes.\n\n- [BufferedSocket.recv_until][socketutils.BufferedSocket.recv_until] now\n  supports multibyte delimiters and also includes the delimiter in its returns.\n- Better BufferedSocket timeout discipline throughout.\n- Various BufferedSocket argument name changes, _maxbytes_ became\n  _maxsize_, _n_ became _size_, _marker_ became _delimiter_, etc.\n- [BufferedSocket][socketutils.BufferedSocket] BufferedSocket became\n  threadsafe\n- [BufferedSocket.recv][socketutils.BufferedSocket.recv] now always returns the\n  contents of the internal buffer before doing a socket call.\n- [BufferedSocket.recv_close][socketutils.BufferedSocket.recv_close] now exists\n  to receive until the sending end closes the connection.\n- Can now pass _recvsize_ to\n  [BufferedSocket][socketutils.BufferedSocket] constructor to tune\n  the size passed to the lower-level recv call.\n- [socketutils][socketutils] got documented and tested.\n\n## 16.2.0\n\n_(April 18, 2016)_\n\nadding shell args escaper-joiners to strutils (escape_shell_args,\nargs2cmd, args2sh) as well as a rare breaking fix to\n[iterutils.pairwise][iterutils.pairwise].\n\n- Argument joiners, functions to join command line arguments in\n  context-appropriate ways:\n  - [strutils.escape_shell_args][strutils.escape_shell_args]\n  - [strutils.args2cmd][strutils.args2cmd]\n  - [strutils.args2sh][strutils.args2sh]\n- BREAKING: finally fixing\n  [iterutils.pairwise][iterutils.pairwise]. pairwise used to call to\n  `chunked`, now it calls to `windowed`. `pairwise([1, 2, 3, 4])` no\n  longer returns `[(1, 2), (3, 4)]`. Instead, it returns\n  `[(1, 2), (2, 3), (3, 4)]`, which is what I always mean when I say\n  pairwise, but not what the original contributor implemented.\n- Adding a universal wheel distribution option!\n\n## 16.1.1\n\n_(March 6, 2016)_\n\nAdded [iterutils.same][iterutils.same], improvement of Windows\n[fileutils.AtomicSaver][fileutils.AtomicSaver] behavior for old\nfilesystems, bugfix on [strutils.is_uuid][strutils.is_uuid], expansion\nof [strutils.pluralize][strutils.pluralize], new trove classifiers and\ndocs improvements!\n\n- [fileutils.replace][fileutils.replace]: use bak file option for\n  win32 ReplaceFile for slightly better corner case coverage on less\n  featureful filesystems\n- [strutils.pluralize][strutils.pluralize]: Add more irregular plurals\n- [strutils.is_uuid][strutils.is_uuid]: Catch un-parsable UUIDs.\n- [iterutils.same][iterutils.same]: Return `True` when all values in\n  iterable are the same.\n\n## 16.1.0\n\n_(February 24, 2016)_\n\nThe centerpiece of this release is highly improved Windows support for\n[fileutils.atomic_save][fileutils.atomic_save] via\n[ReplaceFile](https://msdn.microsoft.com/en-us/library/windows/desktop/aa365512%28v=vs.85%29.aspx)\nsystem call. This functionality is also made available directly via\n[fileutils.replace][fileutils.replace], which is akin to Python 3.3+'s\n[os.replace][os.replace], except that `os.replace`'s approach has\n[arguably poorer behavior and atomicity](http://stupidpythonideas.blogspot.com/2014/07/getting-atomic-writes-right.html)\ncompared to `fileutils.replace`.\n\nAlso, a couple new strutils, and\n[iterutils.backoff][iterutils.backoff] grew a jitter argument.\n\n- [iterutils.backoff][iterutils.backoff] now supports start=0\n- More comprehensive [iterutils.backoff][iterutils.backoff] argument checking/validation\n- [fileutils.replace][fileutils.replace] and\n  [fileutils.atomic_rename][fileutils.atomic_rename] are now public\n  functions in [fileutils][fileutils] with cross-platform implementations ([discussion here](https://github.com/mahmoud/boltons/issues/60))\n- [tableutils.Table][tableutils.Table]s have a metadata argument and\n  attribute for miscellaneous metadata.\n- [strutils.is_ascii][strutils.is_ascii] and\n  [strutils.is_uuid][strutils.is_uuid]: About as straightforward as\n  they are handy.\n- Tox testing improvements\n\n## 16.0.1\n\n_(January 24, 2016)_\n\nDummyFile, Table.metadata, better exception handling, and in-progress\niterutils.get_path\n\n- Small format fix in [iterutils.one][iterutils.one] for None\n- Initial implementation of\n  [fileutils.DummyFile][fileutils.DummyFile], which allows for easy\n  no-op file handling without restructuring code. Sort of like a\n  dummy RLock for systems without threading, if you've seen those.\n- avoid catching BaseException in all boltons\n- better error handling in iterutils.get_path\n\n## 16.0.0\n\nOne important fix and one small but handy string function.\n\n- Fixed an [LRU][cacheutils.LRU] bug related to the 15.1.1\n  refactor. Also enhanced LRU testing with doubly-linked list\n  invariant enforcement.\n- Added [strutils.indent][strutils.indent], the counterpart to\n  [textwrap.dedent](https://docs.python.org/2/library/textwrap.html#textwrap.dedent).\n\n  15.1.1\n\n---\n\n_(November 18, 2015)_\n\nA lot of bugfixes and docfixes in 15.1.1.\n\nupdated AtomicSaver for better permissions handling, update\nBufferedSocket message sending, beta version of iterutils.get_path,\nseveral docs fixes, Stats zscore and cache bugfix, and an LRU refactor\nwith significantly improved behavior and code factoring.\n\n- Updated [fileutils.AtomicSaver][fileutils.AtomicSaver] handling of\n  filesystem permissions to be simpler and more secure. This also\n  merges `dest_perms` and `part_perms` arguments to AtomicSaver and\n  atomic_save.\n- Fix large message sending with [socketutils.BufferedSocket][socketutils.BufferedSocket]\n- [strutils.iter_splitlines][strutils.iter_splitlines] is now in the docs.\n- [cacheutils][cacheutils]: now imports RLock from the right place for python 2\n- [statsutils][statsutils]: Only `delattr` when `hasattr` in\n  [Stats.clear_cache][statsutils.Stats.clear_cache]\n- [statsutils.Stats][statsutils.Stats]: Add\n  [Stats.get_zscore][statsutils.Stats.get_zscore] to support\n  calculating the [z-score][zscore] (see also: t-statistic)\n- [cacheutils.LRU][cacheutils.LRU]: Massive refactor of the backing\n  linked list for better handling of duplicate data in the\n  cache. More aggressive locking and better `__eq__`\n\n## 15.1.0\n\n_(September 23, 2015)_\n\nReached the first release version of\n[iterutils.remap][iterutils.remap](), fully tested and\ndocumented. Also a couple of tweaks to expose the\n[iterutils.unique][iterutils.unique] docs.\n\n## 15.0.2\n\n_(September 9, 2015)_\n\na couple [dictutils.OMD][dictutils.OMD] fixes to\n[dictutils.OMD.pop][dictutils.OMD.pop] and\n[dictutils.OMD.popall][dictutils.OMD.popall] to make them consistent\nwith the docstrings. and the accompanying tests of course.\n\n- fix [dictutils.OMD.setdefault][dictutils.OMD.setdefault] to default\n  to None and not empty list, per documentation (and add a test to the\n  same effect)\n\n  15.0.1\n\n---\n\n_(August 27, 2015)_\n\n- Added\n  [OrderedMultiDict.sortedvalues()][OrderedMultiDict.sortedvalues],\n  which returns a copy of the OMD with sublists within a keyspace\n  sorted.\n- Fixing a bug in\n  [dictutils.OrderedMultiDict][dictutils.OrderedMultiDict]'s addlist\n  method that caused values to be added multiple times.\n- Fixing a [iterutils.backoff][iterutils.backoff] string identity check\n\n[OrderedMultiDict.sortedvalues]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict.sortedvalues\n\n## 15.0.0\n\n_(August 19, 2015)_\n\nFinally the 15.0 major release. All passing PRs and feature requests\nfrom the first wave addressed and closed. tzutils merged into\ntimeutils. AtomicSaver approach and API much improved. Several other\nfeatures added:\n\n- [iterutils.backoff][iterutils.backoff] and [iterutils.backoff_iter][iterutils.backoff_iter] for exponential backoff\n- [iterutils.frange][iterutils.frange] and [iterutils.xfrange][iterutils.xfrange] for floating point range generation\n- Slightly more permissive [jsonutils.JSONLIterator][jsonutils.JSONLIterator] blank line ignoring\n- [strutils.iter_splitlines][strutils.iter_splitlines] for lazily getting lines from a larger string\n- [timeutils.dt_to_timestamp][timeutils.dt_to_timestamp], per the long-lived PR [#13][i13].\n- Merged tzutils into timeutils\n- [fileutils.AtomicSaver][fileutils.AtomicSaver] rewrite and redoc\n- -teens support for [strutils.ordinalize][strutils.ordinalize]\n- made [iterutils.one][iterutils.one] consistent with [iterutils.first][iterutils.first]\n\n## 0.6.6\n\n_(July 31, 2015)_\n\nFix atomic saving open-file issue for Windows.\n\n- Patch for AtomicSaver on Windows. Full rewrite comes in 15.0.0.\n- [strutils.gunzip_bytes][strutils.gunzip_bytes] for decompressing a gzip bytestring\n\n## 0.6.5\n\n_(July 30, 2015)_\n\nBufferedSocket work, html2text, pairwise shortcut, is_container, plural\ntypo fix, [timeutils.isoparse][timeutils.isoparse], [cacheutils.ThresholdCounter][cacheutils.ThresholdCounter], and lots of\ntesting\n\n- Add [iterutils.first][iterutils.first] function\n- Add [cacheutils.ThresholdCounter][cacheutils.ThresholdCounter]\n- Add JSONL verification to jsonutils\n- Add [timeutils.isoparse][timeutils.isoparse]\n- Add [strutils.html2text][strutils.html2text] and [strutils.HTMLTextExtractor][strutils.HTMLTextExtractor]\n- Fix [strutils.pluralize][strutils.pluralize] (indeces -> indices, per [#41][i41])\n- Add [iterutils.is_container][iterutils.is_container] function\n- Fixed a small formatting bug in [tbutils.ExceptionInfo][tbutils.ExceptionInfo] that added\n  an extra 'builtins.' for builtin exceptions under python 3\n- Added tests for many modules\n- Create [iterutils.pairwise][iterutils.pairwise] shortcuts for pairwise chunks since\n  pairs (key/val) are common\n- Additional 2.6 compatibility and tests\n- Fixed CachedInstancePartial to be Python 3 friendly without breaking\n  PyPy.\n- Made formatutils Python 3 compatible\n- Rename sockutils to socketutils and other changes\n\n## 0.6.4\n\n_(May 10, 2015)_\n\nFixed multiline exception message handling in ParsedException. added\nmathutils. adding a tentative version of socketutils. fix LRU.popitem. fix\nOMD.**eq**.\n\n- Fix a bug where [dictutils.OrderedMultiDict][dictutils.OrderedMultiDict]'s **eq** would fail\n  with non-iterable objects of comparison\n- Fixed `LRU.popitem` to return a key value pair\n- Added mathutils with [mathutils.ceil][mathutils.ceil] and [mathutils.floor][mathutils.floor]\n  implementations that can search a fixed set of choices using the\n  bisect module.\n- Fix [excutils.ParsedException][excutils.ParsedException] so exception message would not start\n  with whitespace\n- Fix multiline exception messages\n- Adding [socketutils.BufferedSocket][socketutils.BufferedSocket] and [socketutils.NetstringSocket][socketutils.NetstringSocket]\n\n## 0.6.3\n\n_(April 20, 2015)_\n\nAdd typeutils, remove compat.py, make ParsedException work with eval()ed\ncode\n\n- Properly parse tracebacks with missing source. Resolves [#30][i30]\n- Tweak the docs for [typeutils.get_all_subclasses][typeutils.get_all_subclasses]\n- Moved [typeutils.make_sentinel][typeutils.make_sentinel] into typeutils and removed the\n  confusing compat module\n- Add in typeutils with modifications per the caveats of [#15][i15]\n- Added function [iterutils.one][iterutils.one]\n\n## 0.6.2\n\n_(April 11, 2015)_\n\nAdd partial_ordering, fix LRU repr and addition behavior\n\n- Add [funcutils.partial_ordering][funcutils.partial_ordering](), decorator similar to\n  functools.total_ordering()\n- Fixed [cacheutils.LRU][cacheutils.LRU]'s behavior per [#21][i21]\n- Fix [cacheutils.LRU][cacheutils.LRU] repr reversal, fixes [#20][i20]\n\n## 0.6.0\n\n_(April 10, 2015)_\n\nPython 3 support and several community bugfixes. Docs clarifications, too.\n\n- Make boltons Python 3 compatible without any external\n  dependencies. All modules are independent and work in Python 2.6,\n  2.7, 3.4, and PyPy.\n- clarify TracebackInfo.from_current() method gap, per user 'dl\\_\\_'\n  here: http://www.reddit.com/r/Python/comments/321d3o/boltons_over_100_python_utilities/\n- Fix the [cacheutils.cached][cacheutils.cached] decorator, adding a sanity test, fixes [#12][i12]\n- Fix bytes2human when builtin zip returns iterators\n- Simplified logic of [iterutils.chunked][iterutils.chunked]\n\n## 0.5.1\n\n_(April 10, 2015)_\n\nA lot of bugfixes and Python 2.6 and PyPy compatibility changes thanks\nto community contributions and encouragement.\n\n- Corrected cases where OMD was not exactly a dropin for OrderedDict\n- conditional availability of [gcutils.get_all][gcutils.get_all] based on pypy or cpython, also\n  [gcutils.is_tracked][gcutils.is_tracked] was added in 2.7, so making [gcutils.get_all][gcutils.get_all] work with 2.6\n- Made namedutils backwards compatibility for python 2.6 best effort\n- Fix invalid part_path usage in [fileutils.AtomicSaver][fileutils.AtomicSaver]\n\n## 0.5.0\n\n_(April 9, 2015)_\n\nFirst publicly released version. The major focus of this release was\ndocs, docstrings, and Read The Docs.\n\n- Cleared out **init** module for maximum independence\n- making [statsutils.median][statsutils.median] use \\_get_quantile and add [statsutils.trimean][statsutils.trimean]\n- Switching the [statsutils.Stats][statsutils.Stats] type to be more sorted-data oriented, since it's\n  only for offline analysis of unordered data\n- Made consistent multi-line string formats, as well as usage of the\n  term 'builtin' vs 'built-in' (noun vs adjective)\n- Instrumented LRI with stats tracking\n- Made [timeutils.decimal_relative_time][timeutils.decimal_relative_time] cardinalization optional\n- Removed timeutils dependency on strutils\n- Made [tbutils.TracebackInfo][tbutils.TracebackInfo] classmethods work with no arguments.\n- Renamed ParsedTB to [tbutils.ParsedException][tbutils.ParsedException]\n- Made [dictutils.OMD][dictutils.OMD] .get()/.getlist() semantics more consistent.\n- finalizing .todict() and adding .sorted() to the [dictutils.OMD][dictutils.OMD]\n- Removed osutils and adding a note about utils in general\n- Made cacheutils more consistent between LRU and LRI, adding some\n  cacheutils docs\n- Deprecate osutils, moving its contents into fileutils\n- Adding in-process statsutils2, with new DataAnalyzer and\n  get_pearson_type (not merged yet)\n\n## 0.4.2\n\n_(March 8, 2015)_\n\nMostly a dictutils API update (addlist), but also gcutils.\n\n- [dictutils.OMD][dictutils.OMD]: split out addlist() from add(), removing the multi\n  kwarg\n- adding gcutils with [gcutils.GCToggler][gcutils.GCToggler] and gc.get_all\n\n## 0.4.1\n\n_(February 26, 2015)_\n\nadding mboxutils\n\n- adding mboxutils for handy dandy /var/mail integrations like cronfed\n\n## 0.4.0\n\n_(February 23, 2015)_\n\nupdated tbutils, JSONL support, initial cacheutils, atomic writer,\nhashtags\n\n- tbutils: Changed the way exceptions are parsed out of tracebacks\n- tbutils: Guard against potential linecache issues\n- Defined/implemented [iterutils.windowed_iter][iterutils.windowed_iter] corner case behavior\n- Added from_path to [fileutils.FilePerms][fileutils.FilePerms]\n- Adding [strutils.find_hashtags][strutils.find_hashtags]\n- Add ignore patterns to [fileutils.iter_find_files][fileutils.iter_find_files]\n\n## 0.3.0\n\n_(October 19, 2014)_\n\nFirst alpha release. Practically, everything not mentioned above was\nadded in this release.\n\n- tbutils: add ContextualTracebackInfo and ContextualExceptionInfo\n- cacheutils: a few minor changes to the BasicCache\n- update tbutils with some critical bits. still need to add\n  convenience method for ExceptionInfo -> default exception print,\n  also need to add more docstrings.\n- adding initial jsonutils with JSONL support\n- added [cacheutils.LRU][cacheutils.LRU]\n- added [timeutils.parse_timedelta][timeutils.parse_timedelta]\n- fixing iteritems with multi=False in the\n  [dictutils.OrderedMultiDict][dictutils.OrderedMultiDict] (should return first key, but last\n  value not first)\n- debugutils: add pdb excepthook and [debugutils.pdb_on_signal][debugutils.pdb_on_signal]\n- add [fileutils.mkdir_p][fileutils.mkdir_p]\n- tableutils: add maxlen to table text stuff\n- fix date citation for gob's\n- adding pure-Python implementation of Gob's algorithm\n- fix object header guessing\n- namedutils: add namedtuple support\n- fix a headers bug in tableutils\n- tableutils: add a couple more do-not-recurse types, add\n  UnsupportedData exception for better recursion, insert recursive\n  entries in-line, improve 'Object' strategy heuristic\n- wrap up html tag customization and fix a related bug\n- make html configurable via class attributes\n- strengthen the max_depth check\n- InputType classes are just shorter and clearer, imo\n- new from_dict, from_list, from_object, removing old ones. almost\n  used a MetaClass for this\n- starting new table\n- only update the integer for the field being updated\n- fixing a verbalization/pronunciation issue\n- no regex for better error messages\n- being opinionated about some FilePerms things\n- adding initial version of fileutils/FilePerms\n- update formatutils\n- fix a slightly nasty namedlist bug\n- make OrderedMultiDict.get()'s default allow singulars\n- sync over ExceptionInfo\n- add from_current() classmethod with depth option to [Callpoint][tbutils.Callpoint] class\n  for easier instantiation\n- it's called a numeronym\n- add a repr to ParsedTB. A bit verbose, but better than nothing.\n- add ParsedTB, which provides the ability to parse tracebacks dumped\n  out to logs, the command line, etc.\n- improve test output and make assertion that new except hook is the\n  same as the builtin.\n- update tbutils to use the more-powerful [Callpoint][tbutils.Callpoint] type.\n- copy_function\n- partially clean up partial stuff\n- first version of the namedlist\n- fixing up namedtuple, groundwork for namedlist. humorously named\n  module.\n- embed value in cell for incremental iteration boost on OMD\n- reorganize code, add 'default' argument to poplast()\n- make key argument optional to OMD.poplast\n- rectifying inconsistent names and adjusting respective tests\n  accordingly. using smashcase because that's what builtin dict()\n  uses.\n- fix reverse; missing yield from!\n- add initial table biz\n- add get_counts\n- add [dictutils.OrderedMultiDict.get_inverted][dictutils.OrderedMultiDict.get_inverted]() for those handy reverse lookups\n- break out skip list to FastIter OMD + bench\n- add [strutils.a10n][strutils.a10n]()\n- fix a bug in [dictutils.OrderedMultiDict][dictutils.OrderedMultiDict]'s .add()\n- adding initial reimplementation of OMD\n- adding some tests to dictutils\n- update boltons formatutils to match what's going on in lithoxyl\n- remove infer_pos_args() from strutils (already in formatutils)\n- add formatutils to boltons\n- fix a potential infinite recursion in LocalTZ\n- use more explicit names for Local/Constant tzinfo types\n- add a basic but handy file finder\n- add infer_positional_args() to strutils (from lithoxyl)\n- split BasicCache out of dictutils into cacheutils\n- update median calculation slightly\n- add appropriate stacklevel to deprutils warning\n- add an initial version of deprutils (basic utils for facilitating\n  deprecation)\n- add bytes2human\n- first version of some basic timezone utils which came in handy for a\n  train scheduling application I wrote (etavta)\n- reorder imports for pep8\n- redo plain-english relative_time() to have a decimal rounding factor\n  and handle future dates\n- swap the order of cardinalize()'s arguments after intuiting the\n  wrong order a couple times. gotta be consistent, this isn't PHP.\n- a weird little relative time approach\n- add total_seconds() implementation for Python <2.7, rename\n  relative_datetime to relative_time\n- add a relative datetime function in a new module: timeutils\n- a little more transparency with orderedmultidict's maphistory\n- add a test for BasicCache\n- add the super simple BasicCache, a size-limited defaultdict-like\n  thing\n- add a cheesy little splay list construct that can be used for splay-\n  like manual reordering for eventual optimization\n- traceback utils, first draft\n- add [strutils.strip_ansi][strutils.strip_ansi] (need to make a cliutils or something)\n- add ansi strip task\n- mess with list tuning\n- add ordinalize()\n- add **all** to statsutils\n- add more stats docs and doctests\n- add some stats functions\n- add unit_len()\n- add pluralize/singularize/cardinalize to strutils\n- add **all**s all around, clean up imports a bit\n- adding license\n- add sorted queue type, make it the default\n- fix little bug in insert\n- inheriting from list necessitates overriding the deprecated **get-,\n  **set-, and \\_\\_del- slice methods\n- hacky refactor to have a BasePriorityQueue to make room for\n  SortedPriorityQueue with peek_n, etc.\n- add a little docstring and update sort method in BarrelList\n- add HeapPriorityQueue\n- tidy up listutils comments and imports\n- move treeutils out of boltons since I don't really think a pure\n  python version actually adds much. i'll make an academic one-off\n  repo for less practical data structure experiments like that.\n- inherit from list\n- add reverse() to blist\n- add index() to blist\n- cheesy **setitem**() for blist\n- add **delitem**() to BarrelList\n- change the way the in-place sort works with just one list\n- tune the list size a bit\n- add slicing to BarrelList\n- add initial version of BarrelList, a pure-python b-list-y thing to\n  approximate O(log(n)) behavior by multiplexing the fast O(n) list\n  operations\n- switch to new dead index interval approach; the IndexedSet is about\n  half the speed of a list in the ultra-pathological case of random\n  popping on the low end of the IndexedSet\n- made BisectTree's get() defaulting work a bit more like a dict's\n- added get_adjacent and miscellaneous to BisectTree\n- added a default name and always-falsy **nonzero** to Sentinel\n- add pop() for BisectTree and export the generic Tree\n- make a bisect tree, because O(n) is still pretttttty fast up to\n  about 100k items\n- add a little hack to chunked/chunked_iter to make it work nicely\n  with strings\n- tidy up ki_vs_vi_lrh usage just a titch\n- revamp indices behavior (key_size and value_size)\n- switch to new multi-key mode\n- pretty much done porting insert, delete, balance (the basic\n  operations)\n- switch to negative refs, arbitrary length nodes\n- add sentinel utility thing\n- add .index() for list compat, updated exception messages, and added\n  a silly test to show off slicing and indexing\n- add slicing support and .clear()\n- remove ifilter dependency (using generator expression)\n- add .reverse and .sort() to IndexedSet, fix bisection related bug\n  exposing MISSING (insort requested index, not real_index)\n- pretty much all fundy IndexedSet bugs hit and fixed, looks like\n- IndexedSet getting much closer\n- initial rough draft of IndexedSet with a short docstring and a bunch\n  of fixes already (still not workin tho)\n- add dictutils (OrderedMultiDict)\n- it was a long time coming, but I'm finally halfway happy with this\n  wrapped exception\n- add uniqueification capabilities\n- go back to using **new** and positional arguments\n- exception wrapping green path mostly working\n- working on a wrapping exception mixin thing for less lossy\n  nonraising.\n- add asciify and update slugify with ascii flag\n- add basic docs and doctests to strutils\n- scratch that, regexes still faster\n- add under2camel, camel2under, and slugify (and split_punct_ws, which\n  is much faster than re-based punctuation splitting)\n- python3-compatible doctest for bucketize_bool\n- bucketize and bucketize_bool, with docs\n- add examples to chunked and chunked_iter\n- update split() docs with more examples.\n- [iterutils.chunked_iter][iterutils.chunked_iter] and [iterutils.chunked][iterutils.chunked]\n- [iterutils.split][iterutils.split] and [iterutils.split_iter][iterutils.split_iter] work\n\n[os.replace]: https://docs.python.org/3/library/os.html#os.replace\n[functools.total_ordering]: https://docs.python.org/2/library/functools.html#functools.total_ordering\n[StringIO]: https://docs.python.org/2/library/stringio.html\n[zscore]: https://en.wikipedia.org/wiki/Standard_score\n[cacheutils]: http://boltons.readthedocs.org/en/latest/cacheutils.html\n[cacheutils.LRI]: http://boltons.readthedocs.org/en/latest/cacheutils.html#boltons.cacheutils.LRI\n[cacheutils.LRU]: http://boltons.readthedocs.org/en/latest/cacheutils.html#boltons.cacheutils.LRU\n[cacheutils.ThresholdCounter]: http://boltons.readthedocs.org/en/latest/cacheutils.html#boltons.cacheutils.ThresholdCounter\n[cacheutils.cached]: http://boltons.readthedocs.org/en/latest/cacheutils.html#boltons.cacheutils.cached\n[cacheutils.cachedmethod]: http://boltons.readthedocs.org/en/latest/cacheutils.html#boltons.cacheutils.cachedmethod\n[cacheutils.cachedproperty]: http://boltons.readthedocs.org/en/latest/cacheutils.html#boltons.cacheutils.cachedproperty\n[debugutils.pdb_on_signal]: http://boltons.readthedocs.org/en/latest/debugutils.html#boltons.debugutils.pdb_on_signal\n[dictutils]: http://boltons.readthedocs.org/en/latest/dictutils.html\n[dictutils.OMD]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OMD\n[dictutils.OMD.pop]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict.pop\n[dictutils.OMD.popall]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict.popall\n[dictutils.OMD.setdefault]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict.setdefault\n[dictutils.OrderedMultiDict]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict\n[dictutils.OrderedMultiDict.get_inverted]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict.get_inverted\n[dictutils.OneToOne]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OneToOne\n[dictutils.ManyToMany]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.ManyToMany\n[dictutils.FrozenDict]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.FrozenDict\n[dictutils.subdict]: http://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.subdict\n[ecoutils]: http://boltons.readthedocs.org/en/latest/ecoutils.html\n[excutils.ParsedException]: http://boltons.readthedocs.org/en/latest/excutils.html#boltons.excutils.ParsedException\n[fileutils]: http://boltons.readthedocs.org/en/latest/fileutils.html\n[fileutils.replace]: http://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.replace\n[fileutils.atomic_rename]: http://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.atomic_rename\n[fileutils.atomic_save]: http://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.atomic_save\n[fileutils.AtomicSaver]: http://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.AtomicSaver\n[fileutils.FilePerms]: http://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.FilePerms\n[fileutils.iter_find_files]: http://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.iter_find_files\n[fileutils.mkdir_p]: http://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.mkdir_p\n[fileutils.DummyFile]: http://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.DummyFile\n[formatutils]: http://boltons.readthedocs.org/en/latest/formatutils.html\n[formatutils.DeferredValue]: http://boltons.readthedocs.org/en/latest/formatutils.html#boltons.fileutils.DeferredValue\n[funcutils.FunctionBuilder]: http://boltons.readthedocs.org/en/latest/funcutils.html#boltons.funcutils.FunctionBuilder\n[funcutils.FunctionBuilder.remove_arg]: https://boltons.readthedocs.io/en/latest/funcutils.html#boltons.funcutils.FunctionBuilder.remove_arg\n[funcutils.FunctionBuilder.add_arg]: https://boltons.readthedocs.io/en/latest/funcutils.html#boltons.funcutils.FunctionBuilder.add_arg\n[funcutils.partial_ordering]: http://boltons.readthedocs.org/en/latest/funcutils.html#boltons.funcutils.partial_ordering\n[funcutils.total_ordering]: http://boltons.readthedocs.org/en/latest/funcutils.html#boltons.funcutils.total_ordering\n[funcutils.update_wrapper]: http://boltons.readthedocs.org/en/latest/funcutils.html#boltons.funcutils.update_wrapper\n[funcutils.wraps]: http://boltons.readthedocs.org/en/latest/funcutils.html#boltons.funcutils.wraps\n[gcutils.GCToggler]: http://boltons.readthedocs.org/en/latest/gcutils.html#boltons.gcutils.GCToggler\n[gcutils.get_all]: http://boltons.readthedocs.org/en/latest/gcutils.html#boltons.gcutils.get_all\n[gcutils.is_tracked]: http://boltons.readthedocs.org/en/latest/gcutils.html#boltons.gcutils.is_tracked\n[i12]: https://github.com/mahmoud/boltons/issues/12\n[i13]: https://github.com/mahmoud/boltons/issues/13\n[i15]: https://github.com/mahmoud/boltons/issues/15\n[i20]: https://github.com/mahmoud/boltons/issues/20\n[i21]: https://github.com/mahmoud/boltons/issues/21\n[i30]: https://github.com/mahmoud/boltons/issues/30\n[i41]: https://github.com/mahmoud/boltons/issues/41\n[i79]: https://github.com/mahmoud/boltons/pull/79\n[i83]: https://github.com/mahmoud/boltons/issues/83\n[i84]: https://github.com/mahmoud/boltons/issues/84\n[i86]: https://github.com/mahmoud/boltons/issues/86\n[i128]: https://github.com/mahmoud/boltons/issues/128\n[i135]: https://github.com/mahmoud/boltons/issues/135\n[i150]: https://github.com/mahmoud/boltons/issues/150\n[i161]: https://github.com/mahmoud/boltons/issues/161\n[i162]: https://github.com/mahmoud/boltons/issues/162\n[i164]: https://github.com/mahmoud/boltons/issues/164\n[i294]: https://github.com/mahmoud/boltons/issues/294\n[i302]: https://github.com/mahmoud/boltons/issues/302\n[i303]: https://github.com/mahmoud/boltons/issues/303\n[i305]: https://github.com/mahmoud/boltons/issues/305\n[i312]: https://github.com/mahmoud/boltons/issues/312\n[i315]: https://github.com/mahmoud/boltons/issues/315\n[i320]: https://github.com/mahmoud/boltons/issues/320\n[i323]: https://github.com/mahmoud/boltons/issues/323\n[i326]: https://github.com/mahmoud/boltons/issues/326\n[i327]: https://github.com/mahmoud/boltons/issues/327\n[ioutils]: http://boltons.readthedocs.org/en/latest/ioutils.html\n[ioutils.MultiFileReader]: http://boltons.readthedocs.org/en/latest/ioutils.html#boltons.ioutils.MultiFileReader\n[ioutils.SpooledBytesIO]: http://boltons.readthedocs.org/en/latest/ioutils.html#boltons.ioutils.SpooledBytesIO\n[ioutils.SpooledStringIO]: http://boltons.readthedocs.org/en/latest/ioutils.html#boltons.ioutils.SpooledStringIO\n[iterutils]: http://boltons.readthedocs.org/en/latest/iterutils.html\n[iterutils.backoff]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.backoff\n[iterutils.backoff_iter]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.backoff_iter\n[iterutils.chunked]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.chunked\n[iterutils.chunked_iter]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.chunked_iter\n[iterutils.chunk_ranges]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.chunk_ranges\n[iterutils.first]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.first\n[iterutils.flatten]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.flatten\n[iterutils.flatten_iter]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.flatten_iter\n[iterutils.backoff]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.backoff\n[iterutils.frange]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.frange\n[iterutils.GUIDerator]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.GUIDerator\n[iterutils.SequentialGUIDerator]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.SequentialGUIDerator\n[iterutils.is_container]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.is_container\n[iterutils.bucketize]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.bucketize\n[iterutils.one]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.one\n[iterutils.pairwise]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.pairwise\n[iterutils.same]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.same\n[iterutils.remap]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.remap\n[iterutils.research]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.research\n[iterutils.soft_sorted]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.soft_sorted\n[iterutils.untyped_sorted]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.untyped_sorted\n[iterutils.split]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.split\n[iterutils.split_iter]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.split_iter\n[iterutils.strip]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.strip\n[iterutils.rstrip]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.rstrip\n[iterutils.lstrip]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.lstrip\n[iterutils.unique]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.unique\n[iterutils.windowed_iter]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.windowed_iter\n[iterutils.xfrange]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.xfrange\n[jsonutils.JSONLIterator]: http://boltons.readthedocs.org/en/latest/jsonutils.html#boltons.jsonutils.JSONLIterator\n[mathutils.Bits]: http://boltons.readthedocs.org/en/latest/mathutils.html#boltons.mathutils.Bits\n[mathutils.ceil]: http://boltons.readthedocs.org/en/latest/mathutils.html#boltons.mathutils.ceil\n[mathutils.floor]: http://boltons.readthedocs.org/en/latest/mathutils.html#boltons.mathutils.floor\n[mathutils.clamp]: http://boltons.readthedocs.org/en/latest/mathutils.html#boltons.mathutils.clamp\n[queueutils]: http://boltons.readthedocs.org/en/latest/queueutils.html\n[setutils.complement]: http://boltons.readthedocs.org/en/latest/setutils.html#boltons.setutils.complement\n[IndexedSet]: http://boltons.readthedocs.org/en/latest/setutils.html#boltons.setutils.IndexedSet\n[socketutils]: http://boltons.readthedocs.org/en/latest/socketutils.html\n[socketutils.BufferedSocket]: http://boltons.readthedocs.org/en/latest/socketutils.html#boltons.socketutils.BufferedSocket\n[socketutils.BufferedSocket.recv]: http://boltons.readthedocs.org/en/latest/socketutils.html#boltons.socketutils.BufferedSocket.recv\n[socketutils.BufferedSocket.recv_until]: http://boltons.readthedocs.org/en/latest/socketutils.html#boltons.socketutils.BufferedSocket.recv_until\n[socketutils.BufferedSocket.recv_close]: http://boltons.readthedocs.org/en/latest/socketutils.html#boltons.socketutils.BufferedSocket.recv_close\n[socketutils.NetstringSocket]: http://boltons.readthedocs.org/en/latest/socketutils.html#boltons.socketutils.NetstringSocket\n[statsutils]: http://boltons.readthedocs.org/en/latest/statsutils.html\n[statsutils.Stats]: http://boltons.readthedocs.org/en/latest/statsutils.html#boltons.statsutils.Stats\n[statsutils.Stats.clear_cache]: http://boltons.readthedocs.org/en/latest/statsutils.html#boltons.statsutils.Stats.clear_cache\n[statsutils.Stats.describe]: http://boltons.readthedocs.org/en/latest/statsutils.html#boltons.statsutils.Stats.describe\n[statsutils.Stats.format_histogram]: http://boltons.readthedocs.org/en/latest/statsutils.html#boltons.statsutils.Stats.format_histogram\n[statsutils.Stats.get_zscore]: http://boltons.readthedocs.org/en/latest/statsutils.html#boltons.statsutils.Stats.get_zscore\n[statsutils.median]: http://boltons.readthedocs.org/en/latest/statsutils.html#boltons.statsutils.median\n[statsutils.trimean]: http://boltons.readthedocs.org/en/latest/statsutils.html#boltons.statsutils.trimean\n[strutils]: http://boltons.readthedocs.org/en/latest/strutils.html\n[strutils.HTMLTextExtractor]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.HTMLTextExtractor\n[strutils.a10n]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.a10n\n[strutils.args2cmd]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.args2cmd\n[strutils.args2sh]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.args2sh\n[strutils.escape_shell_args]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.escape_shell_args\n[strutils.find_hashtags]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.find_hashtags\n[strutils.gzip_bytes]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.gzip_bytes\n[strutils.gunzip_bytes]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.gunzip_bytes\n[strutils.html2text]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.html2text\n[strutils.indent]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.indent\n[strutils.iter_splitlines]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.iter_splitlines\n[strutils.ordinalize]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.ordinalize\n[strutils.pluralize]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.pluralize\n[strutils.is_ascii]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.is_ascii\n[strutils.is_uuid]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.is_uuid\n[strutils.parse_int_list]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.parse_int_list\n[strutils.format_int_list]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.format_int_list\n[strutils.int_list_complement]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.int_list_complement\n[strutils.int_list_to_int_tuples]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.int_list_to_int_tuples\n[strutils.slugify]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.slugify\n[strutils.strip_ansi]: http://boltons.readthedocs.org/en/latest/strutils.html#boltons.strutils.strip_ansi\n[tableutils]: http://boltons.readthedocs.org/en/latest/tableutils.html\n[tableutils.Table]: http://boltons.readthedocs.org/en/latest/tableutils.html#boltons.tableutils.Table\n[tbutils]: http://boltons.readthedocs.org/en/latest/tbutils.html\n[tbutils.Callpoint]: http://boltons.readthedocs.org/en/latest/tbutils.html#boltons.tbutils.Callpoint\n[tbutils.ExceptionInfo]: http://boltons.readthedocs.org/en/latest/tbutils.html#boltons.tbutils.ExceptionInfo\n[tbutils.ParsedException]: http://boltons.readthedocs.org/en/latest/tbutils.html#boltons.tbutils.ParsedException\n[tbutils.ParsedException.to_string]: http://boltons.readthedocs.org/en/latest/tbutils.html#boltons.tbutils.ParsedException.to_string\n[tbutils.TracebackInfo]: http://boltons.readthedocs.org/en/latest/tbutils.html#boltons.tbutils.TracebackInfo\n[timeutils.daterange]: http://boltons.readthedocs.org/en/latest/timeutils.html#boltons.timeutils.daterange\n[timeutils.decimal_relative_time]: http://boltons.readthedocs.org/en/latest/timeutils.html#boltons.timeutils.decimal_relative_time\n[timeutils.dt_to_timestamp]: http://boltons.readthedocs.org/en/latest/timeutils.html#boltons.timeutils.dt_to_timestamp\n[timeutils.isoparse]: http://boltons.readthedocs.org/en/latest/timeutils.html#boltons.timeutils.isoparse\n[timeutils.parse_timedelta]: http://boltons.readthedocs.org/en/latest/timeutils.html#boltons.timeutils.parse_timedelta\n[timeutils.strpdate]: http://boltons.readthedocs.org/en/latest/timeutils.html#boltons.timeutils.strpdate\n[typeutils.get_all_subclasses]: http://boltons.readthedocs.org/en/latest/typeutils.html#boltons.typeutils.get_all_subclasses\n[typeutils.make_sentinel]: http://boltons.readthedocs.org/en/latest/typeutils.html#boltons.typeutils.make_sentinel\n[urlutils]: http://boltons.readthedocs.org/en/latest/urlutils.html\n[urlutils.SCHEME_PORT_MAP]: http://boltons.readthedocs.org/en/latest/urlutils.html#boltons.urlutils.SCHEME_PORT_MAP\n[urlutils.find_all_links]: http://boltons.readthedocs.org/en/latest/urlutils.html#boltons.urlutils.find_all_links\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4619140625,
          "content": "Copyright (c) 2013, Mahmoud Hashemi\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions are\r\nmet:\r\n\r\n    * Redistributions of source code must retain the above copyright\r\n      notice, this list of conditions and the following disclaimer.\r\n\r\n    * Redistributions in binary form must reproduce the above\r\n      copyright notice, this list of conditions and the following\r\n      disclaimer in the documentation and/or other materials provided\r\n      with the distribution.\r\n\r\n    * The names of the contributors may not be used to endorse or\r\n      promote products derived from this software without specific\r\n      prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.22265625,
          "content": "# Boltons\n\n*boltons should be builtins.*\n\n<a href=\"https://boltons.readthedocs.io/en/latest/\"><img src=\"https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat\"></a>\n<a href=\"https://pypi.python.org/pypi/boltons\"><img src=\"https://img.shields.io/pypi/v/boltons.svg\"></a>\n<a href=\"https://anaconda.org/conda-forge/boltons\"><img src=\"https://img.shields.io/conda/vn/conda-forge/boltons.svg\"></a>\n<a href=\"https://ports.macports.org/port/py-boltons/summary\"><img src=\"https://repology.org/badge/version-for-repo/macports/python:boltons.svg?header=MacPorts\"></a>\n<a href=\"https://pypi.python.org/pypi/boltons\"><img src=\"https://img.shields.io/pypi/pyversions/boltons.svg\"></a>\n<a href=\"http://calver.org\"><img src=\"https://img.shields.io/badge/calver-YY.MINOR.MICRO-22bfda.svg\"></a>\n\n**Boltons** is a set of over 230 BSD-licensed, pure-Python utilities\nin the same spirit as — and yet conspicuously missing from —\n[the standard library][stdlib], including:\n\n  * [Atomic file saving][atomic], bolted on with [fileutils][fileutils]\n  * A highly-optimized [OrderedMultiDict][omd], in [dictutils][dictutils]\n  * *Two* types of [PriorityQueue][pq], in [queueutils][queueutils]\n  * [Chunked][chunked] and [windowed][windowed] iteration, in [iterutils][iterutils]\n  * Recursive data structure [iteration and merging][remap], with [iterutils.remap][iterutils.remap]\n  * Exponential backoff functionality, including jitter, through [iterutils.backoff][iterutils.backoff]\n  * A full-featured [TracebackInfo][tbinfo] type, for representing stack traces,\n    in [tbutils][tbutils]\n\n**[Full and extensive docs are available on Read The Docs.][rtd]** See\nwhat's new [by checking the CHANGELOG][changelog].\n\nBoltons is tested against Python 3.7-3.13, as well as PyPy3.\n\n[stdlib]: https://docs.python.org/3/library/index.html\n[rtd]: https://boltons.readthedocs.org/en/latest/\n[changelog]: https://github.com/mahmoud/boltons/blob/master/CHANGELOG.md\n\n[atomic]: https://boltons.readthedocs.org/en/latest/fileutils.html#boltons.fileutils.atomic_save\n[omd]: https://boltons.readthedocs.org/en/latest/dictutils.html#boltons.dictutils.OrderedMultiDict\n[pq]: https://boltons.readthedocs.org/en/latest/queueutils.html#boltons.queueutils.PriorityQueue\n[chunked]: https://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.chunked\n[windowed]: https://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.windowed\n[tbinfo]: https://boltons.readthedocs.org/en/latest/tbutils.html#boltons.tbutils.TracebackInfo\n\n[fileutils]: https://boltons.readthedocs.org/en/latest/fileutils.html#module-boltons.fileutils\n[ioutils]: https://boltons.readthedocs.org/en/latest/ioutils.html#module-boltons.ioutils\n[dictutils]: https://boltons.readthedocs.org/en/latest/dictutils.html#module-boltons.dictutils\n[queueutils]: https://boltons.readthedocs.org/en/latest/queueutils.html#module-boltons.queueutils\n[iterutils]: https://boltons.readthedocs.org/en/latest/iterutils.html#module-boltons.iterutils\n[iterutils.remap]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.remap\n[iterutils.backoff]: http://boltons.readthedocs.org/en/latest/iterutils.html#boltons.iterutils.backoff\n[tbutils]: https://boltons.readthedocs.org/en/latest/tbutils.html#module-boltons.tbutils\n\n[remap]: http://sedimental.org/remap.html\n\n## Installation\n\nBoltons can be added to a project in a few ways. There's the obvious one:\n\n```bash\npip install boltons\n```\nOn macOS, it can also be installed via [MacPorts](https://ports.macports.org/port/py-boltons/summary):\n\n```bash\nsudo port install py-boltons\n```\n\n\nThen, [thanks to PyPI][boltons_pypi], dozens of boltons are just an import away:\n\n```python\nfrom boltons.cacheutils import LRU\nmy_cache = LRU()\n```\n\nHowever, due to the nature of utilities, application developers might\nwant to consider other options, including vendorization of individual\nmodules into a project. Boltons is pure-Python and has no\ndependencies. If the whole project is too big, each module is\nindependent, and can be copied directly into a project. See the\n[Integration][integration] section of the docs for more details.\n\n[boltons_pypi]: https://pypi.python.org/pypi/boltons\n[integration]: https://boltons.readthedocs.org/en/latest/architecture.html#integration\n\n## Third-party packages\n\nThe majority of boltons strive to be \"good enough\" for a wide range of\nbasic uses, leaving advanced use cases to Python's [myriad specialized\n3rd-party libraries][pypi]. In many cases the respective ``boltons`` module\nwill describe 3rd-party alternatives worth investigating when use\ncases outgrow `boltons`. If you've found a natural \"next-step\"\nlibrary worth mentioning, see the next section!\n\n[pypi]: https://pypi.python.org/pypi\n\n## Gaps\n\nFound something missing in the standard library that should be in\n`boltons`? Found something missing in `boltons`? First, take a\nmoment to read the very brief [architecture statement][architecture] to make\nsure the functionality would be a good fit.\n\nThen, if you are very motivated, submit [a Pull Request][prs]. Otherwise,\nsubmit a short feature request on [the Issues page][issues], and we will\nfigure something out.\n\n[architecture]: https://boltons.readthedocs.org/en/latest/architecture.html\n[issues]: https://github.com/mahmoud/boltons/issues\n[prs]: https://github.com/mahmoud/boltons/pulls\n"
        },
        {
          "name": "TODO.rst",
          "type": "blob",
          "size": 2.4453125,
          "content": "TODO\n====\n\n@tlog.wrap('critical', 'update campaign', verbose=True, inject_as='_act')\ndef update(self, _act, force=False):\n\nResulted in:\n\nTraceback (most recent call last):\nFile \"/home/mahmoud/virtualenvs/pacetrack/bin/pt\", line 11, in <module>\nload_entry_point('pacetrack', 'console_scripts', 'pt')()\nFile \"/home/mahmoud/hatnote/pacetrack/pacetrack/cli.py\", line 131, in main\ncmd.run()\nFile \"/home/mahmoud/projects/face/face/command.py\", line 403, in run\nret = inject(wrapped, kwargs)\nFile \"/home/mahmoud/projects/face/face/sinter.py\", line 59, in inject\nreturn f(**kwargs)\nFile \"<sinter generated next_ d43eb353c6855dfc>\", line 6, in next_\nFile \"/home/mahmoud/hatnote/pacetrack/pacetrack/cli.py\", line 138, in mw_cli_log\nreturn next_()\nFile \"<sinter generated next_ d43eb353c6855dfc>\", line 4, in next_\nFile \"/home/mahmoud/hatnote/pacetrack/pacetrack/cli.py\", line 89, in update\nreturn update_all(campaign_ids=posargs_, force=force, jsub=jsub, args_=args_)\nFile \"/home/mahmoud/hatnote/pacetrack/pacetrack/cli.py\", line 73, in update_all\ncur_pt = load_and_update_campaign(campaign_dir, force=force)\nFile \"/home/mahmoud/hatnote/pacetrack/pacetrack/update.py\", line 622, in load_and_update_campaign\nptc.update(force=force)\nFile \"<boltons.funcutils.FunctionBuilder-4>\", line 2, in update\nFile \"/home/mahmoud/virtualenvs/pacetrack/local/lib/python2.7/site-packages/lithoxyl/logger.py\", line 298, in logged_func\nreturn func_to_log(*a, **kw)\nTypeError: update() got multiple values for keyword argument '_act'\n\ndictutils\n---------\n\n- autoindexing list for dictionaries. As records get added, uses a\n  basic proportion-based heuristic to create subdictionaries as\n  indexes over the same data. Maybe automatically does a full-scan\n  option too.\n- non-overwriting version of dict.update()\n\njsonutils\n---------\n\n* jsonl ignore blank lines\n* jsonl add line number to error message\n\nmisc?\n-----\n\n- wrap_trace debug utility. Takes an object, looks at its dir, wraps\n  everything callable, with a hook. Needs an enable/disable flag.\n  - get/set/call/return/exception\n  - __slots__\n- Top/Bottom singletons (greater than and less than everything)\n\n\ncliutils\n--------\n\n- progress bar\n- confirmation prompt (e.g., \"Question? (Y/n)\")\n\ntbutils\n-------\n\n- fold repeated frames (recursive calls)\n\nstatsutils\n----------\n\n- dirty bit auto clears cache on property access\n- geometric mean (2 ** sum(log(a, b, ...))\n\nurlutils\n--------\n\n* improve usage of ``encoding`` arg (in parse_qsl for example)\n* normalize unicode on input?\n"
        },
        {
          "name": "boltons",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.033203125,
          "content": "[project]\nname = \"boltons\"\nversion = \"24.1.1dev\"\ndescription = \"When they're not builtins, they're boltons.\"\nreadme = \"README.md\"\nauthors = [{ name = \"Mahmoud Hashemi\", email = \"mahmoud@hatnote.com\" }]\nclassifiers = [\n    # See: https://pypi.python.org/pypi?:action=list_classifiers\n    \"Topic :: Utilities\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Topic :: Software Development :: Libraries\",\n    \"Development Status :: 5 - Production/Stable\",\n    \"Operating System :: OS Independent\",\n    # List of python versions and their support status:\n    # https://en.wikipedia.org/wiki/CPython#Version_history\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.7\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n]\nrequires-python = \">=3.7\"\nlicense = { file = \"LICENSE\" }\n\n[project.urls]\nHomepage = \"https://github.com/mahmoud/boltons\"\n\n[tool.flit.sdist]\ninclude = [\"doc/\", \"tests/\", \"CHANGELOG.md\", \"tox.ini\"]\nexclude = [\"doc/_build\"]\n\n[tool.pytest.ini_options]\ndoctest_optionflags = [\n    \"ALLOW_UNICODE\",\n    \"ELLIPSIS\",\n    \"IGNORE_EXCEPTION_DETAIL\",\n    \"NORMALIZE_WHITESPACE\",\n]\n\n[build-system]\nrequires = [\"flit_core >=3.2,<4\"]\nbuild-backend = \"flit_core.buildapi\"\n\n# A brief checklist for release:\n# * tox\n# * git commit (if applicable)\n# * Bump pyproject.toml version off of -dev\n# * git commit -a -m \"bump version for x.y.z release\"\n# * rm -rf dist/*\n# * python -m build\n# * twine upload dist/*\n# * bump docs/conf.py version\n# * git commit\n# * git tag -a x.y.z -m \"brief summary\"\n# * write CHANGELOG\n# * git commit\n# * bump pyproject.toml version onto n+1 dev\n# * git commit\n# * git push\n"
        },
        {
          "name": "requirements-test.txt",
          "type": "blob",
          "size": 0.119140625,
          "content": "coverage==7.2.7\npytest==7.4.4; python_version < \"3.8\"\npytest==8.3.4; python_version >= \"3.8\"\npytest-cov==4.1.0\ntox==4.8.0\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0341796875,
          "content": "[metadata]\nlicense_files = LICENSE\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.203125,
          "content": "[tox]\nenvlist = py37,py39,py310,py311,py312,py313,pypy3\n[testenv]\nchangedir = .tox\ndeps = -rrequirements-test.txt\ncommands = pytest --doctest-modules {envsitepackagesdir}/boltons {toxinidir}/tests {posargs}\n\n"
        }
      ]
    }
  ]
}