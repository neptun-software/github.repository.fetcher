{
  "metadata": {
    "timestamp": 1736560734541,
    "page": 412,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "flask-restful/flask-restful",
      "stars": 6864,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.052734375,
          "content": "[run]\nbranch = true\nomit =\n    */venv/*\n    */tests/*\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3701171875,
          "content": "*.py[cod]\nenv\n\n# C extensions\n*.so\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\nlib\nlib64\n.cache\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\nhtmlcov/\n.tox\nnosetests.xml\n\n#Translations\n*.mo\n\n#Mr Developer\n.mr.developer.cfg\ncover\n\n#Docs\ndocs/_build\n\n#Pycharm\n.idea\n\n#Eclipse/Aptana\n.project\n.pydevproject\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.62109375,
          "content": "language: python\ncache: pip\nmatrix:\n  include:\n    - python: 2.7\n      dist: trusty\n      env: FLASK=0.10\n    - python: 2.7\n      dist: trusty\n      env: FLASK=0.12\n    - python: 2.7\n      dist: trusty\n      env: FLASK=1.0.2\n    - python: 3.4\n      dist: trusty\n      env: FLASK=0.10\n    - python: 3.4\n      dist: trusty\n      env: FLASK=0.12\n    - python: 3.4\n      dist: trusty\n      env: FLASK=1.0.2\n    - python: 3.5\n      dist: trusty\n      env: FLASK=0.10\n    - python: 3.5\n      dist: trusty\n      env: FLASK=0.12\n    - python: 3.5\n      dist: trusty\n      env: FLASK=1.0.2\n    - python: 3.6\n      dist: trusty\n      env: FLASK=0.10\n    - python: 3.6\n      dist: trusty\n      env: FLASK=0.12\n    - python: 3.6\n      dist: trusty\n      env: FLASK=1.0.2\n    - python: 3.7\n      dist: xenial\n      env: FLASK=0.10\n    - python: 3.7\n      dist: xenial\n      env: FLASK=0.12\n    - python: 3.7\n      dist: xenial\n      env: FLASK=1.0.2\n    - python: 3.8\n      dist: xenial\n      env: FLASK=0.10\n    - python: 3.8\n      dist: xenial\n      env: FLASK=0.12\n    - python: 3.8\n      dist: xenial\n      env: FLASK=1.0.2\n    - python: pypy\n      dist: trusty\n      env: FLASK=0.10\n    - python: pypy\n      dist: trusty\n      env: FLASK=0.12\n    - python: pypy\n      dist: trusty\n      env: FLASK=1.0.2\n    - python: pypy3\n      dist: trusty\n      env: FLASK=0.10\n    - python: pypy3\n      dist: trusty\n      env: FLASK=0.12\n    - python: pypy3\n      dist: trusty\n      env: FLASK=1.0.2\n\ninstall:\n  - pip install -q Flask==$FLASK\n  - pip install coveralls\nscript: make ci\nafter_success: coveralls\n\nnotifications:\n  email:\n    on_success: never\n    on_failure: change\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 1.9453125,
          "content": "Authors\n=======\n\nA huge thanks to all of our contributors:\n\n- Adam Chainz\n- Alec Nikolas Reiter\n- Alex Gaynor\n- Alex M\n- Alex Morken\n- Andrew Dunham\n- Andriy Yurchuk\n- Anil Kulkarni\n- Antonio Dourado\n- Antonio Herraiz\n- Ares Ou\n- Artur Rodrigues\n- Axel Haustant\n- Belousow Makc\n- Benjamin Dopplinger\n- Bennett, Bryan\n- Bohan Zhang\n- Bryan Bennett\n- Bulat Bochkariov\n- Cameron Brandon White\n- Catherine Devlin\n- Dan Quirk\n- Daniele Esposti\n- Dario Bertini\n- David Arnold\n- David Baumgold\n- David Boucha\n- David Crawford\n- Dimitris Theodorou\n- Doug Black\n- Evan Dale Aromin\n- Eyal Levin\n- Francesco Della Vedova\n- Frank Stratton\n- Garret Raziel\n- Gary Belvin\n- Gilles Dartiguelongue\n- Giorgio Salluzzo\n- Guillaume BINET\n- Heston Liebowitz\n- Hu WQ\n- Jacob Magnusson\n- James Booth\n- James Ogura\n- James Turk\n- Jeff Widman\n- Joakim Ekberg\n- Johannes\n- Jordan Yelloz\n- Josh Friend\n- Joshua C. Randall\n- Joshua Randall\n- José Fernández Ramos\n- Juan Rossi\n- JuneHyeon Bae\n- Kamil Gałuszka\n- Kevin Burke\n- Kevin Deldycke\n- Kevin Funk\n- Kyle Conroy\n- Lance Ingle\n- Lars Holm Nielsen\n- Luiz Armesto\n- Malthe Borch\n- Marek Hlobil\n- Matt Wright\n- Max Mautner\n- Max Peterson\n- Maxim\n- Michael Hwang\n- Michael Newman\n- Miguel Grinberg\n- Mihai Tomescu\n- Neil Halelamien\n- Nicolas Harraudeau\n- Pavel Tyslyatsky\n- Petrus J.v.Rensburg\n- Philippe Ndiaye\n- Piotr Husiatyński\n- Prasanna Swaminathan\n- Robert Warner\n- Rod Cloutier\n- Ryan Horn\n- Rémi Alvergnat\n- Sam Kimbrel\n- Samarth Shah\n- Sami Jaktholm\n- Sander Sink\n- Sasha Baranov\n- Saul Diez-Guerra\n- Sergey Romanov\n- Shreyans Sheth\n- Steven Leggett\n- Sven-Hendrik Haase\n- Usman Ehtesham Gul\n- Victor Neo\n- Vlad Frolov\n- Vladimir Pal\n- WooParadog\n- Yaniv Aknin\n- akash\n- bret barker\n- hachichaud\n- jbouzekri\n- jobou\n- johnrichter\n- justanr\n- k-funk\n- kelvinhammond\n- kenjones\n- kieran gorman\n- kumy\n- lyschoening\n- mailto1587\n- mniebla\n- mozillazg\n- muchosalsa\n- nachinius\n- nixdata\n- papaeye\n- pingz\n- saml\n- siavashg\n- silasray\n- soasme\n- ueg1990\n- y-p\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 14.818359375,
          "content": "Flask-RESTful Changelog\n=======================\n\nHere you can see the full list of changes between each Flask-RESTful release.\n\nVersion 0.3.10\n-------------\n\n- Compatibility with Flask 2.3 ([#962](https://github.com/flask-restful/flask-restful/pull/962))\n\nVersion 0.3.9\n-------------\n\n- Compatibility with Flask 2.0\n\nVersion 0.3.8\n-------------\n\nReleased February 06, 2020\n\n- Add Python 3.8 support  ([#835](https://github.com/flask-restful/flask-restful/pull/835))\n- Fix wrongly parsed Decimal fields ([#855](https://github.com/flask-restful/flask-restful/pull/855))\n- Fix overridden response when calling abort with Response ([#817](https://github.com/flask-restful/flask-restful/pull/817))\n- Various small fixes and updates to documentation\n\n\nVersion 0.3.7\n-------------\n\nReleased December 18, 2018\n\n- Fix error handling in python3 ([#696](https://github.com/flask-restful/flask-restful/pull/696))\n- Fix arguments with type=list ([#705](https://github.com/flask-restful/flask-restful/pull/705))\n- Return code for `parse_args()` is now configurable ([#722](https://github.com/flask-restful/flask-restful/pull/722))\n- Removed `flask_restful.paging` module.\n- Removed misleading `help_on_404` functionality ([#722](https://github.com/flask-restful/flask-restful/pull/722))\n- JSON keys are no longer sorted by default in debug mode in python3 ([#680](https://github.com/flask-restful/flask-restful/pull/680))\n- Various small fixes and updates to documentation\n\nVersion 0.3.6\n-------------\n\nReleased May 31, 2017\n\n- `Argument.help` now supports unicode strings ([#564](https://github.com/flask-restful/flask-restful/pull/564))\n- Flags can now be passed to `inputs.regex` ([#621](https://github.com/flask-restful/flask-restful/pull/621))\n- Fix behavior of `action='append'` in conjunction with `location='json'` ([#645](https://github.com/flask-restful/flask-restful/pull/645))\n- `method_decorators` can be a `dict` to apply decorator behavior for only specific HTTP methods ([#532](https://github.com/flask-restful/flask-restful/pull/532))\n- JSON keys are no longer sorted by default in debug mode in python3 ([#680](https://github.com/flask-restful/flask-restful/pull/680))\n- Various small fixes and updates to documentation\n\nVersion 0.3.5\n-------------\n\nReleased December 9, 2015\n\n- Add `nullable` option to request parser to allow/disallow null values for arguments ([#538](https://github.com/flask-restful/flask-restful/pull/538))\n- Use Flask's exception log method in `handle_error(e)` method instead of directly logging the exception notice. ([#496](https://github.com/flask-restful/flask-restful/pull/496))\n- `Argument.help` now allows more flexible message formatting using the `{error_msg}` string interpolation token. ([#518](https://github.com/flask-restful/flask-restful/pull/518))\n- Prevent representation from being chosen at random when `Accept: */*` ([#524](https://github.com/flask-restful/flask-restful/pull/524))\n- Headers from `HTTPException`s are now returned in the response instead of being discarded ([#523](https://github.com/flask-restful/flask-restful/pull/523))\n- Marshalling now checks for a `__marshallable__` method first before defaulting back to `__getitem__` ([](https://github.com/flask-restful/flask-restful/issues/324))\n- Flask 1.0 compatability fixes ([#506](https://github.com/flask-restful/flask-restful/pull/506))\n\nVersion 0.3.4\n-------------\n\nReleased July 20, 2015\n\n- Fixed issue where `abort()` and `raise Exception` were not equivalent ([#205](https://github.com/flask-restful/flask-restful/issues/205))\n- Fixed `RequestParser` settings not being copied properly ([#483](https://github.com/flask-restful/flask-restful/pull/483))\n- Add ability to configure json serializer settings from application config ([#458](https://github.com/flask-restful/flask-restful/pull/458))\n- Project metadata, tests, and examples are now included in source distributions ([#475](https://github.com/flask-restful/flask-restful/issues/475))\n- Various documentation improvements\n\nVersion 0.3.3\n-------------\n\nReleased May 22, 2015\n\n- Disable [challenge on 401](https://github.com/flask-restful/flask-restful/commit/fe53f49bdc28dd83ee3acbeb0a313b411411e377)\n  by default (**THIS IS A BREAKING CHANGE**, albeit a very small one with behavior that probably no one depended upon. You can easily change this back to the old way).\n- Doc fixes ([#404](https://github.com/flask-restful/flask-restful/pull/404), [#406](https://github.com/flask-restful/flask-restful/pull/406), [#436](https://github.com/flask-restful/flask-restful/pull/436), misc. other commits)\n- Fix truncation of microseconds in iso8601 datetime output ([#368](https://github.com/flask-restful/flask-restful/pull/405))\n- `null` arguments from JSON no longer cast to string ([#390](https://github.com/flask-restful/flask-restful/pull/390))\n- Made list fields work with classes ([#409](https://github.com/flask-restful/flask-restful/pull/409))\n- Fix `url_for()` when used with Blueprints ([#410](https://github.com/flask-restful/flask-restful/pull/410))\n- Add CORS \"Access-Control-Expose-Headers\" support ([#412](https://github.com/flask-restful/flask-restful/pull/412))\n- Fix class references in RequestParser ([#414](https://github.com/flask-restful/flask-restful/pull/414))\n- Allow any callables to be used as lazy attributes ([#417](https://github.com/flask-restful/flask-restful/pull/417))\n- Fix references to `flask.ext.*` ([#420](https://github.com/flask-restful/flask-restful/issues/420))\n- Trim support with fixes ([#428](https://github.com/flask-restful/flask-restful/pull/428))\n- Added ability to pass-in parameters into Resource constructors ([#444](https://github.com/flask-restful/flask-restful/pull/444))\n- Fix custom type docs on \"Intermediate usage\" and docstring ([#434](https://github.com/flask-restful/flask-restful/pull/434))\n- Fixed problem with `RequestParser.copy` ([#435](https://github.com/flask-restful/flask-restful/pull/435))\n- Feature/error bundling ([#431](https://github.com/flask-restful/flask-restful/pull/431))\n- Explicitly check the class type for `propagate_exceptions` ([#445](https://github.com/flask-restful/flask-restful/pull/445))\n- Remove min. year limit 1900 in `inputs.date` ([#446](https://github.com/flask-restful/flask-restful/pull/446))\n\nVersion 0.3.2\n-------------\n\nReleased February 25, 2015\n\n- Doc fixes ([#344](https://github.com/flask-restful/flask-restful/pull/344), [#378](https://github.com/flask-restful/flask-restful/issues/378), [#402](https://github.com/flask-restful/flask-restful/pull/402))\n- Microseconds no longer truncated in ISO8601 format datetime inputs ([#381](https://github.com/flask-restful/flask-restful/pull/381))\n- Datetime inputs now preserve timezone instead of forcing conversion to UTC ([#381](https://github.com/flask-restful/flask-restful/pull/381))\n- Fixes content negotiation to respect q-values ([#245](https://github.com/flask-restful/flask-restful/pull/245))\n- Fix `fields.URL` when used with Blueprints ([#379](https://github.com/flask-restful/flask-restful/pull/379))\n- Fix `BadRequest` raised with empty body and `application/json` content type ([#366](https://github.com/flask-restful/flask-restful/pull/366))\n- Improved argument validation error messages ([#386](https://github.com/flask-restful/flask-restful/pull/386))\n- Allow custom validation for `FileStorage` type arguments ([#388](https://github.com/flask-restful/flask-restful/pull/388))\n- Allow lambdas to be specified for field attributes ([#309](https://github.com/flask-restful/flask-restful/pull/309))\n- Added regex input validator ([#374](https://github.com/flask-restful/flask-restful/pull/374))\n\nVersion 0.3.1\n-------------\n\nReleased December 13, 2014\n\n- Adds `strict` option to `parse_args()` ([#358](https://github.com/flask-restful/flask-restful/pull/358))\n- Adds an option to envelop marshaled objects ([#349](https://github.com/flask-restful/flask-restful/pull/349))\n- Fixes initialization of `Api.blueprint` attribute ([#263](https://github.com/flask-restful/flask-restful/pull/263))\n- Makes `Api.error_router` fall back to Flask handlers ([#296](https://github.com/flask-restful/flask-restful/pull/296)/[#356](https://github.com/flask-restful/flask-restful/pull/356))\n- Makes docs more viewable on mobile devices ([#347](https://github.com/flask-restful/flask-restful/issues/347))\n- Wheel distribution is now universal ([#363](https://github.com/flask-restful/flask-restful/issues/363))\n\nVersion 0.3.0\n--------------\n\nReleased November 22, 2014\n\n- Adds `@api.resource` decorator ([#311](https://github.com/flask-restful/flask-restful/pull/311))\n- Adds custom error handling ([#225](https://github.com/flask-restful/flask-restful/pull/225))\n- Adds `RequestParser` inheritance ([#249](https://github.com/flask-restful/flask-restful/pull/249))\n- Adds 1/0 as valid values for `inputs.boolean` ([#341](https://github.com/flask-restful/flask-restful/pull/341))\n- Improved `datetime` serialization and deserialization ([#345](https://github.com/flask-restful/flask-restful/pull/345))\n- `init_app` now follows Flask extension guidelines ([#130](https://github.com/flask-restful/flask-restful/pull/130))\n- `types` module renamed to `inputs` ([#243](https://github.com/flask-restful/flask-restful/pull/243))\n- Fixes `inputs.boolean` inability to parse values from JSON ([#314](https://github.com/flask-restful/flask-restful/pull/314))\n- Fixes `RequestParser` inability to use arguments from multiple sources at once ([#261](https://github.com/flask-restful/flask-restful/pull/261))\n- Fixes missing `Allow` header when HTTP 405 is returned ([#294](https://github.com/flask-restful/flask-restful/pull/294))\n- Doc fixes and updates.\n\n\nVersion 0.2.12\n--------------\n\nReleased March 4, 2014\n\n- Fixed a bug in error handling code.\n- Don't install tests by default.\n- Doc fixes and updates.\n\nVersion 0.2.11\n--------------\n\nReleased January 17, 2014\n\n- Fixes the List field when marshalling a list of dictionaries. ([#165](https://github.com/twilio/flask-restful/issues/165))\n- Adds Boolean and Price types to fields.\\_\\_all\\_\\_ ([#180](https://github.com/twilio/flask-restful/issues/180))\n- Adds support for serializing a set object with a List field. ([#175](https://github.com/twilio/flask-restful/pull/175))\n- Fixes support for using callables as reqparser type arguments ([#167](https://github.com/twilio/flask-restful/pull/167))\n- Add configuration variable to control smart-errors behavior on 404 responses. ([#181](https://github.com/twilio/flask-restful/issues/181))\n- Fixes bug preventing use of Flask redirects. ([#162](https://github.com/twilio/flask-restful/pull/162))\n- Documentation fixes ([#173](https://github.com/twilio/flask-restful/pull/173))\n- Fixes bug swallowing tracebacks in handle_error. ([#166](https://github.com/twilio/flask-restful/pull/166))\n\nVersion 0.2.10\n--------------\n\nReleased December 17, 2013\n\n- Removes twilio-specific type checks present in version 0.2.9.\n- Correctly bump version number in setup.py.\n\nVersion 0.2.9\n-------------\n\nReleased December 17, 2013.\n\n- Adds new `positive` and `iso8601interval` types.\n- Typo fix.\n- Updating the test infrastructure to use common Twilio conventions and testing\n  styles.\n\nVersion 0.2.8\n-------------\n\nReleased November 22, 2013\n\n- Add 'absolute' and 'scheme' to fields.Url\n\nVersion 0.2.6\n-------------\n\nReleased November 18, 2013\n\n- blueprint support\n- CORS support\n- allow custom unauthorized response\n- when failing to marshal custom indexable objects, its attributes are checked\n- better error messages\n\nVersion 0.2.5\n-------------\n\nReleased Aug 6, 2013\n\n- add callable location\n- allow field type Fixed to take an attribute argument\n- added url_for() wrapper as Api.url_for(resource)\n\nVersion 0.2.4\n-------------\n\nReleased Aug 5, 2013\n\n- Python 3.3 support.\n- You can now marshal nested fields.\n- Small fixes in docs.\n\nVersion 0.2.2\n-------------\n\nReleased on May 5, 2013\n\n- JSON will be pretty-printed if you're running your app in debug mode.\n- pycrypto is now an optional dependency.\n\nVersion 0.2.1\n-------------\n\nReleased on April 9, 2013\n\n- Use the default Flask-RESTful error handler, instead of the default Flask\n  error handler, to handle 405 Not Allowed errors on requests to Api endpoints.\n\nVersion 0.2.0\n-------------\n\nReleased on April 9, 2013\n\n- Flask-RESTful will no longer clobber your app's error handler; it will only\nhandle errors that occur while handling Flask-RESTful routes. The breaking\nchange is that 404 errors will default to using the Flask text/html error\nhandler. Override this behavior by passing `catch_all_404s=True` to the `Api`\nconstructor. (via [@yaniv-aknin]( /yaniv-aknin ))\n- Arguments can now take `location` as a tuple, in case you want to\nspecify that an argument could be passed in multiple places. (via\n[@mindflayer](/mindflayer))\n- Fixes a problem where passing an empty post body to a resource that expected\n  a json argument would throw a 500.\n- Creation of the `Api` and initialization of the Flask `app` are no longer\n  bundled together. (via [@andrew-d](/andrew-d))\n- `marshal_with` now works with responses that are tuples. (via\n[@noise](/noise))\n- `types.url` will no longer throw a ascii decoding ValueError if you pass it\nUnicode characters\n\nVersion 0.1.7\n-------------\n\nReleased on March 24, 2013\n\nThe first released version of 0.1.6 contained a problem with the tar.gz\nuploaded to PyPI. 0.1.7 contains the same changes as 0.1.6 but ensures the\nversion you download from PyPI does not contain problems (if for example, you\ncached the old, broken version of 0.1.6).\n\nVersion 0.1.6\n-------------\n\nReleased on February 27th, 2013\n\n- Update the documentation with a fuller example (https://github.com/twilio/flask-restful/pull/37)\n- Update the test runner to use setuptools (https://github.com/twilio/flask-restful/pull/46)\n- Don't set exception data if we have no data to set (https://github.com/twilio/flask-restful/pull/49)\n- action='append' in the RequestParser always returns a list. (https://github.com/twilio/flask-restful/pull/41)\n\nVersion 0.1.5\n-------------\n\nReleased on Jan 9th, 2013\n\n- Fix error handler for exceptions that do not have a message\n\n\nVersion 0.1.4\n-------------\n\nReleased on Jan 8th, 2013\n\n- Crypto support for paging\n- Added paging helper for resources\n- Stricter arg parse\n- Flask view arguments are no longer implicitly parsed by RequestParser\n- Fixed incorrectly formatted err message\n\n\nVersion 0.1.3\n-------------\n\nReleased on Jan 8th, 2013\n\n- Smart 404 error in case of slight mistakes in the URL\n- Scheme error message\n- Attribute/key accessible namespace for reqparse\n- Add Namespace with dual attribute/item access\n- Added the original requested URI in the error\n- Better message if user passes URL w/ no scheme\n- Allow chaining of add_argument calls\n- Fixed bug 21 : Endpoint name clash on different views\n- Fixed string formatting for python 2.6\n- Fixed dictionary comprehensions for python 2.6\n- Fixed r'' for python 2.6\n\n\nVersion 0.1.2\n-------------\n\nReleased on Nov 19th, 2012\n\n- Fixed a bug in fields.Fixed when formatting a value of 0\n\n\nVersion 0.1.1\n-------------\n\nReleased on Nov 19th, 2012\n\n- Added the Fixed field\n\n\nVersion 0.1\n-------------\n\nFirst public release\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.466796875,
          "content": "Contributing to Flask-RESTful\n=============================\n\nWe welcome features and bug fixes to Flask-RESTful!  Fork this project and\nissue [pull requests](https://github.com/flask-restful/flask-restful/compare).\nNew code must come with a set of unit tests (that pass!) before the pull request\nis merged.\n\nReporting Bugs\n--------------\n\nBugs can be filed as [Issues on github.](https://github.com/flask-restful/flask-restful/issues/new)\n\n\n\nThanks from the Flask-RESTful team!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4501953125,
          "content": "Copyright (c) 2013, Twilio, Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n- Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer. \n- Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n- Neither the name of the Twilio, Inc. nor the names of its contributors may be\n  used to endorse or promote products derived from this software without\n  specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.3359375,
          "content": "include Makefile CHANGES LICENSE AUTHORS.md\nrecursive-include tests *\nrecursive-include examples *\nrecursive-include docs *\nrecursive-exclude docs *.pyc\nrecursive-exclude docs *.pyo\nrecursive-exclude tests *.pyc\nrecursive-exclude tests *.pyo\nrecursive-exclude examples *.pyc\nrecursive-exclude examples *.pyo\nprune docs/_build\nprune docs/_themes"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.7314453125,
          "content": "# Python settings\nifndef TRAVIS\n\tifndef PYTHON_MAJOR\n\t\tPYTHON_MAJOR := 3\n\tendif\n\tifndef PYTHON_MINOR\n\t\tPYTHON_MINOR := 8\n\tendif\n\tENV := env/py$(PYTHON_MAJOR)$(PYTHON_MINOR)\nelse\n\t# Use the virtualenv provided by Travis\n\tENV = $(VIRTUAL_ENV)\nendif\n\n# Project settings\nPROJECT := Flask-RESTful\nPACKAGE := flask_restful\nSOURCES := Makefile setup.py $(shell find $(PACKAGE) -name '*.py')\nEGG_INFO := $(subst -,_,$(PROJECT)).egg-info\n\n# System paths\nPLATFORM := $(shell python -c 'import sys; print(sys.platform)')\nifneq ($(findstring win32, $(PLATFORM)), )\n\tSYS_PYTHON_DIR := C:\\\\Python$(PYTHON_MAJOR)$(PYTHON_MINOR)\n\tSYS_PYTHON := $(SYS_PYTHON_DIR)\\\\python.exe\n\tSYS_VIRTUALENV := $(SYS_PYTHON_DIR)\\\\Scripts\\\\virtualenv.exe\nelse\n\tSYS_PYTHON := python$(PYTHON_MAJOR)\n\tifdef PYTHON_MINOR\n\t\tSYS_PYTHON := $(SYS_PYTHON).$(PYTHON_MINOR)\n\tendif\n\tSYS_VIRTUALENV := virtualenv\nendif\n\n# virtualenv paths\nifneq ($(findstring win32, $(PLATFORM)), )\n\tBIN := $(ENV)/Scripts\n\tOPEN := cmd /c start\nelse\n\tBIN := $(ENV)/bin\n\tifneq ($(findstring cygwin, $(PLATFORM)), )\n\t\tOPEN := cygstart\n\telse\n\t\tOPEN := open\n\tendif\nendif\n\n# virtualenv executables\nPYTHON := $(BIN)/python\nPIP := $(BIN)/pip\nFLAKE8 := $(BIN)/flake8\nPEP8RADIUS := $(BIN)/pep8radius\nPEP257 := $(BIN)/pep257\nNOSE := $(BIN)/nosetests\nCOVERAGE := $(BIN)/coverage\nACTIVATE := $(BIN)/activate\n\n# Remove if you don't want pip to cache downloads\nPIP_CACHE_DIR := .cache\nPIP_CACHE := --download-cache $(PIP_CACHE_DIR)\n\n# Flags for PHONY targets\nDEPENDS_TEST := $(ENV)/.depends-test\nDEPENDS_DEV := $(ENV)/.depends-dev\nDEPENDS_DOC := $(ENV)/.depends-doc\n\n# Main Targets ###############################################################\n\n.PHONY: all\nall: test\n\n# Targets to run on Travis\n.PHONY: ci\nci: test\n\n# Development Installation ###################################################\n\n.PHONY: env\nenv: $(PIP)\n\n$(PIP):\n\t$(SYS_VIRTUALENV) --python $(SYS_PYTHON) $(ENV)\n\t$(PIP) install wheel\n\n.PHONY: depends\ndepends: .depends-test .depends-dev .depends-doc\n\n.PHONY: .depends-test\n.depends-test: env Makefile $(DEPENDS_TEST)\n$(DEPENDS_TEST): Makefile tests/requirements.txt\n\t$(PIP) install -e .\n\t$(PIP) install -r tests/requirements.txt\n\ttouch $(DEPENDS_TEST)  # flag to indicate dependencies are installed\n\n.PHONY: .depends-dev\n.depends-dev: env Makefile $(DEPENDS_DEV)\n$(DEPENDS_DEV): Makefile\n\t$(PIP) install $(PIP_CACHE) flake8 pep257 pep8radius\n\ttouch $(DEPENDS_DEV)  # flag to indicate dependencies are installed\n\n.PHONY: .depends-doc\n.depends-doc: env Makefile setup.py $(DEPENDS_DOC)\n$(DEPENDS_DOC): Makefile setup.py\n\t$(PIP) install -e .[docs]\n\ttouch $(DEPENDS_DOC)  # flag to indicate dependencies are installed\n\n# Documentation ##############################################################\n\n.PHONY: doc\ndoc: .depends-doc\n\t. $(ACTIVATE); cd docs; $(MAKE) html\n\n.PHONY: read\nread: doc\n\t$(OPEN) docs/_build/html/index.html\n\n# Static Analysis ############################################################\n\n.PHONY: check\ncheck: flake8 pep257\n\nPEP8_IGNORED := E501\n\n.PHONY: flake8\nflake8: .depends-dev\n\t$(FLAKE8) $(PACKAGE) tests --ignore=$(PEP8_IGNORED)\n\n.PHONY: pep257\npep257: .depends-dev\n\t$(PEP257) $(PACKAGE)\n\n.PHONY: fix\nfix: .depends-dev\n\t$(PEP8RADIUS) --docformatter --in-place\n\n# Testing ####################################################################\n\n.PHONY: test\ntest: .depends-test .clean-test\n\t$(NOSE) tests --with-coverage --cover-package=$(PACKAGE)\n\ntest-all: test-py27 test-py34 test-py35 test-py36 test-py37 test-py38\ntest-py27:\n\tPYTHON_MAJOR=2 PYTHON_MINOR=7 $(MAKE) test\ntest-py34:\n\tPYTHON_MAJOR=3 PYTHON_MINOR=4 $(MAKE) test\ntest-py35:\n\tPYTHON_MAJOR=3 PYTHON_MINOR=5 $(MAKE) test\ntest-py36:\n\tPYTHON_MAJOR=3 PYTHON_MINOR=6 $(MAKE) test\ntest-py37:\n\tPYTHON_MAJOR=3 PYTHON_MINOR=7 $(MAKE) test\ntest-py38:\n\tPYTHON_MAJOR=3 PYTHON_MINOR=8 $(MAKE) test\n\n.PHONY: htmlcov\nhtmlcov: test\n\t$(COVERAGE) html\n\t$(OPEN) htmlcov/index.html\n\n# Cleanup ####################################################################\n\n.PHONY: clean\nclean: .clean-test\n\tfind $(PACKAGE) -name '*.pyc' -delete\n\tfind $(PACKAGE) -name '__pycache__' -delete\n\trm -rf dist build\n\trm -rf docs/_build\n\trm -rf $(EGG_INFO)\n\n.PHONY: clean-all\nclean-all: clean\n\trm -rf $(PIP_CACHE_DIR)\n\trm -rf $(ENV)\n\n.PHONY: .clean-test\n.clean-test:\n\trm -rf .coverage htmlcov\n\n# Release ####################################################################\n\n.PHONY: authors\nauthors:\n    echo \"Authors\\n=======\\n\\nA huge thanks to all of our contributors:\\n\\n\" > AUTHORS.md\n    git log --raw | grep \"^Author: \" | cut -d ' ' -f2- | cut -d '<' -f1 | sed 's/^/- /' | sort | uniq >> AUTHORS.md\n\n.PHONY: register\nregister: doc\n\t$(PYTHON) setup.py register\n\n.PHONY: dist\ndist: doc test\n\t$(PYTHON) setup.py sdist\n\t$(PYTHON) setup.py bdist_wheel\n\n.PHONY: upload\nupload: doc register\n\t$(PYTHON) setup.py sdist upload\n\t$(PYTHON) setup.py bdist_wheel upload\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.58203125,
          "content": "# Flask-RESTful\n\n[![Build Status](https://travis-ci.org/flask-restful/flask-restful.svg?branch=master)](http://travis-ci.org/flask-restful/flask-restful)\n[![Coverage Status](http://img.shields.io/coveralls/flask-restful/flask-restful/master.svg)](https://coveralls.io/r/flask-restful/flask-restful)\n[![PyPI Version](http://img.shields.io/pypi/v/Flask-RESTful.svg)](https://pypi.python.org/pypi/Flask-RESTful)\n\nFlask-RESTful provides the building blocks for creating a great REST API.\n\n## User Guide\n\nYou'll find the user guide and all documentation [here](https://flask-restful.readthedocs.io/)\n\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flask_restful",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[bdist_wheel]\nuniversal = True\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.6357421875,
          "content": "#!/usr/bin/env python\n\nimport re\nimport sys\nfrom os import path\nfrom setuptools import setup, find_packages\n\n\nrequirements = [\n    'aniso8601>=0.82',\n    'Flask>=0.8',\n    'six>=1.3.0',\n    'pytz',\n]\n\n\nversion_file = path.join(\n    path.dirname(__file__),\n    'flask_restful',\n    '__version__.py'\n)\nwith open(version_file, 'r') as fp:\n    m = re.search(\n        r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\",\n        fp.read(),\n        re.M\n    )\n    version = m.groups(1)[0]\n\n\nsetup(\n    name='Flask-RESTful',\n    version=version,\n    license='BSD',\n    url='https://www.github.com/flask-restful/flask-restful/',\n    project_urls={\n        'Source': 'https://github.com/flask-restful/flask-restful',\n    },\n    author='Twilio API Team',\n    author_email='help@twilio.com',\n    description='Simple framework for creating REST APIs',\n    packages=find_packages(exclude=['tests']),\n    classifiers=[\n        'Framework :: Flask',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'License :: OSI Approved :: BSD License',\n    ],\n    zip_safe=False,\n    include_package_data=True,\n    platforms='any',\n    test_suite = 'nose.collector',\n    install_requires=requirements,\n    tests_require=['Flask-RESTful', 'mock>=0.8', 'blinker'],\n    # Install these with \"pip install -e '.[docs]'\n    extras_require={\n        'docs': 'sphinx',\n    }\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.5185546875,
          "content": "# Tox (http://tox.testrun.org/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n[tox]\nenvlist=\n    py{27,34,35,36,37,38}-flask{0_10,0_12,10}\n\ndeps =\n    flask0_10: flask>=0.10,<0.11\n    flask0_12: flask>=0.12,<1.0\n    flask10:   flask>=1.0,<1.1\n\n[testenv]\nusedevelop = true\ncommands =\n    pip install -e .\n    nosetests\ndeps =\n    -r{toxinidir}/tests/requirements.txt\n"
        }
      ]
    }
  ]
}