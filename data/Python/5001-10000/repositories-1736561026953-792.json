{
  "metadata": {
    "timestamp": 1736561026953,
    "page": 792,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jpadilla/pyjwt",
      "stars": 5229,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7978515625,
          "content": "# Created by https://www.gitignore.io\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\n.venv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n.pytest_cache\n.mypy_cache\npip-wheel-metadata/\n.venv/\n\n\n.idea\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.603515625,
          "content": "repos:\n  - repo: https://github.com/psf/black\n    rev: 24.10.0\n    hooks:\n      - id: black\n        args: [\"--target-version=py39\"]\n\n  - repo: https://github.com/asottile/blacken-docs\n    rev: 1.19.1\n    hooks:\n      - id: blacken-docs\n        args: [\"--target-version=py39\"]\n\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: trailing-whitespace\n      - id: end-of-file-fixer\n      - id: debug-statements\n\n  - repo: https://github.com/mgedmin/check-manifest\n    rev: \"0.50\"\n    hooks:\n      - id: check-manifest\n        args: [--no-build-isolation]\n\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: \"v1.13.0\"\n    hooks:\n      - id: mypy\n        additional_dependencies: [cryptography>=3.4.0]\n\n  - repo: https://github.com/abravalheri/validate-pyproject\n    rev: \"v0.23\"\n    hooks:\n      - id: validate-pyproject\n\n  # conflict with the backend dependencies: tomli-w==1.1.0 is incompatible with tomli-w==1.0.0.\n  # - repo: https://github.com/kieran-ryan/pyprojectsort\n  #   rev: \"v0.3.0\"\n  #   hooks:\n  #     - id: pyprojectsort\n\n  - repo: https://github.com/python-jsonschema/check-jsonschema\n    rev: \"0.29.4\"\n    hooks:\n      - id: check-github-workflows\n      - id: check-readthedocs\n\n  - repo: https://github.com/regebro/pyroma\n    rev: \"4.2\"\n    hooks:\n      - id: pyroma\n\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    # Ruff version.\n    rev: v0.7.3\n    hooks:\n      # Run the linter.\n      - id: ruff\n        args: [ --fix ]\n      # Run the formatter.\n      - id: ruff-format\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.291015625,
          "content": "# https://docs.readthedocs.io/en/stable/config-file/v2.html\n\nversion: 2\n\nbuild:\n  os: \"ubuntu-lts-latest\"\n  tools:\n    python: \"3.11\"\n\npython:\n  install:\n    - method: \"pip\"\n      path: \".\"\n      extra_requirements:\n        - \"docs\"\n\nsphinx:\n  configuration: \"docs/conf.py\"\n  fail_on_warning: true\n"
        },
        {
          "name": "AUTHORS.rst",
          "type": "blob",
          "size": 0.314453125,
          "content": "Authors\n=======\n\n``pyjwt`` is currently written and maintained by `Jose Padilla <https://github.com/jpadilla>`_.\nOriginally written and maintained by `Jeff Lindsay <https://github.com/progrium>`_.\n\nA full list of contributors can be found on GitHubâ€™s `overview <https://github.com/jpadilla/pyjwt/graphs/contributors>`_.\n"
        },
        {
          "name": "CHANGELOG.rst",
          "type": "blob",
          "size": 35.9541015625,
          "content": "Changelog\n=========\n\nAll notable changes to this project will be documented in this file.\nThis project adheres to `Semantic Versioning <https://semver.org/>`__.\n\n`Unreleased <https://github.com/jpadilla/pyjwt/compare/2.10.1...HEAD>`__\n------------------------------------------------------------------------\n\n\n`v2.10.1 <https://github.com/jpadilla/pyjwt/compare/2.10.0...2.10.1>`__\n-----------------------------------------------------------------------\n\n\nFixed\n~~~~~\n\n- Prevent partial matching of `iss` claim by @fabianbadoi in `GHSA-75c5-xw7c-p5pm <https://github.com/jpadilla/pyjwt/security/advisories/GHSA-75c5-xw7c-p5pm>`__\n\n\n`v2.10.0 <https://github.com/jpadilla/pyjwt/compare/2.9.0...2.10.0>`__\n-----------------------------------------------------------------------\n\n\nChanged\n~~~~~~~\n\n- Remove algorithm requirement from JWT API, instead relying on JWS API for enforcement, by @luhn in `#975 <https://github.com/jpadilla/pyjwt/pull/975>`__\n- Use ``Sequence`` for parameter types rather than ``List`` where applicable by @imnotjames in `#970 <https://github.com/jpadilla/pyjwt/pull/970>`__\n- Add JWK support to JWT encode by @luhn in `#979 <https://github.com/jpadilla/pyjwt/pull/979>`__\n- Encoding and decoding payloads using the `none` algorithm by @jpadilla in `#c2629f6 <https://github.com/jpadilla/pyjwt/commit/c2629f66c593459e02616048443231ccbe18be16>`\n\n  Before:\n\n  .. code-block:: pycon\n\n   >>> import jwt\n   >>> jwt.encode({\"payload\": \"abc\"}, key=None, algorithm=None)\n\n  After:\n\n  .. code-block:: pycon\n\n   >>> import jwt\n   >>> jwt.encode({\"payload\": \"abc\"}, key=None, algorithm=\"none\")\n\n- Added validation for 'sub' (subject) and 'jti' (JWT ID) claims in tokens by @Divan009 in `#1005 <https://github.com/jpadilla/pyjwt/pull/1005>`__\n- Refactor project configuration files from ``setup.cfg`` to ``pyproject.toml`` by @cleder in `#995 <https://github.com/jpadilla/pyjwt/pull/995>`__\n- Ruff linter and formatter changes by @gagandeepp in `#1001 <https://github.com/jpadilla/pyjwt/pull/1001>`__\n- Drop support for Python 3.8 (EOL) by @kkirsche in `#1007 <https://github.com/jpadilla/pyjwt/pull/1007>`__\n\n\nFixed\n~~~~~\n\n- Encode EC keys with a fixed bit length by @etianen in `#990 <https://github.com/jpadilla/pyjwt/pull/990>`__\n- Add an RTD config file to resolve Read the Docs build failures by @kurtmckee in `#977 <https://github.com/jpadilla/pyjwt/pull/977>`__\n- Docs: Update ``iat`` exception docs by @pachewise in `#974 <https://github.com/jpadilla/pyjwt/pull/974>`__\n- Docs: Fix ``decode_complete`` scope and algorithms by @RbnRncn in `#982 <https://github.com/jpadilla/pyjwt/pull/982>`__\n- Fix doctest for ``docs/usage.rst`` by @pachewise in `#986 <https://github.com/jpadilla/pyjwt/pull/986>`__\n- Fix ``test_utils.py`` not to xfail by @pachewise in `#987 <https://github.com/jpadilla/pyjwt/pull/987>`__\n- Docs: Correct `jwt.decode` audience param doc expression by @peter279k in `#994 <https://github.com/jpadilla/pyjwt/pull/994>`__\n\nAdded\n~~~~~\n\n\n- Add support for python 3.13 by @hugovk in `#972 <https://github.com/jpadilla/pyjwt/pull/972>`__\n- Create SECURITY.md by @auvipy and @jpadilla in `#973 <https://github.com/jpadilla/pyjwt/pull/973>`__\n- Docs: Add PS256 encoding and decoding usage by @peter279k in `#992 <https://github.com/jpadilla/pyjwt/pull/992>`__\n- Docs: Add API docs for PyJWK by @luhn in `#980 <https://github.com/jpadilla/pyjwt/pull/980>`__\n- Docs: Add EdDSA algorithm encoding/decoding usage by @peter279k in `#993 <https://github.com/jpadilla/pyjwt/pull/993>`__\n- Include checkers and linters for ``pyproject.toml`` in ``pre-commit`` by @cleder in `#1002 <https://github.com/jpadilla/pyjwt/pull/1002>`__\n- Docs: Add ES256 decoding usage by @Gautam-Hegde in `#1003 <https://github.com/jpadilla/pyjwt/pull/1003>`\n\n`v2.9.0 <https://github.com/jpadilla/pyjwt/compare/2.8.0...2.9.0>`__\n-----------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n- Drop support for Python 3.7 (EOL) by @hugovk in `#910 <https://github.com/jpadilla/pyjwt/pull/910>`__\n- Allow JWT issuer claim validation to accept a list of strings too by @mattpollak in `#913 <https://github.com/jpadilla/pyjwt/pull/913>`__\n\nFixed\n~~~~~\n\n- Fix unnecessary string concatenation by @sirosen in `#904 <https://github.com/jpadilla/pyjwt/pull/904>`__\n- Fix docs for ``jwt.decode_complete`` to include ``strict_aud`` option by @woodruffw in `#923 <https://github.com/jpadilla/pyjwt/pull/923>`__\n- Fix docs step by @jpadilla in `#950 <https://github.com/jpadilla/pyjwt/pull/950>`__\n- Fix: Remove an unused variable from example code block by @kenkoooo in `#958 <https://github.com/jpadilla/pyjwt/pull/958>`__\n\nAdded\n~~~~~\n\n- Add support for Python 3.12 by @hugovk in `#910 <https://github.com/jpadilla/pyjwt/pull/910>`__\n- Improve performance of ``is_ssh_key`` + add unit test by @bdraco in `#940 <https://github.com/jpadilla/pyjwt/pull/940>`__\n- Allow ``jwt.decode()`` to accept a PyJWK object by @luhn in `#886 <https://github.com/jpadilla/pyjwt/pull/886>`__\n- Make ``algorithm_name`` attribute available on PyJWK by @luhn in `#886 <https://github.com/jpadilla/pyjwt/pull/886>`__\n- Raise ``InvalidKeyError`` on invalid PEM keys to be compatible with cryptography 42.x.x by @CollinEMac in `#952 <https://github.com/jpadilla/pyjwt/pull/952>`__\n- Raise an exception when required cryptography dependency is missing by @tobloef in `<https://github.com/jpadilla/pyjwt/pull/963>`__\n\n`v2.8.0 <https://github.com/jpadilla/pyjwt/compare/2.7.0...2.8.0>`__\n-----------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n- Update python version test matrix by @auvipy in `#895 <https://github.com/jpadilla/pyjwt/pull/895>`__\n\nFixed\n~~~~~\n\nAdded\n~~~~~\n\n- Add ``strict_aud`` as an option to ``jwt.decode`` by @woodruffw in `#902 <https://github.com/jpadilla/pyjwt/pull/902>`__\n- Export PyJWKClientConnectionError class by @daviddavis in `#887 <https://github.com/jpadilla/pyjwt/pull/887>`__\n- Allows passing of ssl.SSLContext to PyJWKClient by @juur in `#891 <https://github.com/jpadilla/pyjwt/pull/891>`__\n\n`v2.7.0 <https://github.com/jpadilla/pyjwt/compare/2.6.0...2.7.0>`__\n-----------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n- Changed the error message when the token audience doesn't match the expected audience by @irdkwmnsb `#809 <https://github.com/jpadilla/pyjwt/pull/809>`__\n- Improve error messages when cryptography isn't installed by @Viicos in `#846 <https://github.com/jpadilla/pyjwt/pull/846>`__\n- Make `Algorithm` an abstract base class by @Viicos in `#845 <https://github.com/jpadilla/pyjwt/pull/845>`__\n- ignore invalid keys in a jwks by @timw6n in `#863 <https://github.com/jpadilla/pyjwt/pull/863>`__\n\nFixed\n~~~~~\n\n- Add classifier for Python 3.11 by @eseifert in `#818 <https://github.com/jpadilla/pyjwt/pull/818>`__\n- Fix ``_validate_iat`` validation by @Viicos in `#847 <https://github.com/jpadilla/pyjwt/pull/847>`__\n- fix: use datetime.datetime.timestamp function to have a milliseconds by @daillouf `#821 <https://github.com/jpadilla/pyjwt/pull/821>`__\n- docs: correct mistake in the changelog about verify param by @gbillig in `#866 <https://github.com/jpadilla/pyjwt/pull/866>`__\n\nAdded\n~~~~~\n\n- Add ``compute_hash_digest`` as a method of ``Algorithm`` objects, which uses\n  the underlying hash algorithm to compute a digest. If there is no appropriate\n  hash algorithm, a ``NotImplementedError`` will be raised in `#775 <https://github.com/jpadilla/pyjwt/pull/775>`__\n- Add optional ``headers`` argument to ``PyJWKClient``. If provided, the headers\n  will be included in requests that the client uses when fetching the JWK set by @thundercat1 in `#823 <https://github.com/jpadilla/pyjwt/pull/823>`__\n- Add PyJWT._{de,en}code_payload hooks by @akx in `#829 <https://github.com/jpadilla/pyjwt/pull/829>`__\n- Add `sort_headers` parameter to `api_jwt.encode` by @evroon in `#832 <https://github.com/jpadilla/pyjwt/pull/832>`__\n- Make mypy configuration stricter and improve typing by @akx in `#830 <https://github.com/jpadilla/pyjwt/pull/830>`__\n- Add more types by @Viicos in `#843 <https://github.com/jpadilla/pyjwt/pull/843>`__\n- Add a timeout for PyJWKClient requests by @daviddavis in `#875 <https://github.com/jpadilla/pyjwt/pull/875>`__\n- Add client connection error exception by @daviddavis in `#876 <https://github.com/jpadilla/pyjwt/pull/876>`__\n- Add complete types to take all allowed keys into account by @Viicos in `#873 <https://github.com/jpadilla/pyjwt/pull/873>`__\n- Add `as_dict` option to `Algorithm.to_jwk` by @fluxth in `#881 <https://github.com/jpadilla/pyjwt/pull/881>`__\n\n\n`v2.6.0 <https://github.com/jpadilla/pyjwt/compare/2.5.0...2.6.0>`__\n-----------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n- bump up cryptography >= 3.4.0 by @jpadilla in `#807 <https://github.com/jpadilla/pyjwt/pull/807>`_\n- Remove `types-cryptography` from `crypto` extra by @lautat in `#805 <https://github.com/jpadilla/pyjwt/pull/805>`_\n\nFixed\n~~~~~\n\n- Invalidate token on the exact second the token expires `#797 <https://github.com/jpadilla/pyjwt/pull/797>`_\n- fix: version 2.5.0 heading typo by @c0state in `#803 <https://github.com/jpadilla/pyjwt/pull/803>`_\n\nAdded\n~~~~~\n- Adding validation for `issued_at` when `iat > (now + leeway)` as `ImmatureSignatureError` by @sriharan16 in https://github.com/jpadilla/pyjwt/pull/794\n\n`v2.5.0 <https://github.com/jpadilla/pyjwt/compare/2.4.0...2.5.0>`__\n-----------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n- Skip keys with incompatible alg when loading JWKSet by @DaGuich in `#762 <https://github.com/jpadilla/pyjwt/pull/762>`__\n- Remove support for python3.6 by @sirosen in `#777 <https://github.com/jpadilla/pyjwt/pull/777>`__\n- Emit a deprecation warning for unsupported kwargs by @sirosen in `#776 <https://github.com/jpadilla/pyjwt/pull/776>`__\n- Remove redundant wheel dep from pyproject.toml by @mgorny in `#765 <https://github.com/jpadilla/pyjwt/pull/765>`__\n- Do not fail when an unusable key occurs by @DaGuich in `#762 <https://github.com/jpadilla/pyjwt/pull/762>`__\n- Update audience typing by @JulianMaurin in `#782 <https://github.com/jpadilla/pyjwt/pull/782>`__\n- Improve PyJWKSet error accuracy by @JulianMaurin in `#786 <https://github.com/jpadilla/pyjwt/pull/786>`__\n- Mypy as pre-commit check + api_jws typing by @JulianMaurin in `#787 <https://github.com/jpadilla/pyjwt/pull/787>`__\n\nFixed\n~~~~~\n\n- Adjust expected exceptions in option merging tests for PyPy3 by @mgorny in `#763 <https://github.com/jpadilla/pyjwt/pull/763>`__\n- Fixes for pyright on strict mode by @brandon-leapyear in `#747 <https://github.com/jpadilla/pyjwt/pull/747>`__\n- docs: fix simple typo, iinstance -> isinstance by @timgates42 in `#774 <https://github.com/jpadilla/pyjwt/pull/774>`__\n- Fix typo: priot -> prior by @jdufresne in `#780 <https://github.com/jpadilla/pyjwt/pull/780>`__\n- Fix for headers disorder issue by @kadabusha in `#721 <https://github.com/jpadilla/pyjwt/pull/721>`__\n\nAdded\n~~~~~\n\n- Add to_jwk static method to ECAlgorithm by @leonsmith in `#732 <https://github.com/jpadilla/pyjwt/pull/732>`__\n- Expose get_algorithm_by_name as new method by @sirosen in `#773 <https://github.com/jpadilla/pyjwt/pull/773>`__\n- Add type hints to jwt/help.py and add missing types dependency by @kkirsche in `#784 <https://github.com/jpadilla/pyjwt/pull/784>`__\n- Add cacheing functionality for JWK set by @wuhaoyujerry in `#781 <https://github.com/jpadilla/pyjwt/pull/781>`__\n\n`v2.4.0 <https://github.com/jpadilla/pyjwt/compare/2.3.0...2.4.0>`__\n-----------------------------------------------------------------------\n\nSecurity\n~~~~~~~~\n\n- [CVE-2022-29217] Prevent key confusion through non-blocklisted public key formats. https://github.com/jpadilla/pyjwt/security/advisories/GHSA-ffqj-6fqr-9h24\n\nChanged\n~~~~~~~\n\n- Explicit check the key for ECAlgorithm by @estin in https://github.com/jpadilla/pyjwt/pull/713\n- Raise DeprecationWarning for jwt.decode(verify=...) by @akx in https://github.com/jpadilla/pyjwt/pull/742\n\nFixed\n~~~~~\n\n- Don't use implicit optionals by @rekyungmin in https://github.com/jpadilla/pyjwt/pull/705\n- documentation fix: show correct scope for decode_complete() by @sseering in https://github.com/jpadilla/pyjwt/pull/661\n- fix: Update copyright information by @kkirsche in https://github.com/jpadilla/pyjwt/pull/729\n- Don't mutate options dictionary in .decode_complete() by @akx in https://github.com/jpadilla/pyjwt/pull/743\n\nAdded\n~~~~~\n\n- Add support for Python 3.10 by @hugovk in https://github.com/jpadilla/pyjwt/pull/699\n- api_jwk: Add PyJWKSet.__getitem__ by @woodruffw in https://github.com/jpadilla/pyjwt/pull/725\n- Update usage.rst by @guneybilen in https://github.com/jpadilla/pyjwt/pull/727\n- Docs: mention performance reasons for reusing RSAPrivateKey when encoding by @dmahr1 in https://github.com/jpadilla/pyjwt/pull/734\n- Fixed typo in usage.rst by @israelabraham in https://github.com/jpadilla/pyjwt/pull/738\n- Add detached payload support for JWS encoding and decoding by @fviard in https://github.com/jpadilla/pyjwt/pull/723\n- Replace various string interpolations with f-strings by @akx in https://github.com/jpadilla/pyjwt/pull/744\n- Update CHANGELOG.rst by @hipertracker in https://github.com/jpadilla/pyjwt/pull/751\n\n`v2.3.0 <https://github.com/jpadilla/pyjwt/compare/2.2.0...2.3.0>`__\n-----------------------------------------------------------------------\n\nFixed\n~~~~~\n\n- Revert \"Remove arbitrary kwargs.\" `#701 <https://github.com/jpadilla/pyjwt/pull/701>`__\n\nAdded\n~~~~~\n\n- Add exception chaining `#702 <https://github.com/jpadilla/pyjwt/pull/702>`__\n\n`v2.2.0 <https://github.com/jpadilla/pyjwt/compare/2.1.0...2.2.0>`__\n-----------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n- Remove arbitrary kwargs. `#657 <https://github.com/jpadilla/pyjwt/pull/657>`__\n- Use timezone package as Python 3.5+ is required. `#694 <https://github.com/jpadilla/pyjwt/pull/694>`__\n\nFixed\n~~~~~\n- Assume JWK without the \"use\" claim is valid for signing as per RFC7517 `#668 <https://github.com/jpadilla/pyjwt/pull/668>`__\n- Prefer `headers[\"alg\"]` to `algorithm` in `jwt.encode()`. `#673 <https://github.com/jpadilla/pyjwt/pull/673>`__\n- Fix aud validation to support {'aud': null} case. `#670 <https://github.com/jpadilla/pyjwt/pull/670>`__\n- Make `typ` optional in JWT to be compliant with RFC7519. `#644 <https://github.com/jpadilla/pyjwt/pull/644>`__\n-  Remove upper bound on cryptography version. `#693 <https://github.com/jpadilla/pyjwt/pull/693>`__\n\nAdded\n~~~~~\n\n- Add support for Ed448/EdDSA. `#675 <https://github.com/jpadilla/pyjwt/pull/675>`__\n\n`v2.1.0 <https://github.com/jpadilla/pyjwt/compare/2.0.1...2.1.0>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n- Allow claims validation without making JWT signature validation mandatory. `#608 <https://github.com/jpadilla/pyjwt/pull/608>`__\n\nFixed\n~~~~~\n\n- Remove padding from JWK test data. `#628 <https://github.com/jpadilla/pyjwt/pull/628>`__\n- Make `kty` mandatory in JWK to be compliant with RFC7517. `#624 <https://github.com/jpadilla/pyjwt/pull/624>`__\n- Allow JWK without `alg` to be compliant with RFC7517. `#624 <https://github.com/jpadilla/pyjwt/pull/624>`__\n- Allow to verify with private key on ECAlgorithm, as well as on Ed25519Algorithm. `#645 <https://github.com/jpadilla/pyjwt/pull/645>`__\n\nAdded\n~~~~~\n\n- Add caching by default to PyJWKClient `#611 <https://github.com/jpadilla/pyjwt/pull/611>`__\n- Add missing exceptions.InvalidKeyError to jwt module __init__ imports `#620 <https://github.com/jpadilla/pyjwt/pull/620>`__\n- Add support for ES256K algorithm `#629 <https://github.com/jpadilla/pyjwt/pull/629>`__\n- Add `from_jwk()` to Ed25519Algorithm `#621 <https://github.com/jpadilla/pyjwt/pull/621>`__\n- Add `to_jwk()` to Ed25519Algorithm `#643 <https://github.com/jpadilla/pyjwt/pull/643>`__\n- Export `PyJWK` and `PyJWKSet` `#652 <https://github.com/jpadilla/pyjwt/pull/652>`__\n\n`v2.0.1 <https://github.com/jpadilla/pyjwt/compare/2.0.0...2.0.1>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n- Rename CHANGELOG.md to CHANGELOG.rst and include in docs `#597 <https://github.com/jpadilla/pyjwt/pull/597>`__\n\nFixed\n~~~~~\n\n- Fix `from_jwk()` for all algorithms `#598 <https://github.com/jpadilla/pyjwt/pull/598>`__\n\nAdded\n~~~~~\n\n`v2.0.0 <https://github.com/jpadilla/pyjwt/compare/1.7.1...2.0.0>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\nDrop support for Python 2 and Python 3.0-3.5\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPython 3.5 is EOL so we decide to drop its support. Version ``1.7.1`` is\nthe last one supporting Python 3.0-3.5.\n\nRequire cryptography >= 3\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nDrop support for PyCrypto and ECDSA\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nWe've kept this around for a long time, mostly for environments that\ndidn't allow installing cryptography.\n\nDrop CLI\n^^^^^^^^\n\nDropped the included cli entry point.\n\nImprove typings\n^^^^^^^^^^^^^^^\n\nWe no longer need to use mypy Python 2 compatibility mode (comments)\n\n``jwt.encode(...)`` return type\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nTokens are returned as string instead of a byte string\n\nDropped deprecated errors\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\nRemoved ``ExpiredSignature``, ``InvalidAudience``, and\n``InvalidIssuer``. Use ``ExpiredSignatureError``,\n``InvalidAudienceError``, and ``InvalidIssuerError`` instead.\n\nDropped deprecated ``verify_expiration`` param in ``jwt.decode(...)``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nUse\n``jwt.decode(encoded, key, algorithms=[\"HS256\"], options={\"verify_exp\": False})``\ninstead.\n\nDropped deprecated ``verify`` param in ``jwt.decode(...)``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nUse ``jwt.decode(encoded, key, options={\"verify_signature\": False})``\ninstead.\n\nRequire explicit ``algorithms`` in ``jwt.decode(...)`` by default\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nExample: ``jwt.decode(encoded, key, algorithms=[\"HS256\"])``.\n\nDropped deprecated ``require_*`` options in ``jwt.decode(...)``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor example, instead of\n``jwt.decode(encoded, key, algorithms=[\"HS256\"], options={\"require_exp\": True})``,\nuse\n``jwt.decode(encoded, key, algorithms=[\"HS256\"], options={\"require\": [\"exp\"]})``.\n\nAnd the old v1.x syntax\n``jwt.decode(token, verify=False)``\nis now:\n``jwt.decode(jwt=token, key='secret', algorithms=['HS256'], options={\"verify_signature\": False})``\n\nAdded\n~~~~~\n\nIntroduce better experience for JWKs\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nIntroduce ``PyJWK``, ``PyJWKSet``, and ``PyJWKClient``.\n\n.. code:: python\n\n    import jwt\n    from jwt import PyJWKClient\n\n    token = \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5FRTFRVVJCT1RNNE16STVSa0ZETlRZeE9UVTFNRGcyT0Rnd1EwVXpNVGsxUWpZeVJrUkZRdyJ9.eyJpc3MiOiJodHRwczovL2Rldi04N2V2eDlydS5hdXRoMC5jb20vIiwic3ViIjoiYVc0Q2NhNzl4UmVMV1V6MGFFMkg2a0QwTzNjWEJWdENAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZXhwZW5zZXMtYXBpIiwiaWF0IjoxNTcyMDA2OTU0LCJleHAiOjE1NzIwMDY5NjQsImF6cCI6ImFXNENjYTc5eFJlTFdVejBhRTJINmtEME8zY1hCVnRDIiwiZ3R5IjoiY2xpZW50LWNyZWRlbnRpYWxzIn0.PUxE7xn52aTCohGiWoSdMBZGiYAHwE5FYie0Y1qUT68IHSTXwXVd6hn02HTah6epvHHVKA2FqcFZ4GGv5VTHEvYpeggiiZMgbxFrmTEY0csL6VNkX1eaJGcuehwQCRBKRLL3zKmA5IKGy5GeUnIbpPHLHDxr-GXvgFzsdsyWlVQvPX2xjeaQ217r2PtxDeqjlf66UYl6oY6AqNS8DH3iryCvIfCcybRZkc_hdy-6ZMoKT6Piijvk_aXdm7-QQqKJFHLuEqrVSOuBqqiNfVrG27QzAPuPOxvfXTVLXL2jek5meH6n-VWgrBdoMFH93QEszEDowDAEhQPHVs0xj7SIzA\"\n    kid = \"NEE1QURBOTM4MzI5RkFDNTYxOTU1MDg2ODgwQ0UzMTk1QjYyRkRFQw\"\n    url = \"https://dev-87evx9ru.auth0.com/.well-known/jwks.json\"\n\n    jwks_client = PyJWKClient(url)\n    signing_key = jwks_client.get_signing_key_from_jwt(token)\n\n    data = jwt.decode(\n        token,\n        signing_key.key,\n        algorithms=[\"RS256\"],\n        audience=\"https://expenses-api\",\n        options={\"verify_exp\": False},\n    )\n    print(data)\n\nSupport for JWKs containing ECDSA keys\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nAdd support for Ed25519 / EdDSA\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nPull Requests\n~~~~~~~~~~~~~\n\n-  Add PyPy3 to the test matrix (#550) by @jdufresne\n-  Require tweak (#280) by @psafont\n-  Decode return type is dict[str, Any] (#393) by @jacopofar\n-  Fix linter error in test\\_cli (#414) by @jaraco\n-  Run mypy with tox (#421) by @jpadilla\n-  Document (and prefer) pyjwt[crypto] req format (#426) by @gthb\n-  Correct type for json\\_encoder argument (#438) by @jdufresne\n-  Prefer https:// links where available (#439) by @jdufresne\n-  Pass python\\_requires argument to setuptools (#440) by @jdufresne\n-  Rename [wheel] section to [bdist\\_wheel] as the former is legacy\n   (#441) by @jdufresne\n-  Remove setup.py test command in favor of pytest and tox (#442) by\n   @jdufresne\n-  Fix mypy errors (#449) by @jpadilla\n-  DX Tweaks (#450) by @jpadilla\n-  Add support of python 3.8 (#452) by @Djailla\n-  Fix 406 (#454) by @justinbaur\n-  Add support for Ed25519 / EdDSA, with unit tests (#455) by\n   @Someguy123\n-  Remove Python 2.7 compatibility (#457) by @Djailla\n-  Fix simple typo: encododed -> encoded (#462) by @timgates42\n-  Enhance tracebacks. (#477) by @JulienPalard\n-  Simplify ``python_requires`` (#478) by @michael-k\n-  Document top-level .encode and .decode to close #459 (#482) by\n   @dimaqq\n-  Improve documentation for audience usage (#484) by @CorreyL\n-  Correct README on how to run tests locally (#489) by @jdufresne\n-  Fix ``tox -e lint`` warnings and errors (#490) by @jdufresne\n-  Run pyupgrade across project to use modern Python 3 conventions\n   (#491) by @jdufresne\n-  Add Python-3-only trove classifier and remove \"universal\" from wheel\n   (#492) by @jdufresne\n-  Emit warnings about user code, not pyjwt code (#494) by @mgedmin\n-  Move setup information to declarative setup.cfg (#495) by @jdufresne\n-  CLI options for verifying audience and issuer (#496) by\n   @GeoffRichards\n-  Specify the target Python version for mypy (#497) by @jdufresne\n-  Remove unnecessary compatibility shims for Python 2 (#498) by\n   @jdufresne\n-  Setup GH Actions (#499) by @jpadilla\n-  Implementation of ECAlgorithm.from\\_jwk (#500) by @jpadilla\n-  Remove cli entry point (#501) by @jpadilla\n-  Expose InvalidKeyError on jwt module (#503) by @russellcardullo\n-  Avoid loading token twice in pyjwt.decode (#506) by @CaselIT\n-  Default links to stable version of documentation (#508) by @salcedo\n-  Update README.md badges (#510) by @jpadilla\n-  Introduce better experience for JWKs (#511) by @jpadilla\n-  Fix tox conditional extras (#512) by @jpadilla\n-  Return tokens as string not bytes (#513) by @jpadilla\n-  Drop support for legacy contrib algorithms (#514) by @jpadilla\n-  Drop deprecation warnings (#515) by @jpadilla\n-  Update Auth0 sponsorship link (#519) by @Sambego\n-  Update return type for jwt.encode (#521) by @moomoolive\n-  Run tests against Python 3.9 and add trove classifier (#522) by\n   @michael-k\n-  Removed redundant ``default_backend()`` (#523) by @rohitkg98\n-  Documents how to use private keys with passphrases (#525) by @rayluo\n-  Update version to 2.0.0a1 (#528) by @jpadilla\n-  Fix usage example (#530) by @nijel\n-  add EdDSA to docs (#531) by @CircleOnCircles\n-  Remove support for EOL Python 3.5 (#532) by @jdufresne\n-  Upgrade to isort 5 and adjust configurations (#533) by @jdufresne\n-  Remove unused argument \"verify\" from PyJWS.decode() (#534) by\n   @jdufresne\n-  Update typing syntax and usage for Python 3.6+ (#535) by @jdufresne\n-  Run pyupgrade to simplify code and use Python 3.6 syntax (#536) by\n   @jdufresne\n-  Drop unknown pytest config option: strict (#537) by @jdufresne\n-  Upgrade black version and usage (#538) by @jdufresne\n-  Remove \"Command line\" sections from docs (#539) by @jdufresne\n-  Use existing key\\_path() utility function throughout tests (#540) by\n   @jdufresne\n-  Replace force\\_bytes()/force\\_unicode() in tests with literals (#541)\n   by @jdufresne\n-  Remove unnecessary Unicode decoding before json.loads() (#542) by\n   @jdufresne\n-  Remove unnecessary force\\_bytes() calls prior to base64url\\_decode()\n   (#543) by @jdufresne\n-  Remove deprecated arguments from docs (#544) by @jdufresne\n-  Update code blocks in docs (#545) by @jdufresne\n-  Refactor jwt/jwks\\_client.py without requests dependency (#546) by\n   @jdufresne\n-  Tighten bytes/str boundaries and remove unnecessary coercing (#547)\n   by @jdufresne\n-  Replace codecs.open() with builtin open() (#548) by @jdufresne\n-  Replace int\\_from\\_bytes() with builtin int.from\\_bytes() (#549) by\n   @jdufresne\n-  Enforce .encode() return type using mypy (#551) by @jdufresne\n-  Prefer direct indexing over options.get() (#552) by @jdufresne\n-  Cleanup \"noqa\" comments (#553) by @jdufresne\n-  Replace merge\\_dict() with builtin dict unpacking generalizations\n   (#555) by @jdufresne\n-  Do not mutate the input payload in PyJWT.encode() (#557) by\n   @jdufresne\n-  Use direct indexing in PyJWKClient.get\\_signing\\_key\\_from\\_jwt()\n   (#558) by @jdufresne\n-  Split PyJWT/PyJWS classes to tighten type interfaces (#559) by\n   @jdufresne\n-  Simplify mocked\\_response test utility function (#560) by @jdufresne\n-  Autoupdate pre-commit hooks and apply them (#561) by @jdufresne\n-  Remove unused argument \"payload\" from PyJWS.\\ *verify*\\ signature()\n   (#562) by @jdufresne\n-  Add utility functions to assist test skipping (#563) by @jdufresne\n-  Type hint jwt.utils module (#564) by @jdufresne\n-  Prefer ModuleNotFoundError over ImportError (#565) by @jdufresne\n-  Fix tox \"manifest\" environment to pass (#566) by @jdufresne\n-  Fix tox \"docs\" environment to pass (#567) by @jdufresne\n-  Simplify black configuration to be closer to upstream defaults (#568)\n   by @jdufresne\n-  Use generator expressions (#569) by @jdufresne\n-  Simplify from\\_base64url\\_uint() (#570) by @jdufresne\n-  Drop lint environment from GitHub actions in favor of pre-commit.ci\n   (#571) by @jdufresne\n-  [pre-commit.ci] pre-commit autoupdate (#572)\n-  Simplify tox configuration (#573) by @jdufresne\n-  Combine identical test functions using pytest.mark.parametrize()\n   (#574) by @jdufresne\n-  Complete type hinting of jwks\\_client.py (#578) by @jdufresne\n\n`v1.7.1 <https://github.com/jpadilla/pyjwt/compare/1.7.0...1.7.1>`__\n--------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  Update test dependencies with pinned ranges\n-  Fix pytest deprecation warnings\n\n`v1.7.0 <https://github.com/jpadilla/pyjwt/compare/1.6.4...1.7.0>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n-  Remove CRLF line endings\n   `#353 <https://github.com/jpadilla/pyjwt/pull/353>`__\n\nFixed\n~~~~~\n\n-  Update usage.rst\n   `#360 <https://github.com/jpadilla/pyjwt/pull/360>`__\n\nAdded\n~~~~~\n\n-  Support for Python 3.7\n   `#375 <https://github.com/jpadilla/pyjwt/pull/375>`__\n   `#379 <https://github.com/jpadilla/pyjwt/pull/379>`__\n   `#384 <https://github.com/jpadilla/pyjwt/pull/384>`__\n\n`v1.6.4 <https://github.com/jpadilla/pyjwt/compare/1.6.3...1.6.4>`__\n--------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  Reverse an unintentional breaking API change to .decode()\n   `#352 <https://github.com/jpadilla/pyjwt/pull/352>`__\n\n`v1.6.3 <https://github.com/jpadilla/pyjwt/compare/1.6.1...1.6.3>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n-  All exceptions inherit from PyJWTError\n   `#340 <https://github.com/jpadilla/pyjwt/pull/340>`__\n\nAdded\n~~~~~\n\n-  Add type hints `#344 <https://github.com/jpadilla/pyjwt/pull/344>`__\n-  Add help module\n   `7ca41e <https://github.com/jpadilla/pyjwt/commit/7ca41e53b3d7d9f5cd31bdd8a2b832d192006239>`__\n\nDocs\n~~~~\n\n-  Added section to usage docs for jwt.get\\_unverified\\_header()\n   `#350 <https://github.com/jpadilla/pyjwt/pull/350>`__\n-  Update legacy instructions for using pycrypto\n   `#337 <https://github.com/jpadilla/pyjwt/pull/337>`__\n\n`v1.6.1 <https://github.com/jpadilla/pyjwt/compare/1.6.0...1.6.1>`__\n--------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  Audience parameter throws ``InvalidAudienceError`` when application\n   does not specify an audience, but the token does.\n   `#336 <https://github.com/jpadilla/pyjwt/pull/336>`__\n\n`v1.6.0 <https://github.com/jpadilla/pyjwt/compare/1.5.3...1.6.0>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n-  Dropped support for python 2.6 and 3.3\n   `#301 <https://github.com/jpadilla/pyjwt/pull/301>`__\n-  An invalid signature now raises an ``InvalidSignatureError`` instead\n   of ``DecodeError``\n   `#316 <https://github.com/jpadilla/pyjwt/pull/316>`__\n\nFixed\n~~~~~\n\n-  Fix over-eager fallback to stdin\n   `#304 <https://github.com/jpadilla/pyjwt/pull/304>`__\n\nAdded\n~~~~~\n\n-  Audience parameter now supports iterables\n   `#306 <https://github.com/jpadilla/pyjwt/pull/306>`__\n\n`v1.5.3 <https://github.com/jpadilla/pyjwt/compare/1.5.2...1.5.3>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n-  Increase required version of the cryptography package to >=1.4.0.\n\nFixed\n~~~~~\n\n-  Remove uses of deprecated functions from the cryptography package.\n-  Warn about missing ``algorithms`` param to ``decode()`` only when\n   ``verify`` param is ``True``\n   `#281 <https://github.com/jpadilla/pyjwt/pull/281>`__\n\n`v1.5.2 <https://github.com/jpadilla/pyjwt/compare/1.5.1...1.5.2>`__\n--------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  Ensure correct arguments order in decode super call\n   `7c1e61d <https://github.com/jpadilla/pyjwt/commit/7c1e61dde27bafe16e7d1bb6e35199e778962742>`__\n\n`v1.5.1 <https://github.com/jpadilla/pyjwt/compare/1.5.0...1.5.1>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n-  Change optparse for argparse.\n   `#238 <https://github.com/jpadilla/pyjwt/pull/238>`__\n\nFixed\n~~~~~\n\n-  Guard against PKCS1 PEM encoded public keys\n   `#277 <https://github.com/jpadilla/pyjwt/pull/277>`__\n-  Add deprecation warning when decoding without specifying\n   ``algorithms`` `#277 <https://github.com/jpadilla/pyjwt/pull/277>`__\n-  Improve deprecation messages\n   `#270 <https://github.com/jpadilla/pyjwt/pull/270>`__\n-  PyJWT.decode: move verify param into options\n   `#271 <https://github.com/jpadilla/pyjwt/pull/271>`__\n\nAdded\n~~~~~\n\n-  Support for Python 3.6\n   `#262 <https://github.com/jpadilla/pyjwt/pull/262>`__\n-  Expose jwt.InvalidAlgorithmError\n   `#264 <https://github.com/jpadilla/pyjwt/pull/264>`__\n\n`v1.5.0 <https://github.com/jpadilla/pyjwt/compare/1.4.2...1.5.0>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n-  Add support for ECDSA public keys in RFC 4253 (OpenSSH) format\n   `#244 <https://github.com/jpadilla/pyjwt/pull/244>`__\n-  Renamed commandline script ``jwt`` to ``jwt-cli`` to avoid issues\n   with the script clobbering the ``jwt`` module in some circumstances.\n   `#187 <https://github.com/jpadilla/pyjwt/pull/187>`__\n-  Better error messages when using an algorithm that requires the\n   cryptography package, but it isn't available\n   `#230 <https://github.com/jpadilla/pyjwt/pull/230>`__\n-  Tokens with future 'iat' values are no longer rejected\n   `#190 <https://github.com/jpadilla/pyjwt/pull/190>`__\n-  Non-numeric 'iat' values now raise InvalidIssuedAtError instead of\n   DecodeError\n-  Remove rejection of future 'iat' claims\n   `#252 <https://github.com/jpadilla/pyjwt/pull/252>`__\n\nFixed\n~~~~~\n\n-  Add back 'ES512' for backward compatibility (for now)\n   `#225 <https://github.com/jpadilla/pyjwt/pull/225>`__\n-  Fix incorrectly named ECDSA algorithm\n   `#219 <https://github.com/jpadilla/pyjwt/pull/219>`__\n-  Fix rpm build `#196 <https://github.com/jpadilla/pyjwt/pull/196>`__\n\nAdded\n~~~~~\n\n-  Add JWK support for HMAC and RSA keys\n   `#202 <https://github.com/jpadilla/pyjwt/pull/202>`__\n\n`v1.4.2 <https://github.com/jpadilla/pyjwt/compare/1.4.1...1.4.2>`__\n--------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  A PEM-formatted key encoded as bytes could cause a ``TypeError`` to\n   be raised `#213 <https://github.com/jpadilla/pyjwt/pull/214>`__\n\n`v1.4.1 <https://github.com/jpadilla/pyjwt/compare/1.4.0...1.4.1>`__\n--------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  Newer versions of Pytest could not detect warnings properly\n   `#182 <https://github.com/jpadilla/pyjwt/pull/182>`__\n-  Non-string 'kid' value now raises ``InvalidTokenError``\n   `#174 <https://github.com/jpadilla/pyjwt/pull/174>`__\n-  ``jwt.decode(None)`` now gracefully fails with ``InvalidTokenError``\n   `#183 <https://github.com/jpadilla/pyjwt/pull/183>`__\n\n`v1.4 <https://github.com/jpadilla/pyjwt/compare/1.3.0...1.4.0>`__\n------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  Exclude Python cache files from PyPI releases.\n\nAdded\n~~~~~\n\n-  Added new options to require certain claims (require\\_nbf,\n   require\\_iat, require\\_exp) and raise ``MissingRequiredClaimError``\n   if they are not present.\n-  If ``audience=`` or ``issuer=`` is specified but the claim is not\n   present, ``MissingRequiredClaimError`` is now raised instead of\n   ``InvalidAudienceError`` and ``InvalidIssuerError``\n\n`v1.3 <https://github.com/jpadilla/pyjwt/compare/1.2.0...1.3.0>`__\n------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  ECDSA (ES256, ES384, ES512) signatures are now being properly\n   serialized `#158 <https://github.com/jpadilla/pyjwt/pull/158>`__\n-  RSA-PSS (PS256, PS384, PS512) signatures now use the proper salt\n   length for PSS padding.\n   `#163 <https://github.com/jpadilla/pyjwt/pull/163>`__\n\nAdded\n~~~~~\n\n-  Added a new ``jwt.get_unverified_header()`` to parse and return the\n   header portion of a token prior to signature verification.\n\nRemoved\n~~~~~~~\n\n-  Python 3.2 is no longer a supported platform. This version of Python\n   is rarely used. Users affected by this should upgrade to 3.3+.\n\n`v1.2.0 <https://github.com/jpadilla/pyjwt/compare/1.1.0...1.2.0>`__\n--------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  Added back ``verify_expiration=`` argument to ``jwt.decode()`` that\n   was erroneously removed in\n   `v1.1.0 <https://github.com/jpadilla/pyjwt/compare/1.0.1...1.1.0>`__.\n\nChanged\n~~~~~~~\n\n-  Refactored JWS-specific logic out of PyJWT and into PyJWS superclass.\n   `#141 <https://github.com/jpadilla/pyjwt/pull/141>`__\n\nDeprecated\n~~~~~~~~~~\n\n-  ``verify_expiration=`` argument to ``jwt.decode()`` is now deprecated\n   and will be removed in a future version. Use the ``option=`` argument\n   instead.\n\n`v1.1.0 <https://github.com/jpadilla/pyjwt/compare/1.0.1...1.1.0>`__\n--------------------------------------------------------------------\n\nAdded\n~~~~~\n\n-  Added support for PS256, PS384, and PS512 algorithms.\n   `#132 <https://github.com/jpadilla/pyjwt/pull/132>`__\n-  Added flexible and complete verification options during decode.\n   `#131 <https://github.com/jpadilla/pyjwt/pull/131>`__\n-  Added this CHANGELOG.md file.\n\nDeprecated\n~~~~~~~~~~\n\n-  Deprecated usage of the .decode(..., verify=False) parameter.\n\nFixed\n~~~~~\n\n-  Fixed command line encoding.\n   `#128 <https://github.com/jpadilla/pyjwt/pull/128>`__\n\n`v1.0.1 <https://github.com/jpadilla/pyjwt/compare/1.0.0...1.0.1>`__\n--------------------------------------------------------------------\n\nFixed\n~~~~~\n\n-  Include jwt/contrib' and jwt/contrib/algorithms\\` in setup.py so that\n   they will actually be included when installing.\n   `882524d <https://github.com/jpadilla/pyjwt/commit/882524d>`__\n-  Fix bin/jwt after removing jwt.header().\n   `bd57b02 <https://github.com/jpadilla/pyjwt/commit/bd57b02>`__\n\n`v1.0.0 <https://github.com/jpadilla/pyjwt/compare/0.4.3...1.0.0>`__\n--------------------------------------------------------------------\n\nChanged\n~~~~~~~\n\n-  Moved ``jwt.api.header`` out of the public API.\n   `#85 <https://github.com/jpadilla/pyjwt/pull/85>`__\n-  Added README details how to extract public / private keys from an\n   x509 certificate.\n   `#100 <https://github.com/jpadilla/pyjwt/pull/100>`__\n-  Refactor api.py functions into an object (``PyJWT``).\n   `#101 <https://github.com/jpadilla/pyjwt/pull/101>`__\n-  Added support for PyCrypto and ecdsa when cryptography isn't\n   available. `#101 <https://github.com/jpadilla/pyjwt/pull/103>`__\n\nFixed\n~~~~~\n\n-  Fixed a security vulnerability where ``alg=None`` header could bypass\n   signature verification.\n   `#109 <https://github.com/jpadilla/pyjwt/pull/109>`__\n-  Fixed a security vulnerability by adding support for a whitelist of\n   allowed ``alg`` values ``jwt.decode(algorithms=[])``.\n   `#110 <https://github.com/jpadilla/pyjwt/pull/110>`__\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1953125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at hello@jpadilla.com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [https://www.contributor-covenant.org/version/1/4/code-of-conduct.html][version]\n\n[homepage]: https://www.contributor-covenant.org/\n[version]: https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0595703125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015-2022 JosÃ© Padilla\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.3642578125,
          "content": "include .pre-commit-config.yaml\ninclude .readthedocs.yaml\ninclude CODE_OF_CONDUCT.md\ninclude AUTHORS.rst\ninclude CHANGELOG.rst\ninclude LICENSE\ninclude README.rst\ninclude SECURITY.md\ninclude ruff.toml\ninclude tox.ini\ninclude jwt/py.typed\ngraft docs\ngraft tests\nexclude codecov.yml\nrecursive-exclude docs/_build *\nrecursive-exclude * *.py[co]\nrecursive-exclude * __pycache__\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.2275390625,
          "content": "PyJWT\n=====\n\n.. image:: https://github.com/jpadilla/pyjwt/workflows/CI/badge.svg\n   :target: https://github.com/jpadilla/pyjwt/actions?query=workflow%3ACI\n\n.. image:: https://img.shields.io/pypi/v/pyjwt.svg\n   :target: https://pypi.python.org/pypi/pyjwt\n\n.. image:: https://codecov.io/gh/jpadilla/pyjwt/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/jpadilla/pyjwt\n\n.. image:: https://readthedocs.org/projects/pyjwt/badge/?version=stable\n   :target: https://pyjwt.readthedocs.io/en/stable/\n\nA Python implementation of `RFC 7519 <https://tools.ietf.org/html/rfc7519>`_. Original implementation was written by `@progrium <https://github.com/progrium>`_.\n\nSponsor\n-------\n\n.. |auth0-logo| image:: https://github.com/user-attachments/assets/ee98379e-ee76-4bcb-943a-e25c4ea6d174\n   :width: 160px\n\n+--------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| |auth0-logo| | If you want to quickly add secure token-based authentication to Python projects, feel free to check Auth0's Python SDK and free plan at `auth0.com/signup <https://auth0.com/signup?utm_source=external_sites&utm_medium=pyjwt&utm_campaign=devn_signup>`_. |\n+--------------+-----------------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nInstalling\n----------\n\nInstall with **pip**:\n\n.. code-block:: console\n\n    $ pip install PyJWT\n\n\nUsage\n-----\n\n.. code-block:: pycon\n\n    >>> import jwt\n    >>> encoded = jwt.encode({\"some\": \"payload\"}, \"secret\", algorithm=\"HS256\")\n    >>> print(encoded)\n    eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzb21lIjoicGF5bG9hZCJ9.4twFt5NiznN84AWoo1d7KO1T_yoc0Z6XOpOVswacPZg\n    >>> jwt.decode(encoded, \"secret\", algorithms=[\"HS256\"])\n    {'some': 'payload'}\n\nDocumentation\n-------------\n\nView the full docs online at https://pyjwt.readthedocs.io/en/stable/\n\n\nTests\n-----\n\nYou can run tests from the project root after cloning with:\n\n.. code-block:: console\n\n    $ tox\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.7587890625,
          "content": "# Security Policy\n\n## Supported Versions\n\nThe following versions of this project are currently being supported with security updates.\n\n| Version  | Supported          |\n| -------  | ------------------ |\n| 2.10.x   | :white_check_mark: |\n| < 2.9    | :x:                |\n\n## Reporting a Vulnerability\nIn order for the vulnerability reports to reach maintainers as soon as possible, the preferred way is to use the \"Report a vulnerability\" button under the \"Security\" tab of the associated GitHub project. This creates a private communication channel between the reporter and the maintainers.\n\nIf you are absolutely unable to or have strong reasons not to use GitHub's vulnerability reporting workflow, please reach out to [security@jpadilla.com](mailto:security@jpadilla.com).\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.19921875,
          "content": "comment: false\ncoverage:\n    status:\n        patch:\n            default:\n                target: \"100\"\n        project:\n            default:\n                target: \"100\"\n                threshold: \"10%\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "jwt",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.423828125,
          "content": "[build-system]\nbuild-backend = \"setuptools.build_meta\"\nrequires = [\n    \"setuptools\",\n]\n\n[project]\nauthors = [\n    { email = \"hello@jpadilla.com\", name = \"Jose Padilla\" },\n]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: MIT License\",\n    \"Natural Language :: English\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Topic :: Utilities\",\n]\ndescription = \"JSON Web Token implementation in Python\"\ndynamic = [\n    \"version\",\n]\nkeywords = [\n    \"json\",\n    \"jwt\",\n    \"security\",\n    \"signing\",\n    \"token\",\n    \"web\",\n]\nname = \"PyJWT\"\nrequires-python = \">=3.9\"\n\n[project.license]\ntext = \"MIT\"\n\n[project.optional-dependencies]\ncrypto = [\n    \"cryptography>=3.4.0\",\n]\ndev = [\n    \"coverage[toml]==5.0.4\",\n    \"cryptography>=3.4.0\",\n    \"pre-commit\",\n    \"pytest>=6.0.0,<7.0.0\",\n    \"sphinx\",\n    \"sphinx-rtd-theme\",\n    \"zope.interface\",\n]\ndocs = [\n    \"sphinx\",\n    \"sphinx-rtd-theme\",\n    \"zope.interface\",\n]\ntests = [\n    \"coverage[toml]==5.0.4\",\n    \"pytest>=6.0.0,<7.0.0\",\n]\n\n[project.readme]\ncontent-type = \"text/x-rst\"\nfile = \"README.rst\"\n\n[project.urls]\nHomepage = \"https://github.com/jpadilla/pyjwt\"\n\n[tool.coverage.paths]\nsource = [\n    \".tox/*/site-packages\",\n    \"jwt\",\n]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"if TYPE_CHECKING:\",\n    \"pragma: no cover\",\n]\nshow_missing = true\n\n[tool.coverage.run]\nbranch = true\nparallel = true\nsource = [\n    \"jwt\",\n]\n\n[tool.isort]\natomic = true\ncombine_as_imports = true\nprofile = \"black\"\n\n[tool.mypy]\nallow_incomplete_defs = true\nallow_untyped_defs = true\ndisable_error_code = [\n    \"method-assign\",\n    \"unused-ignore\",\n]\nignore_missing_imports = true\nno_implicit_optional = true\noverrides = [\n    { disallow_untyped_calls = false, module = \"tests.*\" },\n]\npython_version = 3.11\nstrict = true\nwarn_return_any = false\nwarn_unused_ignores = true\n\n[tool.setuptools]\ninclude-package-data = true\nzip-safe = false\n\n[tool.setuptools.dynamic.version]\nattr = \"jwt.__version__\"\n\n[tool.setuptools.package-data]\n\"*\" = [\n    \"py.typed\",\n]\n\n[tool.setuptools.packages.find]\nexclude = [\n    \"tests\",\n    \"tests.*\",\n]\nnamespaces = false\n"
        },
        {
          "name": "ruff.toml",
          "type": "blob",
          "size": 1.783203125,
          "content": "# Exclude a variety of commonly ignored directories.\nexclude = [\n    \".bzr\",\n    \".direnv\",\n    \".eggs\",\n    \".git\",\n    \".git-rewrite\",\n    \".hg\",\n    \".ipynb_checkpoints\",\n    \".mypy_cache\",\n    \".nox\",\n    \".pants.d\",\n    \".pyenv\",\n    \".pytest_cache\",\n    \".pytype\",\n    \".ruff_cache\",\n    \".svn\",\n    \".tox\",\n    \".venv\",\n    \".vscode\",\n    \"__pypackages__\",\n    \"_build\",\n    \"buck-out\",\n    \"build\",\n    \"dist\",\n    \"node_modules\",\n    \"site-packages\",\n    \"venv\",\n]\n\n# Same as Black.\nline-length = 88\nindent-width = 4\n\n# Assume Python 3.9\ntarget-version = \"py39\"\n\n[lint]\n# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.\n# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or\n# McCabe complexity (`C901`) by default.\nselect = [\"E4\", \"E7\", \"E9\", \"F\", \"B\"]\nignore = [\"E501\"]\n\n# Allow fix for all enabled rules (when `--fix`) is provided.\nfixable = [\"ALL\"]\nunfixable = []\n\n# Allow unused variables when underscore-prefixed.\ndummy-variable-rgx = \"^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$\"\n\n[format]\n# Like Black, use double quotes for strings.\nquote-style = \"double\"\n\n# Like Black, indent with spaces, rather than tabs.\nindent-style = \"space\"\n\n# Like Black, respect magic trailing commas.\nskip-magic-trailing-comma = false\n\n# Like Black, automatically detect the appropriate line ending.\nline-ending = \"auto\"\n\n# Enable auto-formatting of code examples in docstrings. Markdown,\n# reStructuredText code/literal blocks and doctests are all supported.\n#\n# This is currently disabled by default, but it is planned for this\n# to be opt-out in the future.\ndocstring-code-format = false\n\n# Set the line length limit used when formatting code snippets in\n# docstrings.\n#\n# This only has an effect when the `docstring-code-format` setting is\n# enabled.\ndocstring-code-line-length = \"dynamic\"\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.5166015625,
          "content": "[flake8]\nmin_python_version = 3.9\nignore= E501, E203, W503, E704\n\n[pytest]\naddopts = -ra\ntestpaths = tests\nfilterwarnings =\n    once::Warning\n    ignore:::pympler[.*]\n\n\n[gh-actions]\npython =\n    3.9: py39\n    3.10: py310\n    3.11: py311, docs\n    3.12: py312\n    3.13: py313\n    pypy3.9: pypy3\n\n\n[tox]\nenvlist =\n    lint\n    typing\n    py{39,310,311,312,313,py3}-{crypto,nocrypto}\n    docs\n    pypi-description\n    coverage-report\nisolated_build = True\n\n\n[testenv]\n# Prevent random setuptools/pip breakages like\n# https://github.com/pypa/setuptools/issues/1042 from breaking our builds.\nsetenv =\n    VIRTUALENV_NO_DOWNLOAD=1\nextras =\n    tests\n    crypto: crypto\ncommands = {envpython} -b -m coverage run -m pytest {posargs}\n\n\n[testenv:docs]\n# The tox config must match the ReadTheDocs config.\nbasepython = python3.11\nextras =\n    docs\n    crypto\ncommands =\n    sphinx-build -n -T -W -b html -d {envtmpdir}/doctrees docs docs/_build/html\n    sphinx-build -n -T -W -b doctest -d {envtmpdir}/doctrees docs docs/_build/html\n    python -m doctest README.rst docs/usage.rst\n\n\n[testenv:lint]\nbasepython = python3.9\nextras = dev\npassenv = HOMEPATH  # needed on Windows\ncommands = pre-commit run --all-files\n\n\n[testenv:pypi-description]\nbasepython = python3.9\nskip_install = true\ndeps =\n    twine\n    pip >= 18.0.0\ncommands =\n    pip wheel -w {envtmpdir}/build --no-deps .\n    twine check {envtmpdir}/build/*\n\n\n[testenv:coverage-report]\nbasepython = python3.9\nskip_install = true\ndeps = coverage[toml]==5.0.4\ncommands =\n    coverage combine\n    coverage report\n"
        }
      ]
    }
  ]
}