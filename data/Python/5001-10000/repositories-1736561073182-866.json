{
  "metadata": {
    "timestamp": 1736561073182,
    "page": 866,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjg2OA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Layout-Parser/layout-parser",
      "stars": 5008,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.607421875,
          "content": "# Examples files \nexamples/Customizing Layout Models with Label Studio Annotation/downloaded-annotations\n\n*.bak\n.gitattributes\n.last_checked\n.gitconfig\n*.bak\n*.log\n*~\n~*\n_tmp*\ntmp*\ntags\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# dotenv\n.env\n\n# virtualenv\n.venv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n.vscode\n*.swp\n\n# osx generated files\n.DS_Store\n.DS_Store?\n.Trashes\nehthumbs.db\nThumbs.db\n.idea\n\n# pytest\n.pytest_cache\n\n# tools/trust-doc-nbs\ndocs_src/.last_checked\n\n# symlinks to fastai\ndocs_src/fastai\ntools/fastai\n\n# link checker\nchecklink/cookies.txt\n\n# .gitconfig is now autogenerated\n.gitconfig\n\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.546875,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Optionally build your docs in additional formats such as PDF\nformats: all\n\n# Optionally set the version of Python and requirements required to build your docs\npython:\n  version: 3.7\n  install:\n    - method: pip\n      path: .\n      extra_requirements:\n        - effdet\n    - requirements: dev-requirements.txt"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0986328125,
          "content": "include LICENSE\ninclude README.md\ninclude src/layoutparser/misc/*.otf\nrecursive-exclude * __pycache__"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6806640625,
          "content": "<p align=\"center\">\n  <img src=\"https://github.com/Layout-Parser/layout-parser/raw/main/.github/layout-parser.png\" alt=\"Layout Parser Logo\" width=\"35%\">\n  <h3 align=\"center\">\n  A unified toolkit for Deep Learning Based Document Image Analysis\n  </h3>\n</p>\n\n<p align=center>\n<a href=\"https://pypi.org/project/layoutparser/\"><img src=\"https://img.shields.io/pypi/v/layoutparser?color=%23099cec&label=PyPI%20package&logo=pypi&logoColor=white\" title=\"The current version of Layout Parser\"></a>\n<a href=\"https://github.com/Layout-Parser/layout-parser/blob/main/LICENSE\"><img src=\"https://img.shields.io/pypi/l/layoutparser\" title=\"Layout Parser uses Apache 2 License\"></a>\n<img alt=\"PyPI - Downloads\" src=\"https://img.shields.io/pypi/dm/layoutparser\">\n</p>\n\n<p align=center>\n<a href=\"https://arxiv.org/abs/2103.15348\"><img src=\"https://img.shields.io/badge/paper-2103.15348-b31b1b.svg\" title=\"Layout Parser Paper\"></a>\n<a href=\"https://layout-parser.github.io\"><img src=\"https://img.shields.io/badge/website-layout--parser.github.io-informational.svg\" title=\"Layout Parser Paper\"></a>\n<a href=\"https://layout-parser.readthedocs.io/en/latest/\"><img src=\"https://img.shields.io/badge/doc-layout--parser.readthedocs.io-light.svg\" title=\"Layout Parser Documentation\"></a>\n</p>\n\n---\n\n## What is LayoutParser\n\n![Example Usage](https://github.com/Layout-Parser/layout-parser/raw/main/.github/example.png)\n\nLayoutParser aims to provide a wide range of tools that aims to streamline Document Image Analysis (DIA) tasks. Please check the LayoutParser [demo video](https://youtu.be/8yA5xB4Dg8c) (1 min) or [full talk](https://www.youtube.com/watch?v=YG0qepPgyGY) (15 min) for details. And here are some key features:\n\n- LayoutParser provides a rich repository of deep learning models for layout detection as well as a set of unified APIs for using them. For example, \n  \n  <details>\n  <summary>Perform DL layout detection in 4 lines of code</summary>\n  \n  ```python\n  import layoutparser as lp\n  model = lp.AutoLayoutModel('lp://EfficientDete/PubLayNet')\n  # image = Image.open(\"path/to/image\")\n  layout = model.detect(image) \n  ```\n  \n  </details>\n\n- LayoutParser comes with a set of layout data structures with carefully designed APIs that are optimized for document image analysis tasks. For example, \n\n  <details>\n  <summary>Selecting layout/textual elements in the left column of a page</summary>\n  \n  ```python\n  image_width = image.size[0]\n  left_column = lp.Interval(0, image_width/2, axis='x')\n  layout.filter_by(left_column, center=True) # select objects in the left column \n  ```\n  \n  </details>\n\n  <details>\n  <summary>Performing OCR for each detected Layout Region</summary>\n  \n  ```python\n  ocr_agent = lp.TesseractAgent()\n  for layout_region in layout: \n      image_segment = layout_region.crop(image)\n      text = ocr_agent.detect(image_segment)\n  ```\n  \n  </details>  \n    \n  <details>\n  <summary>Flexible APIs for visualizing the detected layouts</summary>\n  \n  ```python\n  lp.draw_box(image, layout, box_width=1, show_element_id=True, box_alpha=0.25)\n  ```\n  \n  </details>  \n    \n  </details>  \n    \n  <details>\n  <summary>Loading layout data stored in json, csv, and even PDFs</summary>\n  \n  ```python \n  layout = lp.load_json(\"path/to/json\")\n  layout = lp.load_csv(\"path/to/csv\")\n  pdf_layout = lp.load_pdf(\"path/to/pdf\")\n  ```\n  \n  </details>\n\n- LayoutParser is also a open platform that enables the sharing of layout detection models and DIA pipelines among the community. \n  <details>\n  <summary><a href=\"https://layout-parser.github.io/platform/\">Check</a> the LayoutParser open platform</summary>\n  </details>\n\n  <details>\n  <summary><a href=\"https://github.com/Layout-Parser/platform\">Submit</a> your models/pipelines to LayoutParser</summary>\n  </details>\n\n## Installation \n\nAfter several major updates, layoutparser provides various functionalities and deep learning models from different backends. But it still easy to install layoutparser, and we designed the installation method in a way such that you can choose to install only the needed dependencies for your project:\n\n```bash\npip install layoutparser # Install the base layoutparser library with  \npip install \"layoutparser[layoutmodels]\" # Install DL layout model toolkit \npip install \"layoutparser[ocr]\" # Install OCR toolkit\n```\n\nExtra steps are needed if you want to use Detectron2-based models. Please check [installation.md](installation.md) for additional details on layoutparser installation. \n\n## Examples \n\nWe provide a series of examples for to help you start using the layout parser library: \n\n1. [Table OCR and Results Parsing](https://github.com/Layout-Parser/layout-parser/blob/main/examples/OCR%20Tables%20and%20Parse%20the%20Output.ipynb): `layoutparser` can be used for conveniently OCR documents and convert the output in to structured data. \n\n2. [Deep Layout Parsing Example](https://github.com/Layout-Parser/layout-parser/blob/main/examples/Deep%20Layout%20Parsing.ipynb): With the help of Deep Learning, `layoutparser` supports the analysis very complex documents and processing of the hierarchical structure in the layouts. \n\n## Contributing\n\nWe encourage you to contribute to Layout Parser! Please check out the [Contributing guidelines](.github/CONTRIBUTING.md) for guidelines about how to proceed. Join us!\n\n## Citing `layoutparser`\n\nIf you find `layoutparser` helpful to your work, please consider citing our tool and [paper](https://arxiv.org/pdf/2103.15348.pdf) using the following BibTeX entry.\n\n```\n@article{shen2021layoutparser,\n  title={LayoutParser: A Unified Toolkit for Deep Learning Based Document Image Analysis},\n  author={Shen, Zejiang and Zhang, Ruochen and Dell, Melissa and Lee, Benjamin Charles Germain and Carlson, Jacob and Li, Weining},\n  journal={arXiv preprint arXiv:2103.15348},\n  year={2021}\n}\n```"
        },
        {
          "name": "dev-requirements.txt",
          "type": "blob",
          "size": 0.263671875,
          "content": "pytest\ntorch\nnumpy\nopencv-python\npandas\ndocutils==0.16\nSphinx==3.0.0\nrecommonmark==0.6.0\nsphinx-markdown-tables\nsphinx_rtd_theme\ngoogle-cloud-vision==1\npytesseract\npycocotools\ngit+https://github.com/facebookresearch/detectron2.git@v0.4#egg=detectron2\npaddlepaddle\neffdet"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "installation.md",
          "type": "blob",
          "size": 5.4326171875,
          "content": "# Installation\n\n## Install Python\n\nLayoutParser is a Python package that requires Python >= 3.6. If you do not have Python installed on your computer, you might want to turn to [the official instruction](https://www.python.org/downloads/) to download and install the appropriate version of Python.\n\n\n\n## Install the LayoutParser library\n\nAfter several major updates, LayoutParser provides various functionalities and deep learning models from different backends. However, you might only need a fraction of the functions, and it would be redundant for you to install all the dependencies when they are not required. Therefore, we design highly customizable ways for installing the LayoutParser library: \n\n\n| Command | Description |\n| --- | --- |\n| `pip install layoutparser`                   | **Install the base LayoutParser Library**<br>It will support all key functions in LayoutParser, including:<br />1. Layout Data Structure and operations<br />2. Layout Visualization <br />3. Load/export the layout data |\n| `pip install \"layoutparser[effdet]\"`           | **Install LayoutParser with Layout Detection Model Support**<br />It will install the LayoutParser base library as well as<br />supporting dependencies for the ***EfficientDet***-based layout detection models. |\n| `pip install layoutparser torchvision && pip install \"git+https://github.com/facebookresearch/detectron2.git@v0.5#egg=detectron2\"` | **Install LayoutParser with Layout Detection Model Support**<br />It will install the LayoutParser base library as well as<br />supporting dependencies for the ***Detectron2***-based layout detection models. See details in [Additional Instruction: Install Detectron2 Layout Model Backend](#additional-instruction-install-detectron2-layout-model-backend). |\n| `pip install \"layoutparser[paddledetection]\"`  | **Install LayoutParser with Layout Detection Model Support**<br />It will install the LayoutParser base library as well as<br />supporting dependencies for the ***PaddleDetection***-based layout detection models.  |\n| `pip install \"layoutparser[ocr]\"`              | **Install LayoutParser with OCR Support**<br />It will install the LayoutParser base library as well as<br />supporting dependencies for performing OCRs. See details in [Additional Instruction: Install OCR utils](#additional-instruction-install-ocr-utils).  |\n\n### Additional Instruction: Install Detectron2 Layout Model Backend\n\n#### For Mac OS and Linux Users \n\nIf you would like to use the Detectron2 models for layout detection, you might need to run the following command: \n\n```bash\npip install layoutparser torchvision && pip install \"detectron2@git+https://github.com/facebookresearch/detectron2.git@v0.5#egg=detectron2\"\n```\n\nThis might take some time as the command will *compile* the library. If you also want to install a Detectron2 version \nwith GPU support or encounter some issues during the installation process, please refer to the official Detectron2 \n[installation instruction](https://github.com/facebookresearch/detectron2/blob/master/INSTALL.md) for detailed\ninformation. \n\n#### For Windows users\n\nAs reported by many users, the installation of Detectron2 can be rather tricky on Windows platforms. In our extensive tests, we find that it is nearly impossible to provide a one-line installation command for Windows users. As a workaround solution, for now we list the possible challenges for installing Detectron2 on Windows, and attach helpful resources for solving them. We are also investigating other possibilities to avoid installing Detectron2 to use pre-trained models. If you have any suggestions or ideas, please feel free to [submit an issue](https://github.com/Layout-Parser/layout-parser/issues) in our repo. \n\n1. Challenges for installing `pycocotools` \n    - You can find detailed instructions on [this post](https://changhsinlee.com/pycocotools/) from Chang Hsin Lee. \n    - Another solution is try to install `pycocotools-windows`, see https://github.com/cocodataset/cocoapi/issues/415. \n2. Challenges for installing `Detectron2` \n    - [@ivanpp](https://github.com/ivanpp) curates a detailed description for installing `Detectron2` on Windows: [Detectron2 walkthrough (Windows)](https://ivanpp.cc/detectron2-walkthrough-windows/#step3installdetectron2)\n    - `Detectron2` maintainers claim that they won't provide official support for Windows (see [1](https://github.com/facebookresearch/detectron2/issues/9#issuecomment-540974288) and [2](https://detectron2.readthedocs.io/en/latest/tutorials/install.html)), but Detectron2 is continuously built on windows with CircleCI (see [3](https://github.com/facebookresearch/detectron2/blob/master/INSTALL.md#common-installation-issues)). Hopefully this situation will be improved in the future.\n\n\n### Additional Instructions: Install OCR utils\n\nLayout Parser also comes with supports for OCR functions. In order to use them, you need to install the OCR utils via: \n\n```bash\npip install \"layoutparser[ocr]\"\n```\n\nAdditionally, if you want to use the Tesseract-OCR engine, you also need to install it on your computer. Please check the \n[official documentation](https://tesseract-ocr.github.io/tessdoc/Installation.html) for detailed installation instructions. \n\n## Known issues\n\n<details><summary>Error: instantiating `lp.GCVAgent.with_credential` returns module 'google.cloud.vision' has no attribute 'types'. </summary>\n<p>\n\nIn this case, you have a newer version of the google-cloud-vision. Please consider downgrading the API using: \n```bash\npip install -U layoutparser[ocr]\n```\n</p>\n</details>"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.7255859375,
          "content": "[metadata]\nname = layoutparser\ndescription = Layout Parser is a deep learning assisted tool for Document Image Layout Analysis.\nkeywords = layout analysis, deep learning\nlicense = Apache-2.0\nclassifiers =\n    Intended Audience :: Developers\n    Intended Audience :: Education\n    Intended Audience :: Science/Research\n    License :: OSI Approved :: Apache Software License\n    Programming Language :: Python :: 3\n    Programming Language :: Python :: 3.6\n    Programming Language :: Python :: 3.7\n    Programming Language :: Python :: 3.8\n    Programming Language :: Python :: 3.9\n    Topic :: Scientific/Engineering :: Artificial Intelligence\n\n[options]\nzip_safe = False\npackage_dir=\n    =src\npackages=find:\n\n[options.packages.find]\nwhere=src"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.392578125,
          "content": "# Copyright 2021 The Layout Parser team. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nfrom setuptools import setup, find_packages\nimport os \n\n# A trick from https://github.com/jina-ai/jina/blob/79b302c93b01689e82cf4b52f46522eb7497c404/setup.py#L20\npkg_name = 'layoutparser'\nlibinfo_py = os.path.join('src', pkg_name, '__init__.py')\nlibinfo_content = open(libinfo_py, 'r', encoding='utf8').readlines()\nversion_line = [l.strip() for l in libinfo_content if l.startswith('__version__')][0]\nexec(version_line)  # gives __version__\n\nsetup(name         = \"layoutparser\",\n      version      = __version__,\n      author       = \"Zejiang Shen, Ruochen Zhang, and Layout Parser Model Contributors\",\n      author_email = \"layoutparser@gmail.com\",\n      license      = \"Apache-2.0\",\n      url          = \"https://github.com/Layout-Parser/layout-parser\",\n      package_dir  = {\"\": \"src\"},\n      packages     = find_packages(\"src\"),\n      description  = \"A unified toolkit for Deep Learning Based Document Image Analysis\",\n      long_description=open(\"README.md\", \"r\", encoding=\"utf-8\").read(),\n      long_description_content_type=\"text/markdown\",\n      python_requires='>=3.6',\n      install_requires=[\n        \"numpy\", \n        \"opencv-python\",\n        \"scipy\",\n        \"pandas\",\n        \"pillow\",\n        \"pyyaml>=5.1\",\n        \"iopath\",\n        \"pdfplumber\",\n        \"pdf2image\",\n      ],\n      extras_require={\n        \"ocr\": [\n          'google-cloud-vision==1',\n          'pytesseract'\n        ], \n        \"gcv\": [\n          'google-cloud-vision==1',\n        ],\n        \"tesseract\": [\n          'pytesseract'\n        ],\n        \"layoutmodels\": [\n          \"torch\",\n          \"torchvision\",\n          \"effdet\"\n        ],\n        \"effdet\": [\n          \"torch\",\n          \"torchvision\",\n          \"effdet\"\n        ],\n        \"paddledetection\": [\n          \"paddlepaddle==2.1.0\"\n        ],\n      },\n      include_package_data=True\n      )"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests_deps",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}