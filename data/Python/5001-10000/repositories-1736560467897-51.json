{
  "metadata": {
    "timestamp": 1736560467897,
    "page": 51,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "coursera-dl/coursera-dl",
      "stars": 9404,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.228515625,
          "content": "# -*- conf -*-\n[report]\nomit =\n    */python?.?/*\n    */site-packages/nose/*\n\nexclude_lines =\n    # Have to re-enable the standard pragma\n    pragma: no cover\n\n    # Python 2/3 compatibility\n    except ImportError\n    sys.version_info\n"
        },
        {
          "name": ".ctags",
          "type": "blob",
          "size": 0.0810546875,
          "content": "--exclude=.tox\n--exclude=build\n--exclude=*.patch\n--exclude=*.html\n--exclude=*.json\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.095703125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.033203125,
          "content": "coursera/test/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2109375,
          "content": "*.py[co]\n*~\n.DS_Store\n_cache/\n.cache/\n.vagrant/\n.coverage\n/cover/\n/htmlcov/\n/build/\n/dist/\n*.egg-info\n.tox\ntags\ntmp\n\n# virtualenv folders\nvenv2\nvenv3\n.idea\n.python-version\n.ipynb_checkpoints\n.ropeproject\n.mypy_cache\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3857421875,
          "content": "language: python\npython:\n  - \"2.7\"\n  - \"3.6\"\n  - \"3.7\"\n  - \"3.8\"\n  - \"3.9\"\n  - \"pypy\"\nmatrix:\n  allow_failures:\n    - python: \"pypy\"\n# command to install dependencies\ninstall:\n  - pip install -r requirements.txt\n  - pip install -r requirements-dev.txt\n  - pip install coveralls\n# command to run tests\nscript: py.test coursera/test -v --cov coursera --cov-report html\n\nafter_success:\n  coveralls\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 0.6416015625,
          "content": "# Introduction\n\nIn no lexicographic/alphabetical order, this file lists authors and\ncontributors to the project.  It is meant to recognize and credit their\ncontributions to the project.\n\nIntroduction of names in this file is completely voluntary, as some people\nmay not want to be included given their potential employment requirements or\nother issues. We respect the contributor's wishes.\n\nTo be included in this file, just send a pull request with your name, once\nyou have at least one contribution to the project.\n\n# Contributors\n\n* John Lehmann\n* Jonas De Taeye\n* Rogério Theodoro de Brito\n* Mohammad Amin Solhizadeh\n* Victor Westmann\n* Yuri Bochkarev\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.5263671875,
          "content": "# Change Log\n\n## 0.11.5 (2019-12-16)\n\nFeatures:\n  - add --cauth argument to specify CAUTH cookie directly from command-line (#724)\n\n## 0.11.4 (2018-06-24)\n\nFeatures:\n  - Do not expand class names if there is a specialization with the same name,\n    but add --specialization flag to do that explicitly (#673)\n\n## 0.11.3 (2018-06-24)\n\nBugfixes:\n  - Switch to newer API for syllabus and lecture retrieval (#665, #673, #634)\n\nFeatures:\n  - You can now download specializations: the child courses will be\n    downloaded automatically\n\n## 0.11.2 (2018-06-03)\n\nBugfixes:\n  - Use TLS v1.2 instead of v1.0\n  - Switched to api.coursera.org subdomain for subtitles requests (#664)\n\n## 0.11.1 (2018-06-02)\n\nBugfixes:\n  - Specify utf-8 encoding in setup.py to fix installation on Windows (#662)\n\n## 0.11.0 (2018-06-02)\n\nFeatures:\n  - Add support for \"peer assignment\" section (#650)\n\nBugfixes:\n  - Switched to api.coursera.org subdomain for API requests (#660)\n\n## 0.10.0 (2018-02-19)\n\nFeatures:\n  - Support Coursera Notebooks (option: `--download-notebooks`)\n  - Add hints in the documentation for users in China\n\n## 0.9.0 (2017-05-25)\n\nFeatures:\n  - Default arguments are loaded from `coursera-dl.conf` file\n  - Added option `--mathjax-cdn <MATHJAX_CDN>` to specify alternative MathJax CDN\n  - Added support for Resources section\n\n## 0.8.0 (2016-10-04)\n\nFeatures:\n  - Add `--download-delay` option that adds a specified delay in seconds\n    before downloading next course. This is useful when downloading many\n    courses at once. Default value is 60 seconds.\n  - Add `--only-syllabus` option which is when activated, allows to skip\n    download of the course content. Only syllabus is parsed.\n  - Add support for `reflect` and `mcqReflect` question types in quizzes.\n  - Courses that encountered an error while parsing syllabus will be listed\n    in the end of the program execution, after all courses have been\n    processed (hopefully, downloaded). This helps skip vast output and easily\n    see which courses need user's attention, e.g. enrollment, session\n    switching or just patience until the course start date.\n\nBugfixes:\n  - Locked programming assignments in syllabus used to crash coursera-dl.\n    Now the script goes on parsing syllabus and skips locked assignments.\n  - Add missing import statement to playlist generation module\n\n## 0.7.0 (2016-07-28)\n\nFeatures:\n  - Added option `--list-courses` to list currently enrolled courses (#514)\n  - Added option `--jobs N` to download resources in N threads simultaneously (#553)\n  - Added option `--download-quizzes` to download contents of graded and\n    ungraded quizzes (#490)\n  - Added option `--cache-syllabus` to avoid downloading course syllabus on\n    every run (this option is rather for developers)\n\nBugfixes:\n  - Locked lectures are also requested from server now, which allows to\n    download some programming assignments that were not downloaded before (#555)\n\nDeletions:\n  - Support for old-style courses has been removed (Coursera discontinued old courses:\n    http://coursera.tumblr.com/post/145882467032/courseras-transition-to-a-new-technology-platform)\n  - `--ignore-http-errors` option has been removed and the default behavior\n    has been adjusted to include this option\n  - Removed deprecated `--on-demand` option. Now OnDemand classes are downloaded\n    by default\n\n## 0.6.1 (2016-06-20)\n\nBugfixes:\n  - When using `--process_local_page` option, errors downloading About\n    page will not stop course download\n  - Limit file name part to 200 characters and file extension part to 20\n    characters to alleviate \"Filename is too long\" issue\n\n## 0.6.0 (2016-06-17)\n\nFeatures:\n  - Descriptions of assignments are saved in more cases (different courses\n    implement it in a different way)\n  - Images are embedded into descriptions of assignments and are available\n    offline locally\n  - MathJax is injected into descriptions of assignments to render math\n    locally (requires Internet connection)\n  - Add option `--ignore-http-errors` to ignore errors in internal\n    downloader during resource downloading stage\n  - Add option `--disable-url-skipping` to always try downloading\n    all the URLs that were found by the parser\n  - Add option `--downloader-arguments` (#464)\n  - Add option `--version` (#477)\n  - Better looking progress output: during the syllabus parsing stage\n    lecture/section names are printed in a hierarchical structure\n\nBugfixes:\n  - Stricter filename cleaning in on-demand course parser\n  - Better URL filtering\n  - Detect SSL errors and suggest link to the solution in the output\n  - Added workaround for \"Filename is too long\" on Windows\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.4462890625,
          "content": "Please, before sending patches, read these brief comments. They are here to\nhelp the project have both its users happy using the program and the\ndevelopers/maintainers feel good when trying to change code that other\npeople contributed.\n\nFor the record, when this document mentions \"I\", it mostly means Rogério\nTheodoro de Brito's (@rbrito) is the one to blame.\n\n# Write good commit messages\n\nWhen you write your pull request and your commit messages, please, be\ndetailed, explaining why you are doing what you are doing. Don't be afraid\nof being too verbose here.  Also, please follow the highly recommended\nguidelines on how to write good [good commit messages][commit-msgs].\n\nWhen in doubt, follow the model of the Linux kernel commit logs. Their\ncommit messages are some of the best that I have seen. Also, the ffmpeg has\nsome good messages that I believe that should be followed. If you are in a\nhurry, read the section named\n[\"Contributing\" from subsurface's README][contributing].\n\n[commit-msgs]: https://robots.thoughtbot.com/5-useful-tips-for-a-better-commit-message\n[contributing]: https://github.com/torvalds/subsurface/blob/master/README#L71-L114\n\n\n# Test that your changes don't break existing functionality\n\nMake sure that you have all dependencies installed, like via:\n\n    pip install -r requirements.txt\n    pip install -r requirements-dev.txt\n\nRun the test suite with\n\n    py.test coursera/test -v --cov coursera --cov-report html\n\nIf some test fails, please don't send your changes yet. Fix what broke\nbefore sending your pull request.\n\nIf you need to change the test suite, explain in the commit message why it\nneeds to be changed (e.g., the page layout or the authentication methods\nfrom coursera changed, or they implemented a new kind of course).\n\n## Using tox and pyenv\n\nRunning only py.test is okay for one-time check, but as it runs on your\ncurrently active Python installation, you're only checking the script on one\nPython version. A combination of tox + pyenv will allow you to run tests on many\nPython versions easily.\n\nFirst, install tox (listed in requirements-dev.txt) and pyenv (see their manual:\n[pyenv installation](https://github.com/yyuu/pyenv#installation). Make sure to\nactivate pyenv or start a new shell. Then, install Python versions and run tox:\n\n    pyenv install 3.5.1\n    pyenv install 3.4.4\n    pyenv install 3.3.6\n    pyenv install 3.2\n    pyenv install 2.7.5\n    pyenv install 2.6.9\n    pyenv local 3.5.1 3.4.4 3.3.6 3.2 2.7.5 2.6.9\n    tox\n\n# Check for potential bugs\n\nPlease, help keep the code tidy by checking for any potential bugs with the\nhelp of [`flake8`][flake8], and [`pylint`][pylint].  If you know of any\nother good tools for analyzing the code, let me know about them!\n\n[flake8]: https://pypi.python.org/pypi/flake8\n[pylint]: https://pypi.python.org/pypi/pylint\n\nIf you happen to find any issue reported by these programs, I welcome you to\nfix them.  Many of the issues are usually very easy to fix and they are a\ngreat way to start contributing to this (and other projects in general).\nFurthermore, we all benefit from a better code base.\n\n# Changes in the tools that we use\n\nIf you are proposing the use of a substitute of a tool that we already use,\ntake a few paragraphs to tell us why we would like to change.\n\nIf we are not using something, it is most likely that one of the following\noptions applies:\n\n1. I (@rbrito) may not even know that what you are proposing exists or have\n   not yet \"seen the light\" as to why I should use it instead of using what\n   I am currently using.\n2. Even if I know about the tool, I may not know how to use it, or how it\n   would make me more productive.  Educate me and we all will gain from a\n   better project.\n\n----\n\n# Short (and incomplete) cheat-sheet for contributions\n\n## To start contributing\n\nFork the repository using github (there's a button) and clone *your* copy to\nyour local machine for your personal modifications. Let's say that your\ngithub username is `username`:\n\n```\ngit clone https://github.com/username/coursera-dl\n```\n\n## Making your changes\n\nInitiate a *new* branch on your local repository copy.\n\n```\ncd coursera-dl\ngit checkout -b my-new-branch\n```\n\nThen, start hacking, doing whatever you want. Really, just *play* with what\nyou want. After you make each \"logical chunk\" of changes (say, you fixed one\n*specific* bug, or you made one *specific* feature), commit your changes.\n\n### See what you changed\n\nUse the following commands to see which files you changed and which changes\nyou made, just to recap, before sending them to the public (up to this\nmoment, everything that you made lives only on your computer):\n\n```\ngit status\ngit diff\n```\n\n### Select what you want to commit\n\nYou may have made more changes than you want to contribute at this point in\ntime (this is *very* common). So, we select which changes we want to commit\nwith:\n\n```\ngit add -p\n```\n\nThen a little prompt will appear and you will interactively select the\nchanges that you want to make part of the commit. The main options there are\n`y` or `n` for including/not including respectively and `s` to split a very\nlarge change into smaller changes ones (this is a killer feature of `git add\n-p`).\n\n### See what changes will make into your commit\n\nTo see the changes that you have selected to be part of your commit, use:\n\n```\ngit diff --staged\n```\n\nSee if everything is OK. If not, then use `git add -p` to add something that\nyou may have missed or, if you included something else that you *didn't*\nintend to include, \"un-include\" it with:\n\n```\ngit reset -- file-with-changes-to-un-include\n```\n\nThen, you can start over and include only what you meant to put in a single\ncommit.\n\n### Once you are satisfied with your changes\n\nIf you think that your changes make one \"logically\" cohesive change to the\nproject, create a commit of them in the repository with:\n\n```\ngit commit\n```\n\nThen, enter a descriptive message of *what* (not why, not how) you changed\non the *first line* and after that, you are free to write your prose\ndetailing how you did what you did (e.g., which documentation you read), why\nyou did what you did (Is that a preparation for a future change? Does it\nimprove the speed or memory requirements of the project?) and other\ncomments.\n\nOnce again, it is good to have in mind some\n[rules for good commit messages][commit-msgs].\n\n### Send your changes to github\n\nTo see the commit that you just made (with author, date, short and long\ndescription only), use:\n\n```\ngit show\n```\n\nIf you want to see the entire commit, use:\n\n```\ngit show -p\n```\n\nIf you are satisfied with your changes, go ahead and type:\n\n```\ngit push origin my-new-branch\n```\n\nWhere `my-new-branch` is the branch that you created for this set of changes\n(you remember that, right?). If everything goes correctly, then, after a few\nseconds, your changes will be right there on the cloud, on github! Yay!\n\nTo inform the maintainer of the project that you have some shiny changes\nthat you are proposing for inclusion on the main project, github will show\nyou somewhere on *your* fork of the project that you have a branch and that\nyou can create a pull request.\n\nClick that button, compose a message for the maintainer of the project and\ntell him/her about what you just did, why you are proposing etc. Send that\nmessage and the maintainer will be notified that you made changes and that\nyou'd like them to be included in the main project.\n\nThat's essentially it.\n\nThere are many other tricks/steps in the git workflow, but these are the\nbasics that I (@rbrito) think that will suffice for a start.  If you want a\nfew details more, feel free to ask me to include them here.\n\n# Release procedure\n\nThis section is for project maintainers.\n\nDRAFT\n\n1. Run tests locally. Use tox to run tests on all supported Python versions.\n2. Run the script on several courses to check sanity\n3. Update CHANGELOG.md, increment version, put what you've added to the\n   changelog into commit message. This way it gets it way into releases page\n   with a nice description of the changes.\n   `git add ... & git ci -m 'Bump version (old_version -> new_version)'`\n4. `git tag new_version`\n5. `git push && git push --tags`\n6. `python setup.py sdist bdist_wheel --universal` to build the package\n7. `twine upload dist/coursera-dl-0.6.1.tar.gz` to deploy the package.\n\n## Docker\n\nBuild new Docker image from PyPI package:\n\n```\ndocker build --tag courseradl/courseradl --build-arg VERSION=0.11.2 .\n```\n\nRun the image:\n```\ndocker run --rm -it -v \"$(pwd):/courses\" -v \"$HOME/.netrc:/netrc\" courseradl -n /netrc -- google-machine-learning\n```\n\nPublish the image:\n```\ndocker push courseradl/courseradl\n```\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.3623046875,
          "content": "FROM python:3.6-slim\n\nLABEL maintainer \"https://github.com/coursera-dl/\"\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends gcc g++ libssl-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get purge -y --auto-remove gcc g++ libssl-dev\n\nARG VERSION\nRUN pip install coursera-dl==$VERSION\n\nWORKDIR /courses\nENTRYPOINT [\"coursera-dl\"]\nCMD [\"--help\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.4716796875,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.6767578125,
          "content": "include requirements*.txt\ninclude CONTRIBUTING.md\ninclude LICENSE\n\nexclude .coveragerc\nexclude .ctags\nexclude .gitattributes\nexclude .github/ISSUE_TEMPLATE.md\nexclude .github/PULL_REQUEST_TEMPLATE.md\nexclude .gitignore\nexclude .travis.yml\nexclude AUTHORS.md\nexclude CHANGELOG.md\nexclude README.md\nexclude appveyor.yml\nexclude appveyor/install.ps1\nexclude appveyor/run_with_env.cmd\nexclude assets/hat-logo.svg\nexclude coursera-dl\nexclude coursera-dl.bat\nexclude deploy/.netrc\nexclude deploy/Dockerfile\nexclude deploy/README.md\nexclude deploy/build.sh\nexclude deploy/download.sh\nexclude fabfile.py\nexclude tox.ini\n\nprune appveyor/\nprune assets/\nprune deploy/\nprune coursera/test/\nprune .github/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 27.900390625,
          "content": "# Coursera Downloader\n\n[![Build Status](https://travis-ci.org/coursera-dl/coursera-dl.svg?branch=master)](https://travis-ci.org/coursera-dl/coursera-dl)\n[![Build status](https://ci.appveyor.com/api/projects/status/3hru0ycv5fbny5k8/branch/master?svg=true)](https://ci.appveyor.com/project/balta2ar/coursera-dl/branch/master)\n[![Coverage Status](https://coveralls.io/repos/coursera-dl/coursera-dl/badge.svg)](https://coveralls.io/r/coursera-dl/coursera-dl)\n[![Latest version on PyPI](https://img.shields.io/pypi/v/coursera-dl.svg)](https://pypi.python.org/pypi/coursera-dl)\n[![Code Climate](https://codeclimate.com/github/coursera-dl/coursera-dl/badges/gpa.svg)](https://codeclimate.com/github/coursera-dl/coursera-dl)\n\n<!-- TOC -->\n\n- [Coursera Downloader](#coursera-downloader)\n- [Introduction](#introduction)\n- [Features](#features)\n- [Disclaimer](#disclaimer)\n- [Installation instructions](#installation-instructions)\n    - [Recommended installation method for all Operating Systems](#recommended-installation-method-for-all-operating-systems)\n    - [Alternative ways of installing missing dependencies](#alternative-ways-of-installing-missing-dependencies)\n        - [Alternative installation method for Unix systems](#alternative-installation-method-for-unix-systems)\n        - [ArchLinux](#archlinux)\n        - [Installing dependencies on your own](#installing-dependencies-on-your-own)\n    - [Docker](#docker)\n    - [Windows](#windows)\n    - [Create an account with Coursera](#create-an-account-with-coursera)\n- [Running the script](#running-the-script)\n    - [Resuming downloads](#resuming-downloads)\n- [Troubleshooting](#troubleshooting)\n    - [China issues](#china-issues)\n    - [Found 0 sections and 0 lectures on this page](#found-0-sections-and-0-lectures-on-this-page)\n    - [Download timeouts](#download-timeouts)\n    - [Windows: proxy support](#windows-proxy-support)\n    - [Windows: Failed to create process](#windows-failed-to-create-process)\n    - [SSLError: [Errno 1] _ssl.c:504: error:14094410:SSL routines:SSL3_READ_BYTES:sslv3 alert handshake failure](#sslerror-errno-1-_sslc504-error14094410ssl-routinesssl3_read_bytessslv3-alert-handshake-failure)\n    - [Alternative CDN for `MathJax.js`](#alternative-cdn-for-mathjaxjs)\n- [Reporting issues](#reporting-issues)\n- [Filing an issue/Reporting a bug](#filing-an-issuereporting-a-bug)\n- [Feedback](#feedback)\n- [Contact](#contact)\n\n<!-- /TOC -->\n\n# Introduction\n\n[Coursera][1] is arguably the leader in *massive open online courses* (MOOC)\nwith a selection of more than 300 classes from 62 different institutions [as of\nFebruary 2013][13]. Generous contributions by educators and institutions are\nmaking excellent education available to many who could not afford it otherwise.\nThere are even non-profits with \"feet on the ground\" in remote areas of the\nworld who are helping spread the wealth (see the feedback below from [Tunapanda][14]).\n\nThis script makes it easier to batch download lecture resources (e.g., videos, ppt,\netc) for Coursera classes.  Given one or more class names and account credentials,\nit obtains week and class names from the *lectures* page, and then downloads\nthe related materials into appropriately named files and directories.\n\nWhy is this helpful?  A utility like [wget][2] can work, but has the\nfollowing limitations:\n\n1. Video names have numbers in them, but this does not correspond to\n    the actual order.  Manually renaming them is a pain that is best left\n    for computers.\n2. Using names from the syllabus page provides more informative names.\n3. Using `wget` in a for loop picks up extra videos which are not\n    posted/linked, and these are sometimes duplicates.\n\nBrowser extensions like *DownloadThemAll* is another possibility, but\n`coursera-dl` provides more features such as appropriately named files.\n\nThis work was originally inspired in part by [youtube-dl][3] by which\nI've downloaded many other good videos such as those from Khan Academy.\n\n\n# Features\n\n  * Support for all kinds of courses (i.e., \"Old Platform\"/time-based as\n    well as \"New Platform\"/on-demand courses).\n  * Intentionally detailed names, so that it will display and sort properly\n    on most interfaces (e.g., [VLC][4] or MX Video on Android devices).\n  * Regex-based section (week) and lecture name filters to download only\n    certain resources.\n  * File format extension filter to grab resource types you want.\n  * Login credentials accepted on command-line or from `.netrc` file.\n  * Default arguments loaded from `coursera-dl.conf` file.\n  * Core functionality tested on Linux, Mac and Windows.\n\n# Disclaimer\n\n`coursera-dl` is meant to be used only for your material that Coursera gives\nyou access to download.\n\nWe do not encourage any use that violates their [Terms Of Use][20]. A\nrelevant excerpt:\n\n> \"[...] Coursera grants you a personal, non-exclusive, non-transferable\n> license to access and use the Sites. You may download material from the\n> Sites only for your own personal, non-commercial use. You may not\n> otherwise copy, reproduce, retransmit, distribute, publish, commercially\n> exploit or otherwise transfer any material, nor may you modify or create\n> derivatives works of the material.\"\n\n\n# Installation instructions\n\n`coursera-dl` requires Python 2 or Python 3 and a free Coursera account\nenrolled in the class of interest. (As of February of 2020, we test\nautomatically the execution of the program with Python versions 2.7, Pypy,\n3.6, 3.7, 3.8, and 3.9).\n\n**Note:** We *strongly* recommend that you use a Python 3 interpreter (3.9\nor later).\n\nOn any operating system, ensure that the Python executable location is added\nto your `PATH` environment variable and, once you have the dependencies\ninstalled (see next section), for a *basic* usage, you will need to invoke\nthe script from the main directory of the project and prepend it with the\nword `python`.  You can also use more advanced features of the program by\nlooking at the \"Running the script\" section of this document.\n\n*Note:* You must already have (manually) agreed to the Honor of Code of the\nparticular courses that you want to use with `coursera-dl`.\n\n## Recommended installation method for all Operating Systems\n\nFrom a command line (preferably, from a virtual environment), simply issue\nthe command:\n\n    pip install coursera-dl\n\n\nThis will download [the latest released version][23] of the program from the\n[Python Package Index (PyPI)][22] along with *all* the necessary\ndependencies. At this point, you should be ready to start using it.\n\nIf this does not work, because your Python 2 version is too old (e.g. 2.7.5\non Ubuntu 14.4), try:\n\n    apt-get install python3 python3-pip\n    pip3 install coursera-dl\n\ninstead.\n\n**Note 1:** We strongly recommend that you *don't* install the package\nglobally on your machine (i.e., with root/administrator privileges), as the\ninstalled modules may conflict with other Python applications that you have\ninstalled in your system (or they can interfere with `coursera-dl`).  Prefer\nto use the option `--user` to `pip install`, if you need can.\n\n**Note 2:** As already mentioned, we *strongly* recommend that you use a new\nPython 3 interpreter (e.g., 3.9 or later), since Python 3 has better support\nfor SSL/TLS (for secure connections) than earlier versions.<br/>\nIf you must use Python 2, be sure that you have at least Python 2.7.9 (later\nversions are OK).<br/>\nOtherwise, you can still use `coursera-dl`, but you will have to install the\nextra package `ndg-httpsclient`, which may involve compilation (at least on\nLinux systems).\n\n## Alternative ways of installing missing dependencies\n\nWe strongly recommend that you consider installing Python packages with\n[pip][17], as in it is the current [preferred method][18], unless directed\notherwise by one of the project members (for instance, when testing or\ndebugging a new feature or using the source code directly from our git\nrepository).  If you are using `pip`, you can directly install all the\ndependencies from the requirements file using `pip install -r\nrequirements.txt`.\n\n### Alternative installation method for Unix systems\n\nWe strongly recommend that you install `coursera-dl` and all its\ndependencies in a way that does *not* interfere with the rest of your Python\ninstallation. This is accomplished by the creation of a *virtual\nenvironment*, or \"virtualenv\".\n\nFor the initial setup, in a Unix-like operating system, please use the\nfollowing steps (create/adapt first the directory\n`/directory/where/I/want/my/courses`):\n\n    cd /directory/where/I/want/my/courses\n    virtualenv my-coursera\n    cd my-coursera\n    source bin/activate\n    git clone https://github.com/coursera-dl/coursera-dl\n    cd coursera-dl\n    pip install -r requirements.txt\n    ./coursera-dl ...\n\nTo further download new videos from your classes, simply perform:\n\n    cd /directory/where/I/want/my/courses/my-coursera\n    source bin/activate\n    cd coursera-dl\n    ./coursera-dl ...\n\nWe are working on streamlining this whole process so that it is as simple as\npossible, but to support older versions of Python and to cope with Coursera\ndisabling SSLv3, we have to take a few extra steps.  In any case, it is\n*highly* recommended that you always install the latest version of the\nPython interpreter that you can.\n\n### ArchLinux\n\nAUR package: [coursera-dl](https://aur.archlinux.org/packages/coursera-dl/)\n\n### Installing dependencies on your own\n\n**Warning:** This method is not recommended unless you have experience\nworking with multiple Python environments.\n\nYou can use the `pip` program to install the dependencies on your own.  They\nare all listed in the `requirements.txt` file (and the extra dependencies\nneeded for development are listed in the `requirements-dev.txt` file).\n\nTo use this method, you would proceed as:\n\n    pip install -r requirements.txt\n    pip install -r requirements-dev.txt\n\nThe second line above should only be needed if you intend to help with\ndevelopment (and help is *always* welcome) or if a maintainer of the project\nasks you to install extra packages for debugging purposes.\n\nOnce again, before filing bug reports, if you installed the dependencies on\nyour own, please check that the versions of your modules are at least those\nlisted in the `requirements.txt` file (and, `requirements-dev.txt` file, if\napplicable).\n\n## Docker\n\nIf you prefer you can run this software inside Docker:\n\n```\ndocker run --rm -it -v \\\n    \"$(pwd):/courses\" \\\n    courseradl/courseradl -u <USER> -p <PASSWORD>\n```\n\nOr using netrc file:\n\n```\ndocker run --rm -it \\\n    -v \"$(pwd):/courses\" -v \"$HOME/.netrc:/netrc\" \\\n    courseradl/courseradl -n /netrc\n```\n\nThe actual working dir for coursera-dl is /courses, all courses will be\ndownloaded there if you don't specify otherwise.\n\n## Windows\n\n`python -m pip install coursera-dl`\n\nBe sure that the Python install path is added to the PATH system environment\nvariables. This can be found in Control Panel > System > Advanced System\nSettings > Environment Variables.\n\n```\nExample:\nC:\\Python39\\Scripts\\;C:\\Python39\\;\n```\n\nOr if you have restricted installation permissions and you've installed Python\nunder AppData, add this to your PATH.\n\n```\nExample:\nC:\\Users\\<user>\\AppData\\Local\\Programs\\Python\\Python39-32\\Scripts;C:\\Users\\<user>\\AppData\\Local\\Programs\\Python\\Python39-32;\n```\n\nCoursera-dl can now be run from commandline or powershell.\n\n## Create an account with Coursera\n\nIf you don't already have one, create a [Coursera][1] account and enroll in\na class. See https://www.coursera.org/courses for the list of classes.\n\n# Running the script\n\nRefer to `coursera-dl --help` for a complete, up-to-date reference on the runtime options\nsupported by this utility.\n\nRun the script to download the materials by providing your Coursera account\ncredentials (e.g. email address and password or a `~/.netrc` file), the\nclass names, as well as any additional parameters:\n```\n    General:                     coursera-dl -u <user> -p <pass> modelthinking-004\n\n    With CAUTH parameter:\t coursera-dl -ca 'some-ca-value-from-browser' modelthinking-004\n```\nIf you don't want to type your password in command line as plain text, you can use the\nscript without `-p` option. In this case you will be prompted for password  once the\nscript is run.\n\nHere are some examples of how to invoke `coursera-dl` from the command line:\n```\n    Without -p field:            coursera-dl -u <user> modelthinking-004\n    Multiple classes:            coursera-dl -u <user> -p <pass> saas historyofrock1-001 algo-2012-002\n    Filter by section name:      coursera-dl -u <user> -p <pass> -sf \"Chapter_Four\" crypto-004\n    Filter by lecture name:      coursera-dl -u <user> -p <pass> -lf \"3.1_\" ml-2012-002\n    Download only ppt files:     coursera-dl -u <user> -p <pass> -f \"ppt\" qcomp-2012-001\n    Use a ~/.netrc file:         coursera-dl -n -- matrix-001\n    Get the preview classes:     coursera-dl -n -b ni-001\n\tDownload videos at 720p:     coursera-dl -n --video-resolution 720p ni-001\n    Specify download path:       coursera-dl -n --path=C:\\Coursera\\Classes\\ comnetworks-002\n    Display help:                coursera-dl --help\n\n    Maintain a list of classes in a dir:\n      Initialize:              mkdir -p CURRENT/{class1,class2,..classN}\n      Update:                  coursera-dl -n --path CURRENT `\\ls CURRENT`\n```\n**Note:** If your `ls` command is aliased to display a colorized output, you\nmay experience problems.  Be sure to escape the `ls` command (use `\\ls`) to\nassure that no special characters get sent to the script.\n\nNote that we *do* support the New Platform (\"on-demand\") courses.\n\nBy default, videos are downloaded at 540p resolution. For on-demand courses, the\n`--video-resolution` flag accepts 360p, 540p, and 720p values.\n\nTo download just the `.txt` and/or `.srt` subtitle files instead of the videos,\nuse `-ignore-formats mp4 --subtitle-language en` or whatever format the videos\nare encoded in and desired languages for subtitles.\n\nOn \\*nix platforms, the use of a `~/.netrc` file is a good alternative to\nspecifying both your username (i.e., your email address) and password every\ntime on the command line. To use it, simply add a line like the one below to\na file named `.netrc` in your home directory (or the [equivalent][8], if you\nare using Windows) with contents like:\n```\n    machine coursera-dl login <user> password <pass>\n```\nCreate the file if it doesn't exist yet.  From then on, you can switch from\nusing `-u` and `-p` to simply call `coursera-dl` with the option `-n`\ninstead.  This is especially convenient, as typing usernames (email\naddresses) and passwords directly on the command line can get tiresome (even\nmore if you happened to choose a \"strong\" password).\n\nAlternatively, if you want to store your preferred parameters (which might\nalso include your username and password), create a file named `coursera-dl.conf`\nwhere the script is supposed to be executed, with the following format:\n```\n    --username <user>\n    --password <pass>\n    --subtitle-language en,zh-CN|zh-TW\n    --download-quizzes\n    #--mathjax-cdn https://cdn.bootcss.com/mathjax/2.7.1/MathJax.js\n    # more other parameters\n```\nParameters which are specified in the file will be overriden if they are \nprovided again on the commandline.\n\n**Note:** In `coursera-dl.conf`, all the parameters should not be wrapped\nwith quotes.\n\n## Resuming downloads\n\nIn default mode when you interrupt the download process by pressing\n<kbd>CTRL</kbd>+<kbd>C</kbd>, partially downloaded files will be deleted from your disk and\nyou have to start the download process from the beginning. If your\ndownload was interrupted by something other than KeyboardInterrupt\n(<kbd>CTRL</kbd>+<kbd>C</kbd>) like sudden system crash, partially downloaded files will\nremain on your disk and the next time you start the process again,\nthese files will be discarded from download list!, therefore it's your\njob to delete them manually before next start. For this reason we\nadded an option called `--resume` which continues your downloads from\nwhere they stopped:\n\n\tcoursera-dl -u <user> -p <pass> --resume sdn1-001\n\nThis option can also be used with external downloaders:\n\n\tcoursera-dl --wget -u <user> -p <pass> --resume sdn1-001\n\n*Note 1*: Some external downloaders use their own built-in resume feature\nwhich may not be compatible with others, so use them at your own risk.\n\n*Note 2*: Remember that in resume mode, interrupted files **WON'T** be deleted from\nyour disk.\n\n**NOTE**: If your password contains punctuation, quotes or other \"funny\ncharacters\" (e.g., `<`, `>`, `#`, `&`, `|` and so on), then you may have to\nescape them from your shell. With bash or other Bourne-shell clones (and\nprobably with many other shells) one of the better ways to do so is to\nenclose your password in single quotes, so that you don't run into\nproblems.  See [issue #213][issue213] for more information.\n\n# Troubleshooting\n\nIf you have problems when downloading class materials, please try to see if\none of the following actions solve your problem:\n\n* Make sure the class name you are using corresponds to the resource name\n  used in the URL for that class:\n    `https://www.coursera.org/learn/<CLASS_NAME>/home/welcome`\n\n* Have you tried to clean the cached cookies/credentials with the\n  `--clear-cache` option?\n\n* Note that many courses (most, perhaps?) may remove the materials after a\n  little while after the course is completed, while other courses may retain\n  the materials up to a next session/offering of the same course (to avoid\n  problems with academic dishonesty, apparently).\n  <br><br>\n  In short, it is not guaranteed that you will be able to download after the\n  course is finished and this is, unfortunately, nothing that we can help\n  you with.\n\n* Make sure you have installed and/or updated all of your dependencies\n  according to the `requirements.txt` file as described above.\n\n* One can export a Netscape-style cookies file with a browser extension ([1][9], [2][10])\n  and use it with the `-c` option. This comes in handy\n  when the authentication via password is not working (the authentication\n  process changes now and then).\n\n* If results show 0 sections, you most likely have provided invalid\n  credentials (username and/or password in the command line or in your\n  `.netrc` file or in your `coursera-dl.conf` file).\n\n* For courses that have not started yet, but have had a previous iteration\n  sometimes a preview is available, containing all the classes from the last\n  course. These files can be downloaded by passing the `--preview`\n  parameter.\n\n* If you get an error like `Could not find class: <CLASS_NAME>`, then:\n    * Verify that the name of the course is correct. Current class\n    names in coursera are composed by a short course name e.g. `class` and\n    the current version of the course (a number). For example, for a\n    class named `class`, you would have to use `class-001`, `class-002`\n    etc.\n    * Second, verify that you are enrolled in the course. You won't be\n    able to access the course materials if you are not officially\n    enrolled and agreed to the honor course *via the website*.\n\n* If:\n    * You get an error when using `-n` to specify that you want to use a\n      `.netrc` file and,\n    * You want the script to use your default netrc file and,\n    * You get a message saying `coursera-dl: error: too few arguments`\n\n      Then you should specify `--` as an argument after `-n`, that is, `-n --`\n      or change the order in which you pass the arguments to the script, so that\n      the argument after `-n` begins with an hyphen (`-`).  Otherwise, Python's\n      `argparse` module will think that what you are passing is the name of the\n      netrc file that you want to use. See issue #162.\n\n* If your password has spaces, don't forget to write it using quotes.\n\n* Have you installed the right project ?\n  <br><br>\n  **Warning**: If you installed the script using PyPi (pip) please verify that\n  you installed the correct project. We had to use a different name in pip\n  because our original name was already taken. Remember to install it using:\n  ```\n      pip install coursera-dl\n  ```\n\n## China issues\n\nIf you are from China and you're having problems downloading videos,\nadding \"52.84.167.78 d3c33hcgiwev3.cloudfront.net\" in the hosts file\n(/etc/hosts) and freshing DNS with \"ipconfig/flushdns\" may work\n(see https://github.com/googlehosts/hosts for more info).\n\n## Found 0 sections and 0 lectures on this page\n\nFirst of all, make sure you are enrolled to the course you want to download.\n\nMany old courses have already closed enrollment so often it's not an\noption. In this case, try downloading with `--preview` option. Some\ncourses allow to download lecture materials without enrolling, but\nit's not common and is not guaranteed to work for every course.\n\nFinally, you can download the videos if you have, at least, the index\nfile that lists all the course materials. Maybe your friend who is enrolled\ncould save that course page for you. In that case use the `--process_local_page`\noption.\n\nAlternatively you may want to try this various browser extensions designed for\nthis problem.\n\nIf none of the above works for you, there is nothing we can do.\n\n## Download timeouts\n\nCoursera-dl supports external downloaders but note that they are only used to\ndownload materials after the syllabus has been parsed, e.g. videos, PDFs, some\nhandouts and additional files (syllabus is always downloaded using the internal\ndownloader). If you experience problems with downloading such materials, you may\nwant to start using external downloader and configure its timeout values. For\nexample, you can use aria2c downloader by passing `--aria` option:\n\n```\ncoursera-dl -n --path . --aria2  <course-name>\n```\n\nAnd put this into aria2c's configuration file `~/.aria2/aria2.conf` to reduce\ntimeouts:\n\n```\nconnect-timeout=2\ntimeout=2\nbt-stop-timeout=1\n```\n\nTimeout configuration for internal downloader is not supported.\n\n## Windows: proxy support\n\nIf you're on Windows behind a proxy, set up the environment variables\nbefore running the script as follows:\n\n```\nset HTTP_PROXY=http://host:port\nset HTTPS_PROXY=http://host:port\n```\n\nRelated discussion: [#205](https://github.com/coursera-dl/coursera-dl/issues/205)\n\n## Windows: Failed to create process\n\nIn `C:\\Users\\<user>\\AppData\\Local\\Programs\\Python\\Python39-32\\Scripts`\nor wherever Python installed (above is default for Windows)\nedit below file in idle: (right click on script name and select 'edit with idle in menu)\n\n```\ncoursera-dl-script\n```\n\nfrom\n\n```\n#!c:\\users\\<user>\\appdata\\local\\programs\\python\\python39-32\\python.exe\n```\n\nto\n\n```\n#\"!c:\\users\\<user>\\appdata\\local\\programs\\python\\python39-32\\python.exe\"\n```\n\n(add quotes). This is a known pip bug.\n\nSource: [issue #500][issue500] [StackOverflow][pipinstallerbug]\n\n## SSLError: [Errno 1] _ssl.c:504: error:14094410:SSL routines:SSL3_READ_BYTES:sslv3 alert handshake failure\n\nThis is a known error, please do not report about this error message! The problem is in **YOUR** environment. To fix it, do the following:\n\n``` bash\nsudo apt-get install build-essential python-dev libssl-dev libffi-dev\npip install --user urllib3 pyasn1 ndg-httpsclient pyOpenSSL\n```\nIf the error remains, try installing coursera-dl from github following this instruction:\nhttps://github.com/coursera-dl/coursera-dl#alternative-installation-method-for-unix-systems\n\nIf you still have the problem, please read the following issues for more ideas on how to fix it:\n[#330](https://github.com/coursera-dl/coursera-dl/issues/330)\n[#377](https://github.com/coursera-dl/coursera-dl/issues/377)\n[#329](https://github.com/coursera-dl/coursera-dl/issues/329)\n\nThis is also worth reading:\nhttps://urllib3.readthedocs.io/en/latest/security.html#insecureplatformwarning\n\n## Alternative CDN for `MathJax.js`\n\nWhen saving a course page, we enabled `MathJax` rendering for math equations, by\ninjecting `MathJax.js` in the header. The script is using a cdn service provided\nby [mathjax.org](https://cdn.mathjax.org/mathjax/latest/MathJax.js). However, that\nurl is not accessible in some countries/regions, you can provide a\n`--mathjax-cdn <MATHJAX_CDN>` parameter to specify the `MathJax.js` file that is\naccessible in your region.\n\n# Reporting issues\n\nBefore reporting any issue please follow the steps below:\n\n1. Verify that you are running the latest version of the script, and the\nrecommended versions of its dependencies, see them in the file\n`requirements.txt`.  Use the following command if in doubt:\n\n        pip install --upgrade coursera-dl\n\n2. If the problem persists, feel free to [open an issue][issue] in our\nbugtracker, please fill the issue template with *as much information as\npossible*.\n\n[issue]: https://github.com/coursera-dl/coursera-dl/issues\n\n# Filing an issue/Reporting a bug\n\nWhen reporting bugs against `coursera-dl`, please don't forget to include\nenough information so that you can help us help you:\n\n* Is the problem happening with the latest version of the script?\n* What operating system are you using?\n* Do you have all the recommended versions of the modules? See them in the\n  file `requirements.txt`.\n* What is the course that you are trying to access?\n* What is the precise command line that you are using (feel free to hide\n  your username and password with asterisks, but leave all other\n  information untouched).\n* What are the precise messages that you get? Please, use the `--debug`\n  option before posting the messages as a bug report. Please, copy and paste\n  them.  Don't reword/paraphrase the messages.\n\n# Feedback\n\nI enjoy getting feedback. Here are a few of the comments I've received:\n\n* \"Thanks for the good job! Knowledge will flood the World a little more thanks\n  to your script!\"\n  <br>Guillaume V. 11/8/2012\n\n* \"Just wanted to send you props for your Python script to download Coursera\n  courses. I've been using it in Kenya for my non-profit to get online courses\n  to places where internet is really expensive and unreliable. Mostly kids here\n  can't afford high school, and downloading one of these classes by the usual\n  means would cost more than the average family earns in one week. Thanks!\"\n  <br>Jay L., [Tunapanda][14] 3/20/2013\n\n* \"I am a big fan of Coursera and attend lots of different courses. Time\n  constraints don't allow me to attend all the courses I want at the same time.\n  I came across your script, and I am very happily using it!  Great stuff and\n  thanks for making this available on Github - well done!\"\n  <br>William G.  2/18/2013\n\n* \"This script is awesome! I was painstakingly downloading each and every video\n  and ppt by hand -- looked into wget but ran into wildcard issues with HTML,\n  and then.. I came across your script.  Can't tell you how many hours you've\n  just saved me :) If you're ever in Paris / Stockholm, it is absolutely\n  mandatory that I buy you a beer :)\"\n  <br>Razvan T. 11/26/2012\n\n* \"Thanks a lot! :)\"\n  <br>Viktor V. 24/04/2013\n\n# Contact\n\nPlease, post bugs and issues on [github][11]. Please, **DON'T** send support\nrequests privately to the maintainers! We are quite swamped with day-to-day\nactivities. If you have problems, **PLEASE**, file them on the issue tracker.\n\n[1]: https://www.coursera.org\n[2]: https://sourceforge.net/projects/gnuwin32/files/wget/1.11.4-1/wget-1.11.4-1-setup.exe\n[3]: http://rg3.github.io/youtube-dl\n[4]: https://f-droid.org/repository/browse/?fdid=org.videolan.vlc\n[5]: https://www.crummy.com/software/BeautifulSoup\n[6]: https://pypi.python.org/pypi/argparse\n[7]: https://pypi.python.org/pypi/setuptools\n[8]: http://stackoverflow.com/a/6031266/962311\n[9]: https://chrome.google.com/webstore/detail/cookietxt-export/lopabhfecdfhgogdbojmaicoicjekelh\n[10]: https://addons.mozilla.org/en-US/firefox/addon/export-cookies/\n[11]: https://github.com/coursera-dl/coursera-dl/issues\n[13]: http://techcrunch.com/2013/02/20/coursera-adds-29-schools-90-courses-and-4-new-languages-to-its-online-learning-platform/\n[14]: http://www.tunapanda.org\n[15]: https://github.com/html5lib/html5lib-python\n[16]: http://docs.python-requests.org/en/latest/\n[17]: https://pip.pypa.io/en/latest/\n[18]: http://ww45.python-distribute.org/pip_distribute.png\n[19]: https://pypi.python.org/pypi/six/\n[20]: https://www.coursera.org/about/terms\n[22]: https://pypi.python.org/\n[23]: https://pypi.python.org/pypi/coursera-dl\n[issue213]: https://github.com/coursera-dl/coursera-dl/issues/213\n[issue500]: https://github.com/coursera-dl/coursera-dl/issues/500\n[pipinstallerbug]: http://stackoverflow.com/questions/31808180/installing-pyinstaller-via-pip-leads-to-failed-to-create-process\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 3.3603515625,
          "content": "#\n# Most of these settings are taken from here:\n# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml\n#\n\nversion: 1.0.{build}\n\nshallow_clone: true\n\nbuild:\n  verbosity: detailed\n\nenvironment:\n  global:\n    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the\n    # /E:ON and /V:ON options are not enabled in the batch script intepreter\n    # See: http://stackoverflow.com/a/13751649/163740\n    CMD_IN_ENV: \"cmd /E:ON /V:ON /C .\\\\appveyor\\\\run_with_env.cmd\"\n    #PANDOC_URL: \"https://github.com/jgm/pandoc/releases/download/1.17.1/pandoc-1.17.1-1-windows.msi\"\n    #PANDOC_MSI: \"C:\\\\pandoc.msi\"\n\n  matrix:\n    # Pre-installed Python versions, which Appveyor may upgrade to\n    # a later point release.\n    # See: http://www.appveyor.com/docs/installed-software#python\n\n    - PYTHON: \"C:\\\\Python27\"\n      PYTHON_VERSION: \"2.7.x\" # currently 2.7.11\n      PYTHON_ARCH: \"32\"\n\n    - PYTHON: \"C:\\\\Python27-x64\"\n      PYTHON_VERSION: \"2.7.x\" # currently 2.7.11\n      PYTHON_ARCH: \"64\"\n\n    - PYTHON: \"C:\\\\Python36\"\n      PYTHON_VERSION: \"3.6.x\" # currently 3.6.?\n      PYTHON_ARCH: \"32\"\n\n    - PYTHON: \"C:\\\\Python36-x64\"\n      PYTHON_VERSION: \"3.6.x\" # currently 3.6.?\n      PYTHON_ARCH: \"64\"\n\n    - PYTHON: \"C:\\\\Python37\"\n      PYTHON_VERSION: \"3.7.x\" # currently 3.7.?\n      PYTHON_ARCH: \"32\"\n\n    - PYTHON: \"C:\\\\Python37-x64\"\n      PYTHON_VERSION: \"3.7.x\" # currently 3.7.?\n      PYTHON_ARCH: \"64\"\n\n    - PYTHON: \"C:\\\\Python38\"\n      PYTHON_VERSION: \"3.8.x\" # currently 3.8.?\n      PYTHON_ARCH: \"32\"\n\n    - PYTHON: \"C:\\\\Python38-x64\"\n      PYTHON_VERSION: \"3.8.x\" # currently 3.8.?\n      PYTHON_ARCH: \"64\"\n\n    - PYTHON: \"C:\\\\Python39\"\n      PYTHON_VERSION: \"3.8.x\" # currently 3.9.?\n      PYTHON_ARCH: \"32\"\n\n    - PYTHON: \"C:\\\\Python38-x64\"\n      PYTHON_VERSION: \"3.8.x\" # currently 3.9.?\n      PYTHON_ARCH: \"64\"\n\ninit:\n  - \"ECHO %PYTHON%\"\n  - ps: \"ls C:/Python*\"\n\ninstall:\n  # Prepend newly installed Python to the PATH of this build (this cannot be\n  # done from inside the powershell script as it would require to restart\n  # the parent CMD process).\n  - \"SET PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%\"\n\n  - ECHO \"Filesystem root:\"\n  - ps: \"ls \\\"C:/\\\"\"\n\n  # Check that we have the expected version and architecture for Python\n  - \"python --version\"\n  - \"python -c \\\"import struct; print(struct.calcsize('P') * 8)\\\"\"\n\n  # Upgrade to the latest version of pip to avoid it displaying warnings\n  # about it being out of date.\n  - \"python -m pip install --disable-pip-version-check --user --upgrade pip\"\n\n  # Install requirements\n  - \"%CMD_IN_ENV% pip install -r requirements.txt\"\n  - \"%CMD_IN_ENV% pip install -r requirements-dev.txt\"\n\n  # Install pandoc\n  #- ps: Start-FileDownload 'https://github.com/jgm/pandoc/releases/download/1.17.1/pandoc-1.17.1-1-windows.msi' -FileName 'C:\\pandoc.msi'\n  #- msiexec /i C:\\pandoc.msi /qn /log C:\\install.log\n    #INSTALLLOCATION=C:\\MongoDB\n\n  # FIXME: updating pip fails with PermissionError\n  # - \"%PYTHON%/Scripts/pip.exe install -U pip setuptools\"\n  # - \"%PYTHON%/Scripts/pip.exe install -e .\"\n\nbuild_script:\n  # Build the compiled extension (not present for our project)\n  - \"%CMD_IN_ENV% python setup.py build\"\n\ntest_script:\n  # Run the project tests\n  - \"%CMD_IN_ENV% py.test -vv\"\n\nafter_test:\n  # If tests are successful, create binary packages for the project.\n  - \"%CMD_IN_ENV% python setup.py sdist\"\n  # - \"%CMD_IN_ENV% python setup.py bdist_wheel\"\n  - ps: \"ls dist\"\n"
        },
        {
          "name": "appveyor",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "coursera-dl",
          "type": "blob",
          "size": 0.0986328125,
          "content": "#!/usr/bin/env python3\n# -*- coding: utf-8 -*-\n\nfrom coursera import coursera_dl\n\ncoursera_dl.main()\n"
        },
        {
          "name": "coursera-dl.bat",
          "type": "blob",
          "size": 0.6923828125,
          "content": "@echo off\nrem Start-up script for Windows systems, ensuring out-of-the-box command execution as for *nix examples.\nrem Make sure the containing folder is referenced in %PATH%\n\nrem Usage: see \"Running the script\" section of the README for sample commands.\n\nrem Run \"coursera-dl\" in the current folder as working directory (where \"%~dp0\" is the\nrem location of this .bat file) via Python, passing all user-specified arguments (\"%*\")\n\nrem Fixed the issue of spaces in the PATH name adding quotes before the batch Windows commands for drive and path. It should work fine now.\nrem This issue was tested with pretty nasty path names (i.e. \"t h i s i s t e r r i b l e\") and it worked.\npython \"%~dp0\\coursera-dl\" %*\n"
        },
        {
          "name": "coursera",
          "type": "tree",
          "content": null
        },
        {
          "name": "fabfile.py",
          "type": "blob",
          "size": 1.908203125,
          "content": "#\n# Fabric configuration - http://www.fabfile.org/\n#\n\nfrom __future__ import print_function\n\nimport errno\nimport os\n\nfrom fabric.api import (env, local, task)\n\nMD2RST='pandoc --from=markdown --to=rst --output=README.rst README.md'\n\nif not os.path.exists('README.rst'):\n    local(MD2RST)\n\nenv.projname = local(\"python setup.py --name\", capture=True)\nenv.version = local(\"python setup.py --version\", capture=True)\n\n\ndef mkdirs(path):\n    try:\n        os.makedirs(path)\n    except OSError as exc:\n        if exc.errno == errno.EEXIST and os.path.isdir(path):\n            pass\n        else:\n            raise\n\n\n@task\ndef create_rst_doc():\n    local(MD2RST)\n\n\n@task\ndef clean():\n    create_rst_doc()\n    local(\"python setup.py clean\")\n    local(\"rm -rf .tox coursera.egg-info htmlcov build dist README.rst\")\n    local(\"rm -rf coursera/__pycache__/ coursera/test/__pycache__/\")\n    local(\"find . -name '*.pyc' -delete\")\n\n\n@task\ndef build():\n    create_rst_doc()\n    local(\"python setup.py sdist\")\n    local(\"gpg --detach-sign -a dist/coursera-%s.tar.gz\" % env.version)\n\n\n@task\ndef rebuild():\n    clean()\n    build()\n\n\n@task\ndef coverage():\n    local(\"py.test coursera/test -v --cov coursera --cov-report html \\\n          --cov-report term-missing\")\n\n\n@task\ndef pylint():\n    local(\"pylint %s tests\" % env.projname)\n\n\n@task\ndef tox():\n    local('tox')\n\n\n@task\ndef release_check():\n    \"\"\"Check if there is a Git tag already in place\"\"\"\n    tags = local(\"git tag\", capture=True)\n    tags = set(tags.splitlines())\n    if env.version in tags:\n        raise Exception(\"Already released v. %r\" % env.version)\n\n\n@task\ndef release():\n    \"\"\"Release a new version\"\"\"\n    release_check()\n    build()\n    print(\"Releasing %s version %s.\" % (env.projname, env.version))\n    local(\"git tag %s\" % env.version)\n    local('gpg --detach-sign --armor dist/coursera-*.tar.gz*')\n    local('twine upload dist/coursera-*.tar.gz*')\n    local(\"git push\")\n    local(\"git push --tags\")\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.072265625,
          "content": "pytest\npytest-cov\npytest-xdist\nmock>=1.0.1\ncoverage>=3.7\nkeyrings.alt\ntox\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.125,
          "content": "beautifulsoup4>=4.1.3\nrequests>=2.10.0\nsix>=1.5.0\nurllib3>=1.23\npyasn1>=0.1.7\nkeyring>=4.0\nconfigargparse>=0.12.0\nattrs==18.1.0\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.00390625,
          "content": "# -*- coding: utf-8 -*-\n#\n# you can install this to a local test virtualenv like so:\n#   virtualenv venv\n#   ./venv/bin/pip install --editable .\n#   ./venv/bin/pip install --editable .[dev]  # with dev requirements, too\n\nfrom __future__ import print_function\n\nimport os.path\nimport subprocess\nimport sys\n# For compatibility with Python2.7\nfrom io import open\n\nfrom setuptools import setup\n\nfrom coursera import __version__\n\n\ndef generate_readme_rst():\n    \"\"\"\n    Generate README.rst from README.md via pandoc.\n\n    In case of errors, we show a message having the error that we got and\n    exit the program.\n    \"\"\"\n\n    pandoc_cmd = [\n        'pandoc',\n        '--from=markdown',\n        '--to=rst',\n        '--output=README.rst',\n        'README.md'\n    ]\n\n    if os.path.exists('README.rst'):\n        return\n    try:\n        subprocess.call(pandoc_cmd)\n    except (IOError, OSError) as e:\n        print('Could not run \"pandoc\". Error: %s' % e, file=sys.stderr)\n        print('Generating only a stub instead of the real documentation.')\n\n\ndef read_file(filename, alt=None):\n    \"\"\"\n    Read the contents of filename or give an alternative result instead.\n    \"\"\"\n    lines = None\n\n    try:\n        with open(filename, encoding='utf-8') as f:\n            lines = f.read()\n    except IOError:\n        lines = [] if alt is None else alt\n    return lines\n\n\ngenerate_readme_rst()\n\nlong_description = read_file(\n    'README.md',\n    'Cannot read README.md'\n)\nrequirements = read_file('requirements.txt')\ndev_requirements = read_file('requirements-dev.txt')\n\ntrove_classifiers = [\n    'Development Status :: 4 - Beta',\n    'Environment :: Console',\n    'Intended Audience :: End Users/Desktop',\n    'License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)',\n    'Operating System :: OS Independent',\n    'Programming Language :: Python :: 2',\n    'Programming Language :: Python :: 2.7',\n    'Programming Language :: Python :: 3',\n    'Programming Language :: Python :: 3.4',\n    'Programming Language :: Python :: 3.5',\n    'Programming Language :: Python :: 3.6',\n    'Programming Language :: Python :: Implementation :: CPython',\n    'Programming Language :: Python :: Implementation :: PyPy',\n    'Programming Language :: Python',\n    'Topic :: Education',\n]\n\nsetup(\n    name='coursera-dl',\n    version=__version__,\n    maintainer='Rogério Theodoro de Brito',\n    maintainer_email='rbrito@gmail.com',\n\n    license='LGPL',\n    url='https://github.com/coursera-dl/coursera-dl',\n\n    install_requires=requirements,\n    extras_require=dict(\n        dev=dev_requirements\n    ),\n\n    description='Script for downloading Coursera.org videos and naming them.',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    keywords=['coursera-dl', 'coursera',\n              'download', 'education', 'MOOCs', 'video'],\n    classifiers=trove_classifiers,\n\n    packages=[\"coursera\"],\n    entry_points=dict(\n        console_scripts=[\n            'coursera-dl=coursera.coursera_dl:main'\n        ]\n    ),\n\n    platforms=['any'],\n)\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.83203125,
          "content": "[tox]\nenvlist = py26,py27,py33,py34,py35,py36\n\n[testenv]\ndownloadcache = .tox/_download/\n\ndeps =\n    beautifulsoup4>=4.1.3\n    coverage>=3.7\n    mock>=1.0.1\n    pyasn1>=0.1.7\n    pytest>=2.5\n    requests>=2.4.3\n    six>=1.5.0\n    urllib3>=1.10\n    keyrings.alt>=1.1\n    configargparse>=0.12.0\n\ncommands = py.test -v --junitxml={envlogdir}/result.xml coursera/test\n# Original command: install_command = pip install {opts} {packages}\n# {opts} is remove to prevent passing option \"--download-cache\" to pip\n# which is already gone.\ninstall_command = pip install {packages}\n\n# Notes for developers. Depending on your system configuration,\n# you may find this bash function useful to run before running tox:\n#\n# activate_pyenv () {\n#         export PYENV_ROOT=\"$HOME/.pyenv\"\n#         export PATH=\"$PYENV_ROOT/bin:$PATH\"\n#         eval \"$(pyenv init -)\"\n# }\n"
        }
      ]
    }
  ]
}