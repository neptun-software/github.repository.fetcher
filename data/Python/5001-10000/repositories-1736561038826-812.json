{
  "metadata": {
    "timestamp": 1736561038826,
    "page": 812,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "permitio/opal",
      "stars": 5161,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1162109375,
          "content": "venv/\ndocumentation/\nrego_clone/\n.github/\ndocker/\nMakefile\nDockerfile\n.dockerignore\n.gitignore\n.pre-commit-config.yaml\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1943359375,
          "content": "root=true\n\n[*]\ncharset=utf-8\nend_of_line=lf\ninsert_final_newline=false\nindent_style=space\nindent_size=2\ntrim_trailing_whitespace=true\n\n[*.py]\nindent_size=4\n\n[Makefile]\nindent_size=2\nindent_style=tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.798828125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# editors\n.vscode/\n.idea\n*.iml\n\n.DS_Store\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0947265625,
          "content": "[submodule \"cedar-agent\"]\n\tpath = cedar-agent\n\turl = https://github.com/permitio/cedar-agent.git\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.0244140625,
          "content": "[settings]\nprofile=black\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.59765625,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n  - repo: https://github.com/psf/black\n    rev: 23.1.0\n    hooks:\n      - id: black\n  - repo: https://github.com/pycqa/isort\n    rev: 5.12.0\n    hooks:\n      - id: isort\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.2.4\n    hooks:\n      - id: codespell\n        args: [--skip, \"*.json\"]\n  - repo: https://github.com/PyCQA/docformatter\n    rev: v1.7.5\n    hooks:\n      - id: docformatter\n        args: [--in-place]\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.275390625,
          "content": "# OPAL Community Code of Conduct\n\nOPAL follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting\nthe maintainers via <conduct@permit.io>.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.552734375,
          "content": "# Contributing Guide\n\nWe would love for you to contribute to this project and help make it even better than it is today! üíé\n\nAs a contributor, here are the guidelines we would like you to follow:\n - [Code of Conduct](https://github.com/permitio/opal/blob/master/CODE_OF_CONDUCT.md)\n - [Question or Problem?](#question)\n - [Issues and Bugs](#issue)\n - [Feature Requests](#feature)\n - [Development Guidelines](#development)\n\n## <a name=\"question\"></a> Got a Question or Problem?\nCome talk to us about OPAL, or authorization in general - we would love to hear from you ‚ù§Ô∏è\n\nYou can:\n- Raise questions in our [GitHub discussions](https://github.com/permitio/opal/discussions)\n- Report issues and ask for features in [GitHub issues](https://github.com/permitio/opal/issues)\n- Follow us on [Twitter](https://twitter.com/opal_ac) to get the latest OPAL updates\n- Join our [Slack community](https://io.permit.io/slack) to chat about authorization, open-source, realtime communication, tech or anything else! We are super available on Slack ;)\n\nIf you are using our project, please consider giving us a ‚≠êÔ∏è\n</br>\n</br>\n\n[![Join our Slack](https://i.ibb.co/wzrGHQL/Group-749.png)](https://bit.ly/opal-slack)</br> [![Follow us on Twitter](https://i.ibb.co/k4x55Lr/Group-750.png)](https://twitter.com/opal_ac)\n\n### <a name=\"issue\"></a> Found a Bug?\nIf you find a bug in the source code, you can help us by [submitting an issue](https://github.com/permitio/opal/issues) or even better, you can [submit a Pull Request](#submit-pr) with a fix.\n\nBefore you submit an issue, please search the issue tracker; maybe an issue for your problem already exists, and the discussion might inform you of workarounds readily available.\n\nWe want to fix all the issues as soon as possible, but before fixing a bug, we need to reproduce and confirm it.\nIn order to reproduce bugs, we require that you provide:\n- Full logs of OPAL server and OPAL client\n- Your configuration for OPAL server and OPAL client\n  - i.e.: Docker Compose, Kubernetes YAMLs, environment variables, etc.\n  - Redact any secrets/tokens/API keys in your config\n\n### <a name=\"feature\"></a> Missing a Feature?\nYou can *request* a new feature by [submitting an issue](https://github.com/permitio/opal/issues) to our GitHub Repository.\nPlease provide as much detail and context as possible, along with examples or references to similar features, as this will help us understand your request better.\n\nWe encourage you to contribute to OPAL by submitting a [Pull Request](#submit-pr) with your feature implementation and are happy to guide you through the process.\n\nCustom Fetch Providers are a great way to extend OPAL, and we would love to see your implementation of a new fetch provider!\nTo get started, you can check out the tutorial on how to [Write Your Own Fetch Provider](https://opal.ac/tutorials/write_your_own_fetch_provider).\n\nWe are always looking to improve OPAL and would love to hear your ideas!\n\n### <a name=\"submit-pr\"></a> Submitting a Pull Request (PR)\n\nPull requests are welcome! üôè\n\nPlease follow these guidelines:\n\n1. **Create an Issue**: Open a [GitHub Issue](https://github.com/permitio/opal/issues) for your feature or bug fix.\n2. **Fork & Branch**: Fork this repository and create a new branch based on `master`. Name your branch descriptively (e.g., `fix/issue-123`, `feature/new-fetch-provider`).\n3. **Write Tests**: If your changes affect functionality, include tests.\n4. **Update Documentation**: Ensure any new features or configurations are documented.\n5. **Check Quality**: Run all tests and linters:\n    ```bash\n    pytest\n    pre-commit run --all-files\n    ```\n6. **Submit PR**: Open a pull request, linking to the issue and explaining your changes clearly.\n\nWe aim to review all PRs promptly. After you submit a PR, here‚Äôs what you can expect:\n1. **Initial Review:** A maintainer will review your PR within a few days. If there are any issues, they will provide feedback.\n2. **Feedback:** If changes are needed, please make the necessary updates and push them to your branch. The PR will be updated automatically.\n3. **Approval:** Once your PR is approved, it will be merged into the main branch.\n4. **Release:** Your changes will be included in the next release of OPAL. We will update the changelog and release notes accordingly.\n5. **Announcement:** We will announce your contribution in our community channels and give you a shoutout! üéâ\n\n### Contributor Checklist\n\nBefore submitting your contribution, ensure the following:\n\n- [ ] Issue created and linked in the PR\n- [ ] Branch created from `master` and appropriately named\n- [ ] Tests written and passing\n- [ ] Documentation updated (if applicable)\n- [ ] Code formatted and linted\n- [ ] Changes thoroughly explained in the PR description\n\n## <a name=\"development\"></a> Development Guidelines\n\nWe are excited to have you onboard as a contributor to OPAL! üéâ\n\n### Setting up Your Development Environment\n\n#### Prerequisites\n- [Python](https://www.python.org/downloads/)\n- [Docker](https://docs.docker.com/get-docker/)\n- [OPA](https://www.openpolicyagent.org/docs/latest/#running-opa)\n\n1. Fork the repository and clone it to your local machine.\n2. Create a virtual environment and install the dependencies:\n    ```bash\n    python3 -m venv venv\n    source venv/bin/activate\n    pip install -r requirements.txt\n    ```\n3. Install the pre-commit hooks:\n    ```bash\n    pre-commit install\n    ```\n\n### Running OPAL Servers and Clients\n\nYou can run the OPAL server and client locally using the OPAL CLI or using uvicorn directly.\n### Configuring OPAL\nConfigure OPAL by setting environment variables:\n```bash\nexport OPAL_POLICY_REPO_URL=https://github.com/permitio/opal-example-policy-repo\nexport OPAL_DATA_CONFIG_SOURCES={\"config\":{\"entries\":[{\"url\":\"http://localhost:7002/policy-data\",\"topics\":[\"policy_data\"],\"dst_path\":\"/static\"}]}}\nexport OPAL_SERVER_URL=http://localhost:7002\n```\n\nMore information about the available configurations can be found in the [OPAL documentation](https://opal.ac/getting-started/configuration).\n\n#### Using OPAL CLI\n```bash\nopal-server run\nopal-client run\n```\n\n#### Using uvicorn\n```bash\nuvicorn opal_server.main:app --reload\nuvicorn opal_client.main:app --reload\n```\n\n### Building the Docker Images\n\nYou can build the Docker images for the OPAL server and client using the following commands:\n```bash\nmake docker-build-server\nmake docker-build-client  # with inline OPA engine\nmake docker-build-client-cedar  # with inline cedar agent engine\nmake docker-build-client-standalone  # without inline engine\n```\n\n### Running the Documentation Locally\n\nWhen contributing to the documentation, you can run the documentation locally and preview your changes live.\n\n#### Prerequisites\n- [Node.js](https://nodejs.org/en/download/)\n\n#### Setting Up\n1. Navigate to the `docs` directory:\n    ```bash\n    cd documentation\n    ```\n2. Install the dependencies:\n    ```bash\n    npm install\n    ```\n\n#### Running the Documentation Live\n\nYou can run the documentation live using the following command:\n```bash\nnpm run start\n```\n\n### Linting and Formatting\n\nYou can run the linting and formatting checks using the following command:\n```bash\npre-commit run --all-files\n```\n\n### Running the Tests\n\nYou can run the tests using the following command:\n```bash\npytest\n```\n\n### Running E2E Tests\n\nThe E2E tests run OPAL Server and Client in a docker-compose environment and test the core features of OPAL.\nThey are external to the OPAL packages and are located in the `app-tests` directory.\n\nRead more about how to run the E2E tests in the [app-tests README](app-tests/README.md).\n\n---\n\nWe‚Äôre excited to see your contributions and will do our best to support you through the process! üëè\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0859375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2021 Or Weis and Asaf Cohen\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0205078125,
          "content": "include *.md LICENSE\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.7568359375,
          "content": ".PHONY: help\n\n.DEFAULT_GOAL := help\n\nOPAL_SERVER_URL ?= http://host.docker.internal:7002\nOPAL_AUTH_PRIVATE_KEY ?= /root/ssh/opal_rsa\nOPAL_AUTH_PUBLIC_KEY ?= /root/ssh/opal_rsa.pub\nOPAL_POLICY_STORE_URL ?= http://host.docker.internal:8181\n\n# python packages (pypi)\nclean:\n\tcd packages/opal-common/ ; rm -rf *.egg-info build/ dist/\n\tcd packages/opal-client/ ; rm -rf *.egg-info build/ dist/\n\tcd packages/opal-server/ ; rm -rf *.egg-info build/ dist/\n\nbuild-packages:\n\tcd packages/opal-common/ ; python setup.py sdist bdist_wheel\n\tcd packages/opal-client/ ; python setup.py sdist bdist_wheel\n\tcd packages/opal-server/ ; python setup.py sdist bdist_wheel\n\npublish-to-pypi:\n\tcd packages/opal-common/ ; python -m twine upload dist/*\n\tcd packages/opal-client/ ; python -m twine upload dist/*\n\tcd packages/opal-server/ ; python -m twine upload dist/*\n\npublish:\n\t$(MAKE) clean\n\t$(MAKE) build-packages\n\t$(MAKE) publish-to-pypi\n\ninstall-client-from-src:\n\tpip install packages/opal-client\n\ninstall-server-from-src:\n\tpip install packages/opal-server\n\ninstall-develop:\n\tpip install -r requirements.txt\n\n# docker\ndocker-build-client:\n\t@docker build -t permitio/opal-client --target client -f docker/Dockerfile .\n\ndocker-build-client-cedar:\n\t@docker build -t permitio/opal-client-cedar --target client-cedar -f docker/Dockerfile .\n\ndocker-build-client-standalone:\n\t@docker build -t permitio/opal-client-standalone --target client-standalone -f docker/Dockerfile .\n\ndocker-run-client:\n\t@docker run -it -e \"OPAL_SERVER_URL=$(OPAL_SERVER_URL)\" -p 7766:7000 -p 8181:8181 permitio/opal-client\n\ndocker-run-client-standalone:\n\t@docker run -it \\\n\t\t-e \"OPAL_SERVER_URL=$(OPAL_SERVER_URL)\" \\\n\t\t-e \"OPAL_POLICY_STORE_URL=$(OPAL_POLICY_STORE_URL)\" \\\n\t\t-p 7766:7000 \\\n\t\tpermitio/opal-client-standalone\n\ndocker-build-server:\n\t@docker build -t permitio/opal-server --target server -f docker/Dockerfile .\n\ndocker-build-next:\n\t@docker build -t permitio/opal-client-standalone:next --target client-standalone -f docker/Dockerfile .\n\t@docker build -t permitio/opal-client:next --target client -f docker/Dockerfile .\n\t@docker build -t permitio/opal-server:next --target server -f docker/Dockerfile .\n\ndocker-run-server:\n\t@if [[ -z \"$(OPAL_POLICY_REPO_SSH_KEY)\" ]]; then \\\n\t\tdocker run -it \\\n\t\t\t-e \"OPAL_POLICY_REPO_URL=$(OPAL_POLICY_REPO_URL)\" \\\n\t\t\t-p 7002:7002 \\\n\t\t\tpermitio/opal-server; \\\n\telse \\\n\t\tdocker run -it \\\n\t\t\t-e \"OPAL_POLICY_REPO_URL=$(OPAL_POLICY_REPO_URL)\" \\\n\t\t\t-e \"OPAL_POLICY_REPO_SSH_KEY=$(OPAL_POLICY_REPO_SSH_KEY)\" \\\n\t\t\t-p 7002:7002 \\\n\t\t\tpermitio/opal-server; \\\n\tfi\n\ndocker-run-server-secure:\n\t@docker run -it \\\n\t\t-v ~/.ssh:/root/ssh \\\n\t\t-e \"OPAL_AUTH_PRIVATE_KEY=$(OPAL_AUTH_PRIVATE_KEY)\" \\\n\t\t-e \"OPAL_AUTH_PUBLIC_KEY=$(OPAL_AUTH_PUBLIC_KEY)\" \\\n\t\t-e \"OPAL_POLICY_REPO_URL=$(OPAL_POLICY_REPO_URL)\" \\\n\t\t-p 7002:7002 \\\n\t\tpermitio/opal-server\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.28125,
          "content": "<p  align=\"center\">\n <img src=\"https://github.com/permitio/opal/assets/4082578/4e21f85f-30ab-43e2-92de-b82f78888c71\" height=170 alt=\"opal\" border=\"0\" />\n</p>\n<h1 align=\"center\">\n‚ö°OPAL‚ö°\n</h1>\n\n<h2 align=\"center\">\nOpen Policy Administration Layer\n</h2>\n\n<a href=\"https://github.com/permitio/opal/actions?query=workflow%3ATests\" target=\"_blank\">\n    <img src=\"https://github.com/permitio/opal/workflows/Tests/badge.svg\" alt=\"Tests\">\n</a>\n<a href=\"https://pypi.org/project/opal-server/\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/opal-server?color=%2331C654&label=OPAL%20Server%20%28PyPi%29\" alt=\"Package\">\n</a>\n<a href=\"https://pypi.org/project/opal-client/\" target=\"_blank\">\n    <img src=\"https://img.shields.io/pypi/v/opal-client?color=%2331C654&label=OPAL%20Client%20%28PyPi%29\" alt=\"Package\">\n</a>\n<a href=\"https://pepy.tech/project/opal-server\" target=\"_blank\">\n    <img src=\"https://static.pepy.tech/personalized-badge/opal-client?period=total&units=international_system&left_color=black&right_color=blue&left_text=Downloads\" alt=\"Downloads\">\n</a>\n\n<a href=\"https://hub.docker.com/r/permitio/opal-server\" target=\"_blank\">\n    <img src=\"https://img.shields.io/docker/pulls/permitio/opal-client?label=Docker%20pulls\" alt=\"Docker pulls\">\n</a>\n\n<a href=\"https://bit.ly/permit-slack\" target=\"_blank\">\n    <img src=\"https://img.shields.io/badge/Slack%20Community-4A154B?logo=slack&logoColor=white\" alt=\"Join our Slack!\">\n</a>\n<a href=\"https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fpublish.twitter.com%2F%3FbuttonType%3DFollowButton%26query%3Dhttps%253A%252F%252Ftwitter.com%252Fpermit_io%26widget%3DButton&ref_src=twsrc%5Etfw&region=follow_link&screen_name=permit_io&tw_p=followbutton\"><img src=\"https://img.shields.io/twitter/follow/permit_io?label=Follow%20%40permit_io&style=social\">\n</a>\n\n## What is OPAL?\n\nOPAL is an administration layer for Policy Engines such as <a target=\"_blank\" href=\"https://www.openpolicyagent.org/\">Open Policy Agent (OPA)</a>, and <a target=\"_blank\" href=\"https://github.com/permitio/cedar-agent\">AWS' Cedar Agent</a> detecting changes to both policy and policy data in realtime and pushing live updates to your agents. OPAL brings open-policy up to the speed needed by live applications.\n\nAs your app's data state changes (whether it's via your APIs, DBs, git, S3 or 3rd-party SaaS services), OPAL will make sure your services are always in sync with the authorization data and policy they need (and only those they need).\n\nCheck out OPAL's main site at <a target=\"_blank\" href=\"https://opal.ac\">OPAL.ac</a>\n\n## OPAL Use Cases\n\nOPAL is the easiest way to keep your solution's authorization layer up-to-date in realtime. It aggregates policy and data from across the field and integrates them seamlessly into the authorization layer, and is microservices and cloud-native.\n\nHere are some of the main use cases for using OPAL:\n* **End-to-End [Fine-Grained Authorization](https://www.permit.io/blog/what-is-fine-grained-authorization-fga) service** that can be used with any policy language or data store\n* [Google-Zanzibar](https://www.permit.io/blog/what-is-google-zanzibar) support for Policy as Code engines such as OPA and AWS Cedar\n* Streamline permissions in microservice architectures using [centralized policy configuration with decentralized data](https://www.permit.io/blog/best-practices-for-implementing-hybrid-cloud-security) sources and policy engines\n* Manage and automate the deployment of multiple Open Policy Agent engines in a Cloud-Native environment\n\n<img src=\"https://github.com/permitio/opal/assets/4082578/99d3dd95-a7ff-45c2-805e-3d533f8b1e8c\" alt=\"simplified\" border=\"0\">\n\nOPAL  uses a client-server stateless architecture. OPAL-Servers publish policy and data updates over a lightweight (websocket) PubSub Channel, which OPAL-clients subscribe to via topics. Upon updates, each client fetches data directly (from the source) to load it into its managed Policy Engine instance.\n\n\n### OPA + OPAL == üíú\n\nWhile OPA (Open Policy Agent) decouples policy from code in a highly-performant and elegant way, the challenge of keeping policy agents up-to-date remains.\nThis is especially true in applications, where each user interaction or API call may affect access-control decisions.\nOPAL runs in the background, supercharging policy agents and keeping them in sync with events in real time.\n\n### AWS Cedar + OPAL == üí™\n\nCedar is a very powerful policy language, which powers AWS' AVP (Amazon Verified Permissions) - but what if you want to enjoy the power of Cedar on another cloud, locally, or on premise?\nThis is where [Cedar-Agent](https://github.com/permitio/cedar-agent) and OPAL come in.\n\nThis [video](https://youtu.be/tG8jrdcc7Zo) briefly explains OPAL and how it works with OPA, and a deeper dive into it at [this OWASP DevSlop talk](https://www.youtube.com/watch?v=1_Iz0tRQCH4).\n\n## Who's Using OPAL?\nOPAL is being used as the core engine of Permit.io Authorization Service and serves in production:\n* \\> 10,000 policy engines deployment\n* \\> 100,000 policy changes and data synchronizations every day\n* \\> 10,000,000 authorization checks every day\n\nBesides Permit, OPAL is being used in Production in **Tesla**, **Walmart**, **The NBA**, **Intel**, **Cisco**, **Live-Oak Bank**, and thousands of other development teams and companies of all sizes.\n\n## Documentation\n\n- üìÉ &nbsp; [Full documentation is available here](https://docs.opal.ac)\n- üí° &nbsp; [Intro to OPAL](https://docs.opal.ac/getting-started/intro)\n- üöÄ &nbsp; Getting Started:\n\n  OPAL is available both as **python packages** with a built-in CLI as well as pre-built **docker images** ready-to-go.\n\n  - [Play with a live playground environment in docker-compose](https://docs.opal.ac/getting-started/quickstart/opal-playground/overview)\n  <!-- - this tutorial is great for learning about OPAL core features and see what OPAL can do for you. -->\n  - [Try the getting started guide for containers](https://docs.opal.ac/getting-started/running-opal/overview)\n  <!-- - this tutorial will show you how to configure OPAL to your specific needs and run the official docker containers locally or in production. -->\n\n  - [Check out the Helm Chart for Kubernetes](https://github.com/permitio/opal-helm-chart)\n\n- A video demo of OPAL is available [here](https://www.youtube.com/watch?v=IkR6EGY3QfM)\n\n- You can also check out this webinar and Q&A about OPAL [on our YouTube channel](https://www.youtube.com/watch?v=A5adHlkmdC0&t=1s)\n  <br>\n\n- üí™ &nbsp; TL;DR - This one command will download and run a working configuration of OPAL server and OPAL client on your machine:\n\n```\ncurl -L https://raw.githubusercontent.com/permitio/opal/master/docker/docker-compose-example.yml \\\n> docker-compose.yml && docker compose up\n```\n\n<p>\n  <a href=\"https://asciinema.org/a/409288\" target=\"_blank\">\n    <img src=\"https://asciinema.org/a/409288.svg\" />\n  </a>\n</p>\n\n- üß† &nbsp; \"How-To\"s\n\n  - [How to get started with OPAL (Packages and CLI)](https://docs.opal.ac/getting-started/running-opal/as-python-package/overview)\n\n  - [How to get started with OPAL (Container Images)](https://docs.opal.ac/getting-started/running-opal/overview)\n\n  - [How to trigger Data Updates via OPAL](https://docs.opal.ac/tutorials/trigger_data_updates)\n\n  - [How to extend OPAL to fetch data from your sources with FetchProviders](https://docs.opal.ac/tutorials/write_your_own_fetch_provider)\n\n  - [How to configure OPAL (basic concepts)](https://docs.opal.ac/tutorials/configure_opal)\n\n  - [How to Use OPAL with Cedar in a Multi-Language Project](https://www.permit.io/blog/scaling-authorization-with-cedar-and-opal)\n\n- üé® &nbsp; [Key concepts and design](https://docs.opal.ac/overview/design)\n- üèóÔ∏è &nbsp; [Architecture](https://docs.opal.ac/overview/architecture)\n<br>\n\nüìñ For further reading, check out our [Blog](https://io.permit.io/opal-readme-blog)\n\n## Community\n\n We would love to chat with you about OPAL. [Join our Slack community](https://io.permit.io/opal-readme-slack) to chat about authorization, open-source, realtime communication, tech, or anything else!\n\nYou can raise questions and ask for features to be added to the road-map in our [**Github discussions**](https://github.com/permitio/opal/discussions), report issues in [**Github issues**](https://github.com/permitio/opal/issues)\n</br>\n</br>\nIf you like our project, please consider giving us a ‚≠êÔ∏è\n</br>\n\n[![Button][join-slack-link]][badge-slack-link] </br> [![Button][follow-twitter-link]][badge-twitter-link]\n\n## Contributing to OPAL\n\nWe would love for you to contribute to this project and help make it even better than it is today! üíé\n\nAs a contributor, here are the guidelines we would like you to follow:\n - [Code of Conduct](CODE_OF_CONDUCT.md)\n - [Question or Problem?](CONTRIBUTING.md#question)\n - [Issues and Bugs](CONTRIBUTING.md#issue)\n - [Feature Requests](CONTRIBUTING.md#feature)\n - [Development Guidelines](CONTRIBUTING.md#development)\n\n[join-slack-link]: https://i.ibb.co/wzrGHQL/Group-749.png\n[badge-slack-link]: https://io.permit.io/join_community\n[follow-twitter-link]: https://i.ibb.co/k4x55Lr/Group-750.png\n[badge-twitter-link]: https://twitter.com/opal_ac\n\n## There's more!\n\n- Check out [OPToggles](https://github.com/permitio/OPToggles), which enables you to create user targeted feature flags/toggles based on Open Policy managed authorization rules!\n- Check out [Cedar-Agent](https://github.com/permitio/cedar-agent), the easiest way to deploy & run AWS Cedar.\n"
        },
        {
          "name": "app-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "cedar-agent",
          "type": "commit",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.087890625,
          "content": "# Handling DeprecationWarning 'asyncio_mode' default value\n[pytest]\nasyncio_mode = strict\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.5068359375,
          "content": "-e ./packages/opal-common\n-e ./packages/opal-client\n-e ./packages/opal-server\nipython>=8.10.0\npytest\npytest-asyncio\npytest-rerunfailures\nwheel>=0.38.0\ntwine\nsetuptools>=70.0.0 # not directly required, pinned by Snyk to avoid a vulnerability\nzipp>=3.19.1 # not directly required, pinned by Snyk to avoid a vulnerability\nprometheus_client\nopentelemetry-api>=1.28.2\nopentelemetry-sdk>=1.28.2\nopentelemetry-instrumentation\nopentelemetry-instrumentation-fastapi\nopentelemetry-exporter-otlp\nopentelemetry-exporter-prometheus\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}