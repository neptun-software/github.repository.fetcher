{
  "metadata": {
    "timestamp": 1736560555758,
    "page": 166,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AirtestProject/Airtest",
      "stars": 8390,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0654296875,
          "content": "[run]\nbranch = True\nomit =\n\tairtest/core/ios/*\n    airtest/utils/*\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.140625,
          "content": "docs/* linguist-documentation\nplayground/* linguist-vendored\nairtest/report/* linguist-vendored\nairtest/core/android/static/* linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6103515625,
          "content": "*.py[cod]\n\n# C extensions\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\nlib\nlib64\n__pycache__\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\nnosetests.xml\n\n# Translations\n*.mo\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\ntmp/\nlog/\n*.log\n_site\napps\nscreen.jpg\n*.spec\nlog.txt\ncore/ios/certificate_config.py\nhtmlcov/\ncover/\n\n.idea/\n.vscode/\n.DS_Store\nenv/\nscreencapture.bmp\nlog.html\nlog.gif\nscreen.png\nlog.txt\nimg_record\n\n#docs\ndocs/_build\ndocs/README.rst\ndocs/demo.gif\n\n#pipenv\nPipfile\nPipfile.lock\n\n*.sublime-project\n*.sublime-workspace\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.5556640625,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.6\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# We recommend specifying your dependencies to enable reproducible builds:\n# https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\npython:\n  install:\n  - requirements: docs/requirements.txt"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.9794921875,
          "content": "group: travis_latest\nlanguage: python\ncache: pip\npython:\n    - 2.7\n    - 3.6\n    #- nightly\n    #- pypy\n    #- pypy3\nmatrix:\n    allow_failures:\n        - python: nightly\n        - python: pypy\n        - python: pypy3\ninstall:\n    - pip install -r requirements.txt\n    - pip install flake8  # pytest  # add another testing frameworks later\nbefore_script:\n    # stop the build if there are Python syntax errors or undefined names\n    - flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics --exclude *.air\n    # exit-zero treats all errors as warnings.  The GitHub editor is 127 chars wide\n    - flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --exclude *.air\nscript:\n    - true  # pytest --capture=sys  # add other tests here\n    # - runtest.sh  # requires connecting an android phone with ADB. We are not using mock now.\nnotifications:\n    on_success: change\n    on_failure: change  # `always` will be the setting once code changes slow down\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.3515625,
          "content": "include requirements.txt\nrecursive-include airtest/core/android/static *\ninclude airtest/core/android/static/*/*/*\ninclude airtest/core/android/static/*/*\ninclude airtest/core/android/static/stf_libs/minicap-shared/aosp/libs/*/*/*.*\n\ninclude airtest/core/ios/iproxy/*/*\n\ninclude airtest/report/*.html\ninclude airtest/report/*/*.*\ninclude airtest/report/*/*/*.*"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.52734375,
          "content": "# Airtest &middot; [![Build status](https://travis-ci.org/AirtestProject/Airtest.svg?branch=master)](https://travis-ci.org/AirtestProject/Airtest)\n\n**Cross-Platform UI Automation Framework for Games and Apps**\n\n**跨平台的UI自动化框架，适用于游戏和App** （[中文版点这里](./README_zh.md)）\n\n\n![image](./demo.gif)\n\n\n## Features\n\n*   **Write Once, Run Anywhere:** Airtest provides cross-platform APIs, including app installation, simulated input, assertion and so forth. Airtest uses image recognition technology to locate UI elements so that you can automate games and apps without injecting any code. \n\n*   **Fully Scalable:** Airtest cases can be easily run on large device farms, using commandline or python API. HTML reports with detailed info and screen recording allow you to quickly locate failure points. NetEase builds [Airlab](https://airlab.163.com/) on top of the Airtest Project.\n\n*   **AirtestIDE:** AirtestIDE is an out of the box GUI tool that helps to create and run cases in a user-friendly way. AirtestIDE supports a complete automation workflow: ``create -> run -> report``.\n\n*   **Poco:** [Poco](https://github.com/AirtestProject/Poco) adds the ability to directly access object(UI widget) hierarchy across the major platforms and game engines. It allows writing instructions in Python, to achieve more advanced automation.\n\nGet started from [airtest homepage](http://airtest.netease.com/)\n\n#### [Supported Platforms](./docs/wiki/device/platforms.md)\n\n\n## Installation\n\nUse `pip` to install the Airtest python library. \n\n```Shell\npip install -U airtest\n```\n\nOn MacOS/Linux platform, you need to grant adb execute permission.\n\n```Shell\n# for mac\ncd {your_python_path}/site-packages/airtest/core/android/static/adb/mac\n# for linux\n# cd {your_python_path}/site-packages/airtest/core/android/static/adb/linux\nchmod +x adb\n```\n\nDownload AirtestIDE from our [homepage](http://airtest.netease.com/) if you need to use the GUI tool.\n\n\n## Documentation\n\nYou can find the complete Airtest documentation on [readthedocs](http://airtest.readthedocs.io/).\n\n\n## Examples\n\nAirtest aims at providing platform-independent API so that you can write automated cases once and run it on multiple devices and platforms.\n\n1. Using [connect_device](http://airtest.readthedocs.io/en/latest/README_MORE.html#connect-device) API you can connect to any android/iOS device or windows application.\n1. Then perform [simulated input](http://airtest.readthedocs.io/en/latest/README_MORE.html#simulate-input) to automate your game or app.\n1. **DO NOT** forget to [make assertions](http://airtest.readthedocs.io/en/latest/README_MORE.html#make-assertion) of the expected result. \n\n```Python\nfrom airtest.core.api import *\n\n# connect an android phone with adb\ninit_device(\"Android\")\n# or use connect_device api\n# connect_device(\"Android:///\")\n\ninstall(\"path/to/your/apk\")\nstart_app(\"package_name_of_your_apk\")\ntouch(Template(\"image_of_a_button.png\"))\nswipe(Template(\"slide_start.png\"), Template(\"slide_end.png\"))\nassert_exists(Template(\"success.png\"))\nkeyevent(\"BACK\")\nhome()\nuninstall(\"package_name_of_your_apk\")\n```\n\nFor more detailed info, please refer to [Airtest Python API reference](http://airtest.readthedocs.io/en/latest/all_module/airtest.core.api.html) or take a look at [API code](./airtest/core/api.py)\n\n\n## Running ``.air`` cases from CLI\n\nUsing AirtestIDE, you can easily create automated cases as ``.air`` directories.\nAirtest CLI provides the possibility to execute cases on different host machines and target device platforms without using AirtestIDE itself.\n\n```Shell\n# run cases targeting on Android phone connected to your host machine via ADB\nairtest run \"path to your .air dir\" --device Android:///\n\n# run cases targeting on Windows application whose title matches Unity.*\nairtest run \"path to your .air dir\" --device \"Windows:///?title_re=Unity.*\"\n\n# generate HTML report after running cases\nairtest report \"path to your .air dir\"\n\n# or use as a python module\npython -m airtest run \"path to your .air dir\" --device Android:///\n```\n\nTry running provided example case: [``airtest/playground/test_blackjack.air``](./playground/test_blackjack.air) and see [Usage of CLI](http://airtest.readthedocs.io/en/latest/README_MORE.html#running-air-from-cli). Here is a [multi-device runner sample](https://github.com/AirtestProject/multi-device-runner).\n\n\n## Contribution\n\nPull requests are very welcome. \n\n\n## Thanks\n\nThanks for all these great works that make this project better.\n\n- [stf](https://github.com/openstf)\n- [atx](https://github.com/NetEaseGame/ATX)\n- [pywinauto](https://github.com/pywinauto/pywinauto)\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 4.1953125,
          "content": "# Airtest &middot; [![Build status](https://travis-ci.org/AirtestProject/Airtest.svg?branch=master)](https://travis-ci.org/AirtestProject/Airtest)\n\n**跨平台的UI自动化框架，适用于游戏和App**\n\n\n![image](./demo.gif)\n\n\n## 快速开始\n\n*   **各种运行：** Airtest提供了跨平台的API，包括安装应用、模拟输入、断言等。 基于图像识别技术定位UI元素，你无需嵌入任何代码即可进行自动化。\n\n*   **扩展性：** Airtest提供了命令行和python接口，可以很容易地在大规模设备集群上运行。自动生成的HTML报告，包含详细步骤和录屏，让你迅速定位失败点。\n\n*   **AirtestIDE：** 是一个强大的GUI工具，可以帮助你录制和调试自动化脚本。 AirtestIDE支持了完整的自动化流程：``录制脚本->真机回放->生成报告``。\n\n*   **Poco：** [Poco](https://github.com/AirtestProject/Poco) 框架可以直接访问UI控件，支持主流平台和游戏引擎。通过Python API操作UI控件，可以实现更强大的自动化控制。\n\n[从官网开始上手吧](http://airtest.netease.com/)\n\n\n#### [跨平台支持](./docs/wiki/device/platforms.md)\n\n## 安装\n\n使用 `pip` 安装Airtest框架\n\n```Shell\npip install -U airtest\n```\n\n在Mac/Linux系统下，需要手动赋予adb可执行权限\n\n```Shell\n# mac系统\ncd {your_python_path}/site-packages/airtest/core/android/static/adb/mac\n# linux系统\n# cd {your_python_path}/site-packages/airtest/core/android/static/adb/linux\nchmod +x adb\n```\n\n如果你需要使用GUI工具，请从 [官网](http://airtest.netease.com/) 下载AirtestIDE。\n\n\n## 文档\n\n完整的Airtest文档请看 [readthedocs](http://airtest.readthedocs.io/)。\n\n\n## 例子\n\nAirtest希望提供平台无关的API，让你的自动化代码可以运行在不同平台的应用上。\n\n1. 使用 [connect_device](http://airtest.readthedocs.io/zh_CN/latest/README_MORE.html#connect-device) 来连接任意Android设备或者Windows窗口。\n1. 使用 [模拟操作](http://airtest.readthedocs.io/zh_CN/latest/README_MORE.html#simulate-input) 的API来自动化你的游戏或者App。\n1. **不要** 忘记 [声明断言](http://airtest.readthedocs.io/zh_CN/latest/README_MORE.html#make-assertion) 来验证结果。 \n\n\n```Python\nfrom airtest.core.api import *\n\n# 通过ADB连接本地Android设备\ninit_device(\"Android\")\n# 或者使用connect_device函数\n# connect_device(\"Android:///\")\nconnect_device(\"Android:///\")\ninstall(\"path/to/your/apk\")\nstart_app(\"package_name_of_your_apk\")\ntouch(Template(\"image_of_a_button.png\"))\nswipe(Template(\"slide_start.png\"), Template(\"slide_end.png\"))\nassert_exists(Template(\"success.png\"))\nkeyevent(\"BACK\")\nhome()\nuninstall(\"package_name_of_your_apk\")\n```\n\n更详细的说明请看 [Airtest Python API 文档](http://airtest.readthedocs.io/zh_CN/latest/all_module/airtest.core.api.html) 或者直接看 [API代码](./airtest/core/api.py) 。\n\n\n## 用命令行运行 ``.air`` 脚本\n\n使用AirtestIDE你可以非常轻松地录制一个自动化脚本并保存为 ``.air`` 目录结构。\nAirtest命令行则让你能够脱离IDE，在不同宿主机器和被测设备上运行自动化脚本。\n\n```Shell\n# 在本地ADB连接的安卓手机上运行脚本\nairtest run \"path to your air dir\" --device Android:///\n\n# 在Windows应用上运行脚本\nairtest run \"path to your air dir\" --device \"Windows:///?title_re=Unity.*\"\n\n# 生成HTML报告\nairtest report \"path to your air dir\"\n\n# 也可以用python -m的方式使用命令行\npython -m airtest run \"path to your air dir\" --device Android:///\n```\n\n试试样例[airtest/playground/test_blackjack.air](./playground/test_blackjack.air)，更多用法看[命令行用法](http://airtest.readthedocs.io/zh_CN/latest/README_MORE.html#running-air-from-cli)。\n\n\n## 贡献代码\n\n欢迎大家fork和提pull requests。\n\n\n## 致谢\n\n感谢以下仓库让Airtest变得更好：\n\n- [stf](https://github.com/openstf)\n- [atx](https://github.com/NetEaseGame/ATX)\n- [pywinauto](https://github.com/pywinauto/pywinauto)\n\n## 关于我们\n\n访问我们的[官网](http://airtest.netease.com/)获得更多信息，同时欢迎大家扫描下方二维码关注我们的微信公众号：AirtestProject\n\n![image](http://airtest.netease.com/static/img/social_media/wechat_qrcode.jpg)\n"
        },
        {
          "name": "airtest",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo.gif",
          "type": "blob",
          "size": 3948.5888671875,
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "playground",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.19921875,
          "content": "Jinja2>=2.8\nPillow>=3.4.0\nrequests>=2.11.1\nsix>=1.9.0,<=1.16.0\nmss==6.1.0\nnumpy<2.0\nopencv-contrib-python>=4.4.0.46, <=4.6.0.66\nfacebook-wda>=1.3.3\npywinauto==0.6.3\nfilelock\nffmpeg-python\ntidevice\npsutil\n"
        },
        {
          "name": "runtest.sh",
          "type": "blob",
          "size": 0.15625,
          "content": "rm -r cover\nrm .coverage\npython -m nose tests -s -e \\w*.air --with-coverage --cover-package ./airtest --cover-html  #  --cover-inclusive\nopen cover/index.html\n\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.0234375,
          "content": "import os\nimport sys\nimport codecs\nfrom setuptools import setup, find_packages\n\n\ndef read(rel_path):\n    here = os.path.abspath(os.path.dirname(__file__))\n    with codecs.open(os.path.join(here, rel_path), 'r') as fp:\n        return fp.read()\n\n\ndef get_version(rel_path):\n    for line in read(rel_path).splitlines():\n        if line.startswith('__version__'):\n            # __version__ = \"1.x.x\"\n            delim = '\"' if '\"' in line else \"'\"\n            return line.split(delim)[1]\n    else:\n        raise RuntimeError(\"Unable to find version string.\")\n\n\ndef is_docker():\n    if os.path.exists('/proc/self/cgroup'):\n        with open('/proc/self/cgroup', 'rt') as ifh:\n            return 'docker' in ifh.read()\n    return False\n\n\ndef parse_requirements(filename):\n    \"\"\" load requirements from a pip requirements file. (replacing from pip.req import parse_requirements)\"\"\"\n    lineiter = (line.strip() for line in open(filename))\n    reqs = [line for line in lineiter if line and not line.startswith(\"#\")]\n    if sys.platform == \"win32\":\n        reqs.append('pywin32')\n    # if py<=3.6 add dataclasses\n    if sys.version_info.major == 3 and sys.version_info.minor <= 6:\n        reqs.append(\"dataclasses\")\n    if sys.version_info.major == 3 and sys.version_info.minor <= 7:\n        reqs.remove(\"facebook-wda>=1.3.3\")\n        reqs.append(\"facebook-wda<1.4.8\")\n    if is_docker():\n        reqs.remove(\"opencv-contrib-python>=4.4.0.46, <=4.6.0.66\")\n        reqs.append(\"opencv-contrib-python-headless==4.5.5.64\")\n    return reqs\n\n\nsetup(\n    name='airtest',\n    version=get_version(\"airtest/utils/version.py\"),\n    author='Netease Games',\n    author_email='rockywhisper@163.com',\n    description='UI Test Automation Framework for Games and Apps on Android/iOS/Windows/Linux',\n    long_description='UI Test Automation Framework for Games and Apps on Android/iOS/Windows, present by NetEase Games',\n    url='https://github.com/AirtestProject/Airtest',\n    license='Apache License 2.0',\n    keywords=['automation', 'automated-test', 'game', 'android', 'ios', 'windows', 'linux'],\n    packages=find_packages(exclude=['cover', 'playground', 'tests', 'dist']),\n    package_data={\n        'android_deps': [\"*.apk\", \"airtest/core/android/static\"],\n        'html_statics': [\"airtest/report\"],\n        'ios_deps': [\"airtest/core/ios/iproxy\"],\n    },\n    include_package_data=True,\n    install_requires=parse_requirements('requirements.txt'),\n    extras_require={\n        'tests': [\n            'nose',\n        ],\n        'docs': [\n            'sphinx',\n            'recommonmark',\n            'sphinx_rtd_theme',\n            'mock',\n        ]},\n    entry_points=\"\"\"\n    [console_scripts]\n    airtest = airtest.cli.__main__:main\n    \"\"\",\n    classifiers=[\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n    ],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}