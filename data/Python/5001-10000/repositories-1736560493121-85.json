{
  "metadata": {
    "timestamp": 1736560493121,
    "page": 85,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "voxel51/fiftyone",
      "stars": 9056,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".coderabbit.yaml",
          "type": "blob",
          "size": 0.822265625,
          "content": "language: \"en\"\nearly_access: false\nreviews:\n  request_changes_workflow: false\n  high_level_summary: true\n  poem: true\n  review_status: true\n  collapse_walkthrough: false\n  path_filters:\n    - \"!**/.xml\"\n    - \"!**/__generated__/**\"\n    - \"!**/generated/**\"\n    - \"!**/*.json\"\n    - \"!**/*.svg\"\n    - \"!**/*.png\"\n    - \"!**/*.jpg\"\n    - \"!**/*.gif\"\n    - \"!**/*.lock\"\n  path_instructions:\n    - path: \"**/*.{ts,tsx}\"\n      instructions:\n        \"Review the Typescript and React code for conformity with best practices in React, Recoil,\n        Graphql, and Typescript. Highlight any deviations.\"\n  auto_review:\n    enabled: true\n    ignore_title_keywords:\n      - \"WIP\"\n      - \"DO NOT MERGE\"\n      - \"DRAFT\"\n    drafts: false\n    base_branches:\n      - \"develop\"\n      - \"main\"\n      - \"release/.*\"\n      - \"feat/.*\"\nchat:\n  auto_reply: true\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.01953125,
          "content": "*\n!Dockerfile\n!dist\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.244140625,
          "content": "\n**/*.DS_store\n.vscode\nnode_modules\n\n__pycache__\n*.py[cod]\n\n*.egg-info\n.project\n.pydevproject\n**/*.ipynb_checkpoints\n.idea\n*.swp\n\n*~\n\nbuild/\ndist/\n\n/fiftyone-brain/\n/eta/\n\n/docs/build/\n/docs/source/api/\n\n/bin\n/lib\ncoverage.xml\n.coverage.*\npyvenv.cfg\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.3466796875,
          "content": "repos:\n  - repo: https://github.com/asottile/blacken-docs\n    rev: v1.12.0\n    hooks:\n      - id: blacken-docs\n        additional_dependencies: [black==21.12b0]\n        args: [\"-l 79\"]\n        exclude: ^docs/theme/|\\.rst$\n  - repo: https://github.com/ambv/black\n    rev: 22.3.0\n    hooks:\n      - id: black\n        language_version: python3\n        args: [\"-l 79\"]\n        exclude: ^docs/theme/\n  - repo: local\n    hooks:\n      - id: pylint\n        name: pylint\n        language: system\n        files: \\.py$\n        entry: pylint\n        args: [\"--errors-only\"]\n        exclude: ^(docs/theme/|app/)\n  - repo: local\n    hooks:\n      - id: ipynb-strip\n        name: ipynb-strip\n        language: system\n        files: \\.ipynb$\n        exclude: ^docs/ # *do* commit ipynb outputs in `docs/`\n        entry: jupyter nbconvert --clear-output --ClearOutputPreprocessor.enabled=True\n        args: [\"--log-level=ERROR\"]\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v2.6.2\n    hooks:\n      - id: prettier\n        exclude: ^docs/theme/\n        language_version: system\n  - repo: local\n    hooks:\n      - id: frontend-check\n        name: biome check\n        entry: npx biome check --apply --files-ignore-unknown=true --no-errors-on-unmatched\n        language: system\n        types: [text]\n        files: \"^app\\\\/packages\\\\/(app|spotlight)\\\\/.*\\\\.(css|html|json|md|ts)$\"\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0888671875,
          "content": "app/packages/app\napp/packages/spotlight\n*.html\nvoxel51-website.js\n**/__generated__\n**/dist\n"
        },
        {
          "name": ".prettierrc.js",
          "type": "blob",
          "size": 0.361328125,
          "content": "module.exports = {\n  trailingComma: \"es5\",\n  tabWidth: 2,\n  semi: true,\n  useTabs: false,\n  singleQuote: false,\n  printWidth: 80,\n  overrides: [\n    {\n      files: \"*.md\",\n      options: {\n        printWidth: 79,\n        proseWrap: \"always\",\n        tabWidth: 4,\n      },\n    },\n    {\n      files: \"*.json\",\n      options: {\n        tabWidth: 4,\n      },\n    },\n  ],\n};\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.26953125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at info@voxel51.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.5654296875,
          "content": "# Contributing to FiftyOne\n\nFiftyOne is open source and community contributions are welcome!\n\nIf you have not already, we highly recommend browsing currently\n[active projects](https://github.com/voxel51/fiftyone/projects?type=classic) to\nget a sense of what is planned for FiftyOne. Each project is a component of\nFiftyOne that we, the maintainers, deem critical to building a world-class\necosystem for building high quality CV/ML datasets and models.\n\nDon't be intimidated by the procedures outlined below. They are not dogmatic\nand are only meant to help guide development as the project and number of\ncontributors grow.\n\n## Contribution Process\n\n### GitHub Issues\n\nThe FiftyOne contribution process generally starts with filing a\n[GitHub issue](https://github.com/voxel51/fiftyone/issues).\n\nFiftyOne defines four categories of issues: feature requests, bug reports,\ndocumentation fixes, and installation issues. Details about each issue type and\nthe issue lifecycle are discussed in our [issue policy](ISSUE_POLICY.md). Small\ntweaks such as typos or other small improvements do not need to have a\ncorresponding issue.\n\nFiftyOne maintainers [actively triage](ISSUE_TRIAGE.md) and respond to GitHub\nissues. In general, we recommend waiting for feedback from a FiftyOne\nmaintainer or community member before proceeding to implement a feature or\npatch. This is particularly important for\n[significant changes](#write-designs-for-significant-changes), and will\ntypically be labeled during triage with `needs design`.\n\n### Pull Requests\n\nAfter you have agreed upon an implementation strategy for your feature or patch\nwith a FiftyOne maintainer, the next step is to introduce your changes (see\n[developer guide](#developer-guide)) as a pull request against the FiftyOne\nrepository.\n\nSteps to make a pull request:\n\n-   Fork https://github.com/voxel51/fiftyone\n-   Implement your feature as a branch off of the `develop` branch\n-   Create a pull request into the `develop` branch of\n    https://github.com/voxel51/fiftyone\n\nThe `develop` branch contains the bleeding edge version of FiftyOne. If you are\ncontributing to an existing feature branch, then make your pull requests into\nthat branch instead. When in doubt, work against the `develop` branch.\n\nOnce your pull request has been merged, your changes will be automatically\nincluded in the next FiftyOne release!\n\n## Contribution Guidelines\n\nHere's some general guidelines for developing new features and patches for\nFiftyOne:\n\n### Write designs for significant changes\n\nFor significant changes to FiftyOne, we recommend outlining a design for the\nfeature or patch (in the GitHub issue itself) and discussing it with a FiftyOne\nmaintainer before investing heavily in implementation.\n\nDuring issue triage, we try to proactively identify issues that require design\nby labeling them with `needs design`. This is particularly important if your\nproposed implementation:\n\n-   Introduces new user-facing FiftyOne APIs\n    -   FiftyOne's API surface is carefully designed to generalize across a\n        variety of common CV/ML use cases. It is important to ensure that new\n        APIs are broadly useful to CV/ML engineers and scientists, easy to work\n        with, and simple yet powerful\n-   Adds new library dependencies to FiftyOne\n-   Makes changes to critical internal abstractions\n\n### Make changes backwards compatible\n\nFiftyOne's users rely on specific App and Core behaviors in their daily\nworkflows. As new versions of FiftyOne's are developed and released, it is\nimportant to ensure that users' workflows continue to operate as expected.\nAccordingly, please take care to consider backwards compatibility when\nintroducing changes to the FiftyOne codebase. If you are unsure of the\nbackwards compatibility implications of a particular change, feel free to ask a\nFiftyOne maintainer or community member for input.\n\n## Developer Guide\n\n### Installation\n\nTo contribute any feature to FiftyOne, you must install from source, including\nthe `-d` flag to install developer dependencies, pre-commit hooks, etc:\n\n```shell\nbash install.bash -d\n```\n\nRefer to the [main README](README.md#installing-from-source) to make sure you\nhave the necessary system packages installed on your machine.\n\nIf you are making a change to the FiftyOne App, refer to the\n[App README](app/README.md) for development instructions.\n\n### Pre-commit hooks\n\nPerforming a developer install per the above instructions will install some\n[pre-commit hooks](https://pre-commit.com/) that will automatically apply code\nformatting before allowing you to create a git commit.\n\nSee `.pre-commit-config.yaml` for the definitions of our hooks.\n\nTo manually install our pre-commit hooks, simply run:\n\n```shell\npre-commit install\n```\n\nTo manually lint a file, run the following:\n\n```shell\n# Manually run linting configured in the pre-commit hook\npre-commit run --files <file>\n```\n\nNote that the pylint component of the pre-commit hook only checks for errors.\nTo see the full output, run:\n\n```shell\npylint <file>\n```\n\n### Python API\n\nThe [FiftyOne API](https://voxel51.com/docs/fiftyone/user_guide/basics.html) is\nimplemented in Python and the source code lives in\n[fiftyone/fiftyone](https://github.com/voxel51/fiftyone/tree/develop/fiftyone).\nRefer to `setup.py` to see the Python versions that the project supports.\n\nAll Python code contributed to FiftyOne must follow our\n[style guide](STYLE_GUIDE.md#python-style-guide).\n\n### FiftyOne App\n\nThe [FiftyOne App](https://voxel51.com/docs/fiftyone/user_guide/app.html) is an\nElectron App implemented in TypeScript and the source code lives in\n[fiftyone/app](https://github.com/voxel51/fiftyone/tree/develop/app).\n\nAll App code contributed to FiftyOne must follow our\n[style guide](STYLE_GUIDE.md#app-style-guide).\n\n### Documentation\n\nThe [FiftyOne Documentation](https://fiftyone.ai) is written using\n[Sphinx](https://www.sphinx-doc.org/en/master) and\n[Sphinx-Napoleon](https://pypi.python.org/pypi/sphinxcontrib-napoleon) and the\nsource code lives in\n[fiftyone/docs](https://github.com/voxel51/fiftyone/tree/develop/docs).\n\nWhen adding a new feature to FiftyOne or changing core functionality, be sure\nto update both the docstrings in source code and the corresponding\ndocumentation in all relevant locations.\n\nAll documentation, including RST and all code samples embedded in it, must\nfollow our [style guide](STYLE_GUIDE.md#documentation-style-guide).\n\n### Tests\n\nFiftyOne has a suite of tests in\n[fiftyone/tests](https://github.com/voxel51/fiftyone/tree/develop/tests).\n\nThese tests are automatically run on any PRs into the `develop` branch, and all\ntests must pass in order for the branch to be mergeable.\n\nPlease be sure to write tests when you add new features.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.8359375,
          "content": "# Copyright 2017-2025, Voxel51, Inc.\n# voxel51.com\n#\n# Dockerfile for building an image with source FiftyOne atop a Python 3.11\n#  base image\n#\n# ARGs::\n#\n#   PIP_INDEX_URL (https://pypi.org/simple): Allow the use of caching proxies\n#   PYTHON_VERSION (3.11): The Python base image to use\n#   ROOT_DIR (/fiftyone): The name of the directory within the container that\n#       should be mounted when running\n#\n# Example usage::\n#\n#   # Build\n#   make docker\n#\n#   # Run\n#   SHARED_DIR=/path/to/shared/dir\n#   docker run \\\n#       -v ${SHARED_DIR}:/fiftyone \\\n#       -p 5151:5151 \\\n#       -it local/fiftyone\n#\n\n# The base python image to build from\nARG PYTHON_VERSION=3.11\n\n# Collect wheels for future installation\nFROM python:${PYTHON_VERSION} AS builder\nARG PIP_INDEX_URL=https://pypi.org/simple\n\nCOPY dist dist\n\nRUN pip --no-cache-dir install -q -U pip setuptools wheel \\\n    && pip wheel --wheel-dir=/wheels \\\n        dist/*.whl \\\n        ipython\n\n#\n# Other packages you might want to add to the list above:\n#   torch torchvision: Torch model training/zoo datasets\n#   tensorflow tensorflow-datasets: TF model training/zoo datasets\n#   pycocotools: COCO-style evaluation\n#   notebook>=5.3 ipywidgets>=7.5: Jupyter notebooks\n#   flash>=0.4: Lightning Flash integration\n#   apache_beam: Apache Beam integration\n#   labelbox: Labelbox integration\n#   shapely: Polyline evaluation\n#   rasterio: GeoTIFF images\n#   pydicom: DICOM images\n#\n\n\n# Create a smaller image with wheels installed\nFROM python:${PYTHON_VERSION}-slim AS final\nARG PIP_INDEX_URL=https://pypi.org/simple\n\n# The name of the shared directory in the container that should be\n# volume-mounted by users to persist data loaded into FiftyOne\nARG ROOT_DIR=/fiftyone\n\nWORKDIR /opt\n\nENV FIFTYONE_DATABASE_DIR=${ROOT_DIR}/db \\\n    FIFTYONE_DEFAULT_APP_ADDRESS='0.0.0.0' \\\n    FIFTYONE_DEFAULT_DATASET_DIR=${ROOT_DIR}/default \\\n    FIFTYONE_DATASET_ZOO_DIR=${ROOT_DIR}/zoo/datasets \\\n    FIFTYONE_MODEL_ZOO_DIR=${ROOT_DIR}/zoo/models \\\n    VIRTUAL_ENV=/opt/.fiftyone-venv\nENV PATH=\"${VIRTUAL_ENV}/bin:${PATH}\"\n\n# Update the base image and install ffmpeg\nRUN apt-get -qq -y update && apt-get -qq -y upgrade \\\n    && apt-get -qq install -y --no-install-recommends ffmpeg libcurl4 php-curl \\\n    && apt clean && rm -rf /var/lib/apt/lists/*\n\n# Create Virtual Env\nRUN python -m venv \"${VIRTUAL_ENV}\"\n\n# Install wheels from builder stage\nRUN --mount=type=cache,from=builder,target=/builder,ro \\\n    pip --no-cache-dir install -q -U pip setuptools wheel \\\n    && pip --no-cache-dir install -q --pre --no-index \\\n    --find-links=/builder/wheels \\\n    /builder/wheels/*\n\n#\n# Default, interactive, behavior\n#\n\nCMD [ \"ipython\" ]\n\n# Use this if want the default behavior to launch the App instead\n# EXPOSE 5151\n# CMD [ \\\n#     \"python\", \\\n#     \".fiftyone-venv/lib/python3.11/site-packages/fiftyone/server/main.py\", \\\n#     \"--port\", \\\n#     \"5151\" \\\n#     ]\n"
        },
        {
          "name": "ISSUE_POLICY.md",
          "type": "blob",
          "size": 4.6416015625,
          "content": "# Issue Policy\n\nThe FiftyOne Issue Policy outlines the categories of GitHub issues that we use\nand discusses the guidelines & processes associated with each type of issue.\n\nBefore filing an issue, make sure to\n[search for related issues](https://github.com/voxel51/fiftyone/issues) and\ncheck if they address yours.\n\n## Issue Categories\n\nOur policy is that GitHub issues fall into one of the following categories:\n\n1. Feature Requests\n2. Bug reports\n3. Documentation fixes\n4. Installation issues\n\nEach category has its own GitHub issue template. Please do not delete the issue\ntemplate unless you are certain your issue is outside its scope.\n\n### Feature Requests\n\n#### Guidelines\n\nFeature requests that are likely to be accepted:\n\n-   Are minimal in scope (note that it's always easier to add additional\n    functionality later than remove functionality)\n-   Are extensible (e.g. if adding an integration with an ML framework, is it\n    possible to add similar integrations with other frameworks?)\n-   Have user impact & value that justifies the maintenance burden of\n    supporting the feature moving forwards. The\n    [JQuery contributor guide](https://contribute.jquery.org/open-source/#contributing-something-new)\n    has an excellent discussion on this.\n\n#### Lifecycle\n\nFeature requests typically go through the following lifecycle:\n\n1. A feature request GitHub Issue is submitted, which contains a high-level\n   description of the proposal and its motivation. We encourage requesters to\n   provide an overview of the feature's implementation as well, if possible.\n2. The [issue is triaged](ISSUE_TRIAGE.md) to identify whether more information\n   is needed from the author, give an indication of priority, and route feature\n   requests to appropriate maintainers.\n3. The feature request is discussed with a maintainer. The maintainer will\n   provide input on the implementation overview or ask for a more detailed\n   design, if applicable.\n4. After discussion & agreement on the feature request and its implementation,\n   an implementation owner is identified.\n5. The implementation owner begins developing the feature and ultimately files\n   associated pull requests against the FiftyOne Repository or packages the\n   feature as an FiftyOne Plugin.\n\n### Bug reports\n\nBug reports typically go through the following lifecycle:\n\n1. A bug report GitHub Issue is submitted, which contains a high-level\n   description of the bug and information required to reproduce it.\n2. The [bug report is triaged](ISSUE_TRIAGE.md) to identify whether more\n   information is needed from the author, give an indication of priority, and\n   route to request appropriate maintainers.\n3. An FiftyOne maintainer reproduces the bug and provides feedback about how to\n   implement a fix.\n4. After an approach has been agreed upon, an owner for the fix is identified.\n   FiftyOne maintainers may choose to adopt ownership of severe bugs to ensure\n   a timely fix.\n5. The fix owner begins implementing the fix and ultimately files associated\n   pull requests.\n\n### Documentation fixes\n\nDocumentation issues typically go through the following lifecycle:\n\n1. A documentation GitHub Issue is submitted, which contains a description of\n   the issue and its location(s) in the FiftyOne documentation.\n2. The [issue is triaged](ISSUE_TRIAGE.md) to identify whether more information\n   is needed from the author, give an indication of priority, and route the\n   request to appropriate maintainers.\n3. An FiftyOne maintainer confirms the documentation issue and provides\n   feedback about how to implement a fix.\n4. After an approach has been agreed upon, an owner for the fix is identified.\n   FiftyOne maintainers may choose to adopt ownership of severe documentation\n   issues to ensure a timely fix.\n5. The fix owner begins implementing the fix and ultimately files associated\n   pull requests.\n\n### Installation issues\n\nInstallation issues typically go through the following lifecycle:\n\n1. An installation GitHub Issue is submitted, which contains a description of\n   the issue and the platforms its affects.\n2. The [issue is triaged](ISSUE_TRIAGE.md) to identify whether more information\n   is needed from the author, give an indication of priority, and route the\n   issue to appropriate maintainers.\n3. An FiftyOne maintainer confirms the installation issue and provides feedback\n   about how to implement a fix.\n4. After an approach has been agreed upon, an owner for the fix is identified.\n   FiftyOne maintainers may choose to adopt ownership of severe installation\n   issues to ensure a timely fix. FiftyOne maintainers may choose to adopt\n   ownership of severe installation\n5. The fix owner begins implementing the fix and ultimately files associated\n   pull requests.\n"
        },
        {
          "name": "ISSUE_TRIAGE.md",
          "type": "blob",
          "size": 2.443359375,
          "content": "# Issue Triage\n\nThis document is a hands-on manual for doing issue and pull request triage for\n[FiftyOne issues on GitHub](https://github.com/voxel51/fiftyone/issues). The\npurpose of triage is to speed up issue management and get community members\nfaster responses.\n\nIssue and pull request triage has three steps:\n\n1. assign one or more process labels (e.g. `needs design` or `help wanted`),\n2. mark a priority\n3. label one or more relevant areas, (e.g. `app`, `core`, or `server`).\n\nThe remainder of the document describes the labels used in each of these steps\nand how to apply them.\n\n## Assign appropriate process labels\n\nAssign at least one process label to every issue you triage.\n\n-   `needs design`: This feature is large or tricky enough that we think it\n    warrants a design doc and review before someone begins implementation.\n-   `help wanted`: We would like community help for this issue.\n-   `good first issue`: This would make a good first issue.\n\n## Assign priority\n\nYou should assign a priority to each issue you triage.\n\n-   `critical`: This is the highest priority and should be worked on by\n    somebody right now. This should typically be reserved for things like\n    security bugs, regressions, release blockers.\n-   `high-priority`: The issue is worked on by the community currently or will\n    be very soon, ideally in time for the next release.\n-   `low-priority`: Important over the long term, but may not be staffed or may\n    need multiple releases to complete. Also used for things we know are on a\n    contributor's roadmap in the next few months.\n-   `backlog`: We believe it is useful but don’t see it being prioritized in\n    the next few months. Use this for issues that are lower priority than\n    `low-priority`.\n-   `awaiting-more-evidence`: Lowest priority. Possibly useful, but not yet\n    enough support to actually get it done. This is a good place to put issues\n    that could be useful but require more evidence to demonstrate broad value.\n    Don’t use it as a way to say no. If we think it doesn’t fit in FiftyOne, we\n    should just say that and why.\n\n## Label relevant areas\n\nAssign one more labels for relevant areas. As a principle, we aim to have the\nminimal set of labels needed to help route issues and PRs to appropriate\ncontributors.\n\n### Areas\n\n-   App: FiftyOne application changes\n-   Build: Build and test infrastructure changes\n-   Core: Core `fiftyone` Python library changes\n-   Documentation: FiftyOne documentation changes\n-   Other\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0830078125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2017-2022, Voxel51, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2626953125,
          "content": "global-include *\nglobal-exclude *.py[cod]\n\nprune .*\nprune app\nprune e2e\nprune e2e-pw\nprune eta\nprune package\nprune requirements\nprune tools\nprune tests\nprune dist\n\nglobal-exclude .*\n\nrecursive-exclude fiftyone *.md\n\nrecursive-exclude docs *\nrecursive-include docs *.py\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3115234375,
          "content": ".PHONY: app python docker docker-export\n\n.DEFAULT_GOAL := docker-export\n\napp:\n\t@cd app && yarn && yarn build && cd ..\n\nclean:\n\t@rm -rf ./dist/*\n\npython: app clean\n\t@python -Im build\n\ndocker: python\n\t@docker build -t local/fiftyone .\n\ndocker-export: docker\n\t@docker save voxel51/fiftyone:latest | gzip > fiftyone.tar.gz\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 21.212890625,
          "content": "<div align=\"center\">\n<p align=\"center\">\n\n<!-- prettier-ignore -->\n<img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"55px\"> &nbsp;\n<img src=\"https://user-images.githubusercontent.com/25985824/106288518-24bb7680-6216-11eb-8f10-60052c519586.png\" height=\"50px\">\n\n**The open-source tool for building high-quality datasets and computer vision\nmodels**\n\n---\n\n<!-- prettier-ignore -->\n<a href=\"https://voxel51.com/fiftyone\">Website</a> •\n<a href=\"https://voxel51.com/docs/fiftyone\">Docs</a> •\n<a href=\"https://colab.research.google.com/github/voxel51/fiftyone-examples/blob/master/examples/quickstart.ipynb\">Try it Now</a> •\n<a href=\"https://voxel51.com/docs/fiftyone/tutorials/index.html\">Tutorials</a> •\n<a href=\"https://github.com/voxel51/fiftyone-examples\">Examples</a> •\n<a href=\"https://voxel51.com/blog/\">Blog</a> •\n<a href=\"https://slack.voxel51.com\">Community</a>\n\n[![PyPI python](https://img.shields.io/pypi/pyversions/fiftyone)](https://pypi.org/project/fiftyone)\n[![PyPI version](https://badge.fury.io/py/fiftyone.svg)](https://pypi.org/project/fiftyone)\n[![Downloads](https://static.pepy.tech/badge/fiftyone)](https://pepy.tech/project/fiftyone)\n[![Docker Pulls](https://badgen.net/docker/pulls/voxel51/fiftyone?icon=docker&label=pulls)](https://hub.docker.com/r/voxel51/fiftyone/)\n[![Build](https://github.com/voxel51/fiftyone/workflows/Build/badge.svg?branch=develop&event=push)](https://github.com/voxel51/fiftyone/actions?query=workflow%3ABuild)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](LICENSE)\n[![Discord](https://img.shields.io/badge/Discord-7289DA?logo=discord&logoColor=white)](https://discord.gg/fiftyone-community)\n[![Slack](https://img.shields.io/badge/Slack-4A154B?logo=slack&logoColor=white)](https://slack.voxel51.com)\n[![Medium](https://img.shields.io/badge/Medium-12100E?logo=medium&logoColor=white)](https://medium.com/voxel51)\n[![Mailing list](http://bit.ly/2Md9rxM)](https://share.hsforms.com/1zpJ60ggaQtOoVeBqIZdaaA2ykyk)\n[![Twitter](https://img.shields.io/twitter/follow/Voxel51?style=social)](https://twitter.com/voxel51)\n\n</p>\n</div>\n\n# 👋 hey there!\n\nWe created an open-source tool that supercharges your computer vision and\nmachine learning workflows by enabling you to visualize datasets, analyze\nmodels, and improve data quality more efficiently than ever before. Embark with\nus in this adventure 🤝. **[FiftyOne](https://fiftyone.ai)**.\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> **installation** 💻\n\nAs simple as:\n\n```shell\npip install fiftyone\n```\n\n<details>\n<summary>More details here</summary>\n\n**FiftyOne** supports Python 3.9 - 3.11. See the\n[prerequisites section](#-prerequisites) for system specific information. We\nprovide two ways for being installed. The first one is through PyPI, and the\nsecond is through a local installation. PyPI is the straight forward\ninstallation method if you are not looking for any changes in the source code,\nif you want to make changes to the source code, then a local installation is\nrecommended.\n\nWe strongly recommend that you install FiftyOne in a\n[virtual environment](https://voxel51.com/docs/fiftyone/getting_started/virtualenv.html)\nto maintain a clean workspace. The [prerequisites section](#-prerequisites)\nalso contains instructions for creating system specific virtual environments.\n\nInstalling the library from PyPI with `pip` is the easiest way to get started\nwith fiftyone. You can install the latest stable version of `fiftyone` via\n`pip`:\n\nConsult the\n[installation guide](https://voxel51.com/docs/fiftyone/getting_started/install.html)\nfor troubleshooting and other information about getting up-and-running with\nFiftyOne.\n\n</details>\n\n<details>\n<summary>Install from source</summary>\n\nTo install from source, you need to clone the repository and install the\nlibrary using `pip` with editable mode enabled. The instructions below are for\nmacOS and Linux systems. Windows users may need to make adjustments. If you are\nworking in Google Colab, [skip to here](#source-installs-in-google-colab).\n\nFirst, clone the repository:\n\n```shell\ngit clone https://github.com/voxel51/fiftyone\ncd fiftyone\n```\n\nThen run the install script:\n\n```shell\n# Mac or Linux\nbash install.bash\n\n# Windows\n.\\install.bat\n```\n\n**NOTE:** If you run into issues importing FiftyOne, you may need to add the\npath to the cloned repository to your `PYTHONPATH`:\n\n```shell\nexport PYTHONPATH=$PYTHONPATH:/path/to/fiftyone\n```\n\n**NOTE:** The install script adds to your `nvm` settings in your `~/.bashrc` or\n`~/.bash_profile`, which is needed for installing and building the App\n\n**NOTE:** When you pull in new changes to the App, you will need to rebuild it,\nwhich you can do either by rerunning the install script or just running\n`yarn build` in the `./app` directory.\n\n### Upgrading your source installation\n\nTo upgrade an existing source installation to the bleeding edge, simply pull\nthe latest `develop` branch and rerun the install script:\n\n```shell\ngit checkout develop\ngit pull\nbash install.bash\n```\n\n### Developer installation\n\nIf you would like to\n[contribute to FiftyOne](https://github.com/voxel51/fiftyone/blob/develop/CONTRIBUTING.md),\nyou should perform a developer installation using the `-d` flag of the install\nscript:\n\n```shell\n# Mac or Linux\nbash install.bash -d\n\n# Windows\n.\\install.bat -d\n```\n\nAlthough not required, developers typically prefer to configure their FiftyOne\ninstallation to connect to a self-installed and managed instance of MongoDB,\nwhich you can do by following\n[these simple steps](https://docs.voxel51.com/user_guide/config.html#configuring-a-mongodb-connection).\n\n### Source installs in Google Colab\n\nYou can install from source in\n[Google Colab](https://colab.research.google.com) by running the following in a\ncell and then **restarting the runtime**:\n\n```shell\n%%shell\n\ngit clone --depth 1 https://github.com/voxel51/fiftyone.git\ncd fiftyone\n\n# Mac or Linux\nbash install.bash\n\n# Windows\n.\\install.bat\n```\n\n### Generating documentation\n\nSee the\n[docs guide](https://github.com/voxel51/fiftyone/blob/develop/docs/README.md)\nfor information on building and contributing to the documentation.\n\n### Uninstallation\n\nYou can uninstall FiftyOne as follows:\n\n```shell\npip uninstall fiftyone fiftyone-brain fiftyone-db\n```\n\n</details>\n\n<div id='-prerequisites'/>\n\n<details>\n<summary>Prerequisites for beginners</summary>\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> prerequisites for beginners 🧸\n\n**FiftyOne** supports Python 3.9 - 3.11. To get started, select the guide for\nyour operating system or environment, if you are an experienced developer you\ncan skip this section. If you are looking for scaling solution to be installed\nin Cloud Enterprise Systems, please take a look of **FiftyOne Teams**\n[here](https://voxel51.com/book-a-demo/)\n\n<details>\n<summary>Windows</summary>\n\n<div id='-prerequisites_windows'/>\n\n### 1. Install Python and Git\n\n#### 1.1 Install Python\n\n**Note:** ⚠️ The version of Python that is available in the Microsoft Store is\n**not recommended**.\n\nDownload a Python installer from\n[python.org](https://www.python.org/downloads/). Choose Python **3.9**,\n**3.10**, or **3.11** and make sure to pick a **64-bit** version. For example,\nthis\n[Python 3.10.11 installer](https://www.python.org/ftp/python/3.10.11/python-3.10.11-amd64.exe).\nDouble-click on the installer to run it, and follow the steps in the installer.\n\n-   **Check the box to add Python to your PATH**, and to install py.\n-   At the end of the installer, there is an option to **disable the PATH\n    length limit**. It is recommended to click this.\n\n#### 1.2 Install Git\n\nDownload Git from [this link](https://git-scm.com/download/win). Double-click\non the installer to run it, and follow the steps in the installer.\n\n### 2. Install Microsoft Visual C++ Redistributable and FFmpeg (Optional)\n\nDownload\n[Microsoft Visual C++ Redistributable](https://learn.microsoft.com/en-us/cpp/windows/latest-supported-vc-redist).\nDouble-click on the installer to run it, and follow the steps in the installer.\n\n#### Install FFmpeg\n\nDownload FFmpeg binary from [here](https://ffmpeg.org/download.html). Set\nFFmpeg's path (e.g., C:\\ffmpeg\\bin) to the PATH environmental variable on\nWindows.\n\n### 3. Create a Virtual Environment\n\n-   Press `Win + R`. type `cmd`, and press `Enter`. Alternatively, search\n    **Command Prompt** in the Start Menu.\n-   Navigate to your project. ` cd C:\\path\\to\\your\\project`\n-   Create the environment `python -m venv fiftyone_env`\n-   Activate the environment typing this in the command line window\n    `fiftyone_env\\Scripts\\activate`\n-   After activation, your command prompt should change and show the name of\n    the virtual environment `(fiftyon_env) C:\\path\\to\\your\\project`\n-   Now you are ready to install **FiftyOne**. Full instructions can be found\n    [here](#-installation).\n-   Once you want to deactivate your environment, just type `deactivate`\n\n</details>\n\n<details>\n<summary>Linux</summary>\n\n<div id='-prerequisites_linux'/>\n\n### 1. Install Python and Git\n\nYou may need to install some additional libraries on Ubuntu Linux. These steps\nwork on a clean install of Ubuntu Desktop 24.04, and should also work on Ubuntu\n24.04 and 22.04, and on Ubuntu Server.\n\n```shell\nsudo apt-get update\nsudo apt-get upgrade\nsudo apt-get install python3-venv build-essential python3-dev git-all libgl1-mesa-dev ffmpeg\n```\n\n-   On Linux, you will need at least the `openssl` and `libcurl` packages.\n-   On Debian-based distributions, you will need to install `libcurl4`\n    or`libcurl3` instead of `libcurl`, depending on the age of your\n    distribution.\n\n    For example:\n\n```shell\n# Ubuntu\nsudo apt install libcurl4 openssl\n\n# Fedora\nsudo dnf install libcurl openssl\n```\n\n### 2. Create and activate the Virtual Environment\n\n```shell\npython3 -m venv fiftyone_env\nsource fiftyone_env/bin/activate\n```\n\nNow you are ready to install **FiftyOne**. Full instructions can be found\n[here](#-installation)\n\n</details>\n\n<details>\n<summary>MacOS</summary>\n\n<div id='-prerequisites_macos'/>\n\n### 1. Install Xcode Command Line Tools\n\n```shell\nxcode-select --install\n```\n\n### 2. Install Homebrew\n\n```shell\n/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n```\n\nAfter you install it, follow the instructions from the Homebrew installation to\nset it up.\n\n### 3. Install Python and dependencies\n\n```shell\nbrew install python@3.9\nbrew install protobuf\n\n# optional but recommendeded for full video dataset support\nbrew install ffmpeg\n```\n\n### 4. Create and activate the Virtual Environment\n\n```shell\npython3 -m venv fiftyone_env\nsource fiftyone_env/bin/activate\n```\n\nNow you are ready to install **FiftyOne**. Full instructions can be found\n[here](#-installation).\n\n</details>\n\n<details>\n<summary>Docker</summary>\n\n<div id='-prerequisites_docker'/>\n\nRefer to\n[these instructions](https://voxel51.com/docs/fiftyone/environments/index.html#docker)\nto see how to build and run Docker images containing source or release builds\nof FiftyOne.\n\n</details>\n\n<div align=\"center\">\n<p align=\"center\">\n\n| [Windows](#-prerequisites_windows) | [Linux](#-prerequisites_linux) | [macOS](#-prerequisites_macos) | [Docker](#-prerequisites_docker) |\n| ---------------------------------- | ------------------------------ | ------------------------------ | -------------------------------- |\n\n</p>\n</div>\n\n**Important Notes:** Remember, you will need...\n\n-   [Python](https://www.python.org) (3.9 - 3.11)\n-   [Node.js](https://nodejs.org) - on Linux, we recommend using\n    [nvm](https://github.com/nvm-sh/nvm) to install an up-to-date version.\n-   [Yarn](https://yarnpkg.com) - once Node.js is installed, you can\n    [enable Yarn](https://yarnpkg.com/getting-started/install) via\n    `corepack enable`\n\n</details>\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> **quickstart** 🚀\n\nDive right into FiftyOne by opening a Python shell and running the snippet\nbelow, which downloads a\n[small dataset](https://voxel51.com/docs/fiftyone/user_guide/dataset_zoo/datasets.html#quickstart)\nand launches the\n[FiftyOne App](https://voxel51.com/docs/fiftyone/user_guide/app.html) so you\ncan explore it:\n\n```py\nimport fiftyone as fo\nimport fiftyone.zoo as foz\n\ndataset = foz.load_zoo_dataset(\"quickstart\")\nsession = fo.launch_app(dataset)\n```\n\nThen check out\n[this Colab notebook](https://colab.research.google.com/github/voxel51/fiftyone-examples/blob/master/examples/quickstart.ipynb)\nto see some common workflows on the quickstart dataset.\n\nNote that if you are running the above code in a script, you must include\n`session.wait()` to block execution until you close the App. See\n[this page](https://voxel51.com/docs/fiftyone/user_guide/app.html#creating-a-session)\nfor more information.\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> **key features** 🔑\n\n-   **[Visualize Complex Datasets:](https://docs.voxel51.com/user_guide/app.html)**\n    Easily explore images, videos, and associated labels in a powerful visual\n    interface.\n\nhttps://github.com/user-attachments/assets/af8cd626-57b7-4f2a-96bf-1c8a513c2e2b\n\n-   **[Explore Embeddings:](https://docs.voxel51.com/user_guide/app.html#embeddings-panel)**\n    Select points of interest and view the corresponding samples/labels.\n\nhttps://github.com/user-attachments/assets/d119de24-fc44-40bc-83ff-ddfdd4329977\n\n-   **[Analyze and Improve Models:](https://docs.voxel51.com/user_guide/evaluation.html)**\n    Evaluate model performance, identify failure modes, and fine-tune your\n    models.\n\nhttps://github.com/user-attachments/assets/fc06d33d-8d17-4f67-af26-8c1a5abb5d9d\n\n-   **[Advanced Data Curation:](https://docs.voxel51.com/brain.html)** Quickly\n    find and fix data issues, annotation errors, and edge cases.\n\nhttps://github.com/user-attachments/assets/8c4ff038-8926-4a42-b829-4f43bc2d8d6a\n\nhttps://github.com/user-attachments/assets/da97d84d-1213-40cf-a501-7a0d7efbe426\n\n-   **[Rich Integration:](https://docs.voxel51.com/integrations/index.html)**\n    Works with popular deep learning libraries like TensorFlow, PyTorch, Keras,\n    and more.\n\nhttps://github.com/user-attachments/assets/670a684a-0f6c-49cc-8f51-fbe15530c5e3\n\n-   **[Open and Extensible](https://docs.voxel51.com/plugins/index.html)**\n    Customize and extend FiftyOne to fit your specific needs.\n\nhttps://github.com/user-attachments/assets/dd91272d-2808-4373-90c5-5e906a0b80f1\n\n<div align=\"center\">\n<p align=\"center\">\n\n### <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> additional resources 🚁\n\n| [fiftyone-teams](#-teams) | [VoxelGPT](https://github.com/voxel51/voxelgpt) | [Plugins](https://voxel51.com/plugins/) | [Vector Search](https://voxel51.com/blog/the-computer-vision-interface-for-vector-search/) | [Dataset Zoo](https://docs.voxel51.com/dataset_zoo/index.html) | [Model Zoo](https://docs.voxel51.com/model_zoo/index.html) | [FiftyOne Brain](https://docs.voxel51.com/brain.html) |\n| ------------------------- | ----------------------------------------------- | --------------------------------------- | ------------------------------------------------------------------------------------------ | -------------------------------------------------------------- | ---------------------------------------------------------- | ----------------------------------------------------- |\n\n</p>\n</div>\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n<div id='-documentation'/>\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> documentation 🪪\n\nFull documentation for FiftyOne is available at\n[fiftyone.ai](https://fiftyone.ai). In particular, see these resources:\n\n<div align=\"center\">\n<p align=\"center\">\n\n| [Tutorials](https://voxel51.com/docs/fiftyone/tutorials/index.html) | [Recipes](https://voxel51.com/docs/fiftyone/recipes/index.html) | [Examples](https://github.com/voxel51/fiftyone-examples) | [User Guide](https://voxel51.com/docs/fiftyone/user_guide/index.html) | [CLI Documentation](https://voxel51.com/docs/fiftyone/cli/index.html) | [API Reference](https://voxel51.com/docs/fiftyone/api/fiftyone.html) |\n| ------------------------------------------------------------------- | --------------------------------------------------------------- | -------------------------------------------------------- | --------------------------------------------------------------------- | --------------------------------------------------------------------- | -------------------------------------------------------------------- |\n\n</p>\n</div>\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n<div id='-teams'/>\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> FiftyOne Teams 🏎️\n\nDo you need to securely collaborate on datasets with millions of samples in the\ncloud and leverage built-in workflow automations? Check out\n[FiftyOne Teams](https://github.com/voxel51/fiftyone-teams).\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> faq & troubleshooting ⛓️‍💥\n\n[This page](https://docs.voxel51.com/getting_started/troubleshooting.html)\nlists common issues encountered when installing FiftyOne and possible\nsolutions. If you encounter an issue that this page doesn’t help you resolve,\nfeel free to\n[open an issue on GitHub](https://github.com/voxel51/fiftyone/issues) or\ncontact us on [Slack](https://slack.voxel51.com/) or\n[Discord](https://discord.gg/fiftyone-community).\n\n[FAQ](https://docs.voxel51.com/faq/index.html): Maybe you are facing a\nsituation already solved, take a look of the frequently asked questions.\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n<div id='-contributing'/>\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> contributing to FiftyOne 🧡\n\nFiftyOne and [FiftyOne Brain](https://github.com/voxel51/fiftyone-brain) are\nopen source and community contributions are welcome!\n\nCheck out the\n[contribution guide](https://github.com/voxel51/fiftyone/blob/develop/CONTRIBUTING.md)\nto learn how to get involved.\n\n<div align=\"center\">\n<p align=\"center\">\n\n### 🤝 **Join Our Community** 🤝\n\nConnect with us through your preferred channels:\n\n[![Discord](https://img.shields.io/badge/Discord-7289DA?logo=discord&logoColor=white)](https://discord.gg/fiftyone-community)\n[![Slack](https://img.shields.io/badge/Slack-4A154B?logo=slack&logoColor=white)](https://slack.voxel51.com)\n[![Medium](https://img.shields.io/badge/Medium-12100E?logo=medium&logoColor=white)](https://medium.com/voxel51)\n[![Twitter](https://img.shields.io/badge/Twitter-1DA1F2?logo=twitter&logoColor=white)](https://twitter.com/voxel51)\n[![LinkedIn](https://img.shields.io/badge/LinkedIn-0077B5?logo=linkedin&logoColor=white)](https://www.linkedin.com/company/voxel51)\n[![Facebook](https://img.shields.io/badge/Facebook-1877F2?logo=facebook&logoColor=white)](https://www.facebook.com/voxel51)\n\n**Share your workflow improvements on social media and tag us @Voxel51 and\n#FiftyOne!**.\n\n🎊 You will be in our rewarded list. 🎊\n\n</p>\n</div>\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n<div id='-contributors'/>\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> contributors 🤓\n\nSpecial thanks to these amazing people for contributing to FiftyOne! 🙌\n\n<a href=\"https://github.com/voxel51/fiftyone/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=voxel51/fiftyone\" />\n</a>\n\n![------------------------------------------------------------------](https://github.com/user-attachments/assets/fb0573d0-bb56-40ff-9ae1-a5e8f62f5f42)\n\n<div id='-citation'/>\n\n## <img src=\"https://user-images.githubusercontent.com/25985824/106288517-2422e000-6216-11eb-871d-26ad2e7b1e59.png\" height=\"20px\"> citation 📖\n\nIf you use FiftyOne in your research, feel free to cite the project (but only\nif you love it 😊):\n\n```bibtex\n@article{moore2020fiftyone,\n  title={FiftyOne},\n  author={Moore, B. E. and Corso, J. J.},\n  journal={GitHub. Note: https://github.com/voxel51/fiftyone},\n  year={2020}\n}\n```\n"
        },
        {
          "name": "STYLE_GUIDE.md",
          "type": "blob",
          "size": 14.3046875,
          "content": "# FiftyOne Style Guide\n\nThis document contains our style guides for the primary languages used by\nFiftyOne.\n\nOur priority is _consistency_, so that developers can quickly ingest and\nunderstand the entire codebase without being distracted by style\nidiosyncrasies.\n\n> When in doubt, follow the existing style in the files you're contributing to.\n\n## Python Style Guide\n\nOur Python style is derived from\n[Google Python style](https://google.github.io/styleguide/pyguide.html), with\nthe exception that we do not use type annotations.\n\n### Pre-commit hooks\n\nAll Python code is formatted with [black](https://github.com/python/black) and\n[pylint](https://github.com/PyCQA/pylint) via\n[pre-commit hooks](CONTRIBUTING.md#developer-guide), which automatically\nenforces much of the whitespace-related components of our style.\n\n### Highlights\n\nHere are some highlights of our Python style:\n\n-   Maximum line length is **79 characters**, with the exception of long URLs\n    that cannot be split\n\n-   Indent your code with **4 spaces**. That is, **no tabs**!\n\n-   Always strip all trailing whitespace from lines that you edit (you can\n    configure your text editor to do this automatically)\n\n-   Follow standard typographic rules for spaces around punctuation\n\n-   Leave two blank lines between top-level definitions, and one blank line\n    between class method definitions\n\n-   Imports should always be on separate lines at the top of the file, just\n    after the module docstring. Imports should be grouped by type with one\n    space between each group, sorted alphabetically within each group, with the\n    groups sorted in order of most generic (standard library) to least generic\n    (local modules)\n\n-   Names should follow the conventions:\n\n```py\nmodule_name, package_name, ClassName, method_name, ExceptionName,\nfunction_name, GLOBAL_CONSTANT_NAME, global_var_name, instance_var_name,\nfunction_parameter_name, local_var_name\n```\n\n-   All private variables, constants, functions, methods, and classes should\n    have `_` prepended\n\n-   All non-trivial public module/class methods should have docstrings\n    describing their behavior, inputs, outputs, and exceptions (when\n    applicable)\n\n-   If a class inherits from no other base classes, explicitly inherit from\n    `object`\n\n-   When encountering a pylint error during a commit that cannot be addressed\n    for whatever reason, add an inline comment `# pylint: disable=rule` where\n    `rule` is the rule in question\n\n-   Use `@todo` to mark todo items in the source code when appropriate\n\n### Imports\n\nImports should always be on separate lines at the top of the file, immediately\nbelow the module docstring. Imports should be grouped by type with one space\nbetween each group, with the groups sorted in order of most generic to least\ngeneric:\n\n-   Standard library imports (most generic)\n-   Third-party package dependencies\n-   Voxel51-authored non-FiftyOne package dependencies\n-   FiftyOne modules (least generic)\n\nFor core FiftyOne imports, we import modules as `fox`, where `x` is the first\nletter of the module imported. If necessary, we use `foxy` to disambiguate\nbetween two modules that start with the same letter.\n\nWithin each import group, imports should be sorted alphabetically by full\npackage path, ignoring `from` and `import`.\n\nWe also allow direct importing of (a small number of) names into the local\nnamespace at the developer's discretion.\n\nFor example, an import block might look like this:\n\n```py\n\"\"\"\nModule docstring.\n\n| Copyright 2017-2025, Voxel51, Inc.\n| `voxel51.com <https://voxel51.com/>`_\n|\n\"\"\"\nimport os\nimport sys\n\nimport cv2\nimport numpy as np\n\nimport eta.core.image as etai\nimport eta.core.video as etav\n\nimport fiftyone as fo\nfrom fiftyone.core.document import Document\nimport fiftyone.core.labels as fol\nimport fiftyone.core.media as fom\nimport fiftyone.core.metadata as fome\nimport fiftyone.utils.image as foui\nimport fiftyone.utils.image as fouv\n```\n\n### Docstrings\n\nOur docstring style is derived from\n[Google Python style](https://google.github.io/styleguide/pyguide.html#38-comments-and-docstrings),\nwith the exception that we do not use type annotations.\n\nNote that the docstrings of all public methods and classes are automatically\nincluded in the [documentation](docs/README.md) via\n[Sphinx](https://www.sphinx-doc.org/en/master) and\n[Sphinx-Napoleon](https://pypi.python.org/pypi/sphinxcontrib-napoleon), so\ndocstrings should use Sphinx constructs to link to relevant classes, functions,\nand docs sections as appropriate:\n\n```py\ndef example_function(foo, hello=\"world\"):\n    \"\"\"An example docstring that uses Sphinx constructs.\n\n    Docs sections can be referenced via :ref:`custom text here <anchor-link>`.\n\n    Classes can be referenced via\n    :class:`fiftyone.core.expressions.ViewExpression` or\n    :class:`ViewExpression <fiftyone.core.expressions.ViewExpression>`.\n\n    Functions can be referenced via\n    :func:`fiftyone.core.datasets.list_datasets` or\n    :func:`list_datasets() <fiftyone.core.datasets.list_datasets>`.\n\n    .. note::\n\n        Directives like notes can be used.\n\n    Examples::\n\n        # Example code is encouraged!\n\n        import fiftyone as fo\n        import fiftyone.zoo as foz\n\n        dataset = foz.load_zoo_dataset(\"quickstart\")\n        session = fo.launch_app(dataset)\n\n    Args:\n        foo: a required parameter\n        hello (\"world\"): a parameter with a default value\n\n    Returns:\n        some cool stuff\n    \"\"\"\n    pass\n```\n\nRemember to [build the docs locally](docs/README.md) and verify that any\ndocstrings that you're unsure about are properly rendered in the docs.\n\n#### Module docstrings\n\nAll modules should begin with a docstring that includes a short (usually one\nline) description and a copyright block formatted exactly as shown below:\n\n```py\n\"\"\"\nShort module description here (generally one sentence max).\n\nA longer section can also be added here as appropriate.\n\n| Copyright 2017-2025, Voxel51, Inc.\n| `voxel51.com <https://voxel51.com/>`_\n|\n\"\"\"\n```\n\n#### Function docstrings\n\nAll non-trivial public functions should have docstrings following the pattern\nshown below.\n\nEach section can be omitted if there are no inputs, outputs, or no notable\nexceptions raised, respectively.\n\n```py\ndef to_polyline(detection, tolerance=2, filled=True):\n    \"\"\"Returns a :class:`fiftyone.core.labels.Polyline` representation of the\n    :class:`fiftyone.core.labels.Detection`.\n\n    If the detection has a mask, the returned polyline will trace the\n    boundary of the mask; otherwise, the polyline will trace the bounding\n    box itself.\n\n    Args:\n        detection: a :class:`fiftyone.core.labels.Detection`\n        tolerance (2): a tolerance, in pixels, when generating an\n            approximate polyline for the instance mask. Typical values are\n            1-3 pixels\n        filled (True): whether the polyline should be filled\n\n    Returns:\n        a :class:`fiftyone.core.labels.Polyline`\n\n    Raises:\n        ValueError: if the detection's bounding box has negative area\n    \"\"\"\n    pass\n```\n\n#### Class docstrings\n\nAll non-trivial public classes should have class docstrings following the\npattern shown below.\n\nNote that the parameters of the `__init__()` method are documented in the class\ndocstring itself:\n\n```py\nclass Classification(object):\n    \"\"\"A classification label.\n\n    Args:\n        label: the label string\n        confidence (None): a confidence in ``[0, 1]`` for the classification\n    \"\"\"\n\n    def __init__(self, label, confidence=None):\n        pass\n```\n\n### Logging\n\nFiftyOne uses the standard Python `logging` module to log messages using the\nconventions below:\n\n```py\nimport logging\n\n# Use this pattern to retrieve a logger for the current module\nlogger = logging.getLogger(__name__)\n\nlogger.debug(...)\nlogger.info(...)\nlogger.warning(...)\n\n# Use native exceptions rather than `logger.error()` or `logger.critical()`\nraise Exception(...)\n```\n\nYou can also use the `warnings` package if you want to issue a warning inside a\nloop but want to avoid spamming the user's logs/stdout:\n\n```py\nimport warnings\n\nfor _ in range(100):\n    msg = \"This warning should only be printed once\"\n    warnings.warn(msg)\n```\n\n### Customizing black\n\nYou don't customize [black](https://github.com/python/black), silly! From the\ndocs:\n\n> Pro-tip: If you’re asking yourself “Do I need to configure anything?” the\n> answer is “No”. Black is all about sensible defaults.\n\nWith that said, we do maintain a limited configuration in the `[tool.black]`\nsection of `pyproject.toml`.\n\n### Customizing pylint\n\nTo permanently disable a pylint message, add it to the `disable` field in the\n`pylintrc` file:\n\n```shell\n[MESSAGES CONTROL]\ndisable=too-few-public-methods,too-many-arguments\n```\n\nTo disable a pylint message for the rest of the current block (indentation\nlevel) in a module, add the comment:\n\n```py\n# pylint: disable=too-many-instance-attributes\n```\n\nTo disable a pylint message for the current line:\n\n```py\nfrom builtins import *  # pylint disable=wildcard-import\n```\n\nTo disable pylint errors temporarily in a module:\n\n```py\n# pragma pylint: disable=redefined-builtin\n# pragma pylint: enable=wildcard-import\nfrom builtins import *\n# pragma pylint: enable=redefined-builtin\n# pragma pylint: enable=wildcard-import\n```\n\nSee the [pylint user guide](https://pylint.readthedocs.io/en/latest/) for more\ninformation.\n\n## App Style Guide\n\n[The App](https://github.com/voxel51/fiftyone/tree/develop/app) is a TypeScript\nmonorepo in which the main package is a React 18 application.\n\nComprehensive Style guide forthcoming.\n\n### ESLint\n\nWe are introducing [ESLint](https://eslint.org/docs/latest/about/) to enforce\nlinting rules. Since this is a rather late introduction, we're using the\n[only-warn](https://www.npmjs.com/package/eslint-plugin-only-warn) plugin to\nrender all errors as warnings until we gracefully address all warnings in small\nchunks, after which this plugin will be removed and rules will be enforced with\nhigher strictness.\n\nSee `app/.eslintrc.js` for our ESLint config, and refer to\n[this page](https://eslint.org/docs/latest/user-guide/configuring/) for\nconfiguration options.\n\n### Pre-commit hooks\n\nTypeScript and CSS files in FiftyOne are formatted with\n[prettier](https://prettier.io) via\n[pre-commit hooks](CONTRIBUTING.md#developer-guide), which automatically\nenforces much of the whitespace-related components of our style.\n\nSee `.prettierrc.js` for our prettier configuration, and refer to\n[this page](https://prettier.io/docs/en/configuration.html) for configuration\noptions.\n\n## Documentation Style Guide\n\nThe [FiftyOne Documentation](https://fiftyone.ai) is written primarily in\nreStructuredText (RST) files and rendered via\n[Sphinx](https://www.sphinx-doc.org/en/master) and\n[Sphinx-Napoleon](https://pypi.python.org/pypi/sphinxcontrib-napoleon).\n\nNote that the docstrings of all public methods and classes in the Python code\nare automatically included in the documentation. See\n[this section](#docstrings) for more information about writing Sphinx-friendly\ndocstrings.\n\n### Pre-commit hooks\n\nRST files in FiftyOne are formatted with [prettier](https://prettier.io) via\n[pre-commit hooks](CONTRIBUTING.md#developer-guide), which automatically\nenforces much of the whitespace-related components of our style.\n\nSee `.prettierrc` for our prettier configuration, and refer to\n[this page](https://prettier.io/docs/en/configuration.html) for configuration\noptions.\n\n### Highlights\n\nHere are some highlights of our RST style:\n\n-   Maximum line length is **79 characters**, with the exception of long URLs\n    that cannot be split\n\n-   Leave exactly one blank line before and after all of the following:\n\n    -   Paragraphs\n    -   Code blocks\n    -   Section and subsection headings\n\n-   One blank line at the end of the file\n\n-   Indent 4 spaces when writing multiline list items, tabs, groups, code\n    blocks, etc.\n\n-   Always strip all trailing whitespace from lines that you edit (you can\n    configure your text editor to do this automatically)\n\n-   Follow standard typographic rules for spaces around punctuation\n\n-   Add anchor links for any sections that you link to from other pages, so\n    that section titles can be changed later if desired:\n\n```\n.. _view-stages:\n\nView stages\n___________\n\nDataset views encapsulate a pipeline of logical operations that determine which\nsamples appear in the view (and perhaps what subset of their contents).\n```\n\n-   **Never edit** an anchor link itself once it is created, as this may break\n    an external link (e.g., blog post, presentation, etc.)\n\n### Building the docs locally\n\nAlways [build the docs locally](docs/README.md) to verify that your edits\nrender correctly before committing your changes.\n\n## Markdown Style Guide\n\nMarkdown files in FiftyOne should be written in\n[GitHub-flavored Markdown](https://github.github.com/gfm).\n\n### Pre-commit hooks\n\nMarkdown files in FiftyOne are formatted with [prettier](https://prettier.io)\nvia [pre-commit hooks](CONTRIBUTING.md#developer-guide), which automatically\nenforces much of the whitespace-related components of our style.\n\nSee `.prettierrc` for our prettier configuration, and refer to\n[this page](https://prettier.io/docs/en/configuration.html) for configuration\noptions.\n\n### Highlights\n\nHere are some highlights of our Markdown style:\n\n-   Maximum line length is **79 characters**, with the exception of long URLs\n    that cannot be split\n\n-   All Markdown files start with a title with `# Uppercase Title Words` syntax\n\n-   Section headings use `## Capital then lowercase` syntax\n\n-   Leave exactly one blank line before and after all of the following:\n\n    -   Paragraphs\n    -   Code blocks\n    -   Section headings `##`\n    -   Lower level headings `###` and `####`\n\n-   One blank line at the end of the file\n\n-   Indent 4 spaces when writing multiline list items\n\n-   Always strip all trailing whitespace from lines that you edit (you can\n    configure your text editor to do this automatically)\n\n-   Follow standard typographic rules for spaces around punctuation\n\n### Previewing Markdown locally\n\nIt is highly recommended that you install the\n[grip](https://github.com/joeyespo/grip) package, which lets you render your\nMarkdown files locally on your machine using GitHub's API to ensure that the\nfile will render correctly at https://github.com.\n\nYou can render a Markdown file with `grip` by running:\n\n```shell\ngrip -b --user=<github-user> --pass=<api-key> /path/to/markdown/file.md\n```\n\n### Customizing prettier\n\nSee `.prettierrc` for our prettier configuration, and refer to\n[this page](https://prettier.io/docs/en/configuration.html) for configuration\noptions.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0712890625,
          "content": "coverage:\n  status:\n    patch: off\n    project: off\ngithub_checks: false\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "e2e-pw",
          "type": "tree",
          "content": null
        },
        {
          "name": "fiftyone",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.bash",
          "type": "blob",
          "size": 4.6728515625,
          "content": "#!/bin/bash\n# Installs the `fiftyone` package and its dependencies.\n#\n# Usage:\n#   bash install.bash\n#\n# Copyright 2017-2025, Voxel51, Inc.\n# voxel51.com\n#\n\n# Show usage information\nusage() {\n    echo \"Usage:  bash $0 [-h] [-b] [-d] [-e] [-m] [-p]\n\nGetting help:\n-h      Display this help message.\n\nCustom installations:\n-b      Source install of fiftyone-brain.\n-d      Install developer dependencies.\n-e      Source install of voxel51-eta.\n-m      Install MongoDB from scratch, rather than installing fiftyone-db.\n-p      Install only the core python package, not the App.\n\"\n}\n\n# Parse flags\nSHOW_HELP=false\nSOURCE_BRAIN_INSTALL=false\nDEV_INSTALL=false\nSOURCE_ETA_INSTALL=false\nSCRATCH_MONGODB_INSTALL=false\nBUILD_APP=true\nwhile getopts \"hbdemp\" FLAG; do\n    case \"${FLAG}\" in\n        h) SHOW_HELP=true ;;\n        b) SOURCE_BRAIN_INSTALL=true ;;\n        d) DEV_INSTALL=true ;;\n        e) SOURCE_ETA_INSTALL=true ;;\n        m) SCRATCH_MONGODB_INSTALL=true ;;\n        p) BUILD_APP=false ;;\n        *) usage ;;\n    esac\ndone\n[ ${SHOW_HELP} = true ] && usage && exit 0\n\nset -e\nNODE_VERSION=17.9.0\nOS=$(uname -s)\nARCH=$(uname -m)\n\nif [ ${SCRATCH_MONGODB_INSTALL} = true ]; then\n    echo \"***** INSTALLING MONGODB FROM SCRATCH *****\"\n    MONGODB_VERSION=6.0.5\n    INSTALL_MONGODB=true\n\n    mkdir -p ~/.fiftyone/bin\n    cd ~/.fiftyone\n    mkdir -p var/lib/mongo\n    if [ -x bin/mongod ]; then\n        VERSION_FULL=$(bin/mongod --version | grep 'db version')\n        CURRENT_VERSION=\"${VERSION_FULL:12}\"\n        if [ ${CURRENT_VERSION} != ${MONGODB_VERSION} ]; then\n            echo \"Upgrading MongoDB v${CURRENT_VERSION} to v${MONGODB_VERSION}\"\n        else\n            echo \"MongoDB v${MONGODB_VERSION} already installed\"\n            INSTALL_MONGODB=false\n        fi\n    fi\n\n    if [ ${INSTALL_MONGODB} = true ]; then\n        echo \"Installing MongoDB v${MONGODB_VERSION}\"\n        if [ \"${OS}\" == \"Darwin\" ]; then\n            MONGODB_BUILD=mongodb-macos-x86_64-${MONGODB_VERSION}\n            curl https://fastdl.mongodb.org/osx/${MONGODB_BUILD}.tgz --output mongodb.tgz\n            tar -zxvf mongodb.tgz\n            mv ${MONGODB_BUILD}/bin/* ./bin/\n            rm mongodb.tgz\n            rm -rf ${MONGODB_BUILD}\n        elif [ \"${OS}\" == \"Linux\" ]; then\n            MONGODB_BUILD=mongodb-linux-x86_64-ubuntu2204-${MONGODB_VERSION}\n            curl https://fastdl.mongodb.org/linux/${MONGODB_BUILD}.tgz --output mongodb.tgz\n            tar -zxvf mongodb.tgz\n            mv ${MONGODB_BUILD}/bin/* ./bin/\n            rm mongodb.tgz\n            rm -rf ${MONGODB_BUILD}\n        else\n            echo \"WARNING: unsupported OS, skipping MongoDB installation\"\n        fi\n    fi\n    cd -\nelse\n    echo \"***** INSTALLING FIFTYONE-DB *****\"\n    pip install fiftyone-db\nfi\n\necho \"***** INSTALLING FIFTYONE-BRAIN *****\"\nif [ ${SOURCE_BRAIN_INSTALL} = true ]; then\n    git clone https://github.com/voxel51/fiftyone-brain\n    cd fiftyone-brain\n    if [ ${DEV_INSTALL} = true ]; then\n        bash install.bash -d\n    else\n        pip install .\n    fi\n    cd ..\nelse\n    echo \"Cloning FiftyOne Brain repository\"\n    pip install --upgrade fiftyone-brain\nfi\n\necho \"***** INSTALLING FIFTYONE *****\"\nif [ ${DEV_INSTALL} = true ]; then\n    echo \"Performing dev install\"\n    pip install -r requirements/dev.txt\n    pre-commit install\n    pip install -e .\nelse\n    pip install -r requirements.txt\n    pip install .\nfi\n\nif [ ${SOURCE_ETA_INSTALL} = true ]; then\n    echo \"***** INSTALLING ETA *****\"\n    if [[ ! -d \"eta\" ]]; then\n        echo \"Cloning ETA repository\"\n        git clone https://github.com/voxel51/eta\n    fi\n    cd eta\n    if [ ${DEV_INSTALL} = true ]; then\n        pip install -e .\n    else\n        pip install .\n    fi\n    if [[ ! -f eta/config.json ]]; then\n        echo \"Installing default ETA config\"\n        cp config-example.json eta/config.json\n    fi\n    cd ..\nfi\n\n# Do this last since `source` can exit Python virtual environments\nif [ ${BUILD_APP} = true ]; then\n    echo \"***** INSTALLING FIFTYONE-APP *****\"\n    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash\n    export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] && printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\"\n    [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\n    nvm install ${NODE_VERSION}\n    nvm use ${NODE_VERSION}\n    npm -g install yarn\n    if [ -f ~/.bashrc ]; then\n        source ~/.bashrc\n    elif [ -f ~/.bash_profile ]; then\n        source ~/.bash_profile\n    else\n        echo \"WARNING: unable to locate a bash profile to 'source'; you may need to start a new shell\"\n    fi\n    cd app\n    echo \"Building the App. This will take a minute or two...\"\n    yarn install > /dev/null 2>&1\n    yarn build\n    cd ..\nfi\n\necho \"***** INSTALLATION COMPLETE *****\"\n"
        },
        {
          "name": "install.bat",
          "type": "blob",
          "size": 2.580078125,
          "content": "@echo off\n:: Installs the `fiftyone` package and its dependencies.\n::\n:: Usage:\n:: .\\install.bat\n::\n:: Copyright 2017-2025, Voxel51, Inc.\n:: voxel51.com\n::\n:: Commands:\n:: -h      Display help message\n:: -b      Source install of fiftyone-brain\n:: -d      Install developer dependencies.\n:: -e      Source install of voxel51-eta.\n:: -m      Install MongoDB from scratch, rather than installing fiftyone-db.\n:: -p      Install only the core python package, not the App.\n\nset SHOW_HELP=false\nset SOURCE_BRAIN_INSTALL=false\nset DEV_INSTALL=false\nset SOURCE_ETA_INSTALL=false\nset SCRATCH_MONGODB_INSTALL=false\nset BUILD_APP=true\nset USE_FIFTY_ONE_DB=true\n\n:parse\nIF \"%~1\"==\"\" GOTO endparse\nIF \"%~1\"==\"-h\" GOTO helpmessage\nIF \"%~1\"==\"-b\" set SOURCE_BRAIN_INSTALL=true\nIF \"%~1\"==\"-d\" set DEV_INSTALL=true\nIF \"%~1\"==\"-e\" set SOURCE_ETA_INSTALL=true\nIF \"%~1\"==\"-m\" set USE_FIFTY_ONE_DB=false\nIF \"%~1\"==\"-p\" set BUILD_APP=false\nSHIFT\nGOTO parse\n:endparse\n\nIF %USE_FIFTY_ONE_DB%==true (\n  echo ***** INSTALLING FIFTYONE-DB *****\n  pip install fiftyone-db\n) else (\n  echo ***** USING LOCAL MONGODB *****\n)\n\necho ***** INSTALLING FIFTYONE-BRAIN *****\nIF %SOURCE_BRAIN_INSTALL%==true (\n  echo Cloning FiftyOne Brain repository\n  git clone https://github.com/voxel51/fiftyone-brain\n  cd fiftyone-brain\n  IF %DEV_INSTALL%==true (\n    CALL install.bat -d\n  ) else (\n    pip install .\n  )\n  cd ..\n) else (\n  pip install --upgrade fiftyone-brain\n)\n\necho ***** INSTALLING FIFTYONE *****\nIF %DEV_INSTALL%==true (\n  echo Performing dev install\n  pip install -r requirements/dev.txt\n  pre-commit install\n  pip install .\n) else (\n  pip install -r requirements.txt\n  pip install .\n)\n\nIF %SOURCE_ETA_INSTALL%==true (\n  echo ***** INSTALLING ETA *****\n  if not exist \"eta\\\" (\n    echo Cloning ETA repository\n    git clone https://github.com/voxel51/eta\n  )\n  cd eta\n  pip install .\n  if not exist \"eta\\config.json\" (\n    echo \"Installing default ETA config\"\n    xcopy /y \".\\config-example.json\" \".\\eta\\config.*\"\n  )\n  cd ..\n)\n\nif %BUILD_APP%==true (\n  echo ***** INSTALLING FIFTYONE-APP *****\n  :: TODO - Add nvm and yarn installs\n  cd app\n  echo \"Building the App. This will take a minute or two...\"\n  call yarn install > /dev/null 2>&1\n  call yarn build:win32\n  cd ..\n)\n\necho ***** INSTALLATION COMPLETE *****\nexit /b\n\n:helpmessage\necho Additional Arguments:\necho -h      Display help message\necho -b      Source install of fiftyone-brain.\necho -d      Install developer dependencies.\necho -e      Source install of voxel51-eta.\necho -m      Use local mongodb instead of installing fiftyone-db.\necho -p      Install only the core python package, not the App.\nexit /b"
        },
        {
          "name": "package",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 13.083984375,
          "content": "[MASTER]\n\n# Specify a configuration file.\n#rcfile=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=CVS\n\n# Add files or directories matching the regex patterns to the blacklist. The\n# regex matches against base names, not paths.\nignore-patterns=./app/*\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Use multiple processes to speed up Pylint.\njobs=1\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-whitelist=cv2\n\n# Allow optimization of some AST trees. This will activate a peephole AST\n# optimizer, which will apply various small optimizations. For instance, it can\n# be used to obtain the result of joining multiple strings with the addition\n# operator. Joining a lot of strings can lead to a maximum recursion error in\n# Pylint and this flag can prevent that. It has one side effect, the resulting\n# AST will be different than the one from reality. This option is deprecated\n# and it will be removed in Pylint 2.0.\noptimize-ast=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\n#disable=import-star-module-level,old-octal-literal,oct-method,print-statement,unpacking-in-except,parameter-unpacking,backtick,old-raise-syntax,old-ne-operator,long-suffix,dict-view-method,dict-iter-method,metaclass-assignment,next-method-called,raising-string,indexing-exception,raw_input-builtin,long-builtin,file-builtin,execfile-builtin,coerce-builtin,cmp-builtin,buffer-builtin,basestring-builtin,apply-builtin,filter-builtin-not-iterating,using-cmp-argument,useless-suppression,range-builtin-not-iterating,suppressed-message,no-absolute-import,old-division,cmp-method,reload-builtin,zip-builtin-not-iterating,intern-builtin,unichr-builtin,reduce-builtin,standarderror-builtin,unicode-builtin,xrange-builtin,coerce-method,delslice-method,getslice-method,setslice-method,input-builtin,round-builtin,hex-method,nonzero-method,map-builtin-not-iterating\n\ndisable=too-few-public-methods,too-many-instance-attributes,too-many-arguments,too-many-locals,too-many-lines,non-iterator-returned,too-many-statements,useless-object-inheritance,abstract-method,too-many-ancestors,too-many-branches,unnecessary-pass,too-many-public-methods,bad-continuation\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=colorized\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\". This option is deprecated\n# and it will be removed in Pylint 2.0.\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=no\nscore=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n\n[BASIC]\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct function names\nfunction-rgx=[a-z_]([a-z0-9_]{0,30})$\n\n# Naming hint for function names\nfunction-name-hint=[a-z_]([a-z0-9_]{0,30})$\n\n# Regular expression matching correct variable names\nvariable-rgx=[a-z_]([a-z0-9_]{0,30})$\n\n# Naming hint for variable names\nvariable-name-hint=[a-z_]([a-z0-9_]{0,30})$\n\n# Regular expression matching correct constant names\nconst-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Naming hint for constant names\nconst-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Regular expression matching correct attribute names\nattr-rgx=[a-z_]([a-z0-9_]{0,30})$\n\n# Naming hint for attribute names\nattr-name-hint=[a-z_]([a-z0-9_]{0,30})$\n\n# Regular expression matching correct argument names\nargument-rgx=[a-z_]([a-z0-9_]{0,30})$\n\n# Naming hint for argument names\nargument-name-hint=[a-z_]([a-z0-9_]{0,30})$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=([A-Za-z_]([A-Za-z0-9_]{0,30})|(__.*__))$\n\n# Naming hint for class attribute names\nclass-attribute-name-hint=([A-Za-z_]([A-Za-z0-9_]{0,30})|(__.*__))$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Naming hint for inline iteration names\ninlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Naming hint for class names\nclass-name-hint=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression matching correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Naming hint for module names\nmodule-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression matching correct method names\nmethod-rgx=[a-z_]([a-z0-9_]{0,30})$\n\n# Naming hint for method names\nmethod-name-hint=[a-z_]([a-z0-9_]{0,30})$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n\n[ELIF]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=79\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=trailing-comma,dict-separator\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=torch.*,cv2.*\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n\n# Maximum number of locals for function / method body\nmax-locals=15\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of statements in function / method body\nmax-statements=50\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of boolean expressions in a if statement\nmax-bool-expr=5\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,TERMIOS,Bastion,rexec\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.130859375,
          "content": "[build-system]\nrequires = [\"setuptools\", \"wheel\"]\n[tool.black]\nline-length = 79\ninclude = '\\.pyi?$'\nexclude = '''\n/(\n  | \\.git\n)/\n'''\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.5634765625,
          "content": "[pytest]\npython_files = *test*.py\nfilterwarnings =\n    ignore:dns.hash module will be removed in future versions:DeprecationWarning\n    ignore:the imp module is deprecated in favour of importlib:DeprecationWarning\n    ignore:the imp module is deprecated in favour of importlib:PendingDeprecationWarning\n    ignore:Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated:DeprecationWarning\n    ignore:numpy.* size changed, may indicate binary incompatibility:RuntimeWarning\n    ignore:Call to deprecated create function:DeprecationWarning\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0244140625,
          "content": "-r requirements/prod.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.041015625,
          "content": "#!/usr/bin/env python\n\"\"\"\nInstalls FiftyOne.\n\n| Copyright 2017-2025, Voxel51, Inc.\n| `voxel51.com <https://voxel51.com/>`_\n|\n\"\"\"\n\nfrom importlib import metadata\nimport os\nimport re\nfrom setuptools import setup, find_packages\n\n\nVERSION = \"1.3.0\"\n\n\ndef get_version():\n    if \"RELEASE_VERSION\" in os.environ:\n        version = os.environ[\"RELEASE_VERSION\"]\n        if not version.startswith(VERSION):\n            raise ValueError(\n                \"Release version does not match version: %s and %s\"\n                % (version, VERSION)\n            )\n        return version\n\n    return VERSION\n\n\nINSTALL_REQUIRES = [\n    # third-party packages\n    \"aiofiles\",\n    \"argcomplete\",\n    \"beautifulsoup4\",\n    \"boto3\",\n    \"cachetools\",\n    \"dacite>=1.6.0,<1.8.0\",\n    \"Deprecated\",\n    \"ftfy\",\n    \"humanize\",\n    \"hypercorn>=0.13.2\",\n    \"Jinja2>=3\",\n    # kaleido indirectly required by plotly for image export\n    # https://plotly.com/python/static-image-export/\n    \"kaleido!=0.2.1.post1\",\n    \"matplotlib\",\n    \"mongoengine~=0.29.1\",\n    \"motor~=3.6.0\",\n    \"numpy\",\n    \"packaging\",\n    \"pandas\",\n    \"Pillow>=6.2\",\n    \"plotly>=4.14\",\n    \"pprintpp\",\n    \"psutil\",\n    \"pymongo~=4.9.2\",\n    \"pytz\",\n    \"PyYAML\",\n    \"regex\",\n    \"retrying\",\n    \"rtree\",\n    \"scikit-learn\",\n    \"scikit-image\",\n    \"scipy\",\n    \"setuptools\",\n    \"sseclient-py>=1.7.2,<2\",\n    \"sse-starlette>=0.10.3,<1\",\n    \"starlette>=0.24.0\",\n    \"strawberry-graphql\",\n    \"tabulate\",\n    \"xmltodict\",\n    \"universal-analytics-python3>=1.0.1,<2\",\n    \"pydash\",\n    # internal packages\n    \"fiftyone-brain>=0.18.2,<0.19\",\n    \"fiftyone-db>=0.4,<2.0\",\n    \"voxel51-eta>=0.13.1,<0.14\",\n]\n\n\nCHOOSE_INSTALL_REQUIRES = [\n    (\n        (\n            \"opencv-python\",\n            \"opencv-contrib-python\",\n            \"opencv-contrib-python-headless\",\n        ),\n        \"opencv-python-headless\",\n    )\n]\n\n\ndef choose_requirement(mains, secondary):\n    chosen = secondary\n    for main in mains:\n        try:\n            name = re.split(r\"[!<>=]\", main)[0]\n            metadata.version(name)\n            chosen = main\n            break\n        except metadata.PackageNotFoundError:\n            pass\n\n    return str(chosen)\n\n\ndef get_install_requirements(install_requires, choose_install_requires):\n    for mains, secondary in choose_install_requires:\n        install_requires.append(choose_requirement(mains, secondary))\n\n    return install_requires\n\n\nwith open(\"README.md\", \"r\") as fh:\n    long_description = fh.read()\n\n\nsetup(\n    name=\"fiftyone\",\n    version=get_version(),\n    description=(\n        \"FiftyOne: the open-source tool for building high-quality datasets \"\n        \"and computer vision models\"\n    ),\n    author=\"Voxel51, Inc.\",\n    author_email=\"info@voxel51.com\",\n    url=\"https://github.com/voxel51/fiftyone\",\n    license=\"Apache\",\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    packages=find_packages(\n        exclude=[\"app\", \"eta\", \"package\", \"requirements\", \"tests\", \"tools\"]\n    ),\n    install_requires=get_install_requirements(\n        INSTALL_REQUIRES, CHOOSE_INSTALL_REQUIRES\n    ),\n    include_package_data=True,\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: Science/Research\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n        \"Topic :: Scientific/Engineering :: Image Processing\",\n        \"Topic :: Scientific/Engineering :: Image Recognition\",\n        \"Topic :: Scientific/Engineering :: Information Analysis\",\n        \"Topic :: Scientific/Engineering :: Visualization\",\n        \"Operating System :: MacOS :: MacOS X\",\n        \"Operating System :: POSIX :: Linux\",\n        \"Operating System :: Microsoft :: Windows\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n    ],\n    entry_points={\"console_scripts\": [\"fiftyone=fiftyone.core.cli:main\"]},\n    python_requires=\">=3.9\",\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}