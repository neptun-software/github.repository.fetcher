{
  "metadata": {
    "timestamp": 1736560716554,
    "page": 385,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Sitoi/dailycheckin",
      "stars": 7004,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.2255859375,
          "content": "[flake8]\nmax-line-length = 88\nmax-complexity = 24\nignore = F401, W503, E203, E501, F841, E722, C901\nexclude =\n    .git,\n    __pycache__,\n    scripts,\n    logs,\n    upload,\n    build,\n    dist,\n    docs,\n    migrations,\n    .scrapy\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.869140625,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### Python template\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n.idea\nconfig.json\n\n.next\nnode_modules\n\n.DS_Store"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.267578125,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.4.0\n    hooks:\n      - id: check-added-large-files\n        args: [--maxkb=10000]\n      - id: check-json\n        exclude: .vscode\n      - id: check-case-conflict\n      - id: detect-private-key\n      - id: mixed-line-ending\n      - id: trailing-whitespace\n      - id: fix-encoding-pragma\n        args:\n          - --remove\n      - id: requirements-txt-fixer\n      - id: trailing-whitespace\n\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v3.1.0\n    hooks:\n      - id: pyupgrade\n        args: [--py39-plus]\n\n  - repo: https://github.com/MarcoGorelli/auto-walrus\n    rev: v0.2.2\n    hooks:\n      - id: auto-walrus\n\n  - repo: https://github.com/PyCQA/autoflake\n    rev: v2.2.1\n    hooks:\n      - id: autoflake\n\n  - repo: https://github.com/pycqa/flake8\n    rev: 6.1.0\n    hooks:\n      - id: flake8\n        exclude: ^migrations/|^uploads/|^scripts/|^logs/|^docs/|^dist/|^build/\n\n  - repo: https://github.com/pycqa/isort\n    rev: 5.12.0\n    hooks:\n      - id: isort\n        args: ['--profile', 'black', '--filter-files']\n\n  - repo: https://github.com/psf/black\n    rev: 23.9.1\n    hooks:\n      - id: black\n        language_version: python3\n        exclude: ^migrations/|^uploads/|^scripts/|^logs/|^docs/|^dist/|^build/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2021 Sitoi\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.263671875,
          "content": ".PHONY: clean sdist upload pre-commit mkdocs\n\nsdist: clean\n\tpython3 setup.py sdist bdist_wheel --universa\n\nupload: clean\n\tpython3 setup.py upload\n\nclean:\n\trm -rf build dailycheckin.egg-info dist\n\npre-commit:\n\tpre-commit run --all-files\n\nmkdocs:\n\tmkdocs gh-deploy --force"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.455078125,
          "content": "<div align=\"center\">\n\n<img src=\"https://socialify.git.ci/Sitoi/dailycheckin/image?font=Rokkitt&forks=1&issues=1&language=1&name=1&owner=1&pattern=Circuit%20Board&pulls=1&stargazers=1&theme=Dark\">\n\n<h1>DailyCheckIn</h1>\n\n基于「Docker」/「青龙面板」/「群晖」/「本地」的每日签到脚本\n\n<!-- SHIELD GROUP -->\n<div id=\"shield\">\n\n[![][github-releases-shield]][github-releases-link]\n[![][pypi-version-shield]][pypi-version-link]\n[![][github-release-date-shield]][github-release-date-link]\n[![][github-stars-shield]][github-stars-link]\n[![][github-forks-shield]][github-forks-link]\n[![][github-issues-shield]][github-issues-link]\n[![][github-contributors-shield]][github-contributors-link]\n\n[![][python-version-shield]][python-version-link]\n[![][pypi-dm-shield]][pypi-dm-link]\n[![][docker-pull-shield]][docker-pull-link]\n[![][docker-size-shield]][docker-size-link]\n[![][docker-stars-shield]][docker-stars-link]\n[![][github-license-shield]][github-license-link]\n\n<!-- SHIELD GROUP -->\n</div>\n</div>\n\n## ✨ 特性\n\n- 📦 支持 Pypi 包安装\n- 💻 支持多个平台部署\n- ⚙️ 支持多个平台签到\n- 📢 支持多个平台通知\n- ♾️ 支持多个账号签到\n- 🕙 支持定时任务设置\n- 🆙 支持项目自动更新\n\n## 🦄 教程\n\n[https://sitoi.github.io/dailycheckin/](https://sitoi.github.io/dailycheckin/)\n\n## 🧾 列表\n\n🟢: 正常运行 🔴: 脚本暂不可用 🔵: 可以执行(需更新) 🟡: 待测试 🟤: 看脸\n\n| 状态 | 任务名称 | 名称网站                                                   | 检查日期 | 备注                                                                                                                                           |\n| ---- | -------- | ---------------------------------------------------------- | -------- | ---------------------------------------------------------------------------------------------------------------------------------------------- |\n| 🟢️  | KGQQ     | [全民 K 歌](https://kg.qq.com/index-pc.html)               | 24.02.20 | 每日签到获取鲜花 每日大约 120 鲜花左右                                                                                                         |\n| 🟢️  | YOUDAO   | [有道云笔记](https://note.youdao.com/web/)                 | 24.02.20 | 每日签到获取存储空间                                                                                                                           |\n| 🟢️  | TIEBA    | [百度贴吧](https://tieba.baidu.com/index.html)             | 24.02.20 | 贴吧每日签到                                                                                                                                   |\n| 🟢️  | BILIBILI | [BiliBili](https://www.bilibili.com/)                      | 24.02.20 | 直播签到，漫画签到，每日经验任务，自动投币，银瓜子换硬币等功能                                                                                 |\n| 🟢️  | V2EX     | [V2EX](https://www.v2ex.com/)                              | 24.02.20 | 铜币奖励                                                                                                                                       |\n| 🟢️  | ACFUN    | [AcFun](https://www.acfun.cn/)                             | 24.02.20 | 每日签到香蕉                                                                                                                                   |\n| 🟢️  | IQIYI    | [爱奇艺](https://www.iqiyi.com/)                           | 24.02.20 | ① 满签得 7 天会员；② 日常任务 4 成长值；③ 爱奇艺刷时长任务，10 成长值；④ 每日签到随机成长值；⑤ 抽白金会员 5 次；⑥ 摇一摇抽奖 3 次；⑦ 抽奖 3 次 |\n| 🟢️  | SMZDM    | [什么值得买](https://www.smzdm.com/)                       | 24.02.20 | 签到和抽奖                                                                                                                                     |\n| 🟢️  | ALIYUN   | [阿里云盘](https://www.aliyundrive.com/drive/)             | 24.02.20 | 签到获取免费会员和空间                                                                                                                         |\n| 🟢️  | ENSHAN   | [恩山无线论坛](https://www.right.com.cn/forum/)            | 24.02.20 | 签到获取硬币和积分                                                                                                                             |\n| 🟢️  | AOLAXING | [奥拉星](http://www.100bt.com/m/creditMall/?gameId=2#task) | 24.02.20 | 签到获取积分                                                                                                                                   |\n| 🟢️  | IMAOTAI  | i 茅台                                                     | 24.02.20 | 申购生肖茅台                                                                                                                                   |\n| 🟤   | MIMOTION | 小米运动                                                   | 24.02.20 | 每日小米运动刷步数                                                                                                                             |\n| 🟢️  | BAIDU    | [百度站点](https://ziyuan.baidu.com/site/index#/)          | 24.02.20 | 提交网站页面供百度收录                                                                                                                         |\n\n## 💬 通知列表\n\n- dingtalk（钉钉）\n- 企业微信群机器人（企业微信）\n- 企业微信应用消息（企业微信）\n- telegram（TG）\n- Bark（iOS）\n- server 酱（微信）\n- server 酱 TURBO（微信）\n- pushplus（微信）\n- Cool Push（QQ,微信,邮箱）\n- qmsg 酱（QQ）\n- 飞书（飞书）\n\n## 🤝 参与贡献\n\n我们非常欢迎各种形式的贡献。如果你对贡献代码感兴趣，可以查看我们的 GitHub [Issues][github-issues-link]，大展身手，向我们展示你的奇思妙想。\n\n[![][pr-welcome-shield]][pr-welcome-link]\n\n### 💗 感谢我们的贡献者\n\n[![][github-contrib-shield]][github-contrib-link]\n\n## ✨ Star 数\n\n[![][starchart-shield]][starchart-link]\n\n---\n\n## 📝 License\n\nCopyright © 2021 [Sitoi][profile-link]. <br />\nThis project is [MIT](https://github.com/Sitoi/dailycheckin/blob/main/LICENSE) licensed.\n\n<!-- LINK GROUP -->\n\n[profile-link]: https://github.com/sitoi\n[github-codespace-link]: https://codespaces.new/sitoi/dailycheckin\n[github-codespace-shield]: https://github.com/sitoi/dailycheckin/blob/main/images/codespaces.png?raw=true\n[github-contributors-link]: https://github.com/sitoi/dailycheckin/graphs/contributors\n[github-contributors-shield]: https://img.shields.io/github/contributors/sitoi/dailycheckin?color=c4f042&labelColor=black&style=flat-square\n[github-forks-link]: https://github.com/sitoi/dailycheckin/network/members\n[github-forks-shield]: https://img.shields.io/github/forks/sitoi/dailycheckin?color=8ae8ff&labelColor=black&style=flat-square\n[github-issues-link]: https://github.com/sitoi/dailycheckin/issues\n[github-issues-shield]: https://img.shields.io/github/issues/sitoi/dailycheckin?color=ff80eb&labelColor=black&style=flat-square\n[github-license-link]: https://github.com/sitoi/dailycheckin/blob/main/LICENSE\n[github-license-shield]: https://img.shields.io/github/license/sitoi/dailycheckin?labelColor=black&style=flat-square\n[github-stars-link]: https://github.com/sitoi/dailycheckin/stargazers\n[github-stars-shield]: https://img.shields.io/github/stars/sitoi/dailycheckin?color=ffcb47&labelColor=black&style=flat-square\n[github-releases-link]: https://github.com/sitoi/dailycheckin/releases\n[github-releases-shield]: https://img.shields.io/github/v/release/sitoi/dailycheckin?labelColor=black&style=flat-square\n[github-release-date-link]: https://github.com/sitoi/dailycheckin/releases\n[github-release-date-shield]: https://img.shields.io/github/release-date/sitoi/dailycheckin?labelColor=black&style=flat-square\n[pr-welcome-link]: https://github.com/sitoi/dailycheckin/pulls\n[pr-welcome-shield]: https://img.shields.io/badge/🤯_pr_welcome-%E2%86%92-ffcb47?labelColor=black&style=for-the-badge\n[github-contrib-link]: https://github.com/sitoi/dailycheckin/graphs/contributors\n[github-contrib-shield]: https://contrib.rocks/image?repo=sitoi%2Fdailycheckin\n[docker-pull-shield]: https://img.shields.io/docker/pulls/sitoi/dailycheckin?labelColor=black&style=flat-square\n[docker-pull-link]: https://hub.docker.com/repository/docker/sitoi/dailycheckin\n[docker-size-shield]: https://img.shields.io/docker/image-size/sitoi/dailycheckin?labelColor=black&style=flat-square\n[docker-size-link]: https://hub.docker.com/repository/docker/sitoi/dailycheckin\n[docker-stars-shield]: https://img.shields.io/docker/stars/sitoi/dailycheckin?labelColor=black&style=flat-square\n[docker-stars-link]: https://hub.docker.com/repository/docker/sitoi/dailycheckin\n[pypi-dm-shield]: https://img.shields.io/pypi/dm/dailycheckin?label=pypi&labelColor=black&style=flat-square\n[pypi-dm-link]: https://pypi.org/project/dailycheckin/\n[python-version-link]: https://pypi.org/project/dailycheckin/\n[python-version-shield]: https://img.shields.io/pypi/pyversions/dailycheckin?labelColor=black&style=flat-square\n[pypi-version-shield]: https://img.shields.io/pypi/v/dailycheckin?labelColor=black&style=flat-square\n[pypi-version-link]: https://pypi.org/project/dailycheckin/\n[starchart-shield]: https://api.star-history.com/svg?repos=sitoi/dailycheckin&type=Date\n[starchart-link]: https://star-history.com/#sitoi/dailycheckin&Date\n"
        },
        {
          "name": "dailycheckin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker_start.sh",
          "type": "blob",
          "size": 1.70703125,
          "content": "#!/bin/bash\n\necho \"在当前目录下创建 config 和 cron 文件夹\"\nmkdir -p config\nmkdir -p cron\n\nCONFIG_FILE=\"config/config.json\"\nCRONTAB_FILE=\"cron/crontab_list.sh\"\n\nif [ ! -f \"$CONFIG_FILE\" ]; then\n    echo \"config.json 不存在. 开始下载默认文件...\"\n    curl https://fastly.jsdelivr.net/gh/sitoi/dailycheckin@main/docker/config.template.json -o $CONFIG_FILE\nelse\n    echo \"config.json 已存在. 跳过下载。\"\nfi\n\nif [ ! -f \"$CRONTAB_FILE\" ]; then\n    echo \"crontab_list.sh 不存在. 开始下载默认文件...\"\n    curl https://fastly.jsdelivr.net/gh/sitoi/dailycheckin@main/docker/crontab_list.sh -o $CRONTAB_FILE\nelse\n    echo \"crontab_list.sh 已存在. 跳过下载。\"\nfi\n\n\ndocker --version\nif [ $? -ne 0 ];then\n  echo \"未安装 docker ，请先安装 docker 再运行脚本。\"\nelse\n  echo \"docker 环境存在，检测 docker-compose 环境是否安装...\"\n  docker-compose --version || docker compose version && alias docker-compose=\"docker compose\"\n  if [ $? -ne 0 ];then\n    echo \"未安装 docker-compose，将使用 docker 命令启动容器...\"\n    echo \"开始通过 docker 命令创建容器\"\n    docker pull sitoi/dailycheckin:latest\n    docker run -d -v $(pwd)/config:/dailycheckin/config \\\n      -v $(pwd)/logs:/dailycheckin/logs \\\n      -v $(pwd)/cron:/dailycheckin/cron \\\n      --name dailycheckin \\\n      --restart always \\\n      sitoi/dailycheckin:latest\n  else\n    echo \"docker-compose 环境存在，将使用 docker-compose 命令启动容器...\"\n    echo \"下载 docker-compose.yml 文件\"\n    curl -O https://fastly.jsdelivr.net/gh/sitoi/dailycheckin@main/docker/docker-compose.yml\n    echo \"开始通过 docker-compose 命令创建容器\"\n    docker-compose pull\n    docker-compose up -d\n  fi\nfi\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "imaotai_login.py",
          "type": "blob",
          "size": 5.375,
          "content": "import hashlib\nimport json\nimport time\n\nimport requests\n\n\"\"\"\n获取地点信息,这里用的高德 api,需要自己去高德开发者平台申请自己的 key\n\"\"\"\nAMAP_KEY = \"\"\n\n\nSALT = \"2af72f100c356273d46284f6fd1dfc08\"\n\nCURRENT_TIME = str(int(time.time() * 1000))\nheaders = {}\n\n\nmt_version = json.loads(\n    requests.get(\"https://itunes.apple.com/cn/lookup?id=1600482450\").text\n)[\"results\"][0][\"version\"]\n\n\nheader_context = \"\"\"\nMT-Lat: 28.499562\nMT-K: 1675213490331\nMT-Lng: 102.182324\nHost: app.moutai519.com.cn\nMT-User-Tag: 0\nAccept: */*\nMT-Network-Type: WIFI\nMT-Token: 1\nMT-Team-ID: 1\nMT-Info: 028e7f96f6369cafe1d105579c5b9377\nMT-Device-ID: 2F2075D0-B66C-4287-A903-DBFF6358342A\nMT-Bundle-ID: com.moutai.mall\nAccept-Language: en-CN;q=1, zh-Hans-CN;q=0.9\nMT-Request-ID: 167560018873318465\nMT-APP-Version: 1.3.7\nUser-Agent: iOS;16.3;Apple;?unrecognized?\nMT-R: clips_OlU6TmFRag5rCXwbNAQ/Tz1SKlN8THcecBp/HGhHdw==\nContent-Length: 93\nAccept-Encoding: gzip, deflate, br\nConnection: keep-alive\nContent-Type: application/json\nuserId: 2\n\"\"\"\n\n\n# 初始化请求头\ndef init_headers(\n    user_id: str = \"1\", token: str = \"2\", lat: str = \"29.83826\", lng: str = \"119.74375\"\n):\n    for k in header_context.strip().split(\"\\n\"):\n        temp_l = k.split(\": \")\n        dict.update(headers, {temp_l[0]: temp_l[1]})\n    dict.update(headers, {\"userId\": user_id})\n    dict.update(headers, {\"MT-Token\": token})\n    dict.update(headers, {\"MT-Lat\": lat})\n    dict.update(headers, {\"MT-Lng\": lng})\n    dict.update(headers, {\"MT-APP-Version\": mt_version})\n\n\n# 用高德api获取地图信息\ndef select_geo(i: str):\n    # 校验高德api是否配置\n    if AMAP_KEY is None:\n        print(\"!!!!请配置 AMAP_KEY (高德地图的MapKey)\")\n        raise ValueError\n    resp = requests.get(\n        f\"https://restapi.amap.com/v3/geocode/geo?key={AMAP_KEY}&output=json&address={i}\"\n    )\n    geocodes: list = resp.json()[\"geocodes\"]\n    return geocodes\n\n\ndef signature(data: dict):\n    keys = sorted(data.keys())\n    temp_v = \"\"\n    for item in keys:\n        temp_v += data[item]\n    text = SALT + temp_v + CURRENT_TIME\n    hl = hashlib.md5()\n    hl.update(text.encode(encoding=\"utf8\"))\n    md5 = hl.hexdigest()\n    return md5\n\n\n# 获取登录手机验证码\ndef get_vcode(mobile: str):\n    params = {\"mobile\": mobile}\n    md5 = signature(params)\n    dict.update(\n        params, {\"md5\": md5, \"timestamp\": CURRENT_TIME, \"MT-APP-Version\": mt_version}\n    )\n    responses = requests.post(\n        \"https://app.moutai519.com.cn/xhr/front/user/register/vcode\",\n        json=params,\n        headers=headers,\n    )\n    if responses.status_code != 200:\n        print(\n            f\"get v_code : params : {params}, response code : {responses.status_code}, response body : {responses.text}\"\n        )\n\n\n# 执行登录操作\ndef login(mobile: str, v_code: str):\n    params = {\"mobile\": mobile, \"vCode\": v_code, \"ydToken\": \"\", \"ydLogId\": \"\"}\n    md5 = signature(params)\n    dict.update(\n        params, {\"md5\": md5, \"timestamp\": CURRENT_TIME, \"MT-APP-Version\": mt_version}\n    )\n    responses = requests.post(\n        \"https://app.moutai519.com.cn/xhr/front/user/register/login\",\n        json=params,\n        headers=headers,\n    )\n    if responses.status_code != 200:\n        print(\n            f\"login : params : {params}, response code : {responses.status_code}, response body : {responses.text}\"\n        )\n    dict.update(headers, {\"MT-Token\": responses.json()[\"data\"][\"token\"]})\n    dict.update(headers, {\"userId\": responses.json()[\"data\"][\"userId\"]})\n    return responses.json()[\"data\"][\"token\"], responses.json()[\"data\"][\"userId\"]\n\n\ndef get_location():\n    while 1:\n        location = input(\"请输入精确小区位置，例如[小区名称]，为你自动预约附近的门店:\").strip()\n        selects = select_geo(location)\n\n        a = 0\n        for item in selects:\n            formatted_address = item[\"formatted_address\"]\n            province = item[\"province\"]\n            print(f\"{a} : [地区:{province},位置:{formatted_address}]\")\n            a += 1\n        user_select = input(\"请选择位置序号,重新输入请输入[-]:\").strip()\n        if user_select == \"-\":\n            continue\n        select = selects[int(user_select)]\n        formatted_address = select[\"formatted_address\"]\n        province = select[\"province\"]\n        print(f\"已选择 地区:{province},[{formatted_address}]附近的门店\")\n        return select\n\n\nif __name__ == \"__main__\":\n    items = []\n    while 1:\n        init_headers()\n        location_select: dict = get_location()\n        province = location_select[\"province\"]\n        city = location_select[\"city\"]\n        location: str = location_select[\"location\"]\n\n        mobile = input(\"输入手机号[18888888888]:\").strip()\n        get_vcode(mobile)\n        code = input(f\"输入 [{mobile}] 验证码[8888]:\").strip()\n        token, userId = login(mobile, code)\n        item = {\n            \"province\": province,\n            \"city\": str(city),\n            \"lat\": location.split(\",\")[1],\n            \"lng\": location.split(\",\")[0],\n            \"mobile\": str(mobile),\n            \"token\": str(token),\n            \"userid\": str(userId),\n            \"reserve_rule\": 0,\n            \"item_codes\": [\"10941\", \"10942\"],\n        }\n        items.append(item)\n        condition = input(\"是否继续添加账号[y/n]:\").strip()\n        with open(\"account.json\", \"w\") as f:\n            f.write(json.dumps(items, ensure_ascii=False, indent=4))\n        if condition.lower() == \"n\":\n            break\n"
        },
        {
          "name": "pyproject.tomal",
          "type": "blob",
          "size": 0.1376953125,
          "content": "[tool.black]\nline-length = 88\nskip-string-normalization = true\n\n[tool.autoflake]\ncheck = true\nverbose = true\n\n[tool.isort]\nprofile = \"black\"\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0595703125,
          "content": "pycryptodome==3.17\nrequests~=2.25.1\nrsa~=4.0\nurllib3~=1.26.2\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.1435546875,
          "content": "import os\n\nfrom setuptools import find_packages, setup\n\nNAME = \"dailycheckin\"\nFOLDER = \"dailycheckin\"\nDESCRIPTION = \"dailycheckin\"\nEMAIL = \"133397418@qq.com\"\nAUTHOR = \"Sitoi\"\nREQUIRES_PYTHON = \">=3.9.0\"\nVERSION = None\n\n\ndef read_file(filename):\n    with open(filename) as fp:\n        return fp.read().strip()\n\n\ndef read_requirements(filename):\n    return [\n        line.strip()\n        for line in read_file(filename).splitlines()\n        if not line.startswith(\"#\")\n    ]\n\n\nREQUIRED = read_requirements(\"requirements.txt\")\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\ntry:\n    with open(os.path.join(here, \"README.md\"), encoding=\"utf-8\") as f:\n        long_description = \"\\n\" + f.read()\nexcept FileNotFoundError:\n    long_description = DESCRIPTION\n\nabout = {}\nif not VERSION:\n    with open(os.path.join(here, FOLDER, \"__version__.py\")) as f:\n        exec(f.read(), about)\nelse:\n    about[\"__version__\"] = VERSION\n\n\ndef package_files(directories):\n    paths = []\n    for item in directories:\n        if os.path.isfile(item):\n            paths.append(os.path.join(\"..\", item))\n            continue\n        for path, directories, filenames in os.walk(item):\n            for filename in filenames:\n                paths.append(os.path.join(\"..\", path, filename))\n    return paths\n\n\nsetup(\n    name=NAME,\n    version=about[\"__version__\"],\n    description=DESCRIPTION,\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    author=AUTHOR,\n    author_email=EMAIL,\n    python_requires=REQUIRES_PYTHON,\n    url=\"https://sitoi.cn\",\n    project_urls={\"Documentation\": \"https://sitoi.github.io/dailycheckin/\"},\n    packages=find_packages(exclude=(\"config\",)),\n    install_requires=REQUIRED,\n    include_package_data=True,\n    license=\"MIT\",\n    zip_safe=False,\n    entry_points={\"console_scripts\": [\"dailycheckin = dailycheckin.main:checkin\"]},\n    classifiers=[\n        \"License :: OSI Approved :: MIT License\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n        \"Programming Language :: Python :: Implementation :: PyPy\",\n    ],\n)\n"
        }
      ]
    }
  ]
}