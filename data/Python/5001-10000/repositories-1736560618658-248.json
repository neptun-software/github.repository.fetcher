{
  "metadata": {
    "timestamp": 1736560618658,
    "page": 248,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jupyterhub/jupyterhub",
      "stars": 7868,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.3095703125,
          "content": "[run]\nparallel = True\nbranch = False\nomit =\n    jupyterhub/tests/*\n    jupyterhub/alembic/*\n\n[report]\nexclude_lines =\n    if self.debug:\n    pragma: no cover\n    raise NotImplementedError\n    if __name__ == .__main__.:\nignore_errors = True\nomit =\n    jupyterhub/tests/*\n    jupyterhub/alembic/*\n    */site-packages/*\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.10546875,
          "content": "examples\nbench\njupyterhub_cookie_secret\njupyterhub.sqlite\njupyterhub_config.py\nnode_modules\ndocs\ndist\nbuild\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.3671875,
          "content": "[flake8]\n# Ignore style and complexity\n# E: style errors\n# W: style warnings\n# C: complexity\n# D: docstring warnings (unused pydocstyle extension)\n# F841: local variable assigned but never used\nignore = E, C, W, D, F841\nbuiltins = c, get_config\nexclude =\n    .cache,\n    .github,\n    docs,\n    jupyterhub/alembic*,\n    onbuild,\n    scripts,\n    share,\n    tools,\n    setup.py\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.828125,
          "content": "node_modules\n*.py[co]\n*~\n.cache\n.DS_Store\n/build\ndist\ndocs/_build\ndocs/build\ndocs/source/_static/rest-api\ndocs/source/rbac/scope-table.md\ndocs/source/reference/metrics.md\n\n.ipynb_checkpoints\n.virtual_documents\n\njsx/build/\n# ignore config file at the top-level of the repo\n# but not sub-dirs\n/jupyterhub_config.py\njupyterhub_cookie_secret\njupyterhub.sqlite\njupyterhub.sqlite*\nshare/jupyterhub/static/components\nshare/jupyterhub/static/css/style.css\nshare/jupyterhub/static/css/style.css.map\nshare/jupyterhub/static/css/style.min.css\nshare/jupyterhub/static/css/style.min.css.map\nshare/jupyterhub/static/js/admin-react.js*\n*.egg-info\nMANIFEST\n.coverage\n.coverage.*\nhtmlcov\n.idea/\n.vscode/\n.pytest_cache\npip-wheel-metadata\ndocs/source/reference/metrics.rst\noldest-requirements.txt\njupyterhub-proxy.pid\nexamples/server-api/service-token\n\n*.hot-update*\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.580078125,
          "content": "# pre-commit is a tool to perform a predefined set of tasks manually and/or\n# automatically before git commits are made.\n#\n# Config reference: https://pre-commit.com/#pre-commit-configyaml---top-level\n#\n# Common tasks\n#\n# - Run on all files:   pre-commit run --all-files\n# - Register git hooks: pre-commit install --install-hooks\n#\n\nci:\n  # pre-commit.ci will open PRs updating our hooks once a month\n  autoupdate_schedule: monthly\n\nrepos:\n  # autoformat and lint Python code\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.8.6\n    hooks:\n      - id: ruff\n        types_or:\n          - python\n          - jupyter\n        args: [\"--fix\", \"--show-fixes\"]\n      - id: ruff-format\n        types_or:\n          - python\n          - jupyter\n\n  # Autoformat: markdown, yaml, javascript (see the file .prettierignore)\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v4.0.0-alpha.8\n    hooks:\n      - id: prettier\n        exclude: .*/templates/.*\n\n  # autoformat HTML templates\n  - repo: https://github.com/djlint/djLint\n    rev: v1.36.4\n    hooks:\n      - id: djlint-reformat-jinja\n        files: \".*templates/.*.html\"\n        types_or: [\"html\"]\n        exclude: redoc.html\n      - id: djlint-jinja\n        files: \".*templates/.*.html\"\n        types_or: [\"html\"]\n\n  # Autoformat and linting, misc. details\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: end-of-file-fixer\n        exclude: share/jupyterhub/static/js/admin-react.js\n      - id: requirements-txt-fixer\n      - id: check-case-conflict\n      - id: check-executables-have-shebangs\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.1240234375,
          "content": "share/jupyterhub/templates/\nshare/jupyterhub/static/js/admin-react.js\njupyterhub/singleuser/templates/\ndocs/source/_templates/\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.60546875,
          "content": "# Configuration on how ReadTheDocs (RTD) builds our documentation\n# ref: https://readthedocs.org/projects/jupyterhub/\n# ref: https://docs.readthedocs.io/en/stable/config-file/v2.html\n#\nversion: 2\n\nsphinx:\n  configuration: docs/source/conf.py\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    nodejs: \"20\"\n    python: \"3.11\"\n\npython:\n  install:\n    - path: .\n    - requirements: docs/requirements.txt\n\nformats:\n  # Adding htmlzip enables a Downloads section in the rendered website's RTD\n  # menu where the html build can be downloaded. This doesn't require any\n  # additional configuration in docs/source/conf.py.\n  #\n  - htmlzip\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1259765625,
          "content": "Please refer to [Project Jupyter's Code of Conduct](https://github.com/jupyter/governance/blob/HEAD/conduct/code_of_conduct.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.7783203125,
          "content": "# Contributing to JupyterHub\n\nWelcome! As a [Jupyter](https://jupyter.org) project,\nyou can follow the [Jupyter contributor guide](https://jupyter.readthedocs.io/en/latest/contributing/content-contributor.html).\n\nMake sure to also follow [Project Jupyter's Code of Conduct](https://github.com/jupyter/governance/blob/HEAD/conduct/code_of_conduct.md)\nfor a friendly and welcoming collaborative environment.\n\nPlease see our documentation on\n\n- [Setting up a development install](https://jupyterhub.readthedocs.io/en/latest/contributing/setup.html)\n- [Testing JupyterHub and linting code](https://jupyterhub.readthedocs.io/en/latest/contributing/tests.html)\n\nIf you need some help, feel free to ask on [Gitter](https://gitter.im/jupyterhub/jupyterhub) or [Discourse](https://discourse.jupyter.org/).\n"
        },
        {
          "name": "COPYING.md",
          "type": "blob",
          "size": 2.826171875,
          "content": "# The Jupyter multi-user notebook server licensing terms\n\nJupyter multi-user notebook server is licensed under the terms of the Modified BSD License\n(also known as New or Revised or 3-Clause BSD), as follows:\n\n- Copyright (c) 2014-, Jupyter Development Team\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.\n\nNeither the name of the Jupyter Development Team nor the names of its\ncontributors may be used to endorse or promote products derived from this\nsoftware without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n## About the Jupyter Development Team\n\nThe Jupyter Development Team is the set of all contributors to the Jupyter project.\nThis includes all of the Jupyter subprojects.\n\nThe core team that coordinates development on GitHub can be found here:\nhttps://github.com/jupyter/.\n\n## Our Copyright Policy\n\nJupyter uses a shared copyright model. Each contributor maintains copyright\nover their contributions to Jupyter. But, it is important to note that these\ncontributions are typically only changes to the repositories. Thus, the Jupyter\nsource code, in its entirety is not the copyright of any single person or\ninstitution. Instead, it is the collective copyright of the entire Jupyter\nDevelopment Team. If individual contributors want to maintain a record of what\nchanges/contributions they have specific copyright on, they should indicate\ntheir copyright in the commit message of the change, when they commit the\nchange to one of the Jupyter repositories.\n\nWith this in mind, the following banner should be used in any source code file\nto indicate the copyright and license terms:\n\n    # Copyright (c) Jupyter Development Team.\n    # Distributed under the terms of the Modified BSD License.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 4.666015625,
          "content": "# An incomplete base Docker image for running JupyterHub\n#\n# Add your configuration to create a complete derivative Docker image.\n#\n# Include your configuration settings by starting with one of two options:\n#\n# Option 1:\n#\n# FROM quay.io/jupyterhub/jupyterhub:latest\n#\n# And put your configuration file jupyterhub_config.py in /srv/jupyterhub/jupyterhub_config.py.\n#\n# Option 2:\n#\n# Or you can create your jupyterhub config and database on the host machine, and mount it with:\n#\n# docker run -v $PWD:/srv/jupyterhub -t quay.io/jupyterhub/jupyterhub\n#\n# NOTE\n# If you base on quay.io/jupyterhub/jupyterhub-onbuild\n# your jupyterhub_config.py will be added automatically\n# from your docker directory.\n\n######################################################################\n# This Dockerfile uses multi-stage builds with optimisations to build\n# the JupyterHub wheel on the native architecture only\n# https://www.docker.com/blog/faster-multi-platform-builds-dockerfile-cross-compilation-guide/\n\nARG BASE_IMAGE=ubuntu:22.04\n\n\n######################################################################\n# The JupyterHub wheel is pure Python so can be built for any platform\n# on the native architecture (avoiding QEMU emulation)\nFROM --platform=${BUILDPLATFORM:-linux/amd64} $BASE_IMAGE AS jupyterhub-builder\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Don't clear apt cache, and don't combine RUN commands, so that cached layers can\n# be reused in other stages\n\nRUN apt-get update -qq \\\n && apt-get install -yqq --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    git \\\n    gnupg \\\n    locales \\\n    python3-dev \\\n    python3-pip \\\n    python3-pycurl \\\n    python3-venv \\\n && python3 -m pip install --no-cache-dir --upgrade setuptools pip build wheel\n# Ubuntu 22.04 comes with Nodejs 12 which is too old for building JupyterHub JS\n# It's fine at runtime though (used only by configurable-http-proxy)\nARG NODE_MAJOR=20\nRUN mkdir -p /etc/apt/keyrings \\\n && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \\\n && echo \"deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_$NODE_MAJOR.x nodistro main\" | tee /etc/apt/sources.list.d/nodesource.list \\\n && apt-get update \\\n && apt-get install -yqq --no-install-recommends \\\n    nodejs\n\nWORKDIR /src/jupyterhub\n# copy everything except whats in .dockerignore, its a\n# compromise between needing to rebuild and maintaining\n# what needs to be part of the build\nCOPY . .\n\nARG PIP_CACHE_DIR=/tmp/pip-cache\nRUN --mount=type=cache,target=${PIP_CACHE_DIR} \\\n    python3 -m build --wheel\n\n# verify installed files\nRUN --mount=type=cache,target=${PIP_CACHE_DIR} \\\n    python3 -m pip install ./dist/*.whl \\\n && cd ci \\\n && python3 check_installed_data.py\n\n######################################################################\n# All other wheels required by JupyterHub, some are platform specific\nFROM $BASE_IMAGE AS wheel-builder\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -qq \\\n && apt-get install -yqq --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    locales \\\n    python3-dev \\\n    python3-pip \\\n    python3-pycurl \\\n    python3-venv \\\n && python3 -m pip install --no-cache-dir --upgrade setuptools pip build wheel\n\nWORKDIR /src/jupyterhub\n\nCOPY --from=jupyterhub-builder /src/jupyterhub/dist/*.whl /src/jupyterhub/dist/\nARG PIP_CACHE_DIR=/tmp/pip-cache\nRUN --mount=type=cache,target=${PIP_CACHE_DIR} \\\n    python3 -m pip wheel --wheel-dir wheelhouse dist/*.whl\n\n\n######################################################################\n# The final JupyterHub image, platform specific\nFROM $BASE_IMAGE AS jupyterhub\n\nENV DEBIAN_FRONTEND=noninteractive \\\n    SHELL=/bin/bash \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8 \\\n    PYTHONDONTWRITEBYTECODE=1\n\nEXPOSE 8000\n\nLABEL maintainer=\"Jupyter Project <jupyter@googlegroups.com>\"\nLABEL org.jupyter.service=\"jupyterhub\"\n\nWORKDIR /srv/jupyterhub\n\nRUN apt-get update -qq \\\n && apt-get install -yqq --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    locales \\\n    python-is-python3 \\\n    python3-pip \\\n    python3-pycurl \\\n    nodejs \\\n    npm \\\n && locale-gen $LC_ALL \\\n && npm install -g configurable-http-proxy@^4.2.0 \\\n # clean cache and logs\n && rm -rf /var/lib/apt/lists/* /var/log/* /var/tmp/* ~/.npm\n# install the wheels we built in the previous stage\nRUN --mount=type=cache,from=wheel-builder,source=/src/jupyterhub/wheelhouse,target=/tmp/wheelhouse \\\n    # always make sure pip is up to date!\n    python3 -m pip install --no-compile --no-cache-dir --upgrade setuptools pip \\\n && python3 -m pip install --no-compile --no-cache-dir /tmp/wheelhouse/*\n\nCMD [\"jupyterhub\"]\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.853515625,
          "content": "# using setuptools-scm means we only need to handle _non-tracked files here_\n\ninclude package-lock.json\n\n# include untracked js/css artifacts, components\ngraft share\n\n# prune some large unused files from components.\n# these patterns affect source distributions (sdists)\n# we have stricter exclusions from installation in setup.py:get_data_files\nprune share/jupyterhub/static/components/bootstrap/dist/css\nexclude share/jupyterhub/static/components/bootstrap/dist/fonts/*.svg\nprune share/jupyterhub/static/components/font-awesome/css\nprune share/jupyterhub/static/components/font-awesome/scss\nexclude share/jupyterhub/static/components/font-awesome/fonts/*.svg\nprune share/jupyterhub/static/components/jquery/external\nprune share/jupyterhub/static/components/jquery/src\nprune share/jupyterhub/static/components/moment/lang\nprune share/jupyterhub/static/components/moment/min\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.37890625,
          "content": "**[Technical Overview](#technical-overview)** |\n**[Installation](#installation)** |\n**[Configuration](#configuration)** |\n**[Docker](#docker)** |\n**[Contributing](#contributing)** |\n**[License](#license)** |\n**[Help and Resources](#help-and-resources)**\n\n---\n\n# [JupyterHub](https://github.com/jupyterhub/jupyterhub)\n\n[![Latest PyPI version](https://img.shields.io/pypi/v/jupyterhub?logo=pypi)](https://pypi.python.org/pypi/jupyterhub)\n[![Latest conda-forge version](https://img.shields.io/conda/vn/conda-forge/jupyterhub?logo=conda-forge)](https://anaconda.org/conda-forge/jupyterhub)\n[![Documentation build status](https://img.shields.io/readthedocs/jupyterhub?logo=read-the-docs)](https://jupyterhub.readthedocs.org/en/latest/)\n[![GitHub Workflow Status - Test](https://img.shields.io/github/workflow/status/jupyterhub/jupyterhub/Test?logo=github&label=tests)](https://github.com/jupyterhub/jupyterhub/actions)\n[![Test coverage of code](https://codecov.io/gh/jupyterhub/jupyterhub/branch/main/graph/badge.svg)](https://codecov.io/gh/jupyterhub/jupyterhub)\n[![GitHub](https://img.shields.io/badge/issue_tracking-github-blue?logo=github)](https://github.com/jupyterhub/jupyterhub/issues)\n[![Discourse](https://img.shields.io/badge/help_forum-discourse-blue?logo=discourse)](https://discourse.jupyter.org/c/jupyterhub)\n[![Gitter](https://img.shields.io/badge/social_chat-gitter-blue?logo=gitter)](https://gitter.im/jupyterhub/jupyterhub)\n\nWith [JupyterHub](https://jupyterhub.readthedocs.io) you can create a\n**multi-user Hub** that spawns, manages, and proxies multiple instances of the\nsingle-user [Jupyter notebook](https://jupyter-notebook.readthedocs.io)\nserver.\n\n[Project Jupyter](https://jupyter.org) created JupyterHub to support many\nusers. The Hub can offer notebook servers to a class of students, a corporate\ndata science workgroup, a scientific research project, or a high-performance\ncomputing group.\n\n## Technical overview\n\nThree main actors make up JupyterHub:\n\n- multi-user **Hub** (tornado process)\n- configurable http **proxy** (node-http-proxy)\n- multiple **single-user Jupyter notebook servers** (Python/Jupyter/tornado)\n\nBasic principles for operation are:\n\n- Hub launches a proxy.\n- The Proxy forwards all requests to Hub by default.\n- Hub handles login and spawns single-user servers on demand.\n- Hub configures proxy to forward URL prefixes to the single-user notebook\n  servers.\n\nJupyterHub also provides a\n[REST API][]\nfor administration of the Hub and its users.\n\n[rest api]: https://jupyterhub.readthedocs.io/en/latest/reference/rest-api.html\n\n## Installation\n\n### Check prerequisites\n\n- A Linux/Unix based system\n- [Python](https://www.python.org/downloads/) 3.8 or greater\n- [nodejs/npm](https://www.npmjs.com/)\n\n  - If you are using **`conda`**, the nodejs and npm dependencies will be installed for\n    you by conda.\n\n  - If you are using **`pip`**, install a recent version (at least 12.0) of\n    [nodejs/npm](https://docs.npmjs.com/getting-started/installing-node).\n\n- If using the default PAM Authenticator, a [pluggable authentication module (PAM)](https://en.wikipedia.org/wiki/Pluggable_authentication_module).\n- TLS certificate and key for HTTPS communication\n- Domain name\n\n### Install packages\n\n#### Using `conda`\n\nTo install JupyterHub along with its dependencies including nodejs/npm:\n\n```bash\nconda install -c conda-forge jupyterhub\n```\n\nIf you plan to run notebook servers locally, install JupyterLab or Jupyter notebook:\n\n```bash\nconda install jupyterlab\nconda install notebook\n```\n\n#### Using `pip`\n\nJupyterHub can be installed with `pip`, and the proxy with `npm`:\n\n```bash\nnpm install -g configurable-http-proxy\npython3 -m pip install jupyterhub\n```\n\nIf you plan to run notebook servers locally, you will need to install\n[JupyterLab or Jupyter notebook](https://jupyter.readthedocs.io/en/latest/install.html):\n\n    python3 -m pip install --upgrade jupyterlab\n    python3 -m pip install --upgrade notebook\n\n### Run the Hub server\n\nTo start the Hub server, run the command:\n\n    jupyterhub\n\nVisit `http://localhost:8000` in your browser, and sign in with your system username and password.\n\n_Note_: To allow multiple users to sign in to the server, you will need to\nrun the `jupyterhub` command as a _privileged user_, such as root.\nThe [wiki](https://github.com/jupyterhub/jupyterhub/wiki/Using-sudo-to-run-JupyterHub-without-root-privileges)\ndescribes how to run the server as a _less privileged user_, which requires\nmore configuration of the system.\n\n## Configuration\n\nThe [Getting Started](https://jupyterhub.readthedocs.io/en/latest/tutorial/index.html#getting-started) section of the\ndocumentation explains the common steps in setting up JupyterHub.\n\nThe [**JupyterHub tutorial**](https://github.com/jupyterhub/jupyterhub-tutorial)\nprovides an in-depth video and sample configurations of JupyterHub.\n\n### Create a configuration file\n\nTo generate a default config file with settings and descriptions:\n\n    jupyterhub --generate-config\n\n### Start the Hub\n\nTo start the Hub on a specific url and port `10.0.1.2:443` with **https**:\n\n    jupyterhub --ip 10.0.1.2 --port 443 --ssl-key my_ssl.key --ssl-cert my_ssl.cert\n\n### Authenticators\n\n| Authenticator                                                                | Description                                       |\n| ---------------------------------------------------------------------------- | ------------------------------------------------- |\n| PAMAuthenticator                                                             | Default, built-in authenticator                   |\n| [OAuthenticator](https://github.com/jupyterhub/oauthenticator)               | OAuth + JupyterHub Authenticator = OAuthenticator |\n| [ldapauthenticator](https://github.com/jupyterhub/ldapauthenticator)         | Simple LDAP Authenticator Plugin for JupyterHub   |\n| [kerberosauthenticator](https://github.com/jupyterhub/kerberosauthenticator) | Kerberos Authenticator Plugin for JupyterHub      |\n\n### Spawners\n\n| Spawner                                                        | Description                                                                |\n| -------------------------------------------------------------- | -------------------------------------------------------------------------- |\n| LocalProcessSpawner                                            | Default, built-in spawner starts single-user servers as local processes    |\n| [dockerspawner](https://github.com/jupyterhub/dockerspawner)   | Spawn single-user servers in Docker containers                             |\n| [kubespawner](https://github.com/jupyterhub/kubespawner)       | Kubernetes spawner for JupyterHub                                          |\n| [sudospawner](https://github.com/jupyterhub/sudospawner)       | Spawn single-user servers without being root                               |\n| [systemdspawner](https://github.com/jupyterhub/systemdspawner) | Spawn single-user notebook servers using systemd                           |\n| [batchspawner](https://github.com/jupyterhub/batchspawner)     | Designed for clusters using batch scheduling software                      |\n| [yarnspawner](https://github.com/jupyterhub/yarnspawner)       | Spawn single-user notebook servers distributed on a Hadoop cluster         |\n| [wrapspawner](https://github.com/jupyterhub/wrapspawner)       | WrapSpawner and ProfilesSpawner enabling runtime configuration of spawners |\n\n## Docker\n\nA starter [**docker image for JupyterHub**](https://quay.io/repository/jupyterhub/jupyterhub)\ngives a baseline deployment of JupyterHub using Docker.\n\n**Important:** This `quay.io/jupyterhub/jupyterhub` image contains only the Hub itself,\nwith no configuration. In general, one needs to make a derivative image, with\nat least a `jupyterhub_config.py` setting up an Authenticator and/or a Spawner.\nTo run the single-user servers, which may be on the same system as the Hub or\nnot, Jupyter Notebook version 4 or greater must be installed.\n\nThe JupyterHub docker image can be started with the following command:\n\n    docker run -p 8000:8000 -d --name jupyterhub quay.io/jupyterhub/jupyterhub jupyterhub\n\nThis command will create a container named `jupyterhub` that you can\n**stop and resume** with `docker stop/start`.\n\nThe Hub service will be listening on all interfaces at port 8000, which makes\nthis a good choice for **testing JupyterHub on your desktop or laptop**.\n\nIf you want to run docker on a computer that has a public IP then you should\n(as in MUST) **secure it with ssl** by adding ssl options to your docker\nconfiguration or by using an ssl enabled proxy.\n\n[Mounting volumes](https://docs.docker.com/engine/admin/volumes/volumes/) will\nallow you to **store data outside the docker image (host system) so it will be persistent**, even when you start\na new image.\n\nThe command `docker exec -it jupyterhub bash` will spawn a root shell in your docker\ncontainer. You can **use the root shell to create system users in the container**.\nThese accounts will be used for authentication in JupyterHub's default configuration.\n\n## Contributing\n\nIf you would like to contribute to the project, please read our\n[contributor documentation](https://jupyter.readthedocs.io/en/latest/contributing/content-contributor.html)\nand the [`CONTRIBUTING.md`](CONTRIBUTING.md). The `CONTRIBUTING.md` file\nexplains how to set up a development installation, how to run the test suite,\nand how to contribute to documentation.\n\nFor a high-level view of the vision and next directions of the project, see the\n[JupyterHub community roadmap](docs/source/contributing/roadmap.md).\n\n### A note about platform support\n\nJupyterHub is supported on Linux/Unix based systems.\n\nJupyterHub officially **does not** support Windows. You may be able to use\nJupyterHub on Windows if you use a Spawner and Authenticator that work on\nWindows, but the JupyterHub defaults will not. Bugs reported on Windows will not\nbe accepted, and the test suite will not run on Windows. Small patches that fix\nminor Windows compatibility issues (such as basic installation) **may** be accepted,\nhowever. For Windows-based systems, we would recommend running JupyterHub in a\ndocker container or Linux VM.\n\n[Additional Reference:](http://www.tornadoweb.org/en/stable/#installation) Tornado's documentation on Windows platform support\n\n## License\n\nWe use a shared copyright model that enables all contributors to maintain the\ncopyright on their contributions.\n\nAll code is licensed under the terms of the [revised BSD license](./COPYING.md).\n\n## Help and resources\n\nWe encourage you to ask questions and share ideas on the [Jupyter community forum](https://discourse.jupyter.org/).\nYou can also talk with us on our JupyterHub [Gitter](https://gitter.im/jupyterhub/jupyterhub) channel.\n\n- [Reporting Issues](https://github.com/jupyterhub/jupyterhub/issues)\n- [JupyterHub tutorial](https://github.com/jupyterhub/jupyterhub-tutorial)\n- [Documentation for JupyterHub](https://jupyterhub.readthedocs.io/en/latest/)\n- [Documentation for JupyterHub's REST API][rest api]\n- [Documentation for Project Jupyter](http://jupyter.readthedocs.io/en/latest/index.html)\n- [Project Jupyter website](https://jupyter.org)\n- [Project Jupyter community](https://jupyter.org/community)\n\nJupyterHub follows the Jupyter [Community Guides](https://jupyter.readthedocs.io/en/latest/community/content-community.html).\n\n---\n\n**[Technical Overview](#technical-overview)** |\n**[Installation](#installation)** |\n**[Configuration](#configuration)** |\n**[Docker](#docker)** |\n**[Contributing](#contributing)** |\n**[License](#license)** |\n**[Help and Resources](#help-and-resources)**\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 1.5341796875,
          "content": "# How to make a release\n\n`jupyterhub` is a package available on [PyPI][] and [conda-forge][].\nThese are instructions on how to make a release.\n\n## Pre-requisites\n\n- Push rights to [jupyterhub/jupyterhub][]\n- Push rights to [conda-forge/jupyterhub-feedstock][]\n\n## Steps to make a release\n\n1. Create a PR updating `docs/source/changelog.md` with [github-activity][] and\n   continue only when its merged.\n\n   ```shell\n   pip install github-activity\n\n   github-activity --heading-level=3 jupyterhub/jupyterhub\n   ```\n\n1. Checkout main and make sure it is up to date.\n\n   ```shell\n   git checkout main\n   git fetch origin main\n   git reset --hard origin/main\n   ```\n\n1. Update the version, make commits, and push a git tag with `tbump`.\n\n   ```shell\n   pip install tbump\n   tbump --dry-run ${VERSION}\n\n   tbump ${VERSION}\n   ```\n\n   Following this, the [CI system][] will build and publish a release.\n\n1. Reset the version back to dev, e.g. `2.1.0.dev` after releasing `2.0.0`\n\n   ```shell\n   tbump --no-tag ${NEXT_VERSION}.dev\n   ```\n\n1. Following the release to PyPI, an automated PR should arrive to\n   [conda-forge/jupyterhub-feedstock][] with instructions.\n\n[pypi]: https://pypi.org/project/jupyterhub/\n[conda-forge]: https://anaconda.org/conda-forge/jupyterhub\n[jupyterhub/jupyterhub]: https://github.com/jupyterhub/jupyterhub\n[conda-forge/jupyterhub-feedstock]: https://github.com/conda-forge/jupyterhub-feedstock\n[github-activity]: https://github.com/executablebooks/github-activity\n[ci system]: https://github.com/jupyterhub/jupyterhub/actions/workflows/release.yml\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.3388671875,
          "content": "# Reporting a Vulnerability\n\nIf you believe you’ve found a security vulnerability in a Jupyter\nproject, please report it to security@ipython.org. If you prefer to\nencrypt your security reports, you can use [this PGP public key](https://jupyter-notebook.readthedocs.io/en/stable/_downloads/1d303a645f2505a8fd283826fafc9908/ipython_security.asc).\n"
        },
        {
          "name": "bower-lite",
          "type": "blob",
          "size": 0.8017578125,
          "content": "#!/usr/bin/env python\n# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\"\"\"\nbower-lite\n\nSince Bower's on its way out,\nstage frontend dependencies from node_modules into components\n\"\"\"\n\nimport json\nimport os\nimport shutil\nfrom os.path import join\n\nHERE = os.path.abspath(os.path.dirname(__file__))\n\n\ncomponents = join(HERE, \"share\", \"jupyterhub\", \"static\", \"components\")\nnode_modules = join(HERE, \"node_modules\")\n\nif os.path.exists(components):\n    shutil.rmtree(components)\nos.mkdir(components)\n\nwith open(join(HERE, 'package.json')) as f:\n    package_json = json.load(f)\n\ndependencies = package_json['dependencies']\nfor dep in dependencies:\n    src = join(node_modules, dep)\n    dest = join(components, dep)\n    print(f\"{src} -> {dest}\")\n    shutil.copytree(src, dest)\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-image",
          "type": "tree",
          "content": null
        },
        {
          "name": "dockerfiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsx",
          "type": "tree",
          "content": null
        },
        {
          "name": "jupyterhub",
          "type": "tree",
          "content": null
        },
        {
          "name": "onbuild",
          "type": "tree",
          "content": null
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 17.1630859375,
          "content": "{\n  \"name\": \"jupyterhub-deps\",\n  \"version\": \"0.0.0\",\n  \"lockfileVersion\": 3,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"jupyterhub-deps\",\n      \"version\": \"0.0.0\",\n      \"hasInstallScript\": true,\n      \"license\": \"BSD-3-Clause\",\n      \"dependencies\": {\n        \"@fortawesome/fontawesome-free\": \"^6.1.1\",\n        \"bootstrap\": \"^5.3.0\",\n        \"jquery\": \"^3.5.1\",\n        \"moment\": \"^2.29.4\",\n        \"requirejs\": \"^2.3.6\"\n      },\n      \"devDependencies\": {\n        \"sass\": \"^1.74.1\"\n      }\n    },\n    \"node_modules/@fortawesome/fontawesome-free\": {\n      \"version\": \"6.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/@fortawesome/fontawesome-free/-/fontawesome-free-6.7.2.tgz\",\n      \"integrity\": \"sha512-JUOtgFW6k9u4Y+xeIaEiLr3+cjoUPiAuLXoyKOJSia6Duzb7pq+A76P9ZdPDoAoxHdHzq6gE9/jKBGXlZT8FbA==\",\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/@parcel/watcher\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher/-/watcher-2.4.1.tgz\",\n      \"integrity\": \"sha512-HNjmfLQEVRZmHRET336f20H/8kOozUGwk7yajvsonjNxbj2wBTK1WsQuHkD5yYh9RxFGL2EyDHryOihOwUoKDA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"detect-libc\": \"^1.0.3\",\n        \"is-glob\": \"^4.0.3\",\n        \"micromatch\": \"^4.0.5\",\n        \"node-addon-api\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      },\n      \"optionalDependencies\": {\n        \"@parcel/watcher-android-arm64\": \"2.4.1\",\n        \"@parcel/watcher-darwin-arm64\": \"2.4.1\",\n        \"@parcel/watcher-darwin-x64\": \"2.4.1\",\n        \"@parcel/watcher-freebsd-x64\": \"2.4.1\",\n        \"@parcel/watcher-linux-arm-glibc\": \"2.4.1\",\n        \"@parcel/watcher-linux-arm64-glibc\": \"2.4.1\",\n        \"@parcel/watcher-linux-arm64-musl\": \"2.4.1\",\n        \"@parcel/watcher-linux-x64-glibc\": \"2.4.1\",\n        \"@parcel/watcher-linux-x64-musl\": \"2.4.1\",\n        \"@parcel/watcher-win32-arm64\": \"2.4.1\",\n        \"@parcel/watcher-win32-ia32\": \"2.4.1\",\n        \"@parcel/watcher-win32-x64\": \"2.4.1\"\n      }\n    },\n    \"node_modules/@parcel/watcher-android-arm64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-android-arm64/-/watcher-android-arm64-2.4.1.tgz\",\n      \"integrity\": \"sha512-LOi/WTbbh3aTn2RYddrO8pnapixAziFl6SMxHM69r3tvdSm94JtCenaKgk1GRg5FJ5wpMCpHeW+7yqPlvZv7kg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-darwin-arm64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-darwin-arm64/-/watcher-darwin-arm64-2.4.1.tgz\",\n      \"integrity\": \"sha512-ln41eihm5YXIY043vBrrHfn94SIBlqOWmoROhsMVTSXGh0QahKGy77tfEywQ7v3NywyxBBkGIfrWRHm0hsKtzA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-darwin-x64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-darwin-x64/-/watcher-darwin-x64-2.4.1.tgz\",\n      \"integrity\": \"sha512-yrw81BRLjjtHyDu7J61oPuSoeYWR3lDElcPGJyOvIXmor6DEo7/G2u1o7I38cwlcoBHQFULqF6nesIX3tsEXMg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-freebsd-x64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-freebsd-x64/-/watcher-freebsd-x64-2.4.1.tgz\",\n      \"integrity\": \"sha512-TJa3Pex/gX3CWIx/Co8k+ykNdDCLx+TuZj3f3h7eOjgpdKM+Mnix37RYsYU4LHhiYJz3DK5nFCCra81p6g050w==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-arm-glibc\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm-glibc/-/watcher-linux-arm-glibc-2.4.1.tgz\",\n      \"integrity\": \"sha512-4rVYDlsMEYfa537BRXxJ5UF4ddNwnr2/1O4MHM5PjI9cvV2qymvhwZSFgXqbS8YoTk5i/JR0L0JDs69BUn45YA==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-arm64-glibc\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm64-glibc/-/watcher-linux-arm64-glibc-2.4.1.tgz\",\n      \"integrity\": \"sha512-BJ7mH985OADVLpbrzCLgrJ3TOpiZggE9FMblfO65PlOCdG++xJpKUJ0Aol74ZUIYfb8WsRlUdgrZxKkz3zXWYA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-arm64-musl\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-arm64-musl/-/watcher-linux-arm64-musl-2.4.1.tgz\",\n      \"integrity\": \"sha512-p4Xb7JGq3MLgAfYhslU2SjoV9G0kI0Xry0kuxeG/41UfpjHGOhv7UoUDAz/jb1u2elbhazy4rRBL8PegPJFBhA==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-x64-glibc\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-x64-glibc/-/watcher-linux-x64-glibc-2.4.1.tgz\",\n      \"integrity\": \"sha512-s9O3fByZ/2pyYDPoLM6zt92yu6P4E39a03zvO0qCHOTjxmt3GHRMLuRZEWhWLASTMSrrnVNWdVI/+pUElJBBBg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-linux-x64-musl\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-linux-x64-musl/-/watcher-linux-x64-musl-2.4.1.tgz\",\n      \"integrity\": \"sha512-L2nZTYR1myLNST0O632g0Dx9LyMNHrn6TOt76sYxWLdff3cB22/GZX2UPtJnaqQPdCRoszoY5rcOj4oMTtp5fQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-win32-arm64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-arm64/-/watcher-win32-arm64-2.4.1.tgz\",\n      \"integrity\": \"sha512-Uq2BPp5GWhrq/lcuItCHoqxjULU1QYEcyjSO5jqqOK8RNFDBQnenMMx4gAl3v8GiWa59E9+uDM7yZ6LxwUIfRg==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-win32-ia32\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-ia32/-/watcher-win32-ia32-2.4.1.tgz\",\n      \"integrity\": \"sha512-maNRit5QQV2kgHFSYwftmPBxiuK5u4DXjbXx7q6eKjq5dsLXZ4FJiVvlcw35QXzk0KrUecJmuVFbj4uV9oYrcw==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@parcel/watcher-win32-x64\": {\n      \"version\": \"2.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/@parcel/watcher-win32-x64/-/watcher-win32-x64-2.4.1.tgz\",\n      \"integrity\": \"sha512-+DvS92F9ezicfswqrvIRM2njcYJbd5mb9CUgtrHCHmvn7pPPa+nMDRu1o1bYYz/l5IB2NVGNJWiH7h1E58IF2A==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">= 10.0.0\"\n      },\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/parcel\"\n      }\n    },\n    \"node_modules/@popperjs/core\": {\n      \"version\": \"2.11.8\",\n      \"resolved\": \"https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz\",\n      \"integrity\": \"sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==\",\n      \"peer\": true,\n      \"funding\": {\n        \"type\": \"opencollective\",\n        \"url\": \"https://opencollective.com/popperjs\"\n      }\n    },\n    \"node_modules/bootstrap\": {\n      \"version\": \"5.3.3\",\n      \"resolved\": \"https://registry.npmjs.org/bootstrap/-/bootstrap-5.3.3.tgz\",\n      \"integrity\": \"sha512-8HLCdWgyoMguSO9o+aH+iuZ+aht+mzW0u3HIMzVu7Srrpv7EBBxTnrFlSCskwdY1+EOFQSm7uMJhNQHkdPcmjg==\",\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/twbs\"\n        },\n        {\n          \"type\": \"opencollective\",\n          \"url\": \"https://opencollective.com/bootstrap\"\n        }\n      ],\n      \"peerDependencies\": {\n        \"@popperjs/core\": \"^2.11.8\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-4.0.1.tgz\",\n      \"integrity\": \"sha512-n8enUVCED/KVRQlab1hr3MVpcVMvxtZjmEa956u+4YijlmQED223XMSYj2tLuKvr4jcCTzNNMpQDUer72MMmzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"readdirp\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 14.16.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://paulmillr.com/funding/\"\n      }\n    },\n    \"node_modules/detect-libc\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/detect-libc/-/detect-libc-1.0.3.tgz\",\n      \"integrity\": \"sha512-pGjwhsmsp4kL2RTz08wcOlGN83otlqHeD/Z5T8GXZB+/YcpQ/dgo+lbU8ZsGxV0HIvqqxo9l7mqYwyYMD9bKDg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"bin\": {\n        \"detect-libc\": \"bin/detect-libc.js\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10\"\n      }\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/immutable\": {\n      \"version\": \"5.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/immutable/-/immutable-5.0.3.tgz\",\n      \"integrity\": \"sha512-P8IdPQHq3lA1xVeBRi5VPqUm5HDgKnx0Ru51wZz5mjxHr5n3RWhjIpOFU7ybkUxfB+5IToy+OLaHYDBIWsv+uw==\",\n      \"dev\": true,\n      \"license\": \"MIT\"\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/jquery\": {\n      \"version\": \"3.7.1\",\n      \"resolved\": \"https://registry.npmjs.org/jquery/-/jquery-3.7.1.tgz\",\n      \"integrity\": \"sha512-m4avr8yL8kmFN8psrbFFFmB/If14iN5o9nw/NgnnM+kybDJpRsAynV2BsfpTYrTRysYUdADVD7CkUUizgkpLfg==\"\n    },\n    \"node_modules/micromatch\": {\n      \"version\": \"4.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/micromatch/-/micromatch-4.0.8.tgz\",\n      \"integrity\": \"sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"braces\": \"^3.0.3\",\n        \"picomatch\": \"^2.3.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.6\"\n      }\n    },\n    \"node_modules/moment\": {\n      \"version\": \"2.30.1\",\n      \"resolved\": \"https://registry.npmjs.org/moment/-/moment-2.30.1.tgz\",\n      \"integrity\": \"sha512-uEmtNhbDOrWPFS+hdjFCBfy9f2YoyzRpwcl+DqpC6taX21FzsTLQVbMV/W7PzNSX6x/bhC1zA3c2UQ5NzH6how==\",\n      \"engines\": {\n        \"node\": \"*\"\n      }\n    },\n    \"node_modules/node-addon-api\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/node-addon-api/-/node-addon-api-7.1.1.tgz\",\n      \"integrity\": \"sha512-5m3bsyrjFWE1xf7nz7YXdN4udnVtXK6/Yfgn5qnahL6bCkf2yKt4k3nuTKAtT4r3IG8JNR2ncsIMdZuAzJjHQQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-4.0.1.tgz\",\n      \"integrity\": \"sha512-GkMg9uOTpIWWKbSsgwb5fA4EavTR+SG/PMPoAY8hkhHfEEY0/vqljY+XHqtDf2cr2IJtoNRDbrrEpZUiZCkYRw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">= 14.16.0\"\n      },\n      \"funding\": {\n        \"type\": \"individual\",\n        \"url\": \"https://paulmillr.com/funding/\"\n      }\n    },\n    \"node_modules/requirejs\": {\n      \"version\": \"2.3.7\",\n      \"resolved\": \"https://registry.npmjs.org/requirejs/-/requirejs-2.3.7.tgz\",\n      \"integrity\": \"sha512-DouTG8T1WanGok6Qjg2SXuCMzszOo0eHeH9hDZ5Y4x8Je+9JB38HdTLT4/VA8OaUhBa0JPVHJ0pyBkM1z+pDsw==\",\n      \"license\": \"MIT\",\n      \"bin\": {\n        \"r_js\": \"bin/r.js\",\n        \"r.js\": \"bin/r.js\"\n      },\n      \"engines\": {\n        \"node\": \">=0.4.0\"\n      }\n    },\n    \"node_modules/sass\": {\n      \"version\": \"1.83.0\",\n      \"resolved\": \"https://registry.npmjs.org/sass/-/sass-1.83.0.tgz\",\n      \"integrity\": \"sha512-qsSxlayzoOjdvXMVLkzF84DJFc2HZEL/rFyGIKbbilYtAvlCxyuzUeff9LawTn4btVnLKg75Z8MMr1lxU1lfGw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chokidar\": \"^4.0.0\",\n        \"immutable\": \"^5.0.2\",\n        \"source-map-js\": \">=0.6.2 <2.0.0\"\n      },\n      \"bin\": {\n        \"sass\": \"sass.js\"\n      },\n      \"engines\": {\n        \"node\": \">=14.0.0\"\n      },\n      \"optionalDependencies\": {\n        \"@parcel/watcher\": \"^2.4.1\"\n      }\n    },\n    \"node_modules/source-map-js\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.0.tgz\",\n      \"integrity\": \"sha512-itJW8lvSA0TXEphiRoawsCksnlf8SyvmFzIhltqAHluXd88pkCd+cXJVHTDwdCr0IzwptSm035IHQktUu1QUMg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.7490234375,
          "content": "{\n  \"name\": \"jupyterhub-deps\",\n  \"version\": \"0.0.0\",\n  \"description\": \"JupyterHub nodejs dependencies\",\n  \"author\": \"Jupyter Developers\",\n  \"license\": \"BSD-3-Clause\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/jupyter/jupyterhub.git\"\n  },\n  \"scripts\": {\n    \"postinstall\": \"python3 ./bower-lite\",\n    \"css\": \"sass --style compressed -I share/jupyterhub/static/components --source-map share/jupyterhub/static/scss/style.scss:share/jupyterhub/static/css/style.min.css\",\n    \"build:watch\": \"npm run css -- --watch\"\n  },\n  \"devDependencies\": {\n    \"sass\": \"^1.74.1\"\n  },\n  \"dependencies\": {\n    \"@fortawesome/fontawesome-free\": \"^6.1.1\",\n    \"bootstrap\": \"^5.3.0\",\n    \"jquery\": \"^3.5.1\",\n    \"moment\": \"^2.29.4\",\n    \"requirejs\": \"^2.3.6\"\n  }\n}\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 4.9140625,
          "content": "# PEP 621 build info\n[build-system]\nrequires = [\"setuptools>=61\", \"setuptools-scm\"]\nbuild-backend = \"setuptools.build_meta\"\n\n# Project metadata\n# ref: https://setuptools.pypa.io/en/latest/userguide/pyproject_config.html\n[project]\nname = \"jupyterhub\"\nversion = \"5.3.0.dev\"\ndynamic = [\"readme\", \"dependencies\"]\ndescription = \"JupyterHub: A multi-user server for Jupyter notebooks\"\nauthors = [\n  { name = \"Jupyter Development Team\", email = \"jupyter@googlegroups.com\" },\n]\nkeywords = [\"Interactive\", \"Interpreter\", \"Shell\", \"Web\", \"Jupyter\"]\nlicense = { text = \"BSD-3-Clause\" }\nrequires-python = \">=3.8\"\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"Intended Audience :: Developers\",\n  \"Intended Audience :: System Administrators\",\n  \"Intended Audience :: Science/Research\",\n  \"License :: OSI Approved :: BSD License\",\n  \"Programming Language :: Python\",\n  \"Programming Language :: Python :: 3\",\n  \"Operating System :: POSIX\",\n  \"Framework :: Jupyter\",\n]\n\n[project.urls]\nHomepage = \"https://hub.jupyter.org\"\nDocumentation = \"https://jupyterhub.readthedocs.io\"\nFunding = \"https://jupyter.org/about\"\nSource = \"https://github.com/jupyterhub/jupyterhub\"\nTracker = \"https://github.com/jupyterhub/jupyterhub/issues\"\n\n[project.optional-dependencies]\n# note: updating test dependencies here\n# may require matching updates in ci/oldest-dependencies/\ntest = [\n  \"beautifulsoup4[html5lib]\",\n  \"coverage\",\n  # cryptography is an optional dependency for jupyterhub that we test\n  # against by default\n  \"cryptography\",\n  \"jsonschema\",\n  \"jupyterlab>=3\",\n  \"mock\",\n  # nbclassic provides the '/tree/' handler that we tests against in\n  # the test test_nbclassic_control_panel.\n  \"nbclassic\",\n  \"pytest>=3.3\",\n  \"pytest-asyncio>=0.17,!=0.23.*\",\n  \"pytest-cov\",\n  \"pytest-rerunfailures\",\n  \"requests-mock\",\n  \"playwright\",\n  \"virtualenv\",\n]\n\n[project.scripts]\njupyterhub = \"jupyterhub.app:main\"\njupyterhub-singleuser = \"jupyterhub.singleuser:main\"\n\n[project.entry-points.\"jupyterhub.authenticators\"]\ndefault = \"jupyterhub.auth:PAMAuthenticator\"\npam = \"jupyterhub.auth:PAMAuthenticator\"\ndummy = \"jupyterhub.auth:DummyAuthenticator\"\nnull = \"jupyterhub.auth:NullAuthenticator\"\n\n[project.entry-points.\"jupyterhub.proxies\"]\ndefault = \"jupyterhub.proxy:ConfigurableHTTPProxy\"\nconfigurable-http-proxy = \"jupyterhub.proxy:ConfigurableHTTPProxy\"\n\n[project.entry-points.\"jupyterhub.spawners\"]\ndefault = \"jupyterhub.spawner:LocalProcessSpawner\"\nlocalprocess = \"jupyterhub.spawner:LocalProcessSpawner\"\nsimple = \"jupyterhub.spawner:SimpleLocalProcessSpawner\"\n\n[tool.setuptools]\nzip-safe = false\nlicense-files = [\"COPYING.md\"]\ninclude-package-data = true\n\n[tool.setuptools.packages.find]\nwhere = [\"\"]\ninclude = [\"jupyterhub*\"]\n\n# dynamic sources of metadata in other files\n[tool.setuptools.dynamic]\nreadme = { file = \"README.md\", content-type = \"text/markdown\" }\ndependencies = { file = \"requirements.txt\" }\n\n# setuptools_scm needs a section to be present\n[tool.setuptools_scm]\n# we don't actually use setuptools_scm for versions,\n# only the file-finder\nfallback_version = \"0.0.0\"\n\n# declarative data-files doesn't quite work right\n# this is still in setup.py:get_data_files\n# [tool.setuptools.data-files]\n# \"share/jupyterhub\" = [\"share/jupyterhub/**\"]\n\n# ruff is our linter and formatter\n\n[tool.ruff.format]\nquote-style = \"preserve\"\n\n[tool.ruff.lint]\nignore = [\n    \"F841\", # unused variable\n]\nselect = [\n    \"E9\", # syntax\n    \"I\", # isort\n    \"UP\", # pyupgrade\n    \"F\", # flake8\n]\n\n# djlint lints/formats our jinja templates\n# https://djlint.com/docs/configuration/\n[tool.djlint]\nindent = 2\n# ignore often-incorrect lint\n# H006: image height/width attributes\n# ignore style lint that formatter doesn't catch\n# H008: double-quotes\n# H029: form method case\nignore = \"H006,H008,H021,H029\"\nuse_gitignore = true\n\nformat_js = true\n\n[tool.djlint.js]\nindent_size = 2\n\n# tbump is used to simplify and standardize the release process when updating\n# the version, making a git commit and tag, and pushing changes.\n#\n# ref: https://github.com/your-tools/tbump#readme\n#\n[tool.tbump]\n# Uncomment this if your project is hosted on GitHub:\ngithub_url = \"https://github.com/jupyterhub/jupyterhub\"\n\n[tool.tbump.version]\ncurrent = \"5.3.0.dev\"\n\n# Example of a semver regexp.\n# Make sure this matches current_version before\n# using tbump\nregex = '''\n  (?P<major>\\d+)\n  \\.\n  (?P<minor>\\d+)\n  \\.\n  (?P<patch>\\d+)\n  (?P<pre>((a|b|rc)\\d+)|)\n  \\.?\n  (?P<dev>(?<=\\.)dev\\d*|)\n  '''\n\n[tool.tbump.git]\nmessage_template = \"Bump to {new_version}\"\ntag_template = \"{new_version}\"\n\n# For each file to patch, add a [[tool.tbump.file]] config\n# section containing the path of the file, relative to the\n# pyproject.toml location.\n\n[[tool.tbump.file]]\nsrc = \"pyproject.toml\"\nsearch = 'version = \"{current_version}\"'\n\n[[tool.tbump.file]]\nsrc = \"jupyterhub/_version.py\"\nversion_template = '({major}, {minor}, {patch}, \"{pre}\", \"{dev}\")'\nsearch = \"version_info = {current_version}\"\n\n[[tool.tbump.file]]\nsrc = \"docs/source/_static/rest-api.yml\"\nsearch = \"version: {current_version}\"\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.9287109375,
          "content": "[pytest]\n# pytest 3.10 has broken minversion checks,\n# so we have to disable this until pytest 3.11\n# minversion = 3.3\n\n# automatically run coroutine tests with asyncio\nasyncio_mode = auto\n# use module-level loop scope (requires pytest-asyncio 0.24)\nasyncio_default_fixture_loop_scope = module\n\n# jupyter_server plugin is incompatible with notebook imports\naddopts = -p no:jupyter_server -m 'not browser' --color yes --durations 10 --verbose\n\npython_files = test_*.py\nmarkers =\n    gen_test: marks an async tornado test\n    group: mark as a test for groups\n    services: mark as a services test\n    user: mark as a test for a user\n    slow: mark a test as slow\n    role: mark as a test for roles\n    browser: web tests that run with playwright\n\nfilterwarnings =\n    ignore:.*The new signature is \"def engine_connect\\(conn\\)\"*:sqlalchemy.exc.SADeprecationWarning\n    ignore:.*The new signature is \"def engine_connect\\(conn\\)\"*:sqlalchemy.exc.SAWarning\n"
        },
        {
          "name": "redocly.yaml",
          "type": "blob",
          "size": 1.0908203125,
          "content": "extends:\n  - recommended-strict\n\napis:\n  rest:\n    root: ./docs/source/_static/rest-api.yml\n    rules:\n      info-license-url: off\n      operation-4xx-response: off\n\n# custom rules\n# https://redocly.com/docs/cli/rules/configurable-rules/\nrules:\n  rule/required-items-in-array-schemas:\n    subject:\n      type: Schema\n    assertions:\n      required:\n        - items\n    where:\n      - subject:\n          type: Schema\n          property: type\n        assertions:\n          const: array\n          defined: true\n    message: The 'items' field is required for schemas of array type.\n\n  rule/require-schema-type:\n    subject:\n      type: Schema\n      property: type\n    assertions:\n      defined: true\n    message: schema missing type\n    where:\n      # don't require type on schemas that reference other schemas, which already must specify type\n      - subject:\n          type: Schema\n          property: allOf\n        assertions:\n          defined: false\n\n  rule/require-parameter-schema:\n    subject:\n      type: Parameter\n      property: schema\n    assertions:\n      defined: true\n    message: Parameter missing schema\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.361328125,
          "content": "alembic>=1.4\nasync_generator>=1.9; python_version < '3.10'\ncertipy>=0.1.2\nidna\nimportlib_metadata>=3.6; python_version < '3.10'\njinja2>=2.11.0\njupyter_events\noauthlib>=3.0\npackaging\npamela>=1.1.0; sys_platform != 'win32'\nprometheus_client>=0.5.0\npsutil>=5.6.5; sys_platform == 'win32'\npydantic>=2\npython-dateutil\nrequests\nSQLAlchemy>=1.4.1\ntornado>=5.1\ntraitlets>=4.3.2\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 7.4208984375,
          "content": "#!/usr/bin/env python3\n# Copyright (c) Jupyter Development Team.\n# Distributed under the terms of the Modified BSD License.\n\nimport os\nimport shutil\nimport sys\nfrom subprocess import check_call\n\nfrom setuptools import Command, setup\nfrom setuptools.command.bdist_egg import bdist_egg\nfrom setuptools.command.build_py import build_py\nfrom setuptools.command.develop import develop\nfrom setuptools.command.sdist import sdist\n\nshell = False\nif os.name in ('nt', 'dos'):\n    shell = True\n    warning = \"WARNING: Windows is not officially supported\"\n    print(warning, file=sys.stderr)\n\n\npjoin = os.path.join\n\nhere = os.path.abspath(os.path.dirname(__file__))\nshare_jupyterhub = pjoin(here, 'share', 'jupyterhub')\nstatic = pjoin(share_jupyterhub, 'static')\n\nis_repo = os.path.exists(pjoin(here, '.git'))\n\n# Build basic package data, etc.\n\n\ndef get_data_files():\n    \"\"\"Get data files in share/jupyter\"\"\"\n\n    data_files = []\n    for d, dirs, filenames in os.walk(share_jupyterhub):\n        rel_d = os.path.relpath(d, here)\n        data_files.append((rel_d, [os.path.join(rel_d, f) for f in filenames]))\n    return data_files\n\n\ndef mtime(path):\n    \"\"\"shorthand for mtime\"\"\"\n    return os.stat(path).st_mtime\n\n\ndef recursive_mtime(path):\n    \"\"\"Recursively get newest mtime of files\"\"\"\n    if os.path.isfile(path):\n        return mtime(path)\n    current = 0\n    for dirname, _, filenames in os.walk(path):\n        if filenames:\n            current = max(\n                current, max(mtime(os.path.join(dirname, f)) for f in filenames)\n            )\n    return current\n\n\nclass BaseCommand(Command):\n    \"\"\"Dumb empty command because Command needs subclasses to override too much\"\"\"\n\n    user_options = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def get_inputs(self):\n        return []\n\n    def get_outputs(self):\n        return []\n\n\nclass NPM(BaseCommand):\n    description = \"fetch static client-side components with bower\"\n\n    user_options = []\n    node_modules = pjoin(here, 'node_modules')\n    bower_dir = pjoin(static, 'components')\n\n    def should_run(self):\n        if not os.path.exists(self.bower_dir):\n            return True\n        if not os.path.exists(self.node_modules):\n            return True\n        if mtime(self.bower_dir) < mtime(self.node_modules):\n            return True\n        return mtime(self.node_modules) < mtime(pjoin(here, 'package.json'))\n\n    def run(self):\n        if not self.should_run():\n            print(\"npm dependencies up to date\")\n            return\n\n        print(\"installing js dependencies with npm\")\n        check_call(\n            ['npm', 'install', '--progress=false', '--unsafe-perm'],\n            cwd=here,\n            shell=shell,\n        )\n        os.utime(self.node_modules)\n\n        os.utime(self.bower_dir)\n        # update data-files in case this created new files\n        self.distribution.data_files = get_data_files()\n        assert not self.should_run(), 'NPM.run failed'\n\n\nclass CSS(BaseCommand):\n    description = \"compile CSS\"\n\n    def should_run(self):\n        \"\"\"Does CSS need to run?\"\"\"\n        css_targets = [pjoin(static, 'css', 'style.min.css')]\n        css_maps = [t + '.map' for t in css_targets]\n        targets = css_targets + css_maps\n        earliest_target_mtime = float('inf')\n        earliest_target_name = ''\n        for t in targets:\n            if not os.path.exists(t):\n                print(f\"Need to build css target: {t}\")\n                return True\n            target_mtime = mtime(t)\n            if target_mtime < earliest_target_mtime:\n                earliest_target_name = t\n                earliest_target_mtime = target_mtime\n\n        # check if any .scss files are newer than the generated targets\n        for dirpath, dirnames, filenames in os.walk(static):\n            for f in filenames:\n                if f.endswith('.scss'):\n                    path = pjoin(static, dirpath, f)\n                    timestamp = mtime(path)\n                    if timestamp > earliest_target_mtime:\n                        print(\n                            f\"mtime for {path} > {earliest_target_name}, needs update\"\n                        )\n                        return True\n\n        return False\n\n    def run(self):\n        if not self.should_run():\n            print(\"CSS up-to-date\")\n            return\n\n        self.run_command('js')\n        print(\"Building css\")\n\n        args = ['npm', 'run', 'css']\n        try:\n            check_call(args, cwd=here, shell=shell)\n        except OSError as e:\n            print(f\"Failed to build css: {e}\", file=sys.stderr)\n            print(\"You can install js dependencies with `npm install`\", file=sys.stderr)\n            raise\n        # update data-files in case this created new files\n        self.distribution.data_files = get_data_files()\n        assert not self.should_run(), 'CSS.run did not produce up-to-date output'\n\n\nclass JSX(BaseCommand):\n    description = \"build admin app\"\n\n    jsx_dir = pjoin(here, 'jsx')\n    js_target = pjoin(static, 'js', 'admin-react.js')\n\n    def should_run(self):\n        if os.getenv('READTHEDOCS'):\n            # yarn not available on RTD\n            return False\n\n        if not os.path.exists(self.js_target):\n            return True\n\n        js_target_mtime = mtime(self.js_target)\n        jsx_mtime = recursive_mtime(self.jsx_dir)\n        if js_target_mtime < jsx_mtime:\n            return True\n        return False\n\n    def run(self):\n        if not self.should_run():\n            print(\"JSX admin app is up to date\")\n            return\n\n        if not shutil.which('npm'):\n            raise Exception('JSX needs to be updated but npm is not installed')\n\n        print(\"Installing JSX admin app requirements\")\n        check_call(\n            ['npm', 'install', '--progress=false', '--unsafe-perm'],\n            cwd=self.jsx_dir,\n            shell=shell,\n        )\n\n        print(\"Building JSX admin app\")\n        check_call(\n            [\"npm\", \"run\", \"build\"],\n            cwd=self.jsx_dir,\n            shell=shell,\n        )\n\n        # update data-files in case this created new files\n        self.distribution.data_files = get_data_files()\n        assert not self.should_run(), 'JSX.run failed'\n\n\ndef js_css_first(cls, strict=True):\n    class Command(cls):\n        def run(self):\n            try:\n                self.run_command('js')\n                self.run_command('css')\n                self.run_command('jsx')\n            except Exception:\n                if strict:\n                    raise\n                else:\n                    pass\n            return super().run()\n\n    return Command\n\n\nclass bdist_egg_disabled(bdist_egg):\n    \"\"\"Disabled version of bdist_egg\n\n    Prevents setup.py install from performing setuptools' default easy_install,\n    which it should never ever do.\n    \"\"\"\n\n    def run(self):\n        sys.exit(\n            \"Aborting implicit building of eggs. Use `pip install .` to install from source.\"\n        )\n\n\nclass develop_js_css(develop):\n    def run(self):\n        if not self.uninstall:\n            self.distribution.run_command('js')\n            self.distribution.run_command('css')\n        super().run()\n\n\ncmdclass = {\n    'js': NPM,\n    'css': CSS,\n    'jsx': JSX,\n    'build_py': js_css_first(build_py, strict=is_repo),\n    'sdist': js_css_first(sdist, strict=True),\n    'bdist_egg': bdist_egg if 'bdist_egg' in sys.argv else bdist_egg_disabled,\n    'develop': develop_js_css,\n}\n\n# run setup\n\n\ndef main():\n    setup(\n        cmdclass=cmdclass,\n        data_files=get_data_files(),\n    )\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "singleuser",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}