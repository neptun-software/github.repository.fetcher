{
  "metadata": {
    "timestamp": 1736560991759,
    "page": 747,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google-deepmind/graph_nets",
      "stars": 5367,
      "defaultBranch": "master",
      "files": [
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.201171875,
          "content": "# Contributing guidelines\n\n## How to become a contributor and submit your own code\n\n### Contributor License Agreements\n\nWe'd love to accept your patches! Before we can take them, we have to jump a\ncouple of legal hurdles.\n\nPlease fill out either the individual or corporate Contributor License Agreement\n(CLA).\n\n*   If you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an [individual\n    CLA](http://code.google.com/legal/individual-cla-v1.0.html).\n*   If you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a [corporate\n    CLA](http://code.google.com/legal/corporate-cla-v1.0.html).\n\nFollow either of the two links above to access the appropriate CLA and\ninstructions for how to sign and return it. Once we receive it, we'll be able to\naccept your pull requests.\n\n***NOTE***: Only original source code from you and other people that have signed\nthe CLA can be accepted into the main repository.\n\n### Contributing code\n\nIf you have improvements to this library, send us your pull requests! For those\njust getting started, GitHub has a\n[howto](https://help.github.com/articles/using-pull-requests/).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0927734375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.412109375,
          "content": "![Graph Nets DeepMind shortest path](https://github.com/deepmind/graph_nets/raw/master/images/graph-nets-deepmind-shortest-path0.gif)\n\n# Graph Nets library\n\n[Graph Nets](https://github.com/deepmind/graph_nets) is DeepMind's library for\nbuilding graph networks in Tensorflow and Sonnet.\n\nContact graph-nets@google.com for comments and questions.\n\n#### What are graph networks?\n\nA graph network takes a graph as input and returns a graph as output. The input\ngraph has edge- (*E* ), node- (*V* ), and global-level (**u**) attributes. The\noutput graph has the same structure, but updated attributes. Graph networks are\npart of the broader family of \"graph neural networks\" (Scarselli et al., 2009).\n\nTo learn more about graph networks, see our arXiv paper: [Relational inductive\nbiases, deep learning, and graph networks](https://arxiv.org/abs/1806.01261).\n\n![Graph network](https://github.com/deepmind/graph_nets/raw/master/images/graph-network.png)\n\n## Installation\n\nThe Graph Nets library can be installed from pip.\n\nThis installation is compatible with Linux/Mac OS X, and Python 2.7 and 3.4+.\n\nThe library will work with both the CPU and GPU version of TensorFlow, but to\nallow for that it does not list Tensorflow as a requirement, so you need to\ninstall Tensorflow separately if you haven't already done so.\n\nTo install the Graph Nets library and use it with TensorFlow 1 and Sonnet 1, run:\n\n(CPU)\n```shell\n$ pip install graph_nets \"tensorflow>=1.15,<2\" \"dm-sonnet<2\" \"tensorflow_probability<0.9\"\n```\n\n(GPU)\n```shell\n$ pip install graph_nets \"tensorflow_gpu>=1.15,<2\" \"dm-sonnet<2\" \"tensorflow_probability<0.9\"\n```\n\nTo install the Graph Nets library and use it with TensorFlow 2 and Sonnet 2, run:\n\n(CPU)\n```shell\n$ pip install graph_nets \"tensorflow>=2.1.0-rc1\" \"dm-sonnet>=2.0.0b0\" tensorflow_probability\n```\n\n(GPU)\n```shell\n$ pip install graph_nets \"tensorflow_gpu>=2.1.0-rc1\" \"dm-sonnet>=2.0.0b0\" tensorflow_probability\n```\n\nThe latest version of the library requires TensorFlow >=1.15. For compatibility with earlier versions of TensorFlow, please install v1.0.4 of the Graph Nets library.\n\n## Usage example\n\nThe following code constructs a simple graph net module and connects it to data.\n\n```python\nimport graph_nets as gn\nimport sonnet as snt\n\n# Provide your own functions to generate graph-structured data.\ninput_graphs = get_graphs()\n\n# Create the graph network.\ngraph_net_module = gn.modules.GraphNetwork(\n    edge_model_fn=lambda: snt.nets.MLP([32, 32]),\n    node_model_fn=lambda: snt.nets.MLP([32, 32]),\n    global_model_fn=lambda: snt.nets.MLP([32, 32]))\n\n# Pass the input graphs to the graph network, and return the output graphs.\noutput_graphs = graph_net_module(input_graphs)\n```\n\n## Demo Jupyter notebooks\n\nThe library includes demos which show how to create, manipulate, and\ntrain graph networks to reason about graph-structured data, on a\nshortest path-finding task, a sorting task, and a physical prediction task.\nEach demo uses the same graph network architecture, which highlights the\nflexibility of the approach.\n\n### Try the demos in your browser in [Colaboratory](https://colab.research.google.com)\n\nTo try out the demos without installing anything locally, you can run the demos\nin your browser (even on your phone) via a cloud Colaboratory backend. Click a\ndemo link below, and follow the instructions in the notebook.\n\n----------------\n\n#### [Run \"shortest path demo\" in browser](https://colab.research.google.com/github/deepmind/graph_nets/blob/master/graph_nets/demos/shortest_path.ipynb)\n\nThe \"shortest path demo\" creates random graphs, and trains a graph network to\nlabel the nodes and edges on the shortest path between any two nodes. Over a\nsequence of message-passing steps (as depicted by each step's plot), the\nmodel refines its prediction of the shortest path.\n\n![Shortest path](https://github.com/deepmind/graph_nets/raw/master/images/shortest-path.png)\n\n----------------\n\n#### [Run \"sort demo\" in browser](https://colab.research.google.com/github/deepmind/graph_nets/blob/master/graph_nets/demos/sort.ipynb)  [(Run TF2 version)](https://colab.research.google.com/github/deepmind/graph_nets/blob/master/graph_nets/demos_tf2/sort.ipynb)\n\nThe \"sort demo\" creates lists of random numbers, and trains a graph network to\nsort the list. After a sequence of message-passing steps, the model makes an\naccurate prediction of which elements (columns in the figure) come next after\neach other (rows).\n\n![Sort](https://github.com/deepmind/graph_nets/raw/master/images/sort.png)\n\n----------------\n\n#### [Run \"physics demo\" in browser](https://colab.research.google.com/github/deepmind/graph_nets/blob/master/graph_nets/demos/physics.ipynb)\n\nThe \"physics demo\" creates random mass-spring physical systems, and trains a\ngraph network to predict the state of the system on the next timestep. The\nmodel's next-step predictions can be fed back in as input to create a rollout of\na future trajectory. Each subplot below shows the true and predicted mass-spring\nsystem states over 50 steps. This is similar to the model and experiments in\nBattaglia et al. (2016)'s \"interaction networks\".\n\n![Physics](https://github.com/deepmind/graph_nets/raw/master/images/physics.png)\n\n----------------\n\n#### [Run \"graph nets basics demo\" in browser](https://colab.research.google.com/github/deepmind/graph_nets/blob/master/graph_nets/demos/graph_nets_basics.ipynb)  [(Run TF2 version)](https://colab.research.google.com/github/deepmind/graph_nets/blob/master/graph_nets/demos_tf2/graph_nets_basics.ipynb)\n\nThe \"graph nets basics demo\" is a tutorial containing step by step examples\nabout how to create and manipulate graphs, how to feed them into\ngraph networks and how to build custom graph network modules.\n\n----------------\n\n### Run the demos on your local machine\n\nTo install the necessary dependencies, run:\n\n```shell\n$ pip install jupyter matplotlib scipy\n```\n\nTo try the demos, run:\n\n```shell\n$ cd <path-to-graph-nets-library>/demos\n$ jupyter notebook\n```\nthen open a demo through the Jupyter notebook interface.\n\n\n## Other graph neural network libraries\n\nCheck out these high-quality open-source libraries for graph neural networks:\n\n* [jraph](https://github.com/deepmind/jraph): DeepMind's GNNs/GraphNets library\nfor [JAX](https://github.com/google/jax).\n\n* [pytorch_geometric](https://github.com/rusty1s/pytorch_geometric): See\n[MetaLayer](https://pytorch-geometric.readthedocs.io/en/latest/modules/nn.html#torch_geometric.nn.meta.MetaLayer)\nfor an analog of our Graph Nets interface.\n\n* [Deep Graph Library (DGL)](https://github.com/dmlc/dgl).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "graph_nets",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.2333984375,
          "content": "# Copyright 2018 The GraphNets Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or  implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n\"\"\"Setuptools installation script.\"\"\"\n\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nfrom setuptools import find_packages\nfrom setuptools import setup\n\ndescription = \"\"\"Graph Nets is DeepMind's library for building graph networks in\nTensorflow and Sonnet.\n\"\"\"\n\nsetup(\n    name=\"graph_nets\",\n    version=\"1.1.1.dev\",\n    description=\"Library for building graph networks in Tensorflow and Sonnet.\",\n    long_description=description,\n    author=\"DeepMind\",\n    license=\"Apache License, Version 2.0\",\n    keywords=[\"graph networks\", \"tensorflow\", \"sonnet\", \"machine learning\"],\n    url=\"https://github.com/deepmind/graph-nets\",\n    packages=find_packages(),\n    # Additional \"tensorflow\" and \"tensorflow_probability\" requirements should\n    # be installed separately (See README).\n    install_requires=[\n        \"absl-py\",\n        \"dm-sonnet\",\n        \"dm-tree\",\n        \"future\",\n        \"networkx\",\n        \"numpy\",\n        \"setuptools\",\n        \"six\",\n    ],\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: Education\",\n        \"Intended Audience :: Science/Research\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Operating System :: POSIX :: Linux\",\n        \"Operating System :: Microsoft :: Windows\",\n        \"Operating System :: MacOS :: MacOS X\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Programming Language :: Python :: 3.4\",\n        \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n    ],\n)\n"
        }
      ]
    }
  ]
}