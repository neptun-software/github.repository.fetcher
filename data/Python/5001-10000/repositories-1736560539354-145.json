{
  "metadata": {
    "timestamp": 1736560539354,
    "page": 145,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shmilylty/OneForAll",
      "stars": 8528,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.005859375,
          "content": ".git/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.8564453125,
          "content": "\n# Created by https://www.gitignore.io/api/python,windows,pycharm\n# Edit at https://www.gitignore.io/?templates=python,windows,pycharm\n\n### PyCharm ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### PyCharm Patch ###\n# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721\n\n# *.iml\n# modules.xml\n# .idea/misc.xml\n# *.ipr\n\n# Sonarlint plugin\n.idea/sonarlint\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n### Windows ###\n# Windows thumbnail cache files\nThumbs.db\nThumbs.db:encryptable\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# End of https://www.gitignore.io/api/python,windows,pycharm\n\n# User-defined settings\nconfig/setting.py\nconfig/api.py\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 3.248046875,
          "content": "notifications:\n  email: false\n\nlanguage: python\n\njobs:\n  include:\n    - name: \"Python 3.6 on Linux\"\n      os: linux\n      dist: xenial\n      python: 3.6           # this works for Linux but is ignored on macOS or Windows\n      before_install:\n        - pip3 install -U pip\n    - name: \"Python 3.7 on Xenial Linux\"\n      os: linux\n      dist: xenial          # required for Python >= 3.7\n      python: 3.7           # this works for Linux but is ignored on macOS or Windows\n      before_install:\n        - pip3 install -U pip\n    - name: \"Python 3.8 on Xenial Linux\"\n      os: linux\n      dist: xenial          # required for Python >= 3.7\n      python: 3.8           # this works for Linux but is ignored on macOS or Windows\n      before_install:\n        - pip3 install -U pip\n    - name: \"Python 3.9 on Xenial Linux\"\n      os: linux\n      dist: xenial          # required for Python >= 3.7\n      python: 3.9-dev       # this works for Linux but is ignored on macOS or Windows\n      before_install:\n        - pip3 install -U pip\n    - name: \"Python 3.6 on MacOS\"\n      os: osx\n      osx_image: xcode9.4     # Python 3.6 running on macOS 10.13\n      language: shell       # 'language: python' is an error on Travis CI macOS\n      before_install:\n        - python3 --version\n        - pip3 install -U pip\n    - name: \"Python 3.7 on MacOS\"\n      os: osx\n      osx_image: xcode10.2  # Python 3.7 running on macOS 10.14\n      language: shell       # 'language: python' is an error on Travis CI macOS\n      before_install:\n        - python3 --version\n        - pip3 install -U pip\n    - name: \"Python 3.8 on MacOS\"\n      os: osx\n      osx_image: xcode12.2  # Python 3.7 running on macOS 10.15\n      language: shell       # 'language: python' is an error on Travis CI macOS\n      before_install:\n        - python3 --version\n        - pip3 install -U pip\n    - name: \"Python 3.6 on Windows\"\n      os: windows\n      language: shell\n      before_install:\n        - choco install python --version 3.6.1\n        - python -m pip install --upgrade pip\n        - chcp.com 65001\n      env:\n        - PATH=/c/Python36:/c/Python36/Scripts:$PATH\n        - PYTHONIOENCODING=UTF-8\n    - name: \"Python 3.7 on Windows\"\n      os: windows\n      language: shell\n      before_install:\n        - choco install python --version 3.7.0\n        - python -m pip install --upgrade pip\n        - chcp.com 65001\n      env:\n        - PATH=/c/Python37:/c/Python37/Scripts:$PATH\n        - PYTHONIOENCODING=UTF-8\n    - name: \"Python 3.8 on Windows\"\n      os: windows           # Windows 10.0.17134 N/A Build 17134\n      language: shell\n      before_install:\n        - choco install python --version 3.8.0\n        - python -m pip install --upgrade pip\n        - chcp.com 65001\n      env: \n        - PATH=/c/Python38:/c/Python38/Scripts:$PATH\n        - PYTHONIOENCODING=UTF-8\n    - name: \"Python 3.9 on Windows\"\n      os: windows           # Windows 10.0.17134 N/A Build 17134\n      language: shell\n      before_install:\n        - choco install python --version 3.9.0\n        - python -m pip install --upgrade pip\n        - chcp.com 65001\n      env:\n        - PATH=/c/Python39:/c/Python39/Scripts:$PATH\n        - PYTHONIOENCODING=UTF-8\n\ninstall:\n  - pip3 install codecov\n  - pip3 install -r requirements.txt\n\nscript:\n - coverage run test.py\n\nafter_success:\n - codecov\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.7109375,
          "content": "FROM --platform=$TARGETPLATFORM python:3.8-alpine3.10\nLABEL maintainer=\"milktea@vmoe.info\"\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories\nRUN apk update && apk --no-cache add git build-base libffi-dev libxml2-dev libxslt-dev libressl-dev\nADD requirements.txt /requirements.txt\nRUN pip install uvloop -i https://mirrors.aliyun.com/pypi/simple/\nRUN pip install -r /requirements.txt -i https://mirrors.aliyun.com/pypi/simple/\nRUN git clone https://github.com/blechschmidt/massdns\nWORKDIR /massdns\nRUN make \nADD . /OneForAll/\nRUN mv /massdns/bin/massdns /OneForAll/thirdparty/massdns/massdns_linux_$(uname -m)\nRUN mkdir /OneForAll/results\nWORKDIR /OneForAll/\n\nENTRYPOINT [\"python\", \"oneforall.py\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 34.9736328125,
          "content": "                    GNU GENERAL PUBLIC LICENSE\r\n                       Version 3, 29 June 2007\r\n\r\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n                            Preamble\r\n\r\n  The GNU General Public License is a free, copyleft license for\r\nsoftware and other kinds of works.\r\n\r\n  The licenses for most software and other practical works are designed\r\nto take away your freedom to share and change the works.  By contrast,\r\nthe GNU General Public License is intended to guarantee your freedom to\r\nshare and change all versions of a program--to make sure it remains free\r\nsoftware for all its users.  We, the Free Software Foundation, use the\r\nGNU General Public License for most of our software; it applies also to\r\nany other work released this way by its authors.  You can apply it to\r\nyour programs, too.\r\n\r\n  When we speak of free software, we are referring to freedom, not\r\nprice.  Our General Public Licenses are designed to make sure that you\r\nhave the freedom to distribute copies of free software (and charge for\r\nthem if you wish), that you receive source code or can get it if you\r\nwant it, that you can change the software or use pieces of it in new\r\nfree programs, and that you know you can do these things.\r\n\r\n  To protect your rights, we need to prevent others from denying you\r\nthese rights or asking you to surrender the rights.  Therefore, you have\r\ncertain responsibilities if you distribute copies of the software, or if\r\nyou modify it: responsibilities to respect the freedom of others.\r\n\r\n  For example, if you distribute copies of such a program, whether\r\ngratis or for a fee, you must pass on to the recipients the same\r\nfreedoms that you received.  You must make sure that they, too, receive\r\nor can get the source code.  And you must show them these terms so they\r\nknow their rights.\r\n\r\n  Developers that use the GNU GPL protect your rights with two steps:\r\n(1) assert copyright on the software, and (2) offer you this License\r\ngiving you legal permission to copy, distribute and/or modify it.\r\n\r\n  For the developers' and authors' protection, the GPL clearly explains\r\nthat there is no warranty for this free software.  For both users' and\r\nauthors' sake, the GPL requires that modified versions be marked as\r\nchanged, so that their problems will not be attributed erroneously to\r\nauthors of previous versions.\r\n\r\n  Some devices are designed to deny users access to install or run\r\nmodified versions of the software inside them, although the manufacturer\r\ncan do so.  This is fundamentally incompatible with the aim of\r\nprotecting users' freedom to change the software.  The systematic\r\npattern of such abuse occurs in the area of products for individuals to\r\nuse, which is precisely where it is most unacceptable.  Therefore, we\r\nhave designed this version of the GPL to prohibit the practice for those\r\nproducts.  If such problems arise substantially in other domains, we\r\nstand ready to extend this provision to those domains in future versions\r\nof the GPL, as needed to protect the freedom of users.\r\n\r\n  Finally, every program is threatened constantly by software patents.\r\nStates should not allow patents to restrict development and use of\r\nsoftware on general-purpose computers, but in those that do, we wish to\r\navoid the special danger that patents applied to a free program could\r\nmake it effectively proprietary.  To prevent this, the GPL assures that\r\npatents cannot be used to render the program non-free.\r\n\r\n  The precise terms and conditions for copying, distribution and\r\nmodification follow.\r\n\r\n                       TERMS AND CONDITIONS\r\n\r\n  0. Definitions.\r\n\r\n  \"This License\" refers to version 3 of the GNU General Public License.\r\n\r\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\r\nworks, such as semiconductor masks.\r\n\r\n  \"The Program\" refers to any copyrightable work licensed under this\r\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\r\n\"recipients\" may be individuals or organizations.\r\n\r\n  To \"modify\" a work means to copy from or adapt all or part of the work\r\nin a fashion requiring copyright permission, other than the making of an\r\nexact copy.  The resulting work is called a \"modified version\" of the\r\nearlier work or a work \"based on\" the earlier work.\r\n\r\n  A \"covered work\" means either the unmodified Program or a work based\r\non the Program.\r\n\r\n  To \"propagate\" a work means to do anything with it that, without\r\npermission, would make you directly or secondarily liable for\r\ninfringement under applicable copyright law, except executing it on a\r\ncomputer or modifying a private copy.  Propagation includes copying,\r\ndistribution (with or without modification), making available to the\r\npublic, and in some countries other activities as well.\r\n\r\n  To \"convey\" a work means any kind of propagation that enables other\r\nparties to make or receive copies.  Mere interaction with a user through\r\na computer network, with no transfer of a copy, is not conveying.\r\n\r\n  An interactive user interface displays \"Appropriate Legal Notices\"\r\nto the extent that it includes a convenient and prominently visible\r\nfeature that (1) displays an appropriate copyright notice, and (2)\r\ntells the user that there is no warranty for the work (except to the\r\nextent that warranties are provided), that licensees may convey the\r\nwork under this License, and how to view a copy of this License.  If\r\nthe interface presents a list of user commands or options, such as a\r\nmenu, a prominent item in the list meets this criterion.\r\n\r\n  1. Source Code.\r\n\r\n  The \"source code\" for a work means the preferred form of the work\r\nfor making modifications to it.  \"Object code\" means any non-source\r\nform of a work.\r\n\r\n  A \"Standard Interface\" means an interface that either is an official\r\nstandard defined by a recognized standards body, or, in the case of\r\ninterfaces specified for a particular programming language, one that\r\nis widely used among developers working in that language.\r\n\r\n  The \"System Libraries\" of an executable work include anything, other\r\nthan the work as a whole, that (a) is included in the normal form of\r\npackaging a Major Component, but which is not part of that Major\r\nComponent, and (b) serves only to enable use of the work with that\r\nMajor Component, or to implement a Standard Interface for which an\r\nimplementation is available to the public in source code form.  A\r\n\"Major Component\", in this context, means a major essential component\r\n(kernel, window system, and so on) of the specific operating system\r\n(if any) on which the executable work runs, or a compiler used to\r\nproduce the work, or an object code interpreter used to run it.\r\n\r\n  The \"Corresponding Source\" for a work in object code form means all\r\nthe source code needed to generate, install, and (for an executable\r\nwork) run the object code and to modify the work, including scripts to\r\ncontrol those activities.  However, it does not include the work's\r\nSystem Libraries, or general-purpose tools or generally available free\r\nprograms which are used unmodified in performing those activities but\r\nwhich are not part of the work.  For example, Corresponding Source\r\nincludes interface definition files associated with source files for\r\nthe work, and the source code for shared libraries and dynamically\r\nlinked subprograms that the work is specifically designed to require,\r\nsuch as by intimate data communication or control flow between those\r\nsubprograms and other parts of the work.\r\n\r\n  The Corresponding Source need not include anything that users\r\ncan regenerate automatically from other parts of the Corresponding\r\nSource.\r\n\r\n  The Corresponding Source for a work in source code form is that\r\nsame work.\r\n\r\n  2. Basic Permissions.\r\n\r\n  All rights granted under this License are granted for the term of\r\ncopyright on the Program, and are irrevocable provided the stated\r\nconditions are met.  This License explicitly affirms your unlimited\r\npermission to run the unmodified Program.  The output from running a\r\ncovered work is covered by this License only if the output, given its\r\ncontent, constitutes a covered work.  This License acknowledges your\r\nrights of fair use or other equivalent, as provided by copyright law.\r\n\r\n  You may make, run and propagate covered works that you do not\r\nconvey, without conditions so long as your license otherwise remains\r\nin force.  You may convey covered works to others for the sole purpose\r\nof having them make modifications exclusively for you, or provide you\r\nwith facilities for running those works, provided that you comply with\r\nthe terms of this License in conveying all material for which you do\r\nnot control copyright.  Those thus making or running the covered works\r\nfor you must do so exclusively on your behalf, under your direction\r\nand control, on terms that prohibit them from making any copies of\r\nyour copyrighted material outside their relationship with you.\r\n\r\n  Conveying under any other circumstances is permitted solely under\r\nthe conditions stated below.  Sublicensing is not allowed; section 10\r\nmakes it unnecessary.\r\n\r\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\r\n\r\n  No covered work shall be deemed part of an effective technological\r\nmeasure under any applicable law fulfilling obligations under article\r\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\r\nsimilar laws prohibiting or restricting circumvention of such\r\nmeasures.\r\n\r\n  When you convey a covered work, you waive any legal power to forbid\r\ncircumvention of technological measures to the extent such circumvention\r\nis effected by exercising rights under this License with respect to\r\nthe covered work, and you disclaim any intention to limit operation or\r\nmodification of the work as a means of enforcing, against the work's\r\nusers, your or third parties' legal rights to forbid circumvention of\r\ntechnological measures.\r\n\r\n  4. Conveying Verbatim Copies.\r\n\r\n  You may convey verbatim copies of the Program's source code as you\r\nreceive it, in any medium, provided that you conspicuously and\r\nappropriately publish on each copy an appropriate copyright notice;\r\nkeep intact all notices stating that this License and any\r\nnon-permissive terms added in accord with section 7 apply to the code;\r\nkeep intact all notices of the absence of any warranty; and give all\r\nrecipients a copy of this License along with the Program.\r\n\r\n  You may charge any price or no price for each copy that you convey,\r\nand you may offer support or warranty protection for a fee.\r\n\r\n  5. Conveying Modified Source Versions.\r\n\r\n  You may convey a work based on the Program, or the modifications to\r\nproduce it from the Program, in the form of source code under the\r\nterms of section 4, provided that you also meet all of these conditions:\r\n\r\n    a) The work must carry prominent notices stating that you modified\r\n    it, and giving a relevant date.\r\n\r\n    b) The work must carry prominent notices stating that it is\r\n    released under this License and any conditions added under section\r\n    7.  This requirement modifies the requirement in section 4 to\r\n    \"keep intact all notices\".\r\n\r\n    c) You must license the entire work, as a whole, under this\r\n    License to anyone who comes into possession of a copy.  This\r\n    License will therefore apply, along with any applicable section 7\r\n    additional terms, to the whole of the work, and all its parts,\r\n    regardless of how they are packaged.  This License gives no\r\n    permission to license the work in any other way, but it does not\r\n    invalidate such permission if you have separately received it.\r\n\r\n    d) If the work has interactive user interfaces, each must display\r\n    Appropriate Legal Notices; however, if the Program has interactive\r\n    interfaces that do not display Appropriate Legal Notices, your\r\n    work need not make them do so.\r\n\r\n  A compilation of a covered work with other separate and independent\r\nworks, which are not by their nature extensions of the covered work,\r\nand which are not combined with it such as to form a larger program,\r\nin or on a volume of a storage or distribution medium, is called an\r\n\"aggregate\" if the compilation and its resulting copyright are not\r\nused to limit the access or legal rights of the compilation's users\r\nbeyond what the individual works permit.  Inclusion of a covered work\r\nin an aggregate does not cause this License to apply to the other\r\nparts of the aggregate.\r\n\r\n  6. Conveying Non-Source Forms.\r\n\r\n  You may convey a covered work in object code form under the terms\r\nof sections 4 and 5, provided that you also convey the\r\nmachine-readable Corresponding Source under the terms of this License,\r\nin one of these ways:\r\n\r\n    a) Convey the object code in, or embodied in, a physical product\r\n    (including a physical distribution medium), accompanied by the\r\n    Corresponding Source fixed on a durable physical medium\r\n    customarily used for software interchange.\r\n\r\n    b) Convey the object code in, or embodied in, a physical product\r\n    (including a physical distribution medium), accompanied by a\r\n    written offer, valid for at least three years and valid for as\r\n    long as you offer spare parts or customer support for that product\r\n    model, to give anyone who possesses the object code either (1) a\r\n    copy of the Corresponding Source for all the software in the\r\n    product that is covered by this License, on a durable physical\r\n    medium customarily used for software interchange, for a price no\r\n    more than your reasonable cost of physically performing this\r\n    conveying of source, or (2) access to copy the\r\n    Corresponding Source from a network server at no charge.\r\n\r\n    c) Convey individual copies of the object code with a copy of the\r\n    written offer to provide the Corresponding Source.  This\r\n    alternative is allowed only occasionally and noncommercially, and\r\n    only if you received the object code with such an offer, in accord\r\n    with subsection 6b.\r\n\r\n    d) Convey the object code by offering access from a designated\r\n    place (gratis or for a charge), and offer equivalent access to the\r\n    Corresponding Source in the same way through the same place at no\r\n    further charge.  You need not require recipients to copy the\r\n    Corresponding Source along with the object code.  If the place to\r\n    copy the object code is a network server, the Corresponding Source\r\n    may be on a different server (operated by you or a third party)\r\n    that supports equivalent copying facilities, provided you maintain\r\n    clear directions next to the object code saying where to find the\r\n    Corresponding Source.  Regardless of what server hosts the\r\n    Corresponding Source, you remain obligated to ensure that it is\r\n    available for as long as needed to satisfy these requirements.\r\n\r\n    e) Convey the object code using peer-to-peer transmission, provided\r\n    you inform other peers where the object code and Corresponding\r\n    Source of the work are being offered to the general public at no\r\n    charge under subsection 6d.\r\n\r\n  A separable portion of the object code, whose source code is excluded\r\nfrom the Corresponding Source as a System Library, need not be\r\nincluded in conveying the object code work.\r\n\r\n  A \"User Product\" is either (1) a \"consumer product\", which means any\r\ntangible personal property which is normally used for personal, family,\r\nor household purposes, or (2) anything designed or sold for incorporation\r\ninto a dwelling.  In determining whether a product is a consumer product,\r\ndoubtful cases shall be resolved in favor of coverage.  For a particular\r\nproduct received by a particular user, \"normally used\" refers to a\r\ntypical or common use of that class of product, regardless of the status\r\nof the particular user or of the way in which the particular user\r\nactually uses, or expects or is expected to use, the product.  A product\r\nis a consumer product regardless of whether the product has substantial\r\ncommercial, industrial or non-consumer uses, unless such uses represent\r\nthe only significant mode of use of the product.\r\n\r\n  \"Installation Information\" for a User Product means any methods,\r\nprocedures, authorization keys, or other information required to install\r\nand execute modified versions of a covered work in that User Product from\r\na modified version of its Corresponding Source.  The information must\r\nsuffice to ensure that the continued functioning of the modified object\r\ncode is in no case prevented or interfered with solely because\r\nmodification has been made.\r\n\r\n  If you convey an object code work under this section in, or with, or\r\nspecifically for use in, a User Product, and the conveying occurs as\r\npart of a transaction in which the right of possession and use of the\r\nUser Product is transferred to the recipient in perpetuity or for a\r\nfixed term (regardless of how the transaction is characterized), the\r\nCorresponding Source conveyed under this section must be accompanied\r\nby the Installation Information.  But this requirement does not apply\r\nif neither you nor any third party retains the ability to install\r\nmodified object code on the User Product (for example, the work has\r\nbeen installed in ROM).\r\n\r\n  The requirement to provide Installation Information does not include a\r\nrequirement to continue to provide support service, warranty, or updates\r\nfor a work that has been modified or installed by the recipient, or for\r\nthe User Product in which it has been modified or installed.  Access to a\r\nnetwork may be denied when the modification itself materially and\r\nadversely affects the operation of the network or violates the rules and\r\nprotocols for communication across the network.\r\n\r\n  Corresponding Source conveyed, and Installation Information provided,\r\nin accord with this section must be in a format that is publicly\r\ndocumented (and with an implementation available to the public in\r\nsource code form), and must require no special password or key for\r\nunpacking, reading or copying.\r\n\r\n  7. Additional Terms.\r\n\r\n  \"Additional permissions\" are terms that supplement the terms of this\r\nLicense by making exceptions from one or more of its conditions.\r\nAdditional permissions that are applicable to the entire Program shall\r\nbe treated as though they were included in this License, to the extent\r\nthat they are valid under applicable law.  If additional permissions\r\napply only to part of the Program, that part may be used separately\r\nunder those permissions, but the entire Program remains governed by\r\nthis License without regard to the additional permissions.\r\n\r\n  When you convey a copy of a covered work, you may at your option\r\nremove any additional permissions from that copy, or from any part of\r\nit.  (Additional permissions may be written to require their own\r\nremoval in certain cases when you modify the work.)  You may place\r\nadditional permissions on material, added by you to a covered work,\r\nfor which you have or can give appropriate copyright permission.\r\n\r\n  Notwithstanding any other provision of this License, for material you\r\nadd to a covered work, you may (if authorized by the copyright holders of\r\nthat material) supplement the terms of this License with terms:\r\n\r\n    a) Disclaiming warranty or limiting liability differently from the\r\n    terms of sections 15 and 16 of this License; or\r\n\r\n    b) Requiring preservation of specified reasonable legal notices or\r\n    author attributions in that material or in the Appropriate Legal\r\n    Notices displayed by works containing it; or\r\n\r\n    c) Prohibiting misrepresentation of the origin of that material, or\r\n    requiring that modified versions of such material be marked in\r\n    reasonable ways as different from the original version; or\r\n\r\n    d) Limiting the use for publicity purposes of names of licensors or\r\n    authors of the material; or\r\n\r\n    e) Declining to grant rights under trademark law for use of some\r\n    trade names, trademarks, or service marks; or\r\n\r\n    f) Requiring indemnification of licensors and authors of that\r\n    material by anyone who conveys the material (or modified versions of\r\n    it) with contractual assumptions of liability to the recipient, for\r\n    any liability that these contractual assumptions directly impose on\r\n    those licensors and authors.\r\n\r\n  All other non-permissive additional terms are considered \"further\r\nrestrictions\" within the meaning of section 10.  If the Program as you\r\nreceived it, or any part of it, contains a notice stating that it is\r\ngoverned by this License along with a term that is a further\r\nrestriction, you may remove that term.  If a license document contains\r\na further restriction but permits relicensing or conveying under this\r\nLicense, you may add to a covered work material governed by the terms\r\nof that license document, provided that the further restriction does\r\nnot survive such relicensing or conveying.\r\n\r\n  If you add terms to a covered work in accord with this section, you\r\nmust place, in the relevant source files, a statement of the\r\nadditional terms that apply to those files, or a notice indicating\r\nwhere to find the applicable terms.\r\n\r\n  Additional terms, permissive or non-permissive, may be stated in the\r\nform of a separately written license, or stated as exceptions;\r\nthe above requirements apply either way.\r\n\r\n  8. Termination.\r\n\r\n  You may not propagate or modify a covered work except as expressly\r\nprovided under this License.  Any attempt otherwise to propagate or\r\nmodify it is void, and will automatically terminate your rights under\r\nthis License (including any patent licenses granted under the third\r\nparagraph of section 11).\r\n\r\n  However, if you cease all violation of this License, then your\r\nlicense from a particular copyright holder is reinstated (a)\r\nprovisionally, unless and until the copyright holder explicitly and\r\nfinally terminates your license, and (b) permanently, if the copyright\r\nholder fails to notify you of the violation by some reasonable means\r\nprior to 60 days after the cessation.\r\n\r\n  Moreover, your license from a particular copyright holder is\r\nreinstated permanently if the copyright holder notifies you of the\r\nviolation by some reasonable means, this is the first time you have\r\nreceived notice of violation of this License (for any work) from that\r\ncopyright holder, and you cure the violation prior to 30 days after\r\nyour receipt of the notice.\r\n\r\n  Termination of your rights under this section does not terminate the\r\nlicenses of parties who have received copies or rights from you under\r\nthis License.  If your rights have been terminated and not permanently\r\nreinstated, you do not qualify to receive new licenses for the same\r\nmaterial under section 10.\r\n\r\n  9. Acceptance Not Required for Having Copies.\r\n\r\n  You are not required to accept this License in order to receive or\r\nrun a copy of the Program.  Ancillary propagation of a covered work\r\noccurring solely as a consequence of using peer-to-peer transmission\r\nto receive a copy likewise does not require acceptance.  However,\r\nnothing other than this License grants you permission to propagate or\r\nmodify any covered work.  These actions infringe copyright if you do\r\nnot accept this License.  Therefore, by modifying or propagating a\r\ncovered work, you indicate your acceptance of this License to do so.\r\n\r\n  10. Automatic Licensing of Downstream Recipients.\r\n\r\n  Each time you convey a covered work, the recipient automatically\r\nreceives a license from the original licensors, to run, modify and\r\npropagate that work, subject to this License.  You are not responsible\r\nfor enforcing compliance by third parties with this License.\r\n\r\n  An \"entity transaction\" is a transaction transferring control of an\r\norganization, or substantially all assets of one, or subdividing an\r\norganization, or merging organizations.  If propagation of a covered\r\nwork results from an entity transaction, each party to that\r\ntransaction who receives a copy of the work also receives whatever\r\nlicenses to the work the party's predecessor in interest had or could\r\ngive under the previous paragraph, plus a right to possession of the\r\nCorresponding Source of the work from the predecessor in interest, if\r\nthe predecessor has it or can get it with reasonable efforts.\r\n\r\n  You may not impose any further restrictions on the exercise of the\r\nrights granted or affirmed under this License.  For example, you may\r\nnot impose a license fee, royalty, or other charge for exercise of\r\nrights granted under this License, and you may not initiate litigation\r\n(including a cross-claim or counterclaim in a lawsuit) alleging that\r\nany patent claim is infringed by making, using, selling, offering for\r\nsale, or importing the Program or any portion of it.\r\n\r\n  11. Patents.\r\n\r\n  A \"contributor\" is a copyright holder who authorizes use under this\r\nLicense of the Program or a work on which the Program is based.  The\r\nwork thus licensed is called the contributor's \"contributor version\".\r\n\r\n  A contributor's \"essential patent claims\" are all patent claims\r\nowned or controlled by the contributor, whether already acquired or\r\nhereafter acquired, that would be infringed by some manner, permitted\r\nby this License, of making, using, or selling its contributor version,\r\nbut do not include claims that would be infringed only as a\r\nconsequence of further modification of the contributor version.  For\r\npurposes of this definition, \"control\" includes the right to grant\r\npatent sublicenses in a manner consistent with the requirements of\r\nthis License.\r\n\r\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\r\npatent license under the contributor's essential patent claims, to\r\nmake, use, sell, offer for sale, import and otherwise run, modify and\r\npropagate the contents of its contributor version.\r\n\r\n  In the following three paragraphs, a \"patent license\" is any express\r\nagreement or commitment, however denominated, not to enforce a patent\r\n(such as an express permission to practice a patent or covenant not to\r\nsue for patent infringement).  To \"grant\" such a patent license to a\r\nparty means to make such an agreement or commitment not to enforce a\r\npatent against the party.\r\n\r\n  If you convey a covered work, knowingly relying on a patent license,\r\nand the Corresponding Source of the work is not available for anyone\r\nto copy, free of charge and under the terms of this License, through a\r\npublicly available network server or other readily accessible means,\r\nthen you must either (1) cause the Corresponding Source to be so\r\navailable, or (2) arrange to deprive yourself of the benefit of the\r\npatent license for this particular work, or (3) arrange, in a manner\r\nconsistent with the requirements of this License, to extend the patent\r\nlicense to downstream recipients.  \"Knowingly relying\" means you have\r\nactual knowledge that, but for the patent license, your conveying the\r\ncovered work in a country, or your recipient's use of the covered work\r\nin a country, would infringe one or more identifiable patents in that\r\ncountry that you have reason to believe are valid.\r\n\r\n  If, pursuant to or in connection with a single transaction or\r\narrangement, you convey, or propagate by procuring conveyance of, a\r\ncovered work, and grant a patent license to some of the parties\r\nreceiving the covered work authorizing them to use, propagate, modify\r\nor convey a specific copy of the covered work, then the patent license\r\nyou grant is automatically extended to all recipients of the covered\r\nwork and works based on it.\r\n\r\n  A patent license is \"discriminatory\" if it does not include within\r\nthe scope of its coverage, prohibits the exercise of, or is\r\nconditioned on the non-exercise of one or more of the rights that are\r\nspecifically granted under this License.  You may not convey a covered\r\nwork if you are a party to an arrangement with a third party that is\r\nin the business of distributing software, under which you make payment\r\nto the third party based on the extent of your activity of conveying\r\nthe work, and under which the third party grants, to any of the\r\nparties who would receive the covered work from you, a discriminatory\r\npatent license (a) in connection with copies of the covered work\r\nconveyed by you (or copies made from those copies), or (b) primarily\r\nfor and in connection with specific products or compilations that\r\ncontain the covered work, unless you entered into that arrangement,\r\nor that patent license was granted, prior to 28 March 2007.\r\n\r\n  Nothing in this License shall be construed as excluding or limiting\r\nany implied license or other defenses to infringement that may\r\notherwise be available to you under applicable patent law.\r\n\r\n  12. No Surrender of Others' Freedom.\r\n\r\n  If conditions are imposed on you (whether by court order, agreement or\r\notherwise) that contradict the conditions of this License, they do not\r\nexcuse you from the conditions of this License.  If you cannot convey a\r\ncovered work so as to satisfy simultaneously your obligations under this\r\nLicense and any other pertinent obligations, then as a consequence you may\r\nnot convey it at all.  For example, if you agree to terms that obligate you\r\nto collect a royalty for further conveying from those to whom you convey\r\nthe Program, the only way you could satisfy both those terms and this\r\nLicense would be to refrain entirely from conveying the Program.\r\n\r\n  13. Use with the GNU Affero General Public License.\r\n\r\n  Notwithstanding any other provision of this License, you have\r\npermission to link or combine any covered work with a work licensed\r\nunder version 3 of the GNU Affero General Public License into a single\r\ncombined work, and to convey the resulting work.  The terms of this\r\nLicense will continue to apply to the part which is the covered work,\r\nbut the special requirements of the GNU Affero General Public License,\r\nsection 13, concerning interaction through a network will apply to the\r\ncombination as such.\r\n\r\n  14. Revised Versions of this License.\r\n\r\n  The Free Software Foundation may publish revised and/or new versions of\r\nthe GNU General Public License from time to time.  Such new versions will\r\nbe similar in spirit to the present version, but may differ in detail to\r\naddress new problems or concerns.\r\n\r\n  Each version is given a distinguishing version number.  If the\r\nProgram specifies that a certain numbered version of the GNU General\r\nPublic License \"or any later version\" applies to it, you have the\r\noption of following the terms and conditions either of that numbered\r\nversion or of any later version published by the Free Software\r\nFoundation.  If the Program does not specify a version number of the\r\nGNU General Public License, you may choose any version ever published\r\nby the Free Software Foundation.\r\n\r\n  If the Program specifies that a proxy can decide which future\r\nversions of the GNU General Public License can be used, that proxy's\r\npublic statement of acceptance of a version permanently authorizes you\r\nto choose that version for the Program.\r\n\r\n  Later license versions may give you additional or different\r\npermissions.  However, no additional obligations are imposed on any\r\nauthor or copyright holder as a result of your choosing to follow a\r\nlater version.\r\n\r\n  15. Disclaimer of Warranty.\r\n\r\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\r\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\r\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\r\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\r\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\r\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\r\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\r\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\r\n\r\n  16. Limitation of Liability.\r\n\r\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\r\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\r\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\r\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\r\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\r\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\r\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\r\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\r\nSUCH DAMAGES.\r\n\r\n  17. Interpretation of Sections 15 and 16.\r\n\r\n  If the disclaimer of warranty and limitation of liability provided\r\nabove cannot be given local legal effect according to their terms,\r\nreviewing courts shall apply local law that most closely approximates\r\nan absolute waiver of all civil liability in connection with the\r\nProgram, unless a warranty or assumption of liability accompanies a\r\ncopy of the Program in return for a fee.\r\n\r\n                     END OF TERMS AND CONDITIONS\r\n\r\n            How to Apply These Terms to Your New Programs\r\n\r\n  If you develop a new program, and you want it to be of the greatest\r\npossible use to the public, the best way to achieve this is to make it\r\nfree software which everyone can redistribute and change under these terms.\r\n\r\n  To do so, attach the following notices to the program.  It is safest\r\nto attach them to the start of each source file to most effectively\r\nstate the exclusion of warranty; and each file should have at least\r\nthe \"copyright\" line and a pointer to where the full notice is found.\r\n\r\n    {one line to give the program's name and a brief idea of what it does.}\r\n    Copyright (C) {year}  {name of author}\r\n\r\n    This program is free software: you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation, either version 3 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nAlso add information on how to contact you by electronic and paper mail.\r\n\r\n  If the program does terminal interaction, make it output a short\r\nnotice like this when it starts in an interactive mode:\r\n\r\n    {project}  Copyright (C) {year}  {fullname}\r\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\r\n    This is free software, and you are welcome to redistribute it\r\n    under certain conditions; type `show c' for details.\r\n\r\nThe hypothetical commands `show w' and `show c' should show the appropriate\r\nparts of the General Public License.  Of course, your program's commands\r\nmight be different; for a GUI interface, you would use an \"about box\".\r\n\r\n  You should also get your employer (if you work as a programmer) or school,\r\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\r\nFor more information on this, and how to apply and follow the GNU GPL, see\r\n<http://www.gnu.org/licenses/>.\r\n\r\n  The GNU General Public License does not permit incorporating your program\r\ninto proprietary programs.  If your program is a subroutine library, you\r\nmay consider it more useful to permit linking proprietary applications with\r\nthe library.  If this is what you want to do, use the GNU Lesser General\r\nPublic License instead of this License.  But first, please read\r\n<http://www.gnu.org/philosophy/why-not-lgpl.html>."
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.294921875,
          "content": "[[source]]\nname = \"pypi\"\nurl = \"https://mirrors.aliyun.com/pypi/simple/\"\nverify_ssl = true\n\n[dev-packages]\n\n[packages]\ntqdm = \"*\"\nloguru = \"*\"\ndnspython = \"*\"\nexrex = \"*\"\nfire = \"*\"\nbs4 = \"*\"\ntenacity = \"*\"\ntreelib = \"*\"\nsqlalchemy = \"*\"\nrequests = \"*\"\npysocks = \"*\"\n\n[requires]\npython_version = \"3.8\"\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 13.5146484375,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"b593ca54685d3e36cb21706fd3ef3ee747c0d87fa7043fa483fcc30d316960eb\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {\n            \"python_version\": \"3.8\"\n        },\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"https://mirrors.aliyun.com/pypi/simple/\",\n                \"verify_ssl\": true\n            }\n        ]\n    },\n    \"default\": {\n        \"beautifulsoup4\": {\n            \"hashes\": [\n                \"sha256:4c98143716ef1cb40bf7f39a8e3eec8f8b009509e74904ba3a7b315431577e35\",\n                \"sha256:84729e322ad1d5b4d25f805bfa05b902dd96450f43842c4e99067d5e1369eb25\",\n                \"sha256:fff47e031e34ec82bf17e00da8f592fe7de69aeea38be00523c04623c04fb666\"\n            ],\n            \"version\": \"==4.9.3\"\n        },\n        \"bs4\": {\n            \"hashes\": [\n                \"sha256:36ecea1fd7cc5c0c6e4a1ff075df26d50da647b75376626cc186e2212886dd3a\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.0.1\"\n        },\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:1a4995114262bffbc2413b159f2a1a480c969de6e6eb13ee966d470af86af59c\",\n                \"sha256:719a74fb9e33b9bd44cc7f3a8d94bc35e4049deebe19ba7d8e108280cfd59830\"\n            ],\n            \"version\": \"==2020.12.5\"\n        },\n        \"chardet\": {\n            \"hashes\": [\n                \"sha256:0d6f53a15db4120f2b08c94f11e7d93d2c911ee118b6b30a04ec3ee8310179fa\",\n                \"sha256:f864054d66fd9118f2e67044ac8981a54775ec5b67aed0441892edb553d21da5\"\n            ],\n            \"version\": \"==4.0.0\"\n        },\n        \"colorama\": {\n            \"hashes\": [\n                \"sha256:5941b2b48a20143d2267e95b1c2a7603ce057ee39fd88e7329b0c292aa16869b\",\n                \"sha256:9f47eda37229f68eee03b24b9748937c7dc3868f906e8ba69fbcbdd3bc5dc3e2\"\n            ],\n            \"markers\": \"sys_platform == 'win32'\",\n            \"version\": \"==0.4.4\"\n        },\n        \"dnspython\": {\n            \"hashes\": [\n                \"sha256:95d12f6ef0317118d2a1a6fc49aac65ffec7eb8087474158f42f26a639135216\",\n                \"sha256:e4a87f0b573201a0f3727fa18a516b055fd1107e0e5477cded4a2de497df1dd4\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.1.0\"\n        },\n        \"exrex\": {\n            \"hashes\": [\n                \"sha256:3fb8b18fd9832eaff8b13dc042a4f63b13c5d684ee069f70a23ddfc6bcb708f3\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.10.5\"\n        },\n        \"fire\": {\n            \"hashes\": [\n                \"sha256:c5e2b8763699d1142393a46d0e3e790c5eb2f0706082df8f647878842c216a62\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.4.0\"\n        },\n        \"future\": {\n            \"hashes\": [\n                \"sha256:b1bead90b70cf6ec3f0710ae53a525360fa360d306a86583adc6bf83a4db537d\"\n            ],\n            \"version\": \"==0.18.2\"\n        },\n        \"greenlet\": {\n            \"hashes\": [\n                \"sha256:0a77691f0080c9da8dfc81e23f4e3cffa5accf0f5b56478951016d7cfead9196\",\n                \"sha256:0ddd77586553e3daf439aa88b6642c5f252f7ef79a39271c25b1d4bf1b7cbb85\",\n                \"sha256:111cfd92d78f2af0bc7317452bd93a477128af6327332ebf3c2be7df99566683\",\n                \"sha256:122c63ba795fdba4fc19c744df6277d9cfd913ed53d1a286f12189a0265316dd\",\n                \"sha256:181300f826625b7fd1182205b830642926f52bd8cdb08b34574c9d5b2b1813f7\",\n                \"sha256:1a1ada42a1fd2607d232ae11a7b3195735edaa49ea787a6d9e6a53afaf6f3476\",\n                \"sha256:1bb80c71de788b36cefb0c3bb6bfab306ba75073dbde2829c858dc3ad70f867c\",\n                \"sha256:1d1d4473ecb1c1d31ce8fd8d91e4da1b1f64d425c1dc965edc4ed2a63cfa67b2\",\n                \"sha256:292e801fcb3a0b3a12d8c603c7cf340659ea27fd73c98683e75800d9fd8f704c\",\n                \"sha256:2c65320774a8cd5fdb6e117c13afa91c4707548282464a18cf80243cf976b3e6\",\n                \"sha256:4365eccd68e72564c776418c53ce3c5af402bc526fe0653722bc89efd85bf12d\",\n                \"sha256:5352c15c1d91d22902582e891f27728d8dac3bd5e0ee565b6a9f575355e6d92f\",\n                \"sha256:58ca0f078d1c135ecf1879d50711f925ee238fe773dfe44e206d7d126f5bc664\",\n                \"sha256:5d4030b04061fdf4cbc446008e238e44936d77a04b2b32f804688ad64197953c\",\n                \"sha256:5d69bbd9547d3bc49f8a545db7a0bd69f407badd2ff0f6e1a163680b5841d2b0\",\n                \"sha256:5f297cb343114b33a13755032ecf7109b07b9a0020e841d1c3cedff6602cc139\",\n                \"sha256:62afad6e5fd70f34d773ffcbb7c22657e1d46d7fd7c95a43361de979f0a45aef\",\n                \"sha256:647ba1df86d025f5a34043451d7c4a9f05f240bee06277a524daad11f997d1e7\",\n                \"sha256:719e169c79255816cdcf6dccd9ed2d089a72a9f6c42273aae12d55e8d35bdcf8\",\n                \"sha256:7cd5a237f241f2764324396e06298b5dee0df580cf06ef4ada0ff9bff851286c\",\n                \"sha256:875d4c60a6299f55df1c3bb870ebe6dcb7db28c165ab9ea6cdc5d5af36bb33ce\",\n                \"sha256:90b6a25841488cf2cb1c8623a53e6879573010a669455046df5f029d93db51b7\",\n                \"sha256:94620ed996a7632723a424bccb84b07e7b861ab7bb06a5aeb041c111dd723d36\",\n                \"sha256:b5f1b333015d53d4b381745f5de842f19fe59728b65f0fbb662dafbe2018c3a5\",\n                \"sha256:c5b22b31c947ad8b6964d4ed66776bcae986f73669ba50620162ba7c832a6b6a\",\n                \"sha256:c93d1a71c3fe222308939b2e516c07f35a849c5047f0197442a4d6fbcb4128ee\",\n                \"sha256:cdb90267650c1edb54459cdb51dab865f6c6594c3a47ebd441bc493360c7af70\",\n                \"sha256:cfd06e0f0cc8db2a854137bd79154b61ecd940dce96fad0cba23fe31de0b793c\",\n                \"sha256:d3789c1c394944084b5e57c192889985a9f23bd985f6d15728c745d380318128\",\n                \"sha256:da7d09ad0f24270b20f77d56934e196e982af0d0a2446120cb772be4e060e1a2\",\n                \"sha256:df3e83323268594fa9755480a442cabfe8d82b21aba815a71acf1bb6c1776218\",\n                \"sha256:df8053867c831b2643b2c489fe1d62049a98566b1646b194cc815f13e27b90df\",\n                \"sha256:e1128e022d8dce375362e063754e129750323b67454cac5600008aad9f54139e\",\n                \"sha256:e6e9fdaf6c90d02b95e6b0709aeb1aba5affbbb9ccaea5502f8638e4323206be\",\n                \"sha256:eac8803c9ad1817ce3d8d15d1bb82c2da3feda6bee1153eec5c58fa6e5d3f770\",\n                \"sha256:eb333b90036358a0e2c57373f72e7648d7207b76ef0bd00a4f7daad1f79f5203\",\n                \"sha256:ed1d1351f05e795a527abc04a0d82e9aecd3bdf9f46662c36ff47b0b00ecaf06\",\n                \"sha256:f3dc68272990849132d6698f7dc6df2ab62a88b0d36e54702a8fd16c0490e44f\",\n                \"sha256:f59eded163d9752fd49978e0bab7a1ff21b1b8d25c05f0995d140cc08ac83379\",\n                \"sha256:f5e2d36c86c7b03c94b8459c3bd2c9fe2c7dab4b258b8885617d44a22e453fb7\",\n                \"sha256:f6f65bf54215e4ebf6b01e4bb94c49180a589573df643735107056f7a910275b\",\n                \"sha256:f8450d5ef759dbe59f84f2c9f77491bb3d3c44bc1a573746daf086e70b14c243\",\n                \"sha256:f97d83049715fd9dec7911860ecf0e17b48d8725de01e45de07d8ac0bd5bc378\"\n            ],\n            \"markers\": \"python_version >= '3'\",\n            \"version\": \"==1.0.0\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:b307872f855b18632ce0c21c5e45be78c0ea7ae4c15c828c20788b26921eb3f6\",\n                \"sha256:b97d804b1e9b523befed77c48dacec60e6dcb0b5391d57af6a65a312a90648c0\"\n            ],\n            \"version\": \"==2.10\"\n        },\n        \"loguru\": {\n            \"hashes\": [\n                \"sha256:b28e72ac7a98be3d28ad28570299a393dfcd32e5e3f6a353dec94675767b6319\",\n                \"sha256:f8087ac396b5ee5f67c963b495d615ebbceac2796379599820e324419d53667c\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.5.3\"\n        },\n        \"pysocks\": {\n            \"hashes\": [\n                \"sha256:08e69f092cc6dbe92a0fdd16eeb9b9ffbc13cadfe5ca4c7bd92ffb078b293299\",\n                \"sha256:2725bd0a9925919b9b51739eea5f9e2bae91e83288108a9ad338b2e3a4435ee5\",\n                \"sha256:3f8804571ebe159c380ac6de37643bb4685970655d3bba243530d6558b799aa0\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.7.1\"\n        },\n        \"requests\": {\n            \"hashes\": [\n                \"sha256:27973dd4a904a4f13b263a19c866c13b92a39ed1c964655f025f3f8d3d75b804\",\n                \"sha256:c210084e36a42ae6b9219e00e48287def368a26d03a048ddad7bfee44f75871e\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.25.1\"\n        },\n        \"six\": {\n            \"hashes\": [\n                \"sha256:30639c035cdb23534cd4aa2dd52c3bf48f06e5f4a941509c8bafd8ce11080259\",\n                \"sha256:8b74bedcbbbaca38ff6d7491d76f2b06b3592611af620f8426e82dddb04a5ced\"\n            ],\n            \"version\": \"==1.15.0\"\n        },\n        \"soupsieve\": {\n            \"hashes\": [\n                \"sha256:052774848f448cf19c7e959adf5566904d525f33a3f8b6ba6f6f8f26ec7de0cc\",\n                \"sha256:c2c1c2d44f158cdbddab7824a9af8c4f83c76b1e23e049479aa432feb6c4c23b\"\n            ],\n            \"markers\": \"python_version >= '3.0'\",\n            \"version\": \"==2.2.1\"\n        },\n        \"sqlalchemy\": {\n            \"hashes\": [\n                \"sha256:02b039e0e7e6de2f15ea2d2de3995e31a170e700ec0b37b4eded662171711d19\",\n                \"sha256:08943201a1e3c6238e48f4d5d56c27ea1e1b39d3d9f36a9d81fc3cfb0e1b83bd\",\n                \"sha256:0ee0054d4a598d2920cae14bcbd33e200e02c5e3b47b902627f8cf5d4c9a2a4b\",\n                \"sha256:11e7a86209f69273e75d2dd64b06c0c2660e39cd942fce2170515c404ed7358a\",\n                \"sha256:1294f05916c044631fd626a4866326bbfbd17f62bd37510d000afaef4b35bd74\",\n                \"sha256:2f11b5783933bff55291ca06496124347627d211ff2e509e846af1c35de0a3fb\",\n                \"sha256:301d0cd6ef1dc73b607748183da857e712d6f743de8d92b1e1f8facfb0ba2aa2\",\n                \"sha256:344b58b4b4193b72e8b768a51ef6eb5a4c948ce313a0f23e2ea081e71ce8ac0e\",\n                \"sha256:44e11a06168782b6d485daef197783366ce7ab0d5eea0066c899ae06cef47bbc\",\n                \"sha256:45b091ccbf94374ed14abde17e9a04522b0493a17282eaaf4383efdd413f5243\",\n                \"sha256:48540072f43b3c080159ec1f24a4b014c0ee83d3b73795399974aa358a8cf71b\",\n                \"sha256:4df07161897191ed8d4a0cfc92425c81296160e5c5f76c9256716d3085172883\",\n                \"sha256:4f7ce3bfdab6520554af4a5b1df4513d45388624d015ba4d921daf48ce1d6503\",\n                \"sha256:5361e25181b9872d6906c8c9be7dc05cb0a0951d71ee59ee5a71c1deb301b8a8\",\n                \"sha256:6f8fdad2f335d2f3ca2f3ee3b01404f7abcf519b03de2c510f1f42d16e39ffb4\",\n                \"sha256:70a1387396ea5b3022539b560c287daf79403d8b4b365f89b56d660e625a4457\",\n                \"sha256:7481f9c2c832a3bf37c80bee44d91ac9938b815cc06f7e795b976e300914aab9\",\n                \"sha256:7c0c7bb49167ac738ca6ee6e7f94a9988a7e4e261d8da335341e8c8c8f3b2e9b\",\n                \"sha256:7de84feb31af3d8fdf819cac2042928d0b60d3cb16f49c4b2f48d88db46e79f6\",\n                \"sha256:7f5087104c3c5af11ea59e49ae66c33ca98b14a47d3796ae97498fca53f84aef\",\n                \"sha256:81badd7d3e0e6aba70a5d1b50fabe8112e9835a6fdb0684054c3fe5378ce0d01\",\n                \"sha256:82f11b679df91275788be6734dd4a9dfa29bac67b85326992609f62b05bdab37\",\n                \"sha256:8301ecf3e819eb5dbc171e84654ff60872807775301a55fe35b0ab2ba3742031\",\n                \"sha256:8d6a9feb5efd2fdab25c6d5a0a5589fed9d789f5ec57ec12263fd0e60ce1dea6\",\n                \"sha256:915d4fa08776c0252dc5a34fa15c6490f66f411ea1ac9492022f98875d6baf20\",\n                \"sha256:94040a92b6676f9ffdab6c6b479b3554b927a635c90698c761960b266b04fc88\",\n                \"sha256:a08027ae84efc563f0f2f341dda572eadebeca38c0ae028a009988f27e9e6230\",\n                \"sha256:a103294583383660d9e06dbd82037dc8e94c184bdcb27b2be44ae4457dafc6b4\",\n                \"sha256:c22bfac8d3b955cdb13f0fcd6343156bf56d925196cf7d9ab9ce9f61d3f1e11c\",\n                \"sha256:c3810ebcf1d42c532c8f5c3f442c705d94442a27a32f2df5344f0857306ab321\",\n                \"sha256:ee4ddc904fb6414b5118af5b8d45e428aac2ccda01326b2ba2fe4354b0d8d1ae\",\n                \"sha256:f16801795f1ffe9472360589a04301018c79e4582a85e68067275bb4f765e4e2\",\n                \"sha256:f62c57ceadedeb8e7b98b48ac4d684bf2b0f73b9d882fed3ca260d9aedf6403f\",\n                \"sha256:fbb0fda1c574975807aceb0e2332e0ecfe9e5656c191ed482c1a5eafe7a33823\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.4.5\"\n        },\n        \"tenacity\": {\n            \"hashes\": [\n                \"sha256:5bd16ef5d3b985647fe28dfa6f695d343aa26479a04e8792b9d3c8f49e361ae1\",\n                \"sha256:a0ce48587271515db7d3a5e700df9ae69cce98c4b57c23a4886da15243603dd8\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==7.0.0\"\n        },\n        \"termcolor\": {\n            \"hashes\": [\n                \"sha256:1d6d69ce66211143803fbc56652b41d73b4a400a2891d7bf7a1cdf4c02de613b\"\n            ],\n            \"version\": \"==1.1.0\"\n        },\n        \"tqdm\": {\n            \"hashes\": [\n                \"sha256:9fdf349068d047d4cfbe24862c425883af1db29bcddf4b0eeb2524f6fbdb23c7\",\n                \"sha256:d666ae29164da3e517fcf125e41d4fe96e5bb375cd87ff9763f6b38b5592fe33\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.59.0\"\n        },\n        \"treelib\": {\n            \"hashes\": [\n                \"sha256:1cbfffb2d2b75ccac27d0200cee0507b6fbb0726e0afb9fae017ade5d2ce8788\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==1.6.1\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:2f4da4594db7e1e110a944bb1b551fdf4e6c136ad42e4234131391e21eb5b0df\",\n                \"sha256:e7b021f7241115872f92f43c6508082facffbd1c048e3c6e2bb9c2a157e28937\"\n            ],\n            \"version\": \"==1.26.4\"\n        },\n        \"win32-setctime\": {\n            \"hashes\": [\n                \"sha256:4e88556c32fdf47f64165a2180ba4552f8bb32c1103a2fafd05723a0bd42bd4b\",\n                \"sha256:dc925662de0a6eb987f0b01f599c01a8236cb8c62831c22d9cada09ad958243e\"\n            ],\n            \"markers\": \"sys_platform == 'win32'\",\n            \"version\": \"==1.0.3\"\n        }\n    },\n    \"develop\": {}\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.998046875,
          "content": "# OneForAll\n\n[![Build Status](https://travis-ci.org/shmilylty/OneForAll.svg?branch=master)](https://travis-ci.org/shmilylty/OneForAll)\n[![codecov](https://codecov.io/gh/shmilylty/OneForAll/branch/master/graph/badge.svg)](https://codecov.io/gh/shmilylty/OneForAll)\n[![Maintainability](https://api.codeclimate.com/v1/badges/1287668a6b4c72af683e/maintainability)](https://codeclimate.com/github/shmilylty/OneForAll/maintainability)\n[![License](https://img.shields.io/github/license/shmilylty/OneForAll)](https://github.com/shmilylty/OneForAll/tree/master/LICENSE)\n[![python](https://img.shields.io/badge/python-3.6+-blue)](https://github.com/shmilylty/OneForAll/tree/master/)\n[![python](https://img.shields.io/badge/release-v0.4.5-brightgreen)](https://github.com/shmilylty/OneForAll/releases)\n\n👊**OneForAll是一款功能强大的子域收集工具**  📝[English Document](https://github.com/shmilylty/OneForAll/tree/master/docs/en-us/README.md)\n\n![Example](./docs/usage_example.svg)\n\n## 🚀上手指南\n\n📢 请务必花一点时间阅读此文档，有助于你快速熟悉OneForAll！\n\n<details>\n<summary><b>🐍安装要求</b></summary>\n\nOneForAll基于[Python 3.6.0]( https://www.python.org/downloads/release/python-360/ )开发和测试，OneForAll需要高于Python 3.6.0的版本才能运行。\n安装Python环境可以参考[Python 3 安装指南](https://pythonguidecn.readthedocs.io/zh/latest/starting/installation.html#python-3)。运行以下命令检查Python和pip3版本：\n```bash\npython -V\npip3 -V\n```\n如果你看到类似以下的输出便说明Python环境没有问题：\n```bash\nPython 3.6.0\npip 19.2.2 from C:\\Users\\shmilylty\\AppData\\Roaming\\Python\\Python36\\site-packages\\pip (python 3.6)\n```\n</details>\n\n<details>\n<summary><b>✔安装步骤（git 版）</b></summary>\n\n1. **下载**\n\n由于该项目**处于开发中**，会不断进行更新迭代，下载时请使用`git clone`**克隆**最新代码仓库，也方便后续的更新，不推荐从Releases下载，因为Releases里版本更新缓慢，也不方便更新，\n本项目已经在[码云](https://gitee.com/shmilylty/OneForAll.git)(Gitee)镜像了一份，国内推荐使用码云进行克隆比较快：\n\n```bash\ngit clone https://gitee.com/shmilylty/OneForAll.git\n```\n或者：\n```bash\ngit clone https://github.com/shmilylty/OneForAll.git\n```\n\n2. **安装**\n\n你可以通过pip3安装OneForAll的依赖，以下为**Windows系统**下使用**pip3**安装依赖的示例：注意：如果你的Python3安装在系统Program Files目录下，如：`C:\\Program Files\\Python36`，那么请以管理员身份运行命令提示符cmd执行以下命令！\n\n```bash\ncd OneForAll/\npython3 -m pip install -U pip setuptools wheel -i https://mirrors.aliyun.com/pypi/simple/\npip3 install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/\npython3 oneforall.py --help\n```\n\n其他系统平台的请参考[依赖安装](https://github.com/shmilylty/OneForAll/tree/master/docs/installation_dependency.md)，如果在安装依赖过程中发现编译某个依赖库失败时可以参考[常见问题与回答.md](https://github.com/shmilylty/OneForAll/tree/master/docs/troubleshooting.md)文档中解决方法，如果依然不能解决欢迎加群反馈问题。\n\n3. **更新**\n\n执行以下命令**更新**项目（可保存对`/config/setting.py`和`/config/api.py`的修改）：\n\n```bash\ngit stash        # 暂存本地的修改\ngit fetch --all  # 拉取项目更新\ngit pull         # 下载覆盖\ngit stash pop    # 释放本地修改\n```\n</details>\n\n<details>\n<summary><b>✔安装步骤（docker 版）</b></summary>\n\n首先下载并编辑配置文件，添加自己的`api`和个性化设置，并保留原始文件结构\n\n```\nconfig\n├── api.py\n├── default.py\n├── __init__.py\n├── log.py\n└── setting.py\n```\n\n拉取镜像并执行，其中`~/.config`替换为你自己配置文件所在文件夹的路径\n\n```shell\ndocker pull shmilylty/oneforall\ndocker run -it --rm -v ~/results:/OneForAll/results -v ~/.config:/OneForAll/config shmilylty/oneforall --target example.com run\n```\n参数直接加在指令末尾，结果会输出在本地目录`~/results`，如需保存到其他位置，可以自行修改\n</details>\n\n\n<details>\n<summary><b>✨使用演示</b></summary>\n\n如果你是通过pip3安装的依赖则使用以下命令运行示例：   \n```bash\npython3 oneforall.py --target example.com run\npython3 oneforall.py --targets ./example.txt run\n```\n\n![Example](./docs/usage_example.svg)\n\n</details>\n\n<details>\n<summary><b>🧐结果说明</b></summary>\n\n我们以`python3 oneforall.py --target example.com run`命令为例，OneForAll在默认参数正常执行完毕会在results目录生成相应结果：\n\n![Result](./images/Result.png)\n\n`example.com.csv`是每个主域下的子域收集结果。\n\n`all_subdomain_result_1583034493.csv`是每次运行OneForAll收集到子域的汇总结果，包含`example.com.csv`，方便在批量收集场景中获取全部结果。\n\n`result.sqlite3`是存放每次运行OneForAll收集到子域的SQLite3结果数据库，其数据库结构如下图：\n\n![Database](./images/Database.png)\n\n其中类似`example_com_origin_result`表存放每个模块最初子域收集结果。\n\n其中类似`example_com_resolve_result`表存放对子域进行解析后的结果。\n\n其中类似`example_com_last_result`表存放上一次子域收集结果（需要收集两次以上才会生成）。\n\n其中类似`example_com_now_result`表存放现在子域收集结果，一般情况关注这张表就可以了。\n\n更多信息请参阅[字段解释说明](./docs/field.md)。\n</details>\n\n<details>\n<summary><b>🤔使用帮助</b></summary>\n\n命令行参数只提供了一些常用参数，更多详细的参数配置请见[setting.py](https://github.com/shmilylty/OneForAll/tree/master/config/setting.py)，如果你认为有些参数是命令界面经常使用到的或缺少了什么参数等问题非常欢迎反馈。由于众所周知的原因，如果要使用一些被墙的收集接口请先到[setting.py](https://github.com/shmilylty/OneForAll/tree/master/config/setting.py)配置代理，有些收集模块需要提供API（大多都是可以注册账号免费获取），如果需要使用请到[api.py](https://github.com/shmilylty/OneForAll/tree/master/config/api.py)配置API信息，如果不使用请忽略有关报错提示。（详细模块请阅读[收集模块说明](https://github.com/shmilylty/OneForAll/tree/master/docs/collection_modules.md)）\n\nOneForAll命令行界面基于[Fire](https://github.com/google/python-fire/)实现，有关Fire更高级使用方法请参阅[使用Fire CLI](https://github.com/google/python-fire/blob/master/docs/using-cli.md)。\n\n[oneforall.py](https://github.com/shmilylty/OneForAll/tree/master/oneforall.py)是主程序入口，oneforall.py可以调用[brute.py](https://github.com/shmilylty/OneForAll/tree/master/brute.py)，[takerover.py](https://github.com/shmilylty/OneForAll/tree/master/takerover.py)及[dbexport.py](https://github.com/shmilylty/OneForAll/tree/master/dbexport.py)等模块，为了方便进行子域爆破独立出了brute.py，为了方便进行子域接管风险检查独立出了takerover.py，为了方便数据库导出独立出了dbexport.py，这些模块都可以单独运行，并且所接受参数要更丰富一点，如果要单独使用这些模块请参考[使用帮助](https://github.com/shmilylty/OneForAll/tree/master/docs/usage_help.md)\n\n❗注意：当你在使用过程中遇到一些问题或者疑惑时，请先到[Issues](https://github.com/shmilylty/OneForAll/issues)里使用搜索找找答案，还可以参阅[常见问题与回答](https://github.com/shmilylty/OneForAll/tree/master/docs/troubleshooting.md)。\n\n**oneforall.py使用帮助**\n\n以下帮助信息可能不是最新的，你可以使用`python oneforall.py --help`获取最新的帮助信息。\n\n```bash\npython oneforall.py --help\n```\n```bash\nNAME\n    oneforall.py - OneForAll帮助信息\n\nSYNOPSIS\n    oneforall.py COMMAND | --target=TARGET <flags>\n\nDESCRIPTION\n    OneForAll是一款功能强大的子域收集工具\n\n    Example:\n        python3 oneforall.py version\n        python3 oneforall.py --target example.com run\n        python3 oneforall.py --targets ./domains.txt run\n        python3 oneforall.py --target example.com --valid None run\n        python3 oneforall.py --target example.com --brute True run\n        python3 oneforall.py --target example.com --port small run\n        python3 oneforall.py --target example.com --fmt csv run\n        python3 oneforall.py --target example.com --dns False run\n        python3 oneforall.py --target example.com --req False run\n        python3 oneforall.py --target example.com --takeover False run\n        python3 oneforall.py --target example.com --show True run\n\n    Note:\n        参数alive可选值True，False分别表示导出存活，全部子域结果\n        参数port可选值有'default', 'small', 'large', 详见config.py配置\n        参数fmt可选格式有 'csv','json'\n        参数path默认None使用OneForAll结果目录生成路径\n\nARGUMENTS\n    TARGET\n        单个域名(二选一必需参数)\n    TARGETS\n        每行一个域名的文件路径(二选一必需参数)\n\nFLAGS\n    --brute=BRUTE\n        s\n    --dns=DNS\n        DNS解析子域(默认True)\n    --req=REQ\n        HTTP请求子域(默认True)\n    --port=PORT\n        请求验证子域的端口范围(默认只探测80端口)\n    --valid=VALID\n        只导出存活的子域结果(默认False)\n    --fmt=FMT\n        结果保存格式(默认csv)\n    --path=PATH\n        结果保存路径(默认None)\n    --takeover=TAKEOVER\n        检查子域接管(默认False)\n```\n</details>\n\n## 🎉项目简介\n\n项目地址：[https://github.com/shmilylty/OneForAll](https://github.com/shmilylty/OneForAll)\n\n在渗透测试中信息收集的重要性不言而喻，子域收集是信息收集中必不可少且非常重要的一环，目前网上也开源了许多子域收集的工具，但是总是存在以下部分问题：\n\n* **不够强大**，子域收集的接口不够多，不能做到对批量子域自动收集，没有自动子域解析，验证，FUZZ以及信息拓展等功能。\n* **不够友好**，固然命令行模块比较方便，但是当可选的参数很多，要实现的操作复杂，用命令行模式就有点不够友好，如果有交互良好，高可操作的前端那么使用体验就会好很多。\n* **缺少维护**，很多工具几年没有更新过一次，issues和PR是啥，不存在的。\n* **效率问题**，没有利用多进程，多线程以及异步协程技术，速度较慢。\n\n为了解决以上痛点，此项目应用而生，正如其名，我希望OneForAll是一款集百家之长，功能强大的全面快速子域收集终极神器🔨。\n\n目前OneForAll还在开发中，肯定有不少问题和需要改进的地方，欢迎大佬们提交[Issues](https://github.com/shmilylty/OneForAll/issues)和[PR](https://github.com/shmilylty/OneForAll/pulls)，用着还行给个小星星✨吧，目前有一个专门用于OneForAll交流和反馈QQ群👨‍👨‍👦‍👦：:[**824414244**](//shang.qq.com/wpa/qunwpa?idkey=125d3689b60445cdbb11e4ddff38036b7f6f2abbf4f7957df5dddba81aa90771)（加群验证：信息收集）。\n\n## 👍功能特性\n\n* **收集能力强大**，详细模块请阅读[收集模块说明](https://github.com/shmilylty/OneForAll/tree/master/docs/collection_modules.md)。\n  1. 利用证书透明度收集子域（目前有6个模块：`censys_api`，`certspotter`，`crtsh`，`entrust`，`google`，`spyse_api`）\n  2. 常规检查收集子域（目前有4个模块：域传送漏洞利用`axfr`，检查跨域策略文件`cdx`，检查HTTPS证书`cert`，检查内容安全策略`csp`，检查robots文件`robots`，检查sitemap文件`sitemap`，利用NSEC记录遍历DNS域`dnssec`，后续会添加NSEC3记录等模块）\n  3. 利用网上爬虫档案收集子域（目前有2个模块：`archivecrawl`，`commoncrawl`，此模块还在调试，该模块还有待添加和完善）\n  4. 利用DNS数据集收集子域（目前有24个模块：`bevigil_api`, `binaryedge_api`, `bufferover`, `cebaidu`, `chinaz`, `chinaz_api`, `circl_api`, `cloudflare`, `dnsdb_api`, `dnsdumpster`, `hackertarget`, `ip138`, `ipv4info_api`, `netcraft`, `passivedns_api`, `ptrarchive`, `qianxun`, `rapiddns`, `riddler`, `robtex`, `securitytrails_api`, `sitedossier`, `threatcrowd`, `wzpc`, `ximcx`）\n  5. 利用DNS查询收集子域（目前有5个模块：通过枚举常见的SRV记录并做查询来收集子域`srv`，以及通过查询域名的DNS记录中的MX,NS,SOA,TXT记录来收集子域）\n  6. 利用威胁情报平台数据收集子域（目前有6个模块：`alienvault`, `riskiq_api`，`threatbook_api`，`threatminer`，`virustotal`，`virustotal_api`该模块还有待添加和完善）\n  7. 利用搜索引擎发现子域（目前有18个模块：`ask`, `baidu`, `bing`, `bing_api`, `duckduckgo`, `exalead`, `fofa_api`, `gitee`, `github`, `github_api`, `google`, `google_api`, `shodan_api`, `so`, `sogou`, `yahoo`, `yandex`, `zoomeye_api`），在搜索模块中除特殊搜索引擎，通用的搜索引擎都支持自动排除搜索，全量搜索，递归搜索。\n* **支持子域爆破**，该模块有常规的字典爆破，也有自定义的fuzz模式，支持批量爆破和递归爆破，自动判断泛解析并处理。\n* **支持子域验证**，默认开启子域验证，自动解析子域DNS，自动请求子域获取title和banner，并综合判断子域存活情况。\n* **支持子域爬取**，根据已有的子域，请求子域响应体以及响应体里的JS，从中再次发现新的子域。\n* **支持子域置换**，根据已有的子域，使用子域替换技术再次发现新的子域。\n* **支持子域接管**，默认开启子域接管风险检查，支持子域自动接管（目前只有Github，有待完善），支持批量检查。\n* **处理功能强大**，发现的子域结果支持自动去除，自动DNS解析，HTTP请求探测，自动筛选出有效子域，拓展子域的Banner信息，最终支持的导出格式有`txt`, `csv`, `json`。\n* **速度极快**，[收集模块](https://github.com/shmilylty/OneForAll/tree/master/collect.py)使用多线程调用，[爆破模块](https://github.com/shmilylty/OneForAll/tree/master/brute.py)使用[massdns](https://github.com/blechschmidt/massdns)，DNS解析速度每秒可解析350000以上个域名，子域验证中DNS解析和HTTP请求使用异步多协程，多线程检查[子域接管](https://github.com/shmilylty/OneForAll/tree/master/takeover.py)风险。\n* **体验良好**，各模块都有进度条，异步保存各模块结果。\n\n如果你有其他很棒的想法请务必告诉我！😎\n\n## 🌲目录结构\n\n更多信息请参阅[目录结构说明](https://github.com/shmilylty/OneForAll/tree/master/docs/directory_structure.md)。\n\n本项目[docs](https://github.com/shmilylty/OneForAll/tree/master/docs/)目录下还提供了一些帮助与说明，如[子域字典来源说明](https://github.com/shmilylty/OneForAll/tree/master/docs/dictionary_source.md)、[泛解析判断流程](https://github.com/shmilylty/OneForAll/tree/master/docs/wildcard_judgment.png)。\n\n\n## 👏用到框架\n\n* [aiohttp](https://github.com/aio-libs/aiohttp) - 异步http客户端/服务器框架\n* [beautifulsoup4](https://pypi.org/project/beautifulsoup4/) - 可以轻松从HTML或XML文件中提取数据的Python库\n* [fire](https://github.com/google/python-fire) - Python Fire是一个纯粹根据任何Python对象自动生成命令行界面（CLI）的库\n* [loguru](https://github.com/Delgan/loguru) - 旨在带来愉快的日志记录Python库\n* [massdns](https://github.com/blechschmidt/massdns) - 高性能的DNS解析器\n* [records](https://github.com/kennethreitz/records) - Records是一个非常简单但功能强大的库，用于对大多数关系数据库进行最原始SQL查询。\n* [requests](https://github.com/psf/requests) - Requests 唯一的一个非转基因的 Python HTTP 库，人类可以安全享用。\n* [tqdm](https://github.com/tqdm/tqdm) - 适用于Python和CLI的快速，可扩展的进度条库\n\n感谢这些伟大优秀的Python库！\n\n## 🔖版本控制\n\n该项目使用[SemVer](https://semver.org/)语言化版本格式进行版本管理，你可以参阅[变更记录说明](https://github.com/shmilylty/OneForAll/tree/master/docs/changes.md)了解历史变更情况。\n\n## ⌛后续计划\n\n- [ ] 各模块持续优化和完善\n- [ ] 操作强大交互人性的前端界面实现\n\n更多信息请参阅[后续开发计划](https://github.com/shmilylty/OneForAll/tree/master/docs/todo.md)。\n\n## 🙏贡献\n\n非常热烈欢迎各位大佬一起完善本项目！\n\n## 👨‍💻贡献者\n\n* **[Jing Ling](https://github.com/shmilylty)**\n  * 核心开发\n\n你可以在[贡献者文档](https://github.com/shmilylty/OneForAll/tree/master/docs/contributors.md)中查看所有贡献者以及他们所做出的贡献，感谢他们让OneForAll变得更强大好用。\n\n## ☕赞赏\n\n如果你觉得这个项目帮助到了你，你可以打赏一杯咖啡以资鼓励:)\n\n![](https://raw.githubusercontent.com/shmilylty/OneForAll/master/images/Donate.png)\n\n## 📄版权\n\n该项目签署了GPL-3.0授权许可，详情请参阅[LICENSE](https://github.com/shmilylty/OneForAll/blob/master/LICENSE)。\n\n## 😘鸣谢\n\n感谢网上开源的各个子域收集项目！\n\n感谢[A-Team](https://github.com/QAX-A-Team)大哥们热情无私的问题解答！\n\n## 📜免责声明\n\n本工具仅能在取得足够合法授权的企业安全建设中使用，在使用本工具过程中，您应确保自己所有行为符合当地的法律法规。 \n如您在使用本工具的过程中存在任何非法行为，您将自行承担所有后果，本工具所有开发者和所有贡献者不承担任何法律及连带责任。\n除非您已充分阅读、完全理解并接受本协议所有条款，否则，请您不要安装并使用本工具。\n您的使用行为或者您以其他任何明示或者默示方式表示接受本协议的，即视为您已阅读并同意本协议的约束。\n\n## 💖Star趋势\n\n[![Stargazers over time](https://starchart.cc/shmilylty/OneForAll.svg)](https://starchart.cc/shmilylty/OneForAll)\n"
        },
        {
          "name": "brute.py",
          "type": "blob",
          "size": 20.1162109375,
          "content": "#!/usr/bin/python3\n# coding=utf-8\n\n\"\"\"\nOneForAll subdomain brute module\n\n:copyright: Copyright (c) 2019, Jing Ling. All rights reserved.\n:license: GNU General Public License v3.0, see LICENSE for more details.\n\"\"\"\nimport gc\nimport json\nimport time\n\nimport exrex\nimport fire\n\nimport export\nfrom common import utils\nfrom config import settings\nfrom common.module import Module\nfrom modules import wildcard\nfrom config.log import logger\n\n\ndef gen_subdomains(expression, path):\n    \"\"\"\n    Generate subdomains\n\n    :param  str  expression: generate subdomains expression\n    :param  str  path: path of wordlist\n    :return set  subdomains: list of subdomains\n    \"\"\"\n    subdomains = set()\n    with open(path, encoding='utf-8', errors='ignore') as fd:\n        for line in fd:\n            word = line.strip().lower()\n            if len(word) == 0:\n                continue\n            if not utils.is_subname(word):\n                continue\n            if word.startswith('.'):\n                word = word[1:]\n            if word.endswith('.'):\n                word = word[:-1]\n            subdomain = expression.replace('*', word)\n            subdomains.add(subdomain)\n    size = len(subdomains)\n    logger.log('DEBUG', f'The size of the dictionary generated by {path} is {size}')\n    if size == 0:\n        logger.log('ALERT', 'Please check the dictionary content!')\n    else:\n        utils.check_random_subdomain(subdomains)\n    return subdomains\n\n\ndef gen_fuzz_subdomains(expression, rule, fuzzlist):\n    \"\"\"\n    Generate subdomains based on fuzz mode\n\n    :param  str  expression: generate subdomains expression\n    :param  str  rule: regexp rule\n    :param  str  fuzzlist: fuzz dictionary\n    :return set  subdomains: list of subdomains\n    \"\"\"\n    subdomains = set()\n    if fuzzlist:\n        fuzz_domain = gen_subdomains(expression, fuzzlist)\n        subdomains.update(fuzz_domain)\n    if rule:\n        fuzz_count = exrex.count(rule)\n        if fuzz_count > 10000000:\n            logger.log('ALERT', f'The dictionary generated by this rule is too large: '\n                                f'{fuzz_count} > 10000000')\n        for fuzz_string in exrex.generate(rule):\n            fuzz_string = fuzz_string.lower()\n            if not fuzz_string.isalnum():\n                continue\n            fuzz_domain = expression.replace('*', fuzz_string)\n            subdomains.add(fuzz_domain)\n        utils.check_random_subdomain(subdomains)\n    logger.log('DEBUG', f'Dictionary size based on fuzz mode: {len(subdomains)}')\n    return subdomains\n\n\ndef gen_word_subdomains(expression, path):\n    \"\"\"\n    Generate subdomains based on word mode\n\n    :param  str  expression: generate subdomains expression\n    :param  str  path: path of wordlist\n    :return set  subdomains: list of subdomains\n    \"\"\"\n    subdomains = gen_subdomains(expression, path)\n    logger.log('DEBUG', f'Dictionary based on word mode size: {len(subdomains)}')\n    return subdomains\n\n\ndef query_domain_ns_a(ns_list):\n    logger.log('INFOR', f'Querying A record from authoritative name server: {ns_list} ')\n    if not isinstance(ns_list, list):\n        return list()\n    ns_ip_list = []\n    resolver = utils.dns_resolver()\n    for ns in ns_list:\n        try:\n            answer = resolver.query(ns, 'A')\n        except Exception as e:\n            logger.log('ERROR', e.args)\n            logger.log('ERROR', f'Query authoritative name server {ns} A record error')\n            continue\n        if answer:\n            for item in answer:\n                ns_ip_list.append(item.address)\n    logger.log('INFOR', f'Authoritative name server A record result: {ns_ip_list}')\n    return ns_ip_list\n\n\ndef query_domain_ns(domain):\n    logger.log('INFOR', f'Querying NS records of {domain}')\n    domain = utils.get_main_domain(domain)\n    resolver = utils.dns_resolver()\n    try:\n        answer = resolver.query(domain, 'NS')\n    except Exception as e:\n        logger.log('ERROR', e.args)\n        logger.log('ERROR', f'Querying NS records of {domain} error')\n        return list()\n    ns = [item.to_text() for item in answer]\n    logger.log('INFOR', f'{domain}\\'s authoritative name server is {ns}')\n    return ns\n\n\ndef check_dict():\n    if not settings.enable_check_dict:\n        return\n    sec = settings.check_time\n    logger.log('ALERT', f'You have {sec} seconds to check '\n                        f'whether the configuration is correct or not')\n    logger.log('ALERT', f'If you want to exit, please use `Ctrl + C`')\n    try:\n        time.sleep(sec)\n    except KeyboardInterrupt:\n        logger.log('INFOR', 'Due to configuration incorrect, exited')\n        exit(0)\n\n\ndef gen_result_infos(items, infos, subdomains, appear_times, wc_ips, wc_ttl):\n    qname = items.get('name')[:-1]  # 去除最右边的`.`点号\n    reason = items.get('status')\n    resolver = items.get('resolver')\n    data = items.get('data')\n    answers = data.get('answers')\n    info = dict()\n    cnames = list()\n    ips = list()\n    ip_times = list()\n    cname_times = list()\n    ttls = list()\n    is_valid_flags = list()\n    have_a_record = False\n    for answer in answers:\n        if answer.get('type') != 'A':\n            continue\n        have_a_record = True\n        ttl = answer.get('ttl')\n        ttls.append(ttl)\n        name = answer.get('name')  # 去除最右边的`.`点号\n        cname = name[:-1].lower()  # 去除最右边的`.`点号\n        cnames.append(cname)\n        cname_num = appear_times.get(cname)\n        cname_times.append(cname_num)\n        ip = answer.get('data')\n        ips.append(ip)\n        ip_num = appear_times.get(ip)\n        ip_times.append(ip_num)\n        isvalid, reason = wildcard.is_valid_subdomain(ip, ip_num, cname, cname_num, ttl, wc_ttl, wc_ips)\n        logger.log('TRACE', f'{ip} effective: {isvalid} reason: {reason}')\n        is_valid_flags.append(isvalid)\n    if not have_a_record:\n        logger.log('TRACE', f'All query result of {qname} no A record{answers}')\n    # 为了优化内存 只添加有A记录且通过判断的子域到记录中\n    if have_a_record and all(is_valid_flags):\n        info['resolve'] = 1\n        info['reason'] = reason\n        info['ttl'] = ttls\n        info['cname'] = cnames\n        info['ip'] = ips\n        info['ip_times'] = ip_times\n        info['cname_times'] = cname_times\n        info['resolver'] = resolver\n        infos[qname] = info\n        subdomains.append(qname)\n    return infos, subdomains\n\n\ndef stat_appear_times(result_path):\n    logger.log('INFOR', f'Counting IP cname appear times')\n    times = dict()\n    logger.log('DEBUG', f'Reading {result_path}')\n    with open(result_path) as fd:\n        for line in fd:\n            line = line.strip()\n            try:\n                items = json.loads(line)\n            except Exception as e:\n                logger.log('ERROR', e.args)\n                logger.log('ERROR', f'Error parsing {result_path} '\n                                    f'line {line} Skip this line')\n                continue\n            status = items.get('status')\n            if status != 'NOERROR':\n                continue\n            data = items.get('data')\n            if 'answers' not in data:\n                continue\n            answers = data.get('answers')\n            for answer in answers:\n                if answer.get('type') == 'A':\n                    ip = answer.get('data')\n                    # 取值 如果是首次出现的IP集合 出现次数先赋值0\n                    value_one = times.setdefault(ip, 0)\n                    times[ip] = value_one + 1\n                    name = answer.get('data')\n                    cname = name[:-1].lower()  # 去除最右边的`.`点号\n                    # 取值 如果是首次出现的IP集合 出现次数先赋值0\n                    value_two = times.setdefault(cname, 0)\n                    times[cname] = value_two + 1\n                if answer.get('type') == 'CNAME':\n                    name = answer.get('data')\n                    cname = name[:-1].lower()  # 去除最右边的`.`点号\n                    # 取值 如果是首次出现的IP集合 出现次数先赋值0\n                    value_three = times.setdefault(cname, 0)\n                    times[cname] = value_three + 1\n    return times\n\n\ndef deal_output(output_path, appear_times, wildcard_ips, wildcard_ttl):\n    logger.log('INFOR', f'Processing result')\n    infos = dict()  # 用来记录所有域名有关信息\n    subdomains = list()  # 用来保存所有通过有效性检查的子域\n    logger.log('DEBUG', f'Processing {output_path}')\n    with open(output_path) as fd:\n        for line in fd:\n            line = line.strip()\n            try:\n                items = json.loads(line)\n            except Exception as e:\n                logger.log('ERROR', e.args)\n                logger.log('ERROR', f'Error parsing {line} Skip this line')\n                continue\n            qname = items.get('name')[:-1]  # 去除最右边的`.`点号\n            status = items.get('status')\n            if status != 'NOERROR':\n                logger.log('TRACE', f'Found {qname}\\'s result {status} '\n                                    f'while processing {line}')\n                continue\n            data = items.get('data')\n            if 'answers' not in data:\n                logger.log('TRACE', f'Processing {line}, {qname} no response')\n                continue\n            infos, subdomains = gen_result_infos(items, infos, subdomains,\n                                                 appear_times, wildcard_ips,\n                                                 wildcard_ttl)\n    return infos, subdomains\n\n\ndef save_brute_dict(dict_path, dict_set):\n    dict_data = '\\n'.join(dict_set)\n    if not utils.save_to_file(dict_path, dict_data):\n        logger.log('FATAL', 'Saving dictionary error')\n        exit(1)\n\n\ndef delete_file(dict_path, output_path):\n    if settings.delete_generated_dict:\n        dict_path.unlink()\n    if settings.delete_massdns_result:\n        output_path.unlink()\n\n\nclass Brute(Module):\n    \"\"\"\n    OneForAll subdomain brute module\n\n    Example：\n        brute.py --target domain.com --word True run\n        brute.py --targets ./domains.txt --word True run\n        brute.py --target domain.com --word True --concurrent 2000 run\n        brute.py --target domain.com --word True --wordlist subnames.txt run\n        brute.py --target domain.com --word True --recursive True --depth 2 run\n        brute.py --target d.com --fuzz True --place m.*.d.com --rule '[a-z]' run\n        brute.py --target d.com --fuzz True --place m.*.d.com --fuzzlist subnames.txt run\n\n    Note:\n        --fmt csv/json (result format)\n        --path   Result path (default None, automatically generated)\n\n\n    :param str  target:     One domain (target or targets must be provided)\n    :param str  targets:    File path of one domain per line\n    :param int  concurrent: Number of concurrent (default 2000)\n    :param bool word:       Use word mode generate dictionary (default False)\n    :param str  wordlist:   Dictionary path used in word mode (default use ./config/default.py)\n    :param bool recursive:  Use recursion (default False)\n    :param int  depth:      Recursive depth (default 2)\n    :param str  nextlist:   Dictionary file path used by recursive (default use ./config/default.py)\n    :param bool fuzz:       Use fuzz mode generate dictionary (default False)\n    :param bool alive:      Only export alive subdomains (default False)\n    :param str  place:      Designated fuzz position (required if use fuzz mode)\n    :param str  rule:       Specify the regexp rules used in fuzz mode (required if use fuzz mode)\n    :param str  fuzzlist:   Dictionary path used in fuzz mode (default use ./config/default.py)\n    :param bool export:     Export the results (default True)\n    :param str  fmt:        Result format (default csv)\n    :param str  path:       Result directory (default None)\n    \"\"\"\n    def __init__(self, target=None, targets=None, concurrent=None,\n                 word=False, wordlist=None, recursive=False, depth=None,\n                 nextlist=None, fuzz=False, place=None, rule=None, fuzzlist=None,\n                 export=True, alive=True, fmt='csv', path=None):\n        Module.__init__(self)\n        self.module = 'Brute'\n        self.source = 'Brute'\n        self.target = target\n        self.targets = targets\n        self.concurrent_num = concurrent or settings.brute_concurrent_num\n        self.word = word\n        self.wordlist = wordlist or settings.brute_wordlist_path\n        self.recursive_brute = recursive or settings.enable_recursive_brute\n        self.recursive_depth = depth or settings.brute_recursive_depth\n        self.recursive_nextlist = nextlist or settings.recursive_nextlist_path\n        self.fuzz = fuzz or settings.enable_fuzz\n        self.place = place or settings.fuzz_place\n        self.rule = rule or settings.fuzz_rule\n        self.fuzzlist = fuzzlist or settings.fuzz_list\n        self.export = export\n        self.alive = alive\n        self.fmt = fmt\n        self.path = path\n        self.bulk = False  # 是否是批量爆破场景\n        self.domains = list()  # 待爆破的所有域名集合\n        self.domain = str()  # 当前正在进行爆破的域名\n        self.ips_times = dict()  # IP集合出现次数\n        self.enable_wildcard = None  # 当前域名是否使用泛解析\n        self.quite = False\n\n    def gen_brute_dict(self, domain):\n        logger.log('INFOR', f'Generating dictionary for {domain}')\n        dict_set = set()\n        # 如果domain不是self.subdomain 而是self.domain的子域则生成递归爆破字典\n        if self.word:\n            self.place = ''\n        if not self.place:\n            self.place = '*.' + domain\n        wordlist = self.wordlist\n        main_domain = utils.get_main_domain(domain)\n        if domain != main_domain:\n            wordlist = self.recursive_nextlist\n        if self.word:\n            word_subdomains = gen_word_subdomains(self.place, wordlist)\n            dict_set.update(word_subdomains)\n        if self.fuzz:\n            fuzz_subdomains = gen_fuzz_subdomains(self.place, self.rule, self.fuzzlist)\n            dict_set.update(fuzz_subdomains)\n        count = len(dict_set)\n        logger.log('INFOR', f'Dictionary size: {count}')\n        if count > 10000000:\n            logger.log('ALERT', f'The generated dictionary is '\n                                f'too large {count} > 10000000')\n        return dict_set\n\n    def check_brute_params(self):\n        if not (self.word or self.fuzz):\n            logger.log('FATAL', f'Please specify at least one brute mode')\n            exit(1)\n        if len(self.domains) > 1:\n            self.bulk = True\n        if self.fuzz:\n            if self.place is None:\n                logger.log('FATAL', f'No fuzz position specified')\n                exit(1)\n            if self.rule is None and self.fuzzlist is None:\n                logger.log('FATAL', f'No fuzz rules or fuzz dictionary specified')\n                exit(1)\n            if self.bulk:\n                logger.log('FATAL', f'Cannot use fuzz mode in the bulk brute')\n                exit(1)\n            if self.recursive_brute:\n                logger.log('FATAL', f'Cannot use recursive brute in fuzz mode')\n                exit(1)\n            fuzz_count = self.place.count('*')\n            if fuzz_count < 1:\n                logger.log('FATAL', f'No fuzz position specified')\n                exit(1)\n            if fuzz_count > 1:\n                logger.log('FATAL', f'Only one fuzz position can be specified')\n                exit(1)\n            if self.domain not in self.place:\n                logger.log('FATAL', f'Incorrect domain for fuzz')\n                exit(1)\n\n    def init_dict_path(self):\n        data_dir = settings.data_storage_dir\n        if self.wordlist is None:\n            self.wordlist = settings.brute_wordlist_path or data_dir.joinpath('subnames.txt')\n        if self.recursive_nextlist is None:\n            self.recursive_nextlist = settings.recursive_nextlist_path or data_dir.joinpath('subnames_next.txt')\n\n    def main(self, domain):\n        start = time.time()\n        logger.log('INFOR', f'Blasting {domain} ')\n        massdns_dir = settings.third_party_dir.joinpath('massdns')\n        result_dir = settings.result_save_dir\n        temp_dir = result_dir.joinpath('temp')\n        utils.check_dir(temp_dir)\n        massdns_path = utils.get_massdns_path(massdns_dir)\n        timestring = utils.get_timestring()\n\n        wildcard_ips = list()  # 泛解析IP列表\n        wildcard_ttl = int()  # 泛解析TTL整型值\n        ns_list = query_domain_ns(self.domain)\n        ns_ip_list = query_domain_ns_a(ns_list)  # DNS权威名称服务器对应A记录列表\n        if self.enable_wildcard is None:\n            self.enable_wildcard = wildcard.detect_wildcard(domain)\n\n        if self.enable_wildcard:\n            wildcard_ips, wildcard_ttl = wildcard.collect_wildcard_record(domain, ns_ip_list)\n        ns_path = utils.get_ns_path(settings.use_china_nameservers, self.enable_wildcard, ns_ip_list)\n\n        dict_set = self.gen_brute_dict(domain)\n\n        dict_name = f'generated_subdomains_{domain}_{timestring}.txt'\n        dict_path = temp_dir.joinpath(dict_name)\n        save_brute_dict(dict_path, dict_set)\n        del dict_set\n        gc.collect()\n\n        output_name = f'resolved_result_{domain}_{timestring}.json'\n        output_path = temp_dir.joinpath(output_name)\n        log_path = result_dir.joinpath('massdns.log')\n        check_dict()\n        logger.log('INFOR', f'Running massdns to brute subdomains')\n        utils.call_massdns(massdns_path, dict_path, ns_path, output_path,\n                           log_path, quiet_mode=self.quite,\n                           concurrent_num=self.concurrent_num)\n        appear_times = stat_appear_times(output_path)\n        self.infos, self.subdomains = deal_output(output_path, appear_times,\n                                                  wildcard_ips, wildcard_ttl)\n        delete_file(dict_path, output_path)\n        end = time.time()\n        self.elapse = round(end - start, 1)\n        logger.log('ALERT', f'{self.source} module takes {self.elapse} seconds, '\n                            f'found {len(self.subdomains)} subdomains of {domain}')\n        logger.log('DEBUG', f'{self.source} module found subdomains of {domain}: '\n                            f'{self.subdomains}')\n        self.gen_result()\n        self.save_db()\n        return self.subdomains\n\n    def run(self):\n        logger.log('INFOR', f'Start running {self.source} module')\n        self.domains = utils.get_domains(self.target, self.targets)\n        for self.domain in self.domains:\n            self.results = list()  # 置空\n            all_subdomains = list()\n            self.init_dict_path()\n            self.check_brute_params()\n            if self.recursive_brute:\n                logger.log('INFOR', f'Start recursively brute the 1 layer subdomain'\n                                    f' of {self.domain}')\n            valid_subdomains = self.main(self.domain)\n\n            all_subdomains.extend(valid_subdomains)\n\n            # 递归爆破下一层的子域\n            # fuzz模式不使用递归爆破\n            if self.recursive_brute:\n                for layer_num in range(1, self.recursive_depth):\n                    # 之前已经做过1层子域爆破 当前实际递归层数是layer+1\n                    logger.log('INFOR', f'Start recursively brute the {layer_num + 1} '\n                                        f'layer subdomain of {self.domain}')\n                    for subdomain in all_subdomains:\n                        self.place = '*.' + subdomain\n                        # 进行下一层子域爆破的限制条件\n                        num = subdomain.count('.') - self.domain.count('.')\n                        if num == layer_num:\n                            valid_subdomains = self.main(subdomain)\n                            all_subdomains.extend(valid_subdomains)\n\n            logger.log('INFOR', f'Finished {self.source} module to brute {self.domain}')\n            if not self.path:\n                name = f'{self.domain}_brute_result.{self.fmt}'\n                self.path = settings.result_save_dir.joinpath(name)\n            # 数据库导出\n            if self.export:\n                export.export_data(self.domain,\n                                   alive=self.alive,\n                                   limit='resolve',\n                                   path=self.path,\n                                   fmt=self.fmt)\n\n\nif __name__ == '__main__':\n    fire.Fire(Brute)\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "export.py",
          "type": "blob",
          "size": 2.2158203125,
          "content": "#!/usr/bin/python3\n# coding=utf-8\n\n\"\"\"\nOneForAll export from database module\n\n:copyright: Copyright (c) 2019, Jing Ling. All rights reserved.\n:license: GNU General Public License v3.0, see LICENSE for more details.\n\"\"\"\n\nimport fire\n\nfrom common import utils\nfrom common.database import Database\nfrom config.log import logger\n\n\ndef export_data(target, db=None, alive=False, limit=None, path=None, fmt='csv', show=False):\n    \"\"\"\n    OneForAll export from database module\n\n    Example:\n        python3 export.py --target name --fmt csv --dir= ./result.csv\n        python3 export.py --target name --tb True --show False\n        python3 export.py --db result.db --target name --show False\n\n    Note:\n        --fmt csv/json (result format)\n        --path   Result directory (default directory is ./results)\n\n    :param str  target:  Table to be exported\n    :param str  db:      Database path to be exported (default ./results/result.sqlite3)\n    :param bool alive:   Only export the results of alive subdomains (default False)\n    :param str  limit:   Export limit (default None)\n    :param str  fmt:     Result format (default csv)\n    :param str  path:    Result directory (default None)\n    :param bool show:    Displays the exported data in terminal (default False)\n    \"\"\"\n\n    database = Database(db)\n    domains = utils.get_domains(target)\n    datas = list()\n    if domains:\n        for domain in domains:\n            table_name = domain.replace('.', '_')\n            rows = database.export_data(table_name, alive, limit)\n            if rows is None:\n                continue\n            data, _, _ = do_export(fmt, path, rows, show, domain, target)\n            datas.extend(data)\n    database.close()\n    if len(domains) > 1:\n        utils.export_all(alive, fmt, path, datas)\n    return datas\n\n\ndef do_export(fmt, path, rows, show, domain, target):\n    fmt = utils.check_format(fmt)\n    path = utils.check_path(path, target, fmt)\n    if show:\n        print(rows.dataset)\n    data = rows.export(fmt)\n    if fmt == 'csv':\n        data = '\\ufeff' + data\n    utils.save_to_file(path, data)\n    logger.log('ALERT', f'The subdomain result for {domain}: {path}')\n    data = rows.as_dict()\n    return data, fmt, path\n\n\nif __name__ == '__main__':\n    fire.Fire(export_data)\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "oneforall.py",
          "type": "blob",
          "size": 8.953125,
          "content": "#!/usr/bin/python3\n# coding=utf-8\n\n\"\"\"\nOneForAll is a powerful subdomain integration tool\n\n:copyright: Copyright (c) 2019, Jing Ling. All rights reserved.\n:license: GNU General Public License v3.0, see LICENSE for more details.\n\"\"\"\n\nimport fire\nfrom datetime import datetime\n\n\nimport export\nfrom brute import Brute\nfrom common import utils, resolve, request\nfrom modules.collect import Collect\nfrom modules.srv import BruteSRV\nfrom modules.finder import Finder\nfrom modules.altdns import Altdns\nfrom modules.enrich import Enrich\nfrom modules import wildcard\nfrom config import settings\nfrom config.log import logger\nfrom takeover import Takeover\n\nyellow = '\\033[01;33m'\nwhite = '\\033[01;37m'\ngreen = '\\033[01;32m'\nblue = '\\033[01;34m'\nred = '\\033[1;31m'\nend = '\\033[0m'\n\nversion = 'v0.4.5'\nmessage = white + '{' + red + version + ' #dev' + white + '}'\n\noneforall_banner = f\"\"\"\nOneForAll is a powerful subdomain integration tool{yellow}\n             ___             _ _ \n ___ ___ ___|  _|___ ___ ___| | | {message}{green}\n| . |   | -_|  _| . |  _| .'| | | {blue}\n|___|_|_|___|_| |___|_| |__,|_|_| {white}git.io/fjHT1\n\n{red}OneForAll is under development, please update before each use!{end}\n\"\"\"\n\n\nclass OneForAll(object):\n    \"\"\"\n    OneForAll help summary page\n\n    OneForAll is a powerful subdomain integration tool\n\n    Example:\n        python3 oneforall.py version\n        python3 oneforall.py check\n        python3 oneforall.py --target example.com run\n        python3 oneforall.py --targets ./domains.txt run\n        python3 oneforall.py --target example.com --alive False run\n        python3 oneforall.py --target example.com --brute False run\n        python3 oneforall.py --target example.com --port medium run\n        python3 oneforall.py --target example.com --fmt csv run\n        python3 oneforall.py --target example.com --dns False run\n        python3 oneforall.py --target example.com --req False run\n        python3 oneforall.py --target example.com --takeover False run\n        python3 oneforall.py --target example.com --show True run\n\n    Note:\n        --port   small/medium/large  See details in ./config/setting.py(default small)\n        --fmt    csv/json (result format)\n        --path   Result path (default None, automatically generated)\n\n    :param str  target:     One domain (target or targets must be provided)\n    :param str  targets:    File path of one domain per line\n    :param bool brute:      Use brute module (default True)\n    :param bool dns:        Use DNS resolution (default True)\n    :param bool req:        HTTP request subdomains (default True)\n    :param str  port:       The port range to request (default small port is 80,443)\n    :param bool alive:      Only export alive subdomains (default False)\n    :param str  fmt:        Result format (default csv)\n    :param str  path:       Result path (default None, automatically generated)\n    :param bool takeover:   Scan subdomain takeover (default False)\n    \"\"\"\n    def __init__(self, target=None, targets=None, brute=None, dns=None, req=None,\n                 port=None, alive=None, fmt=None, path=None, takeover=None):\n        self.target = target\n        self.targets = targets\n        self.brute = brute\n        self.dns = dns\n        self.req = req\n        self.port = port\n        self.alive = alive\n        self.fmt = fmt\n        self.path = path\n        self.takeover = takeover\n        self.domain = str()  # The domain currently being collected\n        self.domains = set()  # All domains that are to be collected\n        self.data = list()  # The subdomain results of the current domain\n        self.datas = list()  # All subdomain results of the domain\n        self.access_internet = False\n        self.enable_wildcard = False\n\n    def config_param(self):\n        \"\"\"\n        Config parameter\n        \"\"\"\n        if self.brute is None:\n            self.brute = bool(settings.enable_brute_module)\n        if self.dns is None:\n            self.dns = bool(settings.enable_dns_resolve)\n        if self.req is None:\n            self.req = bool(settings.enable_http_request)\n        if self.takeover is None:\n            self.takeover = bool(settings.enable_takeover_check)\n        if self.port is None:\n            self.port = settings.http_request_port\n        if self.alive is None:\n            self.alive = bool(settings.result_export_alive)\n        if self.fmt is None:\n            self.fmt = settings.result_save_format\n        if self.path is None:\n            self.path = settings.result_save_path\n\n    def check_param(self):\n        \"\"\"\n        Check parameter\n        \"\"\"\n        if self.target is None and self.targets is None:\n            logger.log('FATAL', 'You must provide either target or targets parameter')\n            exit(1)\n\n    def export_data(self):\n        \"\"\"\n        Export data from the database\n\n        :return: exported data\n        :rtype: list\n        \"\"\"\n        return export.export_data(self.domain, alive=self.alive, fmt=self.fmt, path=self.path)\n\n    def main(self):\n        \"\"\"\n        OneForAll main process\n\n        :return: subdomain results\n        :rtype: list\n        \"\"\"\n        utils.init_table(self.domain)\n\n        if not self.access_internet:\n            logger.log('ALERT', 'Because it cannot access the Internet, '\n                                'OneForAll will not execute the subdomain collection module!')\n        if self.access_internet:\n            self.enable_wildcard = wildcard.detect_wildcard(self.domain)\n\n            collect = Collect(self.domain)\n            collect.run()\n\n        srv = BruteSRV(self.domain)\n        srv.run()\n\n        if self.brute:\n            # Due to there will be a large number of dns resolution requests,\n            # may cause other network tasks to be error\n            brute = Brute(self.domain, word=True, export=False)\n            brute.enable_wildcard = self.enable_wildcard\n            brute.quite = True\n            brute.run()\n\n        utils.deal_data(self.domain)\n        # Export results without resolve\n        if not self.dns:\n            self.data = self.export_data()\n            self.datas.extend(self.data)\n            return self.data\n\n        self.data = utils.get_data(self.domain)\n\n        # Resolve subdomains\n        utils.clear_data(self.domain)\n        self.data = resolve.run_resolve(self.domain, self.data)\n        # Save resolve results\n        resolve.save_db(self.domain, self.data)\n\n        # Export results without HTTP request\n        if not self.req:\n            self.data = self.export_data()\n            self.datas.extend(self.data)\n            return self.data\n\n        if self.enable_wildcard:\n            # deal wildcard\n            self.data = wildcard.deal_wildcard(self.data)\n\n        # HTTP request\n        utils.clear_data(self.domain)\n        request.run_request(self.domain, self.data, self.port)\n\n        # Finder module\n        if settings.enable_finder_module:\n            finder = Finder()\n            finder.run(self.domain, self.data, self.port)\n\n        # altdns module\n        if settings.enable_altdns_module:\n            altdns = Altdns(self.domain)\n            altdns.run(self.data, self.port)\n\n        # Information enrichment module\n        if settings.enable_enrich_module:\n            enrich = Enrich(self.domain)\n            enrich.run()\n\n        self.data = self.export_data()\n        self.datas.extend(self.data)\n\n        # Scan subdomain takeover\n        if self.takeover:\n            subdomains = utils.get_subdomains(self.data)\n            takeover = Takeover(targets=subdomains)\n            takeover.run()\n        return self.data\n\n    def run(self):\n        \"\"\"\n        OneForAll running entrance\n\n        :return: All subdomain results\n        :rtype: list\n        \"\"\"\n        print(oneforall_banner)\n        dt = datetime.now().strftime('%Y-%m-%d %H:%M:%S')\n        print(f'[*] Starting OneForAll @ {dt}\\n')\n        logger.log('DEBUG', 'Python ' + utils.python_version())\n        logger.log('DEBUG', 'OneForAll ' + version)\n        utils.check_dep()\n        self.access_internet = utils.get_net_env()\n        if self.access_internet and settings.enable_check_version:\n            utils.check_version(version)\n        logger.log('INFOR', 'Start running OneForAll')\n        self.config_param()\n        self.check_param()\n        self.domains = utils.get_domains(self.target, self.targets)\n        count = len(self.domains)\n        logger.log('INFOR', f'Got {count} domains')\n        if not count:\n            logger.log('FATAL', 'Failed to obtain domain')\n            exit(1)\n        for domain in self.domains:\n            self.domain = utils.get_main_domain(domain)\n            self.main()\n        if count > 1:\n            utils.export_all(self.alive, self.fmt, self.path, self.datas)\n        logger.log('INFOR', 'Finished OneForAll')\n\n    @staticmethod\n    def version():\n        \"\"\"\n        Print version information and exit\n        \"\"\"\n        print(oneforall_banner)\n        exit(0)\n\n    @staticmethod\n    def check():\n        \"\"\"\n        Check if there is a new version and exit\n        \"\"\"\n        utils.check_version(version)\n        exit(0)\n\n\nif __name__ == '__main__':\n    fire.Fire(OneForAll)\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.3486328125,
          "content": "beautifulsoup4==4.11.1\nbs4==0.0.1\ncertifi==2022.06.15\nchardet==5.0.0\ncolorama==0.4.4\ndnspython==2.2.1\nexrex==0.11.0\nfire==0.4.0\nfuture==0.18.2\nidna==3.3\nloguru==0.6.0\nPySocks==1.7.1\nrequests==2.28.1\nsix==1.16.0\nsoupsieve==2.3.2\nSQLAlchemy==1.3.22\ntenacity==8.0.1\ntermcolor==1.1.0\ntqdm==4.64.0\ntreelib==1.6.1\nurllib3==1.26.9\nwin32-setctime==1.1.0\nsetuptools\n"
        },
        {
          "name": "takeover.py",
          "type": "blob",
          "size": 5.6455078125,
          "content": "#!/usr/bin/python3\n# coding=utf-8\n\n\"\"\"\nOneForAll subdomain takeover module\n\n:copyright: Copyright (c) 2019, Jing Ling. All rights reserved.\n:license: GNU General Public License v3.0, see LICENSE for more details.\n\"\"\"\nimport time\nimport json\nfrom threading import Thread\nfrom queue import Queue\n\nimport fire\nfrom common.tablib.tablib import Dataset\nfrom tqdm import tqdm\n\nfrom config.log import logger\nfrom config import settings\nfrom common import utils\nfrom common.module import Module\n\n\ndef get_fingerprint():\n    path = settings.data_storage_dir.joinpath('fingerprints.json')\n    with open(path, encoding='utf-8', errors='ignore') as file:\n        fingerprints = json.load(file)\n    return fingerprints\n\n\ndef get_cname(subdomain):\n    resolver = utils.dns_resolver()\n    try:\n        answers = resolver.query(subdomain, 'CNAME')\n    except Exception as e:\n        logger.log('TRACE', e.args)\n        return None\n    for answer in answers:\n        return answer.to_text()  # 一个子域只有一个CNAME记录\n\n\nclass Takeover(Module):\n    \"\"\"\n    OneForAll subdomain takeover module\n\n    Example:\n        python3 takeover.py --target www.example.com  --fmt csv run\n        python3 takeover.py --targets ./subdomains.txt --thread 10 run\n\n    Note:\n        --fmt txt/csv/json (result format)\n        --path   Result directory (default directory is ./results)\n\n    :param str target:   One domain (target or targets must be provided)\n    :param str targets:  File path of one domain per line\n    :param int thread:   threads number (default 20)\n    :param str fmt:      Result format (default csv)\n    :param str path:     Result directory (default None)\n    \"\"\"\n\n    def __init__(self, target=None, targets=None, thread=20, path=None, fmt='csv'):\n        Module.__init__(self)\n        self.subdomains = set()\n        self.module = 'Check'\n        self.source = 'Takeover'\n        self.target = target\n        self.targets = targets\n        self.thread = thread\n        self.path = path\n        self.fmt = fmt\n        self.fingerprints = None\n        self.queue = Queue()  # subdomain queue\n        self.cnames = list()\n        self.results = Dataset()\n\n    def save(self):\n        logger.log('DEBUG', 'Saving results')\n        if self.fmt == 'txt':\n            data = str(self.results)\n        else:\n            data = self.results.export(self.fmt)\n        utils.save_to_file(self.path, data)\n\n    def compare(self, subdomain, cname, responses):\n        domain_resp = self.get('http://' + subdomain, check=False, ignore=True)\n        cname_resp = self.get('http://' + cname, check=False, ignore=True)\n        if domain_resp is None or cname_resp is None:\n            return\n\n        for resp in responses:\n            if resp in domain_resp.text and resp in cname_resp.text:\n                logger.log('ALERT', f'{subdomain} takeover threat found')\n                self.results.append([subdomain, cname])\n                break\n\n    def worker(self, subdomain):\n        cname = get_cname(subdomain)\n        if cname is None:\n            return\n        main_domain = utils.get_main_domain(cname)\n        for fingerprint in self.fingerprints:\n            cnames = fingerprint.get('cname')\n            if main_domain not in cnames:\n                continue\n            responses = fingerprint.get('response')\n            self.compare(subdomain, cname, responses)\n\n    def check(self):\n        while not self.queue.empty():  # 保证域名队列遍历结束后能退出线程\n            subdomain = self.queue.get()  # 从队列中获取域名\n            self.worker(subdomain)\n            self.queue.task_done()\n\n    def progress(self):\n        bar = tqdm()\n        bar.total = len(self.subdomains)\n        bar.desc = 'Check Progress'\n        bar.ncols = 80\n        while True:\n            done = bar.total - self.queue.qsize()\n            bar.n = done\n            bar.update()\n            if done == bar.total:  # 完成队列中所有子域的检查退出\n                break\n\n    def run(self):\n        start = time.time()\n        logger.log('INFOR', f'Start running {self.source} module')\n        if isinstance(self.targets, set):\n            self.subdomains = self.targets\n        else:\n            self.subdomains = utils.get_domains(self.target, self.targets)\n        self.fmt = utils.check_format(self.fmt)\n        timestamp = utils.get_timestamp()\n        name = f'takeover_check_result_{timestamp}'\n        self.path = utils.check_path(self.path, name, self.fmt)\n        if self.subdomains:\n            logger.log('INFOR', f'Checking subdomain takeover')\n            self.fingerprints = get_fingerprint()\n            self.results.headers = ['subdomain', 'cname']\n            # 创建待检查的子域队列\n            for domain in self.subdomains:\n                self.queue.put(domain)\n            # 进度线程\n            progress_thread = Thread(target=self.progress, name='ProgressThread',\n                                     daemon=True)\n            progress_thread.start()\n            # 检查线程\n            for i in range(self.thread):\n                check_thread = Thread(target=self.check, name=f'CheckThread{i}',\n                                      daemon=True)\n                check_thread.start()\n\n            self.queue.join()\n            self.save()\n        else:\n            logger.log('FATAL', f'Failed to obtain domain')\n        end = time.time()\n        elapse = round(end - start, 1)\n        logger.log('ALERT', f'{self.source} module takes {elapse} seconds, '\n                            f'There are {len(self.results)} subdomains exists takeover')\n        logger.log('INFOR', f'Subdomain takeover results: {self.path}')\n        logger.log('INFOR', f'Finished {self.source} module')\n\n\nif __name__ == '__main__':\n    fire.Fire(Takeover)\n"
        },
        {
          "name": "test.py",
          "type": "blob",
          "size": 0.3447265625,
          "content": "#!/usr/bin/env python3\n# coding=utf-8\n\n\"\"\"\nExample\n\"\"\"\n\nfrom oneforall import OneForAll\n\n\ndef oneforall(domain):\n    test = OneForAll(target=domain)\n    test.dns = True\n    test.brute = True\n    test.req = True\n    test.takeover = True\n    test.run()\n    results = test.datas\n    print(results)\n\n\nif __name__ == '__main__':\n    oneforall('freebuf.com')\n"
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}