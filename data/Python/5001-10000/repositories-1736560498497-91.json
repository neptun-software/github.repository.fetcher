{
  "metadata": {
    "timestamp": 1736560498497,
    "page": 91,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "httpie/http-prompt",
      "stars": 8979,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0556640625,
          "content": "[report]\nshow_missing = True\nexclude_lines =\n    nocover\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0966796875,
          "content": "*.egg-info\n*.pyc\n.cache\n.coverage\n.DS_Store\n.python-version\n.tox\n_build\nbuild\ndist\ndata.json\nvenv*\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "MIT License\n\nCopyright (c) 2016-2021 Chang-Hung Liang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.064453125,
          "content": "include README.rst LICENSE requirements.txt requirements-test.txt\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3125,
          "content": ".PHONY: build\n\ninstall:\n\tpython -m pip install -e .\n\tpython -m pip install -r requirements-test.txt\n\nclean:\n\trm -rf dist/ build/\n\ntest:\n\tpython -m pytest\n\nbuild:\n\tpython setup.py sdist bdist_wheel\n\ncheck:\n\ttwine check dist/*\n\nupload:\n\ttwine upload --repository=http-prompt dist/*\n\nrelease: test clean build check upload\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.345703125,
          "content": "HTTP Prompt\n===========\n\n|PyPI| |Docs| |Build| |Coverage| |Discord|\n\nHTTP Prompt is an interactive command-line HTTP client featuring autocomplete\nand syntax highlighting, built on HTTPie_ and prompt_toolkit_.\n\n|Asciinema|\n\n\nLinks\n-----\n\n* Home: https://http-prompt.com\n* Documentation: https://docs.http-prompt.com\n* Code: https://github.com/httpie/http-prompt\n* Chat: https://httpie.io/chat\n\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/http-prompt.svg\n    :target: https://pypi.python.org/pypi/http-prompt\n\n.. |Docs| image:: https://img.shields.io/badge/docs-latest-brightgreen.svg?style=flat\n    :target: http://docs.http-prompt.com/en/latest/?badge=latest\n\n.. |Build| image:: https://github.com/httpie/http-prompt/workflows/Build/badge.svg\n    :target: https://github.com/httpie/http-prompt/actions\n\n.. |Coverage| image:: https://coveralls.io/repos/github/eliangcs/http-prompt/badge.svg?branch=master\n    :target: https://coveralls.io/github/eliangcs/http-prompt?branch=master\n\n.. |Discord| image:: https://img.shields.io/badge/chat-on%20Discord-brightgreen?style=flat-square\n    :target: https://httpie.io/chat\n\n.. |Asciinema| image:: https://asciinema.org/a/96613.png\n    :target: https://asciinema.org/a/96613?theme=monokai&size=medium&autoplay=1&speed=1.5\n\n.. _HTTPie: https://httpie.io\n.. _prompt_toolkit: https://github.com/jonathanslenders/python-prompt-toolkit\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "http-prompt.gif",
          "type": "blob",
          "size": 278.6435546875,
          "content": null
        },
        {
          "name": "http_prompt",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-test.txt",
          "type": "blob",
          "size": 0.056640625,
          "content": "pexpect>=4.2.1\npytest>=3.0.6\npytest-cov>=2.4.0\nwheel\ntwine"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.099609375,
          "content": "click>=5.0\nhttpie>=2.5.0\nparsimonious>=0.6.2\nprompt-toolkit>=2.0.0,<3.0.0\nPygments>=2.1.0\nPyYAML>=3.0\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.021484375,
          "content": "[wheel]\nuniversal = 1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.3310546875,
          "content": "import os\nimport re\nfrom setuptools import setup\n\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\n\n# Read the version number from a source file.\n# Why read it, and not import?\n# see https://groups.google.com/d/topic/pypa-dev/0PkjVpcxTzQ/discussion\ndef find_version(*file_paths):\n    # Open in Latin-1 so that we avoid encoding errors.\n    with open(os.path.join(here, *file_paths), encoding='latin1') as f:\n        version_file = f.read()\n\n    # The version line must have the form\n    # __version__ = 'ver'\n    version_match = re.search(r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\",\n                              version_file, re.M)\n    if version_match:\n        return version_match.group(1)\n    raise RuntimeError('Unable to find version string')\n\n\ndef read_description(filename):\n    with open(filename, encoding='utf-8') as f:\n        return f.read()\n\n\ndef read_requirements(filename):\n    try:\n        with open(filename) as f:\n            return [line.rstrip() for line in f]\n    except OSError:\n        raise OSError(os.getcwd())\n\n\nsetup(\n    name='http-prompt',\n    version=find_version('http_prompt', '__init__.py'),\n    url='https://github.com/httpie/http-prompt',\n    description='An interactive HTTP command-line client',\n    long_description=read_description('README.rst'),\n    author='Chang-Hung Liang',\n    author_email='eliang.cs@gmail.com',\n    license='MIT',\n    packages=['http_prompt', 'http_prompt.context'],\n    entry_points=\"\"\"\n        [console_scripts]\n        http-prompt=http_prompt.cli:cli\n    \"\"\",\n    install_requires=read_requirements('requirements.txt'),\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: MIT License',\n        'Topic :: Internet :: WWW/HTTP',\n        'Topic :: Software Development',\n        'Topic :: System :: Networking',\n        'Topic :: Terminals',\n        'Topic :: Text Processing',\n        'Topic :: Utilities',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n    ]\n)\n"
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.47265625,
          "content": "# Tox (http://tox.testrun.org/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n[tox]\nenvlist = py3{6,7,8,9,10}, pypy3\n\n[testenv]\ncommands = pytest\ndeps =\n    -rrequirements-test.txt\nsetenv =\n    LC_ALL = en_US.utf-8\n    LANG = en_US.utf-8\n\n[pytest]\ntestpaths = tests\naddopts = --cov-config .coveragerc --cov http_prompt\n"
        }
      ]
    }
  ]
}