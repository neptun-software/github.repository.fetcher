{
  "metadata": {
    "timestamp": 1736560451046,
    "page": 30,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fudan-generative-vision/hallo",
      "stars": 9694,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.7919921875,
          "content": "# running cache\nmlruns/\n\n# Test directories\ntest_data/\npretrained_models/\n\n# Poetry project\npoetry.lock\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# IDE\n.idea/\n.vscode/\ndata\npretrained_models\ntest_data"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.3505859375,
          "content": "repos:\n  - repo: local\n    hooks:\n      - id: isort\n        name: isort\n        language: system\n        types: [python]\n        pass_filenames: false\n        entry: isort\n        args: [\".\"]\n      - id: pylint\n        name: pylint\n        language: system\n        types: [python]\n        pass_filenames: false\n        entry: pylint\n        args: [\"**/*.py\"]\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 20.880859375,
          "content": "[MAIN]\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Clear in-memory caches upon conclusion of linting. Useful if running pylint\n# in a server-like mode.\nclear-cache-post-run=no\n\n# Load and enable all available extensions. Use --list-extensions to see a list\n# all available extensions.\n#enable-all-extensions=\n\n# In error mode, messages with a category besides ERROR or FATAL are\n# suppressed, and no reports are done by default. Error mode is compatible with\n# disabling specific errors.\n#errors-only=\n\n# Always return a 0 (non-error) status code, even if lint errors are found.\n# This is primarily useful in continuous integration scripts.\n#exit-zero=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-allow-list=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code. (This is an alternative name to extension-pkg-allow-list\n# for backward compatibility.)\nextension-pkg-whitelist=cv2\n\n# Return non-zero exit code if any of these messages/categories are detected,\n# even if score is above --fail-under value. Syntax same as enable. Messages\n# specified are enabled, while categories only check already-enabled messages.\nfail-on=\n\n# Specify a score threshold under which the program will exit with error.\nfail-under=10\n\n# Interpret the stdin as a python script, whose filename needs to be passed as\n# the module_or_package argument.\n#from-stdin=\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=CVS\n\n# Add files or directories matching the regular expressions patterns to the\n# ignore-list. The regex matches against paths and can be in Posix or Windows\n# format. Because '\\\\' represents the directory delimiter on Windows systems,\n# it can't be used as an escape character.\nignore-paths=\n\n# Files or directories matching the regular expression patterns are skipped.\n# The regex matches against base names, not paths. The default value ignores\n# Emacs file locks\nignore-patterns=^\\.#\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis). It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=cv2\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\ninit-hook='import sys; sys.path.append(\".\")'\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use, and will cap the count on Windows to\n# avoid hangs.\njobs=1\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Minimum Python version to use for version dependent checks. Will default to\n# the version used to run pylint.\npy-version=3.10\n\n# Discover python modules and packages in the file system subtree.\nrecursive=no\n\n# Add paths to the list of the source roots. Supports globbing patterns. The\n# source root is an absolute path or a path relative to the current working\n# directory used to determine a package namespace for modules located under the\n# source root.\nsource-roots=\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# In verbose mode, extra non-checker-related info will be displayed.\n#verbose=\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style. If left empty, argument names will be checked with the set\n# naming style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style. If left empty, attribute names will be checked with the set naming\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style. If left empty, class attribute names will be checked\n# with the set naming style.\n#class-attribute-rgx=\n\n# Naming style matching correct class constant names.\nclass-const-naming-style=UPPER_CASE\n\n# Regular expression matching correct class constant names. Overrides class-\n# const-naming-style. If left empty, class constant names will be checked with\n# the set naming style.\n#class-const-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style. If left empty, class names will be checked with the set naming style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style. If left empty, constant names will be checked with the set naming\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style. If left empty, function names will be checked with the set\n# naming style.\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style. If left empty, inline iteration names will be checked\n# with the set naming style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style. If left empty, method names will be checked with the set naming style.\n#method-rgx=\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style. If left empty, module names will be checked with the set naming style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct type alias names. If left empty, type\n# alias names will be checked with the set naming style.\n#typealias-rgx=\n\n# Regular expression matching correct type variable names. If left empty, type\n# variable names will be checked with the set naming style.\n#typevar-rgx=\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style. If left empty, variable names will be checked with the set\n# naming style.\nvariable-rgx=(_?[a-z][A-Za-z0-9]{0,30})|([A-Z0-9]{1,30})\n\n\n[CLASSES]\n\n# Warn about protected attribute access inside special methods\ncheck-protected-access-in-special-methods=no\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp,\n                      asyncSetUp,\n                      __post_init__\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make,os._exit\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# List of regular expressions of class ancestor names to ignore when counting\n# public methods (see R0903)\nexclude-too-few-public-methods=\n\n# List of qualified class names to ignore when counting class parents (see\n# R0901)\nignored-parents=\n\n# Maximum number of arguments for function / method.\nmax-args=7\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=20\n\n# Maximum number of boolean expressions in an if statement (see R0916).\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body.\nmax-branches=12\n\n# Maximum number of locals for function / method body.\nmax-locals=15\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of return / yield for function / method body.\nmax-returns=6\n\n# Maximum number of statements in function / method body.\nmax-statements=300\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=1\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when caught.\novergeneral-exceptions=builtins.BaseException,builtins.Exception\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=150\n\n# Maximum number of lines in a module.\nmax-module-lines=2000\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow explicit reexports by alias from a package __init__.\nallow-reexport-from-package=no\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=\n\n# Output a graph (.gv or any supported image format) of external dependencies\n# to the given file (report RP0402 must not be disabled).\next-import-graph=\n\n# Output a graph (.gv or any supported image format) of all (i.e. internal and\n# external) dependencies to the given file (report RP0402 must not be\n# disabled).\nimport-graph=\n\n# Output a graph (.gv or any supported image format) of internal dependencies\n# to the given file (report RP0402 must not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[LOGGING]\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE,\n# UNDEFINED.\nconfidence=HIGH,\n           CONTROL_FLOW,\n           INFERENCE,\n           INFERENCE_FAILURE,\n           UNDEFINED\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then re-enable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=too-many-arguments,\n      too-many-locals,\n      too-many-branches,\n      protected-access\n\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=\n\n\n[METHOD_ARGS]\n\n# List of qualified names (i.e., library.method) which require a timeout\n# parameter e.g. 'requests.api.get,requests.api.post'\ntimeout-methods=requests.api.delete,requests.api.get,requests.api.head,requests.api.options,requests.api.patch,requests.api.post,requests.api.put,requests.api.request\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX\n\n# Regular expression of note tags to take in consideration.\nnotes-rgx=\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit,argparse.parse_error\n\n# Let 'consider-using-join' be raised when the separator to join on would be\n# non-empty (resulting in expected fixes of the type: ``\"- \" + \" -\n# \".join(items)``)\n# suggest-join-with-non-empty-separator=yes\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'fatal', 'error', 'warning', 'refactor',\n# 'convention', and 'info' which contain the number of messages in each\n# category, as well as 'statement' which is the total number of statements\n# analyzed. This score is used by the global evaluation report (RP0004).\nevaluation=max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\nmsg-template=\n\n# Set the output format. Available formats are: text, parseable, colorized,\n# json2 (improved json format), json (old json format) and msvs (visual\n# studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\n#output-format=\n\n# Tells whether to display a full report or only the messages.\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[SIMILARITIES]\n\n# Comments are removed from the similarity computation\nignore-comments=yes\n\n# Docstrings are removed from the similarity computation\nignore-docstrings=yes\n\n# Imports are removed from the similarity computation\nignore-imports=yes\n\n# Signatures are removed from the similarity computation\nignore-signatures=yes\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. No available dictionaries : You need to install\n# both the python package and the system dependency for enchant to work.\nspelling-dict=\n\n# List of comma separated words that should be considered directives if they\n# appear at the beginning of a comment and should not be checked.\nspelling-ignore-comment-directives=fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains the private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to the private dictionary (see the\n# --spelling-private-dict-file option) instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of symbolic message names to ignore for Mixin members.\nignored-checks-for-mixins=no-member,\n                          not-async-context-manager,\n                          not-context-manager,\n                          attribute-defined-outside-init\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local,argparse.Namespace\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# Regex pattern to define which classes are considered mixins.\nmixin-class-rgx=.*[Mm]ixin\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of names allowed to shadow builtins\nallowed-redefined-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored.\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.083984375,
          "content": "MIT License\n\nCopyright (c) 2024 Fusion Lab: Generative Vision Lab of Fudan University\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.6142578125,
          "content": "<h1 align='center'>Hallo: Hierarchical Audio-Driven Visual Synthesis for Portrait Image Animation</h1>\n\n<div align='center'>\n    <a href='https://github.com/xumingw' target='_blank'>Mingwang Xu</a><sup>1*</sup>&emsp;\n    <a href='https://github.com/crystallee-ai' target='_blank'>Hui Li</a><sup>1*</sup>&emsp;\n    <a href='https://github.com/subazinga' target='_blank'>Qingkun Su</a><sup>1*</sup>&emsp;\n    <a href='https://github.com/NinoNeumann' target='_blank'>Hanlin Shang</a><sup>1</sup>&emsp;\n    <a href='https://github.com/AricGamma' target='_blank'>Liwei Zhang</a><sup>1</sup>&emsp;\n    <a href='https://github.com/cnexah' target='_blank'>Ce Liu</a><sup>3</sup>&emsp;\n</div>\n<div align='center'>\n    <a href='https://jingdongwang2017.github.io/' target='_blank'>Jingdong Wang</a><sup>2</sup>&emsp;\n    <a href='https://yoyo000.github.io/' target='_blank'>Yao Yao</a><sup>4</sup>&emsp;\n    <a href='https://sites.google.com/site/zhusiyucs/home' target='_blank'>Siyu Zhu</a><sup>1</sup>&emsp;\n</div>\n\n<div align='center'>\n    <sup>1</sup>Fudan University&emsp; <sup>2</sup>Baidu Inc&emsp; <sup>3</sup>ETH Zurich&emsp; <sup>4</sup>Nanjing University\n</div>\n\n<br>\n<div align='center'>\n    <a href='https://github.com/fudan-generative-vision/hallo'><img src='https://img.shields.io/github/stars/fudan-generative-vision/hallo?style=social'></a>\n    <a href='https://fudan-generative-vision.github.io/hallo/#/'><img src='https://img.shields.io/badge/Project-HomePage-Green'></a>\n    <a href='https://arxiv.org/pdf/2406.08801'><img src='https://img.shields.io/badge/Paper-Arxiv-red'></a>\n    <a href='https://huggingface.co/fudan-generative-ai/hallo'><img src='https://img.shields.io/badge/%F0%9F%A4%97%20HuggingFace-Model-yellow'></a>\n    <a href='https://huggingface.co/spaces/fffiloni/tts-hallo-talking-portrait'><img src='https://img.shields.io/badge/%F0%9F%A4%97%20HuggingFace-Demo-yellow'></a>\n    <a href='https://www.modelscope.cn/models/fudan-generative-vision/Hallo/summary'><img src='https://img.shields.io/badge/Modelscope-Model-purple'></a>\n    <a href='assets/wechat.jpeg'><img src='https://badges.aleen42.com/src/wechat.svg'></a>\n</div>\n\n<br>\n\n## 📸 Showcase\n\n\nhttps://github.com/fudan-generative-vision/hallo/assets/17402682/9d1a0de4-3470-4d38-9e4f-412f517f834c\n\n### 🎬 Honoring Classic Films\n\n<table class=\"center\">\n  <tr>\n    <td style=\"text-align: center\"><b>Devil Wears Prada</b></td>\n    <td style=\"text-align: center\"><b>Green Book</b></td>\n    <td style=\"text-align: center\"><b>Infernal Affairs</b></td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center\"><a target=\"_blank\" href=\"https://cdn.aondata.work/video/short_movie/Devil_Wears_Prada-480p.mp4\"><img src=\"https://cdn.aondata.work/img/short_movie/Devil_Wears_Prada_GIF.gif\"></a></td>\n    <td style=\"text-align: center\"><a target=\"_blank\" href=\"https://cdn.aondata.work/video/short_movie/Green_Book-480p.mp4\"><img src=\"https://cdn.aondata.work/img/short_movie/Green_Book_GIF.gif\"></a></td>\n    <td style=\"text-align: center\"><a target=\"_blank\" href=\"https://cdn.aondata.work/video/short_movie/无间道-480p.mp4\"><img src=\"https://cdn.aondata.work/img/short_movie/Infernal_Affairs_GIF.gif\"></a></td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center\"><b>Patch Adams</b></td>\n    <td style=\"text-align: center\"><b>Tough Love</b></td>\n    <td style=\"text-align: center\"><b>Shawshank Redemption</b></td>\n  </tr>\n  <tr>\n    <td style=\"text-align: center\"><a target=\"_blank\" href=\"https://cdn.aondata.work/video/short_movie/Patch_Adams-480p.mp4\"><img src=\"https://cdn.aondata.work/img/short_movie/Patch_Adams_GIF.gif\"></a></td>\n    <td style=\"text-align: center\"><a target=\"_blank\" href=\"https://cdn.aondata.work/video/short_movie/Tough_Love-480p.mp4\"><img src=\"https://cdn.aondata.work/img/short_movie/Tough_Love_GIF.gif\"></a></td>\n    <td style=\"text-align: center\"><a target=\"_blank\" href=\"https://cdn.aondata.work/video/short_movie/Shawshank-480p.mp4\"><img src=\"https://cdn.aondata.work/img/short_movie/Shawshank_GIF.gif\"></a></td>\n  </tr>\n</table>\n\nExplore [more examples](https://fudan-generative-vision.github.io/hallo).\n\n## 📰 News\n\n- **`2024/06/28`**: 🎉🎉🎉 We are proud to announce the release of our model training code. Try your own training data. Here is [tutorial](#training).\n- **`2024/06/21`**: 🚀🚀🚀 Cloned a Gradio demo on [🤗Huggingface space](https://huggingface.co/spaces/fudan-generative-ai/hallo).\n- **`2024/06/20`**: 🌟🌟🌟 Received numerous contributions from the community, including a [Windows version](https://github.com/sdbds/hallo-for-windows), [ComfyUI](https://github.com/AIFSH/ComfyUI-Hallo), [WebUI](https://github.com/fudan-generative-vision/hallo/pull/51), and [Docker template](https://github.com/ashleykleynhans/hallo-docker).\n- **`2024/06/15`**: ✨✨✨ Released some images and audios for inference testing on [🤗Huggingface](https://huggingface.co/datasets/fudan-generative-ai/hallo_inference_samples).\n- **`2024/06/15`**: 🎉🎉🎉 Launched the first version on 🫡[GitHub](https://github.com/fudan-generative-vision/hallo).\n\n## 🤝 Community Resources\n\nExplore the resources developed by our community to enhance your experience with Hallo:\n\n- [TTS x Hallo Talking Portrait Generator](https://huggingface.co/spaces/fffiloni/tts-hallo-talking-portrait) - Check out this awesome Gradio demo by [@Sylvain Filoni](https://huggingface.co/fffiloni)! With this tool, you can conveniently prepare portrait image and audio for Hallo.\n- [Demo on Huggingface](https://huggingface.co/spaces/multimodalart/hallo) - Check out this easy-to-use Gradio demo by [@multimodalart](https://huggingface.co/multimodalart).\n- [hallo-webui](https://github.com/daswer123/hallo-webui) - Explore the WebUI created by [@daswer123](https://github.com/daswer123).\n- [hallo-for-windows](https://github.com/sdbds/hallo-for-windows) - Utilize Hallo on Windows with the guide by [@sdbds](https://github.com/sdbds).\n- [ComfyUI-Hallo](https://github.com/AIFSH/ComfyUI-Hallo) - Integrate Hallo with the ComfyUI tool by [@AIFSH](https://github.com/AIFSH).\n- [hallo-docker](https://github.com/ashleykleynhans/hallo-docker) - Docker image for Hallo by [@ashleykleynhans](https://github.com/ashleykleynhans).\n- [RunPod Template](https://runpod.io/console/deploy?template=aeyibwyvzy&ref=2xxro4syy) - Deploy Hallo to RunPod by [@ashleykleynhans](https://github.com/ashleykleynhans).\n- [JoyHallo](https://jdh-algo.github.io/JoyHallo/) - JoyHallo extends the capabilities of Hallo, enabling it to support Mandarin\n\nThanks to all of them.\n\nJoin our community and explore these amazing resources to make the most out of Hallo. Enjoy and elevate their creative projects!\n\n## 🔧️ Framework\n\n![abstract](assets/framework_1.jpg)\n![framework](assets/framework_2.jpg)\n\n## ⚙️ Installation\n\n- System requirement: Ubuntu 20.04/Ubuntu 22.04, Cuda 12.1\n- Tested GPUs: A100\n\nCreate conda environment:\n\n```bash\n  conda create -n hallo python=3.10\n  conda activate hallo\n```\n\nInstall packages with `pip`\n\n```bash\n  pip install -r requirements.txt\n  pip install .\n```\n\nBesides, ffmpeg is also needed:\n```bash\n  apt-get install ffmpeg\n```\n\n## 🗝️️ Usage\n\nThe entry point for inference is `scripts/inference.py`. Before testing your cases, two preparations need to be completed:\n\n1. [Download all required pretrained models](#download-pretrained-models).\n2. [Prepare source image and driving audio pairs](#prepare-inference-data).\n3. [Run inference](#run-inference).\n\n### 📥 Download Pretrained Models\n\nYou can easily get all pretrained models required by inference from our [HuggingFace repo](https://huggingface.co/fudan-generative-ai/hallo).\n\nClone the pretrained models into `${PROJECT_ROOT}/pretrained_models` directory by cmd below:\n\n```shell\ngit lfs install\ngit clone https://huggingface.co/fudan-generative-ai/hallo pretrained_models\n```\n\nOr you can download them separately from their source repo:\n\n- [hallo](https://huggingface.co/fudan-generative-ai/hallo/tree/main/hallo): Our checkpoints consist of denoising UNet, face locator, image & audio proj.\n- [audio_separator](https://huggingface.co/huangjackson/Kim_Vocal_2): Kim\\_Vocal\\_2 MDX-Net vocal removal model. (_Thanks to [KimberleyJensen](https://github.com/KimberleyJensen)_)\n- [insightface](https://github.com/deepinsight/insightface/tree/master/python-package#model-zoo): 2D and 3D Face Analysis placed into `pretrained_models/face_analysis/models/`. (_Thanks to deepinsight_)\n- [face landmarker](https://storage.googleapis.com/mediapipe-models/face_landmarker/face_landmarker/float16/1/face_landmarker.task): Face detection & mesh model from [mediapipe](https://ai.google.dev/edge/mediapipe/solutions/vision/face_landmarker#models) placed into `pretrained_models/face_analysis/models`.\n- [motion module](https://github.com/guoyww/AnimateDiff/blob/main/README.md#202309-animatediff-v2): motion module from [AnimateDiff](https://github.com/guoyww/AnimateDiff). (_Thanks to [guoyww](https://github.com/guoyww)_).\n- [sd-vae-ft-mse](https://huggingface.co/stabilityai/sd-vae-ft-mse): Weights are intended to be used with the diffusers library. (_Thanks to [stablilityai](https://huggingface.co/stabilityai)_)\n- [StableDiffusion V1.5](https://huggingface.co/runwayml/stable-diffusion-v1-5): Initialized and fine-tuned from Stable-Diffusion-v1-2. (_Thanks to [runwayml](https://huggingface.co/runwayml)_)\n- [wav2vec](https://huggingface.co/facebook/wav2vec2-base-960h): wav audio to vector model from [Facebook](https://huggingface.co/facebook/wav2vec2-base-960h).\n\nFinally, these pretrained models should be organized as follows:\n\n```text\n./pretrained_models/\n|-- audio_separator/\n|   |-- download_checks.json\n|   |-- mdx_model_data.json\n|   |-- vr_model_data.json\n|   `-- Kim_Vocal_2.onnx\n|-- face_analysis/\n|   `-- models/\n|       |-- face_landmarker_v2_with_blendshapes.task  # face landmarker model from mediapipe\n|       |-- 1k3d68.onnx\n|       |-- 2d106det.onnx\n|       |-- genderage.onnx\n|       |-- glintr100.onnx\n|       `-- scrfd_10g_bnkps.onnx\n|-- motion_module/\n|   `-- mm_sd_v15_v2.ckpt\n|-- sd-vae-ft-mse/\n|   |-- config.json\n|   `-- diffusion_pytorch_model.safetensors\n|-- stable-diffusion-v1-5/\n|   `-- unet/\n|       |-- config.json\n|       `-- diffusion_pytorch_model.safetensors\n`-- wav2vec/\n    `-- wav2vec2-base-960h/\n        |-- config.json\n        |-- feature_extractor_config.json\n        |-- model.safetensors\n        |-- preprocessor_config.json\n        |-- special_tokens_map.json\n        |-- tokenizer_config.json\n        `-- vocab.json\n```\n\n### 🛠️ Prepare Inference Data\n\nHallo has a few simple requirements for input data:\n\nFor the source image:\n\n1. It should be cropped into squares.\n2. The face should be the main focus, making up 50%-70% of the image.\n3. The face should be facing forward, with a rotation angle of less than 30° (no side profiles).\n\nFor the driving audio:\n\n1. It must be in WAV format.\n2. It must be in English since our training datasets are only in this language.\n3. Ensure the vocals are clear; background music is acceptable.\n\nWe have provided [some samples](examples/) for your reference.\n\n### 🎮 Run Inference\n\nSimply to run the `scripts/inference.py` and pass `source_image` and `driving_audio` as input:\n\n```bash\npython scripts/inference.py --source_image examples/reference_images/1.jpg --driving_audio examples/driving_audios/1.wav\n```\n\nAnimation results will be saved as `${PROJECT_ROOT}/.cache/output.mp4` by default. You can pass `--output` to specify the output file name. You can find more examples for inference at [examples folder](https://github.com/fudan-generative-vision/hallo/tree/main/examples).\n\nFor more options:\n\n```shell\nusage: inference.py [-h] [-c CONFIG] [--source_image SOURCE_IMAGE] [--driving_audio DRIVING_AUDIO] [--output OUTPUT] [--pose_weight POSE_WEIGHT]\n                    [--face_weight FACE_WEIGHT] [--lip_weight LIP_WEIGHT] [--face_expand_ratio FACE_EXPAND_RATIO]\n\noptions:\n  -h, --help            show this help message and exit\n  -c CONFIG, --config CONFIG\n  --source_image SOURCE_IMAGE\n                        source image\n  --driving_audio DRIVING_AUDIO\n                        driving audio\n  --output OUTPUT       output video file name\n  --pose_weight POSE_WEIGHT\n                        weight of pose\n  --face_weight FACE_WEIGHT\n                        weight of face\n  --lip_weight LIP_WEIGHT\n                        weight of lip\n  --face_expand_ratio FACE_EXPAND_RATIO\n                        face region\n```\n\n## Training\n\n### Prepare Data for Training\n\nThe training data, which utilizes some talking-face videos similar to the source images used for inference, also needs to meet the following requirements:\n\n1. It should be cropped into squares.\n2. The face should be the main focus, making up 50%-70% of the image.\n3. The face should be facing forward, with a rotation angle of less than 30° (no side profiles).\n\nOrganize your raw videos into the following directory structure:\n\n\n```text\ndataset_name/\n|-- videos/\n|   |-- 0001.mp4\n|   |-- 0002.mp4\n|   |-- 0003.mp4\n|   `-- 0004.mp4\n```\n\nYou can use any `dataset_name`, but ensure the `videos` directory is named as shown above.\n\nNext, process the videos with the following commands:\n\n```bash\npython -m scripts.data_preprocess --input_dir dataset_name/videos --step 1\npython -m scripts.data_preprocess --input_dir dataset_name/videos --step 2\n```\n\n**Note:** Execute steps 1 and 2 sequentially as they perform different tasks. Step 1 converts videos into frames, extracts audio from each video, and generates the necessary masks. Step 2 generates face embeddings using InsightFace and audio embeddings using Wav2Vec, and requires a GPU. For parallel processing, use the `-p` and `-r` arguments. The `-p` argument specifies the total number of instances to launch, dividing the data into `p` parts. The `-r` argument specifies which part the current process should handle. You need to manually launch multiple instances with different values for `-r`.\n\nGenerate the metadata JSON files with the following commands:\n\n```bash\npython scripts/extract_meta_info_stage1.py -r path/to/dataset -n dataset_name\npython scripts/extract_meta_info_stage2.py -r path/to/dataset -n dataset_name\n```\n\nReplace `path/to/dataset` with the path to the parent directory of `videos`, such as `dataset_name` in the example above. This will generate `dataset_name_stage1.json` and `dataset_name_stage2.json` in the `./data` directory.\n\n### Training\n\nUpdate the data meta path settings in the configuration YAML files, `configs/train/stage1.yaml` and `configs/train/stage2.yaml`:\n\n\n```yaml\n#stage1.yaml\ndata:\n  meta_paths:\n    - ./data/dataset_name_stage1.json\n\n#stage2.yaml\ndata:\n  meta_paths:\n    - ./data/dataset_name_stage2.json\n```\n\nStart training with the following command:\n\n```shell\naccelerate launch -m \\\n  --config_file accelerate_config.yaml \\\n  --machine_rank 0 \\\n  --main_process_ip 0.0.0.0 \\\n  --main_process_port 20055 \\\n  --num_machines 1 \\\n  --num_processes 8 \\\n  scripts.train_stage1 --config ./configs/train/stage1.yaml\n```\n\n#### Accelerate Usage Explanation\n\nThe `accelerate launch` command is used to start the training process with distributed settings.\n\n```shell\naccelerate launch [arguments] {training_script} --{training_script-argument-1} --{training_script-argument-2} ...\n```\n\n**Arguments for Accelerate:**\n\n- `-m, --module`: Interpret the launch script as a Python module.\n- `--config_file`: Configuration file for Hugging Face Accelerate.\n- `--machine_rank`: Rank of the current machine in a multi-node setup.\n- `--main_process_ip`: IP address of the master node.\n- `--main_process_port`: Port of the master node.\n- `--num_machines`: Total number of nodes participating in the training.\n- `--num_processes`: Total number of processes for training, matching the total number of GPUs across all machines.\n\n**Arguments for Training:**\n\n- `{training_script}`: The training script, such as `scripts.train_stage1` or `scripts.train_stage2`.\n- `--{training_script-argument-1}`: Arguments specific to the training script. Our training scripts accept one argument, `--config`, to specify the training configuration file.\n\nFor multi-node training, you need to manually run the command with different `machine_rank` on each node separately.\n\nFor more settings, refer to the [Accelerate documentation](https://huggingface.co/docs/accelerate/en/index).\n\n## 📅️ Roadmap\n\n| Status | Milestone                                                                                             |    ETA     |\n| :----: | :---------------------------------------------------------------------------------------------------- | :--------: |\n|   ✅   | **[Inference source code meet everyone on GitHub](https://github.com/fudan-generative-vision/hallo)** | 2024-06-15 |\n|   ✅   | **[Pretrained models on Huggingface](https://huggingface.co/fudan-generative-ai/hallo)**              | 2024-06-15 |\n| ✅ | **[Releasing data preparation and training scripts](#training)**                                                | 2024-06-28 |\n| 🚀 | **[Improving the model's performance on Mandarin Chinese]()**                                                    |    TBD     |\n\n<details>\n<summary>Other Enhancements</summary>\n\n- [x] Enhancement: Test and ensure compatibility with Windows operating system. [#39](https://github.com/fudan-generative-vision/hallo/issues/39)\n- [x] Bug: Output video may lose several frames. [#41](https://github.com/fudan-generative-vision/hallo/issues/41)\n- [ ] Bug: Sound volume affecting inference results (audio normalization).\n- [ ] ~~Enhancement: Inference code logic optimization~~. This solution doesn't show significant performance improvements. Trying other approaches.\n\n</details>\n\n\n## 📝 Citation\n\nIf you find our work useful for your research, please consider citing the paper:\n\n```\n@misc{xu2024hallo,\n  title={Hallo: Hierarchical Audio-Driven Visual Synthesis for Portrait Image Animation},\n  author={Mingwang Xu and Hui Li and Qingkun Su and Hanlin Shang and Liwei Zhang and Ce Liu and Jingdong Wang and Yao Yao and Siyu zhu},\n  year={2024},\n  eprint={2406.08801},\n  archivePrefix={arXiv},\n  primaryClass={cs.CV}\n}\n```\n\n## 🌟 Opportunities Available\n\nMultiple research positions are open at the **Generative Vision Lab, Fudan University**! Include:\n\n- Research assistant\n- Postdoctoral researcher\n- PhD candidate\n- Master students\n\nInterested individuals are encouraged to contact us at [siyuzhu@fudan.edu.cn](mailto://siyuzhu@fudan.edu.cn) for further information.\n\n## ⚠️ Social Risks and Mitigations\n\nThe development of portrait image animation technologies driven by audio inputs poses social risks, such as the ethical implications of creating realistic portraits that could be misused for deepfakes. To mitigate these risks, it is crucial to establish ethical guidelines and responsible use practices. Privacy and consent concerns also arise from using individuals' images and voices. Addressing these involves transparent data usage policies, informed consent, and safeguarding privacy rights. By addressing these risks and implementing mitigations, the research aims to ensure the responsible and ethical development of this technology.\n\n## 🤗 Acknowledgements\n\nWe would like to thank the contributors to the [magic-animate](https://github.com/magic-research/magic-animate), [AnimateDiff](https://github.com/guoyww/AnimateDiff), [ultimatevocalremovergui](https://github.com/Anjok07/ultimatevocalremovergui), [AniPortrait](https://github.com/Zejun-Yang/AniPortrait) and [Moore-AnimateAnyone](https://github.com/MooreThreads/Moore-AnimateAnyone) repositories, for their open research and exploration.\n\nIf we missed any open-source projects or related articles, we would like to complement the acknowledgement of this specific work immediately.\n\n## 👏 Community Contributors\n\nThank you to all the contributors who have helped to make this project better!\n\n<a href=\"https://github.com/fudan-generative-vision/hallo/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=fudan-generative-vision/hallo\" />\n</a>\n"
        },
        {
          "name": "accelerate_config.yaml",
          "type": "blob",
          "size": 0.474609375,
          "content": "compute_environment: LOCAL_MACHINE\ndebug: true\ndeepspeed_config:\n  deepspeed_multinode_launcher: standard\n  gradient_accumulation_steps: 1\n  offload_optimizer_device: none\n  offload_param_device: none\n  zero3_init_flag: false\n  zero_stage: 2\ndistributed_type: DEEPSPEED\ndowncast_bf16: \"no\"\nmain_training_function: main\nmixed_precision: \"fp16\"\nnum_machines: 1\nnum_processes: 8\nrdzv_backend: static\nsame_network: true\ntpu_env: []\ntpu_use_cluster: false\ntpu_use_sudo: false\nuse_cpu: false\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "hallo",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.6416015625,
          "content": "--find-links https://download.pytorch.org/whl/torch_stable.html\n\naccelerate==0.28.0\naudio-separator==0.17.2\nav==12.1.0\nbitsandbytes==0.43.1\ndecord==0.6.0\ndiffusers==0.27.2\neinops==0.8.0\ninsightface==0.7.3\nlibrosa==0.10.2.post1\nmediapipe[vision]==0.10.14\nmlflow==2.13.1\nmoviepy==1.0.3\nnumpy==1.26.4\nomegaconf==2.3.0\nonnx2torch==1.5.14\nonnx==1.16.1\nonnxruntime-gpu==1.18.0\nopencv-contrib-python==4.9.0.80\nopencv-python-headless==4.9.0.80\nopencv-python==4.9.0.80\npillow==10.3.0\nsetuptools==70.0.0\ntorch==2.2.2+cu121\ntorchvision==0.17.2+cu121\ntqdm==4.66.4\ntransformers==4.39.2\nxformers==0.0.25.post1\nisort==5.13.2\npylint==3.2.2\npre-commit==3.7.1\ngradio==4.36.1\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.2783203125,
          "content": "\"\"\"\nsetup.py\n----\nThis is the main setup file for the hallo face animation project. It defines the package\nmetadata, required dependencies, and provides the entry point for installing the package.\n\n\"\"\"\n\n# -*- coding: utf-8 -*-\nfrom setuptools import setup\n\npackages = \\\n    ['hallo', 'hallo.datasets', 'hallo.models', 'hallo.animate', 'hallo.utils']\n\npackage_data = \\\n{'': ['*']}\n\ninstall_requires = \\\n['accelerate==0.28.0',\n 'audio-separator>=0.17.2,<0.18.0',\n 'av==12.1.0',\n 'bitsandbytes==0.43.1',\n 'decord==0.6.0',\n 'diffusers==0.27.2',\n 'einops>=0.8.0,<0.9.0',\n 'insightface>=0.7.3,<0.8.0',\n 'mediapipe[vision]>=0.10.14,<0.11.0',\n 'mlflow==2.13.1',\n 'moviepy>=1.0.3,<2.0.0',\n 'omegaconf>=2.3.0,<3.0.0',\n 'opencv-python>=4.9.0.80,<5.0.0.0',\n 'pillow>=10.3.0,<11.0.0',\n 'torch==2.2.2',\n 'torchvision==0.17.2',\n 'transformers==4.39.2',\n 'xformers==0.0.25.post1']\n\nsetup_kwargs = {\n    'name': 'hallo',\n    'version': '0.1.0',\n    'description': '',\n    'long_description': '# Anna face animation',\n    'author': 'Your Name',\n    'author_email': 'you@example.com',\n    'maintainer': 'None',\n    'maintainer_email': 'None',\n    'url': 'None',\n    'packages': packages,\n    'package_data': package_data,\n    'install_requires': install_requires,\n    'python_requires': '>=3.10,<4.0',\n}\n\n\nsetup(**setup_kwargs)\n"
        }
      ]
    }
  ]
}