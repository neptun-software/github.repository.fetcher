{
  "metadata": {
    "timestamp": 1736560992684,
    "page": 748,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pylint-dev/pylint",
      "stars": 5366,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.365234375,
          "content": "[paths]\nsource =\n   pylint\n\n[report]\ninclude =\n    pylint/*\nomit =\n    */test/*\nexclude_lines =\n    # Re-enable default pragma\n    pragma: no cover\n\n    # Debug-only code\n    def __repr__\n\n    # Type checking code not executed during pytest runs\n    if TYPE_CHECKING:\n    @overload\n\n    # Abstract methods are not executed during pytest runs\n    raise NotImplementedError()\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.0400390625,
          "content": "3f2842400795ae1aaffc4ae6c35c4ef26857c239\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2236328125,
          "content": "* text=auto\ntests/**/functional/** -text\ntests/input/** -text\ntests/**/data/** -text\ntests/regrtest_data/** -text\ndoc/data/messages/u/unexpected-line-ending-format/bad.py -text\ndoc/data/messages/m/mixed-line-endings/bad.py -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6689453125,
          "content": "# Do not add entries specific to your dev environment or development\n# preferences in this file. You can use the global .gitignore for that:\n# git config --global core.excludesFile '~/.gitignore'\n/log\n*.py[cod]\n/build\n/doc/_build\n/dist/\n/pylint.egg-info/\n.tox\n*.sw[a-z]\n# Can't use | operator in .gitignore, see\n# https://unix.stackexchange.com/a/31806/189111\ndoc/user_guide/messages/convention/\ndoc/user_guide/messages/error/\ndoc/user_guide/messages/fatal/\ndoc/user_guide/messages/information/\ndoc/user_guide/messages/refactor/\ndoc/user_guide/messages/warning/\ntests/.pylint_primer_tests/\npyve\nbuild-stamp\n.coverage\n.coverage.*\n.cache/\n.eggs/\n.pytest_cache/\n.mypy_cache/\n.benchmarks/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 6.2177734375,
          "content": "ci:\n  skip: [pylint]\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: trailing-whitespace\n        exclude: tests(/\\w*)*/functional/t/trailing_whitespaces.py|tests/pyreverse/data/.*.html|doc/data/messages/t/trailing-whitespace/bad.py\n      #      - id: file-contents-sorter # commented out because it does not preserve comments order\n      #        args: [\"--ignore-case\", \"--unique\"]\n      #        files: \"custom_dict.txt\"\n      - id: end-of-file-fixer\n        exclude: |\n          (?x)^(\n            tests(/\\w*)*/functional/m/missing/missing_final_newline.py|\n            tests/functional/t/trailing_newlines.py|\n            doc/data/messages/t/trailing-newlines/bad.py|\n            doc/data/messages/m/missing-final-newline/bad/lf.py|\n            doc/data/messages/m/missing-final-newline/bad/crlf.py\n          )$\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: \"v0.8.6\"\n    hooks:\n      - id: ruff\n        args: [\"--fix\"]\n        exclude: doc/data/messages\n      - id: ruff\n        name: ruff-doc\n        files: doc/data/messages\n  - repo: https://github.com/Pierre-Sassoulas/copyright_notice_precommit\n    rev: 0.1.2\n    hooks:\n      - id: copyright-notice\n        args: [\"--notice=script/copyright.txt\", \"--enforce-all\"]\n        exclude: tests(/\\w*)*/functional/|tests/input|doc/data/messages|examples/|setup.py|tests(/\\w*)*data/\n        types: [python]\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n        exclude: doc/data/messages/\n  - repo: https://github.com/psf/black\n    rev: 24.10.0\n    hooks:\n      - id: black\n        args: [--safe, --quiet]\n        exclude: &fixtures tests(/\\w*)*/functional/|tests/input|doc/data/messages|tests(/\\w*)*data/\n      - id: black\n        name: black-doc\n        args: [--safe, --quiet]\n        files: doc/data/messages/\n        exclude: |\n          (?x)^(\n            doc/data/messages/b/bad-indentation/bad.py|\n            doc/data/messages/i/inconsistent-quotes/bad.py|\n            doc/data/messages/i/invalid-format-index/bad.py|\n            doc/data/messages/l/line-too-long/bad.py|\n            doc/data/messages/m/missing-final-newline/bad/crlf.py|\n            doc/data/messages/m/missing-final-newline/bad/lf.py|\n            doc/data/messages/m/multiple-statements/bad.py|\n            doc/data/messages/r/redundant-u-string-prefix/bad.py|\n            doc/data/messages/s/superfluous-parens/bad/example_1.py|\n            doc/data/messages/s/syntax-error/bad.py|\n            doc/data/messages/t/too-many-ancestors/bad.py|\n            doc/data/messages/t/trailing-comma-tuple/bad.py|\n            doc/data/messages/t/trailing-newlines/bad.py|\n            doc/data/messages/t/trailing-whitespace/bad.py|\n            doc/data/messages/u/unnecessary-semicolon/bad.py\n          )$\n  - repo: https://github.com/Pierre-Sassoulas/black-disable-checker\n    rev: v1.1.3\n    hooks:\n      - id: black-disable-checker\n  - repo: local\n    hooks:\n      - id: pylint\n        name: pylint\n        entry: pylint\n        language: system\n        types: [python]\n        # Not that problematic to run in parallel see Pre-commit\n        # integration in the doc for details\n        # require_serial: true\n        args: [\"-rn\", \"-sn\", \"--rcfile=pylintrc\", \"--fail-on=I\"]\n        exclude: tests(/\\w*)*/functional/|tests/input|tests(/\\w*)*data/|doc/\n      # We define an additional manual step to allow running pylint with a spelling\n      # checker in CI.\n      - id: pylint\n        alias: pylint-with-spelling\n        name: pylint\n        entry: pylint\n        language: system\n        types: [python]\n        args:\n          [\n            \"-rn\",\n            \"-sn\",\n            \"--rcfile=pylintrc\",\n            \"--fail-on=I\",\n            \"--spelling-dict=en\",\n            \"--output-format=github\",\n          ]\n        exclude: tests(/\\w*)*/functional/|tests/input|tests(/\\w*)*data/|doc/\n        stages: [manual]\n      - id: sphinx-generated-doc\n        alias: sphinx-generated-doc\n        name: sphinx-generated-doc\n        entry: make -C doc/ html\n        pass_filenames: false\n        language: system\n        stages: [pre-push]\n      - id: check-newsfragments\n        name: Check newsfragments\n        entry: python3 -m script.check_newsfragments\n        language: system\n        types: [text]\n        files: ^(doc/whatsnew/fragments)\n        exclude: doc/whatsnew/fragments/_.*.rst\n  - repo: https://github.com/rstcheck/rstcheck\n    rev: \"v6.2.4\"\n    hooks:\n      - id: rstcheck\n        args: [\"--report-level=warning\"]\n        files: ^(doc/(.*/)*.*\\.rst)\n        additional_dependencies: [Sphinx==7.4.3]\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.14.1\n    hooks:\n      - id: mypy\n        name: mypy\n        entry: mypy\n        language: python\n        types: [python]\n        args: []\n        require_serial: true\n        additional_dependencies:\n          [\n            \"isort>=5\",\n            \"platformdirs==2.2.0\",\n            \"py==1.11\",\n            \"tomlkit>=0.10.1\",\n            \"types-setuptools==75.6.0.20241126\",\n          ]\n        exclude: tests(/\\w*)*/functional/|tests/input|tests(/.*)+/conftest.py|doc/data/messages|tests(/\\w*)*data/\n  - repo: https://github.com/rbubley/mirrors-prettier\n    rev: v3.4.2\n    hooks:\n      - id: prettier\n        args: [--prose-wrap=always, --print-width=88]\n        exclude: tests(/\\w*)*data/\n  - repo: https://github.com/DanielNoord/pydocstringformatter\n    rev: v0.7.3\n    hooks:\n      - id: pydocstringformatter\n        exclude: *fixtures\n        args: [\"--max-summary-lines=2\", \"--linewrap-full-docstring\"]\n        files: \"pylint\"\n  - repo: https://github.com/regebro/pyroma\n    rev: \"4.2\"\n    hooks:\n      - id: pyroma\n        # Must be specified because of the default value in pyroma\n        always_run: false\n        files: |\n          (?x)^(\n              README.rst|\n              pyproject.toml|\n              pylint/__init__.py|\n              pylint/__pkginfo__.py|\n              setup.cfg\n          )$\n  - repo: https://github.com/PyCQA/bandit\n    rev: 1.8.0\n    hooks:\n      - id: bandit\n        args: [\"-r\", \"-lll\"]\n        exclude: *fixtures\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.3.0\n    hooks:\n      - id: codespell\n        args: [\"--toml=pyproject.toml\"]\n        additional_dependencies:\n          - tomli\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 0.1015625,
          "content": "- id: pylint\n  name: pylint\n  entry: pylint\n  language: python\n  types: [python]\n  require_serial: true\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.322265625,
          "content": "# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\nversion: 2\n\nsphinx:\n  fail_on_warning: true\n  configuration: doc/conf.py\n\npython:\n  install:\n    - requirements: doc/requirements.txt\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n  jobs:\n    pre_build:\n      - towncrier build --yes --date TBA\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.552734375,
          "content": "cff-version: 1.2.0\ntitle: \"Pylint\"\nmessage: >-\n  If you use this software, please cite it using the metadata from this file.\ntype: software\nauthors:\n  - name: \"Pylint contributors\"\nrepository-code: \"https://github.com/pylint-dev/pylint\"\nurl: \"https://pylint.readthedocs.io/en/latest/\"\nabstract: >-\n  Pylint is a static code analyser for Python 2 or 3. Pylint analyses your code without\n  actually running it. It checks for errors, enforces a coding standard, looks for code\n  smells, and can make suggestions about how the code could be refactored.\nlicense: GPL-2.0\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.10546875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our community a\nharassment-free experience for everyone, regardless of age, body size, visible or\ninvisible disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal appearance,\nrace, religion, or sexual identity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse,\ninclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our community\ninclude:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes, and\n  learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of any\n  kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address, without\n  their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional\n  setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in response to\nany behavior that they deem inappropriate, threatening, offensive, or harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject comments,\ncommits, code, wiki edits, issues, and other contributions that are not aligned to this\nCode of Conduct, and will communicate reasons for moderation decisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when an\nindividual is officially representing the community in public spaces. Examples of\nrepresenting our community include using an official e-mail address, posting via an\nofficial social media account, or acting as an appointed representative at an online or\noffline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to\nthe community leaders responsible for enforcement at pierre.sassoulas at gmail.com. All\ncomplaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the reporter\nof any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining the\nconsequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing clarity\naround the nature of the violation and an explanation of why the behavior was\ninappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of actions.\n\n**Consequence**: A warning with consequences for continued behavior. No interaction with\nthe people involved, including unsolicited interaction with those enforcing the Code of\nConduct, for a specified period of time. This includes avoiding interactions in\ncommunity spaces as well as external channels like social media. Violating these terms\nmay lead to a temporary or permanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including sustained\ninappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public communication\nwith the community for a specified period of time. No public or private interaction with\nthe people involved, including unsolicited interaction with those enforcing the Code of\nConduct, is allowed during this period. Violating these terms may lead to a permanent\nban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community standards,\nincluding sustained inappropriate behavior, harassment of an individual, or aggression\ntoward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 2.0,\navailable at https://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTORS.txt",
          "type": "blob",
          "size": 30.970703125,
          "content": "# This file is autocompleted by 'contributors-txt',\n# using the configuration in 'script/.contributors_aliases.json'.\n# Do not add new persons manually and only add information without\n# using '-' as the line first character.\n# Please verify that your change are stable if you modify manually.\n\nEx-maintainers\n--------------\n- Claudiu Popa <pcmanticore@gmail.com>\n- Sylvain Thénault <thenault@gmail.com> : main author / maintainer\n- Torsten Marek <shlomme@gmail.com>\n\n\nMaintainers\n-----------\n- Pierre Sassoulas <pierre.sassoulas@gmail.com>\n- Daniël van Noord <13665637+DanielNoord@users.noreply.github.com>\n- Jacob Walls <jacobtylerwalls@gmail.com>\n- Marc Mueller <30130371+cdce8p@users.noreply.github.com>\n- Hippo91 <guillaume.peillex@gmail.com>\n- Mark Byrne <31762852+mbyrnepr2@users.noreply.github.com>\n- Andreas Finkler <3929834+DudeNr33@users.noreply.github.com>\n- Matus Valo <matusvalo@users.noreply.github.com>\n- Dani Alcala <112832187+clavedeluna@users.noreply.github.com>\n- Łukasz Rogalski <rogalski.91@gmail.com>\n- Ashley Whetter <ashley@awhetter.co.uk>\n- Nick Drozd <nicholasdrozd@gmail.com>: performance improvements to astroid\n- Bryce Guinta <bryce.paul.guinta@gmail.com>\n- Yu Shao, Pang <36848472+yushao2@users.noreply.github.com>\n- Dimitri Prybysh <dmand@yandex.ru>\n  * multiple-imports, not-iterable, not-a-mapping, various patches.\n- Roy Williams <roy.williams.iii@gmail.com> (Lyft)\n  * added check for implementing __eq__ without implementing __hash__,\n  * Added Python 3 check for accessing Exception.message.\n  * Added Python 3 check for calling encode/decode with invalid codecs.\n  * Added Python 3 check for accessing sys.maxint.\n  * Added Python 3 check for bad import statements.\n  * Added Python 3 check for accessing deprecated methods on the 'string' module,\n    various patches.\n- Florian Bruhin <me@the-compiler.org>\n- Arianna Yang <areveny@protonmail.com>\n\n\nContributors\n------------\n\nWe would not be here without folks that contributed patches, pull requests,\nissues and their time to pylint. We're incredibly grateful to all of these\ncontributors:\n\n- Emile Anclin <emile.anclin@logilab.fr> (Logilab): python 3 support\n- Michal Nowikowski <godfryd@gmail.com>:\n  * wrong-spelling-in-comment\n  * wrong-spelling-in-docstring\n  * parallel execution on multiple CPUs\n- Julthep Nandakwang <julthep@nandakwang.com>\n- Bruno Daniel <bruno.daniel@blue-yonder.com>: check_docs extension.\n- Sushobhit <31987769+sushobhit27@users.noreply.github.com> (sushobhit27)\n  * Added new check 'comparison-with-itself'.\n  * Added new check 'useless-import-alias'.\n  * Added support of annotations in missing-type-doc and missing-return-type-doc.\n  * Added new check 'comparison-with-callable'.\n  * Removed six package dependency.\n  * Added new check 'chained-comparison'.\n  * Added new check 'useless-object-inheritance'.\n- Brett Cannon <brett@python.org>:\n  * Port source code to be Python 2/3 compatible\n  * Python 3 checker\n- Laura Médioni <laura.medioni@logilab.fr> (Logilab, on behalf of the CNES):\n  * misplaced-comparison-constant\n  * no-classmethod-decorator\n  * no-staticmethod-decorator\n  * too-many-nested-blocks,\n  * too-many-boolean-expressions\n  * unneeded-not\n  * wrong-import-order\n  * ungrouped-imports,\n  * wrong-import-position\n  * redefined-variable-type\n- Harutaka Kawamura <hkawamura0130@gmail.com>\n- Alexandre Fayolle <alexandre.fayolle@logilab.fr> (Logilab): TkInter gui, documentation, debian support\n- Ville Skyttä <ville.skytta@iki.fi>\n- Julien Cristau <julien.cristau@logilab.fr> (Logilab): python 3 support\n- Adrien Di Mascio <Adrien.DiMascio@logilab.fr>\n- Moisés López <moylop260@vauxoo.com> (Vauxoo):\n  * Support for deprecated-modules in modules not installed,\n  * Refactor wrong-import-order to integrate it with `isort` library\n  * Add check too-complex with mccabe for cyclomatic complexity\n  * Refactor wrong-import-position to skip try-import and nested cases\n  * Add consider-merging-isinstance, superfluous-else-return\n  * Fix consider-using-ternary for 'True and True and True or True' case\n  * Add bad-docstring-quotes and docstring-first-line-empty\n  * Add missing-timeout\n- Frank Harrison <frank@doublethefish.com> (doublethefish)\n- Pierre-Yves David <pierre-yves.david@logilab.fr>\n- David Shea <dshea@redhat.com>: invalid sequence and slice index\n- Gunung P. Wibisono <55311527+gunungpw@users.noreply.github.com>\n- Derek Gustafson <degustaf@gmail.com>\n- Cezar Elnazli <cezar.elnazli2@gmail.com>: deprecated-method\n- Joseph Young <80432516+jpy-git@users.noreply.github.com> (jpy-git)\n- Tim Martin <tim@asymptotic.co.uk>\n- Ollie <46904826+ollie-iterators@users.noreply.github.com>\n- Zen Lee <53538590+zenlyj@users.noreply.github.com>\n- Tushar Sadhwani <tushar.sadhwani000@gmail.com> (tusharsadhwani)\n- Nicolas Chauvat <nicolas.chauvat@logilab.fr>\n- orSolocate <38433858+orSolocate@users.noreply.github.com>\n- Radu Ciorba <radu@devrandom.ro>: not-context-manager and confusing-with-statement warnings.\n- Holger Peters <email@holger-peters.de>\n- Cosmin Poieană <cmin@ropython.org>: unichr-builtin and improvements to bad-open-mode.\n- Yilei \"Dolee\" Yang <yileiyang@google.com>\n- Steven Myint <hg@stevenmyint.com>: duplicate-except.\n- Peter Kolbus <peter.kolbus@gmail.com> (Garmin)\n- Luigi Bertaco Cristofolini <lucristofolini@gmail.com> (luigibertaco)\n- Glenn Matthews <glenn@e-dad.net>:\n  * autogenerated documentation for optional extensions,\n  * bug fixes and enhancements for docparams (née check_docs) extension\n- crazybolillo <antonio@zoftko.com>\n- Vlad Temian <vladtemian@gmail.com>: redundant-unittest-assert and the JSON reporter.\n- Julien Jehannet <julien.jehannet@logilab.fr>\n- Boris Feld <lothiraldan@gmail.com>\n- Anthony Sottile <asottile@umich.edu>\n- Robert Hofer <hofrob@protonmail.com>\n- Pedro Algarvio <pedro@algarvio.me> (s0undt3ch)\n- Julien Palard <julien@palard.fr>\n- David Liu <david@cs.toronto.edu> (david-yz-liu)\n- Dan Goldsmith <djgoldsmith@googlemail.com>: support for msg-template in HTML reporter.\n- Buck Evan <buck.2019@gmail.com>\n- Mariatta Wijaya <Mariatta@users.noreply.github.com>\n  * Added new check `logging-fstring-interpolation`\n  * Documentation typo fixes\n- Jakub Wilk <jwilk@jwilk.net>\n- Hugo van Kemenade <hugovk@users.noreply.github.com>\n- Eli Fine <ejfine@gmail.com> (eli88fine): Fixed false positive duplicate code warning for lines with symbols only\n- Andrew Haigh <nelfin@gmail.com> (nelfin)\n- Émile Crater <emile@crater.logilab.fr>\n- Pavel Roskin <proski@gnu.org>\n- David Gilman <davidgilman1@gmail.com>\n- へーさん <hira9603859504@gmail.com>\n- Thomas Hisch <t.hisch@gmail.com>\n- Marianna Polatoglou <mpolatoglou@bloomberg.net>: minor contribution for wildcard import check\n- Manuel Vázquez Acosta <mva.led@gmail.com>\n- Luis Escobar <lescobar@vauxoo.com> (Vauxoo): Add bad-docstring-quotes and docstring-first-line-empty\n- Lucas Cimon <lucas.cimon@gmail.com>\n- Konstantina Saketou <56515303+ksaketou@users.noreply.github.com>\n- Konstantin <Github@pheanex.de>\n- Jim Robertson <jrobertson98atx@gmail.com>\n- Ethan Leba <ethanleba5@gmail.com>\n- Enji Cooper <yaneurabeya@gmail.com>\n- Drum Ogilvie <me@daogilvie.com>\n- David Lindquist <dlindquist@google.com>: logging-format-interpolation warning.\n- Daniel Harding <dharding@gmail.com>\n- Anthony Truchet <anthony.truchet@logilab.fr>\n- Alexander Todorov <atodorov@otb.bg>:\n  * added new error conditions to 'bad-super-call',\n  * Added new check for incorrect len(SEQUENCE) usage,\n  * Added new extension for comparison against empty string constants,\n  * Added new extension which detects comparing integers to zero,\n  * Added new useless-return checker,\n  * Added new try-except-raise checker\n- theirix <theirix@gmail.com>\n- correctmost <134317971+correctmost@users.noreply.github.com>\n- Téo Bouvard <teobouvard@gmail.com>\n- Stavros Ntentos <133706+stdedos@users.noreply.github.com>\n- Nicolas Boulenguez <nicolas@debian.org>\n- Mihai Balint <balint.mihai@gmail.com>\n- Mark Bell <mark00bell@googlemail.com>\n- Levi Gruspe <mail.levig@gmail.com>\n- Jakub Kuczys <me@jacken.men>\n- Hornwitser <github@hornwitser.no>: fix import graph\n- Fureigh <rhys.fureigh@gsa.gov>\n- David Douard <david.douard@sdfa3.org>\n- Daniel Balparda <balparda@google.com> (Google): GPyLint maintainer (Google's pylint variant)\n- Bastien Vallet <bastien.vallet@gmail.com> (Djailla)\n- Aru Sahni <arusahni@gmail.com>: Git ignoring, regex-based ignores\n- Andreas Freimuth <andreas.freimuth@united-bits.de>: fix indentation checking with tabs\n- Alexandru Coman <fcoman@bitdefender.com>\n- jpkotta <jpkotta@gmail.com>\n- Thomas Grainger <tagrain@gmail.com>\n- Takahide Nojima <nozzy123nozzy@gmail.com>\n- Taewon D. Kim <kimt33@mcmaster.ca>\n- Sneaky Pete <sneakypete81@gmail.com>\n- Sergey B Kirpichev <skirpichev@gmail.com>\n- Sandro Tosi <sandro.tosi@gmail.com>: Debian packaging\n- Rogdham <contact@rogdham.net>\n- Rene Zhang <rz99@cornell.edu>\n- Paul Lichtenberger <paul.lichtenberger.rgbg@gmail.com>\n- Or Bahari <or.ba402@gmail.com>\n- Mr. Senko <atodorov@mrsenko.com>\n- Mike Frysinger <vapier@gmail.com>\n- Martin von Gagern <gagern@google.com> (Google): Added 'raising-format-tuple' warning.\n- Martin Vielsmaier <martin@vielsmaier.net>\n- Martin Pool <mbp@google.com> (Google):\n  * warnings for anomalous backslashes\n  * symbolic names for messages (like 'unused')\n  * etc.\n- Martin Bašti <MartinBasti@users.noreply.github.com>\n  * Added new check for shallow copy of os.environ\n  * Added new check for useless `with threading.Lock():` statement\n- Marcus Näslund <naslundx@gmail.com> (naslundx)\n- Marco Pernigotti <7657251+mpernigo@users.noreply.github.com>\n- Marco Forte <fortemarco.irl@gmail.com>\n- James Addison <55152140+jayaddison@users.noreply.github.com>\n- Ionel Maries Cristian <contact@ionelmc.ro>\n- Gergely Kalmár <gergely.kalmar@logikal.jp>\n- Damien Baty <damien.baty@polyconseil.fr>\n- Benjamin Drung <benjamin.drung@profitbricks.com>: contributing Debian Developer\n- Anubhav <35621759+anubh-v@users.noreply.github.com>\n- Antonio Quarta <sgheppy88@gmail.com>\n- Andrew J. Simmons <anjsimmo@gmail.com>\n- Alexey Pelykh <alexey.pelykh@gmail.com>\n- wtracy <afishionado@gmail.com>\n- jessebrennan <jesse@jesse.computer>\n- chohner <mail@chohner.com>\n- aatle <168398276+aatle@users.noreply.github.com>\n- Tiago Honorato <61059243+tiagohonorato@users.noreply.github.com>\n- Steven M. Vascellaro <svascellaro@gmail.com>\n- Robin Tweedie <70587124+robin-wayve@users.noreply.github.com>\n- Roberto Leinardi <leinardi@gmail.com>: PyCharm plugin maintainer\n- Ricardo Gemignani <ricardo.gemignani@gmail.com>\n- Pieter Engelbrecht <pengelbrecht@rems2.com>\n- Philipp Albrecht <flying-sheep@web.de> (pylbrecht)\n- Nicolas Dickreuter <dickreuter@gmail.com>\n- Nick Bastin <nick.bastin@gmail.com>\n- Nathaniel Manista <nathaniel@google.com>: suspicious lambda checking\n- Maksym Humetskyi <Humetsky@gmail.com> (mhumetskyi)\n  * Fixed ignored empty functions by similarities checker with \"ignore-signatures\" option enabled\n  * Ignore function decorators signatures as well by similarities checker with \"ignore-signatures\" option enabled\n  * Ignore class methods and nested functions signatures as well by similarities checker with \"ignore-signatures\" option enabled\n- Kylian <development@goudcode.nl>\n- Konstantin Manna <Konstantin@Manna.uno>\n- Kai Mueller <15907922+kasium@users.noreply.github.com>\n- Joshua Cannon <joshdcannon@gmail.com>\n- John Leach <jfleach@jfleach.com>\n- James Morgensen <james.morgensen@gmail.com>: ignored-modules option applies to import errors.\n- Jaehoon Hwang <jaehoonhwang@users.noreply.github.com> (jaehoonhwang)\n- Huw Jones <huw@huwcbjones.co.uk>\n- Gideon <87426140+GideonBear@users.noreply.github.com>\n- Ganden Schaffner <gschaffner@pm.me>\n- Frost Ming <frostming@tencent.com>\n- Federico Bond <federicobond@gmail.com>\n- Erik Wright <erik.wright@shopify.com>\n- Erik Eriksson <molobrakos@users.noreply.github.com>: Added overlapping-except error check.\n- Daniel Mouritzen <dmrtzn@gmail.com>\n- Dan Hemberger <846186+hemberger@users.noreply.github.com>\n- Chris Rebert <code@rebertia.com>: unidiomatic-typecheck.\n- Aurelien Campeas <aurelien.campeas@logilab.fr>\n- Alvaro Frias <alvarofriasgaray@gmail.com>\n- Alexander Pervakov <frost.nzcr4@jagmort.com>\n- Alain Leufroy <alain.leufroy@logilab.fr>\n- Adam Williamson <awilliam@redhat.com>\n- xmo-odoo <xmo-odoo@users.noreply.github.com>\n- tbennett0 <tbennett0@users.noreply.github.com>\n- omarandlorraine <64254276+omarandlorraine@users.noreply.github.com>\n- craig-sh <craig-sh@users.noreply.github.com>\n- bernie gray <bfgray3@users.noreply.github.com>\n- azinneck0485 <123660683+azinneck0485@users.noreply.github.com>\n- Wes Turner <westurner@google.com> (Google): added new check 'inconsistent-quotes'\n- Tyler Thieding <tyler@thieding.com>\n- Tobias Hernstig <30827238+thernstig@users.noreply.github.com>\n- Sviatoslav Sydorenko <wk@sydorenko.org.ua>\n- Smixi <sismixx@hotmail.fr>\n- Simu Toni <simutoni@gmail.com>\n- Sergei Lebedev <185856+superbobry@users.noreply.github.com>\n- Scott Worley <scottworley@scottworley.com>\n- Saugat Pachhai <suagatchhetri@outlook.com>\n- Samuel FORESTIER <HorlogeSkynet@users.noreply.github.com>\n- Rémi Cardona <remi.cardona@polyconseil.fr>\n- Ryan Ozawa <ryan.ozawa21@gmail.com>\n- Roger Sheu <78449574+rogersheu@users.noreply.github.com>\n- Raphael Gaschignard <raphael@makeleaps.com>\n- Ram Rachum <ram@rachum.com> (cool-RR)\n- Radostin Stoyanov <rst0git@users.noreply.github.com>\n- Peter Bittner <django@bittner.it>\n- Paul Renvoisé <PaulRenvoise@users.noreply.github.com>\n- PHeanEX <github@pheanex.de>\n- Omega Weapon <OmegaPhil+hg@gmail.com>\n- Nikolai Kristiansen <nikolaik@gmail.com>\n- Nick Pesce <nickpesce22@gmail.com>\n- Nathan Marrow <nmarrow@google.com>\n- Mikhail Fesenko <m.fesenko@corp.vk.com>\n- Matthew Suozzo <msuozzo@google.com>\n- Matthew Beckers <17108752+mattlbeck@users.noreply.github.com> (mattlbeck)\n- Mark Roman Miller <mtmiller@users.noreply.github.com>: fix inline defs in too-many-statements\n- MalanB <malan.kmu@gmail.com>\n- Mads Kiilerich <mads@kiilerich.com>\n- Maarten ter Huurne <maarten@treewalker.org>\n- Lefteris Karapetsas <lefteris@refu.co>\n- LCD 47 <lcd047@gmail.com>\n- Jérome Perrin <perrinjerome@gmail.com>\n- Justin Li <justinnhli@gmail.com>\n- John Kirkham <jakirkham@gmail.com>\n- Jens H. Nielsen <Jens.Nielsen@microsoft.com>\n- Jake Lishman <jake.lishman@ibm.com>\n- Ioana Tagirta <ioana.tagirta@gmail.com>: fix bad thread instantiation check\n- Ikraduya Edian <ikraduya@gmail.com>: Added new checks 'consider-using-generator' and 'use-a-generator'.\n- Hugues Bruant <hugues.bruant@affirm.com>\n- Hashem Nasarat <Hnasar@users.noreply.github.com>\n- Harut <yes@harutune.name>\n- Grygorii Iermolenko <gyermolenko@gmail.com>\n- Grizzly Nyo <grizzly.nyo@gmail.com>\n- Gabriel R. Sezefredo <g@briel.dev>: Fixed \"exception-escape\" false positive with generators\n- Filipe Brandenburger <filbranden@google.com>\n- Fantix King <fantix@uchicago.edu> (UChicago)\n- Eric McDonald <221418+emcd@users.noreply.github.com>\n- Elias Dorneles <eliasdorneles@gmail.com>: minor adjust to config defaults and docs\n- Elazrod56 <thomas.lf5629@gmail.com>\n- Derek Harland <derek.harland@finq.co.nz>\n- David Pursehouse <david.pursehouse@gmail.com>\n- Dave Bunten <dave.bunten@cuanschutz.edu>\n- Daniel Miller <millerdev@gmail.com>\n- Christoph Blessing <33834216+cblessing24@users.noreply.github.com>\n- Chris Murray <chris@chrismurray.scot>\n- Chris Lamb <chris@chris-lamb.co.uk>\n- Charles Hebert <charles.hebert@logilab.fr>\n- Carli Freudenberg <carli.freudenberg@energymeteo.de> (CarliJoy)\n  * Fixed issue 5281, added Unicode checker\n  * Improve non-ascii-name checker\n- Bruce Dawson <randomascii@users.noreply.github.com>\n- Brian Shaginaw <brian.shaginaw@warbyparker.com>: prevent error on exception check for functions\n- Benny Mueller <benny.mueller91@gmail.com>\n- Ben James <benjames1999@hotmail.co.uk>\n- Ben Green <benhgreen@icloud.com>\n- Batuhan Taskaya <batuhanosmantaskaya@gmail.com>\n- Alexander Kapshuna <kapsh@kap.sh>\n- Akhil Kamat <akhil.kamat@gmail.com>\n- Adam Parkin <pzelnip@users.noreply.github.com>\n- 谭九鼎 <109224573@qq.com>\n- Łukasz Sznuk <ls@rdprojekt.pl>\n- zasca <gorstav@gmail.com>\n- y2kbugger <y2kbugger@users.noreply.github.com>\n- vinnyrose <vinnyrose@users.noreply.github.com>\n- ttenhoeve-aa <ttenhoeve@appannie.com>\n- thinwybk <florian.k@mailbox.org>\n- syutbai <syutbai@gmail.com>\n- sur.la.route <17788706+christopherpickering@users.noreply.github.com>\n- sdet_liang <liangway@users.noreply.github.com>\n- paschich <millen@gridium.com>\n- oittaa <8972248+oittaa@users.noreply.github.com>\n- nyabkun <75878387+nyabkun@users.noreply.github.com>\n- moxian <aleftmail@inbox.ru>\n- mar-chi-pan <mar.polatoglou@gmail.com>\n- lrjball <50599110+lrjball@users.noreply.github.com>\n- laike9m <laike9m@users.noreply.github.com>\n- kyoto7250 <50972773+kyoto7250@users.noreply.github.com>\n- kriek <sylvain.ackermann@gmail.com>\n- kdestin <101366538+kdestin@users.noreply.github.com>\n- jaydesl <35102795+jaydesl@users.noreply.github.com>\n- jab <jab@users.noreply.github.com>\n- gracejiang16 <70730457+gracejiang16@users.noreply.github.com>\n- glmdgrielson <32415403+glmdgrielson@users.noreply.github.com>\n- glegoux <gilles.legoux@gmail.com>\n- gaurikholkar <f2013002@goa.bits-pilani.ac.in>\n- flyingbot91 <flyingbot91@gmx.com>\n- fly <fly@users.noreply.github.com>\n- fahhem <fahhem>\n- fadedDexofan <fadedDexofan@gmail.com>\n- epenet <6771947+epenet@users.noreply.github.com>\n- danields <danields761@gmail.com>\n- cosven <cosven@users.noreply.github.com>\n- cordis-dev <darius@adroiti.com>\n- cherryblossom <31467609+cherryblossom000@users.noreply.github.com>\n- bluesheeptoken <louis.fruleux1@gmail.com>\n- anatoly techtonik <techtonik@gmail.com>\n- akirchhoff-modular <github-work@kirchhoff.digital>\n- agutole <toldo_carp@hotmail.com>\n- Zeckie <49095968+Zeckie@users.noreply.github.com>\n- Zeb Nicholls <zebedee.nicholls@climate-energy-college.org>\n  * Made W9011 compatible with 'of' syntax in return types\n- Yuval Langer <yuvallanger@mail.tau.ac.il>\n- Yury Gribov <tetra2005@gmail.com>\n- Yuri Bochkarev <baltazar.bz@gmail.com>: Added epytext support to docparams extension.\n- Youngsoo Sung <ysung@bepro11.com>\n- Yory <39745367+yory8@users.noreply.github.com>\n- Yoichi Nakayama <yoichi.nakayama@gmail.com>\n- Yeting Li <liyt@ios.ac.cn> (yetingli)\n- Yannack <yannack@users.noreply.github.com>\n- Yann Dirson <ydirson@free.fr>\n- Yang Yang <y4n9squared@gmail.com>\n- Xi Shen <davidshen84@gmail.com>\n- Winston H <56998716+winstxnhdw@users.noreply.github.com>\n- Will Shanks <wsha@posteo.net>\n- Viorel Știrbu <viorels@gmail.com>: intern-builtin warning.\n- VictorT <victor.taix@gmail.com>\n- Victor Jiajunsu <16359131+jiajunsu@users.noreply.github.com>\n- ViRuSTriNiTy <cradle-of-mail@gmx.de>\n- Val Lorentz <progval+github@progval.net>\n- Ulrich Eckhardt <UlrichEckhardt@users.noreply.github.com>\n- Udi Fuchs <udifuchs@gmail.com>\n- Trevor Bekolay <tbekolay@gmail.com>\n  * Added --list-msgs-enabled command\n- Tomer Chachamu <tomer.chachamu@gmail.com>: simplifiable-if-expression\n- Tomasz Michalski <tomasz.michalski@rtbhouse.com>\n- Tomasz Magulski <tomasz@magullab.io>\n- Tom <tsarantis@proton.me>\n- Tim Hatch <tim@timhatch.com>\n- Tim Gates <tim.gates@iress.com>\n- Tianyu Chen <124018391+UTsweetyfish@users.noreply.github.com>\n- Théo Battrel <theo.util@protonmail.ch>\n- Thomas Benhamou <thomas@lightricks.com>\n- Theodore Ni <3806110+tjni@users.noreply.github.com>\n- Tanvi Moharir <74228962+tanvimoharir@users.noreply.github.com>: Fix for invalid toml config\n- T.Rzepka <Tobias.Rzepka@gmail.com>\n- Svetoslav Neykov <svet@hyperscience.com>\n- SubaruArai <78188579+SubaruArai@users.noreply.github.com>\n- Stéphane Wirtel <stephane@wirtel.be>: nonlocal-without-binding\n- Stephen Longofono <8992396+SLongofono@users.noreply.github.com>\n- Stephane Odul <1504511+sodul@users.noreply.github.com>\n- Stanislav Levin <slev@altlinux.org>\n- Sorin Sbarnea <ssbarnea@redhat.com>\n- Slavfox <slavfoxman@gmail.com>\n- Skip Montanaro <skip@pobox.com>\n- Sigurd Spieckermann <2206639+sisp@users.noreply.github.com>\n- Shiv Venkatasubrahmanyam <shvenkat@users.noreply.github.com>\n- Sebastian Müller <mueller.seb@posteo.de>\n- Sayyed Faisal Ali <80758388+C0DE-SLAYER@users.noreply.github.com>\n- Sasha Bagan <pnlbagan@gmail.com>\n- Sardorbek Imomaliev <sardorbek.imomaliev@gmail.com>\n- Santiago Castro <bryant@montevideo.com.uy>\n- Samuel Freilich <sfreilich@google.com> (sfreilich)\n- Sam Vermeiren <88253337+PaaEl@users.noreply.github.com>\n- Ryan McGuire <ryan@enigmacurry.com>\n- Ry4an Brase <ry4an-hg@ry4an.org>\n- Ruro <ruro.ruro@ya.ru>\n- Roshan Shetty <roshan.shetty2816@gmail.com>\n- Roman Ivanov <me@roivanov.com>\n- Robert Schweizer <robert_schweizer@gmx.de>\n- Reverb Chu <reverbc@users.noreply.github.com>\n- Renat Galimov <renat2017@gmail.com>\n- Rebecca Turner <rbt@sent.as> (9999years)\n- Randall Leeds <randall@bleeds.info>\n- Ramon Saraiva <ramonsaraiva@gmail.com>\n- Ramiro Leal-Cavazos <ramiroleal050@gmail.com> (ramiro050): Fixed bug preventing pylint from working with Emacs tramp\n- RSTdefg <34202999+RSTdefg@users.noreply.github.com>\n- R. N. West <98110034+rnwst@users.noreply.github.com>\n- Qwiddle13 <32040075+Qwiddle13@users.noreply.github.com>\n- Quentin Young <qlyoung@users.noreply.github.com>\n- Prajwal Borkar <sunnyborkar7777@gmail.com>\n- Petr Pulc <petrpulc@gmail.com>: require whitespace around annotations\n- Peter Dawyndt <Peter.Dawyndt@UGent.be>\n- Peter Dave Hello <hsu@peterdavehello.org>\n- Peter Aronoff <peter@aronoff.org>\n- Paul Cochrane <paul@liekut.de>\n- Patrik <patrik.mrx@gmail.com>\n- Pascal Corpet <pcorpet@users.noreply.github.com>\n- Pablo Galindo Salgado <Pablogsal@gmail.com>\n  * Fix false positive 'Non-iterable value' with async comprehensions.\n- Osher De Paz <odepaz@redhat.com>\n- Oisín Moran <OisinMoran@users.noreply.github.com>\n- Obscuron <Abscuron@gmail.com>\n- Noam Yorav-Raphael <noamraph@gmail.com>\n- Noah-Agnel <138210920+Noah-Agnel@users.noreply.github.com>\n- Nir Soffer <nirsof@gmail.com>\n- Niko Wenselowski <niko@nerdno.de>\n- Nikita Sobolev <mail@sobolevn.me>\n- Nick Smith <clickthisnick@users.noreply.github.com>\n- Neowizard <Neowizard@users.noreply.github.com>\n- Ned Batchelder <ned@nedbatchelder.com>\n- Natalie Serebryakova <natalie.serebryakova@Natalies-MacBook-Pro.local>\n- Naglis Jonaitis <827324+naglis@users.noreply.github.com>\n- Moody <mooodyhunter@outlook.com>\n- Mitchell Young <mitchelly@gmail.com>: minor adjustment to docparams\n- Mitar <mitar.github@tnode.com>\n- Ming Lyu <CareF.Lm@gmail.com>\n- Mikhail f. Shiryaev <mr.felixoid@gmail.com>\n- Mike Fiedler <miketheman@gmail.com> (miketheman)\n- Mike Bryant <leachim@leachim.info>\n- Mike Bernard <mdbernard@pm.me>\n- Michka Popoff <michkapopoff@gmail.com>\n- Michal Vasilek <michal@vasilek.cz>\n- Michael Scott Cuthbert <cuthbert@mit.edu>\n- Michael Kefeder <oss@multiwave.ch>\n- Michael K <michael-k@users.noreply.github.com>\n- Michael Hudson-Doyle <michael.hudson@canonical.com>\n- Michael Giuffrida <mgiuffrida@users.noreply.github.com>\n- Melvin Hazeleger <31448155+melvio@users.noreply.github.com>\n- Meltem Kenis <meltem.kenis@plentific.com>\n- Mehdi Drissi <mdrissi@hmc.edu>\n- Matěj Grabovský <mgrabovs@redhat.com>\n- Matthijs Blom <19817960+MatthijsBlom@users.noreply.github.com>\n- Matej Spiller Muys <matej.spiller-muys@bitstamp.net>\n- Matej Marušák <marusak.matej@gmail.com>\n- Markus Siebenhaar <41283549+siehar@users.noreply.github.com>\n- Marco Edward Gorelli <marcogorelli@protonmail.com>: Documented Jupyter integration\n- Marcin Kurczewski <rr-@sakuya.pl> (rr-)\n- Maik Röder <maikroeder@gmail.com>\n- Lumír 'Frenzy' Balhar <frenzy.madness@gmail.com>\n- Ludovic Aubry <ludal@logilab.fr>\n- Louis Sautier <sautier.louis@gmail.com>\n- Lorena Buciu <46202743+lorena-b@users.noreply.github.com>\n- Logan Miller <14319179+komodo472@users.noreply.github.com>\n- Kári Tristan Helgason <kthelgason@gmail.com>\n- Kurian Benoy <70306694+kurianbenoy-aot@users.noreply.github.com>\n- Krzysztof Czapla <k.czapla68@gmail.com>\n- Kraig Brockschmidt <kraigbr@msn.com>\n- Kound <norman.freudenberg@posteo.de>\n- KotlinIsland <65446343+KotlinIsland@users.noreply.github.com>\n- Kosarchuk Sergey <sergeykosarchuk@gmail.com>\n- Konrad Weihmann <46938494+priv-kweihmann@users.noreply.github.com>\n- Kian Meng, Ang <kianmeng.ang@gmail.com>\n- Kevin Phillips <thefriendlycoder@gmail.com>\n- Kevin Jing Qiu <kevin.jing.qiu@gmail.com>\n- Kenneth Schackart <schackartk1@gmail.com>\n- Kayran Schmidt <59456929+yumasheta@users.noreply.github.com>\n- Karthik Nadig <kanadig@microsoft.com>\n- Jürgen Hermann <jh@web.de>\n- Josselin Feist <josselin@trailofbits.com>\n- Jonathan Kotta <KottaJonathan@JohnDeere.com>\n- John Paraskevopoulos <io.paraskev@gmail.com>: add 'differing-param-doc' and 'differing-type-doc'\n- John McGehee <jmcgehee@altera.com>\n- John Gabriele <jgabriele@fastmail.fm>\n- John Belmonte <john@neggie.net>\n- Joffrey Mander <joffrey.mander+pro@gmail.com>\n- Jochen Preusche <iilei@users.noreply.github.com>\n- Jeroen Seegers <jeroenseegers@users.noreply.github.com>:\n  * Fixed `toml` dependency issue\n- Jeremy Fleischman <jeremyfleischman@gmail.com>\n- Jason Owen <jason.a.owen@gmail.com>\n- Jason Lau <github.com@dotkr.nl>\n- Jared Garst <cultofjared@gmail.com>\n- Jared Deckard <jared.deckard@gmail.com>\n- Janne Rönkkö <jannero@users.noreply.github.com>\n- Jamie Scott <jamie@jami.org.uk>\n- James Sinclair <james@nurfherder.com>\n- James M. Allen <james.m.allen@gmail.com>\n- James Lingard <jchl@aristanetworks.com>\n- James Broadhead <jamesbroadhead@gmail.com>\n- Jakub Kulík <Kulikjak@gmail.com>\n- Jakob Normark <jakobnormark@gmail.com>\n- Jacques Kvam <jwkvam@gmail.com>\n- Jace Browning <jacebrowning@gmail.com>: updated default report format with clickable paths\n- JT Olds <jtolds@xnet5.com>\n- Iggy Eom <iggy.eom@sendbird.com>\n- Hayden Richards <62866982+SupImDos@users.noreply.github.com>\n  * Fixed \"no-self-use\" for async methods\n  * Fixed \"docparams\" extension for async functions and methods\n- Harshil <37377066+harshil21@users.noreply.github.com>\n- Harry <harrymcwinters@gmail.com>\n- Grégoire <96051754+gregoire-mullvad@users.noreply.github.com>\n- Grant Welch <gwelch925+github@gmail.com>\n- Giuseppe Valente <gvalente@arista.com>\n- Gary Tyler McLeod <mail@garytyler.com>\n- Felix von Drigalski <FvDrigalski@gmail.com>\n- Fabrice Douchant <Fabrice.Douchant@logilab.fr>\n- Fabio Natali <me@fabionatali.com>\n- Fabian Damken <fdamken+github@frisp.org>\n- Eric Froemling <ericfroemling@gmail.com>\n- Emmanuel Chaudron <manu.chaud@hotmail.fr>\n- Elizabeth Bott <52465744+elizabethbott@users.noreply.github.com>\n- Ekin Dursun <ekindursun@gmail.com>\n- Eisuke Kawashima <e-kwsm@users.noreply.github.com>\n- Edward K. Ream <edreamleo@gmail.com>\n- Edgemaster <grand.edgemaster@gmail.com>\n- Eddie Darling <eddie.darling@genapsys.com>\n- Drew Risinger <drewrisinger@users.noreply.github.com>\n- Dr. Nick <das-intensity@users.noreply.github.com>\n- Don Jayamanne <don.jayamanne@yahoo.com>\n- Dmytro Kyrychuk <dmytro.kyrychuck@gmail.com>\n- Dionisio E Alonso <baco@users.noreply.github.com>\n- DetachHead <57028336+DetachHead@users.noreply.github.com>\n- Dennis Keck <26092524+fellhorn@users.noreply.github.com>\n- Denis Laxalde <denis.laxalde@logilab.fr>\n- David Lawson <dmrlawson@gmail.com>\n- David Cain <davidjosephcain@gmail.com>\n- Danny Hermes <daniel.j.hermes@gmail.com>\n- Daniele Procida <daniele@vurt.org>\n- Daniela Plascencia <daplascen@gmail.com>\n- Daniel Werner <daniel.werner@scalableminds.com>\n- Daniel Wang <danielwang405@gmail.com>\n- Daniel R. Neal <dan.r.neal@gmail.com> (danrneal)\n- Daniel Draper <Germandrummer92@users.noreply.github.com>\n- Daniel Dorani <ddandd@gmail.com> (doranid)\n- Daniel Brookman <53625739+dbrookman@users.noreply.github.com>\n- Dan Garrette <dhgarrette@gmail.com>\n- Damien Nozay <damien.nozay@gmail.com>\n- Cubicpath <Cubicpath@protonmail.com>\n- Craig Citro <craigcitro@gmail.com>\n- Cosmo <cosmo@cosmo.red>\n- Clément Schreiner <clement@mux.me>\n- Clément Pit-Claudel <cpitclaudel@users.noreply.github.com>\n- Christopher Zurcher <zurcher@users.noreply.github.com>\n- Christian Clauss <cclauss@me.com>\n- Carl Crowder <bitbucket@carlcrowder.com>: don't evaluate the value of arguments for 'dangerous-default-value'\n- Carey Metcalfe <carey@cmetcalfe.ca>: demoted `try-except-raise` from error to warning\n- Cameron Olechowski <camsterole@users.noreply.github.com>\n- Calin Don <calin.don@gmail.com>\n- Caio Carrara <ccarrara@redhat.com>\n- C.A.M. Gerlach <WIDEnetServices@gmail.com>\n- Bruno P. Kinoshita <kinow@users.noreply.github.com>\n- Brice Chardin <brice.chardin@gmail.com>\n- Brian C. Lane <bcl@redhat.com>\n- Brandon W Maister <quodlibetor@gmail.com>\n- BioGeek <jeroen.vangoey@gmail.com>\n- Benjamin Graham <benwilliamgraham@gmail.com>\n- Benedikt Morbach <benedikt.morbach@googlemail.com>\n- Ben Greiner <code@bnavigator.de>\n- Barak Shoshany <baraksh@gmail.com>\n- Banjamin Freeman <befreeman@users.noreply.github.com>\n- Avram Lubkin <avylove@rockhopper.net>\n- Athos Ribeiro <athoscr@fedoraproject.org>: Fixed dict-keys-not-iterating false positive for inverse containment checks\n- Arun Persaud <arun@nubati.net>\n- Arthur Lutz <arthur.lutz@logilab.fr>\n- Antonio Ossa <aaossa@uc.cl>\n- Antonio Gámiz Delgado <73933988+antoniogamizbadger@users.noreply.github.com>\n- Anthony VEREZ <anthony.verez.external@cassidian.com>\n- Anthony Tan <tanant@users.noreply.github.com>\n- Anthony Foglia <afoglia@users.noreply.github.com> (Google): Added simple string slots check.\n- Anentropic <ego@anentropic.com>\n- Andy Young <a7young@ucsd.edu>\n- Andy Palmer <25123779+ninezerozeronine@users.noreply.github.com>\n- Andrzej Klajnert <github@aklajnert.pl>\n- Andrew Howe <howeaj@users.noreply.github.com>\n- Andres Perez Hortal <andresperezcba@gmail.com>\n- Andre Hora <andrehora@users.noreply.github.com>\n- Aman Salwan <121633121+AmanSal1@users.noreply.github.com>\n- Alok Singh <8325708+alok@users.noreply.github.com>\n- Allan Chandler <95424144+allanc65@users.noreply.github.com> (allanc65)\n  * Fixed issue 5452, false positive missing-param-doc for multi-line Google-style params\n- Alex Waygood <alex.waygood@gmail.com>\n- Alex Mor <5476113+nashcontrol@users.noreply.github.com>\n- Alex Jurkiewicz <alex@jurkiewi.cz>\n- Alex Hearn <alex.d.hearn@gmail.com>\n- Alex Fortin <alex.antoine.fortin@gmail.com>\n- Aleksander Mamla <alek.mamla@gmail.com>\n- Alan Evangelista <alanoe@linux.vnet.ibm.com>\n- Alan Chan <achan961117@gmail.com>\n- Aivar Annamaa <aivarannamaa@users.noreply.github.com>\n- Aidan Haase <44787650+haasea@users.noreply.github.com>\n- Ahirnish Pareek <ahirnish@gmail.com>: 'keyword-arg-before-var-arg' check\n- Agustin Marquez <agusdmb@gmail.com>\n- Adrian Chirieac <chirieacam@gmail.com>\n- Aditya Gupta <adityagupta1089@users.noreply.github.com> (adityagupta1089)\n  * Added ignore_signatures to duplicate checker\n- Adam Tuft <73994535+adamtuft@users.noreply.github.com>\n- Adam Dangoor <adamdangoor@gmail.com>\n- 243f6a88 85a308d3 <33170174+243f6a8885a308d313198a2e037@users.noreply.github.com>\n\n\nCo-Author\n---------\nThe following persons were credited manually but did not commit themselves\nunder this name, or we did not manage to find their commits in the history.\n\n- Agustin Toledo\n- Amaury Forgeot d'Arc: check names imported from a module exists in the module\n- Anthony Tan\n- Axel Muller\n- Benjamin Niemann: allow block level enabling/disabling of messages\n- Bernard Nauwelaerts\n- Bill Wendling\n- Brian van den Broek: windows installation documentation\n- Craig Henriques\n- D. Alphus (Alphadelta14)\n- Daniil Kharkov\n- Eero Vuojolahti\n- Fabio Zadrozny\n- Gauthier Sebaux\n- James DesLauriers\n- manderj\n- Mirko Friedenhagen\n- Nicholas Smith\n- Nuzula H. Yudaka (Nuzhuka)\n- Pek Chhan\n- Peter Hammond\n- Pierre Rouleau\n- Richard Goodman: simplifiable-if-expression (with Tomer Chachamu)\n- Sebastian Ulrich\n- Takashi Hirashima\n- Thomas Snowden: fix missing-docstring for inner functions\n- Wolfgang Grafen\n- Yannick Brehon\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.5625,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n\t51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301 USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.3076171875,
          "content": "include README.rst\ninclude requirements_test_min.txt\ninclude requirements_test_pre_commit.txt\ninclude requirements_test.txt\ninclude tox.ini\ngraft doc\ngraft examples\ngraft script\ngraft tests\nprune doc/_build\nprune tests/.benchmarks\nprune tests/.pylint_primer_tests\nglobal-exclude __pycache__\nglobal-exclude *.py[co]\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 9.4921875,
          "content": "`Pylint`_\n=========\n\n.. _`Pylint`: https://pylint.readthedocs.io/\n\n.. This is used inside the doc to recover the start of the introduction\n\n.. image:: https://github.com/pylint-dev/pylint/actions/workflows/tests.yaml/badge.svg?branch=main\n    :target: https://github.com/pylint-dev/pylint/actions\n\n.. image:: https://codecov.io/gh/pylint-dev/pylint/branch/main/graph/badge.svg?token=ZETEzayrfk\n    :target: https://codecov.io/gh/pylint-dev/pylint\n\n.. image:: https://img.shields.io/pypi/v/pylint.svg\n    :alt: PyPI Package version\n    :target: https://pypi.python.org/pypi/pylint\n\n.. image:: https://readthedocs.org/projects/pylint/badge/?version=latest\n    :target: https://pylint.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n\n.. image:: https://img.shields.io/badge/linting-pylint-yellowgreen\n    :target: https://github.com/pylint-dev/pylint\n\n.. image:: https://results.pre-commit.ci/badge/github/pylint-dev/pylint/main.svg\n   :target: https://results.pre-commit.ci/latest/github/pylint-dev/pylint/main\n   :alt: pre-commit.ci status\n\n.. image:: https://bestpractices.coreinfrastructure.org/projects/6328/badge\n   :target: https://bestpractices.coreinfrastructure.org/projects/6328\n   :alt: CII Best Practices\n\n.. image:: https://img.shields.io/ossf-scorecard/github.com/PyCQA/pylint?label=openssf%20scorecard&style=flat\n   :target: https://api.securityscorecards.dev/projects/github.com/PyCQA/pylint\n   :alt: OpenSSF Scorecard\n\n.. image:: https://img.shields.io/discord/825463413634891776.svg\n   :target: https://discord.gg/qYxpadCgkx\n   :alt: Discord\n\nWhat is Pylint?\n---------------\n\nPylint is a `static code analyser`_ for Python 2 or 3. The latest version supports Python\n3.9.0 and above.\n\n.. _`static code analyser`: https://en.wikipedia.org/wiki/Static_code_analysis\n\nPylint analyses your code without actually running it. It checks for errors, enforces a\ncoding standard, looks for `code smells`_, and can make suggestions about how the code\ncould be refactored.\n\n.. _`code smells`: https://martinfowler.com/bliki/CodeSmell.html\n\nInstall\n-------\n\n.. This is used inside the doc to recover the start of the short text for installation\n\nFor command line use, pylint is installed with::\n\n    pip install pylint\n\nOr if you want to also check spelling with ``enchant`` (you might need to\n`install the enchant C library <https://pyenchant.github.io/pyenchant/install.html#installing-the-enchant-c-library>`_):\n\n.. code-block:: sh\n\n   pip install pylint[spelling]\n\nIt can also be integrated in most editors or IDEs. More information can be found\n`in the documentation`_.\n\n.. _in the documentation: https://pylint.readthedocs.io/en/latest/user_guide/installation/index.html\n\n.. This is used inside the doc to recover the end of the short text for installation\n\nWhat differentiates Pylint?\n---------------------------\n\nPylint is not trusting your typing and is inferring the actual values of nodes (for a\nstart because there was no typing when pylint started off) using its internal code\nrepresentation (astroid). If your code is ``import logging as argparse``, Pylint\ncan check and know that ``argparse.error(...)`` is in fact a logging call and not an\nargparse call. This makes pylint slower, but it also lets pylint find more issues if\nyour code is not fully typed.\n\n    [inference] is the killer feature that keeps us using [pylint] in our project despite how painfully slow it is.\n    - `Realist pylint user`_, 2022\n\n.. _`Realist pylint user`: https://github.com/charliermarsh/ruff/issues/970#issuecomment-1381067064\n\npylint, not afraid of being a little slower than it already is, is also a lot more thorough than other linters.\nThere are more checks, including some opinionated ones that are deactivated by default\nbut can be enabled using configuration.\n\nHow to use pylint\n-----------------\n\nPylint isn't smarter than you: it may warn you about things that you have\nconscientiously done or check for some things that you don't care about.\nDuring adoption, especially in a legacy project where pylint was never enforced,\nit's best to start with the ``--errors-only`` flag, then disable\nconvention and refactor messages with ``--disable=C,R`` and progressively\nre-evaluate and re-enable messages as your priorities evolve.\n\nPylint is highly configurable and permits to write plugins in order to add your\nown checks (for example, for internal libraries or an internal rule). Pylint also has an\necosystem of existing plugins for popular frameworks and third-party libraries.\n\n.. note::\n\n    Pylint supports the Python standard library out of the box. Third-party\n    libraries are not always supported, so a plugin might be needed. A good place\n    to start is ``PyPI`` which often returns a plugin by searching for\n    ``pylint <library>``. `pylint-pydantic`_, `pylint-django`_ and\n    `pylint-sonarjson`_ are examples of such plugins. More information about plugins\n    and how to load them can be found at `plugins`_.\n\n.. _`plugins`: https://pylint.readthedocs.io/en/latest/development_guide/how_tos/plugins.html#plugins\n.. _`pylint-pydantic`: https://pypi.org/project/pylint-pydantic\n.. _`pylint-django`: https://github.com/pylint-dev/pylint-django\n.. _`pylint-sonarjson`: https://github.com/cnescatlab/pylint-sonarjson-catlab\n\nAdvised linters alongside pylint\n--------------------------------\n\nProjects that you might want to use alongside pylint include ruff_ (**really** fast,\nwith builtin auto-fix and a large number of checks taken from popular linters, but\nimplemented in ``rust``) or flake8_ (a framework to implement your own checks in python using ``ast`` directly),\nmypy_, pyright_ / pylance or pyre_ (typing checks), bandit_ (security oriented checks), black_ and\nisort_ (auto-formatting), autoflake_ (automated removal of unused imports or variables), pyupgrade_\n(automated upgrade to newer python syntax) and pydocstringformatter_ (automated pep257).\n\n.. _ruff: https://github.com/astral-sh/ruff\n.. _flake8: https://github.com/PyCQA/flake8\n.. _bandit: https://github.com/PyCQA/bandit\n.. _mypy: https://github.com/python/mypy\n.. _pyright: https://github.com/microsoft/pyright\n.. _pyre: https://github.com/facebook/pyre-check\n.. _black: https://github.com/psf/black\n.. _autoflake: https://github.com/myint/autoflake\n.. _pyupgrade: https://github.com/asottile/pyupgrade\n.. _pydocstringformatter: https://github.com/DanielNoord/pydocstringformatter\n.. _isort: https://pycqa.github.io/isort/\n\nAdditional tools included in pylint\n-----------------------------------\n\nPylint ships with two additional tools:\n\n- pyreverse_ (standalone tool that generates package and class diagrams.)\n- symilar_  (duplicate code finder that is also integrated in pylint)\n\n.. _pyreverse: https://pylint.readthedocs.io/en/latest/additional_tools/pyreverse/index.html\n.. _symilar: https://pylint.readthedocs.io/en/latest/additional_tools/symilar/index.html\n\n\n.. This is used inside the doc to recover the end of the introduction\n\nContributing\n------------\n\n.. This is used inside the doc to recover the start of the short text for contribution\n\nWe welcome all forms of contributions such as updates for documentation, new code, checking issues for duplicates or telling us\nthat we can close them, confirming that issues still exist, `creating issues because\nyou found a bug or want a feature`_, etc. Everything is much appreciated!\n\nPlease follow the `code of conduct`_ and check `the Contributor Guides`_ if you want to\nmake a code contribution.\n\n.. _creating issues because you found a bug or want a feature: https://pylint.readthedocs.io/en/latest/contact.html#bug-reports-feedback\n.. _code of conduct: https://github.com/pylint-dev/pylint/blob/main/CODE_OF_CONDUCT.md\n.. _the Contributor Guides: https://pylint.readthedocs.io/en/latest/development_guide/contribute.html\n\n.. This is used inside the doc to recover the end of the short text for contribution\n\nShow your usage\n-----------------\n\nYou can place this badge in your README to let others know your project uses pylint.\n\n    .. image:: https://img.shields.io/badge/linting-pylint-yellowgreen\n        :target: https://github.com/pylint-dev/pylint\n\nLearn how to add a badge to your documentation in `the badge documentation`_.\n\n.. _the badge documentation: https://pylint.readthedocs.io/en/latest/user_guide/installation/badge.html\n\nLicense\n-------\n\npylint is, with a few exceptions listed below, `GPLv2 <https://github.com/pylint-dev/pylint/blob/main/LICENSE>`_.\n\nThe icon files are licensed under the `CC BY-SA 4.0 <https://creativecommons.org/licenses/by-sa/4.0/>`_ license:\n\n- `doc/logo.png <https://raw.githubusercontent.com/pylint-dev/pylint/main/doc/logo.png>`_\n- `doc/logo.svg <https://raw.githubusercontent.com/pylint-dev/pylint/main/doc/logo.svg>`_\n\nSupport\n-------\n\nPlease check `the contact information`_.\n\n.. _`the contact information`: https://pylint.readthedocs.io/en/latest/contact.html\n\n.. |tideliftlogo| image:: https://raw.githubusercontent.com/pylint-dev/pylint/main/doc/media/Tidelift_Logos_RGB_Tidelift_Shorthand_On-White.png\n   :width: 200\n   :alt: Tidelift\n\n.. list-table::\n   :widths: 10 100\n\n   * - |tideliftlogo|\n     - Professional support for pylint is available as part of the `Tidelift\n       Subscription`_.  Tidelift gives software development teams a single source for\n       purchasing and maintaining their software, with professional grade assurances\n       from the experts who know it best, while seamlessly integrating with existing\n       tools.\n\n.. _Tidelift Subscription: https://tidelift.com/subscription/pkg/pypi-pylint?utm_source=pypi-pylint&utm_medium=referral&utm_campaign=readme\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.158203125,
          "content": "coverage:\n  status:\n    patch:\n      default:\n        target: 100%\n    project:\n      default:\n        target: 95%\ncomment:\n  layout: \"reach, diff, flags, files\"\n"
        },
        {
          "name": "custom_dict.txt",
          "type": "blob",
          "size": 3.310546875,
          "content": "abc\nabcmeta\nabspath\nabstractproperty\nanalyse\nanalysed\nanalysing\narg\nargparse\nargs\nargumentdefaultshelpformatter\nargumentparser\nargumentsparser\nargv\nascii\nasend\nassignattr\nassignname\nAST\nast\nastroid\nasync\nasynccontextmanager\nattr\nattrib\nattrname\nbackport\nBaseChecker\nbasename\nbehaviour\nbidi\nBitbucket\nbla\nbom\nbool\nboolean\nbooleaness\nboolop\nboundmethod\nbuiltins\nbw\ncallables\ncardinality\ncd\ncfg\nchangelog\ncheaders\nchroot\nchunker\nclassdef\nclassdiagram\nclassmethod\nclassmethod's\nclassname\nclassobj\nCLI\ncls\ncmp\ncodebase\ncodec\ncodecs\ncol's\nconf\nconfig\nconst\nConst\ncontextlib\ncontextmanager\ncontravariance\ncontravariant\ncgroup\nCPython\ncpython\ncsv\nCVE\ncwd\ncyclomatic\ndataclass\ndataclasses\ndatetime\ndebian\ndeduplication\ndeepcopy\ndefaultdicts\ndefframe\ndefstmts\ndeleter\ndependabot\ndeque\ndestructured\ndestructuring\ndiadefs\ndiadefslib\ndictcomp\ndicts\ndir\ndirname\ndocparams\ndocstring\ndocstrings\ndumpable\ndunder\nelif\nelif's\nelt\nemittable\nencodings\nendswith\nenum\nenums\nepilog\nepylint\nepytext\nerroring\netree\nexpr\nfalsey\nfavour\nfilepath\nfilestream\nfinalbody\n# TODO Remove when we are able to remove our own symbols\nfixme\nFlymake\nfmt\nformatter\nformfeed\nfromlineno\nfullname\nfunc\nfunctiondef\nfunctiøn\nfunctools\ngenexpr\ngetattr\nglobals\nglobbing\nGPL\ngraphname\ngraphviz\ngrey\nguido's\ngv\nhashable\nhmac\nhtml\nidgeneratormixin\nifexpr\nimportedname\nimportfrom\nimportnode\nimportschecker\nInferenceError\nini\nINI\ninit\ninitializer\ninlinevar\ninstantiation\nisdir\nisfile\nisinstance\nisort\niter\niterable\niterables\nitered\niteritems\niTerm\njn\njpg\njson\njx\njython\n# class is a reserved word\nklass\nkwarg\nkwargs\nkwonlyargs\nlatin\nlen\nlhs\nlinecache\nlineno\nlinenum\nlineset\nlineset's\nlinesets\nlinkers\nlinter\nlinux\nlistcomp\nLogilab\nlongstring\nlsp\nmapfile\nmapreduce\nmaxsize\nmaxsplit\nmcs\nmermaidjs\nmetaclass\nmetaclasses\nmisdesign\nmisdesigns\nmixin\nmodname\nmonkeypatch\nmro\n# Used so much that we need the abbreviation\nmsg\nmsg-template\nmsgid\nmsgids\nmsgs\nmult\nmultiline\nmultiset\nmultisets\nmyattr\nmyfunction\nmymain\nmymethod\nmymodule\nmypy\nnamedtuple\nnamespace\nnewsfile\nnewstyle\nnl\nnodename\nnodeng\nnoinspection\nnonlocal\nnonlocals\nnum\nnumpy\nok\noptdict\noptik\noptionals\noptiondict\noptname\noptparse\noptvalue\norelse\nos\noutputfile\noverridable\nparams\nparen\nparens\npassthru\npathlib\npatternerror\npng\npositionals\npragma\npragma's\npragmas\npre\npreorder\nprepended\nproc\npy\npyenchant\npyfile\npyi\npylint\npylint's\npylintdict\npylintrc\npyproject\npypy\npyreverse\npytest\nqname\nrawcheckers\nrc\nrcfile\nre-usable\nreadlines\nrecognise\nrecurse\nrecurses\nredef\nreportid\nrgx\nrheaders\nrhs\nroid\nrsplit\nrst\nrstrip\nrtype\nruntime\nse\nseaborn\nsep\nsetcomp\nshortstrings\nsingledispatch\nsingledispatchmethod\nspammy\nsqlalchemy\nsrc\nstarargs\nstateful\nstaticmethod\nstderr\nstdin\nstdlib\nstdout\nstmt\nstr\nstringified\nsubclasses\nsubcommands\nsubdicts\nsubgraphs\nsublists\nsubmodule\nsubmodules\nsubparsers\nsubparts\nsubprocess\nsubscriptable\nsubscripted\nsubtree\nsupcls\nsuperclass\nsymilar\nsymlink\nsymlinks\nsys\ntbump\ntempfile\ntestcase\ntestdata\ntestoptions\ntmp\ntokencheckers\ntokeninfo\ntokenization\ntokenize\ntokenizer\ntoml\ntomlkit\ntoplevel\ntowncrier\ntp\ntruthey\ntruthness\ntruthy\ntryexcept\ntxt\ntypecheck\ntypechecking\ntypeddict\ntypehint\ntypeshed\nuid\numl\nun\nunary\nunflattens\nunhandled\nunicode\nuninferable\nUninferable\nunittest\nunraisablehook\nuntriggered\n# prefix for string\nur\nureport\nureports\nutf\nutils\nvalidator\nvararg\nvarargs\nvariadic\nvariadics\nvcg\nvcg's\nvectorisation\nvirtualized\nwc\nwhitespaces\nxfails\nxml\nxyz\nyml\nyoda\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylint",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 17.5,
          "content": "[MAIN]\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Files or directories to be skipped. They should be base names, not\n# paths.\nignore=CVS\n\n# Add files or directories matching the regex patterns to the ignore-list. The\n# regex matches against paths and can be in Posix or Windows format.\nignore-paths=\n\n# Files or directories matching the regex patterns are skipped. The regex\n# matches against base names, not paths.\nignore-patterns=^\\.#\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n    pylint.extensions.check_elif,\n    pylint.extensions.bad_builtin,\n    pylint.extensions.docparams,\n    pylint.extensions.for_any_all,\n    pylint.extensions.set_membership,\n    pylint.extensions.code_style,\n    pylint.extensions.overlapping_exceptions,\n    pylint.extensions.typing,\n    pylint.extensions.redefined_variable_type,\n    pylint.extensions.comparison_placement,\n    pylint.extensions.broad_try_clause,\n    pylint.extensions.dict_init_mutate,\n    pylint.extensions.consider_refactoring_into_while_condition,\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use.\njobs=1\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-allow-list=\n\n# Minimum supported python version\npy-version = 3.9.0\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# Specify a score threshold under which the program will exit with error.\nfail-under=10.0\n\n# Return non-zero exit code if any of these messages/categories are detected,\n# even if score is above --fail-under value. Syntax same as enable. Messages\n# specified are enabled, while categories only check already-enabled messages.\nfail-on=\n\n# Clear in-memory caches upon conclusion of linting. Useful if running pylint in\n# a server-like mode.\nclear-cache-post-run=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\n# confidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=\n    use-symbolic-message-instead,\n    useless-suppression,\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then re-enable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\n\ndisable=\n    attribute-defined-outside-init,\n    invalid-name,\n    missing-docstring,\n    protected-access,\n    too-few-public-methods,\n    # handled by black\n    format,\n    # We anticipate #3512 where it will become optional\n    fixme,\n    consider-using-assignment-expr,\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables 'fatal', 'error', 'warning', 'refactor', 'convention'\n# and 'info', which contain the number of messages in each category, as\n# well as 'statement', which is the total number of statements analyzed. This\n# score is used by the global evaluation report (RP0004).\nevaluation=max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n# Activate the evaluation score.\nscore=yes\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO\n\n# Regular expression of note tags to take in consideration.\n#notes-rgx=\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=6\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=yes\n\n# Signatures are removed from the similarity computation\nignore-signatures=yes\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of names allowed to shadow builtins\nallowed-redefined-builtins=\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=100\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Maximum number of lines in a module\nmax-module-lines=2000\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[BASIC]\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k,ex,Run,_\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names\nconst-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names\nattr-rgx=[a-z_][a-z0-9_]{2,}$\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names\nargument-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Naming style matching correct class constant names.\nclass-const-naming-style=UPPER_CASE\n\n# Regular expression matching correct class constant names. Overrides class-\n# const-naming-style.\n#class-const-rgx=\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,}$\n\n# Regular expression matching correct type variable names\n#typevar-rgx=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring. Use ^(?!__init__$)_ to also check __init__.\nno-docstring-rgx=__.*__\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# List of decorators that define properties, such as abc.abstractproperty.\nproperty-classes=abc.abstractproperty\n\n\n[TYPECHECK]\n\n# Regex pattern to define which classes are considered mixins if ignore-mixin-\n# members is set to 'yes'\nmixin-class-rgx=.*MixIn\n\n# List of module names for which member attributes should not be checked and\n# will not be imported (useful for modules/projects where namespaces are\n# manipulated during runtime and thus existing member attributes cannot be\n# deduced by static analysis). It supports qualified module names, as well\n# as Unix pattern matching.\nignored-modules=\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=SQLObject, optparse.Values, thread._local, _thread._local\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=REQUEST,acl_users,aq_parent,argparse.Namespace\n\n# List of decorators that create context managers from functions, such as\n# contextlib.contextmanager.\ncontextmanager-decorators=contextlib.contextmanager\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# List of comma separated words that should be considered directives if they\n# appear and the beginning of a comment and should not be checked.\nspelling-ignore-comment-directives=fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:,pragma:,# noinspection\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=custom_dict.txt\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=2\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args = 9\n\n# Maximum number of locals for function / method body\nmax-locals = 19\n\n# Maximum number of return / yield for function / method body\nmax-returns=11\n\n# Maximum number of branch for function / method body\nmax-branches = 20\n\n# Maximum number of statements in function / method body\nmax-statements = 50\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=11\n\n# Maximum number of statements in a try-block\nmax-try-statements = 7\n\n# Maximum number of positional arguments (see R0917).\nmax-positional-arguments = 12\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp,__post_init__\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make\n\n# Warn about protected attribute access inside special methods\ncheck-protected-access-in-special-methods=no\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Allow explicit reexports by alias from a package __init__.\nallow-reexport-from-package=no\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,TERMIOS,Bastion,rexec\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=_string\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=builtins.Exception\n\n\n[TYPING]\n\n# Set to ``no`` if the app / library does **NOT** need to support runtime\n# introspection of type annotations. If you use type annotations\n# **exclusively** for type checking of an application, you're probably fine.\n# For libraries, evaluate if some users what to access the type hints at\n# runtime first, e.g., through ``typing.get_type_hints``. Applies to Python\n# versions 3.7 - 3.9\nruntime-typing = no\n\n\n[DEPRECATED_BUILTINS]\n\n# List of builtins function names that should not be used, separated by a comma\nbad-functions=map,input\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit,argparse.parse_error\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[CODE_STYLE]\n\n# Max line length for which to sill emit suggestions. Used to prevent optional\n# suggestions which would get split by a code formatter (e.g., black). Will\n# default to the setting for ``max-line-length``.\n#max-line-length-suggestions=\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 8.125,
          "content": "[build-system]\nrequires = [\"setuptools>=71.0.4\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname        = \"pylint\"\nlicense     = {text = \"GPL-2.0-or-later\"}\ndescription = \"python code static checker\"\nreadme      = \"README.rst\"\nauthors     = [\n    {name = \"Python Code Quality Authority\", email = \"code-quality@python.org\"}\n]\nkeywords    = [\"static code analysis\", \"linter\", \"python\", \"lint\"]\nclassifiers = [\n    \"Development Status :: 6 - Mature\",\n    \"Environment :: Console\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: GNU General Public License v2 (GPLv2)\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n    \"Topic :: Software Development :: Debuggers\",\n    \"Topic :: Software Development :: Quality Assurance\",\n    \"Topic :: Software Development :: Testing\",\n    \"Typing :: Typed\"\n]\nrequires-python = \">=3.9.0\"\ndependencies    = [\n    \"dill>=0.2;python_version<'3.11'\",\n    \"dill>=0.3.6;python_version>='3.11'\",\n    \"dill>=0.3.7;python_version>='3.12'\",\n    \"platformdirs>=2.2.0\",\n    # Also upgrade requirements_test_min.txt.\n    # Pinned to dev of second minor update to allow editable installs and fix primer issues,\n    # see https://github.com/pylint-dev/astroid/issues/1341\n    \"astroid>=3.3.8,<=4.0.0-dev0\",\n    \"isort>=4.2.5,<6,!=5.13.0\",\n    \"mccabe>=0.6,<0.8\",\n    \"tomli>=1.1.0;python_version<'3.11'\",\n    \"tomlkit>=0.10.1\",\n    \"colorama>=0.4.5;sys_platform=='win32'\",\n    \"typing-extensions>=3.10.0;python_version<'3.10'\",\n]\ndynamic = [\"version\"]\n\n[project.optional-dependencies]\ntestutils = [\"gitpython>3\"]\nspelling = [\"pyenchant~=3.2\"]\n\n[project.urls]\n\"Docs: User Guide\"  = \"https://pylint.readthedocs.io/en/latest/\"\n\"Source Code\"       = \"https://github.com/pylint-dev/pylint\"\n\"homepage\"          = \"https://github.com/pylint-dev/pylint\"\n\"What's New\"        = \"https://pylint.readthedocs.io/en/latest/whatsnew/3/\"\n\"Bug Tracker\"       = \"https://github.com/pylint-dev/pylint/issues\"\n\"Discord Server\"    = \"https://discord.com/invite/Egy6P8AMB5\"\n\"Docs: Contributor Guide\" = \"https://pylint.readthedocs.io/en/latest/development_guide/contributor_guide/index.html\"\n\n[project.scripts]\npylint        = \"pylint:run_pylint\"\npylint-config = \"pylint:_run_pylint_config\"\npyreverse     = \"pylint:run_pyreverse\"\nsymilar       = \"pylint:run_symilar\"\n\n[tool.setuptools]\nlicense-files = [\"LICENSE\", \"CONTRIBUTORS.txt\"]  # Keep in sync with setup.cfg\n\n[tool.setuptools.packages.find]\ninclude = [\"pylint*\"]\n\n[tool.setuptools.package-dir]\n# Simulate editable_mode=compat, described at:\n# https://github.com/pypa/setuptools/issues/3767\n# TODO: remove after solving root cause described at:\n# https://github.com/pylint-dev/astroid/pull/2267#issuecomment-1666642781\n\"\" = \".\"\n\n[tool.setuptools.package-data]\npylint = [\"testutils/testing_pylintrc\", \"py.typed\"]\n\n[tool.setuptools.dynamic]\nversion = {attr = \"pylint.__pkginfo__.__version__\"}\n\n[tool.aliases]\ntest = \"pytest\"\n\n[tool.pytest.ini_options]\ntestpaths = [\"tests\"]\npython_files = [\"*test_*.py\"]\naddopts = \"--strict-markers\"\nfilterwarnings = \"error\"\nmarkers = [\n    \"primer_stdlib: Checks for crashes and errors when running pylint on stdlib\",\n    \"benchmark: Baseline of pylint performance, if this regress something serious happened\",\n    \"timeout: Marks from pytest-timeout.\",\n    \"needs_two_cores: Checks that need 2 or more cores to be meaningful\",\n]\n\n[tool.isort]\nprofile = \"black\"\nknown_third_party = [\"platformdirs\", \"astroid\", \"sphinx\", \"isort\", \"pytest\", \"mccabe\", \"six\", \"toml\"]\nextra_standard_library = [\"_string\"]\nskip_glob = [\"tests/functional/**\", \"tests/input/**\", \"tests/extensions/data/**\", \"tests/regrtest_data/**\", \"tests/data/**\", \"astroid/**\", \"venv/**\"]\nsrc_paths = [\"pylint\"]\n\n[tool.mypy]\nscripts_are_modules = true\nwarn_unused_ignores = true\nshow_error_codes = true\nenable_error_code = \"ignore-without-code\"\nstrict = true\n# TODO: Remove this once pytest has annotations\ndisallow_untyped_decorators = false\n\n[[tool.mypy.overrides]]\nignore_missing_imports = true\nmodule = [\n    \"_pytest.*\",\n    \"_string\",\n    \"astroid.*\",\n    # `colorama` ignore is needed for Windows environment\n    \"colorama\",\n    \"contributors_txt\",\n    \"coverage\",\n    \"dill\",\n    \"enchant.*\",\n    \"git.*\",\n    \"mccabe\",\n    \"pytest_benchmark.*\",\n    \"pytest\",\n    \"sphinx.*\",\n]\n\n[tool.ruff]\n\n# ruff is less lenient than pylint and does not make any exceptions\n# (for docstrings, strings and comments in particular).\nline-length = 115\n\nextend-exclude = [\n    \"tests/**/data/\",\n    \"tests/**/functional/\",\n    \"tests/input/\",\n    \"tests/regrtest_data/\",\n]\n\n[tool.ruff.lint]\nselect = [\n    \"B\",  # bugbear\n    \"D\",  # pydocstyle\n    \"E\",  # pycodestyle\n    \"F\",  # pyflakes\n    \"I\",  # isort\n    \"PIE\", # flake8-pie\n    \"PTH\",  # flake8-pathlib\n    \"PYI\", # flake8-pyi\n    \"UP\", # pyupgrade\n    \"RUF\", # ruff\n    \"W\",  # pycodestyle\n]\n\nignore = [\n    \"B905\",  # `zip()` without an explicit `strict=` parameter\n    \"D100\",  # Missing docstring in public module\n    \"D101\",  # Missing docstring in public class\n    \"D102\",  # Missing docstring in public method\n    \"D103\",  # Missing docstring in public function\n    \"D104\",  # Missing docstring in public package\n    \"D105\",  # Missing docstring in magic method\n    \"D106\",  # Missing docstring in public nested class\n    \"D107\",  # Missing docstring in `__init__`\n    \"D205\",  # 1 blank line required between summary line and description\n    \"D400\",  # First line should end with a period\n    \"D401\",  # First line of docstring should be in imperative mood\n    \"PTH100\",  # `os.path.abspath()` should be replaced by `Path.resolve()`\n    \"PTH103\",  # `os.makedirs()` should be replaced by `Path.mkdir(parents=True)`\n    \"PTH107\",  # `os.remove()` should be replaced by `Path.unlink()`\n    \"PTH108\",  # `os.unlink()` should be replaced by `Path.unlink()`\n    \"PTH109\",  # `os.getcwd()` should be replaced by `Path.cwd()`\n    \"PTH110\",  # `os.path.exists()` should be replaced by `Path.exists()`\n    \"PTH111\",  # `os.path.expanduser()` should be replaced by `Path.expanduser()`\n    \"PTH112\",  # `os.path.isdir()` should be replaced by `Path.is_dir()`\n    \"PTH113\",  # `os.path.isfile()` should be replaced by `Path.is_file()`\n    \"PTH118\",  # `os.path.join()` should be replaced by `Path` with `/` operator\n    \"PTH119\",  # `os.path.basename()` should be replaced by `Path.name`\n    \"PTH120\",  # `os.path.dirname()` should be replaced by `Path.parent`\n    \"PTH122\",  # `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`\n    \"PTH123\",  # `open()` should be replaced by `Path.open()`\n    \"PTH207\",  # Replace `glob` with `Path.glob` or `Path.rglob`\n    \"RUF012\",  # mutable default values in class attributes\n]\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"pep257\"\n\n[tool.codespell]\nignore-words = [\"custom_dict.txt\"]\n\n# Disabled the spelling files for obvious reason, but also,\n# the test file with typing extension imported as 'te' and:\n# tests/functional/i/implicit/implicit_str_concat_latin1.py:\n#   - bad encoding\n# pylint/pyreverse/diagrams.py and tests/pyreverse/test_diagrams.py:\n#   - An API from pyreverse use 'classe', and would need to be deprecated\n# pylint/checkers/imports.py:\n#   - 'THIRDPARTY' is a value from isort that would need to be handled even\n#   if isort fix the typo in newer versions\n# tests/functional/m/member/member_checks.py:\n#   - typos are voluntary to create credible 'no-member'\n\nskip = \"\"\"\ntests/checkers/unittest_spelling.py,\\\nCODE_OF_CONDUCT.md,\\\nCONTRIBUTORS.txt,\\\npylint/checkers/imports.py,\\\npylint/pyreverse/diagrams.py,\\\ntests/pyreverse/test_diagrams.py,\\\ntests/functional/i/implicit/implicit_str_concat_latin1.py,\\\ntests/functional/m/member/member_checks.py,\\\ntests/functional/t/type/typevar_naming_style_rgx.py,\\\ntests/functional/t/type/typevar_naming_style_default.py,\\\ntests/functional/m/member/member_checks_async.py,\\\n\"\"\"\n"
        },
        {
          "name": "requirements_test.txt",
          "type": "blob",
          "size": 0.1806640625,
          "content": "-r requirements_test_min.txt\ncoverage~=7.6\ntbump~=6.11.0\ncontributors-txt>=1.0.0\npytest-cov~=6.0\npytest-xdist~=3.6\nsix\n# Type packages for mypy\ntypes-setuptools==75.6.0.20241223\ntox>=3\n"
        },
        {
          "name": "requirements_test_min.txt",
          "type": "blob",
          "size": 0.3408203125,
          "content": ".[testutils,spelling]\n# astroid dependency is also defined in pyproject.toml\nastroid==3.3.8  # Pinned to a specific version for tests\ntyping-extensions~=4.12\npy~=1.11.0\npytest~=8.3\npytest-benchmark~=5.1\npytest-timeout~=2.3\ntowncrier~=24.8\nrequests\n# Voluntary for test purpose, not actually used in prod, see #8904\nsetuptools;python_version>='3.12'\n"
        },
        {
          "name": "requirements_test_pre_commit.txt",
          "type": "blob",
          "size": 0.2109375,
          "content": "# This file is accurate as long as the version in pre-commit configuration\n# is the latest. We don't want to pin and have to upgrade all the time.\npre-commit\nbandit\nblack\nflake8\nruff\nflake8-typing-imports\nisort\nmypy\n"
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.28515625,
          "content": "# Setuptools v62.6 doesn't support editable installs with just 'pyproject.toml' (PEP 660).\n# Keep this file until it does!\n\n[metadata]\n# wheel doesn't yet read license_files from pyproject.toml - tools.setuptools\n# Keep it here until it does!\nlicense_files =\n    LICENSE\n    CONTRIBUTORS.txt\n"
        },
        {
          "name": "tbump.toml",
          "type": "blob",
          "size": 1.958984375,
          "content": "github_url = \"https://github.com/pylint-dev/pylint\"\n\n[version]\ncurrent = \"4.0.0-dev0\"\nregex = '''\n^(?P<major>0|[1-9]\\d*)\n\\.\n(?P<minor>0|[1-9]\\d*)\n\\.\n(?P<patch>0|[1-9]\\d*)\n(?:-?(?P<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$\n'''\n\n[git]\nmessage_template = \"Bump pylint to {new_version}, update changelog\"\ntag_template = \"v{new_version}\"\n\n# For each file to patch, add a [[file]] config\n# section containing the path of the file, relative to the\n# tbump.toml location.\n[[file]]\nsrc = \"pylint/__pkginfo__.py\"\n\n# You can specify a list of commands to\n# run after the files have been patched\n# and before the git commit is made\n\n[[before_commit]]\nname = \"Normalize file ending\"\ncmd = \"git add --renormalize .\"\n\n[[before_commit]]\nname = \"Upgrade changelog\"\ncmd = \"python3 script/bump_changelog.py {new_version}\"\n\n[[before_commit]]\nname = \"Upgrade and check doc\"\ncmd = \"tox -e docs||echo 'Hack so this command does not fail'\"\n\n[[before_commit]]\nname = \"Upgrade the pylintrc examples\"\ncmd = \"pylint --rcfile=/dev/null --generate-rcfile > examples/pylintrc\"\n\n[[before_commit]]\nname = \"Upgrade the toml examples\"\ncmd = \"pylint --rcfile=/dev/null --generate-toml-config > examples/pyproject.toml\"\n\n[[before_commit]]\nname = \"Normalize the contributors-txt configuration\"\ncmd = \"contributors-txt-normalize-configuration -a script/.contributors_aliases.json -o script/.contributors_aliases.json\"\n\n[[before_commit]]\nname = \"Upgrade the contributors list\"\ncmd = \"python3 script/create_contributor_list.py\"\n\n[[before_commit]]\nname = \"Apply pre-commit\"\ncmd = \"pre-commit run --all-files||echo 'Hack so this command does not fail'\"\n\n[[before_commit]]\nname = \"Confirm changes\"\ncmd = \"read -p 'Continue (y)? ' -n 1 -r; echo; [[ ! $REPLY =~ ^[Yy]$ ]] && exit 1 || exit 0\"\n\n# Or run some commands after the git tag and the branch\n# have been pushed:\n#  [[after_push]]\n#  name = \"publish\"\n#  cmd = \"./publish.sh\"\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "towncrier.toml",
          "type": "blob",
          "size": 1.74609375,
          "content": "[tool.towncrier]\nversion = \"4.0.0\"\ndirectory = \"doc/whatsnew/fragments\"\nfilename = \"doc/whatsnew/4/4.0/index.rst\"\ntemplate = \"doc/whatsnew/fragments/_template.rst\"\nissue_format = \"`#{issue} <https://github.com/pylint-dev/pylint/issues/{issue}>`_\"\nwrap = false  # doesn't wrap links correctly if beginning with indentation\n\n# Definition of fragment types.\n# We want the changelog to show in the same order as the fragment types\n# are defined here. Therefore we have to use the array-style fragment definition.\n# The table-style definition, although more concise, would be sorted alphabetically.\n# https://github.com/twisted/towncrier/issues/437\n[[tool.towncrier.type]]\ndirectory = \"breaking\"\nname = \"Breaking Changes\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"user_action\"\nname = \"Changes requiring user actions\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"feature\"\nname = \"New Features\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"new_check\"\nname = \"New Checks\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"removed_check\"\nname = \"Removed Checks\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"extension\"\nname = \"Extensions\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"false_positive\"\nname = \"False Positives Fixed\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"false_negative\"\nname = \"False Negatives Fixed\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"bugfix\"\nname = \"Other Bug Fixes\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"other\"\nname = \"Other Changes\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"internal\"\nname = \"Internal Changes\"\nshowcontent = true\n\n[[tool.towncrier.type]]\ndirectory = \"performance\"\nname = \"Performance Improvements\"\nshowcontent = true\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 2.3740234375,
          "content": "[tox]\nminversion = 3.0\nenvlist = formatting, py39, py310, py311, py312, py313, pypy, benchmark\nskip_missing_interpreters = true\nrequires = pip >=21.3.1\nisolated_build = true\n\n[testenv:pylint]\ndeps =\n    -r {toxinidir}/requirements_test.txt\ncommands =\n    pre-commit run pylint --all-files\n\n[testenv:formatting]\nbasepython = python3\ndeps =\n    -r {toxinidir}/requirements_test.txt\ncommands =\n    pre-commit run --all-files\n\n[testenv:mypy]\nbasepython = python3\ndeps =\n    pre-commit~=2.20\ncommands =\n    pre-commit run mypy --all-files\n\n[testenv]\nsetenv =\n    COVERAGE_FILE = {toxinidir}/.coverage.{envname}\ndeps =\n    !pypy: -r {toxinidir}/requirements_test.txt\n    pypy: -r {toxinidir}/requirements_test_min.txt\ncommands =\n    ; Run tests, ensuring all benchmark tests do not run\n    pytest --benchmark-disable {toxinidir}/tests/ {posargs:}\n\n[testenv:spelling]\ndeps =\n    -r {toxinidir}/requirements_test.txt\ncommands =\n    pytest {toxinidir}/tests/ {posargs:} -k unittest_spelling\n\n[testenv:coverage-html]\nsetenv =\n    COVERAGE_FILE = {toxinidir}/.coverage\ndeps =\n    -r {toxinidir}/requirements_test.txt\nskip_install = true\ncommands =\n    coverage combine\n    coverage html --ignore-errors --rcfile={toxinidir}/.coveragerc\n\n[testenv:docs]\nchangedir = doc/\ndeps =\n    -r {toxinidir}/doc/requirements.txt\ncommands =\n    # Readthedoc launch a slightly different command see '.readthedocs.yaml'\n    # sphinx-build -T -W -E --keep-going -b html -d _build/doctrees -D language=en . _build/html\n    # Changes were made for performance reasons, add or remove only if you can't reproduce.\n    sphinx-build -T -W -j auto --keep-going -b html -d _build/doctrees -D language=en . _build/html\n    # -E: don't use a saved environment, always read all files\n    # -j auto: build in parallel with N processes where possible (special value \"auto\" will set N to cpu-count)\n\n[testenv:test_doc]\ndeps =\n    -r {toxinidir}/requirements_test.txt\ncommands =\n    pytest {toxinidir}/doc/test_messages_documentation.py\n\n[testenv:benchmark]\ndeps =\n    -r {toxinidir}/requirements_test.txt\n    pygal\ncommands =\n    ; Run the only the benchmark tests, grouping output and forcing .json output so we\n    ; can compare benchmark runs\n    pytest --exitfirst \\\n    --failed-first \\\n    --benchmark-only \\\n    --benchmark-save=batch_files \\\n    --benchmark-save-data \\\n    --benchmark-autosave {toxinidir}/tests \\\n    --benchmark-group-by=\"group\" \\\n    {posargs:}\n"
        }
      ]
    }
  ]
}