{
  "metadata": {
    "timestamp": 1736561023065,
    "page": 787,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tib3rius/AutoRecon",
      "stars": 5247,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0341796875,
          "content": "__pycache__\n*.pyc\nresults/\npoetry.*"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6064453125,
          "content": "FROM debian:latest\n\nRUN apt-get update\nRUN apt-get install -y ca-certificates gnupg wget\n\nRUN wget -q -O - https://archive.kali.org/archive-key.asc  | apt-key add -\nRUN echo \"deb http://http.kali.org/kali kali-rolling main contrib non-free\" >> /etc/apt/sources.list\nRUN apt-get update\n\nRUN apt-get install -y python3 python3-pip git seclists curl dnsrecon enum4linux feroxbuster gobuster impacket-scripts nbtscan nikto nmap onesixtyone oscanner redis-tools smbclient smbmap snmp sslscan sipvicious tnscmd10g whatweb wkhtmltopdf\nRUN python3 -m pip install git+https://github.com/Tib3rius/AutoRecon.git\n\n\nCMD [\"/bin/bash\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.9853515625,
          "content": "\t\t\t\t\tGNU GENERAL PUBLIC LICENSE\n\t\t\t\t\t   Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t\t\t\t\tPreamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t\t\t\t   TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n\ta) The work must carry prominent notices stating that you modified\n\tit, and giving a relevant date.\n\n\tb) The work must carry prominent notices stating that it is\n\treleased under this License and any conditions added under section\n\t7.  This requirement modifies the requirement in section 4 to\n\t\"keep intact all notices\".\n\n\tc) You must license the entire work, as a whole, under this\n\tLicense to anyone who comes into possession of a copy.  This\n\tLicense will therefore apply, along with any applicable section 7\n\tadditional terms, to the whole of the work, and all its parts,\n\tregardless of how they are packaged.  This License gives no\n\tpermission to license the work in any other way, but it does not\n\tinvalidate such permission if you have separately received it.\n\n\td) If the work has interactive user interfaces, each must display\n\tAppropriate Legal Notices; however, if the Program has interactive\n\tinterfaces that do not display Appropriate Legal Notices, your\n\twork need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n\ta) Convey the object code in, or embodied in, a physical product\n\t(including a physical distribution medium), accompanied by the\n\tCorresponding Source fixed on a durable physical medium\n\tcustomarily used for software interchange.\n\n\tb) Convey the object code in, or embodied in, a physical product\n\t(including a physical distribution medium), accompanied by a\n\twritten offer, valid for at least three years and valid for as\n\tlong as you offer spare parts or customer support for that product\n\tmodel, to give anyone who possesses the object code either (1) a\n\tcopy of the Corresponding Source for all the software in the\n\tproduct that is covered by this License, on a durable physical\n\tmedium customarily used for software interchange, for a price no\n\tmore than your reasonable cost of physically performing this\n\tconveying of source, or (2) access to copy the\n\tCorresponding Source from a network server at no charge.\n\n\tc) Convey individual copies of the object code with a copy of the\n\twritten offer to provide the Corresponding Source.  This\n\talternative is allowed only occasionally and noncommercially, and\n\tonly if you received the object code with such an offer, in accord\n\twith subsection 6b.\n\n\td) Convey the object code by offering access from a designated\n\tplace (gratis or for a charge), and offer equivalent access to the\n\tCorresponding Source in the same way through the same place at no\n\tfurther charge.  You need not require recipients to copy the\n\tCorresponding Source along with the object code.  If the place to\n\tcopy the object code is a network server, the Corresponding Source\n\tmay be on a different server (operated by you or a third party)\n\tthat supports equivalent copying facilities, provided you maintain\n\tclear directions next to the object code saying where to find the\n\tCorresponding Source.  Regardless of what server hosts the\n\tCorresponding Source, you remain obligated to ensure that it is\n\tavailable for as long as needed to satisfy these requirements.\n\n\te) Convey the object code using peer-to-peer transmission, provided\n\tyou inform other peers where the object code and Corresponding\n\tSource of the work are being offered to the general public at no\n\tcharge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n\ta) Disclaiming warranty or limiting liability differently from the\n\tterms of sections 15 and 16 of this License; or\n\n\tb) Requiring preservation of specified reasonable legal notices or\n\tauthor attributions in that material or in the Appropriate Legal\n\tNotices displayed by works containing it; or\n\n\tc) Prohibiting misrepresentation of the origin of that material, or\n\trequiring that modified versions of such material be marked in\n\treasonable ways as different from the original version; or\n\n\td) Limiting the use for publicity purposes of names of licensors or\n\tauthors of the material; or\n\n\te) Declining to grant rights under trademark law for use of some\n\ttrade names, trademarks, or service marks; or\n\n\tf) Requiring indemnification of licensors and authors of that\n\tmaterial by anyone who conveys the material (or modified versions of\n\tit) with contractual assumptions of liability to the recipient, for\n\tany liability that these contractual assumptions directly impose on\n\tthose licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n\t\t\t\t\t END OF TERMS AND CONDITIONS\n\n\t\t\tHow to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n\t<one line to give the program's name and a brief idea of what it does.>\n\tCopyright (C) <year>  <name of author>\n\n\tThis program is free software: you can redistribute it and/or modify\n\tit under the terms of the GNU General Public License as published by\n\tthe Free Software Foundation, either version 3 of the License, or\n\t(at your option) any later version.\n\n\tThis program is distributed in the hope that it will be useful,\n\tbut WITHOUT ANY WARRANTY; without even the implied warranty of\n\tMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n\tGNU General Public License for more details.\n\n\tYou should have received a copy of the GNU General Public License\n\talong with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n\t<program>  Copyright (C) <year>  <name of author>\n\tThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n\tThis is free software, and you are welcome to redistribute it\n\tunder certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<https://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<https://www.gnu.org/licenses/why-not-lgpl.html>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.853515625,
          "content": "> It's like bowling with bumpers. - [@ippsec](https://twitter.com/ippsec)\n\n# AutoRecon\n\nAutoRecon is a multi-threaded network reconnaissance tool which performs automated enumeration of services. It is intended as a time-saving tool for use in CTFs and other penetration testing environments (e.g. OSCP). It may also be useful in real-world engagements.\n\nThe tool works by firstly performing port scans / service detection scans. From those initial results, the tool will launch further enumeration scans of those services using a number of different tools. For example, if HTTP is found, feroxbuster will be launched (as well as many others).\n\nEverything in the tool is highly configurable. The default configuration performs **no automated exploitation** to keep the tool in line with OSCP exam rules. If you wish to add automatic exploit tools to the configuration, you do so at your own risk. The author will not be held responsible for negative actions that result from the mis-use of this tool.\n\n**Disclaimer: While AutoRecon endeavors to perform as much identification and enumeration of services as possible, there is no guarantee that every service will be identified, or that every service will be fully enumerated. Users of AutoRecon (especially students) should perform their own manual enumeration alongside AutoRecon. Do not rely on this tool alone for exams, CTFs, or other engagements.**\n\n## Origin\n\nAutoRecon was inspired by three tools which the author used during the OSCP labs: [Reconnoitre](https://github.com/codingo/Reconnoitre), [ReconScan](https://github.com/RoliSoft/ReconScan), and [bscan](https://github.com/welchbj/bscan). While all three tools were useful, none of the three alone had the functionality desired. AutoRecon combines the best features of the aforementioned tools while also implementing many new features to help testers with enumeration of multiple targets.\n\n## Features\n\n* Supports multiple targets in the form of IP addresses, IP ranges (CIDR notation), and resolvable hostnames. IPv6 is also supported.\n* Can scan multiple targets concurrently, utilizing multiple processors if they are available.\n* Advanced plugin system allowing for easy creation of new scans.\n* Customizable port scanning plugins for flexibility in your initial scans.\n* Customizable service scanning plugins for further enumeration.\n* Suggested manual follow-up commands for when automation makes little sense.\n* Ability to limit port scanning to a combination of TCP/UDP ports.\n* Ability to skip port scanning phase by supplying information about services which should be open.\n* Global and per-scan pattern matching which highlights and extracts important information from the noise.\n* An intuitive directory structure for results gathering.\n* Full logging of commands that were run, along with errors if they fail.\n* A powerful config file lets you use your favorite settings every time.\n* A tagging system that lets you include or exclude certain plugins.\n* Global and per-target timeouts in case you only have limited time.\n* Four levels of verbosity, controllable by command-line options, and during scans using Up/Down arrows.\n* Colorized output for distinguishing separate pieces of information. Can be turned off for accessibility reasons.\n\n## Installation\n\nThere are three ways to install AutoRecon: pipx, pip, and manually. Before installation using any of these methods, certain requirements need to be fulfilled. If you have not refreshed your apt cache recently, run the following command so you are installing the latest available packages:\n\n```bash\nsudo apt update\n```\n\n### Python 3\n\nAutoRecon requires the usage of Python 3.8+ and pip, which can be installed on Kali Linux using the following commands:\n\n```bash\nsudo apt install python3\nsudo apt install python3-pip\n```\n\n### Supporting Packages\n\nSeveral commands used in AutoRecon reference the SecLists project, in the directory /usr/share/seclists/. You can either manually download the SecLists project to this directory (https://github.com/danielmiessler/SecLists), or if you are using Kali Linux (**highly recommended**) you can run the following commands:\n\n```bash\nsudo apt install seclists\n```\n\nAutoRecon will still run if you do not install SecLists, though several commands may fail, and some manual commands may not run either.\n\nAdditionally the following commands may need to be installed, depending on your OS:\n\n```\ncurl\ndnsrecon\nenum4linux\nferoxbuster\ngobuster\nimpacket-scripts\nnbtscan\nnikto\nnmap\nonesixtyone\noscanner\nredis-tools\nsmbclient\nsmbmap\nsnmpwalk\nsslscan\nsvwar\ntnscmd10g\nwhatweb\nwkhtmltopdf\n```\n\nOn Kali Linux, you can ensure these are all installed using the following commands:\n\n```bash\nsudo apt install seclists curl dnsrecon enum4linux feroxbuster gobuster impacket-scripts nbtscan nikto nmap onesixtyone oscanner redis-tools smbclient smbmap snmp sslscan sipvicious tnscmd10g whatweb wkhtmltopdf\n```\n\n### Installation Method #1: pipx (Recommended)\n\nIt is recommended you use `pipx` to install AutoRecon. pipx will install AutoRecon in it's own virtual environment, and make it available in the global context, avoiding conflicting package dependencies and the resulting instability. First, install pipx using the following commands:\n\n\n```bash\nsudo apt install python3-venv\npython3 -m pip install --user pipx\npython3 -m pipx ensurepath\n```\n\nYou will have to re-source your ~/.bashrc or ~/.zshrc file (or open a new tab) after running these commands in order to use pipx.\n\nInstall AutoRecon using the following command:\n\n```bash\npipx install git+https://github.com/Tib3rius/AutoRecon.git\n```\n\nNote that if you want to run AutoRecon using sudo (required for faster SYN scanning and UDP scanning), you have to use _one_ of the following examples:\n\n```bash\nsudo env \"PATH=$PATH\" autorecon [OPTIONS]\nsudo $(which autorecon) [OPTIONS]\n```\n\n### Installation Method #2: pip\n\nAlternatively you can use `pip` to install AutoRecon using the following command:\n\n```bash\npython3 -m pip install git+https://github.com/Tib3rius/AutoRecon.git\n```\n\nNote that if you want to run AutoRecon using sudo (required for faster SYN scanning and UDP scanning), you will have to run the above command as the root user (or using sudo).\n\nSimilarly to `pipx`, if installed using `pip` you can run AutoRecon by simply executing `autorecon`.\n\n### Installation Method #3: Manually\n\nIf you'd prefer not to use `pip` or `pipx`, you can always still install and execute `autorecon.py` manually as a script. From within the AutoRecon directory, install the dependencies:\n\n```bash\npython3 -m pip install -r requirements.txt\n```\n\nYou will then be able to run the `autorecon.py` script:\n\n```bash\npython3 autorecon.py [OPTIONS] 127.0.0.1\n```\n\n## Upgrading\n\n### pipx\n\nUpgrading AutoRecon when it has been installed with pipx is the easiest, and is why the method is recommended. Simply run the following command:\n\n```bash\npipx upgrade autorecon\n```\n\n### pip\n\nIf you've installed AutoRecon using pip, you will first have to uninstall AutoRecon and then re-install using the same install command:\n\n```bash\npython3 -m pip uninstall autorecon\npython3 -m pip install git+https://github.com/Tib3rius/AutoRecon.git\n```\n\n### Manually\n\nIf you've installed AutoRecon manually, simply change to the AutoRecon directory and run the following command:\n\n```bash\ngit pull\n```\n\nAssuming you did not modify any of the content in the AutoRecon directory, this should pull the latest code from this GitHub repo, after which you can run AutoRecon using the autorecon.py script as per usual.\n\n### Plugins\n\nA plugin update process is in the works. Until then, after upgrading, remove the ~/.local/share/AutoRecon directory and run AutoRecon with any argument to repopulate with the latest files.\n\n## Usage\n\nAutoRecon uses Python 3 specific functionality and does not support Python 2.\n\n```\nusage: autorecon [-t TARGET_FILE] [-p PORTS] [-m MAX_SCANS] [-mp MAX_PORT_SCANS] [-c CONFIG_FILE] [-g GLOBAL_FILE] [--tags TAGS]\n                 [--exclude-tags TAGS] [--port-scans PLUGINS] [--service-scans PLUGINS] [--reports PLUGINS] [--plugins-dir PLUGINS_DIR]\n                 [--add-plugins-dir PLUGINS_DIR] [-l [TYPE]] [-o OUTPUT] [--single-target] [--only-scans-dir] [--no-port-dirs]\n                 [--heartbeat HEARTBEAT] [--timeout TIMEOUT] [--target-timeout TARGET_TIMEOUT] [--nmap NMAP | --nmap-append NMAP_APPEND]\n                 [--proxychains] [--disable-sanity-checks] [--disable-keyboard-control] [--force-services SERVICE [SERVICE ...]] [--accessible]\n                 [-v] [--version] [--curl.path VALUE] [--dirbuster.tool {feroxbuster,gobuster,dirsearch,ffuf,dirb}]\n                 [--dirbuster.wordlist VALUE [VALUE ...]] [--dirbuster.threads VALUE] [--dirbuster.ext VALUE]\n                 [--onesixtyone.community-strings VALUE] [--global.username-wordlist VALUE] [--global.password-wordlist VALUE]\n                 [--global.domain VALUE] [-h]\n                 [targets ...]\n\nNetwork reconnaissance tool to port scan and automatically enumerate services found on multiple targets.\n\npositional arguments:\n  targets               IP addresses (e.g. 10.0.0.1), CIDR notation (e.g. 10.0.0.1/24), or resolvable hostnames (e.g. foo.bar) to scan.\n\noptional arguments:\n  -t TARGET_FILE, --target-file TARGET_FILE\n                        Read targets from file.\n  -p PORTS, --ports PORTS\n                        Comma separated list of ports / port ranges to scan. Specify TCP/UDP ports by prepending list with T:/U: To scan both\n                        TCP/UDP, put port(s) at start or specify B: e.g. 53,T:21-25,80,U:123,B:123. Default: None\n  -m MAX_SCANS, --max-scans MAX_SCANS\n                        The maximum number of concurrent scans to run. Default: 50\n  -mp MAX_PORT_SCANS, --max-port-scans MAX_PORT_SCANS\n                        The maximum number of concurrent port scans to run. Default: 10 (approx 20% of max-scans unless specified)\n  -c CONFIG_FILE, --config CONFIG_FILE\n                        Location of AutoRecon's config file. Default: ~/.config/AutoRecon/config.toml\n  -g GLOBAL_FILE, --global-file GLOBAL_FILE\n                        Location of AutoRecon's global file. Default: ~/.config/AutoRecon/global.toml\n  --tags TAGS           Tags to determine which plugins should be included. Separate tags by a plus symbol (+) to group tags together. Separate\n                        groups with a comma (,) to create multiple groups. For a plugin to be included, it must have all the tags specified in\n                        at least one group. Default: default\n  --exclude-tags TAGS   Tags to determine which plugins should be excluded. Separate tags by a plus symbol (+) to group tags together. Separate\n                        groups with a comma (,) to create multiple groups. For a plugin to be excluded, it must have all the tags specified in\n                        at least one group. Default: None\n  --port-scans PLUGINS  Override --tags / --exclude-tags for the listed PortScan plugins (comma separated). Default: None\n  --service-scans PLUGINS\n                        Override --tags / --exclude-tags for the listed ServiceScan plugins (comma separated). Default: None\n  --reports PLUGINS     Override --tags / --exclude-tags for the listed Report plugins (comma separated). Default: None\n  --plugins-dir PLUGINS_DIR\n                        The location of the plugins directory. Default: ~/.local/share/AutoRecon/plugins\n  --add-plugins-dir PLUGINS_DIR\n                        The location of an additional plugins directory to add to the main one. Default: None\n  -l [TYPE], --list [TYPE]\n                        List all plugins or plugins of a specific type. e.g. --list, --list port, --list service\n  -o OUTPUT, --output OUTPUT\n                        The output directory for results. Default: results\n  --single-target       Only scan a single target. A directory named after the target will not be created. Instead, the directory structure will\n                        be created within the output directory. Default: False\n  --only-scans-dir      Only create the \"scans\" directory for results. Other directories (e.g. exploit, loot, report) will not be created.\n                        Default: False\n  --no-port-dirs        Don't create directories for ports (e.g. scans/tcp80, scans/udp53). Instead store all results in the \"scans\" directory\n                        itself. Default: False\n  --heartbeat HEARTBEAT\n                        Specifies the heartbeat interval (in seconds) for scan status messages. Default: 60\n  --timeout TIMEOUT     Specifies the maximum amount of time in minutes that AutoRecon should run for. Default: None\n  --target-timeout TARGET_TIMEOUT\n                        Specifies the maximum amount of time in minutes that a target should be scanned for before abandoning it and moving on.\n                        Default: None\n  --nmap NMAP           Override the {nmap_extra} variable in scans. Default: -vv --reason -Pn -T4\n  --nmap-append NMAP_APPEND\n                        Append to the default {nmap_extra} variable in scans. Default:\n  --proxychains         Use if you are running AutoRecon via proxychains. Default: False\n  --disable-sanity-checks\n                        Disable sanity checks that would otherwise prevent the scans from running. Default: False\n  --disable-keyboard-control\n                        Disables keyboard control ([s]tatus, Up, Down) if you are in SSH or Docker.\n  --force-services SERVICE [SERVICE ...]\n                        A space separated list of services in the following style: tcp/80/http tcp/443/https/secure\n  --accessible          Attempts to make AutoRecon output more accessible to screenreaders. Default: False\n  -v, --verbose         Enable verbose output. Repeat for more verbosity.\n  --version             Prints the AutoRecon version and exits.\n  -h, --help            Show this help message and exit.\n\nplugin arguments:\n  These are optional arguments for certain plugins.\n\n  --curl.path VALUE     The path on the web server to curl. Default: /\n  --dirbuster.tool {feroxbuster,gobuster,dirsearch,ffuf,dirb}\n                        The tool to use for directory busting. Default: feroxbuster\n  --dirbuster.wordlist VALUE [VALUE ...]\n                        The wordlist(s) to use when directory busting. Separate multiple wordlists with spaces. Default:\n                        ['~/.local/share/AutoRecon/wordlists/dirbuster.txt']\n  --dirbuster.threads VALUE\n                        The number of threads to use when directory busting. Default: 10\n  --dirbuster.ext VALUE\n                        The extensions you wish to fuzz (no dot, comma separated). Default: txt,html,php,asp,aspx,jsp\n  --onesixtyone.community-strings VALUE\n                        The file containing a list of community strings to try. Default: /usr/share/seclists/Discovery/SNMP/common-snmp-\n                        community-strings-onesixtyone.txt\n\nglobal plugin arguments:\n  These are optional arguments that can be used by all plugins.\n\n  --global.username-wordlist VALUE\n                        A wordlist of usernames, useful for bruteforcing. Default: /usr/share/seclists/Usernames/top-usernames-shortlist.txt\n  --global.password-wordlist VALUE\n                        A wordlist of passwords, useful for bruteforcing. Default: /usr/share/seclists/Passwords/darkweb2017-top100.txt\n  --global.domain VALUE\n                        The domain to use (if known). Used for DNS and/or Active Directory. Default: None\n```\n\n### Verbosity\n\nAutoRecon supports four levels of verbosity:\n\n* (none) Minimal output. AutoRecon will announce when scanning targets starts / ends.\n* (-v) Verbose output. AutoRecon will additionally announce when plugins start running, and report open ports and identified services.\n* (-vv) Very verbose output. AutoRecon will additionally specify the exact commands which are being run by plugins, highlight any patterns which are matched in command output, and announce when plugins end.\n* (-vvv) Very, very verbose output. AutoRecon will output everything. Literally every line from all commands which are currently running. When scanning multiple targets concurrently, this can lead to a ridiculous amount of output. It is not advised to use -vvv unless you absolutely need to see live output from commands.\n\nNote: You can change the verbosity of AutoRecon mid-scan by pressing the up and down arrow keys.\n\n### Results\n\nBy default, results will be stored in the ./results directory. A new sub directory is created for every target. The structure of this sub directory is:\n\n```\n.\n├── exploit/\n├── loot/\n├── report/\n│   ├── local.txt\n│   ├── notes.txt\n│   ├── proof.txt\n│   └── screenshots/\n└── scans/\n\t├── _commands.log\n\t├── _manual_commands.txt\n\t├── tcp80/\n\t├── udp53/\n\t└── xml/\n```\n\nThe exploit directory is intended to contain any exploit code you download / write for the target.\n\nThe loot directory is intended to contain any loot (e.g. hashes, interesting files) you find on the target.\n\nThe report directory contains some auto-generated files and directories that are useful for reporting:\n* local.txt can be used to store the local.txt flag found on targets.\n* notes.txt should contain a basic template where you can write notes for each service discovered.\n* proof.txt can be used to store the proof.txt flag found on targets.\n* The screenshots directory is intended to contain the screenshots you use to document the exploitation of the target.\n\nThe scans directory is where all results from scans performed by AutoRecon will go. This includes port scans / service detection scans, as well as any service enumeration scans. It also contains two other files:\n* \\_commands.log contains a list of every command AutoRecon ran against the target. This is useful if one of the commands fails and you want to run it again with modifications.\n* \\_manual_commands.txt contains any commands that are deemed \"too dangerous\" to run automatically, either because they are too intrusive, require modification based on human analysis, or just work better when there is a human monitoring them.\n\nBy default, directories are created for each open port (e.g. tcp80, udp53) and scan results for the services found on those ports are stored in their respective directories. You can disable this behavior using the --no-port-dirs command line option, and scan results will instead be stored in the scans directory itself.\n\nIf a scan results in an error, a file called \\_errors.log will also appear in the scans directory with some details to alert the user.\n\nIf output matches a defined pattern, a file called \\_patterns.log will also appear in the scans directory with details about the matched output.\n\nThe scans/xml directory stores any XML output (e.g. from Nmap scans) separately from the main scan outputs, so that the scans directory itself does not get too cluttered.\n\n## Testimonials\n\n> AutoRecon was invaluable during my OSCP exam, in that it saved me from the tedium of executing my active information gathering commands myself.  I was able to start on a target with all of the information I needed clearly laid in front of me.  I would strongly recommend this utility for anyone in the PWK labs, the OSCP exam, or other environments such as VulnHub or HTB.  It is a great tool for both people just starting down their journey into OffSec and seasoned veterans alike.  Just make sure that somewhere between those two points you take the time to learn what's going on \"under the hood\" and how / why it scans what it does.\n>\n>\\- b0ats (rooted 5/5 exam hosts)\n\n> Wow, what a great find! Before using AutoRecon, ReconScan was my goto enumeration script for targets because it automatically ran the enumeration commands after it finds open ports. The only thing missing was the automatic creation of key directories a pentester might need during an engagement (exploit, loot, report, scans). Reconnoitre did this but didn't automatically run those commands for you. I thought ReconScan that was the bee's knees until I gave AutoRecon a try. It's awesome! It combines the best features of Reconnoitre (auto directory creation) and ReconScan (automatically executing the enumeration commands). All I have to do is run it on a target or a set of targets and start going over the information it has already collected while it continues the rest of scan. The proof is in the pudding :) Passed the OSCP exam! Kudos to Tib3rius!\n>\n>\\- werk0ut\n\n> A friend told me about AutoRecon, so I gave it a try in the PWK labs. AutoRecon launches the common tools we all always use, whether it be nmap or nikto, and also creates a nice subfolder system based on the targets you are attacking. The strongest feature of AutoRecon is the speed; on the OSCP exam I left the tool running in the background while I started with another target, and in a matter of minutes I had all of the AutoRecon output waiting for me. AutoRecon creates a file full of commands that you should try manually, some of which may require tweaking (for example, hydra bruteforcing commands). It's good to have that extra checklist.\n>\n>\\- tr3mb0 (rooted 4/5 exam hosts)\n\n> Being introduced to AutoRecon was a complete game changer for me while taking the OSCP and establishing my penetration testing methodology. AutoRecon is a multi-threaded reconnaissance tool that combines and automates popular enumeration tools to do most of the hard work for you. You can't get much better than that! After running AutoRecon on my OSCP exam hosts, I was given a treasure chest full of information that helped me to start on each host and pass on my first try. The best part of the tool is that it automatically launches further enumeration scans based on the initial port scans (e.g. run enum4linux if SMB is detected). The only bad part is that I did not use this tool sooner! Thanks Tib3rius.\n>\n>\\- rufy (rooted 4/5 exam hosts)\n\n> AutoRecon allows a security researcher to iteratively scan hosts and identify potential attack vectors. Its true power comes in the form of performing scans in the background while the attacker is working on another host. I was able to start my scans and finish a specific host I was working on - and then return to find all relevant scans completed. I was then able to immediately begin trying to gain initial access instead of manually performing the active scanning process. I will continue to use AutoRecon in future penetration tests and CTFs, and highly recommend you do the same.\n>\n>\\- waar (rooted 4.99/5 exam hosts)\n\n> \"If you have to do a task more than twice a day, you need to automate it.\" That's a piece of advice that an old boss gave to me. AutoRecon takes that lesson to heart. Whether you're sitting in the exam, or in the PWK labs, you can fire off AutoRecon and let it work its magic. I had it running during my last exam while I worked on the buffer overflow. By the time I finished, all the enum data I needed was there for me to go through. 10/10 would recommend for anyone getting into CTF, and anyone who has been at this a long time.\n>\n>\\- whoisflynn\n\n> I love this tool so much I wrote it.\n>\n>\\- Tib3rius (rooted 5/5 exam hosts)\n\n> I highly recommend anyone going for their OSCP, doing CTFs or on HTB to checkout this tool. Been using AutoRecon on HTB for a month before using it over on the PWK labs and it helped me pass my OSCP exam. If you're having a hard time getting settled with an enumeration methodology I encourage you to follow the flow and techniques this script uses. It takes out a lot of the tedious work that you're probably used to while at the same time provide well-organized subdirectories to quickly look over so you don't lose your head. The manual commands it provides are great for those specific situations that need it when you have run out of options. It's a very valuable tool, cannot recommend enough.\n>\n>\\- d0hnuts (rooted 5/5 exam hosts)\n\n> Autorecon is not just any other tool, it is a recon correlation framweork for engagements. This helped me fire a whole bunch of scans while I was working on other targets. This can help a lot in time management. This assisted me to own 4/5 boxes in pwk exam! Result: Passed!\n>\n>\\- Wh0ami (rooted 4/5 exam hosts)\n\n> The first time I heard of AutoRecon I asked whether I actually needed this, my enumeration was OK... I tried it with an open mind and straight away was a little floored on the amount of information that it would generate. Once I got used to it, and started reading the output I realized how much I was missing.  I used it for the OSCP exam, and it found things I would never have otherwise found. I firmly believe, without AutoRecon I would have failed. It's a great tool, and I'm very impressed what Tib3rius was able to craft up. Definitely something I'm already recommending to others, including you!\n>\n>\\- othornew\n\n> AutoRecon helped me save valuable time in my OSCP exam, allowing me to spend less time scanning systems and more time breaking into them. This software is worth its weight in gold!\n>\n>\\- TorHackr\n\n> The magical tool that made enumeration a piece of cake, just fire it up and watch the beauty of multi-threading spitting a ton of information that would have taken loads of commands to execute. I certainly believe that by just using AutoRecon in the OSCP exam, half of the effort would already be done. Strongly recommended!\n>\n>\\- Arman (solved 4.5/5 exam hosts)\n"
        },
        {
          "name": "autorecon.py",
          "type": "blob",
          "size": 0.0859375,
          "content": "#!/usr/bin/python3\n\nfrom autorecon.main import main\n\nif __name__ == '__main__':\n\tmain()\n"
        },
        {
          "name": "autorecon",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.6259765625,
          "content": "[tool.poetry]\nname = \"autorecon\"\nversion = \"2.0.35\"\ndescription = \"A multi-threaded network reconnaissance tool which performs automated enumeration of services.\"\nauthors = [\"Tib3rius\"]\nlicense = \"GNU GPL v3\"\nexclude = [\"autorecon.py\"]\npackages = [\n\t{ include = \"autorecon\" },\n]\n\n[tool.poetry.dependencies]\npython = \"^3.8\"\nappdirs = \"^1.4.4\"\ncolorama = \"^0.4.5\"\nimpacket = \"^0.10.0\"\npsutil = \"^5.9.4\"\nrequests = \"^2.28.1\"\ntoml = \"^0.10.2\"\nUnidecode = \"^1.3.1\"\n\n[tool.poetry.dev-dependencies]\n\n[tool.poetry.scripts]\nautorecon = \"autorecon.main:main\"\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.10546875,
          "content": "appdirs>=1.4.4\ncolorama>=0.4.5\nimpacket>=0.10.0\npsutil>=5.9.4\nrequests>=2.28.1\ntoml>=0.10.2\nUnidecode>=1.3.1"
        }
      ]
    }
  ]
}