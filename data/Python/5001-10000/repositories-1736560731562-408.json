{
  "metadata": {
    "timestamp": 1736560731562,
    "page": 408,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "docker/docker-py",
      "stars": 6879,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.115234375,
          "content": "[run]\nbranch = True\nsource = docker\n\n[report]\nexclude_lines =\n    if __name__ == .__main__.:\n\n[html]\ndirectory = html\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1181640625,
          "content": ".git/\n\nbuild\ndist\n*.egg-info\n*.egg/\n*.pyc\n*.swp\n\n.tox\n.coverage\nhtml/*\n__pycache__\n\n# Compiled Documentation\ndocs/_build\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.203125,
          "content": "root = true\n\n[*]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nmax_line_length = 80\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.{yaml,yml}]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16015625,
          "content": "build\ndist\n*.egg-info\n*.egg/\n*.pyc\n*.swp\n\n.tox\n.coverage\nhtml/*\n\n# Compiled Documentation\n_build/\nREADME.rst\n\n# setuptools_scm\n_version.py\n\nenv/\nvenv/\n.idea/\n*.iml\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.20703125,
          "content": "version: 2\n\nsphinx:\n  configuration: docs/conf.py\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: '3.12'\n\npython:\n  install:\n    - method: pip\n      path: .\n      extra_requirements:\n        - ssh\n        - docs\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.623046875,
          "content": "# Contributing guidelines\n\nSee the [Docker contributing guidelines](https://github.com/docker/docker/blob/master/CONTRIBUTING.md).\nThe following is specific to Docker SDK for Python.\n\nThank you for your interest in the project. We look forward to your\ncontribution. In order to make the process as fast and streamlined as possible,\nhere is a set of guidelines we recommend you follow.\n\n## Reporting issues\n\nWe do our best to ensure bugs don't creep up in our releases, but some may\nstill slip through. If you encounter one while using the SDK, please\ncreate an issue\n[in the tracker](https://github.com/docker/docker-py/issues/new) with\nthe following information:\n\n- SDK version, Docker version and python version\n```\npip freeze | grep docker && python --version && docker version\n```\n- OS, distribution and OS version\n- The issue you're encountering including a stacktrace if applicable\n- If possible, steps or a code snippet to reproduce the issue\n\nTo save yourself time, please be sure to check our\n[documentation](https://docker-py.readthedocs.io/) and use the\n[search function](https://github.com/docker/docker-py/search) to find\nout if it has already been addressed, or is currently being looked at.\n\n## Submitting pull requests\n\nDo you have a fix for an existing issue, or want to add a new functionality\nto the SDK? We happily welcome pull requests. Here are a few tips to\nmake the review process easier on both the maintainers and yourself.\n\n### 1. Sign your commits\n\nPlease refer to the [\"Sign your work\"](https://github.com/docker/docker/blob/master/CONTRIBUTING.md#sign-your-work)\nparagraph in the Docker contribution guidelines.\n\n### 2. Make sure tests pass\n\nBefore we can review your pull request, please ensure that nothing has been\nbroken by your changes by running the test suite. You can do so simply by\nrunning `make test` in the project root. This also includes coding style using\n`ruff`\n\n### 3. Write clear, self-contained commits\n\nYour commit message should be concise and describe the nature of the change.\nThe commit itself should make sense in isolation from the others in your PR.\nSpecifically, one should be able to review your commit separately from the\ncontext.\n\n### 4. Rebase proactively\n\nIt's much easier to review a pull request that is up to date against the\ncurrent master branch.\n\n### 5. Notify thread subscribers when changes are made\n\nGitHub doesn't notify subscribers when new commits happen on a PR, and\nfixes or additions might be missed. Please add a comment to the PR thread\nwhen you push new changes.\n\n### 6. Two maintainers LGTM are required for merging\n\nPlease wait for review and approval of two maintainers, and respond to their\ncomments and suggestions during review.\n\n### 7. Add tests\n\nWhether you're adding new functionality to the project or fixing a bug, please\nadd relevant tests to ensure the code you added continues to work as the\nproject evolves.\n\n### 8. Add docs\n\nThis usually applies to new features rather than bug fixes, but new behavior\nshould always be documented.\n\n### 9. Ask questions\n\nIf you're ever confused about something pertaining to the project, feel free\nto reach out and ask questions. We will do our best to answer and help out.\n\n\n## Development environment\n\nIf you're looking contribute to Docker SDK for Python but are new to the\nproject or Python, here are the steps to get you started.\n\n1. Fork https://github.com/docker/docker-py to your username.\n2. Clone your forked repository locally with\n  `git clone git@github.com:yourusername/docker-py.git`.\n3. Configure a\n  [remote](https://help.github.com/articles/configuring-a-remote-for-a-fork/)\n  for your fork so that you can\n  [sync changes you make](https://help.github.com/articles/syncing-a-fork/)\n  with the original repository.\n4. Enter the local directory `cd docker-py`.\n5. Run `python setup.py develop` to install the dev version of the project\n  and required dependencies. We recommend you do so inside a\n  [virtual environment](http://docs.python-guide.org/en/latest/dev/virtualenvs)\n\n## Running the tests & Code Quality\n\nTo get the source source code and run the unit tests, run:\n```\n$ git clone git://github.com/docker/docker-py.git\n$ cd docker-py\n$ make test\n```\n\n## Building the docs\n\n```\n$ make docs\n$ open _build/index.html\n```\n\n## Release Checklist\n\nBefore a new release, please go through the following checklist:\n\n* Bump version in docker/version.py\n* Add a release note in docs/change_log.md\n* Git tag the version\n* Upload to pypi\n\n## Vulnerability Reporting\nFor any security issues, please do NOT file an issue or pull request on github!\nPlease contact [security@docker.com](mailto:security@docker.com) or read [the\nDocker security page](https://www.docker.com/resources/security/).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.26953125,
          "content": "# syntax=docker/dockerfile:1\n\nARG PYTHON_VERSION=3.12\nFROM python:${PYTHON_VERSION}\n\nWORKDIR /src\nCOPY . .\n\nARG VERSION=0.0.0.dev0\nRUN --mount=type=cache,target=/cache/pip \\\n    PIP_CACHE_DIR=/cache/pip \\\n    SETUPTOOLS_SCM_PRETEND_VERSION=${VERSION} \\\n    pip install .[ssh]\n"
        },
        {
          "name": "Dockerfile-docs",
          "type": "blob",
          "size": 0.390625,
          "content": "# syntax=docker/dockerfile:1\n\nARG PYTHON_VERSION=3.12\n\nFROM python:${PYTHON_VERSION}\n\nARG uid=1000\nARG gid=1000\n\nRUN addgroup --gid $gid sphinx \\\n && useradd --uid $uid --gid $gid -M sphinx\n\nWORKDIR /src\nCOPY . .\n\nARG VERSION=0.0.0.dev0\nRUN --mount=type=cache,target=/cache/pip \\\n    PIP_CACHE_DIR=/cache/pip \\\n    SETUPTOOLS_SCM_PRETEND_VERSION=${VERSION} \\\n    pip install .[ssh,docs]\n\nUSER sphinx\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.505859375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2016 Docker, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 1.7919921875,
          "content": "# Docker SDK for Python maintainers file\n#\n# This file describes who runs the docker/docker-py project and how.\n# This is a living document - if you see something out of date or missing, speak up!\n#\n# It is structured to be consumable by both humans and programs.\n# To extract its contents programmatically, use any TOML-compliant parser.\n#\n# This file is compiled into the MAINTAINERS file in docker/opensource.\n#\n[Org]\n\t[Org.\"Core maintainers\"]\n\t\tpeople = [\n\t\t    \"glours\",\n\t\t    \"milas\",\n\t\t]\n\t[Org.Alumni]\n\t\tpeople = [\n\t\t    \"aiordache\",\n\t\t\t\"aanand\",\n\t\t\t\"bfirsh\",\n\t\t\t\"dnephin\",\n\t\t\t\"mnowster\",\n\t\t\t\"mpetazzoni\",\n\t\t\t\"shin-\",\n\t\t\t\"ulyssessouza\",\n\t\t]\n\n[people]\n\n# A reference list of all people associated with the project.\n# All other sections should refer to people by their canonical key\n# in the people section.\n\n\t# ADD YOURSELF HERE IN ALPHABETICAL ORDER\n\n\t[people.aanand]\n\tName = \"Aanand Prasad\"\n\tEmail = \"aanand@docker.com\"\n\tGitHub = \"aanand\"\n\n\t[people.aiordache]\n\tName = \"Anca Iordache\"\n\tEmail = \"anca.iordache@docker.com\"\n\tGitHub = \"aiordache\"\n\n\t[people.bfirsh]\n\tName = \"Ben Firshman\"\n\tEmail = \"b@fir.sh\"\n\tGitHub = \"bfirsh\"\n\n\t[people.dnephin]\n\tName = \"Daniel Nephin\"\n\tEmail = \"dnephin@gmail.com\"\n\tGitHub = \"dnephin\"\n\n\t[people.glours]\n\tName = \"Guillaume Lours\"\n\tEmail = \"705411+glours@users.noreply.github.com\"\n\tGitHub = \"glours\"\n\n\t[people.milas]\n\tName = \"Milas Bowman\"\n\tEmail = \"devnull@milas.dev\"\n\tGitHub = \"milas\"\n\n\t[people.mnowster]\n\tName = \"Mazz Mosley\"\n\tEmail = \"mazz@houseofmnowster.com\"\n\tGitHub = \"mnowster\"\n\n\t[people.mpetazzoni]\n\tName = \"Maxime Petazzoni\"\n\tEmail = \"maxime.petazzoni@bulix.org\"\n\tGitHub = \"mpetazzoni\"\n\n\t[people.shin-]\n\tName = \"Joffrey F\"\n\tEmail = \"joffrey@docker.com\"\n\tGitHub = \"shin-\"\n\n\t[people.ulyssessouza]\n\tName = \"Ulysses Domiciano Souza\"\n\tEmail = \"ulysses.souza@docker.com\"\n\tGitHub = \"ulyssessouza\"\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.8525390625,
          "content": "TEST_API_VERSION ?= 1.45\nTEST_ENGINE_VERSION ?= 26.1\n\nifeq ($(OS),Windows_NT)\n    PLATFORM := Windows\nelse\n    PLATFORM := $(shell sh -c 'uname -s 2>/dev/null || echo Unknown')\nendif\n\nifeq ($(PLATFORM),Linux)\n\tuid_args := \"--build-arg uid=$(shell id -u) --build-arg gid=$(shell id -g)\"\nendif\n\nSETUPTOOLS_SCM_PRETEND_VERSION_DOCKER ?= $(shell git describe --match '[0-9]*' --dirty='.m' --always --tags 2>/dev/null | sed -r 's/-([0-9]+)/.dev\\1/' | sed 's/-/+/')\nifeq ($(SETUPTOOLS_SCM_PRETEND_VERSION_DOCKER),)\n\tSETUPTOOLS_SCM_PRETEND_VERSION_DOCKER = \"0.0.0.dev0\"\nendif\n\n.PHONY: all\nall: test\n\n.PHONY: clean\nclean:\n\t-docker rm -f dpy-dind dpy-dind-certs dpy-dind-ssl\n\tfind -name \"__pycache__\" | xargs rm -rf\n\n.PHONY: build-dind-ssh\nbuild-dind-ssh:\n\tdocker build \\\n\t\t--pull \\\n\t\t-t docker-dind-ssh \\\n\t\t-f tests/Dockerfile-ssh-dind \\\n\t\t--build-arg VERSION=${SETUPTOOLS_SCM_PRETEND_VERSION_DOCKER} \\\n\t\t--build-arg ENGINE_VERSION=${TEST_ENGINE_VERSION} \\\n\t\t--build-arg API_VERSION=${TEST_API_VERSION} \\\n\t\t.\n\n.PHONY: build\nbuild:\n\tdocker build \\\n\t\t--pull \\\n\t\t-t docker-sdk-python3 \\\n\t\t-f tests/Dockerfile \\\n\t\t--build-arg VERSION=${SETUPTOOLS_SCM_PRETEND_VERSION_DOCKER} \\\n\t\t.\n\n.PHONY: build-docs\nbuild-docs:\n\tdocker build \\\n\t\t-t docker-sdk-python-docs \\\n\t\t-f Dockerfile-docs \\\n\t\t--build-arg VERSION=${SETUPTOOLS_SCM_PRETEND_VERSION_DOCKER} \\\n\t\t$(uid_args) \\\n\t\t.\n\n.PHONY: build-dind-certs\nbuild-dind-certs:\n\tdocker build \\\n\t\t-t dpy-dind-certs \\\n\t\t-f tests/Dockerfile-dind-certs \\\n\t\t--build-arg VERSION=${SETUPTOOLS_SCM_PRETEND_VERSION_DOCKER} \\\n\t\t.\n\n.PHONY: test\ntest: ruff unit-test integration-dind integration-dind-ssl\n\n.PHONY: unit-test\nunit-test: build\n\tdocker run -t --rm docker-sdk-python3 py.test tests/unit\n\n.PHONY: integration-test\nintegration-test: build\n\tdocker run -t --rm -v /var/run/docker.sock:/var/run/docker.sock docker-sdk-python3 py.test -v tests/integration/${file}\n\n.PHONY: setup-network\nsetup-network:\n\tdocker network inspect dpy-tests || docker network create dpy-tests\n\n.PHONY: integration-dind\nintegration-dind: build setup-network\n\tdocker rm -vf dpy-dind || :\n\n\tdocker run \\\n\t\t--detach \\\n\t\t--name dpy-dind \\\n\t\t--network dpy-tests \\\n\t\t--pull=always \\\n\t\t--privileged \\\n\t\tdocker:${TEST_ENGINE_VERSION}-dind \\\n\t\tdockerd -H tcp://0.0.0.0:2375 --experimental\n\n\t# Wait for Docker-in-Docker to come to life\n\tdocker run \\\n\t\t--network dpy-tests \\\n\t\t--rm \\\n\t\t--tty \\\n\t\tbusybox \\\n\t\tsh -c 'while ! nc -z dpy-dind 2375; do sleep 1; done'\n\n\tdocker run \\\n\t\t--env=\"DOCKER_HOST=tcp://dpy-dind:2375\" \\\n\t\t--env=\"DOCKER_TEST_API_VERSION=${TEST_API_VERSION}\" \\\n\t\t--network dpy-tests \\\n\t\t--rm \\\n\t\t--tty \\\n\t\tdocker-sdk-python3 \\\n\t\tpy.test tests/integration/${file}\n\n\tdocker rm -vf dpy-dind\n\n\n.PHONY: integration-dind-ssh\nintegration-dind-ssh: build-dind-ssh build setup-network\n\tdocker rm -vf dpy-dind-ssh || :\n\tdocker run -d --network dpy-tests --name dpy-dind-ssh --privileged \\\n\t\tdocker-dind-ssh dockerd --experimental\n\t# start SSH daemon for known key\n\tdocker exec dpy-dind-ssh sh -c \"/usr/sbin/sshd -h /etc/ssh/known_ed25519 -p 22\"\n\tdocker exec dpy-dind-ssh sh -c \"/usr/sbin/sshd -h /etc/ssh/unknown_ed25519 -p 2222\"\n\tdocker run \\\n\t\t--tty \\\n\t\t--rm \\\n\t\t--env=\"DOCKER_HOST=ssh://dpy-dind-ssh\" \\\n\t\t--env=\"DOCKER_TEST_API_VERSION=${TEST_API_VERSION}\" \\\n\t\t--env=\"UNKNOWN_DOCKER_SSH_HOST=ssh://dpy-dind-ssh:2222\" \\\n\t\t--network dpy-tests \\\n\t\tdocker-sdk-python3 py.test tests/ssh/${file}\n\tdocker rm -vf dpy-dind-ssh\n\n\n.PHONY: integration-dind-ssl\nintegration-dind-ssl: build-dind-certs build setup-network\n\tdocker rm -vf dpy-dind-certs dpy-dind-ssl || :\n\tdocker run -d --name dpy-dind-certs dpy-dind-certs\n\n\tdocker run \\\n\t\t--detach \\\n\t\t--env=\"DOCKER_CERT_PATH=/certs\" \\\n\t\t--env=\"DOCKER_HOST=tcp://localhost:2375\" \\\n\t\t--env=\"DOCKER_TLS_VERIFY=1\" \\\n\t\t--name dpy-dind-ssl \\\n\t\t--network dpy-tests \\\n\t\t--network-alias docker \\\n\t\t--pull=always \\\n\t\t--privileged \\\n\t\t--volume /tmp \\\n\t\t--volumes-from dpy-dind-certs \\\n\t\tdocker:${TEST_ENGINE_VERSION}-dind \\\n\t\tdockerd \\\n\t\t\t--tlsverify \\\n\t\t\t--tlscacert=/certs/ca.pem \\\n\t\t\t--tlscert=/certs/server-cert.pem \\\n\t\t\t--tlskey=/certs/server-key.pem \\\n\t\t\t-H tcp://0.0.0.0:2375 \\\n\t\t\t--experimental\n\n\t# Wait for Docker-in-Docker to come to life\n\tdocker run \\\n\t\t--network dpy-tests \\\n\t\t--rm \\\n\t\t--tty \\\n\t\tbusybox \\\n\t\tsh -c 'while ! nc -z dpy-dind-ssl 2375; do sleep 1; done'\n\n\tdocker run \\\n\t\t--env=\"DOCKER_CERT_PATH=/certs\" \\\n\t\t--env=\"DOCKER_HOST=tcp://docker:2375\" \\\n\t\t--env=\"DOCKER_TEST_API_VERSION=${TEST_API_VERSION}\" \\\n\t\t--env=\"DOCKER_TLS_VERIFY=1\" \\\n\t\t--network dpy-tests \\\n\t\t--rm \\\n\t\t--volumes-from dpy-dind-ssl \\\n\t\t--tty \\\n\t\tdocker-sdk-python3 \\\n\t\tpy.test tests/integration/${file}\n\n\tdocker rm -vf dpy-dind-ssl dpy-dind-certs\n\n.PHONY: ruff\nruff: build\n\tdocker run -t --rm docker-sdk-python3 ruff docker tests\n\n.PHONY: docs\ndocs: build-docs\n\tdocker run --rm -t -v `pwd`:/src docker-sdk-python-docs sphinx-build docs docs/_build\n\n.PHONY: shell\nshell: build\n\tdocker run -it -v /var/run/docker.sock:/var/run/docker.sock docker-sdk-python3 python\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.802734375,
          "content": "# Docker SDK for Python\n\n[![Build Status](https://github.com/docker/docker-py/actions/workflows/ci.yml/badge.svg)](https://github.com/docker/docker-py/actions/workflows/ci.yml)\n\nA Python library for the Docker Engine API. It lets you do anything the `docker` command does, but from within Python apps – run containers, manage containers, manage Swarms, etc.\n\n## Installation\n\nThe latest stable version [is available on PyPI](https://pypi.python.org/pypi/docker/). Install with pip:\n\n    pip install docker\n\n> Older versions (< 6.0) required installing `docker[tls]` for SSL/TLS support.\n> This is no longer necessary and is a no-op, but is supported for backwards compatibility.\n\n## Usage\n\nConnect to Docker using the default socket or the configuration in your environment:\n\n```python\nimport docker\nclient = docker.from_env()\n```\n\nYou can run containers:\n\n```python\n>>> client.containers.run(\"ubuntu:latest\", \"echo hello world\")\n'hello world\\n'\n```\n\nYou can run containers in the background:\n\n```python\n>>> client.containers.run(\"bfirsh/reticulate-splines\", detach=True)\n<Container '45e6d2de7c54'>\n```\n\nYou can manage containers:\n\n```python\n>>> client.containers.list()\n[<Container '45e6d2de7c54'>, <Container 'db18e4f20eaa'>, ...]\n\n>>> container = client.containers.get('45e6d2de7c54')\n\n>>> container.attrs['Config']['Image']\n\"bfirsh/reticulate-splines\"\n\n>>> container.logs()\n\"Reticulating spline 1...\\n\"\n\n>>> container.stop()\n```\n\nYou can stream logs:\n\n```python\n>>> for line in container.logs(stream=True):\n...   print(line.strip())\nReticulating spline 2...\nReticulating spline 3...\n...\n```\n\nYou can manage images:\n\n```python\n>>> client.images.pull('nginx')\n<Image 'nginx'>\n\n>>> client.images.list()\n[<Image 'ubuntu'>, <Image 'nginx'>, ...]\n```\n\n[Read the full documentation](https://docker-py.readthedocs.io) to see everything you can do.\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.6845703125,
          "content": "[build-system]\nrequires = [\"hatchling\", \"hatch-vcs\"]\nbuild-backend = \"hatchling.build\"\n\n[project]\nname = \"docker\"\ndynamic = [\"version\"]\ndescription = \"A Python library for the Docker Engine API.\"\nreadme = \"README.md\"\nlicense = \"Apache-2.0\"\nrequires-python = \">=3.8\"\nmaintainers = [\n    { name = \"Docker Inc.\", email = \"no-reply@docker.com\" },\n]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Other Environment\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Topic :: Software Development\",\n    \"Topic :: Utilities\",\n]\n\ndependencies = [\n    \"requests >= 2.26.0\",\n    \"urllib3 >= 1.26.0\",\n    \"pywin32>=304; sys_platform == \\\"win32\\\"\",\n]\n\n[project.optional-dependencies]\n# ssh feature allows DOCKER_HOST=ssh://... style connections\nssh = [\n    \"paramiko>=2.4.3\",\n]\n# tls is always supported, the feature is a no-op for backwards compatibility\ntls = []\n# websockets can be used as an alternate container attach mechanism but\n# by default docker-py hijacks the TCP connection and does not use Websockets\n# unless attach_socket(container, ws=True) is called\nwebsockets = [\n    \"websocket-client >= 1.3.0\",\n]\n# docs are dependencies required to build the ReadTheDocs site\n# this is only needed for CI / working on the docs!\ndocs = [\n    \"myst-parser==0.18.0\",\n    \"Sphinx==5.1.1\",\n\n]\n# dev are dependencies required to test & lint this project\n# this is only needed if you are making code changes to docker-py!\ndev = [\n    \"coverage==7.2.7\",\n    \"pytest==7.4.2\",\n    \"pytest-cov==4.1.0\",\n    \"pytest-timeout==2.1.0\",\n    \"ruff==0.1.8\",\n]\n\n[project.urls]\nChangelog = \"https://docker-py.readthedocs.io/en/stable/change-log.html\"\nDocumentation = \"https://docker-py.readthedocs.io\"\nHomepage = \"https://github.com/docker/docker-py\"\nSource = \"https://github.com/docker/docker-py\"\nTracker = \"https://github.com/docker/docker-py/issues\"\n\n[tool.hatch.version]\nsource = \"vcs\"\n\n[tool.hatch.build.hooks.vcs]\nversion-file = \"docker/_version.py\"\n\n[tool.hatch.build.targets.sdist]\ninclude = [\n    \"/docker\",\n]\n\n[tool.ruff]\ntarget-version = \"py38\"\nextend-select = [\n    \"B\",\n    \"C\",\n    \"F\",\n    \"I\",\n    \"UP\",\n    \"W\",\n]\nignore = [\n    \"UP012\",  # unnecessary `UTF-8` argument (we want to be explicit)\n    \"C901\",  # too complex (there's a whole bunch of these)\n]\n\n[tool.ruff.per-file-ignores]\n\"**/__init__.py\" = [\"F401\"]\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.0849609375,
          "content": "[pytest]\naddopts = --tb=short -rxs\n\njunit_suite_name = docker-py\njunit_family = xunit2\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.2236328125,
          "content": "[tox]\nenvlist = py{37,38,39,310,311,312}, ruff\nskipsdist=True\n\n[testenv]\nusedevelop=True\ncommands =\n    py.test -v --cov=docker {posargs:tests/unit}\nextras = dev\n\n[testenv:ruff]\ncommands = ruff docker tests setup.py\nextras = dev\n"
        }
      ]
    }
  ]
}