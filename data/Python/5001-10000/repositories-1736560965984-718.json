{
  "metadata": {
    "timestamp": 1736560965984,
    "page": 718,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pre-commit/pre-commit-hooks",
      "stars": 5462,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0498046875,
          "content": "*.egg-info\n*.py[co]\n.*.sw[a-z]\n.coverage\n.tox\ndist\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.107421875,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n    -   id: trailing-whitespace\n    -   id: end-of-file-fixer\n    -   id: check-yaml\n    -   id: debug-statements\n    -   id: double-quote-string-fixer\n    -   id: name-tests-test\n    -   id: requirements-txt-fixer\n-   repo: https://github.com/asottile/setup-cfg-fmt\n    rev: v2.7.0\n    hooks:\n    -   id: setup-cfg-fmt\n-   repo: https://github.com/asottile/reorder-python-imports\n    rev: v3.14.0\n    hooks:\n    -   id: reorder-python-imports\n        args: [--py39-plus, --add-import, 'from __future__ import annotations']\n-   repo: https://github.com/asottile/add-trailing-comma\n    rev: v3.1.0\n    hooks:\n    -   id: add-trailing-comma\n-   repo: https://github.com/asottile/pyupgrade\n    rev: v3.19.1\n    hooks:\n    -   id: pyupgrade\n        args: [--py39-plus]\n-   repo: https://github.com/hhatto/autopep8\n    rev: v2.3.1\n    hooks:\n    -   id: autopep8\n-   repo: https://github.com/PyCQA/flake8\n    rev: 7.1.1\n    hooks:\n    -   id: flake8\n-   repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.14.1\n    hooks:\n    -   id: mypy\n"
        },
        {
          "name": ".pre-commit-hooks.yaml",
          "type": "blob",
          "size": 7.33984375,
          "content": "-   id: check-added-large-files\n    name: check for added large files\n    description: prevents giant files from being committed.\n    entry: check-added-large-files\n    language: python\n    stages: [pre-commit, pre-push, manual]\n    minimum_pre_commit_version: 3.2.0\n-   id: check-ast\n    name: check python ast\n    description: simply checks whether the files parse as valid python.\n    entry: check-ast\n    language: python\n    types: [python]\n-   id: check-byte-order-marker\n    name: 'check BOM - deprecated: use fix-byte-order-marker'\n    description: forbids files which have a utf-8 byte-order marker.\n    entry: check-byte-order-marker\n    language: python\n    types: [text]\n-   id: check-builtin-literals\n    name: check builtin type constructor use\n    description: requires literal syntax when initializing empty or zero python builtin types.\n    entry: check-builtin-literals\n    language: python\n    types: [python]\n-   id: check-case-conflict\n    name: check for case conflicts\n    description: checks for files that would conflict in case-insensitive filesystems.\n    entry: check-case-conflict\n    language: python\n-   id: check-docstring-first\n    name: check docstring is first\n    description: checks a common error of defining a docstring after code.\n    entry: check-docstring-first\n    language: python\n    types: [python]\n-   id: check-executables-have-shebangs\n    name: check that executables have shebangs\n    description: ensures that (non-binary) executables have a shebang.\n    entry: check-executables-have-shebangs\n    language: python\n    types: [text, executable]\n    stages: [pre-commit, pre-push, manual]\n    minimum_pre_commit_version: 3.2.0\n-   id: check-illegal-windows-names\n    name: check illegal windows names\n    entry: Illegal Windows filenames detected\n    language: fail\n    files: '(?i)((^|/)(CON|PRN|AUX|NUL|COM[\\d¹²³]|LPT[\\d¹²³])(\\.|/|$)|[<>:\\\"\\\\|?*\\x00-\\x1F]|/[^/]*[\\.\\s]/|[^/]*[\\.\\s]$)'\n-   id: check-json\n    name: check json\n    description: checks json files for parseable syntax.\n    entry: check-json\n    language: python\n    types: [json]\n-   id: check-shebang-scripts-are-executable\n    name: check that scripts with shebangs are executable\n    description: ensures that (non-binary) files with a shebang are executable.\n    entry: check-shebang-scripts-are-executable\n    language: python\n    types: [text]\n    stages: [pre-commit, pre-push, manual]\n    minimum_pre_commit_version: 3.2.0\n-   id: pretty-format-json\n    name: pretty format json\n    description: sets a standard for formatting json files.\n    entry: pretty-format-json\n    language: python\n    types: [json]\n-   id: check-merge-conflict\n    name: check for merge conflicts\n    description: checks for files that contain merge conflict strings.\n    entry: check-merge-conflict\n    language: python\n    types: [text]\n-   id: check-symlinks\n    name: check for broken symlinks\n    description: checks for symlinks which do not point to anything.\n    entry: check-symlinks\n    language: python\n    types: [symlink]\n-   id: check-toml\n    name: check toml\n    description: checks toml files for parseable syntax.\n    entry: check-toml\n    language: python\n    types: [toml]\n-   id: check-vcs-permalinks\n    name: check vcs permalinks\n    description: ensures that links to vcs websites are permalinks.\n    entry: check-vcs-permalinks\n    language: python\n    types: [text]\n-   id: check-xml\n    name: check xml\n    description: checks xml files for parseable syntax.\n    entry: check-xml\n    language: python\n    types: [xml]\n-   id: check-yaml\n    name: check yaml\n    description: checks yaml files for parseable syntax.\n    entry: check-yaml\n    language: python\n    types: [yaml]\n-   id: debug-statements\n    name: debug statements (python)\n    description: checks for debugger imports and py37+ `breakpoint()` calls in python source.\n    entry: debug-statement-hook\n    language: python\n    types: [python]\n-   id: destroyed-symlinks\n    name: detect destroyed symlinks\n    description: detects symlinks which are changed to regular files with a content of a path which that symlink was pointing to.\n    entry: destroyed-symlinks\n    language: python\n    types: [file]\n    stages: [pre-commit, pre-push, manual]\n-   id: detect-aws-credentials\n    name: detect aws credentials\n    description: detects *your* aws credentials from the aws cli credentials file.\n    entry: detect-aws-credentials\n    language: python\n    types: [text]\n-   id: detect-private-key\n    name: detect private key\n    description: detects the presence of private keys.\n    entry: detect-private-key\n    language: python\n    types: [text]\n-   id: double-quote-string-fixer\n    name: fix double quoted strings\n    description: replaces double quoted strings with single quoted strings.\n    entry: double-quote-string-fixer\n    language: python\n    types: [python]\n-   id: end-of-file-fixer\n    name: fix end of files\n    description: ensures that a file is either empty, or ends with one newline.\n    entry: end-of-file-fixer\n    language: python\n    types: [text]\n    stages: [pre-commit, pre-push, manual]\n    minimum_pre_commit_version: 3.2.0\n-   id: file-contents-sorter\n    name: file contents sorter\n    description: sorts the lines in specified files (defaults to alphabetical). you must provide list of target files as input in your .pre-commit-config.yaml file.\n    entry: file-contents-sorter\n    language: python\n    files: '^$'\n-   id: fix-byte-order-marker\n    name: fix utf-8 byte order marker\n    description: removes utf-8 byte order marker.\n    entry: fix-byte-order-marker\n    language: python\n    types: [text]\n-   id: fix-encoding-pragma\n    name: fix python encoding pragma (deprecated)\n    description: 'adds # -*- coding: utf-8 -*- to the top of python files.'\n    language: python\n    entry: fix-encoding-pragma\n    types: [python]\n-   id: forbid-new-submodules\n    name: forbid new submodules\n    description: prevents addition of new git submodules.\n    language: python\n    entry: forbid-new-submodules\n    types: [directory]\n-   id: forbid-submodules\n    name: forbid submodules\n    description: forbids any submodules in the repository\n    language: fail\n    entry: 'submodules are not allowed in this repository:'\n    types: [directory]\n-   id: mixed-line-ending\n    name: mixed line ending\n    description: replaces or checks mixed line ending.\n    entry: mixed-line-ending\n    language: python\n    types: [text]\n-   id: name-tests-test\n    name: python tests naming\n    description: verifies that test files are named correctly.\n    entry: name-tests-test\n    language: python\n    files: (^|/)tests/.+\\.py$\n-   id: no-commit-to-branch\n    name: \"don't commit to branch\"\n    entry: no-commit-to-branch\n    language: python\n    pass_filenames: false\n    always_run: true\n-   id: requirements-txt-fixer\n    name: fix requirements.txt\n    description: sorts entries in requirements.txt.\n    entry: requirements-txt-fixer\n    language: python\n    files: (requirements|constraints).*\\.txt$\n-   id: sort-simple-yaml\n    name: sort simple yaml files\n    description: sorts simple yaml files which consist only of top-level keys, preserving comments and blocks.\n    language: python\n    entry: sort-simple-yaml\n    files: '^$'\n-   id: trailing-whitespace\n    name: trim trailing whitespace\n    description: trims trailing whitespace.\n    entry: trailing-whitespace-fixer\n    language: python\n    types: [text]\n    stages: [pre-commit, pre-push, manual]\n    minimum_pre_commit_version: 3.2.0\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 19.4169921875,
          "content": "5.0.0 - 2024-10-05\n==================\n\n### Features\n- `requirements-txt-fixer`: also remove `pkg_resources==...`.\n    - #850 PR by @ericfrederich.\n    - #1030 issue by @ericfrederich.\n- `check-illegal-windows-names`: new hook!\n    - #1044 PR by @ericfrederich.\n    - #589 issue by @ericfrederich.\n    - #1049 PR by @Jeffrey-Lim.\n- `pretty-format-json`: continue processing even if a file has a json error.\n    - #1039 PR by @amarvin.\n    - #1038 issue by @amarvin.\n\n### Fixes\n- `destroyed-symlinks`: set `stages` to `[pre-commit, pre-push, manual]`\n    - PR #1085 by @AdrianDC.\n\n### Migrating\n- pre-commit-hooks now requires `pre-commit>=3.2.0`.\n- use non-deprecated names for `stages`.\n    - #1093 PR by @asottile.\n\n4.6.0 - 2024-04-06\n==================\n\n### Features\n- `requirements-txt-fixer`: remove duplicate packages.\n    - #1014 PR by @vhoulbreque-withings.\n    - #960 issue @csibe17.\n\n### Migrating\n- `fix-encoding-pragma`: deprecated -- will be removed in 5.0.0.  use\n  [pyupgrade](https://github.com/asottile/pyupgrade) or some other tool.\n    - #1033 PR by @mxr.\n    - #1032 issue by @mxr.\n\n4.5.0 - 2023-10-07\n==================\n\n### Features\n- `requirements-txt-fixer`: also sort `constraints.txt` by default.\n    - #857 PR by @lev-blit.\n    - #830 issue by @PLPeeters.\n- `debug-statements`: add `bpdb` debugger.\n    - #942 PR by @mwip.\n    - #941 issue by @mwip.\n\n### Fixes\n- `file-contents-sorter`: fix sorting an empty file.\n    - #944 PR by @RoelAdriaans.\n    - #935 issue by @paduszyk.\n- `double-quote-string-fixer`: don't rewrite inside f-strings in 3.12+.\n    - #973 PR by @asottile.\n    - #971 issue by @XuehaiPan.\n\n## Migrating\n- now requires python >= 3.8.\n    - #926 PR by @asottile.\n    - #927 PR by @asottile.\n\n4.4.0 - 2022-11-23\n==================\n\n### Features\n- `forbid-submodules`: new hook which outright bans submodules.\n    - #815 PR by @asottile.\n    - #707 issue by @ChiefGokhlayeh.\n\n4.3.0 - 2022-06-07\n==================\n\n### Features\n- `check-executables-have-shebangs`: use `git config core.fileMode` to\n  determine if it should query `git`.\n    - #730 PR by @Kurt-von-Laven.\n- `name-tests-test`: add `--pytest-test-first` test convention.\n    - #779 PR by @asottile.\n\n### Fixes\n- `check-shebang-scripts-are-executable`: update windows instructions.\n    - #774 PR by @mdeweerd.\n    - #770 issue by @mdeweerd.\n- `check-toml`: use stdlib `tomllib` when available.\n    - #771 PR by @DanielNoord.\n    - #755 issue by @sognetic.\n- `check-added-large-files`: don't run on non-file `stages`.\n    - #778 PR by @asottile.\n    - #777 issue by @skyj.\n\n4.2.0 - 2022-04-06\n==================\n\n### Features\n- `name-tests-test`: updated display text.\n    - #713 PR by @asottile.\n- `check-docstring-first`: make output more parsable.\n    - #748 PR by @asottile.\n- `check-merge-conflict`: make output more parsable.\n    - #748 PR by @asottile.\n- `debug-statements`: make output more parsable.\n    - #748 PR by @asottile.\n\n### Fixes\n- `check-merge-conflict`: fix detection of `======` conflict marker on windows.\n    - #748 PR by @asottile.\n\n### Updating\n- Drop python<3.7.\n    - #719 PR by @asottile.\n- Changed default branch from `master` to `main`.\n    - #744 PR by @asottile.\n\n4.1.0 - 2021-12-22\n==================\n\n### Features\n- `debug-statements`: add `pdbr` debugger.\n    - #614 PR by @cansarigol.\n- `detect-private-key`: add detection for additional key types.\n    - #658 PR by @ljmf00.\n- `check-executables-have-shebangs`: improve messaging on windows.\n    - #689 PR by @pujitm.\n    - #686 issue by @jmerdich.\n- `check-added-large-files`: support `--enforce-all` with `git-lfs`.\n    - #674 PR by @amartani.\n    - #560 issue by @jeremy-coulon.\n\n### Fixes\n- `check-case-conflict`: improve performance.\n    - #626 PR by @guykisel.\n    - #625 issue by @guykisel.\n- `forbid-new-submodules`: fix false-negatives for `pre-push`.\n    - #619 PR by @m-khvoinitsky.\n    - #609 issue by @m-khvoinitsky.\n- `check-merge-conflict`: fix execution in git worktrees.\n    - #662 PR by @errsyn.\n    - #638 issue by @daschuer.\n\n### Misc.\n- Normalize case of hook names and descriptions.\n    - #671 PR by @dennisroche.\n    - #673 PR by @revolter.\n\n4.0.1 - 2021-05-16\n==================\n\n### Fixes\n- `check-shebang-scripts-are-executable` fix entry point.\n    - #602 issue by @Person-93.\n    - #603 PR by @scop.\n\n4.0.0 - 2021-05-14\n==================\n\n### Features\n- `check-json`: report duplicate keys.\n    - #558 PR by @AdityaKhursale.\n    - #554 issue by @adamchainz.\n- `no-commit-to-branch`: add `main` to default blocked branches.\n    - #565 PR by @ndevenish.\n- `check-case-conflict`: check conflicts in directory names as well.\n    - #575 PR by @slsyy.\n    - #70 issue by @andyjack.\n- `check-vcs-permalinks`: forbid other branch names.\n    - #582 PR by @jack1142.\n    - #581 issue by @jack1142.\n- `check-shebang-scripts-are-executable`: new hook which ensures shebang'd\n  scripts are executable.\n    - #545 PR by @scop.\n\n### Fixes\n- `check-executables-have-shebangs`: Short circuit shebang lookup on windows.\n    - #544 PR by @scop.\n- `requirements-txt-fixer`: Fix comments which have indentation\n    - #549 PR by @greshilov.\n    - #548 issue by @greshilov.\n- `pretty-format-json`: write to stdout using UTF-8 encoding.\n    - #571 PR by @jack1142.\n    - #570 issue by @jack1142.\n- Use more inclusive language.\n    - #599 PR by @asottile.\n\n### Breaking changes\n- Remove deprecated hooks: `flake8`, `pyflakes`, `autopep8-wrapper`.\n    - #597 PR by @asottile.\n\n\n3.4.0 - 2020-12-15\n==================\n\n### Features\n- `file-contents-sorter`: Add `--unique` argument\n    - #524 PR by @danielhoherd.\n- `check-vcs-permalinks`: Add `--additional-github-domain` option\n    - #530 PR by @youngminz.\n- New hook: `destroyed-symlinks` to detect unintentional symlink-breakages on\n  windows.\n    - #511 PR by @m-khvoinitsky.\n\n3.3.0 - 2020-10-20\n==================\n\n### Features\n- `file-contents-sorter`: add `--ignore-case` option for case-insensitive\n  sorting\n    - #514 PR by @Julian.\n- `check-added-large-files`: add `--enforce-all` option to check non-added\n  files as well\n    - #519 PR by @mshawcroft.\n    - #518 issue by @mshawcroft.\n- `fix-byte-order-marker`: new hook which fixes UTF-8 byte-order marker.\n    - #522 PR by @jgowdy.\n\n### Deprecations\n- `check-byte-order-marker` is now deprecated for `fix-byte-order-marker`\n\n3.2.0 - 2020-07-30\n==================\n\n### Features\n- `debug-statements`: add support for `pydevd_pycharm` debugger\n    - #502 PR by @jgeerds.\n\n### Fixes\n- `check-executables-have-shebangs`: fix git-quoted files on windows (spaces,\n  non-ascii, etc.)\n    - #509 PR by @pawamoy.\n    - #508 issue by @pawamoy.\n\n3.1.0 - 2020-05-20\n==================\n\n### Features\n- `check-executables-have-shebangs`: on windows, validate the mode bits using\n  `git`\n    - #480 PR by @mxr.\n    - #435 issue by @dstandish.\n- `requirements-txt-fixer`: support more operators\n    - #483 PR by @mxr.\n    - #331 issue by @hackedd.\n\n### Fixes\n- `pre-commit-hooks-removed`: Fix when removed hooks used `args`\n    - #487 PR by @pedrocalleja.\n    - #485 issue by @pedrocalleja.\n\n3.0.1 - 2020-05-16\n==================\n\n### Fixes\n- `check-toml`: use UTF-8 encoding to load toml files\n    - #479 PR by @mxr.\n    - #474 issue by @staticdev.\n\n3.0.0 - 2020-05-14\n==================\n\n### Features\n- `detect-aws-credentials`: skip empty aws keys\n    - #450 PR by @begoon.\n    - #449 issue by @begoon.\n- `debug-statements`: add detection `wdb` debugger\n    - #452 PR by @itsdkey.\n    - #451 issue by @itsdkey.\n- `requirements-txt-fixer`: support line continuation for dependencies\n    - #469 PR by @aniketbhatnagar.\n    - #465 issue by @aniketbhatnagar.\n\n### Fixes\n- `detect-aws-credentials`: fix `UnicodeDecodeError` when running on non-UTF8\n  files.\n    - #453 PR by @asottile.\n    - #393 PR by @a7p\n    - #346 issue by @rpdelaney.\n\n### Updating\n- pre-commit/pre-commit-hooks now requires python3.6.1+\n    - #447 PR by @asottile.\n    - #455 PR by @asottile.\n- `flake8` / `pyflakes` have been removed, use `flake8` from `pycqa/flake8`\n  instead:\n\n  ```yaml\n  -   repo: https://gitlab.com/pycqa/flake8\n      rev: 3.8.1\n      hooks:\n      -   id: flake8\n  ```\n\n    - #476 PR by @asottile.\n    - #477 PR by @asottile.\n    - #344 issue by @asottile.\n\n\n2.5.0 - 2020-02-04\n==================\n\n### Fixes\n- Fix sorting of requirements which use `egg=...`\n    - #425 PR by @vinayinvicible.\n- Fix over-eager regular expression for test filename matching\n    - #429 PR by @rrauenza.\n\n### Updating\n- Use `flake8` from `pycqa/flake8` instead:\n\n  ```yaml\n  -   repo: https://gitlab.com/pycqa/flake8\n      rev: 3.7.9\n      hooks:\n      -   id: flake8\n  ```\n\n2.4.0 - 2019-10-28\n==================\n\n### Features\n- Add diff output to `pretty-format-json` when run without `--autofix`.\n    - #408 PR by @joepin.\n- Add `--chars` option to `trailing-whitespace` fixer to control which\n  characters are stripped instead of all whitespace.\n    - #421 PR by @iconmaster5326.\n\n### Fixes\n- Fix `requirements-txt-fixer` when file does not end in a newline.\n    - #414 issue by @barakreif.\n    - #415 PR by @barakreif.\n- Fix double printing of filename in `pretty-format-json`.\n    - #419 PR by @asottile.\n\n2.3.0 - 2019-08-05\n==================\n\n### Features\n- Add `rpdb` to detected debuggers in `debug-statements`\n    - #389 PR by @danlamanna.\n- Add `check-toml` hook\n    - #400 PR by @MarSoft.\n    - #400 PR by @ssbarnea.\n\n### Fixes\n- Add `__main__` block to `pre_commit.file_contents_sorter` so it can be\n  invoked using `python -m`\n    - #405 PR by @squeaky-pl.\n\n### Misc.\n- Fix `git-lfs` tests in azure pipelines\n    - #403 PR by @ssbarnea.\n\n2.2.3 - 2019-05-16\n==================\n\n### Fixes\n- Handle CRLF line endings in `double-quote-string-fixer`\n    - #385 issue by @Trim21.\n    - #386 PR by @asottile.\n\n2.2.2 - 2019-05-15\n==================\n\n### Fixes\n- Handle CRLF line endings in `fix-encoding-pragma`\n    - #384 PR by @asottile.\n\n2.2.1 - 2019-04-21\n==================\n\n### Fixes\n- Use UTF-8 to load yaml files\n    - #377 issue by @roottool.\n    - #378 PR by @roottool.\n\n2.2.0 - 2019-04-20\n==================\n\n### Features\n- Switch from `pyyaml` to `ruamel.yaml`\n    - This enforces (among other things) duplicate key checking in yaml.\n    - #351 PR by @asottile.\n- Add a new `--pattern` option to `no-commit-to-branch` for regex matching\n  branch names.\n    - #375 issue by @marcjay.\n    - #376 PR by @marcjay.\n\n### Fixes\n- Set `require_serial: true` for flake8\n    - flake8 internally uses multiprocessing.\n    - #358 PR by @asottile.\n- Don't run `check-executables-have-shebangs` / `trailing-whitespace` hooks\n  during the `commit-msg` stage.\n    - #361 issue by @revolter.\n    - #362 PR by @revolter.\n- Run `check-byte-order-marker` against `types: [text]`\n    - #371 PR by @tobywf.\n    - #372 PR by @tobywf.\n- Do not require UTF-8-encoded files for `check-docstring-first`\n    - #345 issue by @x007007007.\n    - #374 PR by @asottile.\n\n### Misc.\n- `pre-commit-hooks` now is type checked with mypy.\n    - #360 PR by @asottile.\n\n2.1.0 - 2018-12-26\n==================\n\n### Features\n- Detect PGP/GPG private keys in `detect-private-key`\n    - #329 PR by @rpdelaney.\n- Report filenames when fixing files in `mixed-line-endings`\n    - #341 PR by @gimbo.\n    - #340 issuey by @gimbo.\n\n### Fixes\n- Handle CRLF / CR line endings in `end-of-file-fixer`\n    - #327 PR by @mtkennerly.\n\n### Docs\n\n- Clarify and document arguments for `detect-aws-credentials`\n    - #333 PR by @rpdelaney.\n- Clarify `autopep8-wrapper` is deprecated in description\n    - #343 PR by @TheKevJames.\n\n\n2.0.0 - 2018-10-12\n==================\n\n### Breaking changes\n\n- `autopep8-wrapper` has been moved to\n  [pre-commit/mirrors-autopep8][mirrors-autopep8]\n    - #92 issue by @asottile.\n    - #319 issue by @blaggacao.\n    - #321 PR by @asottile.\n- `trailing-whitespace` defaults to `--no-markdown-linebreak-ext`\n    - #310 issue by @asottile.\n    - #324 PR by @asottile.\n- `hooks.yaml` (legacy pre-commit hook metadata) deleted\n    - #323 PR by @asottile.\n- pre-`types` compatibility metadata removed\n    - #323 PR @asottile.\n\n### Docs\n\n- Correct documentation for `no-commit-to-branch`\n    - #318 PR by @milin.\n\n### Updating\n\n- Minimum supported version of `pre-commit` is now 0.15.0\n- Use `autopep8` from [pre-commit/mirrors-autopep8][mirrors-autopep8]\n- To keep mardown hard linebreaks, for `trailing-whitespace` use\n  `args: [--markdown-linebreak-ext=md,markdown]` (the previous default value)\n\n[mirrors-autopep8]: https://github.com/pre-commit/mirrors-autopep8\n\n1.4.0-1 - 2018-09-27\n====================\n\n(Note: this is a tag-only release as no code changes occurred)\n\n### Fixes\n- Don't run `end-of-file-fixer` during `commit-msg` stage\n    - #315 issue by @revolter.\n    - #317 PR by @revolter.\n\n1.4.0 - 2018-07-22\n==================\n\n### Features\n- `no-commit-to-branch`: allow `--branch` to be specified multiple times\n    - #190 PR by @moas.\n    - #294 PR by @asottile.\n- `check-merge-conflict`: add `--assume-in-merge` to force checks outside of a\n  merge commit situation\n    - #300 issue by @vinayinvicible.\n    - #301 PR by @vinayinvicible.\n\n### Fixes\n- Don't match whitespace in VCS urls\n    - #293 PR by @asottile.\n- Fix invalid escape sequences\n    - #296 PR by @asottile.\n- Fix `ResourcesWarning`s\n    - #297 PR by @asottile.\n\n### Misc\n- Test against python3.7\n    - #304 PR by @expobrain.\n\n1.3.0 - 2018-05-28\n==================\n\n### Features\n- Add an `--unsafe` argument to `check-yaml` to allow custom yaml tags\n    - #273 issue by @blackillzone.\n    - #274 PR by @asottile.\n- Automatically remove `pkg-resources==0.0.0` in `requirements-txt-fixer`\n    - #275 PR by @nvtkaszpir.\n- Detect `breakpoint()` (python3.7+) in `debug-statements` hook.\n    - #283 PR by @asottile.\n- Detect sshcom and putty hooks in `detect-private-key`\n    - #287 PR by @vin01.\n\n### Fixes\n- Open files as UTF-8 (`autopep8-wrapper`, `check-docstring-first`,\n  `double-quote-string-fixer`)\n    - #279 PR by @nvtkaszpir.\n- Fix `AttributeError` in `check-builtin-literals` for some functions\n    - #285 issue by @EgoWumpus.\n    - #286 PR by @asottile.\n\n1.2.3 - 2018-02-28\n==================\n\n### Fixes\n- `trailing-whitespace` entrypoint was incorrect.\n    - f6780b9 by @asottile.\n\n1.2.2 - 2018-02-28\n==================\n\n### Fixes\n- `trailing-whitespace` no longer adds a missing newline at end-of-file\n    - #270 issue by @fractos.\n    - #271 PR by @asottile.\n\n1.2.1-1 - 2018-02-24\n====================\n\n(Note: this is a tag-only release as no code changes occurred)\n\n### Fixes:\n- Don't pass filenames for `no-commit-to-branch`\n    - #268 issue by @dongyuzheng.\n    - #269 PR by @asottile.\n\n1.2.1 - 2018-02-19\n==================\n### Fixes:\n- `detect-aws-credentials` false positive when key was empty\n    - #258 issue by @PVSec.\n    - #260 PR by @PVSec.\n- `no-commit-to-branch` no longer crashes when not on a branch\n    - #265 issue by @hectorv.\n    - #266 PR by @asottile.\n\n1.2.0 - 2018-01-13\n==================\n### Features:\n- Add new `check-builtin-literals` hook.\n    - #249 #251 PR by @benwebber.\n- `pretty-format-json` no longer depends on `simplejson`.\n    - #254 PR by @cas--.\n- `detect-private-key` now detects gcp keys.\n    - #255 issue by @SaMnCo @nicain.\n    - #256 PR by @nicain.\n\n1.1.1 - 2017-10-19\n==================\n### Fixes:\n- Fix output interleaving in `check-vcs-permalinks` under python3.\n    - #245 PR by @asottile.\n\n1.1.0 - 2017-10-12\n==================\n### Features:\n- `check-yaml` gains a `--allow-multiple-documents` (`-m`) argument to allow\n  linting of files using the\n  [multi document syntax](http://www.yaml.org/spec/1.2/spec.html#YAML)\n    - pre-commit/pre-commit#635 issue by @geekobi.\n    - #244 PR by @asottile.\n\n1.0.0 - 2017-10-09\n==================\n### Features:\n- New hook: `check-vcs-permalinks` for ensuring permalinked github urls.\n    - #241 PR by @asottile.\n\n### Fixes:\n- Fix `trailing-whitespace` for non-utf8 files on macos\n    - #242 PR by @asottile.\n- Fix `requirements-txt-fixer` for files ending in comments\n    - #243 PR by @asottile.\n\n0.9.5 - 2017-09-27\n==================\n- Fix mixed-line-endings `--fix=...` when whole file is a different ending\n\n0.9.4 - 2017-09-19\n==================\n- Fix entry point for `mixed-line-ending`\n\n0.9.3 - 2017-09-07\n==================\n- New hook: `mixed-line-ending`\n\n0.9.2 - 2017-08-21\n==================\n- Report full python version in `check-ast`.\n- Apply a more strict regular expression for `name-tests-test`\n- Upgrade binding for `git-lfs` for `check-added-large-files`.  The oldest\n  version that is supported is 2.2.1 (2.2.0 will incorrectly refer to all\n  files as \"lfs\" (false negative) and earlier versions will crash.\n- `debug-statements` now works for non-utf-8 files.\n\n0.9.1 - 2017-07-02\n==================\n- Add `check-executables-have-shebangs` hook.\n\n0.9.0 - 2017-07-02\n==================\n- Add `sort-simple-yaml` hook\n- Fix `requirements-txt-fixer` for empty files\n- Add `file-contents-sorter` hook for sorting flat files\n- `check-merge-conflict` now recognizes rebase conflicts\n- Metadata now uses `types` (and therefore requires pre-commit 0.15.0).  This\n  allows the text processing hooks to match *all* text files (and to match\n  files which would only be classifiable by their shebangs).\n\n0.8.0 - 2017-06-06\n==================\n- Add flag allowing missing keys to `detect-aws-credentials`\n- Handle django default `tests.py` in `name-tests-test`\n- Add `--no-ensure-ascii` option to `pretty-format-json`\n- Add `no-commit-to-branch` hook\n\n0.7.1 - 2017-02-07\n==================\n- Don't false positive on files where trailing whitespace isn't changed.\n\n0.7.0 - 2017-01-21\n==================\n- Improve search for detecting aws keys\n- Add .pre-commit-hooks.yaml for forward compatibility\n\n0.6.1 - 2016-11-30\n==================\n- trailing-whitespace-hook: restore original file on catastrophic failure\n- trailing-whitespace-hook: support crlf\n- check-yaml: Use safe_load\n- check-json: allow custom key sort\n- check-json: display filename for non-utf8 files\n- New hook: forbid-new-submodules\n\n0.6.0 - 2016-08-12\n==================\n- Merge conflict detection no longer crashes on binary files\n- Indentation in json may be an arbitrary separator\n- Editable requirements are properly sorted\n- Encoding pragma fixer pragma is configurable\n\n0.5.1 - 2016-05-16\n==================\n- Add a --no-sort-keys to json pretty formatter\n- Add a --remove to fix-encoding-pragma\n\n0.5.0 - 2016-04-05\n==================\n- Add check-byte-order-marker\n- Add check-synlinks\n- check-large-files-added understands git-lfs\n- Support older git\n- Fix regex for --django in test name checker\n- Add fix-encoding-pragma hook\n- requirements-txt-fixer now sorts like latest pip\n- Add check-ast hook\n- Add detect-aws-credentials hook\n- Allow binary files to pass private key hook\n- Add pretty-format-json hook\n\n0.4.2 - 2015-05-31\n==================\n- Add --django to test name checker\n- Add check-merge-conflict hook\n- Remove dependency on plumbum\n- Add q as a debug statement\n- Don't detect markup titles as conflicts\n- Teach trailing-whitespace about markdown\n- Quickfix for pyflakes - flake8 version conflict\n\n0.4.1 - 2015-03-08\n==================\n- Respect configuration when running autopep8\n- Quickfix for pep8 version conflicts\n\n0.4.0 - 2015-02-22\n==================\n- Fix trailing-whitespace on OS X\n- Add check-added-large-files hook\n- Add check-docstring-first hook\n- Add requirements-txt-fixer hook\n- Add check-case-conflict hook\n- Use yaml's CLoader when available in check-yaml for more speed\n- Add check-xml hook\n- Fix end-of-file-fixer for windows\n- Add double-quote-string-fixer hook\n\n0.3.0 - 2014-08-22\n==================\n- Add autopep8-wrapper hook\n\n0.2.0 - 2014-08-19\n==================\n- Add check-json hook\n\n0.1.1 - 2014-06-19\n==================\n- Don't crash on non-parseable files for debug-statement-hook\n\n0.1.0 - 2014-06-07\n==================\n- Initial Release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.06640625,
          "content": "Copyright (c) 2014 pre-commit dev team: Anthony Sottile, Ken Struys\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.177734375,
          "content": "[![build status](https://github.com/pre-commit/pre-commit-hooks/actions/workflows/main.yml/badge.svg)](https://github.com/pre-commit/pre-commit-hooks/actions/workflows/main.yml)\n[![pre-commit.ci status](https://results.pre-commit.ci/badge/github/pre-commit/pre-commit-hooks/main.svg)](https://results.pre-commit.ci/latest/github/pre-commit/pre-commit-hooks/main)\n\npre-commit-hooks\n================\n\nSome out-of-the-box hooks for pre-commit.\n\nSee also: https://github.com/pre-commit/pre-commit\n\n\n### Using pre-commit-hooks with pre-commit\n\nAdd this to your `.pre-commit-config.yaml`\n\n```yaml\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0  # Use the ref you want to point at\n    hooks:\n    -   id: trailing-whitespace\n    # -   id: ...\n```\n\n### Hooks available\n\n#### `check-added-large-files`\nPrevent giant files from being committed.\n  - Specify what is \"too large\" with `args: ['--maxkb=123']` (default=500kB).\n  - Limits checked files to those indicated as staged for addition by git.\n  - If `git-lfs` is installed, lfs files will be skipped\n    (requires `git-lfs>=2.2.1`)\n  - `--enforce-all` - Check all listed files not just those staged for\n    addition.\n\n#### `check-ast`\nSimply check whether files parse as valid python.\n\n#### `check-builtin-literals`\nRequire literal syntax when initializing empty or zero Python builtin types.\n  - Allows calling constructors with positional arguments (e.g., `list('abc')`).\n  - Allows calling constructors from the `builtins` (`__builtin__`) namespace (`builtins.list()`).\n  - Ignore this requirement for specific builtin types with `--ignore=type1,type2,…`.\n  - Forbid `dict` keyword syntax with `--no-allow-dict-kwargs`.\n\n#### `check-case-conflict`\nCheck for files with names that would conflict on a case-insensitive filesystem like MacOS HFS+ or Windows FAT.\n\n#### `check-docstring-first`\nChecks for a common error of placing code before the docstring.\n\n#### `check-executables-have-shebangs`\nChecks that non-binary executables have a proper shebang.\n\n#### `check-illegal-windows-names`\nCheck for files that cannot be created on Windows.\n\n#### `check-json`\nAttempts to load all json files to verify syntax.\n\n#### `check-merge-conflict`\nCheck for files that contain merge conflict strings.\n  - `--assume-in-merge` - Allows running the hook when there is no ongoing merge operation\n\n#### `check-shebang-scripts-are-executable`\nChecks that scripts with shebangs are executable.\n\n#### `check-symlinks`\nChecks for symlinks which do not point to anything.\n\n#### `check-toml`\nAttempts to load all TOML files to verify syntax.\n\n#### `check-vcs-permalinks`\nEnsures that links to vcs websites are permalinks.\n  - `--additional-github-domain DOMAIN` - Add check for specified domain.\n    Can be repeated multiple times.  for example, if your company uses\n    GitHub Enterprise you may use something like\n    `--additional-github-domain github.example.com`\n\n#### `check-xml`\nAttempts to load all xml files to verify syntax.\n\n#### `check-yaml`\nAttempts to load all yaml files to verify syntax.\n  - `--allow-multiple-documents` - allow yaml files which use the\n    [multi-document syntax](http://www.yaml.org/spec/1.2/spec.html#YAML)\n  - `--unsafe` - Instead of loading the files, simply parse them for syntax.\n    A syntax-only check enables extensions and unsafe constructs which would\n    otherwise be forbidden.  Using this option removes all guarantees of\n    portability to other yaml implementations.\n    Implies `--allow-multiple-documents`.\n\n#### `debug-statements`\nCheck for debugger imports and py37+ `breakpoint()` calls in python source.\n\n#### `destroyed-symlinks`\nDetects symlinks which are changed to regular files with a content of a path\nwhich that symlink was pointing to.\nThis usually happens on Windows when a user clones a repository that has\nsymlinks but they do not have the permission to create symlinks.\n\n#### `detect-aws-credentials`\nChecks for the existence of AWS secrets that you have set up with the AWS CLI.\nThe following arguments are available:\n- `--credentials-file CREDENTIALS_FILE` - additional AWS CLI style\n  configuration file in a non-standard location to fetch configured\n  credentials from. Can be repeated multiple times.\n- `--allow-missing-credentials` - Allow hook to pass when no credentials are detected.\n\n#### `detect-private-key`\nChecks for the existence of private keys.\n\n#### `double-quote-string-fixer`\nThis hook replaces double quoted strings with single quoted strings.\n\n#### `end-of-file-fixer`\nMakes sure files end in a newline and only a newline.\n\n#### `file-contents-sorter`\nSort the lines in specified files (defaults to alphabetical).\nYou must provide the target [`files`](https://pre-commit.com/#config-files) as input.\nNote that this hook WILL remove blank lines and does NOT respect any comments.\nAll newlines will be converted to line feeds (`\\n`).\n\nThe following arguments are available:\n- `--ignore-case` - fold lower case to upper case characters.\n- `--unique` - ensure each line is unique.\n\n#### `fix-byte-order-marker`\nremoves UTF-8 byte order marker\n\n#### `fix-encoding-pragma`\n\n_Deprecated since py2 is EOL - use [pyupgrade](https://github.com/asottile/pyupgrade) instead._\n\nAdd `# -*- coding: utf-8 -*-` to the top of python files.\n  - To remove the coding pragma pass `--remove` (useful in a python3-only codebase)\n\n#### `forbid-new-submodules`\nPrevent addition of new git submodules.\n\nThis is intended as a helper to migrate away from submodules.  If you want to\nban them entirely use `forbid-submodules`\n\n#### `forbid-submodules`\nforbids any submodules in the repository.\n\n#### `mixed-line-ending`\nReplaces or checks mixed line ending.\n  - `--fix={auto,crlf,lf,no}`\n      - `auto` - Replaces automatically the most frequent line ending. This is the default argument.\n      - `crlf`, `lf` - Forces to replace line ending by respectively CRLF and LF.\n          - This option isn't compatible with git setup check-in LF check-out CRLF as git smudge this later than the hook is invoked.\n      - `no` - Checks if there is any mixed line ending without modifying any file.\n\n#### `name-tests-test`\nverifies that test files are named correctly.\n- `--pytest` (the default): ensure tests match `.*_test\\.py`\n- `--pytest-test-first`: ensure tests match `test_.*\\.py`\n- `--django` / `--unittest`: ensure tests match `test.*\\.py`\n\n#### `no-commit-to-branch`\nProtect specific branches from direct checkins.\n  - Use `args: [--branch, staging, --branch, main]` to set the branch.\n    Both `main` and `master` are protected by default if no branch argument is set.\n  - `-b` / `--branch` may be specified multiple times to protect multiple\n    branches.\n  - `-p` / `--pattern` can be used to protect branches that match a supplied regex\n    (e.g. `--pattern, release/.*`). May be specified multiple times.\n\nNote that `no-commit-to-branch` is configured by default to [`always_run`](https://pre-commit.com/#config-always_run).\nAs a result, it will ignore any setting of [`files`](https://pre-commit.com/#config-files),\n[`exclude`](https://pre-commit.com/#config-exclude), [`types`](https://pre-commit.com/#config-types)\nor [`exclude_types`](https://pre-commit.com/#config-exclude_types).\nSet [`always_run: false`](https://pre-commit.com/#config-always_run) to allow this hook to be skipped according to these\nfile filters. Caveat: In this configuration, empty commits (`git commit --allow-empty`) would always be allowed by this hook.\n\n#### `pretty-format-json`\nChecks that all your JSON files are pretty.  \"Pretty\"\nhere means that keys are sorted and indented.  You can configure this with\nthe following commandline options:\n  - `--autofix` - automatically format json files\n  - `--indent ...` - Control the indentation (either a number for a number of spaces or a string of whitespace).  Defaults to 2 spaces.\n  - `--no-ensure-ascii` preserve unicode characters instead of converting to escape sequences\n  - `--no-sort-keys` - when autofixing, retain the original key ordering (instead of sorting the keys)\n  - `--top-keys comma,separated,keys` - Keys to keep at the top of mappings.\n\n#### `requirements-txt-fixer`\nSorts entries in requirements.txt and constraints.txt and removes incorrect entry for `pkg-resources==0.0.0`\n\n#### `sort-simple-yaml`\nSorts simple YAML files which consist only of top-level\nkeys, preserving comments and blocks.\n\nNote that `sort-simple-yaml` by default matches no `files` as it enforces a\nvery specific format.  You must opt in to this by setting [`files`](https://pre-commit.com/#config-files), for example:\n\n```yaml\n    -   id: sort-simple-yaml\n        files: ^config/simple/\n```\n\n\n#### `trailing-whitespace`\nTrims trailing whitespace.\n  - To preserve Markdown [hard linebreaks](https://github.github.com/gfm/#hard-line-break)\n    use `args: [--markdown-linebreak-ext=md]` (or other extensions used\n    by your markdownfiles).  If for some reason you want to treat all files\n    as markdown, use `--markdown-linebreak-ext=*`.\n  - By default, this hook trims all whitespace from the ends of lines.\n    To specify a custom set of characters to trim instead, use `args: [--chars,\"<chars to trim>\"]`.\n\n### Deprecated / replaced hooks\n\n- `check-byte-order-marker`: instead use fix-byte-order-marker\n\n### As a standalone package\n\nIf you'd like to use these hooks, they're also available as a standalone package.\n\nSimply `pip install pre-commit-hooks`\n"
        },
        {
          "name": "pre_commit_hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.02734375,
          "content": "covdefaults\ncoverage\npytest\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 3.3408203125,
          "content": "[metadata]\nname = pre_commit_hooks\nversion = 5.0.0\ndescription = Some out-of-the-box hooks for pre-commit.\nlong_description = file: README.md\nlong_description_content_type = text/markdown\nurl = https://github.com/pre-commit/pre-commit-hooks\nauthor = Anthony Sottile\nauthor_email = asottile@umich.edu\nlicense = MIT\nlicense_files = LICENSE\nclassifiers =\n    License :: OSI Approved :: MIT License\n    Programming Language :: Python :: 3\n    Programming Language :: Python :: 3 :: Only\n    Programming Language :: Python :: Implementation :: CPython\n    Programming Language :: Python :: Implementation :: PyPy\n\n[options]\npackages = find:\ninstall_requires =\n    ruamel.yaml>=0.15\n    tomli>=1.1.0;python_version<\"3.11\"\npython_requires = >=3.9\n\n[options.packages.find]\nexclude =\n    tests*\n    testing*\n\n[options.entry_points]\nconsole_scripts =\n    check-added-large-files = pre_commit_hooks.check_added_large_files:main\n    check-ast = pre_commit_hooks.check_ast:main\n    check-builtin-literals = pre_commit_hooks.check_builtin_literals:main\n    check-byte-order-marker = pre_commit_hooks.check_byte_order_marker:main\n    check-case-conflict = pre_commit_hooks.check_case_conflict:main\n    check-docstring-first = pre_commit_hooks.check_docstring_first:main\n    check-executables-have-shebangs = pre_commit_hooks.check_executables_have_shebangs:main\n    check-json = pre_commit_hooks.check_json:main\n    check-merge-conflict = pre_commit_hooks.check_merge_conflict:main\n    check-shebang-scripts-are-executable = pre_commit_hooks.check_shebang_scripts_are_executable:main\n    check-symlinks = pre_commit_hooks.check_symlinks:main\n    check-toml = pre_commit_hooks.check_toml:main\n    check-vcs-permalinks = pre_commit_hooks.check_vcs_permalinks:main\n    check-xml = pre_commit_hooks.check_xml:main\n    check-yaml = pre_commit_hooks.check_yaml:main\n    debug-statement-hook = pre_commit_hooks.debug_statement_hook:main\n    destroyed-symlinks = pre_commit_hooks.destroyed_symlinks:main\n    detect-aws-credentials = pre_commit_hooks.detect_aws_credentials:main\n    detect-private-key = pre_commit_hooks.detect_private_key:main\n    double-quote-string-fixer = pre_commit_hooks.string_fixer:main\n    end-of-file-fixer = pre_commit_hooks.end_of_file_fixer:main\n    file-contents-sorter = pre_commit_hooks.file_contents_sorter:main\n    fix-byte-order-marker = pre_commit_hooks.fix_byte_order_marker:main\n    fix-encoding-pragma = pre_commit_hooks.fix_encoding_pragma:main\n    forbid-new-submodules = pre_commit_hooks.forbid_new_submodules:main\n    mixed-line-ending = pre_commit_hooks.mixed_line_ending:main\n    name-tests-test = pre_commit_hooks.tests_should_end_in_test:main\n    no-commit-to-branch = pre_commit_hooks.no_commit_to_branch:main\n    pre-commit-hooks-removed = pre_commit_hooks.removed:main\n    pretty-format-json = pre_commit_hooks.pretty_format_json:main\n    requirements-txt-fixer = pre_commit_hooks.requirements_txt_fixer:main\n    sort-simple-yaml = pre_commit_hooks.sort_simple_yaml:main\n    trailing-whitespace-fixer = pre_commit_hooks.trailing_whitespace_fixer:main\n\n[bdist_wheel]\nuniversal = True\n\n[coverage:run]\nplugins = covdefaults\n\n[mypy]\ncheck_untyped_defs = true\ndisallow_any_generics = true\ndisallow_incomplete_defs = true\ndisallow_untyped_defs = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\n\n[mypy-testing.*]\ndisallow_untyped_defs = false\n\n[mypy-tests.*]\ndisallow_untyped_defs = false\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.0712890625,
          "content": "from __future__ import annotations\n\nfrom setuptools import setup\nsetup()\n"
        },
        {
          "name": "testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.4609375,
          "content": "[tox]\nenvlist = py,pre-commit\n\n[testenv]\ndeps = -rrequirements-dev.txt\nsetenv =\n    GIT_AUTHOR_NAME = \"test\"\n    GIT_COMMITTER_NAME = \"test\"\n    GIT_AUTHOR_EMAIL = \"test@example.com\"\n    GIT_COMMITTER_EMAIL = \"test@example.com\"\ncommands =\n    coverage erase\n    coverage run -m pytest {posargs:tests}\n    coverage report\n\n[testenv:pre-commit]\nskip_install = true\ndeps = pre-commit\ncommands = pre-commit run --all-files --show-diff-on-failure\n\n[pep8]\nignore=E265,E501,W504\n"
        }
      ]
    }
  ]
}