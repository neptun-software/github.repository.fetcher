{
  "metadata": {
    "timestamp": 1736560782888,
    "page": 472,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Azure-Samples/azure-search-openai-demo",
      "stars": 6543,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".azdo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0400390625,
          "content": "*.sh text eol=lf\n*.jsonlines text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.1044921875,
          "content": "# Azure az webapp deployment details\n.azure\n*_env\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# NPM\nnpm-debug.log*\nnode_modules\nstatic/\n\ndata/**/*.md5\n\n.DS_Store\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.5283203125,
          "content": "exclude: '^tests/snapshots/'\nrepos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n    -   id: check-yaml\n    -   id: end-of-file-fixer\n    -   id: trailing-whitespace\n-   repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.7.2\n    hooks:\n    -   id: ruff\n-   repo: https://github.com/psf/black\n    rev: 24.10.0\n    hooks:\n    -   id: black\n-   repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v3.1.0\n    hooks:\n    - id: prettier\n      types_or: [css, javascript, ts, tsx, html]\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.4609375,
          "content": "# Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit <https://cla.opensource.microsoft.com>.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n- [Submitting a Pull Request (PR)](#submitting-a-pull-request-pr)\n- [Setting up the development environment](#setting-up-the-development-environment)\n- [Running unit tests](#running-unit-tests)\n- [Running E2E tests](#running-e2e-tests)\n- [Code style](#code-style)\n- [Adding new azd environment variables](#adding-new-azd-environment-variables)\n- [Adding new UI strings](#adding-new-ui-strings)\n\n## Submitting a Pull Request (PR)\n\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\n- Search the repository (<https://github.com/[organization-name>]/[repository-name]/pulls) for an open or closed PR\n  that relates to your submission. You don't want to duplicate effort.\n- Make your changes in a new git fork\n- Follow [Code style conventions](#code-style)\n- [Run the tests](#running-unit-tests) (and write new ones, if needed)\n- Commit your changes using a descriptive commit message\n- Push your fork to GitHub\n- In GitHub, create a pull request to the `main` branch of the repository\n- Ask a maintainer to review your PR and address any comments they might have\n\n## Setting up the development environment\n\nInstall the development dependencies:\n\n```shell\npython -m pip install -r requirements-dev.txt\n```\n\nInstall the pre-commit hooks:\n\n```shell\npre-commit install\n```\n\nCompile the JavaScript:\n\n```shell\n( cd ./app/frontend ; npm install ; npm run build )\n```\n\n## Running unit tests\n\nRun the tests:\n\n```shell\npython -m pytest\n```\n\nCheck the coverage report to make sure your changes are covered.\n\n```shell\npython -m pytest --cov\n```\n\n## Running E2E tests\n\nInstall Playwright browser dependencies:\n\n```shell\nplaywright install --with-deps\n```\n\nRun the tests:\n\n```shell\npython -m pytest tests/e2e.py --tracing=retain-on-failure\n```\n\nWhen a failure happens, the trace zip will be saved in the test-results folder.\nYou can view that using the Playwright CLI:\n\n```shell\nplaywright show-trace test-results/<trace-zip>\n```\n\nYou can also use the online trace viewer at <https://trace.playwright.dev/>\n\n## Code style\n\nThis codebase includes several languages: TypeScript, Python, Bicep, Powershell, and Bash.\nCode should follow the standard conventions of each language.\n\nFor Python, you can enforce the conventions using `ruff` and `black`.\n\nInstall the development dependencies:\n\n```shell\npython -m pip install -r requirements-dev.txt\n```\n\nRun `ruff` to lint a file:\n\n```shell\npython -m ruff <path-to-file>\n```\n\nRun `black` to format a file:\n\n```shell\npython -m black <path-to-file>\n```\n\nIf you followed the steps above to install the pre-commit hooks, then you can just wait for those hooks to run `ruff` and `black` for you.\n\n## Adding new azd environment variables\n\nWhen adding new azd environment variables, please remember to update:\n\n1. [main.parameters.json](./infra/main.parameters.json)\n1. [appEnvVariables in main.bicep](./infra/main.bicep)\n1. App Service's [azure.yaml](./azure.yaml)\n1. [ADO pipeline](.azdo/pipelines/azure-dev.yml).\n1. [Github workflows](.github/workflows/azure-dev.yml)\n\n## Adding new UI strings\n\nWhen adding new UI strings, please remember to update all translations.\nFor any translations that you generate with an AI tool,\nplease indicate in the PR description which language's strings were AI-generated.\n\nHere are community contributors that can review translations:\n\n| Language | Contributor         |\n|----------|---------------------|\n| Danish   | @EMjetrot           |\n| French   | @manekinekko        |\n| Japanese | @bnodir             |\n| Norwegian| @@jeannotdamoiseaux |\n| Portugese| @glaucia86          |\n| Spanish  | @miguelmsft         |\n| Turkish  | @mertcakdogan       |\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2023 Azure Samples\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.3076171875,
          "content": "<!--\n---\nname: RAG chat app with your data (Python)\ndescription: Chat with your domain data using Azure OpenAI and Azure AI Search.\nlanguages:\n- python\n- typescript\n- bicep\n- azdeveloper\nproducts:\n- azure-openai\n- azure-cognitive-search\n- azure-app-service\n- azure\npage_type: sample\nurlFragment: azure-search-openai-demo\n---\n-->\n\n# RAG chat app with Azure OpenAI and Azure AI Search (Python)\n\nThis solution creates a ChatGPT-like frontend experience over your own documents using RAG (Retrieval Augmented Generation). It uses Azure OpenAI Service to access GPT models, and Azure AI Search for data indexing and retrieval.\n\nThis solution's backend is written in Python. There are also [**JavaScript**](https://aka.ms/azai/js/code), [**.NET**](https://aka.ms/azai/net/code), and [**Java**](https://aka.ms/azai/java/code) samples based on this one. Learn more about [developing AI apps using Azure AI Services](https://aka.ms/azai).\n\n[![Open in GitHub Codespaces](https://img.shields.io/static/v1?style=for-the-badge&label=GitHub+Codespaces&message=Open&color=brightgreen&logo=github)](https://github.com/codespaces/new?hide_repo_select=true&ref=main&repo=599293758&machine=standardLinux32gb&devcontainer_path=.devcontainer%2Fdevcontainer.json&location=WestUs2)\n[![Open in Dev Containers](https://img.shields.io/static/v1?style=for-the-badge&label=Dev%20Containers&message=Open&color=blue&logo=visualstudiocode)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/azure-samples/azure-search-openai-demo)\n\n## Important Security Notice\n\nThis template, the application code and configuration it contains, has been built to showcase Microsoft Azure specific services and tools. We strongly advise our customers not to make this code part of their production environments without implementing or enabling additional security features. See our [productionizing guide](docs/productionizing.md) for tips, and consult the [Azure OpenAI Landing Zone reference architecture](https://techcommunity.microsoft.com/blog/azurearchitectureblog/azure-openai-landing-zone-reference-architecture/3882102) for more best practices.\n\n## Table of Contents\n\n- [Features](#features)\n- [Azure account requirements](#azure-account-requirements)\n  - [Cost estimation](#cost-estimation)\n- [Getting Started](#getting-started)\n  - [GitHub Codespaces](#github-codespaces)\n  - [VS Code Dev Containers](#vs-code-dev-containers)\n  - [Local environment](#local-environment)\n- [Deploying](#deploying)\n  - [Deploying again](#deploying-again)\n- [Running the development server](#running-the-development-server)\n- [Using the app](#using-the-app)\n- [Clean up](#clean-up)\n- [Guidance](#guidance)\n  - [Resources](#resources)\n\n![Chat screen](docs/images/chatscreen.png)\n\n[📺 Watch a video overview of the app.](https://youtu.be/3acB0OWmLvM)\n\nThis sample demonstrates a few approaches for creating ChatGPT-like experiences over your own data using the Retrieval Augmented Generation pattern. It uses Azure OpenAI Service to access a GPT model (gpt-35-turbo), and Azure AI Search for data indexing and retrieval.\n\nThe repo includes sample data so it's ready to try end to end. In this sample application we use a fictitious company called Contoso Electronics, and the experience allows its employees to ask questions about the benefits, internal policies, as well as job descriptions and roles.\n\n## Features\n\n- Chat (multi-turn) and Q&A (single turn) interfaces\n- Renders citations and thought process for each answer\n- Includes settings directly in the UI to tweak the behavior and experiment with options\n- Integrates Azure AI Search for indexing and retrieval of documents, with support for [many document formats](/docs/data_ingestion.md#supported-document-formats) as well as [integrated vectorization](/docs/data_ingestion.md#overview-of-integrated-vectorization)\n- Optional usage of [GPT-4 with vision](/docs/gpt4v.md) to reason over image-heavy documents\n- Optional addition of [speech input/output](/docs/deploy_features.md#enabling-speech-inputoutput) for accessibility\n- Optional automation of [user login and data access](/docs/login_and_acl.md) via Microsoft Entra\n- Performance tracing and monitoring with Application Insights\n\n### Architecture Diagram\n\n![RAG Architecture](docs/images/appcomponents.png)\n\n## Azure account requirements\n\n**IMPORTANT:** In order to deploy and run this example, you'll need:\n\n- **Azure account**. If you're new to Azure, [get an Azure account for free](https://azure.microsoft.com/free/cognitive-search/) and you'll get some free Azure credits to get started. See [guide to deploying with the free trial](docs/deploy_freetrial.md).\n- **Azure account permissions**:\n  - Your Azure account must have `Microsoft.Authorization/roleAssignments/write` permissions, such as [Role Based Access Control Administrator](https://learn.microsoft.com/azure/role-based-access-control/built-in-roles#role-based-access-control-administrator-preview), [User Access Administrator](https://learn.microsoft.com/azure/role-based-access-control/built-in-roles#user-access-administrator), or [Owner](https://learn.microsoft.com/azure/role-based-access-control/built-in-roles#owner). If you don't have subscription-level permissions, you must be granted [RBAC](https://learn.microsoft.com/azure/role-based-access-control/built-in-roles#role-based-access-control-administrator-preview) for an existing resource group and [deploy to that existing group](docs/deploy_existing.md#resource-group).\n  - Your Azure account also needs `Microsoft.Resources/deployments/write` permissions on the subscription level.\n\n### Cost estimation\n\nPricing varies per region and usage, so it isn't possible to predict exact costs for your usage.\nHowever, you can try the [Azure pricing calculator](https://azure.com/e/e3490de2372a4f9b909b0d032560e41b) for the resources below.\n\n- Azure Container Apps: Default host for app deployment as of 10/28/2024. See more details in [the ACA deployment guide](docs/azure_container_apps.md). Consumption plan with 1 CPU core, 2.0 GB RAM. Pricing with Pay-as-You-Go. [Pricing](https://azure.microsoft.com/pricing/details/container-apps/)\n- Azure Container Registry: Basic tier. [Pricing](https://azure.microsoft.com/pricing/details/container-registry/)\n- Azure App Service: Only provisioned if you deploy to Azure App Service following [the App Service deployment guide](docs/azure_app_service.md).  Basic Tier with 1 CPU core, 1.75 GB RAM. Pricing per hour. [Pricing](https://azure.microsoft.com/pricing/details/app-service/linux/)\n- Azure OpenAI: Standard tier, GPT and Ada models. Pricing per 1K tokens used, and at least 1K tokens are used per question. [Pricing](https://azure.microsoft.com/pricing/details/cognitive-services/openai-service/)\n- Azure AI Document Intelligence: SO (Standard) tier using pre-built layout. Pricing per document page, sample documents have 261 pages total. [Pricing](https://azure.microsoft.com/pricing/details/form-recognizer/)\n- Azure AI Search: Basic tier, 1 replica, free level of semantic search. Pricing per hour. [Pricing](https://azure.microsoft.com/pricing/details/search/)\n- Azure Blob Storage: Standard tier with ZRS (Zone-redundant storage). Pricing per storage and read operations. [Pricing](https://azure.microsoft.com/pricing/details/storage/blobs/)\n- Azure Cosmos DB: Only provisioned if you enabled [chat history with Cosmos DB](docs/deploy_features.md#enabling-persistent-chat-history-with-azure-cosmos-db). Serverless tier. Pricing per request unit and storage. [Pricing](https://azure.microsoft.com/pricing/details/cosmos-db/)\n- Azure AI Vision: Only provisioned if you enabled [GPT-4 with vision](docs/gpt4v.md). Pricing per 1K transactions. [Pricing](https://azure.microsoft.com/pricing/details/cognitive-services/computer-vision/)\n- Azure AI Content Understanding: Only provisioned if you enabled [media description](docs/deploy_features.md#enabling-media-description-with-azure-content-understanding). Pricing per 1K images. [Pricing](https://azure.microsoft.com/pricing/details/content-understanding/)\n- Azure Monitor: Pay-as-you-go tier. Costs based on data ingested. [Pricing](https://azure.microsoft.com/pricing/details/monitor/)\n\nTo reduce costs, you can switch to free SKUs for various services, but those SKUs have limitations.\nSee this guide on [deploying with minimal costs](docs/deploy_lowcost.md) for more details.\n\n⚠️ To avoid unnecessary costs, remember to take down your app if it's no longer in use,\neither by deleting the resource group in the Portal or running `azd down`.\n\n## Getting Started\n\nYou have a few options for setting up this project.\nThe easiest way to get started is GitHub Codespaces, since it will setup all the tools for you,\nbut you can also [set it up locally](#local-environment) if desired.\n\n### GitHub Codespaces\n\nYou can run this repo virtually by using GitHub Codespaces, which will open a web-based VS Code in your browser:\n\n[![Open in GitHub Codespaces](https://img.shields.io/static/v1?style=for-the-badge&label=GitHub+Codespaces&message=Open&color=brightgreen&logo=github)](https://github.com/codespaces/new?hide_repo_select=true&ref=main&repo=599293758&machine=standardLinux32gb&devcontainer_path=.devcontainer%2Fdevcontainer.json&location=WestUs2)\n\nOnce the codespace opens (this may take several minutes), open a terminal window.\n\n### VS Code Dev Containers\n\nA related option is VS Code Dev Containers, which will open the project in your local VS Code using the [Dev Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers):\n\n1. Start Docker Desktop (install it if not already installed)\n2. Open the project:\n    [![Open in Dev Containers](https://img.shields.io/static/v1?style=for-the-badge&label=Dev%20Containers&message=Open&color=blue&logo=visualstudiocode)](https://vscode.dev/redirect?url=vscode://ms-vscode-remote.remote-containers/cloneInVolume?url=https://github.com/azure-samples/azure-search-openai-demo)\n\n3. In the VS Code window that opens, once the project files show up (this may take several minutes), open a terminal window.\n\n### Local environment\n\n1. Install the required tools:\n\n    - [Azure Developer CLI](https://aka.ms/azure-dev/install)\n    - [Python 3.9, 3.10, or 3.11](https://www.python.org/downloads/)\n      - **Important**: Python and the pip package manager must be in the path in Windows for the setup scripts to work.\n      - **Important**: Ensure you can run `python --version` from console. On Ubuntu, you might need to run `sudo apt install python-is-python3` to link `python` to `python3`.\n    - [Node.js 18+](https://nodejs.org/download/)\n    - [Git](https://git-scm.com/downloads)\n    - [Powershell 7+ (pwsh)](https://github.com/powershell/powershell) - For Windows users only.\n      - **Important**: Ensure you can run `pwsh.exe` from a PowerShell terminal. If this fails, you likely need to upgrade PowerShell.\n\n2. Create a new folder and switch to it in the terminal.\n3. Run this command to download the project code:\n\n    ```shell\n    azd init -t azure-search-openai-demo\n    ```\n\n    Note that this command will initialize a git repository, so you do not need to clone this repository.\n\n## Deploying\n\nThe steps below will provision Azure resources and deploy the application code to Azure Container Apps. To deploy to Azure App Service instead, follow [the app service deployment guide](docs/azure_app_service.md).\n\n1. Login to your Azure account:\n\n    ```shell\n    azd auth login\n    ```\n\n    For GitHub Codespaces users, if the previous command fails, try:\n\n   ```shell\n    azd auth login --use-device-code\n    ```\n\n1. Create a new azd environment:\n\n    ```shell\n    azd env new\n    ```\n\n    Enter a name that will be used for the resource group.\n    This will create a new folder in the `.azure` folder, and set it as the active environment for any calls to `azd` going forward.\n1. (Optional) This is the point where you can customize the deployment by setting environment variables, in order to [use existing resources](docs/deploy_existing.md), [enable optional features (such as auth or vision)](docs/deploy_features.md), or [deploy low-cost options](docs/deploy_lowcost.md), or [deploy with the Azure free trial](docs/deploy_freetrial.md).\n1. Run `azd up` - This will provision Azure resources and deploy this sample to those resources, including building the search index based on the files found in the `./data` folder.\n    - **Important**: Beware that the resources created by this command will incur immediate costs, primarily from the AI Search resource. These resources may accrue costs even if you interrupt the command before it is fully executed. You can run `azd down` or delete the resources manually to avoid unnecessary spending.\n    - You will be prompted to select two locations, one for the majority of resources and one for the OpenAI resource, which is currently a short list. That location list is based on the [OpenAI model availability table](https://learn.microsoft.com/azure/cognitive-services/openai/concepts/models#model-summary-table-and-region-availability) and may become outdated as availability changes.\n1. After the application has been successfully deployed you will see a URL printed to the console.  Click that URL to interact with the application in your browser.\nIt will look like the following:\n\n!['Output from running azd up'](docs/images/endpoint.png)\n\n> NOTE: It may take 5-10 minutes after you see 'SUCCESS' for the application to be fully deployed. If you see a \"Python Developer\" welcome screen or an error page, then wait a bit and refresh the page.\n\n### Deploying again\n\nIf you've only changed the backend/frontend code in the `app` folder, then you don't need to re-provision the Azure resources. You can just run:\n\n```shell\nazd deploy\n```\n\nIf you've changed the infrastructure files (`infra` folder or `azure.yaml`), then you'll need to re-provision the Azure resources. You can do that by running:\n\n```shell\nazd up\n```\n\n## Running the development server\n\nYou can only run a development server locally **after** having successfully run the `azd up` command. If you haven't yet, follow the [deploying](#deploying) steps above.\n\n1. Run `azd auth login` if you have not logged in recently.\n2. Start the server:\n\n  Windows:\n\n  ```shell\n  ./app/start.ps1\n  ```\n\n  Linux/Mac:\n\n  ```shell\n  ./app/start.sh\n  ```\n\n  VS Code: Run the \"VS Code Task: Start App\" task.\n\nIt's also possible to enable hotloading or the VS Code debugger.\nSee more tips in [the local development guide](docs/localdev.md).\n\n## Using the app\n\n- In Azure: navigate to the Azure WebApp deployed by azd. The URL is printed out when azd completes (as \"Endpoint\"), or you can find it in the Azure portal.\n- Running locally: navigate to 127.0.0.1:50505\n\nOnce in the web app:\n\n- Try different topics in chat or Q&A context. For chat, try follow up questions, clarifications, ask to simplify or elaborate on answer, etc.\n- Explore citations and sources\n- Click on \"settings\" to try different options, tweak prompts, etc.\n\n## Clean up\n\nTo clean up all the resources created by this sample:\n\n1. Run `azd down`\n2. When asked if you are sure you want to continue, enter `y`\n3. When asked if you want to permanently delete the resources, enter `y`\n\nThe resource group and all the resources will be deleted.\n\n## Guidance\n\nYou can find extensive documentation in the [docs](docs/README.md) folder:\n\n- Deploying:\n  - [Troubleshooting deployment](docs/deploy_troubleshooting.md)\n    - [Debugging the app on App Service](docs/appservice.md)\n  - [Deploying with azd: deep dive and CI/CD](docs/azd.md)\n  - [Deploying with existing Azure resources](docs/deploy_existing.md)\n  - [Deploying from a free account](docs/deploy_lowcost.md)\n  - [Enabling optional features](docs/deploy_features.md)\n    - [Login and access control](docs/login_and_acl.md)\n    - [GPT-4 Turbo with Vision](docs/gpt4v.md)\n    - [Private endpoints](docs/deploy_private.md)\n  - [Sharing deployment environments](docs/sharing_environments.md)\n- [Local development](docs/localdev.md)\n- [Customizing the app](docs/customization.md)\n- [Data ingestion](docs/data_ingestion.md)\n- [Monitoring with Application Insights](docs/monitoring.md)\n- [Productionizing](docs/productionizing.md)\n- [Alternative RAG chat samples](docs/other_samples.md)\n\n### Resources\n\n- [📖 Docs: Get started using the chat with your data sample](https://learn.microsoft.com/azure/developer/python/get-started-app-chat-template?toc=%2Fazure%2Fdeveloper%2Fai%2Ftoc.json&bc=%2Fazure%2Fdeveloper%2Fai%2Fbreadcrumb%2Ftoc.json&tabs=github-codespaces)\n- [📖 Blog: Revolutionize your Enterprise Data with ChatGPT: Next-gen Apps w/ Azure OpenAI and AI Search](https://techcommunity.microsoft.com/blog/azure-ai-services-blog/revolutionize-your-enterprise-data-with-chatgpt-next-gen-apps-w-azure-openai-and/3762087)\n- [📖 Docs: Azure AI Search](https://learn.microsoft.com/azure/search/search-what-is-azure-search)\n- [📖 Docs: Azure OpenAI Service](https://learn.microsoft.com/azure/cognitive-services/openai/overview)\n- [📖 Docs: Comparing Azure OpenAI and OpenAI](https://learn.microsoft.com/azure/cognitive-services/openai/overview#comparing-azure-openai-and-openai/)\n- [📖 Blog: Access Control in Generative AI applications with Azure AI Search](https://techcommunity.microsoft.com/blog/azure-ai-services-blog/access-control-in-generative-ai-applications-with-azure-ai-search/3956408)\n- [📺 Talk: Quickly build and deploy OpenAI apps on Azure, infused with your own data](https://www.youtube.com/watch?v=j8i-OM5kwiY)\n- [📺 Talks: AI Chat App Hack series](https://www.youtube.com/playlist?list=PL5lwDBUC0ag6_dGZst5m3G72ewfwXLcXV)\n\n### Getting help\n\nThis is a sample built to demonstrate the capabilities of modern Generative AI apps and how they can be built in Azure.\nFor help with deploying this sample, please post in [GitHub Issues](/issues). If you're a Microsoft employee, you can also post in [our Teams channel](https://aka.ms/azai-python-help).\n\nThis repository is supported by the maintainers, _not_ by Microsoft Support,\nso please use the support mechanisms described above, and we will do our best to help you out.\n\n### Note\n\n>Note: The PDF documents used in this demo contain information generated using a language model (Azure OpenAI Service). The information contained in these documents is only for demonstration purposes and does not reflect the opinions or beliefs of Microsoft. Microsoft makes no representations or warranties of any kind, express or implied, about the completeness, accuracy, reliability, suitability or availability with respect to the information contained in this document. All rights reserved to Microsoft.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6845703125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.5 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](<https://docs.microsoft.com/previous-versions/tn-archive/cc751383(v=technet.10)>), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com). If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/msrc/pgp-key-msrc).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc).\n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n- Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n- Full paths of source file(s) related to the manifestation of the issue\n- The location of the affected source code (tag/branch/commit or direct URL)\n- Any special configuration required to reproduce the issue\n- Step-by-step instructions to reproduce the issue\n- Proof-of-concept or exploit code (if possible)\n- Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/msrc/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure.yaml",
          "type": "blob",
          "size": 4.623046875,
          "content": "# yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json\n\nname: azure-search-openai-demo\nmetadata:\n  template: azure-search-openai-demo@0.0.2-beta\nservices:\n  backend:\n    project: ./app/backend\n    language: py\n    # Please check docs/azure_container_apps.md for more information on how to deploy to Azure Container Apps\n    host: containerapp\n    docker:\n      remoteBuild: true\n    # Please check docs/azure_app_service.md for more information on how to deploy to Azure App Service\n    # host: appservice\n    hooks:\n      # This hook is called when App Service is the host\n      prepackage:\n        windows:\n          shell: pwsh\n          run:  cd ../frontend;npm install;npm run build\n          interactive: false\n          continueOnError: false\n        posix:\n          shell: sh\n          run:  cd ../frontend;npm install;npm run build\n          interactive: false\n          continueOnError: false\n      # This hook is called when Azure Container Apps is the host\n      prebuild:\n        windows:\n          shell: pwsh\n          run:  cd ../frontend;npm install;npm run build\n          interactive: false\n          continueOnError: false\n        posix:\n          shell: sh\n          run:  cd ../frontend;npm install;npm run build\n          interactive: false\n          continueOnError: false\npipeline:\n  variables:\n      - AZURE_OPENAI_SERVICE\n      - AZURE_OPENAI_API_VERSION\n      - AZURE_OPENAI_RESOURCE_GROUP\n      - AZURE_DOCUMENTINTELLIGENCE_SERVICE\n      - AZURE_DOCUMENTINTELLIGENCE_RESOURCE_GROUP\n      - AZURE_DOCUMENTINTELLIGENCE_SKU\n      - AZURE_DOCUMENTINTELLIGENCE_LOCATION\n      - AZURE_SEARCH_INDEX\n      - AZURE_SEARCH_SERVICE\n      - AZURE_SEARCH_SERVICE_RESOURCE_GROUP\n      - AZURE_SEARCH_SERVICE_LOCATION\n      - AZURE_SEARCH_SERVICE_SKU\n      - AZURE_SEARCH_QUERY_LANGUAGE\n      - AZURE_SEARCH_QUERY_SPELLER\n      - AZURE_SEARCH_SEMANTIC_RANKER\n      - AZURE_STORAGE_ACCOUNT\n      - AZURE_STORAGE_RESOURCE_GROUP\n      - AZURE_STORAGE_SKU\n      - AZURE_APP_SERVICE\n      - AZURE_APP_SERVICE_SKU\n      - AZURE_APP_SERVICE_PLAN\n      - AZURE_OPENAI_CHATGPT_MODEL\n      - AZURE_OPENAI_CHATGPT_DEPLOYMENT\n      - AZURE_OPENAI_CHATGPT_DEPLOYMENT_CAPACITY\n      - AZURE_OPENAI_CHATGPT_DEPLOYMENT_VERSION\n      - AZURE_OPENAI_CHATGPT_DEPLOYMENT_SKU\n      - AZURE_OPENAI_EMB_MODEL_NAME\n      - AZURE_OPENAI_EMB_DEPLOYMENT\n      - AZURE_OPENAI_EMB_DEPLOYMENT_CAPACITY\n      - AZURE_OPENAI_EMB_DEPLOYMENT_VERSION\n      - AZURE_OPENAI_EMB_DEPLOYMENT_SKU\n      - AZURE_OPENAI_EMB_DIMENSIONS\n      - AZURE_OPENAI_GPT4V_MODEL\n      - AZURE_OPENAI_GPT4V_DEPLOYMENT\n      - AZURE_OPENAI_GPT4V_DEPLOYMENT_CAPACITY\n      - AZURE_OPENAI_GPT4V_DEPLOYMENT_VERSION\n      - AZURE_OPENAI_GPT4V_DEPLOYMENT_SKU\n      - OPENAI_HOST\n      - OPENAI_API_KEY\n      - OPENAI_ORGANIZATION\n      - AZURE_USE_APPLICATION_INSIGHTS\n      - AZURE_APPLICATION_INSIGHTS\n      - AZURE_APPLICATION_INSIGHTS_DASHBOARD\n      - AZURE_LOG_ANALYTICS\n      - USE_VECTORS\n      - USE_GPT4V\n      - AZURE_VISION_ENDPOINT\n      - VISION_SECRET_NAME\n      - AZURE_COMPUTER_VISION_SERVICE\n      - AZURE_COMPUTER_VISION_RESOURCE_GROUP\n      - AZURE_COMPUTER_VISION_LOCATION\n      - AZURE_COMPUTER_VISION_SKU\n      - ENABLE_LANGUAGE_PICKER\n      - USE_SPEECH_INPUT_BROWSER\n      - USE_SPEECH_OUTPUT_BROWSER\n      - USE_SPEECH_OUTPUT_AZURE\n      - AZURE_SPEECH_SERVICE\n      - AZURE_SPEECH_SERVICE_RESOURCE_GROUP\n      - AZURE_SPEECH_SERVICE_LOCATION\n      - AZURE_SPEECH_SERVICE_SKU\n      - AZURE_SPEECH_SERVICE_VOICE\n      - AZURE_KEY_VAULT_NAME\n      - AZURE_USE_AUTHENTICATION\n      - AZURE_ENFORCE_ACCESS_CONTROL\n      - AZURE_ENABLE_GLOBAL_DOCUMENT_ACCESS\n      - AZURE_AUTH_TENANT_ID\n      - AZURE_SERVER_APP_ID\n      - AZURE_CLIENT_APP_ID\n      - ALLOWED_ORIGIN\n      - AZURE_ADLS_GEN2_STORAGE_ACCOUNT\n      - AZURE_ADLS_GEN2_FILESYSTEM_PATH\n      - AZURE_ADLS_GEN2_FILESYSTEM\n      - DEPLOYMENT_TARGET\n      - AZURE_CONTAINER_APPS_WORKLOAD_PROFILE\n      - USE_CHAT_HISTORY_BROWSER\n      - USE_MEDIA_DESCRIBER_AZURE_CU\n  secrets:\n      - AZURE_SERVER_APP_SECRET\n      - AZURE_CLIENT_APP_SECRET\nhooks:\n    preprovision:\n      windows:\n        shell: pwsh\n        run: ./scripts/auth_init.ps1\n        interactive: true\n        continueOnError: false\n      posix:\n        shell: sh\n        run: ./scripts/auth_init.sh\n        interactive: true\n        continueOnError: false\n    postprovision:\n      windows:\n        shell: pwsh\n        run: ./scripts/auth_update.ps1;./scripts/prepdocs.ps1\n        interactive: true\n        continueOnError: false\n      posix:\n        shell: sh\n        run: ./scripts/auth_update.sh;./scripts/prepdocs.sh\n        interactive: true\n        continueOnError: false\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "infra",
          "type": "tree",
          "content": null
        },
        {
          "name": "locustfile.py",
          "type": "blob",
          "size": 5.2158203125,
          "content": "import random\nimport time\n\nfrom locust import HttpUser, between, task\n\n\nclass ChatUser(HttpUser):\n    wait_time = between(5, 20)\n\n    @task\n    def ask_question(self):\n        self.client.get(\"/\")\n        time.sleep(5)\n        self.client.post(\n            \"/chat\",\n            json={\n                \"messages\": [\n                    {\n                        \"content\": random.choice(\n                            [\n                                \"What is included in my Northwind Health Plus plan that is not in standard?\",\n                                \"What does a Product Manager do?\",\n                                \"What happens in a performance review?\",\n                                \"Whats your whistleblower policy?\",\n                            ]\n                        ),\n                        \"role\": \"user\",\n                    },\n                ],\n                \"context\": {\n                    \"overrides\": {\n                        \"retrieval_mode\": \"hybrid\",\n                        \"semantic_ranker\": True,\n                        \"semantic_captions\": False,\n                        \"top\": 3,\n                        \"suggest_followup_questions\": False,\n                    },\n                },\n            },\n        )\n        time.sleep(5)\n        self.client.post(\n            \"/chat\",\n            json={\n                \"messages\": [\n                    {\"content\": \"What happens in a performance review?\", \"role\": \"user\"},\n                    {\n                        \"content\": \"During a performance review, employees will receive feedback on their performance over the past year, including both successes and areas for improvement. The feedback will be provided by the employee's supervisor and is intended to help the employee develop and grow in their role [employee_handbook-3.pdf]. The review is a two-way dialogue between the employee and their manager, so employees are encouraged to be honest and open during the process [employee_handbook-3.pdf]. The employee will also have the opportunity to discuss their goals and objectives for the upcoming year [employee_handbook-3.pdf]. A written summary of the performance review will be provided to the employee, which will include a rating of their performance, feedback, and goals and objectives for the upcoming year [employee_handbook-3.pdf].\",\n                        \"role\": \"assistant\",\n                    },\n                    {\"content\": \"Does my plan cover eye exams?\", \"role\": \"user\"},\n                ],\n                \"context\": {\n                    \"overrides\": {\n                        \"retrieval_mode\": \"hybrid\",\n                        \"semantic_ranker\": True,\n                        \"semantic_captions\": False,\n                        \"top\": 3,\n                        \"suggest_followup_questions\": False,\n                    },\n                },\n            },\n        )\n\n\nclass ChatVisionUser(HttpUser):\n    wait_time = between(5, 20)\n\n    @task\n    def ask_question(self):\n        self.client.get(\"/\")\n        time.sleep(5)\n        self.client.post(\n            \"/chat/stream\",\n            json={\n                \"messages\": [\n                    {\n                        \"content\": \"Can you identify any correlation between oil prices and stock market trends?\",\n                        \"role\": \"user\",\n                    }\n                ],\n                \"context\": {\n                    \"overrides\": {\n                        \"top\": 3,\n                        \"temperature\": 0.3,\n                        \"minimum_reranker_score\": 0,\n                        \"minimum_search_score\": 0,\n                        \"retrieval_mode\": \"hybrid\",\n                        \"semantic_ranker\": True,\n                        \"semantic_captions\": False,\n                        \"suggest_followup_questions\": False,\n                        \"use_oid_security_filter\": False,\n                        \"use_groups_security_filter\": False,\n                        \"vector_fields\": [\"embedding\", \"imageEmbedding\"],\n                        \"use_gpt4v\": True,\n                        \"gpt4v_input\": \"textAndImages\",\n                    }\n                },\n                \"session_state\": None,\n            },\n        )\n        time.sleep(5)\n        self.client.post(\n            \"/chat/stream\",\n            json={\n                \"messages\": [\n                    {\"content\": \"Compare the impact of interest rates and GDP in financial markets.\", \"role\": \"user\"}\n                ],\n                \"context\": {\n                    \"overrides\": {\n                        \"top\": 3,\n                        \"temperature\": 0.3,\n                        \"minimum_reranker_score\": 0,\n                        \"minimum_search_score\": 0,\n                        \"retrieval_mode\": \"hybrid\",\n                        \"semantic_ranker\": True,\n                        \"semantic_captions\": False,\n                        \"suggest_followup_questions\": False,\n                        \"use_oid_security_filter\": False,\n                        \"use_groups_security_filter\": False,\n                        \"vector_fields\": [\"embedding\", \"imageEmbedding\"],\n                        \"use_gpt4v\": True,\n                        \"gpt4v_input\": \"textAndImages\",\n                    }\n                },\n                \"session_state\": None,\n            },\n        )\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 0.1005859375,
          "content": "{\n  \"name\": \"azure-search-openai-demo\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {}\n}\n"
        },
        {
          "name": "ps-rule.yaml",
          "type": "blob",
          "size": 0.21875,
          "content": "# YAML: Set the AZURE_BICEP_FILE_EXPANSION configuration option to enable expansion\nconfiguration:\n  AZURE_BICEP_FILE_EXPANSION: true\n  AZURE_DEPLOYMENT_NONSENSITIVE_PARAMETER_NAMES:\n    - resourceToken\n    - migrationToken\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.7265625,
          "content": "[tool.ruff]\ntarget-version = \"py38\"\nlint.select = [\"E\", \"F\", \"I\", \"UP\"]\nlint.ignore = [\"E501\", \"E701\"] # line too long, multiple statements on one line\nsrc = [\"app/backend\", \"scripts\"]\n\n[tool.ruff.lint.isort]\nknown-local-folder = [\"scripts\"]\n\n[tool.black]\nline-length = 120\n\n[tool.pytest.ini_options]\naddopts = \"-ra\"\npythonpath = [\"app/backend\", \"scripts\"]\n\n[tool.coverage.paths]\nsource = [\"scripts\", \"app\"]\n\n[tool.coverage.report]\nshow_missing = true\n\n[tool.mypy]\ncheck_untyped_defs = true\npython_version = 3.9\n\n[[tool.mypy.overrides]]\nmodule = [\n    \"msal.*\",\n    \"msgraph.*\",\n    \"kiota_abstractions.*\",\n    \"kiota.*\",\n    \"azure.cognitiveservices.*\",\n    \"azure.cognitiveservices.speech.*\",\n    \"pymupdf.*\",\n]\nignore_missing_imports = true\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.1826171875,
          "content": "-r app/backend/requirements.txt\nruff\nblack\npytest\npytest-asyncio\npytest-snapshot\ncoverage\nplaywright\npytest-cov\npytest-playwright\npytest-snapshot\npre-commit\nlocust\npip-tools\nmypy==1.13.0\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}