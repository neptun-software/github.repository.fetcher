{
  "metadata": {
    "timestamp": 1736560966546,
    "page": 719,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "USArmyResearchLab/Dshell",
      "stars": 5459,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.046875,
          "content": "*.pyc\n__pycache__\nDshell.egg-info\nbuild/\n.idea/\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6591796875,
          "content": "FROM python:3-alpine as builder\n\nCOPY . /src\n\nWORKDIR /src\n\nARG OUI_SRC=\"http://standards-oui.ieee.org/oui/oui.txt\"\n\nENV VIRTUAL_ENV=\"/opt/venv\"\n\nRUN apk add cargo curl g++ gcc rust libpcap-dev libffi-dev \\\n    && python3 -m venv \"${VIRTUAL_ENV}\" \\\n    && curl --location --silent --output \"/src/dshell/data/oui.txt\" \"${OUI_SRC}\"\n\nENV PATH=\"${VIRTUAL_ENV}/bin:${PATH}\"\n\nRUN pip install --upgrade pip wheel && pip install .\n\nFROM python:3-alpine\n\nENV VIRTUAL_ENV=\"/opt/venv\"\n\nCOPY --from=builder \"${VIRTUAL_ENV}/\" \"${VIRTUAL_ENV}/\"\n\nRUN apk add --no-cache bash libstdc++ libpcap\n\nVOLUME [\"/data\"]\n\nWORKDIR \"/data\"\n\nENV PATH=\"${VIRTUAL_ENV}/bin:${PATH}\"\n\nENTRYPOINT [\"dshell\"]\n"
        },
        {
          "name": "Dshell-Training-Pack-0.1.tar.gz",
          "type": "blob",
          "size": 1.87890625,
          "content": null
        },
        {
          "name": "Dshell_Developer_Guide.pdf",
          "type": "blob",
          "size": 595.3447265625,
          "content": null
        },
        {
          "name": "Dshell_User_Guide.pdf",
          "type": "blob",
          "size": 736.5849609375,
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.3623046875,
          "content": "Â© (2020) United States Government, as represented by the Secretary of the Army. All rights reserved.\n\nICF Incorporated, L.L.C. contributed to the development of Dshell (Python 3).\n\nBecause the project utilizes code licensed from contributors and other third parties, it therefore is licensed under the MIT License. http://opensource.org/licenses/mit-license.php. Under that license, permission is granted free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the conditions that any appropriate copyright notices and this permission notice are included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 12.1630859375,
          "content": "# Dshell\nAn extensible network forensic analysis framework. Enables rapid development of plugins to support the dissection of network packet captures.\n\nKey features:\n* Deep packet analysis using specialized plugins\n* Robust stream reassembly\n* IPv4 and IPv6 support\n* Multiple user-selectable output formats and the ability to create custom output handlers\n* Chainable plugins\n* Parallel processing option to divide the handling of data source into separate Python processes\n* Enables development of external plugin packs to share and install new externally developed plugins without overlapping the core Dshell plugin directories\n\n## Guides\n* [Dshell User Guide](Dshell_User_Guide.pdf) \n  * A guide to installation as well as both basic and advanced analysis with examples\n  * Helps new and experienced end users with using and understanding the decoder-shell (Dshell) framework\n* [Dshell Developer Guide](Dshell_Developer_Guide.pdf) \n  * A guide to plugin development with basic examples, as well as core function and class definitions, and an overview of data flow\n  * Helps end users develop new, custom Dshell plugins as well as modify existing plugins\n  \n## Requirements\n* Linux (developed on Ubuntu 20.04 LTS)\n* Python 3 (developed with Python 3.8.10)\n* [pypacker](https://gitlab.com/mike01/pypacker)\n* [pcapy-ng](https://github.com/stamparm/pcapy-ng/)\n* [pyOpenSSL](https://github.com/pyca/pyopenssl)\n* [geoip2](https://github.com/maxmind/GeoIP2-python)\n  * [MaxMind GeoIP2 data sets](https://dev.maxmind.com/geoip/geolite2-free-geolocation-data)\n    * Used to map IP addresses to country codes\n    * See Installation section for configuration \n\n## Optional\n* [oui.txt](http://standards-oui.ieee.org/oui.txt)\n  * used by some plugins that handle MAC addresses\n  * place in &lt;dshell&gt;/data/\n* [elasticsearch](https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html)\n  * used in the elasticout output module\n  * only necessary if planning to use elasticsearch to store output\n* [pyJA3](https://github.com/salesforce/ja3/tree/master/python)\n  * used in the tls plugin\n\n## Installation\n\n1. Install Dshell with pip\n  * `python3 -m pip install Dshell/` OR `python3 -m pip install <Dshell-tarball>`\n2. Configure geoip2 by placing the MaxMind GeoLite2 data set files (GeoLite2-ASN.mmdb, GeoLite2-City.mmdb, GeoLite2-Country.mmdb) in [...]/site-packages/dshell/data/GeoIP/\n3. Run `dshell`. This should drop you into a `Dshell> ` prompt.\n\n## Basic Usage\n\n* `decode -l`\n  * This will list all available plugins, alongside basic information about them\n* `decode -h`\n  * Show generic command-line flags available to most plugins, such as the color blind friendly mode for all color output\n* `decode -p <plugin>`\n  * Display information about a plugin, including available command line flags\n* `decode -p <plugin> <pcap>`\n  * Run the selected plugin on a pcap or pcapng file\n* `decode -p <plugin1>+<plugin2> <pcap>`\n  * Chain two (or more) plugins together and run them on a pcap file\n* `decode -p <plugin> -i <interface>`\n  * Run the selected plugin live on an interface (may require superuser privileges)\n\n## Usage Examples\nShowing DNS lookups in [sample traffic](http://wiki.wireshark.org/SampleCaptures#General_.2F_Unsorted)\n\n```\nDshell> decode -p dns ~/pcap/dns.cap | sort\n[DNS] 2005-03-30 03:47:46    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 4146, TXT? google.com., TXT: b'\\x0fv=spf1 ptr ?all' **\n[DNS] 2005-03-30 03:47:50    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 63343, MX? google.com., MX: b'\\x00(\\x05smtp4\\xc0\\x0c', MX: b'\\x00\\n\\x05smtp5\\xc0\\x0c', MX: b'\\x00\\n\\x05smtp6\\xc0\\x0c', MX: b'\\x00\\n\\x05smtp1\\xc0\\x0c', MX: b'\\x00\\n\\x05smtp2\\xc0\\x0c', MX: b'\\x00(\\x05smtp3\\xc0\\x0c' **\n[DNS] 2005-03-30 03:47:59    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 18849, LOC? google.com. **\n[DNS] 2005-03-30 03:48:07    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 39867, PTR? 104.9.192.66.in-addr.arpa., PTR: 66-192-9-104.gen.twtelecom.net. **\n[DNS] 2005-03-30 03:49:18    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 30144, A? www.netbsd.org., A: 204.152.190.12 (ttl 82159s) **\n[DNS] 2005-03-30 03:49:35    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 61652, AAAA? www.netbsd.org., AAAA: 2001:4f8:4:7:2e0:81ff:fe52:9a6b (ttl 86400s) **\n[DNS] 2005-03-30 03:50:35    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 32569, AAAA? www.netbsd.org., AAAA: 2001:4f8:4:7:2e0:81ff:fe52:9a6b (ttl 86340s) **\n[DNS] 2005-03-30 03:50:44    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 36275, AAAA? www.google.com., CNAME: 'www.l.google.com.' **\n[DNS] 2005-03-30 03:50:54    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 56482, AAAA? www.l.google.com. **\n[DNS] 2005-03-30 03:51:35    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 48159, AAAA? www.example.com. **\n[DNS] 2005-03-30 03:51:46    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 9837, AAAA? www.example.notginh., NXDOMAIN **\n[DNS] 2005-03-30 03:52:17    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 65251, AAAA: 2001:4f8:0:2::d (ttl 600s), A: 204.152.184.88 (ttl 600s) **\n[DNS] 2005-03-30 03:52:17    192.168.170.8:32796 --   192.168.170.20:53    ** ID: 23123, PTR? 1.0.0.127.in-addr.arpa., PTR: localhost. **\n[DNS] 2005-03-30 03:52:17    192.168.170.8:32797 --   192.168.170.20:53    ** ID: 8330, NS: b'\\x06ns-ext\\x04nrt1\\xc0\\x0c', NS: b'\\x06ns-ext\\x04sth1\\xc0\\x0c', NS: b'\\x06ns-ext\\xc0\\x0c', NS: b'\\x06ns-ext\\x04lga1\\xc0\\x0c' **\n[DNS] 2005-03-30 03:52:17   192.168.170.56:1707  --      217.13.4.24:53    ** ID: 12910, SRV? _ldap._tcp.Default-First-Site-Name._sites.dc._msdcs.utelsystems.local., NXDOMAIN **\n[DNS] 2005-03-30 03:52:17   192.168.170.56:1708  --      217.13.4.24:53    ** ID: 61793, SRV? _ldap._tcp.dc._msdcs.utelsystems.local., NXDOMAIN **\n[DNS] 2005-03-30 03:52:17   192.168.170.56:1709  --      217.13.4.24:53    ** ID: 33633, SRV? _ldap._tcp.05b5292b-34b8-4fb7-85a3-8beef5fd2069.domains._msdcs.utelsystems.local., NXDOMAIN **\n[DNS] 2005-03-30 03:52:17   192.168.170.56:1710  --      217.13.4.24:53    ** ID: 53344, A? GRIMM.utelsystems.local., NXDOMAIN **\n[DNS] 2005-03-30 03:52:25   192.168.170.56:1711  --      217.13.4.24:53    ** ID: 30307, A? GRIMM.utelsystems.local., NXDOMAIN **\n```\n\nFollowing and reassembling a stream in [sample traffic](http://wiki.wireshark.org/SampleCaptures#General_.2F_Unsorted)\n\n```\nDshell> decode -p followstream ~/pcap/v6-http.cap \nConnection 1 (TCP)\nStart: 2007-08-05 15:16:44.189851\nEnd:   2007-08-05 15:16:44.219460\n2001:6f8:102d:0:2d0:9ff:fee3:e8de: 59201 -> 2001:6f8:900:7c0::2:    80 (300 bytes)\n2001:6f8:900:7c0::2:    80 -> 2001:6f8:102d:0:2d0:9ff:fee3:e8de: 59201 (2379 bytes)\n\nGET / HTTP/1.0\nHost: cl-1985.ham-01.de.sixxs.net\nAccept: text/html, text/plain, text/css, text/sgml, */*;q=0.01\nAccept-Encoding: gzip, bzip2\nAccept-Language: en\nUser-Agent: Lynx/2.8.6rel.2 libwww-FM/2.14 SSL-MM/1.4.1 OpenSSL/0.9.8b\n\n\n\nHTTP/1.1 200 OK\nDate: Sun, 05 Aug 2007 19:16:44 GMT\nServer: Apache\nContent-Length: 2121\nConnection: close\nContent-Type: text/html\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<html>\n <head>\n  <title>Index of /</title>\n </head>\n <body>\n<h1>Index of /</h1>\n<pre><img src=\"/icons/blank.gif\" alt=\"Icon \"> <a href=\"?C=N;O=D\">Name</a>                    <a href=\"?C=M;O=A\">Last modified</a>      <a href=\"?C=S;O=A\">Size</a>  <a href=\"?C=D;O=A\">Description</a><hr><img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"202-vorbereitung/\">202-vorbereitung/</a>       06-Jul-2007 14:31    -   \n<img src=\"/icons/layout.gif\" alt=\"[   ]\"> <a href=\"Efficient_Video_on_demand_over_Multicast.pdf\">Efficient_Video_on_d..&gt;</a> 19-Dec-2006 03:17  291K  \n<img src=\"/icons/unknown.gif\" alt=\"[   ]\"> <a href=\"Welcome%20Stranger!!!\">Welcome Stranger!!!</a>     28-Dec-2006 03:46    0   \n<img src=\"/icons/text.gif\" alt=\"[TXT]\"> <a href=\"barschel.htm\">barschel.htm</a>            31-Jul-2007 02:21   44K  \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"bnd/\">bnd/</a>                    30-Dec-2006 08:59    -   \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"cia/\">cia/</a>                    28-Jun-2007 00:04    -   \n<img src=\"/icons/layout.gif\" alt=\"[   ]\"> <a href=\"cisco_ccna_640-801_command_reference_guide.pdf\">cisco_ccna_640-801_c..&gt;</a> 28-Dec-2006 03:48  236K  \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"doc/\">doc/</a>                    19-Sep-2006 01:43    -   \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"freenetproto/\">freenetproto/</a>           06-Dec-2006 09:00    -   \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"korrupt/\">korrupt/</a>                03-Jul-2007 11:57    -   \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"mp3_technosets/\">mp3_technosets/</a>         04-Jul-2007 08:56    -   \n<img src=\"/icons/text.gif\" alt=\"[TXT]\"> <a href=\"neues_von_rainald_goetz.htm\">neues_von_rainald_go..&gt;</a> 21-Mar-2007 23:27   31K  \n<img src=\"/icons/text.gif\" alt=\"[TXT]\"> <a href=\"neues_von_rainald_goetz0.htm\">neues_von_rainald_go..&gt;</a> 21-Mar-2007 23:29   36K  \n<img src=\"/icons/layout.gif\" alt=\"[   ]\"> <a href=\"pruef.pdf\">pruef.pdf</a>               28-Dec-2006 07:48   88K  \n<hr></pre>\n</body></html>\n```\n\nChaining plugins to view flow data for a specific country code in [sample traffic](http://wiki.wireshark.org/SampleCaptures#General_.2F_Unsorted) (note: TCP handshakes are not included in the packet count)\n\n```\nDshell> decode -p country+netflow --country_code=JP ~/pcap/SkypeIRC.cap\n2006-08-25 15:32:20.766761       192.168.1.2 ->  202.232.205.123  (-- -> JP)   UDP   60583   33438     1      0       64        0  0.0000s\n2006-08-25 15:32:20.634046       192.168.1.2 ->  202.232.205.123  (-- -> JP)   UDP   60583   33435     1      0       64        0  0.0000s\n2006-08-25 15:32:20.747503       192.168.1.2 ->  202.232.205.123  (-- -> JP)   UDP   60583   33437     1      0       64        0  0.0000s\n2006-08-25 15:32:20.651501       192.168.1.2 ->  202.232.205.123  (-- -> JP)   UDP   60583   33436     1      0       64        0  0.0000s\n```\n\nCollecting DNS traffic from several files and storing it in a new pcap file.\n\n```\nDshell> decode -p dns+pcapwriter --pcapwriter_outfile=test.pcap ~/pcap/*.cap > /dev/null\nDshell> tcpdump -nnr test.pcap | head\nreading from file test.pcap, link-type EN10MB (Ethernet)\n15:36:08.670569 IP 192.168.1.2.2131 > 192.168.1.1.53: 40209+ A? ui.skype.com. (30)\n15:36:08.670687 IP 192.168.1.2.2131 > 192.168.1.1.53: 40210+ AAAA? ui.skype.com. (30)\n15:36:08.674022 IP 192.168.1.1.53 > 192.168.1.2.2131: 40209- 1/0/0 A 212.72.49.131 (46)\n15:36:09.011208 IP 192.168.1.1.53 > 192.168.1.2.2131: 40210 0/1/0 (94)\n15:36:10.171350 IP 192.168.1.2.2131 > 192.168.1.1.53: 40210+ AAAA? ui.skype.com. (30)\n15:36:10.961350 IP 192.168.1.1.53 > 192.168.1.2.2131: 40210* 0/1/0 (85)\n15:36:10.961608 IP 192.168.1.2.2131 > 192.168.1.1.53: 40211+ AAAA? ui.skype.com. (30)\n15:36:11.294333 IP 192.168.1.1.53 > 192.168.1.2.2131: 40211 0/1/0 (94)\n15:32:21.664798 IP 192.168.1.2.2130 > 192.168.1.1.53: 39862+ A? ui.skype.com. (30)\n15:32:21.664913 IP 192.168.1.2.2130 > 192.168.1.1.53: 39863+ AAAA? ui.skype.com. (30)\n```\n\nCollecting TFTP data and converting alerts to JSON format using [sample traffic](https://wiki.wireshark.org/SampleCaptures#TFTP)\n\n```\nDshell> decode -p tftp -O jsonout ~/pcap/tftp_*.pcap\n{\"ts\": 1367411051.972852, \"sip\": \"192.168.0.253\", \"sport\": 50618, \"dip\": \"192.168.0.10\", \"dport\": 3445, \"readwrite\": \"read\", \"filename\": \"rfc1350.txt\", \"plugin\": \"tftp\", \"pcapfile\": \"/home/pcap/tftp_rrq.pcap\", \"data\": \"read  rfc1350.txt (24599 bytes) \"}\n{\"ts\": 1367053679.45274, \"sip\": \"192.168.0.1\", \"sport\": 57509, \"dip\": \"192.168.0.13\", \"dport\": 2087, \"readwrite\": \"write\", \"filename\": \"rfc1350.txt\", \"plugin\": \"tftp\", \"pcapfile\": \"/home/pcap/tftp_wrq.pcap\", \"data\": \"write rfc1350.txt (24599 bytes) \"}\n```\n\nRunning a plugin within a separate Python script using [sample traffic](https://wiki.wireshark.org/SampleCaptures#TFTP)\n\n```\n# Import required Dshell libraries\nimport dshell.decode as decode\nimport dshell.plugins.tftp.tftp as tftp\n\n# Instantiate plugin\nplugin = tftp.DshellPlugin()\n# Define plugin-specific arguments, if needed\ndargs = {plugin: {\"rip\": True, \"outdir\": \"/tmp/\"}}\n# Add plugin(s) to plugin chain\ndecode.plugin_chain = [plugin]\n# Run decode main function with all other arguments\ndecode.main(\n    debug=True,\n    files=[\"/home/user/pcap/tftp_rrq.pcap\", \"/home/user/pcap/tftp_wrq.pcap\"],\n    plugin_args=dargs\n)\n```\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.162109375,
          "content": "# Dshell\nAn extensible network forensic analysis framework. Enables rapid development of plugins to support the dissection of network packet captures.\n\nKey features:\n* Deep packet analysis using specialized plugins\n* Robust stream reassembly\n* IPv4 and IPv6 support\n* Multiple user-selectable output formats and the ability to create custom output handlers\n* Chainable plugins\n* Parallel processing option to divide the handling of data source into separate Python processes\n* Enables development of external plugin packs to share and install new externally developed plugins without overlapping the core Dshell plugin directories\n\n## Guides\n* [Dshell User Guide](Dshell_User_Guide.pdf) \n  * A guide to installation as well as both basic and advanced analysis with examples\n  * Helps new and experienced end users with using and understanding the decoder-shell (Dshell) framework\n* [Dshell Developer Guide](Dshell_Developer_Guide.pdf) \n  * A guide to plugin development with basic examples, as well as core function and class definitions, and an overview of data flow\n  * Helps end users develop new, custom Dshell plugins as well as modify existing plugins\n\n## Requirements\n* Linux (developed on Ubuntu 20.04 LTS)\n* Python 3 (developed with Python 3.8.10)\n* [pypacker](https://gitlab.com/mike01/pypacker)\n* [pcapy-ng](https://github.com/stamparm/pcapy-ng/)\n* [pyOpenSSL](https://github.com/pyca/pyopenssl)\n* [geoip2](https://github.com/maxmind/GeoIP2-python)\n  * [MaxMind GeoIP2 data sets](https://dev.maxmind.com/geoip/geolite2-free-geolocation-data)\n    * Used to map IP addresses to country codes\n    * See Installation section for configuration \n\n## Optional\n* [oui.txt](http://standards-oui.ieee.org/oui.txt)\n  * used by some plugins that handle MAC addresses\n  * place in &lt;dshell&gt;/data/\n* [elasticsearch](https://www.elastic.co/guide/en/elasticsearch/client/python-api/current/index.html)\n  * used in the elasticout output module\n  * only necessary if planning to use elasticsearch to store output\n* [pyJA3](https://github.com/salesforce/ja3/tree/master/python)\n  * used in the tls plugin\n\n## Installation\n\n1. Install Dshell with pip\n  * `python3 -m pip install Dshell/` OR `python3 -m pip install <Dshell-tarball>`\n2. Configure geoip2 by placing the MaxMind GeoLite2 data set files (GeoLite2-ASN.mmdb, GeoLite2-City.mmdb, GeoLite2-Country.mmdb) in [...]/site-packages/dshell/data/GeoIP/\n3. Run `dshell`. This should drop you into a `Dshell> ` prompt.\n\n## Basic Usage\n\n* `decode -l`\n  * This will list all available plugins, alongside basic information about them\n* `decode -h`\n  * Show generic command-line flags available to most plugins, such as the color blind friendly mode for all color output \n* `decode -p <plugin>`\n  * Display information about a plugin, including available command line flags\n* `decode -p <plugin> <pcap>`\n  * Run the selected plugin on a pcap or pcapng file\n* `decode -p <plugin1>+<plugin2> <pcap>`\n  * Chain two (or more) plugins together and run them on a pcap file\n* `decode -p <plugin> -i <interface>`\n  * Run the selected plugin live on an interface (may require superuser privileges)\n\n## Usage Examples\nShowing DNS lookups in [sample traffic](http://wiki.wireshark.org/SampleCaptures#General_.2F_Unsorted)\n\n```\nDshell> decode -p dns ~/pcap/dns.cap | sort\n[DNS] 2005-03-30 03:47:46    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 4146, TXT? google.com., TXT: b'\\x0fv=spf1 ptr ?all' **\n[DNS] 2005-03-30 03:47:50    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 63343, MX? google.com., MX: b'\\x00(\\x05smtp4\\xc0\\x0c', MX: b'\\x00\\n\\x05smtp5\\xc0\\x0c', MX: b'\\x00\\n\\x05smtp6\\xc0\\x0c', MX: b'\\x00\\n\\x05smtp1\\xc0\\x0c', MX: b'\\x00\\n\\x05smtp2\\xc0\\x0c', MX: b'\\x00(\\x05smtp3\\xc0\\x0c' **\n[DNS] 2005-03-30 03:47:59    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 18849, LOC? google.com. **\n[DNS] 2005-03-30 03:48:07    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 39867, PTR? 104.9.192.66.in-addr.arpa., PTR: 66-192-9-104.gen.twtelecom.net. **\n[DNS] 2005-03-30 03:49:18    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 30144, A? www.netbsd.org., A: 204.152.190.12 (ttl 82159s) **\n[DNS] 2005-03-30 03:49:35    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 61652, AAAA? www.netbsd.org., AAAA: 2001:4f8:4:7:2e0:81ff:fe52:9a6b (ttl 86400s) **\n[DNS] 2005-03-30 03:50:35    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 32569, AAAA? www.netbsd.org., AAAA: 2001:4f8:4:7:2e0:81ff:fe52:9a6b (ttl 86340s) **\n[DNS] 2005-03-30 03:50:44    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 36275, AAAA? www.google.com., CNAME: 'www.l.google.com.' **\n[DNS] 2005-03-30 03:50:54    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 56482, AAAA? www.l.google.com. **\n[DNS] 2005-03-30 03:51:35    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 48159, AAAA? www.example.com. **\n[DNS] 2005-03-30 03:51:46    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 9837, AAAA? www.example.notginh., NXDOMAIN **\n[DNS] 2005-03-30 03:52:17    192.168.170.8:32795 --   192.168.170.20:53    ** ID: 65251, AAAA: 2001:4f8:0:2::d (ttl 600s), A: 204.152.184.88 (ttl 600s) **\n[DNS] 2005-03-30 03:52:17    192.168.170.8:32796 --   192.168.170.20:53    ** ID: 23123, PTR? 1.0.0.127.in-addr.arpa., PTR: localhost. **\n[DNS] 2005-03-30 03:52:17    192.168.170.8:32797 --   192.168.170.20:53    ** ID: 8330, NS: b'\\x06ns-ext\\x04nrt1\\xc0\\x0c', NS: b'\\x06ns-ext\\x04sth1\\xc0\\x0c', NS: b'\\x06ns-ext\\xc0\\x0c', NS: b'\\x06ns-ext\\x04lga1\\xc0\\x0c' **\n[DNS] 2005-03-30 03:52:17   192.168.170.56:1707  --      217.13.4.24:53    ** ID: 12910, SRV? _ldap._tcp.Default-First-Site-Name._sites.dc._msdcs.utelsystems.local., NXDOMAIN **\n[DNS] 2005-03-30 03:52:17   192.168.170.56:1708  --      217.13.4.24:53    ** ID: 61793, SRV? _ldap._tcp.dc._msdcs.utelsystems.local., NXDOMAIN **\n[DNS] 2005-03-30 03:52:17   192.168.170.56:1709  --      217.13.4.24:53    ** ID: 33633, SRV? _ldap._tcp.05b5292b-34b8-4fb7-85a3-8beef5fd2069.domains._msdcs.utelsystems.local., NXDOMAIN **\n[DNS] 2005-03-30 03:52:17   192.168.170.56:1710  --      217.13.4.24:53    ** ID: 53344, A? GRIMM.utelsystems.local., NXDOMAIN **\n[DNS] 2005-03-30 03:52:25   192.168.170.56:1711  --      217.13.4.24:53    ** ID: 30307, A? GRIMM.utelsystems.local., NXDOMAIN **\n```\n\nFollowing and reassembling a stream in [sample traffic](http://wiki.wireshark.org/SampleCaptures#General_.2F_Unsorted)\n\n```\nDshell> decode -p followstream ~/pcap/v6-http.cap \nConnection 1 (TCP)\nStart: 2007-08-05 15:16:44.189851\nEnd:   2007-08-05 15:16:44.219460\n2001:6f8:102d:0:2d0:9ff:fee3:e8de: 59201 -> 2001:6f8:900:7c0::2:    80 (300 bytes)\n2001:6f8:900:7c0::2:    80 -> 2001:6f8:102d:0:2d0:9ff:fee3:e8de: 59201 (2379 bytes)\n\nGET / HTTP/1.0\nHost: cl-1985.ham-01.de.sixxs.net\nAccept: text/html, text/plain, text/css, text/sgml, */*;q=0.01\nAccept-Encoding: gzip, bzip2\nAccept-Language: en\nUser-Agent: Lynx/2.8.6rel.2 libwww-FM/2.14 SSL-MM/1.4.1 OpenSSL/0.9.8b\n\n\n\nHTTP/1.1 200 OK\nDate: Sun, 05 Aug 2007 19:16:44 GMT\nServer: Apache\nContent-Length: 2121\nConnection: close\nContent-Type: text/html\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 3.2 Final//EN\">\n<html>\n <head>\n  <title>Index of /</title>\n </head>\n <body>\n<h1>Index of /</h1>\n<pre><img src=\"/icons/blank.gif\" alt=\"Icon \"> <a href=\"?C=N;O=D\">Name</a>                    <a href=\"?C=M;O=A\">Last modified</a>      <a href=\"?C=S;O=A\">Size</a>  <a href=\"?C=D;O=A\">Description</a><hr><img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"202-vorbereitung/\">202-vorbereitung/</a>       06-Jul-2007 14:31    -   \n<img src=\"/icons/layout.gif\" alt=\"[   ]\"> <a href=\"Efficient_Video_on_demand_over_Multicast.pdf\">Efficient_Video_on_d..&gt;</a> 19-Dec-2006 03:17  291K  \n<img src=\"/icons/unknown.gif\" alt=\"[   ]\"> <a href=\"Welcome%20Stranger!!!\">Welcome Stranger!!!</a>     28-Dec-2006 03:46    0   \n<img src=\"/icons/text.gif\" alt=\"[TXT]\"> <a href=\"barschel.htm\">barschel.htm</a>            31-Jul-2007 02:21   44K  \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"bnd/\">bnd/</a>                    30-Dec-2006 08:59    -   \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"cia/\">cia/</a>                    28-Jun-2007 00:04    -   \n<img src=\"/icons/layout.gif\" alt=\"[   ]\"> <a href=\"cisco_ccna_640-801_command_reference_guide.pdf\">cisco_ccna_640-801_c..&gt;</a> 28-Dec-2006 03:48  236K  \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"doc/\">doc/</a>                    19-Sep-2006 01:43    -   \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"freenetproto/\">freenetproto/</a>           06-Dec-2006 09:00    -   \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"korrupt/\">korrupt/</a>                03-Jul-2007 11:57    -   \n<img src=\"/icons/folder.gif\" alt=\"[DIR]\"> <a href=\"mp3_technosets/\">mp3_technosets/</a>         04-Jul-2007 08:56    -   \n<img src=\"/icons/text.gif\" alt=\"[TXT]\"> <a href=\"neues_von_rainald_goetz.htm\">neues_von_rainald_go..&gt;</a> 21-Mar-2007 23:27   31K  \n<img src=\"/icons/text.gif\" alt=\"[TXT]\"> <a href=\"neues_von_rainald_goetz0.htm\">neues_von_rainald_go..&gt;</a> 21-Mar-2007 23:29   36K  \n<img src=\"/icons/layout.gif\" alt=\"[   ]\"> <a href=\"pruef.pdf\">pruef.pdf</a>               28-Dec-2006 07:48   88K  \n<hr></pre>\n</body></html>\n```\n\nChaining plugins to view flow data for a specific country code in [sample traffic](http://wiki.wireshark.org/SampleCaptures#General_.2F_Unsorted) (note: TCP handshakes are not included in the packet count)\n\n```\nDshell> decode -p country+netflow --country_code=JP ~/pcap/SkypeIRC.cap\n2006-08-25 15:32:20.766761       192.168.1.2 ->  202.232.205.123  (-- -> JP)   UDP   60583   33438     1      0       64        0  0.0000s\n2006-08-25 15:32:20.634046       192.168.1.2 ->  202.232.205.123  (-- -> JP)   UDP   60583   33435     1      0       64        0  0.0000s\n2006-08-25 15:32:20.747503       192.168.1.2 ->  202.232.205.123  (-- -> JP)   UDP   60583   33437     1      0       64        0  0.0000s\n2006-08-25 15:32:20.651501       192.168.1.2 ->  202.232.205.123  (-- -> JP)   UDP   60583   33436     1      0       64        0  0.0000s\n```\n\nCollecting DNS traffic from several files and storing it in a new pcap file.\n\n```\nDshell> decode -p dns+pcapwriter --pcapwriter_outfile=test.pcap ~/pcap/*.cap > /dev/null\nDshell> tcpdump -nnr test.pcap | head\nreading from file test.pcap, link-type EN10MB (Ethernet)\n15:36:08.670569 IP 192.168.1.2.2131 > 192.168.1.1.53: 40209+ A? ui.skype.com. (30)\n15:36:08.670687 IP 192.168.1.2.2131 > 192.168.1.1.53: 40210+ AAAA? ui.skype.com. (30)\n15:36:08.674022 IP 192.168.1.1.53 > 192.168.1.2.2131: 40209- 1/0/0 A 212.72.49.131 (46)\n15:36:09.011208 IP 192.168.1.1.53 > 192.168.1.2.2131: 40210 0/1/0 (94)\n15:36:10.171350 IP 192.168.1.2.2131 > 192.168.1.1.53: 40210+ AAAA? ui.skype.com. (30)\n15:36:10.961350 IP 192.168.1.1.53 > 192.168.1.2.2131: 40210* 0/1/0 (85)\n15:36:10.961608 IP 192.168.1.2.2131 > 192.168.1.1.53: 40211+ AAAA? ui.skype.com. (30)\n15:36:11.294333 IP 192.168.1.1.53 > 192.168.1.2.2131: 40211 0/1/0 (94)\n15:32:21.664798 IP 192.168.1.2.2130 > 192.168.1.1.53: 39862+ A? ui.skype.com. (30)\n15:32:21.664913 IP 192.168.1.2.2130 > 192.168.1.1.53: 39863+ AAAA? ui.skype.com. (30)\n```\n\nCollecting TFTP data and converting alerts to JSON format using [sample traffic](https://wiki.wireshark.org/SampleCaptures#TFTP)\n\n```\nDshell> decode -p tftp -O jsonout ~/pcap/tftp_*.pcap\n{\"ts\": 1367411051.972852, \"sip\": \"192.168.0.253\", \"sport\": 50618, \"dip\": \"192.168.0.10\", \"dport\": 3445, \"readwrite\": \"read\", \"filename\": \"rfc1350.txt\", \"plugin\": \"tftp\", \"pcapfile\": \"/home/pcap/tftp_rrq.pcap\", \"data\": \"read  rfc1350.txt (24599 bytes) \"}\n{\"ts\": 1367053679.45274, \"sip\": \"192.168.0.1\", \"sport\": 57509, \"dip\": \"192.168.0.13\", \"dport\": 2087, \"readwrite\": \"write\", \"filename\": \"rfc1350.txt\", \"plugin\": \"tftp\", \"pcapfile\": \"/home/pcap/tftp_wrq.pcap\", \"data\": \"write rfc1350.txt (24599 bytes) \"}\n```\n\nRunning a plugin within a separate Python script using [sample traffic](https://wiki.wireshark.org/SampleCaptures#TFTP)\n\n```\n# Import required Dshell libraries\nimport dshell.decode as decode\nimport dshell.plugins.tftp.tftp as tftp\n\n# Instantiate plugin\nplugin = tftp.DshellPlugin()\n# Define plugin-specific arguments, if needed\ndargs = {plugin: {\"rip\": True, \"outdir\": \"/tmp/\"}}\n# Add plugin(s) to plugin chain\ndecode.plugin_chain = [plugin]\n# Run decode main function with all other arguments\ndecode.main(\n    debug=True,\n    files=[\"/home/user/pcap/tftp_rrq.pcap\", \"/home/user/pcap/tftp_wrq.pcap\"],\n    plugin_args=dargs\n)\n```\n"
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "dshell",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.96484375,
          "content": "from setuptools import find_packages, setup\n\nsetup(\n    name=\"Dshell\",\n    version=\"3.2.3\",\n    author=\"USArmyResearchLab\",\n    description=\"An extensible network forensic analysis framework\",\n    url=\"https://github.com/USArmyResearchLab/Dshell\",\n    python_requires='>=3.8',\n    packages=find_packages(),\n    package_data={\n        \"dshell\": [\"data/dshellrc\", \"data/GeoIP/readme.txt\"],\n    },\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: POSIX :: Linux\",\n        \"Environment :: Console\",\n        \"Topic :: Security\",\n    ],\n    install_requires=[\n        \"geoip2\",\n        \"pcapy-ng\",\n        \"pypacker\",\n        \"pyopenssl\",\n        \"elasticsearch\",\n        \"tabulate\",\n    ],\n    entry_points={\n        \"console_scripts\": [\n            \"dshell-decode = dshell.decode:main_command_line\",\n        ],\n        \"dshell_plugins\": [],\n    },\n    scripts=[\n        \"scripts/dshell\",\n    ],\n)\n"
        }
      ]
    }
  ]
}