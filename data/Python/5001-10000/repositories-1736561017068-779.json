{
  "metadata": {
    "timestamp": 1736561017068,
    "page": 779,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "python-websockets/websockets",
      "stars": 5268,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1796875,
          "content": "*.pyc\n*.so\n.coverage\n.direnv/\n.envrc\n.idea/\n.mypy_cache/\n.tox/\n.vscode/\nbuild/\ncompliance/reports/\ndist/\ndocs/_build/\nexperiments/compression/corpus/\nhtmlcov/\nsrc/websockets.egg-info/\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.21875,
          "content": "version: 2\n\nbuild:\n  os: ubuntu-20.04\n  tools:\n    python: \"3.10\"\n  jobs:\n    post_checkout:\n      - git fetch --unshallow\n\nsphinx:\n  configuration: docs/conf.py\n\npython:\n   install:\n   - requirements: docs/requirements.txt\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1650390625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at aymeric DOT augustin AT fractalideas DOT com. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.478515625,
          "content": "Copyright (c) Aymeric Augustin and contributors\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n    * Neither the name of the copyright holder nor the names of its contributors\n      may be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.115234375,
          "content": "include LICENSE\ninclude src/websockets/py.typed\ninclude src/websockets/speedups.c  # required when BUILD_EXTENSION=no\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.755859375,
          "content": ".PHONY: default style types tests coverage maxi_cov build clean\n\nexport PYTHONASYNCIODEBUG=1\nexport PYTHONPATH=src\nexport PYTHONWARNINGS=default\n\nbuild:\n\tpython setup.py build_ext --inplace\n\nstyle:\n\truff format compliance src tests\n\truff check --fix compliance src tests\n\ntypes:\n\tmypy --strict src\n\ntests:\n\tpython -m unittest\n\ncoverage:\n\tcoverage run --source src/websockets,tests -m unittest\n\tcoverage html\n\tcoverage report --show-missing --fail-under=100\n\nmaxi_cov:\n\tpython tests/maxi_cov.py\n\tcoverage html\n\tcoverage report --show-missing --fail-under=100\n\nclean:\n\tfind src -name '*.so' -delete\n\tfind . -name '*.pyc' -delete\n\tfind . -name __pycache__ -delete\n\trm -rf .coverage .mypy_cache build compliance/reports dist docs/_build htmlcov MANIFEST src/websockets.egg-info\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 6.216796875,
          "content": ".. image:: logo/horizontal.svg\n   :width: 480px\n   :alt: websockets\n\n|licence| |version| |pyversions| |tests| |docs| |openssf|\n\n.. |licence| image:: https://img.shields.io/pypi/l/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |version| image:: https://img.shields.io/pypi/v/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |pyversions| image:: https://img.shields.io/pypi/pyversions/websockets.svg\n    :target: https://pypi.python.org/pypi/websockets\n\n.. |tests| image:: https://img.shields.io/github/checks-status/python-websockets/websockets/main?label=tests\n   :target: https://github.com/python-websockets/websockets/actions/workflows/tests.yml\n\n.. |docs| image:: https://img.shields.io/readthedocs/websockets.svg\n   :target: https://websockets.readthedocs.io/\n\n.. |openssf| image:: https://bestpractices.coreinfrastructure.org/projects/6475/badge\n   :target: https://bestpractices.coreinfrastructure.org/projects/6475\n\nWhat is ``websockets``?\n-----------------------\n\nwebsockets is a library for building WebSocket_ servers and clients in Python\nwith a focus on correctness, simplicity, robustness, and performance.\n\n.. _WebSocket: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API\n\nBuilt on top of ``asyncio``, Python's standard asynchronous I/O framework, the\ndefault implementation provides an elegant coroutine-based API.\n\nAn implementation on top of ``threading`` and a Sans-I/O implementation are also\navailable.\n\n`Documentation is available on Read the Docs. <https://websockets.readthedocs.io/>`_\n\n.. copy-pasted because GitHub doesn't support the include directive\n\nHere's an echo server with the ``asyncio`` API:\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import asyncio\n    from websockets.server import serve\n\n    async def echo(websocket):\n        async for message in websocket:\n            await websocket.send(message)\n\n    async def main():\n        async with serve(echo, \"localhost\", 8765):\n            await asyncio.get_running_loop().create_future()  # run forever\n\n    asyncio.run(main())\n\nHere's how a client sends and receives messages with the ``threading`` API:\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    from websockets.sync.client import connect\n\n    def hello():\n        with connect(\"ws://localhost:8765\") as websocket:\n            websocket.send(\"Hello world!\")\n            message = websocket.recv()\n            print(f\"Received: {message}\")\n\n    hello()\n\n\nDoes that look good?\n\n`Get started with the tutorial! <https://websockets.readthedocs.io/en/stable/intro/index.html>`_\n\n.. raw:: html\n\n    <hr>\n    <img align=\"left\" height=\"150\" width=\"150\" src=\"https://raw.githubusercontent.com/python-websockets/websockets/main/logo/tidelift.png\">\n    <h3 align=\"center\"><i>websockets for enterprise</i></h3>\n    <p align=\"center\"><i>Available as part of the Tidelift Subscription</i></p>\n    <p align=\"center\"><i>The maintainers of websockets and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. <a href=\"https://tidelift.com/subscription/pkg/pypi-websockets?utm_source=pypi-websockets&utm_medium=referral&utm_campaign=readme\">Learn more.</a></i></p>\n    <hr>\n    <p>(If you contribute to <code>websockets</code> and would like to become an official support provider, <a href=\"https://fractalideas.com/\">let me know</a>.)</p>\n\nWhy should I use ``websockets``?\n--------------------------------\n\nThe development of ``websockets`` is shaped by four principles:\n\n1. **Correctness**: ``websockets`` is heavily tested for compliance with\n   :rfc:`6455`. Continuous integration fails under 100% branch coverage.\n\n2. **Simplicity**: all you need to understand is ``msg = await ws.recv()`` and\n   ``await ws.send(msg)``. ``websockets`` takes care of managing connections\n   so you can focus on your application.\n\n3. **Robustness**: ``websockets`` is built for production. For example, it was\n   the only library to `handle backpressure correctly`_ before the issue\n   became widely known in the Python community.\n\n4. **Performance**: memory usage is optimized and configurable. A C extension\n   accelerates expensive operations. It's pre-compiled for Linux, macOS and\n   Windows and packaged in the wheel format for each system and Python version.\n\nDocumentation is a first class concern in the project. Head over to `Read the\nDocs`_ and see for yourself.\n\n.. _Read the Docs: https://websockets.readthedocs.io/\n.. _handle backpressure correctly: https://vorpus.org/blog/some-thoughts-on-asynchronous-api-design-in-a-post-asyncawait-world/#websocket-servers\n\nWhy shouldn't I use ``websockets``?\n-----------------------------------\n\n* If you prefer callbacks over coroutines: ``websockets`` was created to\n  provide the best coroutine-based API to manage WebSocket connections in\n  Python. Pick another library for a callback-based API.\n\n* If you're looking for a mixed HTTP / WebSocket library: ``websockets`` aims\n  at being an excellent implementation of :rfc:`6455`: The WebSocket Protocol\n  and :rfc:`7692`: Compression Extensions for WebSocket. Its support for HTTP\n  is minimal — just enough for an HTTP health check.\n\n  If you want to do both in the same server, look at HTTP frameworks that\n  build on top of ``websockets`` to support WebSocket connections, like\n  Sanic_.\n\n.. _Sanic: https://sanicframework.org/en/\n\nWhat else?\n----------\n\nBug reports, patches and suggestions are welcome!\n\nTo report a security vulnerability, please use the `Tidelift security\ncontact`_. Tidelift will coordinate the fix and disclosure.\n\n.. _Tidelift security contact: https://tidelift.com/security\n\nFor anything else, please open an issue_ or send a `pull request`_.\n\n.. _issue: https://github.com/python-websockets/websockets/issues/new\n.. _pull request: https://github.com/python-websockets/websockets/compare/\n\nParticipants must uphold the `Contributor Covenant code of conduct`_.\n\n.. _Contributor Covenant code of conduct: https://github.com/python-websockets/websockets/blob/main/CODE_OF_CONDUCT.md\n\n``websockets`` is released under the `BSD license`_.\n\n.. _BSD license: https://github.com/python-websockets/websockets/blob/main/LICENSE\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.24609375,
          "content": "# Security\n\n## Policy\n\nOnly the latest version receives security updates.\n\n## Contact information\n\nPlease report security vulnerabilities to the\n[Tidelift security team](https://tidelift.com/security).\n\nTidelift will coordinate the fix and disclosure.\n"
        },
        {
          "name": "compliance",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "experiments",
          "type": "tree",
          "content": null
        },
        {
          "name": "fuzzing",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.556640625,
          "content": "[build-system]\nrequires = [\"setuptools\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"websockets\"\ndescription = \"An implementation of the WebSocket Protocol (RFC 6455 & 7692)\"\nrequires-python = \">=3.9\"\nlicense = { text = \"BSD-3-Clause\" }\nauthors = [\n    { name = \"Aymeric Augustin\", email = \"aymeric.augustin@m4x.org\" },\n]\nkeywords = [\"WebSocket\"]\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Environment :: Web Environment\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Operating System :: OS Independent\",\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n]\ndynamic = [\"version\", \"readme\"]\n\n[project.urls]\nHomepage = \"https://github.com/python-websockets/websockets\"\nChangelog = \"https://websockets.readthedocs.io/en/stable/project/changelog.html\"\nDocumentation = \"https://websockets.readthedocs.io/\"\nFunding = \"https://tidelift.com/subscription/pkg/pypi-websockets?utm_source=pypi-websockets&utm_medium=referral&utm_campaign=readme\"\nTracker = \"https://github.com/python-websockets/websockets/issues\"\n\n# On a macOS runner, build Intel, Universal, and Apple Silicon wheels.\n[tool.cibuildwheel.macos]\narchs = [\"x86_64\", \"universal2\", \"arm64\"]\n\n# On an Linux Intel runner with QEMU installed, build Intel and ARM wheels.\n[tool.cibuildwheel.linux]\narchs = [\"auto\", \"aarch64\"]\n\n[tool.coverage.run]\nbranch = true\nomit = [\n    # */websockets matches src/websockets and .tox/**/site-packages/websockets\n    \"*/websockets/__main__.py\",\n    \"*/websockets/asyncio/async_timeout.py\",\n    \"*/websockets/asyncio/compatibility.py\",\n    \"tests/maxi_cov.py\",\n]\n\n[tool.coverage.paths]\nsource = [\n    \"src/websockets\",\n   \".tox/*/lib/python*/site-packages/websockets\",\n]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"pragma: no cover\",\n    \"except ImportError:\",\n    \"if self.debug:\",\n    \"if sys.platform != \\\"win32\\\":\",\n    \"if typing.TYPE_CHECKING:\",\n    \"raise AssertionError\",\n    \"self.fail\\\\(\\\".*\\\"\\\\)\",\n    \"@unittest.skip\",\n]\npartial_branches = [\n    \"pragma: no branch\",\n    \"with self.assertRaises\\\\(.*\\\\)\",\n]\n\n[tool.ruff]\ntarget-version = \"py312\"\n\n[tool.ruff.lint]\nselect = [\n    \"E\",  # pycodestyle\n    \"F\",  # Pyflakes\n    \"W\",  # pycodestyle\n    \"I\",  # isort\n]\nignore = [\n    \"F403\",\n    \"F405\",\n]\n\n[tool.ruff.lint.isort]\ncombine-as-imports = true\nlines-after-imports = 2\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.0390625,
          "content": "import os\nimport pathlib\nimport re\n\nimport setuptools\n\n\nroot_dir = pathlib.Path(__file__).parent\n\nexec((root_dir / \"src\" / \"websockets\" / \"version.py\").read_text(encoding=\"utf-8\"))\n\n# PyPI disables the \"raw\" directive. Remove this section of the README.\nlong_description = re.sub(\n    r\"^\\.\\. raw:: html.*?^(?=\\w)\",\n    \"\",\n    (root_dir / \"README.rst\").read_text(encoding=\"utf-8\"),\n    flags=re.DOTALL | re.MULTILINE,\n)\n\n# Set BUILD_EXTENSION to yes or no to force building or not building the\n# speedups extension. If unset, the extension is built only if possible.\nif os.environ.get(\"BUILD_EXTENSION\") == \"no\":\n    ext_modules = []\nelse:\n    ext_modules = [\n        setuptools.Extension(\n            \"websockets.speedups\",\n            sources=[\"src/websockets/speedups.c\"],\n            optional=os.environ.get(\"BUILD_EXTENSION\") != \"yes\",\n        )\n    ]\n\n# Static values are declared in pyproject.toml.\nsetuptools.setup(\n    version=version,\n    long_description=long_description,\n    long_description_content_type=\"text/x-rst\",\n    ext_modules=ext_modules,\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.74609375,
          "content": "[tox]\nenv_list =\n    py39\n    py310\n    py311\n    py312\n    py313\n    coverage\n    ruff\n    mypy\n\n[testenv]\ncommands =\n    python -W error::DeprecationWarning -W error::PendingDeprecationWarning -m unittest {posargs}\npass_env = WEBSOCKETS_*\n\n[testenv:coverage]\ncommands =\n    python -m coverage run --source {envsitepackagesdir}/websockets,tests -m unittest {posargs}\n    python -m coverage report --show-missing --fail-under=100\ndeps = coverage\n\n[testenv:maxi_cov]\ncommands =\n    python tests/maxi_cov.py {envsitepackagesdir}\n    python -m coverage report --show-missing --fail-under=100\ndeps = coverage\n\n[testenv:ruff]\ncommands =\n    ruff format --check src tests\n    ruff check src tests\ndeps = ruff\n\n[testenv:mypy]\ncommands =\n    mypy --strict src\ndeps = mypy\n"
        }
      ]
    }
  ]
}