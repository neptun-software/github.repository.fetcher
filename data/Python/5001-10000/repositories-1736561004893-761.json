{
  "metadata": {
    "timestamp": 1736561004893,
    "page": 761,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "simple-login/app",
      "stars": 5311,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1572265625,
          "content": ".idea/\n*.pyc\ndb.sqlite\n.env\n.pytest_cache\n.vscode\n.DS_Store\nconfig\nadhoc\nstatic/node_modules\ndb.sqlite-journal\nstatic/upload\nvenv/\n.venv\n.coverage\nhtmlcov\n.git/\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.4765625,
          "content": "[flake8]\nmax-line-length = 88\nselect = C,E,F,W,B,B902,B903,B904,B950\nextend-ignore =\n    # For black compatibility\n    E203,\n    E501,\n    # Ignore \"f-string is missing placeholders\"\n    F541,\n    # allow bare except\n    E722, B001\nexclude =\n    .git,\n    __pycache__,\n    .pytest_cache,\n    .venv,\n    static,\n    templates,\n    # migrations are generated by alembic\n    migrations,\n    docs,\n    shell.py\n\nper-file-ignores =\n    # ignore unused imports in __init__\n    __init__.py:F401\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1015625,
          "content": "# https://github.com/github/linguist#overrides\nstatic/* linguist-vendored\ndocs/* linguist-documentation\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.158203125,
          "content": ".idea/\n*.pyc\ndb.sqlite\n.env\n.pytest_cache\n.vscode\n.DS_Store\nconfig\nstatic/node_modules\ndb.sqlite-journal\nstatic/upload\nvenv/\n.venv\n.coverage\nhtmlcov\nadhoc\n.env.*\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.01953125,
          "content": "{\n  \"esversion\": 8\n}"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.6328125,
          "content": "exclude: \"(migrations|static/node_modules|static/assets|static/vendor)\"\ndefault_language_version:\n  python: python3\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.2.0\n    hooks:\n      - id: check-yaml\n      - id: trailing-whitespace\n  - repo: https://github.com/Riverside-Healthcare/djLint\n    rev: v1.34.1\n    hooks:\n      - id: djlint-jinja\n        files: '.*\\.html'\n        entry: djlint --reformat\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    # Ruff version.\n    rev: v0.1.5\n    hooks:\n      # Run the linter.\n      - id: ruff\n        args: [ --fix ]\n      # Run the formatter.\n      - id: ruff-format"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 6.833984375,
          "content": "[MASTER]\nextension-pkg-allow-list=re2\n\nfail-under=7.0\nignore=CVS\nignore-paths=migrations\nignore-patterns=^\\.#\njobs=0\n\n[MESSAGES CONTROL]\ndisable=missing-function-docstring,\n        missing-module-docstring,\n        duplicate-code,\n        #import-error,\n        missing-class-docstring,\n        useless-object-inheritance,\n        use-dict-literal,\n        logging-format-interpolation,\n        consider-using-f-string,\n        unnecessary-comprehension,\n        inconsistent-return-statements,\n        wrong-import-order,\n        line-too-long,\n        invalid-name,\n        global-statement,\n        no-else-return,\n        unspecified-encoding,\n        logging-fstring-interpolation,\n        too-few-public-methods,\n        bare-except,\n        fixme,\n        unnecessary-pass,\n        f-string-without-interpolation,\n        super-init-not-called,\n        unused-argument,\n        ungrouped-imports,\n        too-many-locals,\n        consider-using-with,\n        too-many-statements,\n        consider-using-set-comprehension,\n        unidiomatic-typecheck,\n        useless-else-on-loop,\n        too-many-return-statements,\n        broad-except,\n        protected-access,\n        consider-using-enumerate,\n        too-many-nested-blocks,\n        too-many-branches,\n        simplifiable-if-expression,\n        possibly-unused-variable,\n        pointless-string-statement,\n        wrong-import-position,\n        redefined-outer-name,\n        raise-missing-from,\n        logging-too-few-args,\n        redefined-builtin,\n        too-many-arguments,\n        import-outside-toplevel,\n        redefined-argument-from-local,\n        logging-too-many-args,\n        too-many-instance-attributes,\n        unreachable,\n        no-name-in-module,\n        no-member,\n        consider-using-ternary,\n        too-many-lines,\n        arguments-differ,\n        too-many-public-methods,\n        unused-variable,\n        consider-using-dict-items,\n        consider-using-in,\n        reimported,\n        too-many-boolean-expressions,\n        cyclic-import,\n        not-callable, # (paddle_utils.py) verifier.verify cannot be called (although it can)\n        abstract-method, # (models.py)\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style. If left empty, argument names will be checked with the set\n# naming style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style. If left empty, attribute names will be checked with the set naming\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style. If left empty, class attribute names will be checked\n# with the set naming style.\n#class-attribute-rgx=\n\n# Naming style matching correct class constant names.\nclass-const-naming-style=UPPER_CASE\n\n# Regular expression matching correct class constant names. Overrides class-\n# const-naming-style. If left empty, class constant names will be checked with\n# the set naming style.\n#class-const-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style. If left empty, class names will be checked with the set naming style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style. If left empty, constant names will be checked with the set naming\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style. If left empty, function names will be checked with the set\n# naming style.\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style. If left empty, inline iteration names will be checked\n# with the set naming style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style. If left empty, method names will be checked with the set naming style.\n#method-rgx=\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style. If left empty, module names will be checked with the set naming style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct type variable names. If left empty, type\n# variable names will be checked with the set naming style.\n#typevar-rgx=\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style. If left empty, variable names will be checked with the set\n# naming style.\n#variable-rgx=\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[FORMAT]\nmax-line-length=88\nsingle-line-if-stmt=yes\n"
        },
        {
          "name": ".version",
          "type": "blob",
          "size": 0.0029296875,
          "content": "dev"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 3.5068359375,
          "content": "# Changelog\n\nAll notable changes to SimpleLogin will be documented in this file.\nThe version corresponds to SimpleLogin Docker `image tag`.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [3.4.0] - 2021-04-06\nSupport ARM arch\nRemove unused config like DEBUG, CLOUDWATCH, DKIM_PUBLIC_KEY_PATH, DKIM_DNS_VALUE\nHandle auto responder email\nInform user when their alias has been transferred to another user\nUse alias transfer_token\nImprove logging\nAdd /api/export/data, /api/export/aliases endpoints\nTake into account mailbox when importing/exporting aliases\nMultiple bug fixes\nCode refactoring\nAdd ENABLE_SPAM_ASSASSIN config\n\n## [3.3.0] - 2021-03-05\nNotify user when reply cannot be sent\nUser can choose default domain for random alias\nenable LOCAL_FILE_UPLOAD by default\nfix user has to login again after quitting the browser\nlogin user in api auth endpoints\nCreate POST /api/api_key\nAdd GET /api/logout\nAdd setup-done page\nAdd PublicDomain\nUser can choose a random alias domain in a list of public domains\nUser can choose mailboxes for a domain\nReturn support_pgp in GET /api/v2/aliases\nSelf hosting improvements\nImprove Search\nUse poetry instead of pip\nAdd PATCH /api/user_info\nAdd GET /api/setting\nAdd GET /api/setting/domains\nAdd PATCH /api/setting\nAdd \"Generic Subject\" option\nAdd /v2/setting/domains\nAdd /api/v5/alias/options\nAdd GET /api/custom_domains\nAdd GET /api/custom_domains/:custom_domain_id/trash\nAble to disable a directory\nUse VERP: send email from bounce address\nUse VERP for transactional email: remove SENDER, SENDER_DIR\nUse \"John Wick - john at wick.com\" as default sender format\nAble to transfer an alias\n\n## [3.2.2] - 2020-06-15\nFix POST /v2/alias/custom/new when DISABLE_ALIAS_SUFFIX is set\n\n## [3.2.1] - 2020-06-15\nFix regressions introduced in 3.2.0 regarding DISABLE_ALIAS_SUFFIX option\n\n## [3.2.0] - 2020-06-10\nMake FIDO available\nFix \"remove the reverse-alias\" when replying\nUpdate GET /mailboxes\nCreate POST /api/v3/alias/custom/new\nAdd PGP for contact\n\n## [3.1.1] - 2020-05-27\nFix alias creation\n\n## [3.1.0] - 2020-05-09\nRemove social login signup\nMore simple UI with advanced options hidden by default\nUse pagination for alias page\nUse Ajax for alias note and mailbox update\nAlias can have a name\nGlobal stats\nDMARC support for custom domain\nEnforce SPF\nFIDO support (beta)\nAble to disable onboarding emails\n\n\n## [3.0.1] - 2020-04-13\nFix compatibility with 2x version\nFix \"Content-Transfer-Encoding\" issue https://github.com/simple-login/app/issues/125\n\n## [3.0.0] - 2020-04-13\nNew endpoints to create/update aliases:\n    PUT /api/aliases/:alias_id\n    GET /api/aliases/:alias_id/contacts\n    POST /api/aliases/:alias_id/contacts\n    GET /api/v2/aliases\n(Optional) Spam detection by Spamassassin\nHandling for bounced emails\nSupport Multiple recipients (in To and Cc headers)\n\n## [2.1.0] - 2020-03-23\nSupport PGP\n\n## [2.0.0] - 2020-03-13\nSupport multiple Mailboxes\nTake into account Sender header\n\n## [1.0.5] - 2020-02-24\nImprove email forwarding.\nMinor improvements on monitoring.\n\n## [1.0.4] - 2020-02-09\nFix duplicate \"List-Unsubscribe\"  email header.\n\n## [1.0.3] - 2020-01-28\n\nAdd DISABLE_REGISTRATION param to disable new registrations.\n\n## [1.0.2] - 2020-01-28\n\nAdd SUPPORT_NAME param to set a support email name.\n\n## [1.0.1] - 2020-01-28\n\nSimplify config file.\n\n## [1.0.0] - 2020-01-22\n\nStart tagging docker image.\nDocker image tag is used in README to make sure SimpleLogin new Docker images don't break previous deployments.\n\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.1630859375,
          "content": "Thanks for taking the time to contribute! 🎉👍\n\nBefore working on a new feature, please get in touch with us at dev[at]simplelogin.io to avoid duplication.\nWe can also discuss the best way to implement it.\n\nThe project uses Flask, Python3.7+ and requires Postgres 12+ as dependency.\n\n## General Architecture\n\n<p align=\"center\">\n    <img src=\"./docs/archi.png\" height=\"450px\">\n</p>\n\nSimpleLogin backend consists of 2 main components:\n\n- the `webapp` used by several clients: the web app, the browser extensions (Chrome & Firefox for now), OAuth clients (apps that integrate \"Sign in with SimpleLogin\" button) and mobile apps.\n\n- the `email handler`: implements the email forwarding (i.e. alias receiving email) and email sending (i.e. alias sending email).\n\n## Install dependencies\n\nThe project requires:\n- Python 3.10 and poetry to manage dependencies\n- Node v10 for front-end.\n- Postgres 13+\n\nFirst, install all dependencies by running the following command.\nFeel free to use `virtualenv` or similar tools to isolate development environment.\n\n```bash\npoetry sync\n```\n\nOn Mac, sometimes you might need to install some other packages via `brew`:\n\n```bash\nbrew install pkg-config libffi openssl postgresql@13\n```\n\nYou also need to install `gpg` tool, on Mac it can be done with:\n\n```bash\nbrew install gnupg\n```\n\nIf you see the `pyre2` package in the error message, you might need to install its dependencies with `brew`.\nMore info on https://github.com/andreasvc/pyre2\n\n```bash\nbrew install -s re2 pybind11\n```\n\n## Linting and static analysis\n\nWe use pre-commit to run all our linting and static analysis checks. Please run\n\n```bash\npoetry run pre-commit install\n```\n\nTo install it in your development environment.\n\n## Run tests\n\nFor most tests, you will need to have ``redis`` installed and started on your machine (listening on port 6379).\n\n```bash\nsh scripts/run-test.sh\n```\n\nYou can also run tests using a local Postgres DB to speed things up. This can be done by\n\n- creating an empty test DB and running the database migration by `dropdb test && createdb test && DB_URI=postgresql://localhost:5432/test alembic upgrade head`\n\n- replacing the `DB_URI` in `test.env` file by `DB_URI=postgresql://localhost:5432/test`\n\n## Run the code locally\n\nInstall npm packages\n\n```bash\ncd static && npm install\n```\n\nTo run the code locally, please create a local setting file based on `example.env`:\n\n```\ncp example.env .env\n```\n\nYou need to edit your .env to reflect the postgres exposed port, edit the `DB_URI` to:\n\n```\nDB_URI=postgresql://myuser:mypassword@localhost:35432/simplelogin\n```\n\nRun the postgres database:\n\n```bash\ndocker run -e POSTGRES_PASSWORD=mypassword -e POSTGRES_USER=myuser -e POSTGRES_DB=simplelogin -p 15432:5432 postgres:13\n```\n\nTo run the server:\n\n```\nalembic upgrade head && flask dummy-data && python3 server.py\n```\n\nthen open http://localhost:7777, you should be able to login with `john@wick.com / password` account.\n\nYou might need to change the `.env` file for developing certain features. This file is ignored by git.\n\n## Database migration\n\nThe database migration is handled by `alembic`\n\nWhenever the model changes, a new migration has to be created.\n\nIf you have Docker installed, you can create the migration by the following script:\n\n```bash\nsh scripts/new-migration.sh\n```\n\nMake sure to review the migration script before committing it.\nSometimes (very rarely though), the automatically generated script can be incorrect.\n\nWe cannot use the local database to generate migration script as the local database doesn't use migration.\nIt is created via `db.create_all()` (cf `fake_data()` method). This is convenient for development and\nunit tests as we don't have to wait for the migration.\n\n## Reset database\n\nThere are two scripts to reset your local db to an empty state:\n\n- `scripts/reset_local_db.sh` will reset your development db to the latest migration version and add the development data needed to run the\nserver.py locally.\n- `scripts/reset_test_db.sh` will reset your test db to the latest migration without adding the dev server data to prevent interferring with\nthe tests.\n\n## Code structure\n\nThe repo consists of the three following entry points:\n\n- wsgi.py and server.py: the webapp.\n- email_handler.py: the email handler.\n- cron.py: the cronjob.\n\nHere are the small sum-ups of the directory structures and their roles:\n\n- app/: main Flask app. It is structured into different packages representing different features like oauth,  api, dashboard, etc.\n- local_data/: contains files to facilitate the local development. They are replaced during the deployment.\n- migrations/: generated by flask-migrate. Edit these files will be only edited when you spot (very rare) errors on the database migration files.\n- static/: files available at `/static` url.\n- templates/: contains both html and email templates.\n- tests/: tests. We don't really distinguish unit, functional or integration test. A test is simply here to make sure a feature works correctly.\n\n## Pull request\n\nThe code is formatted using [ruff](https://github.com/astral-sh/ruff), to format the code, simply run\n\n```\npoetry run ruff format .\n```\n\nThe code is also checked with `flake8`, make sure to run `flake8` before creating the pull request by\n\n```bash\npoetry run flake8\n```\n\nFor HTML templates, we use `djlint`. Before creating a pull request, please run\n\n```bash\npoetry run djlint --check templates\n```\n\nIf some files aren't properly formatted, you can format all files with\n\n```bash\npoetry run djlint --reformat .\n```\n\n## Test sending email\n\n[swaks](http://www.jetmore.org/john/code/swaks/) is used for sending test emails to the `email_handler`.\n\n[mailcatcher](https://github.com/sj26/mailcatcher) or [MailHog](https://github.com/mailhog/MailHog) can be used as a MTA to receive emails.\n\nHere's how set up the email handler:\n\n1) run mailcatcher or MailHog\n\n```bash\nmailcatcher\n```\n\n2) Make sure to set the following variables in the `.env` file\n\n```\n# comment out this variable\n# NOT_SEND_EMAIL=true\n\n# So the emails will be sent to mailcatcher/MailHog\nPOSTFIX_SERVER=localhost\nPOSTFIX_PORT=1025\n```\n\n3) Run email_handler\n\n```bash\npython email_handler.py\n```\n\n4) Send a test email\n\n```bash\nswaks --to e1@sl.local --from hey@google.com --server 127.0.0.1:20381\n```\n\nNow open http://localhost:1080/ (or http://localhost:1080/ for MailHog), you should see the forwarded email.\n\n## Job runner\n\nSome features require a job handler (such as GDPR data export). To test such feature you need to run the job_runner\n\n```bash\npython job_runner.py\n```\n\n# Setup for Mac\n\nThere are several ways to setup Python and manage the project dependencies on Mac. For info we have successfully used this setup on a Mac silicon:\n\n```bash\n# we haven't managed to make python 3.12 work\nbrew install python3.10\n\n# make sure to update the PATH so python, pip point to Python3\n# for us it can be done by adding \"export PATH=/opt/homebrew/opt/python@3.10/libexec/bin:$PATH\" to .zprofile\n\n# Although pipx is the recommended way to install poetry,\n# install pipx via brew will automatically install python 3.12\n# and poetry will then use python 3.12\n# so we recommend using poetry this way instead\ncurl -sSL https://install.python-poetry.org | python3 -\n\npoetry install\n\n# activate the virtualenv and you should be good to go!\nsource .venv/bin/activate\n\n```"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.287109375,
          "content": "# Install npm packages\nFROM node:10.17.0-alpine AS npm\nWORKDIR /code\nCOPY ./static/package*.json /code/static/\nRUN cd /code/static && npm ci\n\n# Main image\nFROM python:3.10\n\n# Keeps Python from generating .pyc files in the container\nENV PYTHONDONTWRITEBYTECODE 1\n# Turns off buffering for easier container logging\nENV PYTHONUNBUFFERED 1\n\n# Add poetry to PATH\nENV PATH=\"${PATH}:/root/.local/bin\"\n\nWORKDIR /code\n\n# Copy poetry files\nCOPY poetry.lock pyproject.toml ./\n\n# Install and setup poetry\nRUN pip install -U pip \\\n    && apt-get update \\\n    && apt install -y curl netcat-traditional gcc python3-dev gnupg git libre2-dev cmake ninja-build\\\n    && curl -sSL https://install.python-poetry.org | python3 - \\\n    # Remove curl and netcat from the image\n    && apt-get purge -y curl netcat-traditional \\\n    # Run poetry\n    && poetry config virtualenvs.create false \\\n    && poetry install  --no-interaction --no-ansi --no-root \\\n    # Clear apt cache \\\n    && apt-get purge -y libre2-dev cmake ninja-build\\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# copy npm packages\nCOPY --from=npm /code /code\n\n# copy everything else into /code\nCOPY . .\n\nEXPOSE 7777\n\n#gunicorn wsgi:app -b 0.0.0.0:7777 -w 2 --timeout 15 --log-level DEBUG\nCMD [\"gunicorn\",\"wsgi:app\",\"-b\",\"0.0.0.0:7777\",\"-w\",\"2\",\"--timeout\",\"15\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7138671875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.982421875,
          "content": "\n\n[SimpleLogin](https://simplelogin.io) | Protect your online identity with email alias\n---\n<p>\n<a href=\"https://chrome.google.com/webstore/detail/dphilobhebphkdjbpfohgikllaljmgbn\">\n    <img src=\"https://img.shields.io/chrome-web-store/rating/dphilobhebphkdjbpfohgikllaljmgbn?label=Chrome%20Extension\">\n</a>\n\n<a href=\"https://addons.mozilla.org/firefox/addon/simplelogin/\">\n<img src=\"https://img.shields.io/amo/rating/simplelogin?label=Firefox%20Add-On&logo=SimpleLogin\">\n</a>\n\n<a href=\"./LICENSE\">\n<img src=\"https://img.shields.io/github/license/simple-login/app\">\n</a>\n\n<a href=\"https://twitter.com/simplelogin\">\n<img src=\"https://img.shields.io/twitter/follow/simplelogin?style=social\">\n</a>\n\n</p>\n\n<p align=\"center\">\n    <a href=\"https://simplelogin.io\">\n        <img src=\"./docs/hero.png\" height=\"600px\">\n    </a>\n</p>\n\n---\n\nYour email address is your **online identity**. When you use the same email address everywhere, you can be easily tracked.\nMore information on https://simplelogin.io\n\nThis README contains instructions on how to self host SimpleLogin.\n\nOnce you have your own SimpleLogin instance running, you can change the `API URL` in SimpleLogin's Chrome/Firefox extension, Android/iOS app to your server.\n\nSimpleLogin roadmap is at https://github.com/simple-login/app/projects/1 and our forum at https://github.com/simple-login/app/discussions, feel free to submit new ideas or vote on features.\n\n### Prerequisites\n\n- a Linux server (either a VM or dedicated server). This doc shows the setup for Ubuntu 18.04 LTS but the steps could be adapted for other popular Linux distributions. As most of components run as Docker container and Docker can be a bit heavy, having at least 2 GB of RAM is recommended. The server needs to have the port 25 (email), 80, 443 (for the webapp), 22 (so you can ssh into it) open.\n\n- a domain that you can config the DNS. It could be a sub-domain. In the rest of the doc, let's say it's `mydomain.com` for the email and `app.mydomain.com` for SimpleLogin webapp. Please make sure to replace these values by your domain name whenever they appear in the doc. A trick we use is to download this README file on your computer and replace all `mydomain.com` occurrences by your domain.\n\nExcept for the DNS setup that is usually done on your domain registrar interface, all the below steps are to be done on your server. The commands are to run with `bash` (or any bash-compatible shell like `zsh`) being the shell. If you use other shells like `fish`, please make sure to adapt the commands.\n\n### Some utility packages\n\nThese packages are used to verify the setup. Install them by:\n\n```bash\nsudo apt update && sudo apt install -y dnsutils\n```\n\nCreate a directory to store SimpleLogin data:\n\n```bash\nmkdir sl\nmkdir sl/pgp # to store PGP key\nmkdir sl/db # to store database\nmkdir sl/upload # to store quarantine emails\n```\n\n### DKIM\n\nFrom Wikipedia https://en.wikipedia.org/wiki/DomainKeys_Identified_Mail\n\n> DomainKeys Identified Mail (DKIM) is an email authentication method designed to detect forged sender addresses in emails (email spoofing), a technique often used in phishing and email spam.\n\nSetting up DKIM is highly recommended to reduce the chance your emails ending up in the recipient's Spam folder.\n\nFirst you need to generate a private and public key for DKIM:\n\n```bash\nopenssl genrsa -out dkim.key -traditional 1024\nopenssl rsa -in dkim.key -pubout -out dkim.pub.key\n```\n\nYou will need the files `dkim.key` and `dkim.pub.key` for the next steps.\n\nFor email gurus, we have chosen 1024 key length instead of 2048 for DNS simplicity as some registrars don't play well with long TXT record.\n\n### DNS\n\nPlease note that DNS changes could take up to 24 hours to propagate. In practice, it's a lot faster though (~1 minute or so in our test). In DNS setup, we usually use domain with a trailing dot (`.`) at the end to force using absolute domain.\n\n\n#### MX record\nCreate a **MX record** that points `mydomain.com.` to `app.mydomain.com.` with priority 10.\n\nTo verify if the DNS works, the following command\n\n```bash\ndig @1.1.1.1 mydomain.com mx\n```\n\nshould return:\n\n```\nmydomain.com.\t3600\tIN\tMX\t10 app.mydomain.com.\n```\n\n#### A record\nAn **A record** that points `app.mydomain.com.` to your server IP.\nIf you are using CloudFlare, we recommend to disable the \"Proxy\" option.\nTo verify, the following command\n\n```bash\ndig @1.1.1.1 app.mydomain.com a\n```\n\nshould return your server IP.\n\n#### DKIM\nSet up DKIM by adding a TXT record for `dkim._domainkey.mydomain.com.` with the following value:\n\n```\nv=DKIM1; k=rsa; p=PUBLIC_KEY\n```\n\nwith `PUBLIC_KEY` being your `dkim.pub.key` but\n- remove the `-----BEGIN PUBLIC KEY-----` and `-----END PUBLIC KEY-----`\n- join all the lines on a single line.\n\nFor example, if your `dkim.pub.key` is\n\n```\n-----BEGIN PUBLIC KEY-----\nab\ncd\nef\ngh\n-----END PUBLIC KEY-----\n```\n\nthen the `PUBLIC_KEY` would be `abcdefgh`.\n\nYou can get the `PUBLIC_KEY` by running this command:\n\n```bash\nsed \"s/-----BEGIN PUBLIC KEY-----/v=DKIM1; k=rsa; p=/g\" $(pwd)/dkim.pub.key | sed 's/-----END PUBLIC KEY-----//g' |tr -d '\\n' | awk 1\n```\n\nTo verify, the following command\n\n```bash\ndig @1.1.1.1 dkim._domainkey.mydomain.com txt\n```\n\nshould return the above value.\n\n#### SPF\n\nFrom Wikipedia https://en.wikipedia.org/wiki/Sender_Policy_Framework\n\n> Sender Policy Framework (SPF) is an email authentication method designed to detect forging sender addresses during the delivery of the email\n\nSimilar to DKIM, setting up SPF is highly recommended.\nAdd a TXT record for `mydomain.com.` with the value:\n\n```\nv=spf1 mx ~all\n```\n\nWhat it means is only your server can send email with `@mydomain.com` domain.\nTo verify, the following command\n\n```bash\ndig @1.1.1.1 mydomain.com txt\n```\n\nshould return the above value.\n\n#### DMARC\n\nFrom Wikipedia https://en.wikipedia.org/wiki/DMARC\n\n> It (DMARC) is designed to give email domain owners the ability to protect their domain from unauthorized use, commonly known as email spoofing\n\nSetting up DMARC is also recommended.\nAdd a TXT record for `_dmarc.mydomain.com.` with the following value\n\n```\nv=DMARC1; p=quarantine; adkim=r; aspf=r\n```\n\nThis is a `relaxed` DMARC policy. You can also use a more strict policy with `v=DMARC1; p=reject; adkim=s; aspf=s` value.\n\nTo verify, the following command\n\n```bash\ndig @1.1.1.1 _dmarc.mydomain.com txt\n```\n\nshould return the set value.\n\nFor more information on DMARC, please consult https://tools.ietf.org/html/rfc7489\n\n### Docker\n\nNow the boring DNS stuffs are done, let's do something more fun!\n\nIf you don't already have Docker installed on your server, please follow the steps on [Docker CE for Ubuntu](https://docs.docker.com/v17.12/install/linux/docker-ce/ubuntu/) to install Docker.\n\nYou can also install Docker using the [docker-install](https://github.com/docker/docker-install) script which is\n\n```bash\ncurl -fsSL https://get.docker.com | sh\n```\n\n### Prepare the Docker network\n\nThis Docker network will be used by the other Docker containers run in the next steps.\nLater, we will setup Postfix to authorize this network.\n\n```bash\nsudo docker network create -d bridge \\\n    --subnet=10.0.0.0/24 \\\n    --gateway=10.0.0.1 \\\n    sl-network\n```\n\n### Postgres\n\nThis section creates a Postgres database using Docker.\n\nIf you already have a Postgres database in use, you can skip this section and just copy the database configuration (i.e. host, port, username, password, database name) to use in the next sections.\n\nRun a Postgres Docker container as your Postgres database server. Make sure to replace `myuser` and `mypassword` with something more secret.\n\n```bash\ndocker run -d \\\n    --name sl-db \\\n    -e POSTGRES_PASSWORD=mypassword \\\n    -e POSTGRES_USER=myuser \\\n    -e POSTGRES_DB=simplelogin \\\n    -p 127.0.0.1:5432:5432 \\\n    -v $(pwd)/sl/db:/var/lib/postgresql/data \\\n    --restart always \\\n    --network=\"sl-network\" \\\n    postgres:12.1\n```\n\nTo test whether the database operates correctly or not, run the following command:\n\n```bash\ndocker exec -it sl-db psql -U myuser simplelogin\n```\n\nyou should be logged in the postgres console. Type `exit` to exit postgres console.\n\n### Postfix\n\nInstall `postfix` and `postfix-pgsql`. The latter is used to connect Postfix and the Postgres database in the next steps.\n\n```bash\nsudo apt-get install -y postfix postfix-pgsql -y\n```\n\nChoose \"Internet Site\" in Postfix installation window then keep using the proposed value as *System mail name* in the next window.\n\n![](./docs/postfix-installation.png)\n![](./docs/postfix-installation2.png)\n\nReplace `/etc/postfix/main.cf` with the following content. Make sure to replace `mydomain.com` by your domain.\n\n```\n# POSTFIX config file, adapted for SimpleLogin\nsmtpd_banner = $myhostname ESMTP $mail_name (Ubuntu)\nbiff = no\n\n# appending .domain is the MUA's job.\nappend_dot_mydomain = no\n\n# Uncomment the next line to generate \"delayed mail\" warnings\n#delay_warning_time = 4h\n\nreadme_directory = no\n\n# See http://www.postfix.org/COMPATIBILITY_README.html -- default to 2 on\n# fresh installs.\ncompatibility_level = 2\n\n# TLS parameters\nsmtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem\nsmtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key\nsmtpd_tls_session_cache_database = btree:${data_directory}/smtpd_scache\nsmtp_tls_session_cache_database = btree:${data_directory}/smtp_scache\nsmtp_tls_security_level = may\nsmtpd_tls_security_level = may\n\n# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for\n# information on enabling SSL in the smtp client.\n\nalias_maps = hash:/etc/aliases\nmynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128 10.0.0.0/24\n\n# Set your domain here\nmydestination =\nmyhostname = app.mydomain.com\nmydomain = mydomain.com\nmyorigin = mydomain.com\n\nrelay_domains = pgsql:/etc/postfix/pgsql-relay-domains.cf\ntransport_maps = pgsql:/etc/postfix/pgsql-transport-maps.cf\n\n# HELO restrictions\nsmtpd_delay_reject = yes\nsmtpd_helo_required = yes\nsmtpd_helo_restrictions =\n    permit_mynetworks,\n    reject_non_fqdn_helo_hostname,\n    reject_invalid_helo_hostname,\n    permit\n\n# Sender restrictions:\nsmtpd_sender_restrictions =\n    permit_mynetworks,\n    reject_non_fqdn_sender,\n    reject_unknown_sender_domain,\n    permit\n\n# Recipient restrictions:\nsmtpd_recipient_restrictions =\n   reject_unauth_pipelining,\n   reject_non_fqdn_recipient,\n   reject_unknown_recipient_domain,\n   permit_mynetworks,\n   reject_unauth_destination,\n   reject_rbl_client zen.spamhaus.org,\n   reject_rbl_client bl.spamcop.net,\n   permit\n```\n\nCheck that the ssl certificates `/etc/ssl/certs/ssl-cert-snakeoil.pem` and `/etc/ssl/private/ssl-cert-snakeoil.key` exist. Depending on the linux distribution you are using they may or may not be present. If they are not, you will need to generate them with this command:\n\n```bash\nopenssl req -x509 -nodes -days 3650 -newkey rsa:2048 -keyout /etc/ssl/private/ssl-cert-snakeoil.key -out /etc/ssl/certs/ssl-cert-snakeoil.pem\n```\n\nCreate the `/etc/postfix/pgsql-relay-domains.cf` file with the following content.\nMake sure that the database config is correctly set, replace `mydomain.com` with your domain, update 'myuser' and 'mypassword' with your postgres credentials.\n\n```\n# postgres config\nhosts = localhost\nuser = myuser\npassword = mypassword\ndbname = simplelogin\n\nquery = SELECT domain FROM custom_domain WHERE domain='%s' AND verified=true\n    UNION SELECT '%s' WHERE '%s' = 'mydomain.com' LIMIT 1;\n```\n\nCreate the `/etc/postfix/pgsql-transport-maps.cf` file with the following content.\nAgain, make sure that the database config is correctly set, replace `mydomain.com` with your domain, update 'myuser' and 'mypassword' with your postgres credentials.\n\n```\n# postgres config\nhosts = localhost\nuser = myuser\npassword = mypassword\ndbname = simplelogin\n\n# forward to smtp:127.0.0.1:20381 for custom domain AND email domain\nquery = SELECT 'smtp:127.0.0.1:20381' FROM custom_domain WHERE domain = '%s' AND verified=true\n    UNION SELECT 'smtp:127.0.0.1:20381' WHERE '%s' = 'mydomain.com' LIMIT 1;\n```\n\nFinally, restart Postfix\n\n```bash\nsudo systemctl restart postfix\n```\n\n### Run SimpleLogin Docker containers\n\nTo run SimpleLogin, you need a config file at `$(pwd)/simplelogin.env`. Below is an example that you can use right away, make sure to\n\n- replace `mydomain.com` by your domain,\n- set `FLASK_SECRET` to a secret string,\n- update 'myuser' and 'mypassword' with your database credentials used in previous step.\n\nAll possible parameters can be found in [config example](example.env). Some are optional and are commented out by default.\nSome have \"dummy\" values, fill them up if you want to enable these features (Paddle, AWS, etc).\n\n```.env\n# WebApp URL\nURL=http://app.mydomain.com\n\n# domain used to create alias\nEMAIL_DOMAIN=mydomain.com\n\n# transactional email is sent from this email address\nSUPPORT_EMAIL=support@mydomain.com\n\n# custom domain needs to point to these MX servers\nEMAIL_SERVERS_WITH_PRIORITY=[(10, \"app.mydomain.com.\")]\n\n# By default, new aliases must end with \".{random_word}\". This is to avoid a person taking all \"nice\" aliases.\n# this option doesn't make sense in self-hosted. Set this variable to disable this option.\nDISABLE_ALIAS_SUFFIX=1\n\n# the DKIM private key used to compute DKIM-Signature\nDKIM_PRIVATE_KEY_PATH=/dkim.key\n\n# DB Connection\nDB_URI=postgresql://myuser:mypassword@sl-db:5432/simplelogin\n\nFLASK_SECRET=put_something_secret_here\n\nGNUPGHOME=/sl/pgp\n\nLOCAL_FILE_UPLOAD=1\n\nPOSTFIX_SERVER=10.0.0.1\n```\n\n\nBefore running the webapp, you need to prepare the database by running the migration:\n\n```bash\ndocker run --rm \\\n    --name sl-migration \\\n    -v $(pwd)/sl:/sl \\\n    -v $(pwd)/sl/upload:/code/static/upload \\\n    -v $(pwd)/dkim.key:/dkim.key \\\n    -v $(pwd)/dkim.pub.key:/dkim.pub.key \\\n    -v $(pwd)/simplelogin.env:/code/.env \\\n    --network=\"sl-network\" \\\n    simplelogin/app:3.4.0 flask db upgrade\n```\n\nThis command could take a while to download the `simplelogin/app` docker image.\n\nInit data\n\n```bash\ndocker run --rm \\\n    --name sl-init \\\n    -v $(pwd)/sl:/sl \\\n    -v $(pwd)/simplelogin.env:/code/.env \\\n    -v $(pwd)/dkim.key:/dkim.key \\\n    -v $(pwd)/dkim.pub.key:/dkim.pub.key \\\n    --network=\"sl-network\" \\\n    simplelogin/app:3.4.0 python init_app.py\n```\n\nNow, it's time to run the `webapp` container!\n\n```bash\ndocker run -d \\\n    --name sl-app \\\n    -v $(pwd)/sl:/sl \\\n    -v $(pwd)/sl/upload:/code/static/upload \\\n    -v $(pwd)/simplelogin.env:/code/.env \\\n    -v $(pwd)/dkim.key:/dkim.key \\\n    -v $(pwd)/dkim.pub.key:/dkim.pub.key \\\n    -p 127.0.0.1:7777:7777 \\\n    --restart always \\\n    --network=\"sl-network\" \\\n    simplelogin/app:3.4.0\n```\n\nNext run the `email handler`\n\n```bash\ndocker run -d \\\n    --name sl-email \\\n    -v $(pwd)/sl:/sl \\\n    -v $(pwd)/sl/upload:/code/static/upload \\\n    -v $(pwd)/simplelogin.env:/code/.env \\\n    -v $(pwd)/dkim.key:/dkim.key \\\n    -v $(pwd)/dkim.pub.key:/dkim.pub.key \\\n    -p 127.0.0.1:20381:20381 \\\n    --restart always \\\n    --network=\"sl-network\" \\\n    simplelogin/app:3.4.0 python email_handler.py\n```\n\nAnd finally the `job runner`\n\n```bash\ndocker run -d \\\n    --name sl-job-runner \\\n    -v $(pwd)/sl:/sl \\\n    -v $(pwd)/sl/upload:/code/static/upload \\\n    -v $(pwd)/simplelogin.env:/code/.env \\\n    -v $(pwd)/dkim.key:/dkim.key \\\n    -v $(pwd)/dkim.pub.key:/dkim.pub.key \\\n    --restart always \\\n    --network=\"sl-network\" \\\n    simplelogin/app:3.4.0 python job_runner.py\n```\n\n### Nginx\n\nInstall Nginx and make sure to replace `mydomain.com` by your domain\n\n```bash\nsudo apt-get install -y nginx\n```\n\nThen, create `/etc/nginx/sites-enabled/simplelogin` with the following lines:\n\n```nginx\nserver {\n    server_name  app.mydomain.com;\n\n    location / {\n        proxy_pass              http://localhost:7777;\n    \tproxy_set_header        Host $host;\n    }\n}\n```\n\nNote: If `/etc/nginx/sites-enabled/default` exists, delete it or certbot will fail due to the conflict. The `simplelogin` file should be the only file in `sites-enabled`.\n\nReload Nginx with the command below\n\n```bash\nsudo systemctl reload nginx\n```\n\nAt this step, you should also setup the SSL for Nginx. [Here's our guide how](./docs/ssl.md).\n\n### Enjoy!\n\nIf all the above steps are successful, open http://app.mydomain.com/ and create your first account!\n\nBy default, new accounts are not premium so don't have unlimited alias. To make your account premium,\nplease go to the database, table \"users\" and set \"lifetime\" column to \"1\" or \"TRUE\":\n\n```\ndocker exec -it sl-db psql -U myuser simplelogin\nUPDATE users SET lifetime = TRUE;\nexit\n```\n\nOnce you've created all your desired login accounts, add these lines to `/simplelogin.env` to disable further registrations:\n\n```.env\nDISABLE_REGISTRATION=1\nDISABLE_ONBOARDING=true\n```\n\nThen restart the web app to apply: `docker restart sl-app`\n\n### Donations Welcome\n\nYou don't have to pay anything to SimpleLogin to use all its features.\nIf you like the project, you can make a donation on our Open Collective page at https://opencollective.com/simplelogin\n\n### Misc\n\nThe above self-hosting instructions correspond to a freshly Ubuntu server and doesn't cover all possible server configuration.\nBelow are pointers to different topics:\n\n- [Troubleshooting](docs/troubleshooting.md)\n- [Enable SSL](docs/ssl.md)\n- [UFW - uncomplicated firewall](docs/ufw.md)\n- [SES - Amazon Simple Email Service](docs/ses.md)\n- [Upgrade existing SimpleLogin installation](docs/upgrade.md)\n- [Enforce SPF](docs/enforce-spf.md)\n- [Postfix TLS](docs/postfix-tls.md)\n\n## ❤️ Contributors\n\nThanks go to these wonderful people:\n\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/vandungnguyen/\"><img src=\"https://simplelogin.io/about/dung.jpg\" width=\"100px;\" alt=\"Dung Nguyen Van\"/><br /><sub><b>Dung Nguyen Van</b></sub></a><br /></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/giuseppe-f-83449ba4/\"><img src=\"https://simplelogin.io/about/giuseppe.jpeg\" width=\"100px;\" alt=\"Giuseppe Federico\"/><br /><sub><b>Giuseppe Federico</b></sub></a><br /></td>\n    <td align=\"center\"><a href=\"https://github.com/NinhDinh\"><img src=\"https://avatars2.githubusercontent.com/u/1419742?s=460&v=4\" width=\"100px;\" alt=\"Ninh Dinh\"/><br /><sub><b>Ninh Dinh</b></sub></a><br /></td>\n    <td align=\"center\"><a href=\"https://github.com/ntung\"><img src=\"https://avatars1.githubusercontent.com/u/663341?s=460&v=4\" width=\"100px;\" alt=\"Tung Nguyen V. N.\"/><br /><sub><b>Tung Nguyen V. N.</b></sub></a><br /></td>\n    <td align=\"center\"><a href=\"https://www.linkedin.com/in/nguyenkims/\"><img src=\"https://simplelogin.io/about/me.jpeg\" width=\"100px;\" alt=\"Son Nguyen Kim\"/><br /><sub><b>Son Nguyen Kim</b></sub></a><br /></td>\n    <td align=\"center\"><a href=\"https://github.com/developStorm\"><img src=\"https://avatars1.githubusercontent.com/u/59678453?s=460&u=3813d29a125b3edeb44019234672b704f7b9b76a&v=4\" width=\"100px;\" alt=\"Raymond Nook\"/><br /><sub><b>Raymond Nook</b></sub></a><br /></td>\n    <td align=\"center\"><a href=\"https://github.com/SibrenVasse\"><img src=\"https://avatars1.githubusercontent.com/u/5833571?s=460&u=78aea62ffc215885a0319437fc629a7596ddea31&v=4\" width=\"100px;\" alt=\"Sibren Vasse\"/><br /><sub><b>Sibren Vasse</b></sub></a><br /></td>\n    <td align=\"center\"><a href=\"https://github.com/TheLastProject\"><img src=\"https://avatars.githubusercontent.com/u/1885159?s=460&u=ebeeb346c4083c0d493a134f4774f925d3437f98&v=4\" width=\"100px;\" alt=\"Sylvia van Os\"/><br /><sub><b>Sylvia van Os</b></sub></a><br /></td>\n</tr>\n</table>\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.419921875,
          "content": "# Security Policy\n\n## Supported Versions\n\nWe only add security updates to the latest MAJOR.MINOR version of the project. No security updates are backported to previous versions.\nIf you want be up to date on security patches, make sure your SimpleLogin image is up to date.\n\n## Reporting a Vulnerability\n\nIf you want to report a vulnerability, please take a look at our bug bounty program at https://proton.me/security/bug-bounty.\n"
        },
        {
          "name": "alembic.ini",
          "type": "blob",
          "size": 1.955078125,
          "content": "# A generic, single database configuration.\n\n[alembic]\n# path to migration scripts\nscript_location = migrations\n\n# template used to generate migration files\nfile_template = %%(year)d_%%(month).2d%%(day).2d%%(hour).2d_%%(rev)s_%%(slug)s\n\n# timezone to use when rendering the date\n# within the migration file as well as the filename.\n# string value is passed to dateutil.tz.gettz()\n# leave blank for localtime\n# timezone =\n\n# max length of characters to apply to the\n# \"slug\" field\n# truncate_slug_length = 40\n\n# set to 'true' to run the environment during\n# the 'revision' command, regardless of autogenerate\n# revision_environment = false\n\n# set to 'true' to allow .pyc and .pyo files without\n# a source .py file to be detected as revisions in the\n# versions/ directory\n# sourceless = false\n\n# version location specification; this defaults\n# to alembic/versions.  When using multiple version\n# directories, initial revisions must be specified with --version-path\n# version_locations = %(here)s/bar %(here)s/bat alembic/versions\n\n# the output encoding used when revision files\n# are written from script.py.mako\n# output_encoding = utf-8\n\n\n[post_write_hooks]\n# post_write_hooks defines scripts or Python functions that are run\n# on newly generated revision scripts.  See the documentation for further\n# detail and examples\n\n# format using \"black\" - use the console_scripts runner, against the \"black\" entrypoint\n# hooks=black\n# black.type=console_scripts\n# black.entrypoint=black\n# black.options=-l 79\n\n# Logging configuration\n[loggers]\nkeys = root,sqlalchemy,alembic\n\n[handlers]\nkeys = console\n\n[formatters]\nkeys = generic\n\n[logger_root]\nlevel = WARN\nhandlers = console\nqualname =\n\n[logger_sqlalchemy]\nlevel = WARN\nhandlers =\nqualname = sqlalchemy.engine\n\n[logger_alembic]\nlevel = INFO\nhandlers =\nqualname = alembic\n\n[handler_console]\nclass = StreamHandler\nargs = (sys.stderr,)\nlevel = NOTSET\nformatter = generic\n\n[formatter_generic]\nformat = %(levelname)-5.5s [%(name)s] %(message)s\ndatefmt = %H:%M:%S\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverage.ini",
          "type": "blob",
          "size": 0.140625,
          "content": "[run]\nbranch = True\nsource = .\nomit =\n    .venv/*\n\n[report]\nfail_under = 55\nomit =\n    app/fake_data.py\n    oauth_tester.py\nskip_covered = True\n"
        },
        {
          "name": "cron.py",
          "type": "blob",
          "size": 46.4638671875,
          "content": "import argparse\nimport asyncio\nimport urllib.parse\nfrom typing import List, Tuple\n\nimport arrow\nimport requests\nfrom sqlalchemy import func, desc, or_, and_\nfrom sqlalchemy.ext.compiler import compiles\nfrom sqlalchemy.orm import joinedload\nfrom sqlalchemy.orm.exc import ObjectDeletedError\nfrom sqlalchemy.sql import Insert, text\n\nfrom app import s3, config\nfrom app.alias_utils import nb_email_log_for_mailbox\nfrom app.api.views.apple import verify_receipt\nfrom app.custom_domain_validation import CustomDomainValidation\nfrom app.db import Session\nfrom app.dns_utils import get_mx_domains, is_mx_equivalent\nfrom app.email_utils import (\n    send_email,\n    send_trial_end_soon_email,\n    render,\n    email_can_be_used_as_mailbox,\n    send_email_with_rate_control,\n    get_email_domain_part,\n)\nfrom app.email_validation import is_valid_email, normalize_reply_email\nfrom app.errors import ProtonPartnerNotSetUp\nfrom app.log import LOG\nfrom app.mail_sender import load_unsent_mails_from_fs_and_resend\nfrom app.models import (\n    Subscription,\n    User,\n    Alias,\n    EmailLog,\n    CustomDomain,\n    Client,\n    ManualSubscription,\n    RefusedEmail,\n    AppleSubscription,\n    Mailbox,\n    Monitoring,\n    Contact,\n    CoinbaseSubscription,\n    TransactionalEmail,\n    Bounce,\n    Metric2,\n    SLDomain,\n    DeletedAlias,\n    DomainDeletedAlias,\n    Hibp,\n    HibpNotifiedAlias,\n    Directory,\n    DeletedDirectory,\n    DeletedSubdomain,\n    PartnerSubscription,\n    PartnerUser,\n    ApiToCookieToken,\n)\nfrom app.pgp_utils import load_public_key_and_check, PGPException\nfrom app.proton.utils import get_proton_partner\nfrom app.user_audit_log_utils import emit_user_audit_log, UserAuditLogAction\nfrom app.utils import sanitize_email\nfrom server import create_light_app\nfrom tasks.clean_alias_audit_log import cleanup_alias_audit_log\nfrom tasks.clean_user_audit_log import cleanup_user_audit_log\nfrom tasks.cleanup_old_imports import cleanup_old_imports\nfrom tasks.cleanup_old_jobs import cleanup_old_jobs\nfrom tasks.cleanup_old_notifications import cleanup_old_notifications\n\nDELETE_GRACE_DAYS = 30\n\n\ndef notify_trial_end():\n    for user in User.filter(\n        User.activated.is_(True),\n        User.trial_end.isnot(None),\n        User.trial_end >= arrow.now().shift(days=2),\n        User.trial_end < arrow.now().shift(days=3),\n        User.lifetime.is_(False),\n    ).all():\n        try:\n            if user.in_trial():\n                LOG.d(\"Send trial end email to user %s\", user)\n                send_trial_end_soon_email(user)\n        # happens if user has been deleted in the meantime\n        except ObjectDeletedError:\n            LOG.i(\"user has been deleted\")\n\n\ndef delete_logs():\n    \"\"\"delete everything that are considered logs\"\"\"\n    delete_refused_emails()\n    delete_old_monitoring()\n\n    for t_email in TransactionalEmail.filter(\n        TransactionalEmail.created_at < arrow.now().shift(days=-7)\n    ):\n        TransactionalEmail.delete(t_email.id)\n\n    for b in Bounce.filter(Bounce.created_at < arrow.now().shift(days=-7)):\n        Bounce.delete(b.id)\n\n    Session.commit()\n\n    LOG.d(\"Deleting EmailLog older than 2 weeks\")\n\n    total_deleted = 0\n    batch_size = 500\n    Session.execute(\"set session statement_timeout=30000\").rowcount\n    queries_done = 0\n    cutoff_time = arrow.now().shift(days=-14)\n    rows_to_delete = EmailLog.filter(EmailLog.created_at < cutoff_time).count()\n    expected_queries = int(rows_to_delete / batch_size)\n    sql = text(\n        \"DELETE FROM email_log WHERE id IN (SELECT id FROM email_log WHERE created_at < :cutoff_time order by created_at limit :batch_size)\"\n    )\n    str_cutoff_time = cutoff_time.isoformat()\n    while total_deleted < rows_to_delete:\n        deleted_count = Session.execute(\n            sql, {\"cutoff_time\": str_cutoff_time, \"batch_size\": batch_size}\n        ).rowcount\n        Session.commit()\n        total_deleted += deleted_count\n        queries_done += 1\n        LOG.i(\n            f\"[{queries_done}/{expected_queries}] Deleted {total_deleted} EmailLog entries\"\n        )\n        if deleted_count < batch_size:\n            break\n\n    LOG.i(\"Deleted %s email logs\", total_deleted)\n\n\ndef delete_refused_emails():\n    for refused_email in (\n        RefusedEmail.filter_by(deleted=False).order_by(RefusedEmail.id).all()\n    ):\n        if arrow.now().shift(days=1) > refused_email.delete_at >= arrow.now():\n            LOG.d(\"Delete refused email %s\", refused_email)\n            if refused_email.path:\n                s3.delete(refused_email.path)\n\n            s3.delete(refused_email.full_report_path)\n\n            # do not set path and full_report_path to null\n            # so we can check later that the files are indeed deleted\n            refused_email.delete_at = arrow.now()\n            refused_email.deleted = True\n            Session.commit()\n\n    LOG.d(\"Finish delete_refused_emails\")\n\n\ndef notify_premium_end():\n    \"\"\"sent to user who has canceled their subscription and who has their subscription ending soon\"\"\"\n    for sub in Subscription.filter_by(cancelled=True).all():\n        if (\n            arrow.now().shift(days=3).date()\n            > sub.next_bill_date\n            >= arrow.now().shift(days=2).date()\n        ):\n            user = sub.user\n\n            if user.lifetime:\n                continue\n\n            LOG.d(f\"Send subscription ending soon email to user {user}\")\n\n            send_email(\n                user.email,\n                \"Your subscription will end soon\",\n                render(\n                    \"transactional/subscription-end.txt\",\n                    user=user,\n                    next_bill_date=sub.next_bill_date.strftime(\"%Y-%m-%d\"),\n                ),\n                render(\n                    \"transactional/subscription-end.html\",\n                    user=user,\n                    next_bill_date=sub.next_bill_date.strftime(\"%Y-%m-%d\"),\n                ),\n                retries=3,\n            )\n\n\ndef notify_manual_sub_end():\n    for manual_sub in ManualSubscription.all():\n        manual_sub: ManualSubscription\n        need_reminder = False\n        if arrow.now().shift(days=14) > manual_sub.end_at > arrow.now().shift(days=13):\n            need_reminder = True\n        elif arrow.now().shift(days=4) > manual_sub.end_at > arrow.now().shift(days=3):\n            need_reminder = True\n\n        user = manual_sub.user\n        if user.lifetime:\n            LOG.d(\"%s has a lifetime licence\", user)\n            continue\n\n        paddle_sub: Subscription = user.get_paddle_subscription()\n        if paddle_sub and not paddle_sub.cancelled:\n            LOG.d(\"%s has an active Paddle subscription\", user)\n            continue\n\n        if need_reminder:\n            # user can have a (free) manual subscription but has taken a paid subscription via\n            # Paddle, Coinbase or Apple since then\n            if manual_sub.is_giveaway:\n                if user.get_paddle_subscription():\n                    LOG.d(\"%s has a active Paddle subscription\", user)\n                    continue\n\n                coinbase_subscription: CoinbaseSubscription = (\n                    CoinbaseSubscription.get_by(user_id=user.id)\n                )\n                if coinbase_subscription and coinbase_subscription.is_active():\n                    LOG.d(\"%s has a active Coinbase subscription\", user)\n                    continue\n\n                apple_sub: AppleSubscription = AppleSubscription.get_by(user_id=user.id)\n                if apple_sub and apple_sub.is_valid():\n                    LOG.d(\"%s has a active Apple subscription\", user)\n                    continue\n\n            LOG.d(\"Remind user %s that their manual sub is ending soon\", user)\n            send_email(\n                user.email,\n                \"Your subscription will end soon\",\n                render(\n                    \"transactional/manual-subscription-end.txt\",\n                    user=user,\n                    manual_sub=manual_sub,\n                ),\n                render(\n                    \"transactional/manual-subscription-end.html\",\n                    user=user,\n                    manual_sub=manual_sub,\n                ),\n                retries=3,\n            )\n\n    extend_subscription_url = config.URL + \"/dashboard/coinbase_checkout\"\n    for coinbase_subscription in CoinbaseSubscription.all():\n        need_reminder = False\n        if (\n            arrow.now().shift(days=14)\n            > coinbase_subscription.end_at\n            > arrow.now().shift(days=13)\n        ):\n            need_reminder = True\n        elif (\n            arrow.now().shift(days=4)\n            > coinbase_subscription.end_at\n            > arrow.now().shift(days=3)\n        ):\n            need_reminder = True\n\n        if need_reminder:\n            user = coinbase_subscription.user\n            if user.lifetime:\n                continue\n\n            LOG.d(\n                \"Remind user %s that their coinbase subscription is ending soon\", user\n            )\n            send_email(\n                user.email,\n                \"Your SimpleLogin subscription will end soon\",\n                render(\n                    \"transactional/coinbase/reminder-subscription.txt\",\n                    user=user,\n                    coinbase_subscription=coinbase_subscription,\n                    extend_subscription_url=extend_subscription_url,\n                ),\n                render(\n                    \"transactional/coinbase/reminder-subscription.html\",\n                    user=user,\n                    coinbase_subscription=coinbase_subscription,\n                    extend_subscription_url=extend_subscription_url,\n                ),\n                retries=3,\n            )\n\n\ndef poll_apple_subscription():\n    \"\"\"Poll Apple API to update AppleSubscription\"\"\"\n    for apple_sub in (\n        AppleSubscription.filter(\n            AppleSubscription.expires_date < arrow.now().shift(days=15)\n        )\n        .enable_eagerloads(False)\n        .yield_per(100)\n    ):\n        if not apple_sub.is_valid():\n            # Subscription is not valid anymore and hasn't been renewed\n            continue\n        if not apple_sub.product_id:\n            LOG.d(\"Ignore %s\", apple_sub)\n            continue\n\n        user = apple_sub.user\n        if \"io.simplelogin.macapp.subscription\" in apple_sub.product_id:\n            verify_receipt(apple_sub.receipt_data, user, config.MACAPP_APPLE_API_SECRET)\n        else:\n            verify_receipt(apple_sub.receipt_data, user, config.APPLE_API_SECRET)\n\n    LOG.d(\"Finish poll_apple_subscription\")\n\n\ndef compute_metric2() -> Metric2:\n    now = arrow.now()\n    _24h_ago = now.shift(days=-1)\n\n    nb_referred_user_paid = 0\n    for user in (\n        User.filter(User.referral_id.isnot(None))\n        .yield_per(500)\n        .enable_eagerloads(False)\n    ):\n        if user.is_paid():\n            nb_referred_user_paid += 1\n\n    # compute nb_proton_premium, nb_proton_user\n    nb_proton_premium = nb_proton_user = 0\n    try:\n        proton_partner = get_proton_partner()\n        nb_proton_premium = (\n            Session.query(PartnerSubscription, PartnerUser)\n            .filter(\n                PartnerSubscription.partner_user_id == PartnerUser.id,\n                PartnerUser.partner_id == proton_partner.id,\n                PartnerSubscription.end_at > now,\n            )\n            .count()\n        )\n        nb_proton_user = (\n            Session.query(PartnerUser)\n            .filter(\n                PartnerUser.partner_id == proton_partner.id,\n            )\n            .count()\n        )\n    except ProtonPartnerNotSetUp:\n        LOG.d(\"Proton partner not set up\")\n\n    return Metric2.create(\n        date=now,\n        # user stats\n        nb_user=User.count(),\n        nb_activated_user=User.filter_by(activated=True).count(),\n        nb_proton_user=nb_proton_user,\n        # subscription stats\n        nb_premium=Subscription.filter(Subscription.cancelled.is_(False)).count(),\n        nb_cancelled_premium=Subscription.filter(\n            Subscription.cancelled.is_(True)\n        ).count(),\n        # todo: filter by expires_date > now\n        nb_apple_premium=AppleSubscription.count(),\n        nb_manual_premium=ManualSubscription.filter(\n            ManualSubscription.end_at > now,\n            ManualSubscription.is_giveaway.is_(False),\n        ).count(),\n        nb_coinbase_premium=CoinbaseSubscription.filter(\n            CoinbaseSubscription.end_at > now\n        ).count(),\n        nb_proton_premium=nb_proton_premium,\n        # referral stats\n        nb_referred_user=User.filter(User.referral_id.isnot(None)).count(),\n        nb_referred_user_paid=nb_referred_user_paid,\n        nb_alias=Alias.count(),\n        # email log stats\n        nb_forward_last_24h=EmailLog.filter(EmailLog.created_at > _24h_ago)\n        .filter_by(bounced=False, is_spam=False, is_reply=False, blocked=False)\n        .count(),\n        nb_bounced_last_24h=EmailLog.filter(EmailLog.created_at > _24h_ago)\n        .filter_by(bounced=True)\n        .count(),\n        nb_total_bounced_last_24h=Bounce.filter(Bounce.created_at > _24h_ago).count(),\n        nb_reply_last_24h=EmailLog.filter(EmailLog.created_at > _24h_ago)\n        .filter_by(is_reply=True)\n        .count(),\n        nb_block_last_24h=EmailLog.filter(EmailLog.created_at > _24h_ago)\n        .filter_by(blocked=True)\n        .count(),\n        # other stats\n        nb_verified_custom_domain=CustomDomain.filter_by(verified=True).count(),\n        nb_subdomain=CustomDomain.filter_by(is_sl_subdomain=True).count(),\n        nb_directory=Directory.count(),\n        nb_deleted_directory=DeletedDirectory.count(),\n        nb_deleted_subdomain=DeletedSubdomain.count(),\n        nb_app=Client.count(),\n        commit=True,\n    )\n\n\ndef increase_percent(old, new) -> str:\n    if old == 0:\n        return \"N/A\"\n\n    if not old or not new:\n        return \"N/A\"\n\n    increase = (new - old) / old * 100\n    return f\"{increase:.1f}%. Delta: {new - old}\"\n\n\ndef bounce_report() -> List[Tuple[str, int]]:\n    \"\"\"return the accounts that have most bounces, e.g.\n    (email1, 30)\n    (email2, 20)\n\n    Produce this query\n\n    ```\n    SELECT\n        count(*) AS c,\n        users.email\n    FROM\n        email_log,\n        users\n    WHERE\n        email_log.user_id = users.id\n        AND email_log.created_at > '2021-3-20'\n        and email_log.bounced = true\n    GROUP BY\n        users.email\n    ORDER BY\n        c DESC;\n    ```\n\n    \"\"\"\n    min_dt = arrow.now().shift(days=-1)\n    query = (\n        Session.query(User.email, func.count(EmailLog.id).label(\"count\"))\n        .join(EmailLog, EmailLog.user_id == User.id)\n        .filter(EmailLog.bounced, EmailLog.created_at > min_dt)\n        .group_by(User.email)\n        .having(func.count(EmailLog.id) > 5)\n        .order_by(desc(\"count\"))\n    )\n\n    res = []\n    for email, count in query:\n        res.append((email, count))\n\n    return res\n\n\ndef all_bounce_report() -> str:\n    \"\"\"\n    Return a report for all mailboxes that have most bounces. Using this query to get mailboxes that have bounces.\n    For each mailbox in the list, return the first bounce info.\n\n    ```\n    SELECT\n        email,\n        count(*) AS nb_bounce\n    FROM\n        bounce\n    WHERE\n        created_at > '2021-10-16'\n    GROUP BY\n        email\n    ORDER BY\n        nb_bounce DESC\n    ```\n\n    \"\"\"\n    res = \"\"\n    min_dt = arrow.now().shift(days=-1)\n    query = (\n        Session.query(Bounce.email, func.count(Bounce.id).label(\"nb_bounce\"))\n        .filter(Bounce.created_at > min_dt)\n        .group_by(Bounce.email)\n        # not return mailboxes that have too little bounces\n        .having(func.count(Bounce.id) > 3)\n        .order_by(desc(\"nb_bounce\"))\n    )\n\n    for email, count in query:\n        res += f\"{email}: {count} bounces. \"\n        most_recent: Bounce = (\n            Bounce.filter(Bounce.email == email)\n            .order_by(Bounce.created_at.desc())\n            .first()\n        )\n        # most_recent.info can be very verbose\n        res += f\"Most recent cause: \\n{most_recent.info[:1000] if most_recent.info else 'N/A'}\"\n        res += \"\\n----\\n\"\n\n    return res\n\n\ndef alias_creation_report() -> List[Tuple[str, int]]:\n    \"\"\"return the accounts that have created most aliases in the last 7 days, e.g.\n    (email1, 2021-3-21, 30)\n    (email2, 2021-3-20, 20)\n\n    Produce this query\n\n    ```\n    SELECT\n        count(*) AS c,\n        users.email,\n        date(alias.created_at) AS d\n    FROM\n        alias,\n        users\n    WHERE\n        alias.user_id = users.id\n        AND alias.created_at > '2021-3-22'\n    GROUP BY\n        users.email,\n        d\n    HAVING\n        count(*) > 50\n    ORDER BY\n        c DESC;\n    ```\n\n    \"\"\"\n    min_dt = arrow.now().shift(days=-7)\n    query = (\n        Session.query(\n            User.email,\n            func.count(Alias.id).label(\"count\"),\n            func.date(Alias.created_at).label(\"date\"),\n        )\n        .join(Alias, Alias.user_id == User.id)\n        .filter(Alias.created_at > min_dt)\n        .group_by(User.email, \"date\")\n        .having(func.count(Alias.id) > 50)\n        .order_by(desc(\"count\"))\n    )\n\n    res = []\n    for email, count, date in query:\n        res.append((email, count, date))\n\n    return res\n\n\ndef stats():\n    \"\"\"send admin stats everyday\"\"\"\n    if not config.ADMIN_EMAIL:\n        LOG.w(\"ADMIN_EMAIL not set, nothing to do\")\n        return\n\n    stats_today = compute_metric2()\n    stats_yesterday = (\n        Metric2.filter(Metric2.date < stats_today.date)\n        .order_by(Metric2.date.desc())\n        .first()\n    )\n\n    today = arrow.now().format()\n\n    growth_stats = f\"\"\"\nGrowth Stats for {today}\n\nnb_user: {stats_today.nb_user} - {increase_percent(stats_yesterday.nb_user, stats_today.nb_user)}\nnb_proton_user: {stats_today.nb_proton_user} - {increase_percent(stats_yesterday.nb_proton_user, stats_today.nb_proton_user)}\nnb_premium: {stats_today.nb_premium} - {increase_percent(stats_yesterday.nb_premium, stats_today.nb_premium)}\nnb_cancelled_premium: {stats_today.nb_cancelled_premium} - {increase_percent(stats_yesterday.nb_cancelled_premium, stats_today.nb_cancelled_premium)}\nnb_apple_premium: {stats_today.nb_apple_premium} - {increase_percent(stats_yesterday.nb_apple_premium, stats_today.nb_apple_premium)}\nnb_manual_premium: {stats_today.nb_manual_premium} - {increase_percent(stats_yesterday.nb_manual_premium, stats_today.nb_manual_premium)}\nnb_coinbase_premium: {stats_today.nb_coinbase_premium} - {increase_percent(stats_yesterday.nb_coinbase_premium, stats_today.nb_coinbase_premium)}\nnb_proton_premium: {stats_today.nb_proton_premium} - {increase_percent(stats_yesterday.nb_proton_premium, stats_today.nb_proton_premium)}\nnb_alias: {stats_today.nb_alias} - {increase_percent(stats_yesterday.nb_alias, stats_today.nb_alias)}\n\nnb_forward_last_24h: {stats_today.nb_forward_last_24h} - {increase_percent(stats_yesterday.nb_forward_last_24h, stats_today.nb_forward_last_24h)}\nnb_reply_last_24h: {stats_today.nb_reply_last_24h} - {increase_percent(stats_yesterday.nb_reply_last_24h, stats_today.nb_reply_last_24h)}\nnb_block_last_24h: {stats_today.nb_block_last_24h} - {increase_percent(stats_yesterday.nb_block_last_24h, stats_today.nb_block_last_24h)}\nnb_bounced_last_24h: {stats_today.nb_bounced_last_24h} - {increase_percent(stats_yesterday.nb_bounced_last_24h, stats_today.nb_bounced_last_24h)}\n\nnb_custom_domain: {stats_today.nb_verified_custom_domain} - {increase_percent(stats_yesterday.nb_verified_custom_domain, stats_today.nb_verified_custom_domain)}\nnb_subdomain: {stats_today.nb_subdomain} - {increase_percent(stats_yesterday.nb_subdomain, stats_today.nb_subdomain)}\nnb_directory: {stats_today.nb_directory} - {increase_percent(stats_yesterday.nb_directory, stats_today.nb_directory)}\nnb_deleted_directory: {stats_today.nb_deleted_directory} - {increase_percent(stats_yesterday.nb_deleted_directory, stats_today.nb_deleted_directory)}\nnb_deleted_subdomain: {stats_today.nb_deleted_subdomain} - {increase_percent(stats_yesterday.nb_deleted_subdomain, stats_today.nb_deleted_subdomain)}\n\nnb_app: {stats_today.nb_app} - {increase_percent(stats_yesterday.nb_app, stats_today.nb_app)}\nnb_referred_user: {stats_today.nb_referred_user} - {increase_percent(stats_yesterday.nb_referred_user, stats_today.nb_referred_user)}\nnb_referred_user_upgrade: {stats_today.nb_referred_user_paid} - {increase_percent(stats_yesterday.nb_referred_user_paid, stats_today.nb_referred_user_paid)}\n    \"\"\"\n\n    LOG.d(\"growth_stats email: %s\", growth_stats)\n\n    send_email(\n        config.ADMIN_EMAIL,\n        subject=f\"SimpleLogin Growth Stats for {today}\",\n        plaintext=growth_stats,\n        retries=3,\n    )\n\n    monitoring_report = f\"\"\"\nMonitoring Stats for {today}\n\nnb_alias: {stats_today.nb_alias} - {increase_percent(stats_yesterday.nb_alias, stats_today.nb_alias)}\n\nnb_forward_last_24h: {stats_today.nb_forward_last_24h} - {increase_percent(stats_yesterday.nb_forward_last_24h, stats_today.nb_forward_last_24h)}\nnb_reply_last_24h: {stats_today.nb_reply_last_24h} - {increase_percent(stats_yesterday.nb_reply_last_24h, stats_today.nb_reply_last_24h)}\nnb_block_last_24h: {stats_today.nb_block_last_24h} - {increase_percent(stats_yesterday.nb_block_last_24h, stats_today.nb_block_last_24h)}\nnb_bounced_last_24h: {stats_today.nb_bounced_last_24h} - {increase_percent(stats_yesterday.nb_bounced_last_24h, stats_today.nb_bounced_last_24h)}\nnb_total_bounced_last_24h: {stats_today.nb_total_bounced_last_24h} - {increase_percent(stats_yesterday.nb_total_bounced_last_24h, stats_today.nb_total_bounced_last_24h)}\n\n    \"\"\"\n\n    monitoring_report += \"\\n====================================\\n\"\n    monitoring_report += \"\"\"\n# Account bounce report:\n\"\"\"\n\n    for email, bounces in bounce_report():\n        monitoring_report += f\"{email}: {bounces}\\n\"\n\n    monitoring_report += \"\"\"\\n\n# Alias creation report:\n\"\"\"\n\n    for email, nb_alias, date in alias_creation_report():\n        monitoring_report += f\"{email}, {date}: {nb_alias}\\n\"\n\n    monitoring_report += \"\"\"\\n\n# Full bounce detail report:\n\"\"\"\n    monitoring_report += all_bounce_report()\n\n    LOG.d(\"monitoring_report email: %s\", monitoring_report)\n\n    send_email(\n        config.MONITORING_EMAIL,\n        subject=f\"SimpleLogin Monitoring Report for {today}\",\n        plaintext=monitoring_report,\n        retries=3,\n    )\n\n\ndef migrate_domain_trash():\n    \"\"\"Move aliases from global trash to domain trash if applicable\"\"\"\n\n    # ignore duplicate when insert\n    # copied from https://github.com/sqlalchemy/sqlalchemy/issues/5374\n    @compiles(Insert, \"postgresql\")\n    def postgresql_on_conflict_do_nothing(insert, compiler, **kw):\n        statement = compiler.visit_insert(insert, **kw)\n        # IF we have a \"RETURNING\" clause, we must insert before it\n        returning_position = statement.find(\"RETURNING\")\n        if returning_position >= 0:\n            return (\n                statement[:returning_position]\n                + \"ON CONFLICT DO NOTHING \"\n                + statement[returning_position:]\n            )\n        else:\n            return statement + \" ON CONFLICT DO NOTHING\"\n\n    sl_domains = [sl.domain for sl in SLDomain.all()]\n    count = 0\n    domain_deleted_aliases = []\n    deleted_alias_ids = []\n    for deleted_alias in DeletedAlias.yield_per_query():\n        if count % 1000 == 0:\n            LOG.d(\"process %s\", count)\n\n        count += 1\n\n        alias_domain = get_email_domain_part(deleted_alias.email)\n        if alias_domain not in sl_domains:\n            custom_domain = CustomDomain.get_by(domain=alias_domain)\n            if custom_domain:\n                LOG.w(\"move %s to domain %s trash\", deleted_alias, custom_domain)\n                domain_deleted_aliases.append(\n                    DomainDeletedAlias(\n                        user_id=custom_domain.user_id,\n                        email=deleted_alias.email,\n                        domain_id=custom_domain.id,\n                        created_at=deleted_alias.created_at,\n                    )\n                )\n                deleted_alias_ids.append(deleted_alias.id)\n\n    LOG.d(\"create %s DomainDeletedAlias\", len(domain_deleted_aliases))\n    Session.bulk_save_objects(domain_deleted_aliases)\n\n    LOG.d(\"delete %s DeletedAlias\", len(deleted_alias_ids))\n    DeletedAlias.filter(DeletedAlias.id.in_(deleted_alias_ids)).delete(\n        synchronize_session=False\n    )\n\n    Session.commit()\n\n\ndef set_custom_domain_for_alias():\n    \"\"\"Go through all aliases and make sure custom_domain is correctly set\"\"\"\n    sl_domains = [sl_domain.domain for sl_domain in SLDomain.all()]\n    for alias in Alias.yield_per_query().filter(Alias.custom_domain_id.is_(None)):\n        if (\n            not any(alias.email.endswith(f\"@{sl_domain}\") for sl_domain in sl_domains)\n            and not alias.custom_domain_id\n        ):\n            alias_domain = get_email_domain_part(alias.email)\n            custom_domain = CustomDomain.get_by(domain=alias_domain)\n            if custom_domain:\n                LOG.e(\"set %s for %s\", custom_domain, alias)\n                alias.custom_domain_id = custom_domain.id\n            else:  # phantom domain\n                LOG.d(\"phantom domain %s %s %s\", alias.user, alias, alias.enabled)\n\n    Session.commit()\n\n\ndef sanitize_alias_address_name():\n    count = 0\n    # using Alias.all() will take all the memory\n    for alias in Alias.yield_per_query():\n        if count % 1000 == 0:\n            LOG.d(\"process %s\", count)\n\n        count += 1\n        if sanitize_email(alias.email) != alias.email:\n            LOG.e(\"Alias %s email not sanitized\", alias)\n\n        if alias.name and \"\\n\" in alias.name:\n            alias.name = alias.name.replace(\"\\n\", \"\")\n            Session.commit()\n            LOG.e(\"Alias %s name contains linebreak %s\", alias, alias.name)\n\n\ndef sanity_check():\n    LOG.d(\"sanitize user email\")\n    for user in User.filter_by(activated=True).all():\n        if sanitize_email(user.email) != user.email:\n            LOG.e(\"%s does not have sanitized email\", user)\n\n    LOG.d(\"sanitize alias address & name\")\n    sanitize_alias_address_name()\n\n    LOG.d(\"sanity contact address\")\n    contact_email_sanity_date = arrow.get(\"2021-01-12\")\n    for contact in Contact.yield_per_query():\n        if sanitize_email(contact.reply_email) != contact.reply_email:\n            LOG.e(\"Contact %s reply-email not sanitized\", contact)\n\n        if (\n            sanitize_email(contact.website_email, not_lower=True)\n            != contact.website_email\n            and contact.created_at > contact_email_sanity_date\n        ):\n            LOG.e(\"Contact %s website-email not sanitized\", contact)\n\n        if not contact.invalid_email and not is_valid_email(contact.website_email):\n            LOG.e(\"%s invalid email\", contact)\n            contact.invalid_email = True\n    Session.commit()\n\n    LOG.d(\"sanitize mailbox address\")\n    for mailbox in Mailbox.yield_per_query():\n        if sanitize_email(mailbox.email) != mailbox.email:\n            LOG.e(\"Mailbox %s address not sanitized\", mailbox)\n\n    LOG.d(\"normalize reverse alias\")\n    for contact in Contact.yield_per_query():\n        if normalize_reply_email(contact.reply_email) != contact.reply_email:\n            LOG.e(\n                \"Contact %s reply email is not normalized %s\",\n                contact,\n                contact.reply_email,\n            )\n\n    LOG.d(\"clean domain name\")\n    for domain in CustomDomain.yield_per_query():\n        if domain.name and \"\\n\" in domain.name:\n            LOG.e(\"Domain %s name contain linebreak %s\", domain, domain.name)\n\n    LOG.d(\"migrate domain trash if needed\")\n    migrate_domain_trash()\n\n    LOG.d(\"fix custom domain for alias\")\n    set_custom_domain_for_alias()\n\n    LOG.d(\"check mailbox valid domain\")\n    check_mailbox_valid_domain()\n\n    LOG.d(\"check mailbox valid PGP keys\")\n    check_mailbox_valid_pgp_keys()\n\n    LOG.d(\n        \"\"\"check if there's an email that starts with \"\\u200f\" (right-to-left mark (RLM))\"\"\"\n    )\n    for contact in (\n        Contact.yield_per_query()\n        .filter(Contact.website_email.startswith(\"\\u200f\"))\n        .all()\n    ):\n        contact.website_email = contact.website_email.replace(\"\\u200f\", \"\")\n        LOG.e(\"remove right-to-left mark (RLM) from %s\", contact)\n    Session.commit()\n\n    LOG.d(\"Finish sanity check\")\n\n\ndef check_mailbox_valid_domain():\n    \"\"\"detect if there's mailbox that's using an invalid domain\"\"\"\n    mailbox_ids = (\n        Session.query(Mailbox.id)\n        .filter(Mailbox.verified.is_(True), Mailbox.disabled.is_(False))\n        .all()\n    )\n    mailbox_ids = [e[0] for e in mailbox_ids]\n    # iterate over id instead of mailbox directly\n    # as a mailbox can be deleted in the meantime\n    for mailbox_id in mailbox_ids:\n        mailbox = Mailbox.get(mailbox_id)\n        # a mailbox has been deleted\n        if not mailbox:\n            continue\n\n        if email_can_be_used_as_mailbox(mailbox.email):\n            LOG.d(\"Mailbox %s valid\", mailbox)\n            mailbox.nb_failed_checks = 0\n        else:\n            mailbox.nb_failed_checks += 1\n            nb_email_log = nb_email_log_for_mailbox(mailbox)\n\n            LOG.w(\n                \"issue with mailbox %s domain. #alias %s, nb email log %s\",\n                mailbox,\n                mailbox.nb_alias(),\n                nb_email_log,\n            )\n\n            # send a warning\n            if mailbox.nb_failed_checks == 5:\n                if mailbox.user.email != mailbox.email:\n                    send_email(\n                        mailbox.user.email,\n                        f\"Mailbox {mailbox.email} is disabled\",\n                        render(\n                            \"transactional/disable-mailbox-warning.txt.jinja2\",\n                            user=mailbox.user,\n                            mailbox=mailbox,\n                        ),\n                        render(\n                            \"transactional/disable-mailbox-warning.html\",\n                            user=mailbox.user,\n                            mailbox=mailbox,\n                        ),\n                        retries=3,\n                    )\n\n            # alert if too much fail and nb_email_log > 100\n            if mailbox.nb_failed_checks > 10 and nb_email_log > 100:\n                mailbox.disabled = True\n\n                if mailbox.user.email != mailbox.email:\n                    send_email(\n                        mailbox.user.email,\n                        f\"Mailbox {mailbox.email} is disabled\",\n                        render(\n                            \"transactional/disable-mailbox.txt.jinja2\", mailbox=mailbox\n                        ),\n                        render(\"transactional/disable-mailbox.html\", mailbox=mailbox),\n                        retries=3,\n                    )\n\n        Session.commit()\n\n\ndef check_mailbox_valid_pgp_keys():\n    mailbox_ids = (\n        Session.query(Mailbox.id)\n        .filter(\n            Mailbox.verified.is_(True),\n            Mailbox.pgp_public_key.isnot(None),\n            Mailbox.disable_pgp.is_(False),\n        )\n        .all()\n    )\n    mailbox_ids = [e[0] for e in mailbox_ids]\n    # iterate over id instead of mailbox directly\n    # as a mailbox can be deleted in the meantime\n    for mailbox_id in mailbox_ids:\n        mailbox = Mailbox.get(mailbox_id)\n        # a mailbox has been deleted\n        if not mailbox:\n            LOG.d(f\"Mailbox {mailbox_id} not found\")\n            continue\n\n        LOG.d(f\"Checking PGP key for {mailbox}\")\n\n        try:\n            load_public_key_and_check(mailbox.pgp_public_key)\n        except PGPException:\n            LOG.i(f\"{mailbox} PGP key invalid\")\n            send_email(\n                mailbox.user.email,\n                f\"Mailbox {mailbox.email}'s PGP Key is invalid\",\n                render(\n                    \"transactional/invalid-mailbox-pgp-key.txt.jinja2\",\n                    user=mailbox.user,\n                    mailbox=mailbox,\n                ),\n                retries=3,\n            )\n\n\ndef check_custom_domain():\n    # Delete custom domains that haven't been verified in a month\n    for custom_domain in (\n        CustomDomain.filter(\n            CustomDomain.verified == False,  # noqa: E712\n            CustomDomain.created_at < arrow.now().shift(months=-1),\n        )\n        .enable_eagerloads(False)\n        .yield_per(100)\n    ):\n        alias_count = Alias.filter(Alias.custom_domain_id == custom_domain.id).count()\n        if alias_count > 0:\n            LOG.warn(\n                f\"Custom Domain {custom_domain} has {alias_count} aliases. Won't delete\"\n            )\n        else:\n            LOG.i(f\"Deleting unverified old custom domain {custom_domain}\")\n            CustomDomain.delete(custom_domain.id)\n\n    LOG.d(\"Check verified domain for DNS issues\")\n\n    for custom_domain in CustomDomain.filter_by(verified=True):  # type: CustomDomain\n        try:\n            check_single_custom_domain(custom_domain)\n        except ObjectDeletedError:\n            LOG.i(\"custom domain has been deleted\")\n\n\ndef check_single_custom_domain(custom_domain: CustomDomain):\n    mx_domains = get_mx_domains(custom_domain.domain)\n    validator = CustomDomainValidation(dkim_domain=config.EMAIL_DOMAIN)\n    expected_custom_domains = validator.get_expected_mx_records(custom_domain)\n    if not is_mx_equivalent(mx_domains, expected_custom_domains):\n        user = custom_domain.user\n        LOG.w(\n            \"The MX record is not correctly set for %s %s %s\",\n            custom_domain,\n            user,\n            mx_domains,\n        )\n\n        custom_domain.nb_failed_checks += 1\n\n        # send alert if fail for 5 consecutive days\n        if custom_domain.nb_failed_checks > 5:\n            domain_dns_url = f\"{config.URL}/dashboard/domains/{custom_domain.id}/dns\"\n            LOG.w(\"Alert domain MX check fails %s about %s\", user, custom_domain)\n            send_email_with_rate_control(\n                user,\n                config.AlERT_WRONG_MX_RECORD_CUSTOM_DOMAIN,\n                user.email,\n                f\"Please update {custom_domain.domain} DNS on SimpleLogin\",\n                render(\n                    \"transactional/custom-domain-dns-issue.txt.jinja2\",\n                    user=user,\n                    custom_domain=custom_domain,\n                    domain_dns_url=domain_dns_url,\n                ),\n                max_nb_alert=1,\n                nb_day=30,\n                retries=3,\n            )\n            # reset checks\n            custom_domain.nb_failed_checks = 0\n    else:\n        # reset checks\n        custom_domain.nb_failed_checks = 0\n    Session.commit()\n\n\ndef delete_old_monitoring():\n    \"\"\"\n    Delete old monitoring records\n    \"\"\"\n    max_time = arrow.now().shift(days=-30)\n    nb_row = Monitoring.filter(Monitoring.created_at < max_time).delete()\n    Session.commit()\n    LOG.d(\"delete monitoring records older than %s, nb row %s\", max_time, nb_row)\n\n\ndef delete_expired_tokens():\n    \"\"\"\n    Delete old tokens\n    \"\"\"\n    max_time = arrow.now().shift(hours=-1)\n    nb_row = ApiToCookieToken.filter(ApiToCookieToken.created_at < max_time).delete()\n    Session.commit()\n    LOG.d(\"Delete api to cookie tokens older than %s, nb row %s\", max_time, nb_row)\n\n\nasync def _hibp_check(api_key: str, queue: asyncio.Queue):\n    \"\"\"\n    Uses a single API key to check the queue as fast as possible.\n\n    This function to be ran simultaneously (multiple _hibp_check functions with different keys on the same queue) to make maximum use of multiple API keys.\n    \"\"\"\n    default_rate_sleep = (60.0 / config.HIBP_RPM) + 0.1\n    rate_sleep = default_rate_sleep\n    rate_hit_counter = 0\n    while True:\n        try:\n            alias_id = queue.get_nowait()\n        except asyncio.QueueEmpty:\n            return\n\n        alias = Alias.get(alias_id)\n        if not alias:\n            continue\n        user = alias.user\n        if user.disabled or not user.is_premium():\n            # Mark it as hibp done to skip it as if it had been checked\n            alias.hibp_last_check = arrow.utcnow()\n            Session.commit()\n            continue\n        if alias.flags & Alias.FLAG_PARTNER_CREATED > 0:\n            # Mark as hibp done\n            alias.hibp_last_check = arrow.utcnow()\n            Session.commit()\n            continue\n\n        LOG.d(\"Checking HIBP for %s\", alias)\n\n        request_headers = {\n            \"user-agent\": \"SimpleLogin\",\n            \"hibp-api-key\": api_key,\n        }\n        r = requests.get(\n            f\"https://haveibeenpwned.com/api/v3/breachedaccount/{urllib.parse.quote(alias.email)}\",\n            headers=request_headers,\n        )\n        if r.status_code == 200:\n            # Breaches found\n            alias.hibp_breaches = [\n                Hibp.get_by(name=entry[\"Name\"]) for entry in r.json()\n            ]\n            if len(alias.hibp_breaches) > 0:\n                LOG.w(\"%s appears in HIBP breaches %s\", alias, alias.hibp_breaches)\n            if rate_hit_counter > 0:\n                rate_hit_counter -= 1\n        elif r.status_code == 404:\n            # No breaches found\n            alias.hibp_breaches = []\n        elif r.status_code == 429:\n            # rate limited\n            LOG.w(\"HIBP rate limited, check alias %s in the next run\", alias)\n            rate_hit_counter += 1\n            rate_sleep = default_rate_sleep + (0.2 * rate_hit_counter)\n            if rate_hit_counter > 10:\n                LOG.w(f\"HIBP rate limited too many times stopping with alias {alias}\")\n                return\n            # Just sleep for a while\n            asyncio.sleep(5)\n        elif r.status_code > 500:\n            LOG.w(\"HIBP server 5** error %s\", r.status_code)\n            return\n        else:\n            LOG.error(\n                \"An error occurred while checking alias %s: %s - %s\",\n                alias,\n                r.status_code,\n                r.text,\n            )\n            return\n\n        alias.hibp_last_check = arrow.utcnow()\n        Session.add(alias)\n        Session.commit()\n\n        LOG.d(\"Updated breach info for %s\", alias)\n        await asyncio.sleep(rate_sleep)\n\n\ndef get_alias_to_check_hibp(\n    oldest_hibp_allowed: arrow.Arrow,\n    user_ids_to_skip: list[int],\n    min_alias_id: int,\n    max_alias_id: int,\n):\n    now = arrow.now()\n    alias_query = (\n        Session.query(Alias)\n        .join(User, User.id == Alias.user_id)\n        .join(Subscription, User.id == Subscription.user_id, isouter=True)\n        .join(ManualSubscription, User.id == ManualSubscription.user_id, isouter=True)\n        .join(AppleSubscription, User.id == AppleSubscription.user_id, isouter=True)\n        .join(\n            CoinbaseSubscription,\n            User.id == CoinbaseSubscription.user_id,\n            isouter=True,\n        )\n        .join(PartnerUser, User.id == PartnerUser.user_id, isouter=True)\n        .join(\n            PartnerSubscription,\n            PartnerSubscription.partner_user_id == PartnerUser.id,\n            isouter=True,\n        )\n        .filter(\n            or_(\n                Alias.hibp_last_check.is_(None),\n                Alias.hibp_last_check < oldest_hibp_allowed,\n            ),\n            Alias.user_id.notin_(user_ids_to_skip),\n            Alias.enabled,\n            Alias.id >= min_alias_id,\n            Alias.id < max_alias_id,\n            User.disabled == False,  # noqa: E712\n            User.enable_data_breach_check,\n            or_(\n                User.lifetime,\n                ManualSubscription.end_at > now,\n                Subscription.next_bill_date > now.date(),\n                AppleSubscription.expires_date > now,\n                CoinbaseSubscription.end_at > now,\n                PartnerSubscription.end_at > now,\n            ),\n        )\n    )\n    if config.HIBP_SKIP_PARTNER_ALIAS:\n        alias_query = alias_query.filter(\n            Alias.flags.op(\"&\")(Alias.FLAG_PARTNER_CREATED) == 0\n        )\n    for alias in (\n        alias_query.order_by(Alias.id.asc()).enable_eagerloads(False).yield_per(500)\n    ):\n        yield alias\n\n\nasync def check_hibp():\n    \"\"\"\n    Check all aliases on the HIBP (Have I Been Pwned) API\n    \"\"\"\n    LOG.d(\"Checking HIBP API for aliases in breaches\")\n\n    if len(config.HIBP_API_KEYS) == 0:\n        LOG.e(\"No HIBP API keys\")\n        return\n\n    LOG.d(\"Updating list of known breaches\")\n    r = requests.get(\"https://haveibeenpwned.com/api/v3/breaches\")\n    for entry in r.json():\n        hibp_entry = Hibp.get_or_create(name=entry[\"Name\"])\n        hibp_entry.date = arrow.get(entry[\"BreachDate\"])\n        hibp_entry.description = entry[\"Description\"]\n\n    Session.commit()\n    LOG.d(\"Updated list of known breaches\")\n\n    LOG.d(\"Getting the list of users to skip\")\n    query = \"select u.id, count(a.id) from users u, alias a where a.user_id=u.id group by u.id having count(a.id) > :max_alias\"\n    rows = Session.execute(query, {\"max_alias\": config.HIBP_MAX_ALIAS_CHECK})\n    user_ids = [row[0] for row in rows]\n    LOG.d(\"Got %d users to skip\" % len(user_ids))\n\n    LOG.d(\"Checking aliases\")\n    queue = asyncio.Queue()\n    min_alias_id = 0\n    max_alias_id = Session.query(func.max(Alias.id)).scalar()\n    step = 10000\n    now = arrow.now()\n    oldest_hibp_allowed = now.shift(days=-config.HIBP_SCAN_INTERVAL_DAYS)\n    alias_checked = 0\n    for alias_batch_id in range(min_alias_id, max_alias_id, step):\n        for alias in get_alias_to_check_hibp(\n            oldest_hibp_allowed, user_ids, alias_batch_id, alias_batch_id + step\n        ):\n            await queue.put(alias.id)\n\n        alias_checked += queue.qsize()\n        LOG.d(\n            f\"Need to check about {queue.qsize()} aliases in this loop {alias_batch_id}/{max_alias_id}\"\n        )\n\n        # Start one checking process per API key\n        # Each checking process will take one alias from the queue, get the info\n        # and then sleep for 1.5 seconds (due to HIBP API request limits)\n        checkers = []\n        for i in range(len(config.HIBP_API_KEYS)):\n            checker = asyncio.create_task(\n                _hibp_check(\n                    config.HIBP_API_KEYS[i],\n                    queue,\n                )\n            )\n            checkers.append(checker)\n\n        # Wait until all checking processes are done\n        for checker in checkers:\n            await checker\n\n    LOG.d(f\"Done checking {alias_checked} HIBP API for aliases in breaches\")\n\n\ndef notify_hibp():\n    \"\"\"\n    Send aggregated email reports for HIBP breaches\n    \"\"\"\n    # to get a list of users that have at least a breached alias\n    alias_query = (\n        Session.query(Alias)\n        .options(joinedload(Alias.hibp_breaches))\n        .filter(Alias.hibp_breaches.any())\n        .filter(Alias.id.notin_(Session.query(HibpNotifiedAlias.alias_id)))\n        .distinct(Alias.user_id)\n        .all()\n    )\n\n    user_ids = [alias.user_id for alias in alias_query]\n\n    for user in User.filter(User.id.in_(user_ids)):\n        breached_aliases = (\n            Session.query(Alias)\n            .options(joinedload(Alias.hibp_breaches))\n            .filter(Alias.hibp_breaches.any(), Alias.user_id == user.id)\n            .all()\n        )\n\n        LOG.d(\n            \"Send new breaches found email to %s for %s breaches aliases\",\n            user,\n            len(breached_aliases),\n        )\n\n        send_email(\n            user.email,\n            \"You were in a data breach\",\n            render(\n                \"transactional/hibp-new-breaches.txt.jinja2\",\n                user=user,\n                breached_aliases=breached_aliases,\n            ),\n            render(\n                \"transactional/hibp-new-breaches.html\",\n                user=user,\n                breached_aliases=breached_aliases,\n            ),\n            retries=3,\n        )\n\n        # add the breached aliases to HibpNotifiedAlias to avoid sending another email\n        for alias in breached_aliases:\n            HibpNotifiedAlias.create(user_id=user.id, alias_id=alias.id)\n        Session.commit()\n\n\ndef clear_users_scheduled_to_be_deleted(dry_run=False):\n    users: List[User] = User.filter(\n        and_(\n            User.delete_on.isnot(None),\n            User.delete_on <= arrow.now().shift(days=-DELETE_GRACE_DAYS),\n        )\n    ).all()\n    for user in users:\n        LOG.i(\n            f\"Scheduled deletion of user {user} with scheduled delete on {user.delete_on}\"\n        )\n        if dry_run:\n            continue\n        emit_user_audit_log(\n            user=user,\n            action=UserAuditLogAction.DeleteUser,\n            message=f\"Delete user {user.id} ({user.email})\",\n        )\n        User.delete(user.id)\n        Session.commit()\n\n\ndef delete_old_data():\n    oldest_valid = arrow.now().shift(days=-config.KEEP_OLD_DATA_DAYS)\n    cleanup_old_imports(oldest_valid)\n    cleanup_old_jobs(oldest_valid)\n    cleanup_old_notifications(oldest_valid)\n\n\ndef clear_alias_audit_log():\n    oldest_valid = arrow.now().shift(days=-config.AUDIT_LOG_MAX_DAYS)\n    cleanup_alias_audit_log(oldest_valid)\n\n\ndef clear_user_audit_log():\n    oldest_valid = arrow.now().shift(days=-config.AUDIT_LOG_MAX_DAYS)\n    cleanup_user_audit_log(oldest_valid)\n\n\nif __name__ == \"__main__\":\n    LOG.d(\"Start running cronjob\")\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\n        \"-j\",\n        \"--job\",\n        help=\"Choose a cron job to run\",\n        type=str,\n    )\n    args = parser.parse_args()\n    # wrap in an app context to benefit from app setup like database cleanup, sentry integration, etc\n    with create_light_app().app_context():\n        if args.job == \"stats\":\n            LOG.d(\"Compute growth and daily monitoring stats\")\n            stats()\n        elif args.job == \"notify_trial_end\":\n            LOG.d(\"Notify users with trial ending soon\")\n            notify_trial_end()\n        elif args.job == \"notify_manual_subscription_end\":\n            LOG.d(\"Notify users with manual subscription ending soon\")\n            notify_manual_sub_end()\n        elif args.job == \"notify_premium_end\":\n            LOG.d(\"Notify users with premium ending soon\")\n            notify_premium_end()\n        elif args.job == \"delete_logs\":\n            LOG.d(\"Deleted Logs\")\n            delete_logs()\n        elif args.job == \"delete_old_data\":\n            LOG.d(\"Delete old data\")\n            delete_old_data()\n        elif args.job == \"poll_apple_subscription\":\n            LOG.d(\"Poll Apple Subscriptions\")\n            poll_apple_subscription()\n        elif args.job == \"sanity_check\":\n            LOG.d(\"Check data consistency\")\n            sanity_check()\n        elif args.job == \"delete_old_monitoring\":\n            LOG.d(\"Delete old monitoring records\")\n            delete_old_monitoring()\n        elif args.job == \"check_custom_domain\":\n            LOG.d(\"Check custom domain\")\n            check_custom_domain()\n        elif args.job == \"check_hibp\":\n            LOG.d(\"Check HIBP\")\n            asyncio.run(check_hibp())\n        elif args.job == \"notify_hibp\":\n            LOG.d(\"Notify users about HIBP breaches\")\n            notify_hibp()\n        elif args.job == \"cleanup_tokens\":\n            LOG.d(\"Cleanup expired tokens\")\n            delete_expired_tokens()\n        elif args.job == \"send_undelivered_mails\":\n            LOG.d(\"Sending undelivered emails\")\n            load_unsent_mails_from_fs_and_resend()\n        elif args.job == \"delete_scheduled_users\":\n            LOG.d(\"Deleting users scheduled to be deleted\")\n            clear_users_scheduled_to_be_deleted()\n        elif args.job == \"clear_alias_audit_log\":\n            LOG.d(\"Clearing alias audit log\")\n            clear_alias_audit_log()\n        elif args.job == \"clear_user_audit_log\":\n            LOG.d(\"Clearing user audit log\")\n            clear_user_audit_log()\n"
        },
        {
          "name": "crontab-all-hosts.yml",
          "type": "blob",
          "size": 0.205078125,
          "content": "jobs:\n  - name: SimpleLogin send unsent emails\n    command: python /code/cron.py -j send_undelivered_mails\n    shell: /bin/bash\n    schedule: \"*/5 * * * *\"\n    captureStderr: true\n    concurrencyPolicy: Forbid\n"
        },
        {
          "name": "crontab.yml",
          "type": "blob",
          "size": 3.048828125,
          "content": "jobs:\n  - name: SimpleLogin growth stats\n    command: python /code/cron.py -j stats\n    shell: /bin/bash\n    schedule: \"0 0 * * *\"\n    captureStderr: true\n\n  - name: SimpleLogin Delete Old Monitoring records\n    command: python /code/cron.py -j delete_old_monitoring\n    shell: /bin/bash\n    schedule: \"15 1 * * *\"\n    captureStderr: true\n\n  - name: SimpleLogin Custom Domain check\n    command: python /code/cron.py -j check_custom_domain\n    shell: /bin/bash\n    schedule: \"15 */4 * * *\"\n    captureStderr: true\n    concurrencyPolicy: Forbid\n    onFailure:\n      retry:\n        maximumRetries: 10\n        initialDelay: 1\n        maximumDelay: 30\n        backoffMultiplier: 2\n\n  - name: SimpleLogin HIBP check\n    command: python /code/cron.py -j check_hibp\n    shell: /bin/bash\n    schedule: \"13 */4 * * *\"\n    captureStderr: true\n    concurrencyPolicy: Forbid\n    onFailure:\n      retry:\n        maximumRetries: 10\n        initialDelay: 1\n        maximumDelay: 30\n        backoffMultiplier: 2\n\n  - name: SimpleLogin Notify HIBP breaches\n    command: python /code/cron.py -j notify_hibp\n    shell: /bin/bash\n    schedule: \"15 4 * * *\"\n    captureStderr: true\n    concurrencyPolicy: Forbid\n\n\n  - name: SimpleLogin Delete Logs\n    command: python /code/cron.py -j delete_logs\n    shell: /bin/bash\n    schedule: \"15 5 * * *\"\n    captureStderr: true\n\n  - name: SimpleLogin Delete Old data\n    command: python /code/cron.py -j delete_old_data\n    shell: /bin/bash\n    schedule: \"30 5 * * *\"\n    captureStderr: true\n\n  - name: SimpleLogin Poll Apple Subscriptions\n    command: python /code/cron.py -j poll_apple_subscription\n    shell: /bin/bash\n    schedule: \"15 6 * * *\"\n    captureStderr: true\n\n  - name: SimpleLogin Notify Trial Ends\n    command: python /code/cron.py -j notify_trial_end\n    shell: /bin/bash\n    schedule: \"15 8 * * *\"\n    captureStderr: true\n\n  - name: SimpleLogin Notify Manual Subscription Ends\n    command: python /code/cron.py -j notify_manual_subscription_end\n    shell: /bin/bash\n    schedule: \"15 9 * * *\"\n    captureStderr: true\n\n  - name: SimpleLogin Notify Premium Ends\n    command: python /code/cron.py -j notify_premium_end\n    shell: /bin/bash\n    schedule: \"15 10 * * *\"\n    captureStderr: true\n\n  - name: SimpleLogin delete users scheduled to be deleted\n    command: python /code/cron.py -j delete_scheduled_users\n    shell: /bin/bash\n    schedule: \"15 11 * * *\"\n    captureStderr: true\n    concurrencyPolicy: Forbid\n\n  - name: SimpleLogin send unsent emails\n    command: python /code/cron.py -j send_undelivered_mails\n    shell: /bin/bash\n    schedule: \"*/5 * * * *\"\n    captureStderr: true\n    concurrencyPolicy: Forbid\n\n  - name: SimpleLogin clear alias_audit_log old entries\n    command: python /code/cron.py -j clear_alias_audit_log\n    shell: /bin/bash\n    schedule: \"0 * * * *\" # Once every hour\n    captureStderr: true\n    concurrencyPolicy: Forbid\n\n  - name: SimpleLogin clear user_audit_log old entries\n    command: python /code/cron.py -j clear_user_audit_log\n    shell: /bin/bash\n    schedule: \"0 * * * *\" # Once every hour\n    captureStderr: true\n    concurrencyPolicy: Forbid\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "email_handler.py",
          "type": "blob",
          "size": 80.2509765625,
          "content": "\"\"\"\nHandle the email *forward* and *reply*. phase. There are 3 actors:\n- contact: who sends emails to alias@sl.co address\n- SL email handler (this script)\n- user personal email: to be protected. Should never leak to contact.\n\nThis script makes sure that in the forward phase, the email that is forwarded to user personal email has the following\nenvelope and header fields:\nEnvelope:\n    mail from: @contact\n    rcpt to: @personal_email\nHeader:\n    From: @contact\n    To: alias@sl.co # so user knows this email is sent to alias\n    Reply-to: special@sl.co # magic HERE\n\nAnd in the reply phase:\nEnvelope:\n    mail from: @contact\n    rcpt to: @contact\n\nHeader:\n    From: alias@sl.co # so for contact the email comes from alias. magic HERE\n    To: @contact\n\nThe special@sl.co allows to hide user personal email when user clicks \"Reply\" to the forwarded email.\nIt should contain the following info:\n- alias\n- @contact\n\n\n\"\"\"\nimport argparse\nimport email\nimport time\nimport uuid\nfrom email import encoders\nfrom email.encoders import encode_noop\nfrom email.message import Message\nfrom email.mime.application import MIMEApplication\nfrom email.mime.multipart import MIMEMultipart\nfrom email.utils import make_msgid, formatdate, getaddresses\nfrom io import BytesIO\nfrom smtplib import SMTPRecipientsRefused, SMTPServerDisconnected\nfrom typing import List, Tuple, Optional\n\nimport newrelic.agent\nfrom aiosmtpd.controller import Controller\nfrom aiosmtpd.smtp import Envelope\nfrom email_validator import validate_email, EmailNotValidError\nfrom flanker.addresslib import address\nfrom flanker.addresslib.address import EmailAddress\nfrom sqlalchemy.exc import IntegrityError\n\nfrom app import pgp_utils, s3, config, contact_utils\nfrom app.alias_utils import (\n    try_auto_create,\n    change_alias_status,\n    get_alias_recipient_name,\n)\nfrom app.config import (\n    EMAIL_DOMAIN,\n    URL,\n    UNSUBSCRIBER,\n    LOAD_PGP_EMAIL_HANDLER,\n    ENFORCE_SPF,\n    ALERT_REVERSE_ALIAS_UNKNOWN_MAILBOX,\n    ALERT_BOUNCE_EMAIL,\n    ALERT_SPAM_EMAIL,\n    SPAMASSASSIN_HOST,\n    MAX_SPAM_SCORE,\n    MAX_REPLY_PHASE_SPAM_SCORE,\n    ALERT_SEND_EMAIL_CYCLE,\n    ALERT_MAILBOX_IS_ALIAS,\n    PGP_SENDER_PRIVATE_KEY,\n    ALERT_BOUNCE_EMAIL_REPLY_PHASE,\n    NOREPLY,\n    BOUNCE_PREFIX,\n    BOUNCE_SUFFIX,\n    TRANSACTIONAL_BOUNCE_PREFIX,\n    TRANSACTIONAL_BOUNCE_SUFFIX,\n    ENABLE_SPAM_ASSASSIN,\n    BOUNCE_PREFIX_FOR_REPLY_PHASE,\n    POSTMASTER,\n    OLD_UNSUBSCRIBER,\n    ALERT_FROM_ADDRESS_IS_REVERSE_ALIAS,\n    ALERT_TO_NOREPLY,\n)\nfrom app.db import Session\nfrom app.email import status, headers\nfrom app.email.rate_limit import rate_limited\nfrom app.email.spam import get_spam_score\nfrom app.email_utils import (\n    send_email,\n    add_dkim_signature,\n    add_or_replace_header,\n    delete_header,\n    render,\n    get_orig_message_from_bounce,\n    delete_all_headers_except,\n    get_spam_info,\n    get_orig_message_from_spamassassin_report,\n    send_email_with_rate_control,\n    get_email_domain_part,\n    copy,\n    send_email_at_most_times,\n    is_valid_alias_address_domain,\n    should_add_dkim_signature,\n    add_header,\n    get_header_unicode,\n    generate_reply_email,\n    is_reverse_alias,\n    replace,\n    should_disable,\n    parse_id_from_bounce,\n    spf_pass,\n    sanitize_header,\n    get_queue_id,\n    should_ignore_bounce,\n    parse_full_address,\n    get_mailbox_bounce_info,\n    save_email_for_debugging,\n    save_envelope_for_debugging,\n    get_verp_info_from_email,\n    generate_verp_email,\n    sl_formataddr,\n)\nfrom app.email_validation import is_valid_email, normalize_reply_email\nfrom app.errors import (\n    NonReverseAliasInReplyPhase,\n    VERPTransactional,\n    VERPForward,\n    VERPReply,\n    CannotCreateContactForReverseAlias,\n)\nfrom app.handler.dmarc import (\n    apply_dmarc_policy_for_reply_phase,\n    apply_dmarc_policy_for_forward_phase,\n)\nfrom app.handler.provider_complaint import (\n    handle_hotmail_complaint,\n    handle_yahoo_complaint,\n)\nfrom app.handler.spamd_result import (\n    SpamdResult,\n    SPFCheckResult,\n)\nfrom app.handler.unsubscribe_generator import UnsubscribeGenerator\nfrom app.handler.unsubscribe_handler import UnsubscribeHandler\nfrom app.log import LOG, set_message_id\nfrom app.mail_sender import sl_sendmail\nfrom app.mailbox_utils import get_mailbox_for_reply_phase\nfrom app.message_utils import message_to_bytes\nfrom app.models import (\n    Alias,\n    Contact,\n    BlockBehaviourEnum,\n    EmailLog,\n    User,\n    RefusedEmail,\n    Mailbox,\n    Bounce,\n    TransactionalEmail,\n    IgnoredEmail,\n    MessageIDMatching,\n    Notification,\n    VerpType,\n    SLDomain,\n)\nfrom app.pgp_utils import (\n    PGPException,\n    sign_data_with_pgpy,\n    sign_data,\n    load_public_key_and_check,\n)\nfrom app.utils import sanitize_email\nfrom init_app import load_pgp_public_keys\nfrom server import create_light_app\n\n\ndef get_or_create_contact(\n    from_header: str, mail_from: str, alias: Alias\n) -> Optional[Contact]:\n    \"\"\"\n    contact_from_header is the RFC 2047 format FROM header\n    \"\"\"\n    try:\n        contact_name, contact_email = parse_full_address(from_header)\n    except ValueError:\n        contact_name, contact_email = \"\", \"\"\n\n    # Ensure contact_name is within limits\n    if len(contact_name) >= Contact.MAX_NAME_LENGTH:\n        contact_name = contact_name[0 : Contact.MAX_NAME_LENGTH]\n\n    if not is_valid_email(contact_email):\n        # From header is wrongly formatted, try with mail_from\n        if mail_from and mail_from != \"<>\":\n            LOG.w(\n                \"Cannot parse email from from_header %s, use mail_from %s\",\n                from_header,\n                mail_from,\n            )\n            contact_email = mail_from\n    contact_result = contact_utils.create_contact(\n        email=contact_email,\n        alias=alias,\n        name=contact_name,\n        mail_from=mail_from,\n        allow_empty_email=True,\n        automatic_created=True,\n        from_partner=False,\n    )\n    if contact_result.error:\n        LOG.w(f\"Error creating contact: {contact_result.error.value}\")\n    return contact_result.contact\n\n\ndef get_or_create_reply_to_contact(\n    reply_to_header: str, alias: Alias, msg: Message\n) -> Optional[Contact]:\n    \"\"\"\n    Get or create the contact for the Reply-To header\n    \"\"\"\n    try:\n        contact_name, contact_address = parse_full_address(reply_to_header)\n    except ValueError:\n        return\n\n    if len(contact_name) >= Contact.MAX_NAME_LENGTH:\n        contact_name = contact_name[0 : Contact.MAX_NAME_LENGTH]\n\n    if not is_valid_email(contact_address):\n        LOG.w(\n            \"invalid reply-to address %s. Parse from %s\",\n            contact_address,\n            reply_to_header,\n        )\n        return None\n\n    return contact_utils.create_contact(contact_address, alias, contact_name).contact\n\n\ndef replace_header_when_forward(msg: Message, alias: Alias, header: str):\n    \"\"\"\n    Replace CC or To header by Reply emails in forward phase\n    \"\"\"\n    new_addrs: [str] = []\n    headers = msg.get_all(header, [])\n    # headers can be an array of Header, convert it to string here\n    headers = [get_header_unicode(h) for h in headers]\n\n    full_addresses: [EmailAddress] = []\n    for h in headers:\n        full_addresses += address.parse_list(h)\n\n    for full_address in full_addresses:\n        contact_email = sanitize_email(full_address.address, not_lower=True)\n\n        # no transformation when alias is already in the header\n        if contact_email.lower() == alias.email:\n            new_addrs.append(full_address.full_spec())\n            continue\n\n        try:\n            # NOT allow unicode for contact address\n            validate_email(\n                contact_email, check_deliverability=False, allow_smtputf8=False\n            )\n        except EmailNotValidError:\n            LOG.w(\"invalid contact email %s. %s. Skip\", contact_email, headers)\n            continue\n\n        contact = Contact.get_by(alias_id=alias.id, website_email=contact_email)\n        contact_name = full_address.display_name\n        if len(contact_name) >= Contact.MAX_NAME_LENGTH:\n            contact_name = contact_name[0 : Contact.MAX_NAME_LENGTH]\n\n        if contact:\n            # update the contact name if needed\n            if contact.name != full_address.display_name:\n                LOG.d(\n                    \"Update contact %s name %s to %s\",\n                    contact,\n                    contact.name,\n                    contact_name,\n                )\n                contact.name = contact_name\n                Session.commit()\n        else:\n            LOG.d(\n                \"create contact for alias %s and email %s, header %s\",\n                alias,\n                contact_email,\n                header,\n            )\n\n            try:\n                contact = Contact.create(\n                    user_id=alias.user_id,\n                    alias_id=alias.id,\n                    website_email=contact_email,\n                    name=contact_name,\n                    reply_email=generate_reply_email(contact_email, alias),\n                    is_cc=header.lower() == \"cc\",\n                    automatic_created=True,\n                )\n                Session.commit()\n            except IntegrityError:\n                LOG.w(\"Contact %s %s already exist\", alias, contact_email)\n                Session.rollback()\n                contact = Contact.get_by(alias_id=alias.id, website_email=contact_email)\n\n        new_addrs.append(contact.new_addr())\n\n    if new_addrs:\n        new_header = \",\".join(new_addrs)\n        LOG.d(\"Replace %s header, old: %s, new: %s\", header, msg[header], new_header)\n        add_or_replace_header(msg, header, new_header)\n    else:\n        LOG.d(\"Delete %s header, old value %s\", header, msg[header])\n        delete_header(msg, header)\n\n\ndef add_alias_to_header_if_needed(msg, alias):\n    \"\"\"\n    During the forward phase, add alias to To: header if it isn't included in To and Cc header\n    It can happen that the alias isn't included in To: and CC: header, for example if this is a BCC email\n    :return:\n    \"\"\"\n    to_header = str(msg[headers.TO]) if msg[headers.TO] else None\n    cc_header = str(msg[headers.CC]) if msg[headers.CC] else None\n\n    # nothing to do\n    if to_header and alias.email in to_header:\n        return\n\n    # nothing to do\n    if cc_header and alias.email in cc_header:\n        return\n\n    LOG.d(f\"add {alias} to To: header {to_header}\")\n\n    if to_header:\n        add_or_replace_header(msg, headers.TO, f\"{to_header},{alias.email}\")\n    else:\n        add_or_replace_header(msg, headers.TO, alias.email)\n\n\ndef replace_header_when_reply(msg: Message, alias: Alias, header: str):\n    \"\"\"\n    Replace CC or To Reply emails by original emails\n    \"\"\"\n    new_addrs: [str] = []\n    headers = msg.get_all(header, [])\n    # headers can be an array of Header, convert it to string here\n    headers = [str(h) for h in headers]\n\n    # headers can contain \\r or \\n\n    headers = [h.replace(\"\\r\", \"\") for h in headers]\n    headers = [h.replace(\"\\n\", \"\") for h in headers]\n\n    for _, reply_email in getaddresses(headers):\n        # no transformation when alias is already in the header\n        # can happen when user clicks \"Reply All\"\n        if reply_email == alias.email:\n            continue\n\n        contact = Contact.get_by(reply_email=reply_email)\n        if not contact:\n            LOG.w(\n                \"email %s contained in %s header in reply phase must be reply emails. headers:%s\",\n                reply_email,\n                header,\n                headers,\n            )\n            raise NonReverseAliasInReplyPhase(reply_email)\n            # still keep this email in header\n            # new_addrs.append(reply_email)\n        else:\n            new_addrs.append(sl_formataddr((contact.name, contact.website_email)))\n\n    if new_addrs:\n        new_header = \",\".join(new_addrs)\n        LOG.d(\"Replace %s header, old: %s, new: %s\", header, msg[header], new_header)\n        add_or_replace_header(msg, header, new_header)\n    else:\n        LOG.d(\"delete the %s header. Old value %s\", header, msg[header])\n        delete_header(msg, header)\n\n\ndef prepare_pgp_message(\n    orig_msg: Message, pgp_fingerprint: str, public_key: str, can_sign: bool = False\n) -> Message:\n    msg = MIMEMultipart(\"encrypted\", protocol=\"application/pgp-encrypted\")\n\n    # clone orig message to avoid modifying it\n    clone_msg = copy(orig_msg)\n\n    # copy all headers from original message except all standard MIME headers\n    for i in reversed(range(len(clone_msg._headers))):\n        header_name = clone_msg._headers[i][0].lower()\n        if header_name.lower() not in headers.MIME_HEADERS:\n            msg[header_name] = clone_msg._headers[i][1]\n\n    # Delete unnecessary headers in clone_msg except _MIME_HEADERS to save space\n    delete_all_headers_except(\n        clone_msg,\n        headers.MIME_HEADERS,\n    )\n\n    if clone_msg[headers.CONTENT_TYPE] is None:\n        LOG.d(\"Content-Type missing\")\n        clone_msg[headers.CONTENT_TYPE] = \"text/plain\"\n\n    if clone_msg[headers.MIME_VERSION] is None:\n        LOG.d(\"Mime-Version missing\")\n        clone_msg[headers.MIME_VERSION] = \"1.0\"\n\n    first = MIMEApplication(\n        _subtype=\"pgp-encrypted\", _encoder=encoders.encode_7or8bit, _data=\"\"\n    )\n    first.set_payload(\"Version: 1\")\n    msg.attach(first)\n\n    if can_sign and PGP_SENDER_PRIVATE_KEY:\n        LOG.d(\"Sign msg\")\n        clone_msg = sign_msg(clone_msg)\n\n    # use pgpy as fallback\n    second = MIMEApplication(\n        \"octet-stream\", _encoder=encoders.encode_7or8bit, name=\"encrypted.asc\"\n    )\n    second.add_header(\"Content-Disposition\", 'inline; filename=\"encrypted.asc\"')\n\n    # encrypt\n    # use pgpy as fallback\n    msg_bytes = message_to_bytes(clone_msg)\n    try:\n        encrypted_data = pgp_utils.encrypt_file(BytesIO(msg_bytes), pgp_fingerprint)\n        second.set_payload(encrypted_data)\n    except PGPException:\n        LOG.w(\n            \"Cannot encrypt using python-gnupg, check if public key is valid and try with pgpy\"\n        )\n        # check if the public key is valid\n        load_public_key_and_check(public_key)\n\n        encrypted = pgp_utils.encrypt_file_with_pgpy(msg_bytes, public_key)\n        second.set_payload(str(encrypted))\n        LOG.i(\n            f\"encryption works with pgpy and not with python-gnupg, public key {public_key}\"\n        )\n\n    msg.attach(second)\n\n    return msg\n\n\ndef sign_msg(msg: Message) -> Message:\n    container = MIMEMultipart(\n        \"signed\", protocol=\"application/pgp-signature\", micalg=\"pgp-sha256\"\n    )\n    container.attach(msg)\n\n    signature = MIMEApplication(\n        _subtype=\"pgp-signature\", name=\"signature.asc\", _data=\"\", _encoder=encode_noop\n    )\n    signature.add_header(\"Content-Disposition\", 'attachment; filename=\"signature.asc\"')\n\n    try:\n        payload = sign_data(message_to_bytes(msg).replace(b\"\\n\", b\"\\r\\n\"))\n\n        if not payload:\n            raise PGPException(\"Empty signature by gnupg\")\n\n        signature.set_payload(payload)\n    except Exception:\n        LOG.e(\"Cannot sign, try using pgpy\")\n        payload = sign_data_with_pgpy(message_to_bytes(msg).replace(b\"\\n\", b\"\\r\\n\"))\n\n        if not payload:\n            raise PGPException(\"Empty signature by pgpy\")\n\n        signature.set_payload(payload)\n\n    container.attach(signature)\n\n    return container\n\n\ndef handle_email_sent_to_ourself(alias, from_addr: str, msg: Message, user):\n    # store the refused email\n    random_name = str(uuid.uuid4())\n    full_report_path = f\"refused-emails/cycle-{random_name}.eml\"\n    s3.upload_email_from_bytesio(\n        full_report_path, BytesIO(message_to_bytes(msg)), random_name\n    )\n    refused_email = RefusedEmail.create(\n        path=None, full_report_path=full_report_path, user_id=alias.user_id\n    )\n    Session.commit()\n    LOG.d(\"Create refused email %s\", refused_email)\n    # link available for 6 days as it gets deleted in 7 days\n    refused_email_url = refused_email.get_url(expires_in=518400)\n\n    Notification.create(\n        user_id=user.id,\n        title=f\"Email sent to {alias.email} from its own mailbox {from_addr}\",\n        message=Notification.render(\n            \"notification/cycle-email.html\",\n            alias=alias,\n            from_addr=from_addr,\n            refused_email_url=refused_email_url,\n        ),\n        commit=True,\n    )\n\n    send_email_at_most_times(\n        user,\n        ALERT_SEND_EMAIL_CYCLE,\n        from_addr,\n        f\"Email sent to {alias.email} from its own mailbox {from_addr}\",\n        render(\n            \"transactional/cycle-email.txt.jinja2\",\n            user=user,\n            alias=alias,\n            from_addr=from_addr,\n            refused_email_url=refused_email_url,\n        ),\n        render(\n            \"transactional/cycle-email.html\",\n            user=user,\n            alias=alias,\n            from_addr=from_addr,\n            refused_email_url=refused_email_url,\n        ),\n    )\n\n\ndef handle_forward(envelope, msg: Message, rcpt_to: str) -> List[Tuple[bool, str]]:\n    \"\"\"return an array of SMTP status (is_success, smtp_status)\n    is_success indicates whether an email has been delivered and\n    smtp_status is the SMTP Status (\"250 Message accepted\", \"550 Non-existent email address\", etc.)\n    \"\"\"\n    alias_address = rcpt_to  # alias@SL\n\n    alias = Alias.get_by(email=alias_address)\n    if not alias:\n        LOG.d(\n            \"alias %s not exist. Try to see if it can be created on the fly\",\n            alias_address,\n        )\n        alias = try_auto_create(alias_address)\n        if not alias:\n            LOG.d(\"alias %s cannot be created on-the-fly, return 550\", alias_address)\n            if should_ignore_bounce(envelope.mail_from):\n                return [(True, status.E207)]\n            else:\n                return [(False, status.E515)]\n\n    user = alias.user\n\n    if not user.is_active():\n        LOG.w(f\"User {user} has been soft deleted\")\n        return [(False, status.E502)]\n\n    if not user.can_send_or_receive():\n        LOG.i(f\"User {user} cannot receive emails\")\n        if should_ignore_bounce(envelope.mail_from):\n            return [(True, status.E207)]\n        else:\n            return [(False, status.E504)]\n\n    # check if email is sent from alias's owning mailbox(es)\n    mail_from = envelope.mail_from\n    for addr in alias.authorized_addresses():\n        # email sent from a mailbox to its alias\n        if addr == mail_from:\n            LOG.i(\"cycle email sent from %s to %s\", addr, alias)\n            handle_email_sent_to_ourself(alias, addr, msg, user)\n            return [(True, status.E209)]\n\n    from_header = get_header_unicode(msg[headers.FROM])\n    LOG.d(\"Create or get contact for from_header:%s\", from_header)\n    contact = get_or_create_contact(from_header, envelope.mail_from, alias)\n    if not contact:\n        return [(False, status.E504)]\n    alias = (\n        contact.alias\n    )  # In case the Session was closed in the get_or_create we re-fetch the alias\n\n    reply_to_contact = None\n    if msg[headers.REPLY_TO]:\n        reply_to = get_header_unicode(msg[headers.REPLY_TO])\n        LOG.d(\"Create or get contact for reply_to_header:%s\", reply_to)\n        # ignore when reply-to = alias\n        if reply_to == alias.email:\n            LOG.i(\"Reply-to same as alias %s\", alias)\n        else:\n            reply_to_contact = get_or_create_reply_to_contact(reply_to, alias, msg)\n\n    if not alias.enabled or contact.block_forward:\n        LOG.d(\"%s is disabled, do not forward\", alias)\n        EmailLog.create(\n            contact_id=contact.id,\n            user_id=contact.user_id,\n            blocked=True,\n            alias_id=contact.alias_id,\n            commit=True,\n        )\n\n        # by default return 2** instead of 5** to allow user to receive emails again\n        # when alias is enabled or contact is unblocked\n        res_status = status.E200\n        if user.block_behaviour == BlockBehaviourEnum.return_5xx:\n            res_status = status.E502\n\n        return [(True, res_status)]\n\n    # Check if we need to reject or quarantine based on dmarc\n    msg, dmarc_delivery_status = apply_dmarc_policy_for_forward_phase(\n        alias, contact, envelope, msg\n    )\n    if dmarc_delivery_status is not None:\n        return [(False, dmarc_delivery_status)]\n\n    ret = []\n    mailboxes = alias.mailboxes\n\n    # no valid mailbox\n    if not mailboxes:\n        LOG.w(\"no valid mailboxes for %s\", alias)\n        if should_ignore_bounce(envelope.mail_from):\n            return [(True, status.E207)]\n        else:\n            return [(False, status.E516)]\n\n    for mailbox in mailboxes:\n        if not mailbox.verified:\n            LOG.d(\"%s unverified, do not forward\", mailbox)\n            ret.append((False, status.E517))\n        else:\n            # Check if the mailbox is also an alias and stop the loop\n            mailbox_as_alias = Alias.get_by(email=mailbox.email)\n            if mailbox_as_alias is not None:\n                LOG.info(\n                    f\"Mailbox {mailbox.id} has email {mailbox.email} that is also alias {alias.id}. Stopping loop\"\n                )\n                mailbox.verified = False\n                Session.commit()\n                mailbox_url = f\"{URL}/dashboard/mailbox/{mailbox.id}/\"\n                send_email_with_rate_control(\n                    user,\n                    ALERT_MAILBOX_IS_ALIAS,\n                    user.email,\n                    f\"Your mailbox {mailbox.email} is an alias\",\n                    render(\n                        \"transactional/mailbox-invalid.txt.jinja2\",\n                        user=mailbox.user,\n                        mailbox=mailbox,\n                        mailbox_url=mailbox_url,\n                        alias=alias,\n                    ),\n                    render(\n                        \"transactional/mailbox-invalid.html\",\n                        user=mailbox.user,\n                        mailbox=mailbox,\n                        mailbox_url=mailbox_url,\n                        alias=alias,\n                    ),\n                    max_nb_alert=1,\n                )\n                ret.append((False, status.E525))\n                continue\n            # create a copy of message for each forward\n            ret.append(\n                forward_email_to_mailbox(\n                    alias, copy(msg), contact, envelope, mailbox, user, reply_to_contact\n                )\n            )\n\n    return ret\n\n\ndef forward_email_to_mailbox(\n    alias,\n    msg: Message,\n    contact: Contact,\n    envelope,\n    mailbox,\n    user,\n    reply_to_contact: Optional[Contact],\n) -> (bool, str):\n    LOG.d(\"Forward %s -> %s -> %s\", contact, alias, mailbox)\n\n    if mailbox.disabled:\n        LOG.d(\"%s disabled, do not forward\")\n        if should_ignore_bounce(envelope.mail_from):\n            return True, status.E207\n        else:\n            return False, status.E518\n\n    # sanity check: make sure mailbox is not actually an alias\n    if get_email_domain_part(alias.email) == get_email_domain_part(mailbox.email):\n        LOG.w(\n            \"Mailbox has the same domain as alias. %s -> %s -> %s\",\n            contact,\n            alias,\n            mailbox,\n        )\n        mailbox_url = f\"{URL}/dashboard/mailbox/{mailbox.id}/\"\n        send_email_with_rate_control(\n            user,\n            ALERT_MAILBOX_IS_ALIAS,\n            user.email,\n            f\"Your mailbox {mailbox.email} and alias {alias.email} use the same domain\",\n            render(\n                \"transactional/mailbox-invalid.txt.jinja2\",\n                user=mailbox.user,\n                mailbox=mailbox,\n                mailbox_url=mailbox_url,\n                alias=alias,\n            ),\n            render(\n                \"transactional/mailbox-invalid.html\",\n                user=mailbox.user,\n                mailbox=mailbox,\n                mailbox_url=mailbox_url,\n                alias=alias,\n            ),\n            max_nb_alert=1,\n        )\n\n        # retry later\n        # so when user fixes the mailbox, the email can be delivered\n        return False, status.E405\n\n    email_log = EmailLog.create(\n        contact_id=contact.id,\n        user_id=contact.user_id,\n        mailbox_id=mailbox.id,\n        alias_id=contact.alias_id,\n        message_id=str(msg[headers.MESSAGE_ID]),\n        commit=True,\n    )\n    LOG.d(\"Create %s for %s, %s, %s\", email_log, contact, user, mailbox)\n\n    if ENABLE_SPAM_ASSASSIN:\n        # Spam check\n        spam_status = \"\"\n        is_spam = False\n\n        if SPAMASSASSIN_HOST:\n            start = time.time()\n            spam_score, spam_report = get_spam_score(msg, email_log)\n            LOG.d(\n                \"%s -> %s - spam score:%s in %s seconds. Spam report %s\",\n                contact,\n                alias,\n                spam_score,\n                time.time() - start,\n                spam_report,\n            )\n            email_log.spam_score = spam_score\n            Session.commit()\n\n            if (user.max_spam_score and spam_score > user.max_spam_score) or (\n                not user.max_spam_score and spam_score > MAX_SPAM_SCORE\n            ):\n                is_spam = True\n                # only set the spam report for spam\n                email_log.spam_report = spam_report\n        else:\n            is_spam, spam_status = get_spam_info(msg, max_score=user.max_spam_score)\n\n        if is_spam:\n            LOG.w(\n                \"Email detected as spam. %s -> %s. Spam Score: %s, Spam Report: %s\",\n                contact,\n                alias,\n                email_log.spam_score,\n                email_log.spam_report,\n            )\n            email_log.is_spam = True\n            email_log.spam_status = spam_status\n            Session.commit()\n\n            handle_spam(contact, alias, msg, user, mailbox, email_log)\n            return False, status.E519\n\n    if contact.invalid_email:\n        LOG.d(\"add noreply information %s %s\", alias, mailbox)\n        msg = add_header(\n            msg,\n            f\"\"\"Email sent to {alias.email} from an invalid address and cannot be replied\"\"\",\n            f\"\"\"Email sent to {alias.email} from an invalid address and cannot be replied\"\"\",\n        )\n\n    headers_to_keep = [\n        headers.FROM,\n        headers.TO,\n        headers.CC,\n        headers.SUBJECT,\n        headers.DATE,\n        # do not delete original message id\n        headers.MESSAGE_ID,\n        # References and In-Reply-To are used for keeping the email thread\n        headers.REFERENCES,\n        headers.IN_REPLY_TO,\n        headers.SL_QUEUE_ID,\n        headers.LIST_UNSUBSCRIBE,\n        headers.LIST_UNSUBSCRIBE_POST,\n    ] + headers.MIME_HEADERS\n    if user.include_header_email_header:\n        headers_to_keep.append(headers.AUTHENTICATION_RESULTS)\n    delete_all_headers_except(msg, headers_to_keep)\n\n    if mailbox.generic_subject:\n        LOG.d(\"Use a generic subject for %s\", mailbox)\n        orig_subject = msg[headers.SUBJECT]\n        orig_subject = get_header_unicode(orig_subject)\n        add_or_replace_header(msg, \"Subject\", mailbox.generic_subject)\n        sender = msg[headers.FROM]\n        sender = get_header_unicode(sender)\n        msg = add_header(\n            msg,\n            f\"\"\"Forwarded by SimpleLogin to {alias.email} from \"{sender}\" with \"{orig_subject}\" as subject\"\"\",\n            f\"\"\"Forwarded by SimpleLogin to {alias.email} from \"{sender}\" with <b>{orig_subject}</b> as subject\"\"\",\n        )\n\n    # create PGP email if needed\n    if mailbox.pgp_enabled() and user.is_premium() and not alias.disable_pgp:\n        LOG.d(\"Encrypt message using mailbox %s\", mailbox)\n\n        try:\n            msg = prepare_pgp_message(\n                msg, mailbox.pgp_finger_print, mailbox.pgp_public_key, can_sign=True\n            )\n        except PGPException:\n            LOG.w(\n                \"Cannot encrypt message %s -> %s. %s %s\", contact, alias, mailbox, user\n            )\n            msg = add_header(\n                msg,\n                f\"\"\"PGP encryption fails with {mailbox.email}'s PGP key\"\"\",\n            )\n\n    # add custom header\n    add_or_replace_header(msg, headers.SL_DIRECTION, \"Forward\")\n\n    msg[headers.SL_EMAIL_LOG_ID] = str(email_log.id)\n    if user.include_header_email_header:\n        msg[headers.SL_ENVELOPE_FROM] = envelope.mail_from\n        if contact.name:\n            original_from = f\"{contact.name} <{contact.website_email}>\"\n        else:\n            original_from = contact.website_email\n        msg[headers.SL_ORIGINAL_FROM] = original_from\n    # when an alias isn't in the To: header, there's no way for users to know what alias has received the email\n    msg[headers.SL_ENVELOPE_TO] = alias.email\n\n    if not msg[headers.DATE]:\n        LOG.w(\"missing date header, create one\")\n        msg[headers.DATE] = formatdate()\n\n    replace_sl_message_id_by_original_message_id(msg)\n\n    # change the from_header so the email comes from a reverse-alias\n    # replace the email part in from: header\n    old_from_header = msg[headers.FROM]\n    new_from_header = contact.new_addr()\n    add_or_replace_header(msg, \"From\", new_from_header)\n    LOG.d(\"From header, new:%s, old:%s\", new_from_header, old_from_header)\n\n    if reply_to_contact:\n        reply_to_header = msg[headers.REPLY_TO]\n        new_reply_to_header = reply_to_contact.new_addr()\n        add_or_replace_header(msg, \"Reply-To\", new_reply_to_header)\n        LOG.d(\"Reply-To header, new:%s, old:%s\", new_reply_to_header, reply_to_header)\n\n    # replace CC & To emails by reverse-alias for all emails that are not alias\n    try:\n        replace_header_when_forward(msg, alias, headers.CC)\n        replace_header_when_forward(msg, alias, headers.TO)\n    except CannotCreateContactForReverseAlias:\n        LOG.d(\"CannotCreateContactForReverseAlias error, delete %s\", email_log)\n        EmailLog.delete(email_log.id)\n        Session.commit()\n        raise\n\n    # add alias to To: header if it isn't included in To and Cc header\n    add_alias_to_header_if_needed(msg, alias)\n\n    # add List-Unsubscribe header\n    msg = UnsubscribeGenerator().add_header_to_message(alias, contact, msg)\n\n    add_dkim_signature(msg, EMAIL_DOMAIN)\n\n    LOG.d(\n        \"Forward mail from %s to %s, mail_options:%s, rcpt_options:%s \",\n        contact.website_email,\n        mailbox.email,\n        envelope.mail_options,\n        envelope.rcpt_options,\n    )\n\n    contact_domain = get_email_domain_part(contact.reply_email)\n    try:\n        sl_sendmail(\n            # use a different envelope sender for each forward (aka VERP)\n            generate_verp_email(VerpType.bounce_forward, email_log.id, contact_domain),\n            mailbox.email,\n            msg,\n            envelope.mail_options,\n            envelope.rcpt_options,\n            is_forward=True,\n        )\n    except (SMTPServerDisconnected, SMTPRecipientsRefused, TimeoutError):\n        LOG.w(\n            \"Postfix error during forward phase %s -> %s -> %s\",\n            contact,\n            alias,\n            mailbox,\n            exc_info=True,\n        )\n        if should_ignore_bounce(envelope.mail_from):\n            return True, status.E207\n        else:\n            EmailLog.delete(email_log.id, commit=True)\n            # so Postfix can retry\n            return False, status.E407\n    else:\n        Session.commit()\n        return True, status.E200\n\n\ndef replace_sl_message_id_by_original_message_id(msg):\n    # Replace SL Message-ID by original one in In-Reply-To header\n    if msg[headers.IN_REPLY_TO]:\n        matching: MessageIDMatching = MessageIDMatching.get_by(\n            sl_message_id=str(msg[headers.IN_REPLY_TO])\n        )\n        if matching:\n            LOG.d(\n                \"replace SL message id by original one in in-reply-to header, %s -> %s\",\n                msg[headers.IN_REPLY_TO],\n                matching.original_message_id,\n            )\n            del msg[headers.IN_REPLY_TO]\n            msg[headers.IN_REPLY_TO] = matching.original_message_id\n\n    # Replace SL Message-ID by original Message-ID in References header\n    if msg[headers.REFERENCES]:\n        message_ids = str(msg[headers.REFERENCES]).split()\n        new_message_ids = []\n        for message_id in message_ids:\n            matching = MessageIDMatching.get_by(sl_message_id=message_id)\n            if matching:\n                LOG.d(\n                    \"replace SL message id by original one in references header, %s -> %s\",\n                    message_id,\n                    matching.original_message_id,\n                )\n                new_message_ids.append(matching.original_message_id)\n            else:\n                new_message_ids.append(message_id)\n\n        del msg[headers.REFERENCES]\n        msg[headers.REFERENCES] = \" \".join(new_message_ids)\n\n\ndef handle_reply(envelope, msg: Message, rcpt_to: str) -> (bool, str):\n    \"\"\"\n    Return whether an email has been delivered and\n    the smtp status (\"250 Message accepted\", \"550 Non-existent email address\", etc)\n    \"\"\"\n\n    reply_email = rcpt_to\n\n    reply_domain = get_email_domain_part(reply_email)\n\n    # reply_email must end with EMAIL_DOMAIN or a domain that can be used as reverse alias domain\n    if not reply_email.endswith(EMAIL_DOMAIN):\n        sl_domain: SLDomain = SLDomain.get_by(domain=reply_domain)\n        if sl_domain is None:\n            LOG.w(f\"Reply email {reply_email} has wrong domain\")\n            return False, status.E501\n\n    # handle case where reply email is generated with non-allowed char\n    reply_email = normalize_reply_email(reply_email)\n\n    contact = Contact.get_by(reply_email=reply_email)\n    if not contact:\n        LOG.w(f\"No contact with {reply_email} as reverse alias\")\n        return False, status.E502\n    if not contact.user.is_active():\n        LOG.w(f\"User {contact.user} has been soft deleted\")\n        return False, status.E502\n\n    alias = contact.alias\n    alias_address: str = contact.alias.email\n    alias_domain = get_email_domain_part(alias_address)\n\n    # Sanity check: verify alias domain is managed by SimpleLogin\n    # scenario: a user have removed a domain but due to a bug, the aliases are still there\n    if not is_valid_alias_address_domain(alias.email):\n        LOG.e(\"%s domain isn't known\", alias)\n        return False, status.E503\n\n    user = alias.user\n\n    if not user.can_send_or_receive():\n        LOG.i(f\"User {user} cannot send emails\")\n        return False, status.E504\n\n    # Check if we need to reject or quarantine based on dmarc\n    dmarc_delivery_status = apply_dmarc_policy_for_reply_phase(\n        alias, contact, envelope, msg\n    )\n    if dmarc_delivery_status is not None:\n        return False, dmarc_delivery_status\n\n    # Anti-spoofing\n    mailbox = get_mailbox_for_reply_phase(\n        envelope.mail_from, get_header_unicode(msg[headers.FROM]), alias\n    )\n    if not mailbox:\n        if alias.disable_email_spoofing_check:\n            # ignore this error, use default alias mailbox\n            LOG.w(\n                \"ignore unknown sender to reverse-alias %s: %s -> %s\",\n                envelope.mail_from,\n                alias,\n                contact,\n            )\n            mailbox = alias.mailbox\n        else:\n            # only mailbox can send email to the reply-email\n            handle_unknown_mailbox(envelope, msg, reply_email, user, alias, contact)\n            # return 2** to avoid Postfix sending out bounces and avoid backscatter issue\n            return False, status.E214\n\n    if ENFORCE_SPF and mailbox.force_spf and not alias.disable_email_spoofing_check:\n        if not spf_pass(envelope, mailbox, user, alias, contact.website_email, msg):\n            # cannot use 4** here as sender will retry.\n            # cannot use 5** because that generates bounce report\n            return True, status.E201\n\n    email_log = EmailLog.create(\n        contact_id=contact.id,\n        alias_id=contact.alias_id,\n        is_reply=True,\n        user_id=contact.user_id,\n        mailbox_id=mailbox.id,\n        message_id=msg[headers.MESSAGE_ID],\n        commit=True,\n    )\n    LOG.d(\"Create %s for %s, %s, %s\", email_log, contact, user, mailbox)\n\n    # Spam check\n    if ENABLE_SPAM_ASSASSIN:\n        spam_status = \"\"\n        is_spam = False\n\n        # do not use user.max_spam_score here\n        if SPAMASSASSIN_HOST:\n            start = time.time()\n            spam_score, spam_report = get_spam_score(msg, email_log)\n            LOG.d(\n                \"%s -> %s - spam score %s in %s seconds. Spam report %s\",\n                alias,\n                contact,\n                spam_score,\n                time.time() - start,\n                spam_report,\n            )\n            email_log.spam_score = spam_score\n            if spam_score > MAX_REPLY_PHASE_SPAM_SCORE:\n                is_spam = True\n                # only set the spam report for spam\n                email_log.spam_report = spam_report\n        else:\n            is_spam, spam_status = get_spam_info(\n                msg, max_score=MAX_REPLY_PHASE_SPAM_SCORE\n            )\n\n        if is_spam:\n            LOG.w(\n                \"Email detected as spam. Reply phase. %s -> %s. Spam Score: %s, Spam Report: %s\",\n                alias,\n                contact,\n                email_log.spam_score,\n                email_log.spam_report,\n            )\n\n            email_log.is_spam = True\n            email_log.spam_status = spam_status\n            Session.commit()\n\n            handle_spam(contact, alias, msg, user, mailbox, email_log, is_reply=True)\n            return False, status.E506\n\n    delete_all_headers_except(\n        msg,\n        [\n            headers.FROM,\n            headers.TO,\n            headers.CC,\n            headers.SUBJECT,\n            headers.DATE,\n            # do not delete original message id\n            headers.MESSAGE_ID,\n            # References and In-Reply-To are used for keeping the email thread\n            headers.REFERENCES,\n            headers.IN_REPLY_TO,\n            headers.SL_QUEUE_ID,\n        ]\n        + headers.MIME_HEADERS,\n    )\n\n    orig_to = msg[headers.TO]\n    orig_cc = msg[headers.CC]\n\n    # replace the reverse-alias by the contact email in the email body\n    # as this is usually included when replying\n    if user.replace_reverse_alias:\n        LOG.d(\"Replace reverse-alias %s by contact email %s\", reply_email, contact)\n        msg = replace(msg, reply_email, contact.website_email)\n        LOG.d(\"Replace mailbox %s by alias email %s\", mailbox.email, alias.email)\n        msg = replace(msg, mailbox.email, alias.email)\n\n        if config.ENABLE_ALL_REVERSE_ALIAS_REPLACEMENT:\n            start = time.time()\n            # MAX_NB_REVERSE_ALIAS_REPLACEMENT is there to limit potential attack\n            contact_query = (\n                Contact.query()\n                .filter(Contact.alias_id == alias.id)\n                .limit(config.MAX_NB_REVERSE_ALIAS_REPLACEMENT)\n            )\n\n            # replace reverse alias by real address for all contacts\n            for reply_email, website_email in contact_query.values(\n                Contact.reply_email, Contact.website_email\n            ):\n                msg = replace(msg, reply_email, website_email)\n\n            elapsed = time.time() - start\n            LOG.d(\n                \"Replace reverse alias by real address for %s contacts takes %s seconds\",\n                contact_query.count(),\n                elapsed,\n            )\n            newrelic.agent.record_custom_metric(\n                \"Custom/reverse_alias_replacement_time\", elapsed\n            )\n\n    # create PGP email if needed\n    if contact.pgp_finger_print and user.is_premium():\n        LOG.d(\"Encrypt message for contact %s\", contact)\n        try:\n            msg = prepare_pgp_message(\n                msg, contact.pgp_finger_print, contact.pgp_public_key\n            )\n        except PGPException:\n            LOG.e(\n                \"Cannot encrypt message %s -> %s. %s %s\", alias, contact, mailbox, user\n            )\n            # programming error, user shouldn't see a new email log\n            EmailLog.delete(email_log.id, commit=True)\n            # return 421 so the client can retry later\n            return False, status.E402\n\n    Session.commit()\n\n    recipient_name = get_alias_recipient_name(alias)\n    if recipient_name.message:\n        LOG.d(recipient_name.message)\n    LOG.d(\"From header is %s\", recipient_name.name)\n    add_or_replace_header(msg, headers.FROM, recipient_name.name)\n\n    try:\n        if str(msg[headers.TO]).lower() == \"undisclosed-recipients:;\":\n            # no need to replace TO header\n            LOG.d(\"email is sent in BCC mode\")\n        else:\n            replace_header_when_reply(msg, alias, headers.TO)\n\n        replace_header_when_reply(msg, alias, headers.CC)\n    except NonReverseAliasInReplyPhase as e:\n        LOG.w(\"non reverse-alias in reply %s %s %s\", e, contact, alias)\n\n        # the email is ignored, delete the email log\n        EmailLog.delete(email_log.id, commit=True)\n\n        send_email(\n            mailbox.email,\n            f\"Email sent to {contact.email} contains non reverse-alias addresses\",\n            render(\n                \"transactional/non-reverse-alias-reply-phase.txt.jinja2\",\n                user=alias.user,\n                destination=contact.email,\n                alias=alias.email,\n                subject=msg[headers.SUBJECT],\n            ),\n        )\n        # user is informed and will retry\n        return True, status.E200\n\n    replace_original_message_id(alias, email_log, msg)\n\n    if not msg[headers.DATE]:\n        date_header = formatdate()\n        LOG.w(\"missing date header, add one\")\n        msg[headers.DATE] = date_header\n\n    msg[headers.SL_DIRECTION] = \"Reply\"\n    msg[headers.SL_EMAIL_LOG_ID] = str(email_log.id)\n\n    LOG.d(\n        \"send email from %s to %s, mail_options:%s,rcpt_options:%s\",\n        alias.email,\n        contact.website_email,\n        envelope.mail_options,\n        envelope.rcpt_options,\n    )\n\n    if should_add_dkim_signature(alias_domain):\n        add_dkim_signature(msg, alias_domain)\n\n    try:\n        sl_sendmail(\n            generate_verp_email(VerpType.bounce_reply, email_log.id, alias_domain),\n            contact.website_email,\n            msg,\n            envelope.mail_options,\n            envelope.rcpt_options,\n            is_forward=False,\n        )\n\n        # if alias belongs to several mailboxes, notify other mailboxes about this email\n        other_mailboxes = [mb for mb in alias.mailboxes if mb.email != mailbox.email]\n        for mb in other_mailboxes:\n            notify_mailbox(alias, mailbox, mb, msg, orig_to, orig_cc, alias_domain)\n\n    except Exception:\n        LOG.w(\"Cannot send email from %s to %s\", alias, contact)\n        EmailLog.delete(email_log.id, commit=True)\n        send_email(\n            mailbox.email,\n            f\"Email cannot be sent to {contact.email} from {alias.email}\",\n            render(\n                \"transactional/reply-error.txt.jinja2\",\n                user=user,\n                alias=alias,\n                contact=contact,\n                contact_domain=get_email_domain_part(contact.email),\n            ),\n            render(\n                \"transactional/reply-error.html\",\n                user=user,\n                alias=alias,\n                contact=contact,\n                contact_domain=get_email_domain_part(contact.email),\n            ),\n        )\n\n    # return 250 even if error as user is already informed of the incident and can retry sending the email\n    return True, status.E200\n\n\ndef notify_mailbox(\n    alias, mailbox, other_mb: Mailbox, msg, orig_to, orig_cc, alias_domain\n):\n    \"\"\"Notify another mailbox about an email sent by a mailbox to a reverse alias\"\"\"\n    LOG.d(\n        f\"notify {other_mb.email} about email sent \"\n        f\"from {mailbox.email} on behalf of {alias.email} to {msg[headers.TO]}\"\n    )\n    notif = add_header(\n        msg,\n        f\"\"\"**** Don't forget to remove this section if you reply to this email ****\nEmail sent on behalf of alias {alias.email} using mailbox {mailbox.email}\"\"\",\n    )\n    # use alias as From to hint that the email is sent from the alias\n    add_or_replace_header(notif, headers.FROM, alias.email)\n    # keep the reverse alias in CC and To header so user can reply more easily\n    add_or_replace_header(notif, headers.TO, orig_to)\n    add_or_replace_header(notif, headers.CC, orig_cc)\n\n    # add DKIM as the email is sent from alias\n    if should_add_dkim_signature(alias_domain):\n        add_dkim_signature(msg, alias_domain)\n\n    # this notif is considered transactional email\n    transaction = TransactionalEmail.create(email=other_mb.email, commit=True)\n    sl_sendmail(\n        generate_verp_email(VerpType.transactional, transaction.id, alias_domain),\n        other_mb.email,\n        notif,\n    )\n\n\ndef replace_original_message_id(alias: Alias, email_log: EmailLog, msg: Message):\n    \"\"\"\n    Replace original Message-ID by SL-Message-ID during the reply phase\n    for \"message-id\" and \"References\" headers\n    \"\"\"\n    original_message_id = msg[headers.MESSAGE_ID]\n    if original_message_id:\n        matching = MessageIDMatching.get_by(original_message_id=original_message_id)\n        # can happen when a user replies to multiple recipient from their alias\n        # a SL Message_id will be created for the first recipient\n        # it should be reused for other recipients\n        if matching:\n            sl_message_id = matching.sl_message_id\n            LOG.d(\"reuse the sl_message_id %s\", sl_message_id)\n        else:\n            sl_message_id = make_msgid(\n                str(email_log.id), get_email_domain_part(alias.email)\n            )\n            LOG.d(\"create a new sl_message_id %s\", sl_message_id)\n            try:\n                MessageIDMatching.create(\n                    sl_message_id=sl_message_id,\n                    original_message_id=original_message_id,\n                    email_log_id=email_log.id,\n                    commit=True,\n                )\n            except IntegrityError:\n                LOG.w(\n                    \"another matching with original_message_id %s was created in the mean time\",\n                    original_message_id,\n                )\n                Session.rollback()\n                matching = MessageIDMatching.get_by(\n                    original_message_id=original_message_id\n                )\n                sl_message_id = matching.sl_message_id\n    else:\n        sl_message_id = make_msgid(\n            str(email_log.id), get_email_domain_part(alias.email)\n        )\n        LOG.d(\"no original_message_id, create a new sl_message_id %s\", sl_message_id)\n\n    del msg[headers.MESSAGE_ID]\n    msg[headers.MESSAGE_ID] = sl_message_id\n\n    email_log.sl_message_id = sl_message_id\n    Session.commit()\n\n    # Replace all original headers in References header by SL Message ID header if needed\n    if msg[headers.REFERENCES]:\n        message_ids = str(msg[headers.REFERENCES]).split()\n        new_message_ids = []\n        for message_id in message_ids:\n            matching = MessageIDMatching.get_by(original_message_id=message_id)\n            if matching:\n                LOG.d(\n                    \"replace original message id by SL one, %s -> %s\",\n                    message_id,\n                    matching.sl_message_id,\n                )\n                new_message_ids.append(matching.sl_message_id)\n            else:\n                new_message_ids.append(message_id)\n\n        del msg[headers.REFERENCES]\n        msg[headers.REFERENCES] = \" \".join(new_message_ids)\n\n\ndef handle_unknown_mailbox(\n    envelope, msg, reply_email: str, user: User, alias: Alias, contact: Contact\n):\n    LOG.w(\n        \"Reply email can only be used by mailbox. \"\n        \"Actual mail_from: %s. msg from header: %s, reverse-alias %s, %s %s %s\",\n        envelope.mail_from,\n        msg[headers.FROM],\n        reply_email,\n        alias,\n        user,\n        contact,\n    )\n\n    authorize_address_link = (\n        f\"{URL}/dashboard/mailbox/{alias.mailbox_id}/#authorized-address\"\n    )\n    mailbox_emails = [mailbox.email for mailbox in alias.mailboxes]\n    send_email_with_rate_control(\n        user,\n        ALERT_REVERSE_ALIAS_UNKNOWN_MAILBOX,\n        user.email,\n        f\"Attempt to use your alias {alias.email} from {envelope.mail_from}\",\n        render(\n            \"transactional/reply-must-use-personal-email.txt\",\n            user=user,\n            alias=alias,\n            sender=envelope.mail_from,\n            authorize_address_link=authorize_address_link,\n            mailbox_emails=mailbox_emails,\n        ),\n        render(\n            \"transactional/reply-must-use-personal-email.html\",\n            user=user,\n            alias=alias,\n            sender=envelope.mail_from,\n            authorize_address_link=authorize_address_link,\n            mailbox_emails=mailbox_emails,\n        ),\n    )\n\n\ndef handle_bounce_forward_phase(msg: Message, email_log: EmailLog):\n    \"\"\"\n    Handle forward phase bounce\n    Happens when an email cannot be sent to a mailbox\n    \"\"\"\n    contact = email_log.contact\n    alias = contact.alias\n    user = alias.user\n    mailbox = email_log.mailbox\n\n    # email_log.mailbox should be set during the forward phase\n    if not mailbox:\n        LOG.e(\"Use %s default mailbox %s\", alias, alias.mailbox)\n        mailbox = alias.mailbox\n\n    bounce_info = get_mailbox_bounce_info(msg)\n    if bounce_info:\n        Bounce.create(\n            email=mailbox.email, info=bounce_info.as_bytes().decode(), commit=True\n        )\n    else:\n        LOG.w(\"cannot get bounce info, debug at %s\", save_email_for_debugging(msg))\n        Bounce.create(email=mailbox.email, commit=True)\n\n    LOG.d(\n        \"Handle forward bounce %s -> %s -> %s. %s\", contact, alias, mailbox, email_log\n    )\n\n    # Store the bounced email, generate a name for the email\n    random_name = str(uuid.uuid4())\n\n    full_report_path = f\"refused-emails/full-{random_name}.eml\"\n    s3.upload_email_from_bytesio(\n        full_report_path, BytesIO(message_to_bytes(msg)), f\"full-{random_name}\"\n    )\n\n    file_path = None\n\n    orig_msg = get_orig_message_from_bounce(msg)\n    if not orig_msg:\n        # Some MTA does not return the original message in bounce message\n        # nothing we can do here\n        LOG.w(\n            \"Cannot parse original message from bounce message %s %s %s %s\",\n            alias,\n            user,\n            contact,\n            full_report_path,\n        )\n    else:\n        file_path = f\"refused-emails/{random_name}.eml\"\n        s3.upload_email_from_bytesio(\n            file_path, BytesIO(message_to_bytes(orig_msg)), random_name\n        )\n\n    refused_email = RefusedEmail.create(\n        path=file_path, full_report_path=full_report_path, user_id=user.id\n    )\n    Session.flush()\n    LOG.d(\"Create refused email %s\", refused_email)\n\n    email_log.bounced = True\n    email_log.refused_email_id = refused_email.id\n    email_log.bounced_mailbox_id = mailbox.id\n    Session.commit()\n\n    refused_email_url = f\"{URL}/dashboard/refused_email?highlight_id={email_log.id}\"\n\n    alias_will_be_disabled, reason = should_disable(alias)\n    if alias_will_be_disabled:\n        LOG.w(\n            f\"Disable alias {alias} because {reason}. {alias.mailboxes} {alias.user}. Last contact {contact}\"\n        )\n        change_alias_status(\n            alias, enabled=False, message=f\"Set enabled=False due to {reason}\"\n        )\n\n        Notification.create(\n            user_id=user.id,\n            title=f\"{alias.email} has been disabled due to multiple bounces\",\n            message=Notification.render(\n                \"notification/alias-disable.html\", alias=alias, mailbox=mailbox\n            ),\n        )\n\n        Session.commit()\n\n        send_email_with_rate_control(\n            user,\n            ALERT_BOUNCE_EMAIL,\n            user.email,\n            f\"Alias {alias.email} has been disabled due to multiple bounces\",\n            render(\n                \"transactional/bounce/automatic-disable-alias.txt\",\n                user=alias.user,\n                alias=alias,\n                refused_email_url=refused_email_url,\n                mailbox_email=mailbox.email,\n            ),\n            render(\n                \"transactional/bounce/automatic-disable-alias.html\",\n                user=alias.user,\n                alias=alias,\n                refused_email_url=refused_email_url,\n                mailbox_email=mailbox.email,\n            ),\n            max_nb_alert=10,\n            ignore_smtp_error=True,\n        )\n    else:\n        LOG.d(\n            \"Inform user %s about a bounce from contact %s to alias %s\",\n            user,\n            contact,\n            alias,\n        )\n        disable_alias_link = f\"{URL}/dashboard/unsubscribe/{alias.id}\"\n        block_sender_link = f\"{URL}/dashboard/alias_contact_manager/{alias.id}?highlight_contact_id={contact.id}\"\n\n        Notification.create(\n            user_id=user.id,\n            title=f\"Email from {contact.website_email} to {alias.email} cannot be delivered to {mailbox.email}\",\n            message=Notification.render(\n                \"notification/bounce-forward-phase.html\",\n                alias=alias,\n                website_email=contact.website_email,\n                disable_alias_link=disable_alias_link,\n                refused_email_url=refused_email.get_url(),\n                mailbox_email=mailbox.email,\n                block_sender_link=block_sender_link,\n            ),\n            commit=True,\n        )\n        send_email_with_rate_control(\n            user,\n            ALERT_BOUNCE_EMAIL,\n            user.email,\n            f\"An email sent to {alias.email} cannot be delivered to your mailbox\",\n            render(\n                \"transactional/bounce/bounced-email.txt.jinja2\",\n                user=alias.user,\n                alias=alias,\n                website_email=contact.website_email,\n                disable_alias_link=disable_alias_link,\n                block_sender_link=block_sender_link,\n                refused_email_url=refused_email_url,\n                mailbox_email=mailbox.email,\n            ),\n            render(\n                \"transactional/bounce/bounced-email.html\",\n                user=alias.user,\n                alias=alias,\n                website_email=contact.website_email,\n                disable_alias_link=disable_alias_link,\n                refused_email_url=refused_email_url,\n                mailbox_email=mailbox.email,\n            ),\n            max_nb_alert=10,\n            # smtp error can happen if user mailbox is unreachable, that might explain the bounce\n            ignore_smtp_error=True,\n        )\n\n\ndef handle_bounce_reply_phase(envelope, msg: Message, email_log: EmailLog):\n    \"\"\"\n    Handle reply phase bounce\n    Happens when  an email cannot be sent from an alias to a contact\n    \"\"\"\n    contact: Contact = email_log.contact\n    alias = contact.alias\n    user = alias.user\n    mailbox = email_log.mailbox or alias.mailbox\n\n    LOG.d(\"Handle reply bounce %s -> %s -> %s.%s\", mailbox, alias, contact, email_log)\n\n    bounce_info = get_mailbox_bounce_info(msg)\n    if bounce_info:\n        Bounce.create(\n            email=sanitize_email(contact.website_email, not_lower=True),\n            info=bounce_info.as_bytes().decode(),\n            commit=True,\n        )\n    else:\n        LOG.w(\"cannot get bounce info, debug at %s\", save_email_for_debugging(msg))\n        Bounce.create(\n            email=sanitize_email(contact.website_email, not_lower=True), commit=True\n        )\n\n    # Store the bounced email\n    # generate a name for the email\n    random_name = str(uuid.uuid4())\n\n    full_report_path = f\"refused-emails/full-{random_name}.eml\"\n    s3.upload_email_from_bytesio(\n        full_report_path, BytesIO(message_to_bytes(msg)), random_name\n    )\n\n    orig_msg = get_orig_message_from_bounce(msg)\n    file_path = None\n    if orig_msg:\n        file_path = f\"refused-emails/{random_name}.eml\"\n        s3.upload_email_from_bytesio(\n            file_path, BytesIO(message_to_bytes(orig_msg)), random_name\n        )\n\n    refused_email = RefusedEmail.create(\n        path=file_path, full_report_path=full_report_path, user_id=user.id, commit=True\n    )\n    LOG.d(\"Create refused email %s\", refused_email)\n\n    email_log.bounced = True\n    email_log.refused_email_id = refused_email.id\n\n    email_log.bounced_mailbox_id = mailbox.id\n\n    Session.commit()\n\n    refused_email_url = f\"{URL}/dashboard/refused_email?highlight_id={email_log.id}\"\n\n    LOG.d(\n        \"Inform user %s about bounced email sent by %s to %s\",\n        user,\n        alias,\n        contact,\n    )\n    Notification.create(\n        user_id=user.id,\n        title=f\"Email cannot be sent to { contact.email } from your alias { alias.email }\",\n        message=Notification.render(\n            \"notification/bounce-reply-phase.html\",\n            alias=alias,\n            contact=contact,\n            refused_email_url=refused_email.get_url(),\n        ),\n        commit=True,\n    )\n    send_email_with_rate_control(\n        user,\n        ALERT_BOUNCE_EMAIL_REPLY_PHASE,\n        mailbox.email,\n        f\"Email cannot be sent to { contact.email } from your alias { alias.email }\",\n        render(\n            \"transactional/bounce/bounce-email-reply-phase.txt\",\n            user=user,\n            alias=alias,\n            contact=contact,\n            refused_email_url=refused_email_url,\n        ),\n        render(\n            \"transactional/bounce/bounce-email-reply-phase.html\",\n            user=user,\n            alias=alias,\n            contact=contact,\n            refused_email_url=refused_email_url,\n        ),\n    )\n\n\ndef handle_spam(\n    contact: Contact,\n    alias: Alias,\n    msg: Message,\n    user: User,\n    mailbox: Mailbox,\n    email_log: EmailLog,\n    is_reply=False,  # whether the email is in forward or reply phase\n):\n    # Store the report & original email\n    orig_msg = get_orig_message_from_spamassassin_report(msg)\n    # generate a name for the email\n    random_name = str(uuid.uuid4())\n\n    full_report_path = f\"spams/full-{random_name}.eml\"\n    s3.upload_email_from_bytesio(\n        full_report_path, BytesIO(message_to_bytes(msg)), random_name\n    )\n\n    file_path = None\n    if orig_msg:\n        file_path = f\"spams/{random_name}.eml\"\n        s3.upload_email_from_bytesio(\n            file_path, BytesIO(message_to_bytes(orig_msg)), random_name\n        )\n\n    refused_email = RefusedEmail.create(\n        path=file_path, full_report_path=full_report_path, user_id=user.id\n    )\n    Session.flush()\n\n    email_log.refused_email_id = refused_email.id\n    Session.commit()\n\n    LOG.d(\"Create spam email %s\", refused_email)\n\n    refused_email_url = f\"{URL}/dashboard/refused_email?highlight_id={email_log.id}\"\n    disable_alias_link = f\"{URL}/dashboard/unsubscribe/{alias.id}\"\n\n    if is_reply:\n        LOG.d(\n            \"Inform %s (%s) about spam email sent from alias %s to %s. %s\",\n            mailbox,\n            user,\n            alias,\n            contact,\n            refused_email,\n        )\n        send_email_with_rate_control(\n            user,\n            ALERT_SPAM_EMAIL,\n            mailbox.email,\n            f\"Email from {alias.email} to {contact.website_email} is detected as spam\",\n            render(\n                \"transactional/spam-email-reply-phase.txt\",\n                user=user,\n                alias=alias,\n                website_email=contact.website_email,\n                disable_alias_link=disable_alias_link,\n                refused_email_url=refused_email_url,\n            ),\n            render(\n                \"transactional/spam-email-reply-phase.html\",\n                user=user,\n                alias=alias,\n                website_email=contact.website_email,\n                disable_alias_link=disable_alias_link,\n                refused_email_url=refused_email_url,\n            ),\n        )\n    else:\n        # inform user\n        LOG.d(\n            \"Inform %s (%s) about spam email sent by %s to alias %s\",\n            mailbox,\n            user,\n            contact,\n            alias,\n        )\n        send_email_with_rate_control(\n            user,\n            ALERT_SPAM_EMAIL,\n            mailbox.email,\n            f\"Email from {contact.website_email} to {alias.email} is detected as spam\",\n            render(\n                \"transactional/spam-email.txt\",\n                user=user,\n                alias=alias,\n                website_email=contact.website_email,\n                disable_alias_link=disable_alias_link,\n                refused_email_url=refused_email_url,\n            ),\n            render(\n                \"transactional/spam-email.html\",\n                user=user,\n                alias=alias,\n                website_email=contact.website_email,\n                disable_alias_link=disable_alias_link,\n                refused_email_url=refused_email_url,\n            ),\n        )\n\n\ndef is_automatic_out_of_office(msg: Message) -> bool:\n    \"\"\"\n    Return whether an email is out-of-office\n    For info, out-of-office is sent to the envelope mail_from and not the From: header\n    More info on https://datatracker.ietf.org/doc/html/rfc3834#section-4 and https://support.google.com/mail/thread/21246740/my-auto-reply-filter-isn-t-replying-to-original-sender-address?hl=en&msgid=21261237\n    \"\"\"\n    if msg[headers.AUTO_SUBMITTED] is None:\n        return False\n\n    if msg[headers.AUTO_SUBMITTED].lower() in (\"auto-replied\", \"auto-generated\"):\n        LOG.d(\n            \"out-of-office email %s:%s\",\n            headers.AUTO_SUBMITTED,\n            msg[headers.AUTO_SUBMITTED],\n        )\n        return True\n\n    return False\n\n\ndef is_bounce(envelope: Envelope, msg: Message):\n    \"\"\"Detect whether an email is a Delivery Status Notification\"\"\"\n    return (\n        envelope.mail_from == \"<>\"\n        and msg.get_content_type().lower() == \"multipart/report\"\n    )\n\n\ndef handle_transactional_bounce(\n    envelope: Envelope, msg, rcpt_to, transactional_id=None\n):\n    LOG.d(\"handle transactional bounce sent to %s\", rcpt_to)\n    if transactional_id is None:\n        LOG.i(\n            f\"No transactional record for {envelope.mail_from} -> {envelope.rcpt_tos}\"\n        )\n        return\n\n    transactional = TransactionalEmail.get(transactional_id)\n    # a transaction might have been deleted in delete_logs()\n    if not transactional:\n        LOG.i(\n            f\"No transactional record for {envelope.mail_from} -> {envelope.rcpt_tos}\"\n        )\n        return\n    LOG.i(\"Create bounce for %s\", transactional.email)\n    bounce_info = get_mailbox_bounce_info(msg)\n    if bounce_info:\n        Bounce.create(\n            email=transactional.email,\n            info=bounce_info.as_bytes().decode(),\n            commit=True,\n        )\n    else:\n        LOG.w(\"cannot get bounce info, debug at %s\", save_email_for_debugging(msg))\n        Bounce.create(email=transactional.email, commit=True)\n\n\ndef handle_bounce(envelope, email_log: EmailLog, msg: Message) -> str:\n    \"\"\"\n    Return SMTP status, e.g. \"500 Error\"\n    \"\"\"\n\n    if not email_log:\n        LOG.w(\"No such email log\")\n        return status.E512\n\n    contact: Contact = email_log.contact\n    alias = contact.alias\n    LOG.d(\n        \"handle bounce for %s, phase=%s, contact=%s, alias=%s\",\n        email_log,\n        email_log.get_phase(),\n        contact,\n        alias,\n    )\n    if not email_log.user.is_active():\n        LOG.d(f\"User {email_log.user} is not active\")\n        return status.E510\n\n    if email_log.is_reply:\n        content_type = msg.get_content_type().lower()\n\n        if content_type != \"multipart/report\" or envelope.mail_from != \"<>\":\n            # forward the email again to the alias\n            LOG.i(\n                \"Handle auto reply %s %s\",\n                content_type,\n                envelope.mail_from,\n            )\n\n            contact: Contact = email_log.contact\n            alias = contact.alias\n\n            email_log.auto_replied = True\n            Session.commit()\n\n            # replace the BOUNCE_EMAIL by alias in To field\n            add_or_replace_header(msg, \"To\", alias.email)\n            envelope.rcpt_tos = [alias.email]\n\n            # same as handle()\n            # result of all deliveries\n            # each element is a couple of whether the delivery is successful and the smtp status\n            res: [(bool, str)] = []\n\n            for is_delivered, smtp_status in handle_forward(envelope, msg, alias.email):\n                res.append((is_delivered, smtp_status))\n\n            for is_success, smtp_status in res:\n                # Consider all deliveries successful if 1 delivery is successful\n                if is_success:\n                    return smtp_status\n\n            # Failed delivery for all, return the first failure\n            return res[0][1]\n\n        handle_bounce_reply_phase(envelope, msg, email_log)\n        return status.E212\n    else:  # forward phase\n        handle_bounce_forward_phase(msg, email_log)\n        return status.E211\n\n\ndef should_ignore(mail_from: str, rcpt_tos: List[str]) -> bool:\n    if len(rcpt_tos) != 1:\n        return False\n\n    rcpt_to = rcpt_tos[0]\n    if IgnoredEmail.get_by(mail_from=mail_from, rcpt_to=rcpt_to):\n        return True\n\n    return False\n\n\ndef send_no_reply_response(mail_from: str, msg: Message):\n    mailbox = Mailbox.get_by(email=mail_from)\n    if not mailbox:\n        LOG.d(\"Unknown sender. Skipping reply from {}\".format(NOREPLY))\n        return\n    if not mailbox.user.is_active():\n        LOG.d(f\"User {mailbox.user} is soft-deleted. Skipping sending reply response\")\n        return\n    send_email_at_most_times(\n        mailbox.user,\n        ALERT_TO_NOREPLY,\n        mailbox.user.email,\n        \"Auto: {}\".format(msg[headers.SUBJECT] or \"No subject\"),\n        render(\"transactional/noreply.text.jinja2\", user=mailbox.user),\n    )\n\n\ndef handle(envelope: Envelope, msg: Message) -> str:\n    \"\"\"Return SMTP status\"\"\"\n\n    # sanitize mail_from, rcpt_tos\n    mail_from = sanitize_email(envelope.mail_from)\n    rcpt_tos = [sanitize_email(rcpt_to) for rcpt_to in envelope.rcpt_tos]\n    envelope.mail_from = mail_from\n    envelope.rcpt_tos = rcpt_tos\n\n    # some emails don't have this header, set the default value (7bit) in this case\n    if headers.CONTENT_TRANSFER_ENCODING not in msg:\n        LOG.i(\"Set CONTENT_TRANSFER_ENCODING\")\n        msg[headers.CONTENT_TRANSFER_ENCODING] = \"7bit\"\n\n    postfix_queue_id = get_queue_id(msg)\n    if postfix_queue_id:\n        set_message_id(postfix_queue_id)\n    else:\n        LOG.d(\n            \"Cannot parse Postfix queue ID from %s %s\",\n            msg.get_all(headers.RECEIVED),\n            msg[headers.RECEIVED],\n        )\n\n    if should_ignore(mail_from, rcpt_tos):\n        LOG.w(\"Ignore email mail_from=%s rcpt_to=%s\", mail_from, rcpt_tos)\n        return status.E204\n\n    # sanitize email headers\n    sanitize_header(msg, headers.FROM)\n    sanitize_header(msg, headers.TO)\n    sanitize_header(msg, headers.CC)\n    sanitize_header(msg, headers.REPLY_TO)\n    sanitize_header(msg, headers.MESSAGE_ID)\n\n    LOG.d(\n        \"==>> Handle mail_from:%s, rcpt_tos:%s, header_from:%s, header_to:%s, \"\n        \"cc:%s, reply-to:%s, message_id:%s, client_ip:%s, headers:%s, mail_options:%s, rcpt_options:%s\",\n        mail_from,\n        rcpt_tos,\n        msg[headers.FROM],\n        msg[headers.TO],\n        msg[headers.CC],\n        msg[headers.REPLY_TO],\n        msg[headers.MESSAGE_ID],\n        msg[headers.SL_CLIENT_IP],\n        msg._headers,\n        envelope.mail_options,\n        envelope.rcpt_options,\n    )\n\n    # region mail_from or from_header is a reverse alias which should never happen\n    email_sent_from_reverse_alias = False\n    contact = Contact.get_by(reply_email=mail_from)\n    if contact:\n        email_sent_from_reverse_alias = True\n\n    from_header = get_header_unicode(msg[headers.FROM])\n    if from_header:\n        try:\n            _, from_header_address = parse_full_address(from_header)\n        except ValueError:\n            LOG.w(\"cannot parse the From header %s\", from_header)\n        else:\n            contact = Contact.get_by(reply_email=from_header_address)\n            if contact:\n                email_sent_from_reverse_alias = True\n\n    if email_sent_from_reverse_alias:\n        LOG.w(f\"email sent from reverse alias {contact} {contact.alias} {contact.user}\")\n        user = contact.user\n        send_email_at_most_times(\n            user,\n            ALERT_FROM_ADDRESS_IS_REVERSE_ALIAS,\n            user.email,\n            \"SimpleLogin shouldn't be used with another email forwarding system\",\n            render(\n                \"transactional/email-sent-from-reverse-alias.txt.jinja2\",\n                user=user,\n            ),\n        )\n\n    # endregion\n\n    # unsubscribe request\n    if UNSUBSCRIBER and (rcpt_tos == [UNSUBSCRIBER] or rcpt_tos == [OLD_UNSUBSCRIBER]):\n        LOG.d(\"Handle unsubscribe request from %s\", mail_from)\n        return UnsubscribeHandler().handle_unsubscribe_from_message(envelope, msg)\n\n    # region mail sent to VERP\n    verp_info = get_verp_info_from_email(rcpt_tos[0])\n\n    # sent to transactional VERP. Either bounce emails or out-of-office\n    if (\n        len(rcpt_tos) == 1\n        and rcpt_tos[0].startswith(TRANSACTIONAL_BOUNCE_PREFIX)\n        and rcpt_tos[0].endswith(TRANSACTIONAL_BOUNCE_SUFFIX)\n    ) or (verp_info and verp_info[0] == VerpType.transactional):\n        if is_bounce(envelope, msg):\n            handle_transactional_bounce(\n                envelope, msg, rcpt_tos[0], verp_info and verp_info[1]\n            )\n            return status.E205\n        elif is_automatic_out_of_office(msg):\n            LOG.d(\n                \"Ignore out-of-office for transactional emails. Headers: %s\", msg.items\n            )\n            return status.E206\n        else:\n            raise VERPTransactional\n\n    # sent to forward VERP, can be either bounce or out-of-office\n    if (\n        len(rcpt_tos) == 1\n        and rcpt_tos[0].startswith(BOUNCE_PREFIX)\n        and rcpt_tos[0].endswith(BOUNCE_SUFFIX)\n    ) or (verp_info and verp_info[0] == VerpType.bounce_forward):\n        email_log_id = (verp_info and verp_info[1]) or parse_id_from_bounce(rcpt_tos[0])\n        email_log = EmailLog.get(email_log_id)\n\n        if not email_log:\n            LOG.w(\"No such email log\")\n            return status.E512\n\n        if is_bounce(envelope, msg):\n            return handle_bounce(envelope, email_log, msg)\n        elif is_automatic_out_of_office(msg):\n            handle_out_of_office_forward_phase(email_log, envelope, msg, rcpt_tos)\n        else:\n            raise VERPForward\n\n    # sent to reply VERP, can be either bounce or out-of-office\n    if (\n        len(rcpt_tos) == 1\n        and rcpt_tos[0].startswith(f\"{BOUNCE_PREFIX_FOR_REPLY_PHASE}+\")\n        or (verp_info and verp_info[0] == VerpType.bounce_reply)\n    ):\n        email_log_id = (verp_info and verp_info[1]) or parse_id_from_bounce(rcpt_tos[0])\n        email_log = EmailLog.get(email_log_id)\n\n        if not email_log:\n            LOG.w(\"No such email log\")\n            return status.E512\n\n        # bounce by contact\n        if is_bounce(envelope, msg):\n            return handle_bounce(envelope, email_log, msg)\n        elif is_automatic_out_of_office(msg):\n            handle_out_of_office_reply_phase(email_log, envelope, msg, rcpt_tos)\n        else:\n            raise VERPReply(\n                f\"cannot handle email sent to reply VERP, \"\n                f\"{email_log.alias} -> {email_log.contact} ({email_log}, {email_log.user}\"\n            )\n\n    # iCloud returns the bounce with mail_from=bounce+{email_log_id}+@simplelogin.co, rcpt_to=alias\n    verp_info = get_verp_info_from_email(mail_from[0])\n    if (\n        len(rcpt_tos) == 1\n        and mail_from.startswith(BOUNCE_PREFIX)\n        and mail_from.endswith(BOUNCE_SUFFIX)\n    ) or (verp_info and verp_info[0] == VerpType.bounce_forward):\n        email_log_id = (verp_info and verp_info[1]) or parse_id_from_bounce(mail_from)\n        email_log = EmailLog.get(email_log_id)\n        alias = Alias.get_by(email=rcpt_tos[0])\n        LOG.w(\n            \"iCloud bounces %s %s, saved to%s\",\n            email_log,\n            alias,\n            save_email_for_debugging(msg, file_name_prefix=\"icloud_bounce_\"),\n        )\n        return handle_bounce(envelope, email_log, msg)\n\n    # endregion\n\n    # region hotmail, yahoo complaints\n    if (\n        len(rcpt_tos) == 1\n        and mail_from == \"staff@hotmail.com\"\n        and rcpt_tos[0] == POSTMASTER\n    ):\n        LOG.w(\"Handle hotmail complaint\")\n\n        # if the complaint cannot be handled, forward it normally\n        if handle_hotmail_complaint(msg):\n            return status.E208\n\n    if (\n        len(rcpt_tos) == 1\n        and mail_from == \"feedback@arf.mail.yahoo.com\"\n        and rcpt_tos[0] == POSTMASTER\n    ):\n        LOG.w(\"Handle yahoo complaint\")\n\n        # if the complaint cannot be handled, forward it normally\n        if handle_yahoo_complaint(msg):\n            return status.E210\n\n    # endregion\n\n    if rate_limited(mail_from, rcpt_tos):\n        LOG.w(\"Rate Limiting applied for mail_from:%s rcpt_tos:%s\", mail_from, rcpt_tos)\n\n        # add more logging info. TODO: remove\n        if len(rcpt_tos) == 1:\n            alias = Alias.get_by(email=rcpt_tos[0])\n            if alias:\n                LOG.w(\n                    \"total number email log on %s, %s is %s, %s\",\n                    alias,\n                    alias.user,\n                    EmailLog.filter(EmailLog.alias_id == alias.id).count(),\n                    EmailLog.filter(EmailLog.user_id == alias.user_id).count(),\n                )\n\n        if should_ignore_bounce(envelope.mail_from):\n            return status.E207\n        else:\n            return status.E522\n\n    # Handle \"out-of-office\" auto notice, i.e. an automatic response is sent for every forwarded email\n    if len(rcpt_tos) == 1 and is_reverse_alias(rcpt_tos[0]) and mail_from == \"<>\":\n        contact = Contact.get_by(reply_email=rcpt_tos[0])\n        LOG.w(\n            \"out-of-office email to reverse alias %s. Saved to %s\",\n            contact,\n            save_email_for_debugging(msg),  # todo: remove\n        )\n        return status.E206\n\n    # result of all deliveries\n    # each element is a couple of whether the delivery is successful and the smtp status\n    res: [(bool, str)] = []\n\n    nb_rcpt_tos = len(rcpt_tos)\n    for rcpt_index, rcpt_to in enumerate(rcpt_tos):\n        if rcpt_to in config.NOREPLIES:\n            LOG.i(\"email sent to {} address from {}\".format(NOREPLY, mail_from))\n            send_no_reply_response(mail_from, msg)\n            return status.E200\n\n        # create a copy of msg for each recipient except the last one\n        # as copy() is a slow function\n        if rcpt_index < nb_rcpt_tos - 1:\n            LOG.d(\"copy message for rcpt %s\", rcpt_to)\n            copy_msg = copy(msg)\n        else:\n            copy_msg = msg\n\n        # Reply case: the recipient is a reverse alias. Used to start with \"reply+\" or \"ra+\"\n        if is_reverse_alias(rcpt_to):\n            LOG.d(\n                \"Reply phase %s(%s) -> %s\", mail_from, copy_msg[headers.FROM], rcpt_to\n            )\n            is_delivered, smtp_status = handle_reply(envelope, copy_msg, rcpt_to)\n            res.append((is_delivered, smtp_status))\n        else:  # Forward case\n            LOG.d(\n                \"Forward phase %s(%s) -> %s\",\n                mail_from,\n                copy_msg[headers.FROM],\n                rcpt_to,\n            )\n            for is_delivered, smtp_status in handle_forward(\n                envelope, copy_msg, rcpt_to\n            ):\n                res.append((is_delivered, smtp_status))\n\n    # to know whether both successful and unsuccessful deliveries can happen at the same time\n    nb_success = len([is_success for (is_success, smtp_status) in res if is_success])\n    # ignore E518 which is a normal condition\n    nb_non_success = len(\n        [\n            is_success\n            for (is_success, smtp_status) in res\n            if not is_success and smtp_status != status.E518\n        ]\n    )\n\n    if nb_success > 0 and nb_non_success > 0:\n        LOG.e(f\"some deliveries fail and some success, {mail_from}, {rcpt_tos}, {res}\")\n\n    for is_success, smtp_status in res:\n        # Consider all deliveries successful if 1 delivery is successful\n        if is_success:\n            return smtp_status\n\n    # Failed delivery for all, return the first failure\n    return res[0][1]\n\n\ndef handle_out_of_office_reply_phase(email_log, envelope, msg, rcpt_tos):\n    \"\"\"convert the email into a normal email sent to the alias, so it can be forwarded to mailbox\"\"\"\n    LOG.d(\n        \"send the out-of-office email to the alias %s, old to_header:%s rcpt_tos:%s, %s\",\n        email_log.alias,\n        msg[headers.TO],\n        rcpt_tos,\n        email_log,\n    )\n    alias_address = email_log.alias.email\n\n    rcpt_tos[0] = alias_address\n    envelope.rcpt_tos = [alias_address]\n\n    add_or_replace_header(msg, headers.TO, alias_address)\n    # delete reply-to header that can affect email delivery\n    delete_header(msg, headers.REPLY_TO)\n\n    LOG.d(\n        \"after out-of-office transformation to_header:%s reply_to:%s rcpt_tos:%s\",\n        msg.get_all(headers.TO),\n        msg.get_all(headers.REPLY_TO),\n        rcpt_tos,\n    )\n\n\ndef handle_out_of_office_forward_phase(email_log, envelope, msg, rcpt_tos):\n    \"\"\"convert the email into a normal email sent to the reverse alias, so it can be forwarded to contact\"\"\"\n    LOG.d(\n        \"send the out-of-office email to the contact %s, old to_header:%s rcpt_tos:%s %s\",\n        email_log.contact,\n        msg[headers.TO],\n        rcpt_tos,\n        email_log,\n    )\n    reverse_alias = email_log.contact.reply_email\n\n    rcpt_tos[0] = reverse_alias\n    envelope.rcpt_tos = [reverse_alias]\n\n    add_or_replace_header(msg, headers.TO, reverse_alias)\n    # delete reply-to header that can affect email delivery\n    delete_header(msg, headers.REPLY_TO)\n\n    LOG.d(\n        \"after out-of-office transformation to_header:%s reply_to:%s rcpt_tos:%s\",\n        msg.get_all(headers.TO),\n        msg.get_all(headers.REPLY_TO),\n        rcpt_tos,\n    )\n\n\nclass MailHandler:\n    async def handle_DATA(self, server, session, envelope: Envelope):\n        msg = email.message_from_bytes(envelope.original_content)\n        try:\n            ret = self._handle(envelope, msg)\n            return ret\n\n        # happen if reverse-alias is used during the forward phase\n        # as in this case, a new reverse-alias needs to be created for this reverse-alias -> chaos\n        except CannotCreateContactForReverseAlias as e:\n            LOG.w(\n                \"Probably due to reverse-alias used in the forward phase, \"\n                \"error:%s mail_from:%s, rcpt_tos:%s, header_from:%s, header_to:%s\",\n                e,\n                envelope.mail_from,\n                envelope.rcpt_tos,\n                msg[headers.FROM],\n                msg[headers.TO],\n            )\n            return status.E524\n        except (VERPReply, VERPForward, VERPTransactional) as e:\n            LOG.w(\n                \"email handling fail with error:%s \"\n                \"mail_from:%s, rcpt_tos:%s, header_from:%s, header_to:%s\",\n                e,\n                envelope.mail_from,\n                envelope.rcpt_tos,\n                msg[headers.FROM],\n                msg[headers.TO],\n            )\n            return status.E213\n        except Exception as e:\n            LOG.e(\n                \"email handling fail with error:%s \"\n                \"mail_from:%s, rcpt_tos:%s, header_from:%s, header_to:%s, saved to %s\",\n                e,\n                envelope.mail_from,\n                envelope.rcpt_tos,\n                msg[headers.FROM],\n                msg[headers.TO],\n                save_envelope_for_debugging(\n                    envelope, file_name_prefix=e.__class__.__name__\n                ),  # todo: remove\n            )\n            return status.E404\n\n    @newrelic.agent.background_task()\n    def _handle(self, envelope: Envelope, msg: Message):\n        start = time.time()\n\n        # generate a different message_id to keep track of an email lifecycle\n        message_id = str(uuid.uuid4())\n        set_message_id(message_id)\n\n        LOG.d(\"====>=====>====>====>====>====>====>====>\")\n        LOG.i(\n            \"New message, mail from %s, rctp tos %s \",\n            envelope.mail_from,\n            envelope.rcpt_tos,\n        )\n        newrelic.agent.record_custom_metric(\n            \"Custom/nb_rcpt_tos\", len(envelope.rcpt_tos)\n        )\n\n        with create_light_app().app_context():\n            return_status = handle(envelope, msg)\n            elapsed = time.time() - start\n            # Only bounce messages if the return-path passes the spf check. Otherwise black-hole it.\n            spamd_result = SpamdResult.extract_from_headers(msg)\n            if return_status[0] == \"5\":\n                if spamd_result and spamd_result.spf in (\n                    SPFCheckResult.fail,\n                    SPFCheckResult.soft_fail,\n                ):\n                    LOG.i(\n                        \"Replacing 5XX to 216 status because the return-path failed the spf check\"\n                    )\n                    return_status = status.E216\n\n            LOG.i(\n                \"Finish mail_from %s, rcpt_tos %s, takes %s seconds with return code '%s'<<===\",\n                envelope.mail_from,\n                envelope.rcpt_tos,\n                elapsed,\n                return_status,\n            )\n\n            SpamdResult.send_to_new_relic(msg)\n            newrelic.agent.record_custom_metric(\"Custom/email_handler_time\", elapsed)\n            newrelic.agent.record_custom_metric(\"Custom/number_incoming_email\", 1)\n            return return_status\n\n\ndef main(port: int):\n    \"\"\"Use aiosmtpd Controller\"\"\"\n    controller = Controller(MailHandler(), hostname=\"0.0.0.0\", port=port)\n\n    controller.start()\n    LOG.d(\"Start mail controller %s %s\", controller.hostname, controller.port)\n\n    if LOAD_PGP_EMAIL_HANDLER:\n        LOG.w(\"LOAD PGP keys\")\n        load_pgp_public_keys()\n\n    while True:\n        time.sleep(2)\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\n        \"-p\", \"--port\", help=\"SMTP port to listen for\", type=int, default=20381\n    )\n    args = parser.parse_args()\n\n    LOG.i(\"Listen for port %s\", args.port)\n    main(port=args.port)\n"
        },
        {
          "name": "event_listener.py",
          "type": "blob",
          "size": 3.3623046875,
          "content": "import argparse\nfrom enum import Enum\nfrom sys import argv, exit\n\nfrom app.config import EVENT_LISTENER_DB_URI\nfrom app.log import LOG\nfrom events import event_debugger\nfrom events.runner import Runner\nfrom events.event_source import DeadLetterEventSource, PostgresEventSource\nfrom events.event_sink import ConsoleEventSink, HttpEventSink\n\n_DEFAULT_MAX_RETRIES = 10\n\n\nclass Mode(Enum):\n    DEAD_LETTER = \"dead_letter\"\n    LISTENER = \"listener\"\n\n    @staticmethod\n    def from_str(value: str):\n        if value == Mode.DEAD_LETTER.value:\n            return Mode.DEAD_LETTER\n        elif value == Mode.LISTENER.value:\n            return Mode.LISTENER\n        else:\n            raise ValueError(f\"Invalid mode: {value}\")\n\n\ndef main(mode: Mode, dry_run: bool, max_retries: int):\n    if mode == Mode.DEAD_LETTER:\n        LOG.i(\"Using DeadLetterEventSource\")\n        source = DeadLetterEventSource(max_retries)\n    elif mode == Mode.LISTENER:\n        LOG.i(\"Using PostgresEventSource\")\n        source = PostgresEventSource(EVENT_LISTENER_DB_URI)\n    else:\n        raise ValueError(f\"Invalid mode: {mode}\")\n\n    if dry_run:\n        LOG.i(\"Starting with ConsoleEventSink\")\n        sink = ConsoleEventSink()\n    else:\n        LOG.i(\"Starting with HttpEventSink\")\n        sink = HttpEventSink()\n\n    runner = Runner(source=source, sink=sink)\n    runner.run()\n\n\ndef debug_event(event_id: str):\n    LOG.i(f\"Debugging event {event_id}\")\n    try:\n        event_id_int = int(event_id)\n    except ValueError:\n        raise ValueError(f\"Invalid event id: {event_id}\")\n    event_debugger.debug_event(event_id_int)\n\n\ndef run_event(event_id: str, delete_on_success: bool):\n    LOG.i(f\"Running event {event_id}\")\n    try:\n        event_id_int = int(event_id)\n    except ValueError:\n        raise ValueError(f\"Invalid event id: {event_id}\")\n    event_debugger.run_event(event_id_int, delete_on_success)\n\n\ndef args():\n    parser = argparse.ArgumentParser(description=\"Run event listener\")\n    subparsers = parser.add_subparsers(dest=\"command\")\n\n    listener_parser = subparsers.add_parser(Mode.LISTENER.value)\n    listener_parser.add_argument(\n        \"--max-retries\", type=int, default=_DEFAULT_MAX_RETRIES\n    )\n    listener_parser.add_argument(\"--dry-run\", action=\"store_true\")\n\n    dead_letter_parser = subparsers.add_parser(Mode.DEAD_LETTER.value)\n    dead_letter_parser.add_argument(\n        \"--max-retries\", type=int, default=_DEFAULT_MAX_RETRIES\n    )\n    dead_letter_parser.add_argument(\"--dry-run\", action=\"store_true\")\n\n    debug_parser = subparsers.add_parser(\"debug\")\n    debug_parser.add_argument(\"event_id\", help=\"ID of the event to debug\")\n\n    run_parser = subparsers.add_parser(\"run\")\n    run_parser.add_argument(\"event_id\", help=\"ID of the event to run\")\n    run_parser.add_argument(\"--delete-on-success\", action=\"store_true\")\n\n    return parser.parse_args()\n\n\nif __name__ == \"__main__\":\n    if len(argv) < 2:\n        print(\"Invalid usage. Pass a valid subcommand as argument\")\n        exit(1)\n\n    args = args()\n\n    if args.command in [Mode.LISTENER.value, Mode.DEAD_LETTER.value]:\n        main(\n            mode=Mode.from_str(args.command),\n            dry_run=args.dry_run,\n            max_retries=args.max_retries,\n        )\n    elif args.command == \"debug\":\n        debug_event(args.event_id)\n    elif args.command == \"run\":\n        run_event(args.event_id, args.delete_on_success)\n    else:\n        print(\"Invalid command\")\n        exit(1)\n"
        },
        {
          "name": "events",
          "type": "tree",
          "content": null
        },
        {
          "name": "example.env",
          "type": "blob",
          "size": 5.6533203125,
          "content": "# This file contains all available options in SimpleLogin.\n# Some are optional and are commented out by default.\n# Some are only relevant for our SaaS version, for example for payment integration, analytics, etc.\n\n# Server url\nURL=http://localhost:7777\n\n# If you want to enable sentry for error tracking, put your sentry dsn here.\n# SENTRY_DSN=your_sentry_dsn\n\n# Possible to use another sentry project for the front-end to avoid noises\n# If not set, fallback to SENTRY_DSN\n# SENTRY_FRONT_END_DSN=your_sentry_dsn\n\n# apply colored log to facilitate local development\n# COLOR_LOG=true\n\n# Only print email content, not sending it, for local development\nNOT_SEND_EMAIL=true\n\n# domain used to create alias\nEMAIL_DOMAIN=sl.local\n\n# Allow SimpleLogin to enforce SPF by using the extra headers from postfix\n# ENFORCE_SPF=true\n\n# other domains that can be used to create aliases, in addition to EMAIL_DOMAIN\n# OTHER_ALIAS_DOMAINS=[\"domain1.com\", \"domain2.com\"]\n\n# domains that can be used to create aliases. If set, override OTHER_ALIAS_DOMAINS\n# ALIAS_DOMAINS=[\"domain1.com\", \"domain2.com\"]\n\n# (optional) domains that are only available to premium accounts\n# PREMIUM_ALIAS_DOMAINS=[\"premium.com\"]\n\n# the alias domain used when creating the first alias for user, default to EMAIL_DOMAIN if not set\n# FIRST_ALIAS_DOMAIN = another-domain.com\n\n# transactional email is sent from this email address\nSUPPORT_EMAIL=support@sl.local\nSUPPORT_NAME=Son from SimpleLogin\n\n# To use VERP\n# prefix must end with + and suffix must start with +\n# BOUNCE_PREFIX = \"bounces+\"\n# BOUNCE_SUFFIX = \"+@sl.local\"\n# same as BOUNCE_PREFIX but used for reply phase. Note it doesn't have the plus sign (+) at the end.\n# BOUNCE_PREFIX_FOR_REPLY_PHASE = \"bounce_reply\"\n\n# to receive general stats.\n# ADMIN_EMAIL=admin@sl.local\n\n# Max number emails user can generate for free plan\n# Set to 5 by default\n# MAX_NB_EMAIL_FREE_PLAN=5\n\n# Close registration. Avoid people accidentally creating new account on a self-hosted SimpleLogin\n# DISABLE_REGISTRATION=1\n\n# custom domain needs to point to these MX servers\nEMAIL_SERVERS_WITH_PRIORITY=[(10, \"email.hostname.\")]\n\n# By default, new aliases must end with \".{random_word}\". This is to avoid a person taking all \"nice\" aliases.\n# this option doesn't make sense in self-hosted. Set this variable to disable this option.\n# DISABLE_ALIAS_SUFFIX=1\n\n# If you want to use another MTA to send email, you could set the address of your MTA here\n# By default, emails are sent using the the same Postfix server that receives emails\n# POSTFIX_SERVER=my-postfix.com\n\n# the DKIM private key used to compute DKIM-Signature\n# DKIM_PRIVATE_KEY_PATH=local_data/dkim.key\n\n# DB Connection\nDB_URI=postgresql://myuser:mypassword@localhost:5432/simplelogin\n\nFLASK_SECRET=secret\n\n# AWS params\n# BUCKET=to_fill\n# AWS_ACCESS_KEY_ID=to_fill\n# AWS_SECRET_ACCESS_KEY=to_fill\n# AWS_REGION=to_fill\n\n# Paddle\n# PADDLE_VENDOR_ID=123\n# PADDLE_MONTHLY_PRODUCT_ID=123\n# PADDLE_YEARLY_PRODUCT_ID=123\n# PADDLE_PUBLIC_KEY_PATH=local_data/paddle.key.pub\n# PADDLE_AUTH_CODE=123\n\n# OpenId key\nOPENID_PRIVATE_KEY_PATH=local_data/jwtRS256.key\nOPENID_PUBLIC_KEY_PATH=local_data/jwtRS256.key.pub\n\n# Words to generate random email alias\nWORDS_FILE_PATH=local_data/test_words.txt\n\n# Login with Github\n# GITHUB_CLIENT_ID=to_fill\n# GITHUB_CLIENT_SECRET=to_fill\n\n# Login with Google\n# GOOGLE_CLIENT_ID=to_fill\n# GOOGLE_CLIENT_SECRET=to_fill\n\n# Login with Facebook\n# FACEBOOK_CLIENT_ID=to_fill\n# FACEBOOK_CLIENT_SECRET=to_fill\n\n# Login with Proton\n# PROTON_CLIENT_ID=to_fill\n# PROTON_CLIENT_SECRET=to_fill\n# PROTON_BASE_URL=to_fill\n# PROTON_VALIDATE_CERTS=true\n# CONNECT_WITH_PROTON=true\n# CONNECT_WITH_PROTON_COOKIE_NAME=to_fill\n\n# Login with OIDC\n# CONNECT_WITH_OIDC_ICON=fa-github\n# OIDC_WELL_KNOWN_URL=to_fill\n# OIDC_SCOPES=openid email profile\n# OIDC_NAME_FIELD=name\n# OIDC_CLIENT_ID=to_fill\n# OIDC_CLIENT_SECRET=to_fill\n\n# Flask profiler\n# FLASK_PROFILER_PATH=/tmp/flask-profiler.sql\n# FLASK_PROFILER_PASSWORD=password\n\n# Where to store GPG Keyring\n# GNUPGHOME=/tmp/gnupg\n\n# By default, files are uploaded to s3\n# Set this variable to use the local \"static/upload/\" directory instead\nLOCAL_FILE_UPLOAD=true\n\n# The landing page\n# LANDING_PAGE_URL=https://simplelogin.io\n\n# The status page\n# STATUS_PAGE_URL=https://status.simplelogin.io\n\n# Used when querying info on Apple API\n# APPLE_API_SECRET=secret\n# MACAPP_APPLE_API_SECRET=secret\n\n# Disable onboarding emails\n# For self-hosted instance\nDISABLE_ONBOARDING=true\n\n# By default use postfix port 25. This param is used to override the Postfix port,\n# useful when using another SMTP server when developing locally\n# POSTFIX_PORT=1025\n\n# set the 2 below variables to enable hCaptcha\n# HCAPTCHA_SECRET=very_long_string\n# HCAPTCHA_SITEKEY=00000000-0000-0000-0000-000000000000\n\n# Set the 2 below variables to enable Plausible Analytics\n# PLAUSIBLE_HOST=https://plausible.io\n# PLAUSIBLE_DOMAIN=yourdomain.com\n\n# Spamassassin server\n# SPAMASSASSIN_HOST = 127.0.0.1\n\n# if set, used to sign the forwarding emails\n# PGP_SENDER_PRIVATE_KEY_PATH=local_data/private-pgp.asc\n\n# Coinbase\n# COINBASE_WEBHOOK_SECRET=to_fill\n# COINBASE_CHECKOUT_ID=to_fill\n# COINBASE_API_KEY=to_fill\n# COINBASE_YEARLY_PRICE=30.00\n\n# set the frequency limit on alias creation\n# ALIAS_LIMIT = \"100/day;50/hour;5/minute\"\n\n# whether to enable spam scan using SpamAssassin\n# ENABLE_SPAM_ASSASSIN = 1\n\n# Have I Been Pwned\n# HIBP_SCAN_INTERVAL_DAYS = 7\n# HIBP_API_KEYS=[]\n\n# POSTMASTER = postmaster@example.com\n\n# TEMP_DIR = /tmp\n\n#ALIAS_AUTOMATIC_DISABLE=true\n\n# domains that can be present in the &next= section when using absolute urls\nALLOWED_REDIRECT_DOMAINS=[]\n\n# DNS nameservers to be used by the app\n# Multiple nameservers can be specified, separated by ','\nNAMESERVERS=\"1.1.1.1\"\nPARTNER_API_TOKEN_SECRET=\"changeme\"\n"
        },
        {
          "name": "init_app.py",
          "type": "blob",
          "size": 2.4091796875,
          "content": "from app.config import (\n    ALIAS_DOMAINS,\n    PREMIUM_ALIAS_DOMAINS,\n)\nfrom app.db import Session\nfrom app.log import LOG\nfrom app.models import Mailbox, Contact, SLDomain, Partner\nfrom app.pgp_utils import load_public_key\nfrom app.proton.utils import PROTON_PARTNER_NAME\nfrom server import create_light_app\n\n\ndef load_pgp_public_keys():\n    \"\"\"Load PGP public key to keyring\"\"\"\n    for mailbox in Mailbox.filter(Mailbox.pgp_public_key.isnot(None)).all():\n        LOG.d(\"Load PGP key for mailbox %s\", mailbox)\n        fingerprint = load_public_key(mailbox.pgp_public_key)\n\n        # sanity check\n        if fingerprint != mailbox.pgp_finger_print:\n            LOG.e(\"fingerprint %s different for mailbox %s\", fingerprint, mailbox)\n            mailbox.pgp_finger_print = fingerprint\n    Session.commit()\n\n    for contact in Contact.filter(Contact.pgp_public_key.isnot(None)).all():\n        LOG.d(\"Load PGP key for %s\", contact)\n        fingerprint = load_public_key(contact.pgp_public_key)\n\n        # sanity check\n        if fingerprint != contact.pgp_finger_print:\n            LOG.e(\"fingerprint %s different for contact %s\", fingerprint, contact)\n            contact.pgp_finger_print = fingerprint\n\n    Session.commit()\n\n    LOG.d(\"Finish load_pgp_public_keys\")\n\n\ndef add_sl_domains():\n    for alias_domain in ALIAS_DOMAINS:\n        if SLDomain.get_by(domain=alias_domain):\n            LOG.d(\"%s is already a SL domain\", alias_domain)\n        else:\n            LOG.i(\"Add %s to SL domain\", alias_domain)\n            SLDomain.create(domain=alias_domain, use_as_reverse_alias=True)\n\n    for premium_domain in PREMIUM_ALIAS_DOMAINS:\n        if SLDomain.get_by(domain=premium_domain):\n            LOG.d(\"%s is already a SL domain\", premium_domain)\n        else:\n            LOG.i(\"Add %s to SL domain\", premium_domain)\n            SLDomain.create(\n                domain=premium_domain, premium_only=True, use_as_reverse_alias=True\n            )\n\n    Session.commit()\n\n\ndef add_proton_partner():\n    proton_partner = Partner.get_by(name=PROTON_PARTNER_NAME)\n    if not proton_partner:\n        Partner.create(\n            name=PROTON_PARTNER_NAME,\n            contact_email=\"simplelogin@protonmail.com\",\n        )\n        Session.commit()\n\n\nif __name__ == \"__main__\":\n    # wrap in an app context to benefit from app setup like database cleanup, sentry integration, etc\n    with create_light_app().app_context():\n        load_pgp_public_keys()\n        add_sl_domains()\n"
        },
        {
          "name": "job_runner.py",
          "type": "blob",
          "size": 11.4306640625,
          "content": "\"\"\"\nRun scheduled jobs.\nNot meant for running job at precise time (+- 1h)\n\"\"\"\nimport time\nfrom typing import List, Optional\n\nimport arrow\nfrom sqlalchemy.sql.expression import or_, and_\n\nfrom app import config\nfrom app.db import Session\nfrom app.email_utils import (\n    send_email,\n    render,\n)\nfrom app.events.event_dispatcher import PostgresDispatcher\nfrom app.import_utils import handle_batch_import\nfrom app.jobs.event_jobs import send_alias_creation_events_for_user\nfrom app.jobs.export_user_data_job import ExportUserDataJob\nfrom app.jobs.send_event_job import SendEventToWebhookJob\nfrom app.log import LOG\nfrom app.models import User, Job, BatchImport, Mailbox, CustomDomain, JobState\nfrom app.user_audit_log_utils import emit_user_audit_log, UserAuditLogAction\nfrom server import create_light_app\n\n\ndef onboarding_send_from_alias(user):\n    comm_email, unsubscribe_link, via_email = user.get_communication_email()\n    if not comm_email:\n        return\n\n    send_email(\n        comm_email,\n        \"SimpleLogin Tip: Send emails from your alias\",\n        render(\n            \"com/onboarding/send-from-alias.txt.j2\",\n            user=user,\n            to_email=comm_email,\n        ),\n        render(\"com/onboarding/send-from-alias.html\", user=user, to_email=comm_email),\n        unsubscribe_link,\n        via_email,\n        retries=3,\n        ignore_smtp_error=True,\n    )\n\n\ndef onboarding_pgp(user):\n    comm_email, unsubscribe_link, via_email = user.get_communication_email()\n    if not comm_email:\n        return\n\n    send_email(\n        comm_email,\n        \"SimpleLogin Tip: Secure your emails with PGP\",\n        render(\"com/onboarding/pgp.txt\", user=user, to_email=comm_email),\n        render(\"com/onboarding/pgp.html\", user=user, to_email=comm_email),\n        unsubscribe_link,\n        via_email,\n        retries=3,\n        ignore_smtp_error=True,\n    )\n\n\ndef onboarding_browser_extension(user):\n    comm_email, unsubscribe_link, via_email = user.get_communication_email()\n    if not comm_email:\n        return\n\n    send_email(\n        comm_email,\n        \"SimpleLogin Tip: Chrome/Firefox/Safari extensions and Android/iOS apps\",\n        render(\n            \"com/onboarding/browser-extension.txt\",\n            user=user,\n            to_email=comm_email,\n        ),\n        render(\n            \"com/onboarding/browser-extension.html\",\n            user=user,\n            to_email=comm_email,\n        ),\n        unsubscribe_link,\n        via_email,\n        retries=3,\n        ignore_smtp_error=True,\n    )\n\n\ndef onboarding_mailbox(user):\n    comm_email, unsubscribe_link, via_email = user.get_communication_email()\n    if not comm_email:\n        return\n\n    send_email(\n        comm_email,\n        \"SimpleLogin Tip: Multiple mailboxes\",\n        render(\"com/onboarding/mailbox.txt\", user=user, to_email=comm_email),\n        render(\"com/onboarding/mailbox.html\", user=user, to_email=comm_email),\n        unsubscribe_link,\n        via_email,\n        retries=3,\n        ignore_smtp_error=True,\n    )\n\n\ndef welcome_proton(user):\n    comm_email, _, _ = user.get_communication_email()\n    if not comm_email:\n        return\n\n    send_email(\n        comm_email,\n        \"Welcome to SimpleLogin, an email masking service provided by Proton\",\n        render(\n            \"com/onboarding/welcome-proton-user.txt.jinja2\",\n            user=user,\n            to_email=comm_email,\n        ),\n        render(\n            \"com/onboarding/welcome-proton-user.html\",\n            user=user,\n            to_email=comm_email,\n        ),\n        retries=3,\n        ignore_smtp_error=True,\n    )\n\n\ndef delete_mailbox_job(job: Job):\n    mailbox_id = job.payload.get(\"mailbox_id\")\n    mailbox: Optional[Mailbox] = Mailbox.get(mailbox_id)\n    if not mailbox:\n        return\n\n    transfer_mailbox_id = job.payload.get(\"transfer_mailbox_id\")\n    alias_transferred_to = None\n    if transfer_mailbox_id:\n        transfer_mailbox = Mailbox.get(transfer_mailbox_id)\n        if transfer_mailbox:\n            alias_transferred_to = transfer_mailbox.email\n\n            for alias in mailbox.aliases:\n                if alias.mailbox_id == mailbox.id:\n                    alias.mailbox_id = transfer_mailbox.id\n                    if transfer_mailbox in alias._mailboxes:\n                        alias._mailboxes.remove(transfer_mailbox)\n                else:\n                    alias._mailboxes.remove(mailbox)\n                    if transfer_mailbox not in alias._mailboxes:\n                        alias._mailboxes.append(transfer_mailbox)\n                Session.commit()\n\n    mailbox_email = mailbox.email\n    user = mailbox.user\n\n    emit_user_audit_log(\n        user=user,\n        action=UserAuditLogAction.DeleteMailbox,\n        message=f\"Delete mailbox {mailbox.id} ({mailbox.email})\",\n    )\n    Mailbox.delete(mailbox_id)\n    Session.commit()\n    LOG.d(\"Mailbox %s %s deleted\", mailbox_id, mailbox_email)\n\n    if not job.payload.get(\"send_mail\", True):\n        return\n    if alias_transferred_to:\n        send_email(\n            user.email,\n            f\"Your mailbox {mailbox_email} has been deleted\",\n            f\"\"\"Mailbox {mailbox_email} and its alias have been transferred to {alias_transferred_to}.\nRegards,\nSimpleLogin team.\n\"\"\",\n            retries=3,\n        )\n    else:\n        send_email(\n            user.email,\n            f\"Your mailbox {mailbox_email} has been deleted\",\n            f\"\"\"Mailbox {mailbox_email} along with its aliases have been deleted successfully.\nRegards,\nSimpleLogin team.\n\"\"\",\n            retries=3,\n        )\n\n\ndef process_job(job: Job):\n    if job.name == config.JOB_ONBOARDING_1:\n        user_id = job.payload.get(\"user_id\")\n        user = User.get(user_id)\n\n        # user might delete their account in the meantime\n        # or disable the notification\n        if user and user.notification and user.activated:\n            LOG.d(\"send onboarding send-from-alias email to user %s\", user)\n            onboarding_send_from_alias(user)\n    elif job.name == config.JOB_ONBOARDING_2:\n        user_id = job.payload.get(\"user_id\")\n        user = User.get(user_id)\n\n        # user might delete their account in the meantime\n        # or disable the notification\n        if user and user.notification and user.activated:\n            LOG.d(\"send onboarding mailbox email to user %s\", user)\n            onboarding_mailbox(user)\n    elif job.name == config.JOB_ONBOARDING_4:\n        user_id = job.payload.get(\"user_id\")\n        user: User = User.get(user_id)\n\n        # user might delete their account in the meantime\n        # or disable the notification\n        if user and user.notification and user.activated:\n            # if user only has 1 mailbox which is Proton then do not send PGP onboarding email\n            mailboxes = user.mailboxes()\n            if len(mailboxes) == 1 and mailboxes[0].is_proton():\n                LOG.d(\"Do not send onboarding PGP email to Proton mailbox\")\n            else:\n                LOG.d(\"send onboarding pgp email to user %s\", user)\n                onboarding_pgp(user)\n\n    elif job.name == config.JOB_BATCH_IMPORT:\n        batch_import_id = job.payload.get(\"batch_import_id\")\n        batch_import = BatchImport.get(batch_import_id)\n        handle_batch_import(batch_import)\n    elif job.name == config.JOB_DELETE_ACCOUNT:\n        user_id = job.payload.get(\"user_id\")\n        user = User.get(user_id)\n\n        if not user:\n            LOG.i(\"No user found for %s\", user_id)\n            return\n\n        user_email = user.email\n        LOG.w(\"Delete user %s\", user)\n        send_email(\n            user_email,\n            \"Your SimpleLogin account has been deleted\",\n            render(\"transactional/account-delete.txt\", user=user),\n            render(\"transactional/account-delete.html\", user=user),\n            retries=3,\n        )\n        User.delete(user.id)\n        Session.commit()\n    elif job.name == config.JOB_DELETE_MAILBOX:\n        delete_mailbox_job(job)\n\n    elif job.name == config.JOB_DELETE_DOMAIN:\n        custom_domain_id = job.payload.get(\"custom_domain_id\")\n        custom_domain: Optional[CustomDomain] = CustomDomain.get(custom_domain_id)\n        if not custom_domain:\n            return\n\n        is_subdomain = custom_domain.is_sl_subdomain\n        domain_name = custom_domain.domain\n        user = custom_domain.user\n\n        custom_domain_partner_id = custom_domain.partner_id\n        CustomDomain.delete(custom_domain.id)\n        Session.commit()\n\n        if is_subdomain:\n            message = f\"Delete subdomain {custom_domain_id} ({domain_name})\"\n        else:\n            message = f\"Delete custom domain {custom_domain_id} ({domain_name})\"\n        emit_user_audit_log(\n            user=user,\n            action=UserAuditLogAction.DeleteCustomDomain,\n            message=message,\n        )\n\n        LOG.d(\"Domain %s deleted\", domain_name)\n\n        if custom_domain_partner_id is None:\n            send_email(\n                user.email,\n                f\"Your domain {domain_name} has been deleted\",\n                f\"\"\"Domain {domain_name} along with its aliases are deleted successfully.\n\n    Regards,\n    SimpleLogin team.\n    \"\"\",\n                retries=3,\n            )\n    elif job.name == config.JOB_SEND_USER_REPORT:\n        export_job = ExportUserDataJob.create_from_job(job)\n        if export_job:\n            export_job.run()\n    elif job.name == config.JOB_SEND_PROTON_WELCOME_1:\n        user_id = job.payload.get(\"user_id\")\n        user = User.get(user_id)\n        if user and user.activated:\n            LOG.d(\"Send proton welcome email to user %s\", user)\n            welcome_proton(user)\n    elif job.name == config.JOB_SEND_ALIAS_CREATION_EVENTS:\n        user_id = job.payload.get(\"user_id\")\n        user = User.get(user_id)\n        if user and user.activated:\n            LOG.d(f\"Sending alias creation events for {user}\")\n            send_alias_creation_events_for_user(\n                user, dispatcher=PostgresDispatcher.get()\n            )\n    elif job.name == config.JOB_SEND_EVENT_TO_WEBHOOK:\n        send_job = SendEventToWebhookJob.create_from_job(job)\n        if send_job:\n            send_job.run()\n    else:\n        LOG.e(\"Unknown job name %s\", job.name)\n\n\ndef get_jobs_to_run() -> List[Job]:\n    # Get jobs that match all conditions:\n    #  - Job.state == ready OR (Job.state == taken AND Job.taken_at < now - 30 mins AND Job.attempts < 5)\n    #  - Job.run_at is Null OR Job.run_at < now + 10 mins\n    taken_at_earliest = arrow.now().shift(minutes=-config.JOB_TAKEN_RETRY_WAIT_MINS)\n    run_at_earliest = arrow.now().shift(minutes=+10)\n    query = Job.filter(\n        and_(\n            or_(\n                Job.state == JobState.ready.value,\n                and_(\n                    Job.state == JobState.taken.value,\n                    Job.taken_at < taken_at_earliest,\n                    Job.attempts < config.JOB_MAX_ATTEMPTS,\n                ),\n            ),\n            or_(Job.run_at.is_(None), and_(Job.run_at <= run_at_earliest)),\n        )\n    )\n    return query.all()\n\n\nif __name__ == \"__main__\":\n    while True:\n        # wrap in an app context to benefit from app setup like database cleanup, sentry integration, etc\n        with create_light_app().app_context():\n            for job in get_jobs_to_run():\n                LOG.d(\"Take job %s\", job)\n\n                # mark the job as taken, whether it will be executed successfully or not\n                job.taken = True\n                job.taken_at = arrow.now()\n                job.state = JobState.taken.value\n                job.attempts += 1\n                Session.commit()\n                process_job(job)\n\n                job.state = JobState.done.value\n                Session.commit()\n\n            time.sleep(10)\n"
        },
        {
          "name": "local_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "migrations",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitor",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitoring.py",
          "type": "blob",
          "size": 5.236328125,
          "content": "import configparser\nimport os\nimport subprocess\nfrom time import sleep\nfrom typing import List, Dict\n\nimport arrow\nimport newrelic.agent\n\nfrom app.db import Session\nfrom app.log import LOG\nfrom monitor.metric_exporter import MetricExporter\n\n# the number of consecutive fails\n# if more than _max_nb_fails, alert\n# reset whenever the system comes back to normal\n# a system is considered fail if incoming_queue + active_queue > 50\n_nb_failed = 0\n\n_max_nb_fails = 10\n\n# the maximum number of emails in incoming & active queue\n_max_incoming = 50\n\n_NR_CONFIG_FILE_LOCATION_VAR = \"NEW_RELIC_CONFIG_FILE\"\n\n\ndef get_newrelic_license() -> str:\n    nr_file = os.environ.get(_NR_CONFIG_FILE_LOCATION_VAR, None)\n    if nr_file is None:\n        raise Exception(f\"{_NR_CONFIG_FILE_LOCATION_VAR} not defined\")\n\n    config = configparser.ConfigParser()\n    config.read(nr_file)\n    return config[\"newrelic\"][\"license_key\"]\n\n\n@newrelic.agent.background_task()\ndef log_postfix_metrics():\n    \"\"\"Look at different metrics and alert appropriately\"\"\"\n    incoming_queue = nb_files(\"/var/spool/postfix/incoming\")\n    active_queue = nb_files(\"/var/spool/postfix/active\")\n    deferred_queue = nb_files(\"/var/spool/postfix/deferred\")\n    LOG.d(\"postfix queue sizes %s %s %s\", incoming_queue, active_queue, deferred_queue)\n\n    newrelic.agent.record_custom_metric(\"Custom/postfix_incoming_queue\", incoming_queue)\n    newrelic.agent.record_custom_metric(\"Custom/postfix_active_queue\", active_queue)\n    newrelic.agent.record_custom_metric(\"Custom/postfix_deferred_queue\", deferred_queue)\n\n    proc_counts = get_num_procs([\"smtp\", \"smtpd\", \"bounce\", \"cleanup\"])\n    for proc_name in proc_counts:\n        LOG.d(f\"Process count {proc_counts}\")\n        newrelic.agent.record_custom_metric(\n            f\"Custom/process_{proc_name}_count\", proc_counts[proc_name]\n        )\n\n\ndef nb_files(directory) -> int:\n    \"\"\"return the number of files in directory and its subdirectories\"\"\"\n    return sum(len(files) for _, _, files in os.walk(directory))\n\n\ndef get_num_procs(proc_names: List[str]) -> Dict[str, int]:\n    data = (\n        subprocess.Popen([\"ps\", \"ax\"], stdout=subprocess.PIPE)\n        .communicate()[0]\n        .decode(\"utf-8\")\n    )\n    return _process_ps_output(proc_names, data)\n\n\ndef _process_ps_output(proc_names: List[str], data: str) -> Dict[str, int]:\n    proc_counts = {proc_name: 0 for proc_name in proc_names}\n    lines = data.split(\"\\n\")\n    for line in lines:\n        entry = [field for field in line.strip().split() if field.strip()]\n        if len(entry) < 5:\n            continue\n        if entry[4][0] == \"[\":\n            continue\n        for proc_name in proc_names:\n            if entry[4] == proc_name:\n                proc_counts[proc_name] += 1\n    return proc_counts\n\n\n@newrelic.agent.background_task()\ndef log_nb_db_connection():\n    # get the number of connections to the DB\n    r = Session.execute(\"select count(*) from pg_stat_activity;\")\n    nb_connection = list(r)[0][0]\n\n    LOG.d(\"number of db connections %s\", nb_connection)\n    newrelic.agent.record_custom_metric(\"Custom/nb_db_connections\", nb_connection)\n\n\n@newrelic.agent.background_task()\ndef log_nb_db_connection_by_app_name():\n    # get the number of connections to the DB\n    rows = Session.execute(\n        \"SELECT application_name, count(datid) FROM pg_stat_activity group by application_name\"\n    )\n    for row in rows:\n        if row[0].find(\"sl-\") == 0:\n            LOG.d(\"number of db connections for app %s = %s\", row[0], row[1])\n            newrelic.agent.record_custom_metric(\n                f\"Custom/nb_db_app_connection/{row[0]}\", row[1]\n            )\n\n\n@newrelic.agent.background_task()\ndef log_pending_to_process_events():\n    r = Session.execute(\"select count(*) from sync_event WHERE taken_time IS NULL;\")\n    events_pending = list(r)[0][0]\n\n    LOG.d(\"number of events pending to process %s\", events_pending)\n    newrelic.agent.record_custom_metric(\n        \"Custom/sync_events_pending_to_process\", events_pending\n    )\n\n\n@newrelic.agent.background_task()\ndef log_events_pending_dead_letter():\n    since = arrow.now().shift(minutes=-10).datetime\n    r = Session.execute(\n        \"\"\"\n        SELECT COUNT(*)\n        FROM sync_event\n        WHERE (taken_time IS NOT NULL AND taken_time < :since)\n           OR (taken_time IS NULL AND created_at < :since)\n        \"\"\",\n        {\"since\": since},\n    )\n    events_pending = list(r)[0][0]\n\n    LOG.d(\"number of events pending dead letter %s\", events_pending)\n    newrelic.agent.record_custom_metric(\n        \"Custom/sync_events_pending_dead_letter\", events_pending\n    )\n\n\n@newrelic.agent.background_task()\ndef log_failed_events():\n    r = Session.execute(\n        \"\"\"\n        SELECT COUNT(*)\n        FROM sync_event\n        WHERE retry_count >= 10;\n        \"\"\",\n    )\n    failed_events = list(r)[0][0]\n\n    LOG.d(\"number of failed events %s\", failed_events)\n    newrelic.agent.record_custom_metric(\"Custom/sync_events_failed\", failed_events)\n\n\nif __name__ == \"__main__\":\n    exporter = MetricExporter(get_newrelic_license())\n    while True:\n        log_postfix_metrics()\n        log_nb_db_connection()\n        log_pending_to_process_events()\n        log_events_pending_dead_letter()\n        log_failed_events()\n        log_nb_db_connection_by_app_name()\n        Session.close()\n\n        exporter.run()\n\n        # 1 min\n        sleep(60)\n"
        },
        {
          "name": "newrelic.ini",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "oauth_tester.py",
          "type": "blob",
          "size": 2.9853515625,
          "content": "\"\"\"\nThis is an example on how to integrate SimpleLogin\nwith Requests-OAuthlib, a popular library to work with OAuth in Python.\nThe step-to-step guide can be found on https://simplelogin.io/docs/siwsl/app/\nThis example is based on\nhttps://requests-oauthlib.readthedocs.io/en/latest/examples/real_world_example.html\n\"\"\"\nimport os\n\nfrom flask import Flask, request, redirect, session, url_for\nfrom flask.json import jsonify\nfrom requests_oauthlib import OAuth2Session\n\napp = Flask(__name__)\n\n# this demo uses flask.session that requires the `secret_key` to be set\napp.secret_key = \"very secret\"\n\n# \"prettify\" the returned json in /profile\napp.config[\"JSONIFY_PRETTYPRINT_REGULAR\"] = True\n\n# This client credential is obtained upon registration of a new SimpleLogin App on\n# https://app.simplelogin.io/developer/new_client\n# Please make sure to export these credentials to env variables:\n# export CLIENT_ID={your_client_id}\n# export CLIENT_SECRET={your_client_secret}\nclient_id = os.environ.get(\"CLIENT_ID\") or \"client-id\"\nclient_secret = os.environ.get(\"CLIENT_SECRET\") or \"client-secret\"\n\n# SimpleLogin urls\nauthorization_base_url = \"http://localhost:7777/oauth2/authorize\"\ntoken_url = \"http://localhost:7777/oauth2/token\"\nuserinfo_url = \"http://localhost:7777/oauth2/userinfo\"\n\n\n@app.route(\"/\")\ndef demo():\n    \"\"\"Step 1: User Authorization.\n    Redirect the user/resource owner to the OAuth provider (i.e. SimpleLogin)\n    using an URL with a few key OAuth parameters.\n    \"\"\"\n    simplelogin = OAuth2Session(\n        client_id, redirect_uri=\"http://127.0.0.1:5000/callback\"\n    )\n    authorization_url, state = simplelogin.authorization_url(authorization_base_url)\n\n    # State is used to prevent CSRF, keep this for later.\n    session[\"oauth_state\"] = state\n    return redirect(authorization_url)\n\n\n# Step 2: User authorization, this happens on the provider.\n\n\n@app.route(\"/callback\", methods=[\"GET\"])\ndef callback():\n    \"\"\"Step 3: Retrieving an access token.\n    The user has been redirected back from the provider to your registered\n    callback URL. With this redirection comes an authorization code included\n    in the redirect URL. We will use that to obtain an access token.\n    \"\"\"\n\n    simplelogin = OAuth2Session(client_id, state=session[\"oauth_state\"])\n    token = simplelogin.fetch_token(\n        token_url, client_secret=client_secret, authorization_response=request.url\n    )\n\n    # At this point you can fetch protected resources but lets save\n    # the token and show how this is done from a persisted token\n    # in /profile.\n    session[\"oauth_token\"] = token\n\n    return redirect(url_for(\".profile\"))\n\n\n@app.route(\"/profile\", methods=[\"GET\"])\ndef profile():\n    \"\"\"Fetching a protected resource using an OAuth 2 token.\"\"\"\n    simplelogin = OAuth2Session(client_id, token=session[\"oauth_token\"])\n    return jsonify(simplelogin.get(userinfo_url).json())\n\n\n# This allows us to use a plain HTTP callback\nos.environ[\"OAUTHLIB_INSECURE_TRANSPORT\"] = \"1\"\n\nif __name__ == \"__main__\":\n    app.secret_key = os.urandom(24)\n    app.run(debug=True)\n"
        },
        {
          "name": "oneshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "poetry.lock",
          "type": "blob",
          "size": 251.56640625,
          "content": "# This file is automatically @generated by Poetry 1.7.0 and should not be changed by hand.\n\n[[package]]\nname = \"aiohttp\"\nversion = \"3.8.4\"\ndescription = \"Async http client/server framework (asyncio)\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"aiohttp-3.8.4-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:5ce45967538fb747370308d3145aa68a074bdecb4f3a300869590f725ced69c1\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:b744c33b6f14ca26b7544e8d8aadff6b765a80ad6164fb1a430bbadd593dfb1a\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:1a45865451439eb320784918617ba54b7a377e3501fb70402ab84d38c2cd891b\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a86d42d7cba1cec432d47ab13b6637bee393a10f664c425ea7b305d1301ca1a3\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:ee3c36df21b5714d49fc4580247947aa64bcbe2939d1b77b4c8dcb8f6c9faecc\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:176a64b24c0935869d5bbc4c96e82f89f643bcdf08ec947701b9dbb3c956b7dd\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c844fd628851c0bc309f3c801b3a3d58ce430b2ce5b359cd918a5a76d0b20cb5\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:5393fb786a9e23e4799fec788e7e735de18052f83682ce2dfcabaf1c00c2c08e\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:e4b09863aae0dc965c3ef36500d891a3ff495a2ea9ae9171e4519963c12ceefd\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:adfbc22e87365a6e564c804c58fc44ff7727deea782d175c33602737b7feadb6\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:147ae376f14b55f4f3c2b118b95be50a369b89b38a971e80a17c3fd623f280c9\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-musllinux_1_1_s390x.whl\", hash = \"sha256:eafb3e874816ebe2a92f5e155f17260034c8c341dad1df25672fb710627c6949\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:c6cc15d58053c76eacac5fa9152d7d84b8d67b3fde92709195cb984cfb3475ea\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-win32.whl\", hash = \"sha256:59f029a5f6e2d679296db7bee982bb3d20c088e52a2977e3175faf31d6fb75d1\"},\n    {file = \"aiohttp-3.8.4-cp310-cp310-win_amd64.whl\", hash = \"sha256:fe7ba4a51f33ab275515f66b0a236bcde4fb5561498fe8f898d4e549b2e4509f\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:3d8ef1a630519a26d6760bc695842579cb09e373c5f227a21b67dc3eb16cfea4\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:5b3f2e06a512e94722886c0827bee9807c86a9f698fac6b3aee841fab49bbfb4\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:3a80464982d41b1fbfe3154e440ba4904b71c1a53e9cd584098cd41efdb188ef\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:8b631e26df63e52f7cce0cce6507b7a7f1bc9b0c501fcde69742130b32e8782f\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3f43255086fe25e36fd5ed8f2ee47477408a73ef00e804cb2b5cba4bf2ac7f5e\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:4d347a172f866cd1d93126d9b239fcbe682acb39b48ee0873c73c933dd23bd0f\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a3fec6a4cb5551721cdd70473eb009d90935b4063acc5f40905d40ecfea23e05\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:80a37fe8f7c1e6ce8f2d9c411676e4bc633a8462844e38f46156d07a7d401654\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:d1e6a862b76f34395a985b3cd39a0d949ca80a70b6ebdea37d3ab39ceea6698a\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:cd468460eefef601ece4428d3cf4562459157c0f6523db89365202c31b6daebb\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-musllinux_1_1_ppc64le.whl\", hash = \"sha256:618c901dd3aad4ace71dfa0f5e82e88b46ef57e3239fc7027773cb6d4ed53531\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-musllinux_1_1_s390x.whl\", hash = \"sha256:652b1bff4f15f6287550b4670546a2947f2a4575b6c6dff7760eafb22eacbf0b\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:80575ba9377c5171407a06d0196b2310b679dc752d02a1fcaa2bc20b235dbf24\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-win32.whl\", hash = \"sha256:bbcf1a76cf6f6dacf2c7f4d2ebd411438c275faa1dc0c68e46eb84eebd05dd7d\"},\n    {file = \"aiohttp-3.8.4-cp311-cp311-win_amd64.whl\", hash = \"sha256:6e74dd54f7239fcffe07913ff8b964e28b712f09846e20de78676ce2a3dc0bfc\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:880e15bb6dad90549b43f796b391cfffd7af373f4646784795e20d92606b7a51\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bb96fa6b56bb536c42d6a4a87dfca570ff8e52de2d63cabebfd6fb67049c34b6\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4a6cadebe132e90cefa77e45f2d2f1a4b2ce5c6b1bfc1656c1ddafcfe4ba8131\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:f352b62b45dff37b55ddd7b9c0c8672c4dd2eb9c0f9c11d395075a84e2c40f75\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7ab43061a0c81198d88f39aaf90dae9a7744620978f7ef3e3708339b8ed2ef01\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c9cb1565a7ad52e096a6988e2ee0397f72fe056dadf75d17fa6b5aebaea05622\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:1b3ea7edd2d24538959c1c1abf97c744d879d4e541d38305f9bd7d9b10c9ec41\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:7c7837fe8037e96b6dd5cfcf47263c1620a9d332a87ec06a6ca4564e56bd0f36\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:3b90467ebc3d9fa5b0f9b6489dfb2c304a1db7b9946fa92aa76a831b9d587e99\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-musllinux_1_1_s390x.whl\", hash = \"sha256:cab9401de3ea52b4b4c6971db5fb5c999bd4260898af972bf23de1c6b5dd9d71\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:d1f9282c5f2b5e241034a009779e7b2a1aa045f667ff521e7948ea9b56e0c5ff\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-win32.whl\", hash = \"sha256:5e14f25765a578a0a634d5f0cd1e2c3f53964553a00347998dfdf96b8137f777\"},\n    {file = \"aiohttp-3.8.4-cp36-cp36m-win_amd64.whl\", hash = \"sha256:4c745b109057e7e5f1848c689ee4fb3a016c8d4d92da52b312f8a509f83aa05e\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:aede4df4eeb926c8fa70de46c340a1bc2c6079e1c40ccf7b0eae1313ffd33519\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4ddaae3f3d32fc2cb4c53fab020b69a05c8ab1f02e0e59665c6f7a0d3a5be54f\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c4eb3b82ca349cf6fadcdc7abcc8b3a50ab74a62e9113ab7a8ebc268aad35bb9\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9bcb89336efa095ea21b30f9e686763f2be4478f1b0a616969551982c4ee4c3b\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6c08e8ed6fa3d477e501ec9db169bfac8140e830aa372d77e4a43084d8dd91ab\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c6cd05ea06daca6ad6a4ca3ba7fe7dc5b5de063ff4daec6170ec0f9979f6c332\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:b7a00a9ed8d6e725b55ef98b1b35c88013245f35f68b1b12c5cd4100dddac333\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:de04b491d0e5007ee1b63a309956eaed959a49f5bb4e84b26c8f5d49de140fa9\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:40653609b3bf50611356e6b6554e3a331f6879fa7116f3959b20e3528783e699\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-musllinux_1_1_s390x.whl\", hash = \"sha256:dbf3a08a06b3f433013c143ebd72c15cac33d2914b8ea4bea7ac2c23578815d6\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:854f422ac44af92bfe172d8e73229c270dc09b96535e8a548f99c84f82dde241\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-win32.whl\", hash = \"sha256:aeb29c84bb53a84b1a81c6c09d24cf33bb8432cc5c39979021cc0f98c1292a1a\"},\n    {file = \"aiohttp-3.8.4-cp37-cp37m-win_amd64.whl\", hash = \"sha256:db3fc6120bce9f446d13b1b834ea5b15341ca9ff3f335e4a951a6ead31105480\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:fabb87dd8850ef0f7fe2b366d44b77d7e6fa2ea87861ab3844da99291e81e60f\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:91f6d540163f90bbaef9387e65f18f73ffd7c79f5225ac3d3f61df7b0d01ad15\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:d265f09a75a79a788237d7f9054f929ced2e69eb0bb79de3798c468d8a90f945\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3d89efa095ca7d442a6d0cbc755f9e08190ba40069b235c9886a8763b03785da\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4dac314662f4e2aa5009977b652d9b8db7121b46c38f2073bfeed9f4049732cd\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:fe11310ae1e4cd560035598c3f29d86cef39a83d244c7466f95c27ae04850f10\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6ddb2a2026c3f6a68c3998a6c47ab6795e4127315d2e35a09997da21865757f8\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:e75b89ac3bd27d2d043b234aa7b734c38ba1b0e43f07787130a0ecac1e12228a\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:6e601588f2b502c93c30cd5a45bfc665faaf37bbe835b7cfd461753068232074\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:a5d794d1ae64e7753e405ba58e08fcfa73e3fad93ef9b7e31112ef3c9a0efb52\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:a1f4689c9a1462f3df0a1f7e797791cd6b124ddbee2b570d34e7f38ade0e2c71\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-musllinux_1_1_s390x.whl\", hash = \"sha256:3032dcb1c35bc330134a5b8a5d4f68c1a87252dfc6e1262c65a7e30e62298275\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:8189c56eb0ddbb95bfadb8f60ea1b22fcfa659396ea36f6adcc521213cd7b44d\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-win32.whl\", hash = \"sha256:33587f26dcee66efb2fff3c177547bd0449ab7edf1b73a7f5dea1e38609a0c54\"},\n    {file = \"aiohttp-3.8.4-cp38-cp38-win_amd64.whl\", hash = \"sha256:e595432ac259af2d4630008bf638873d69346372d38255774c0e286951e8b79f\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:5a7bdf9e57126dc345b683c3632e8ba317c31d2a41acd5800c10640387d193ed\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:22f6eab15b6db242499a16de87939a342f5a950ad0abaf1532038e2ce7d31567\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:7235604476a76ef249bd64cb8274ed24ccf6995c4a8b51a237005ee7a57e8643\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ea9eb976ffdd79d0e893869cfe179a8f60f152d42cb64622fca418cd9b18dc2a\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:92c0cea74a2a81c4c76b62ea1cac163ecb20fb3ba3a75c909b9fa71b4ad493cf\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:493f5bc2f8307286b7799c6d899d388bbaa7dfa6c4caf4f97ef7521b9cb13719\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:0a63f03189a6fa7c900226e3ef5ba4d3bd047e18f445e69adbd65af433add5a2\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:10c8cefcff98fd9168cdd86c4da8b84baaa90bf2da2269c6161984e6737bf23e\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:bca5f24726e2919de94f047739d0a4fc01372801a3672708260546aa2601bf57\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:03baa76b730e4e15a45f81dfe29a8d910314143414e528737f8589ec60cf7391\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:8c29c77cc57e40f84acef9bfb904373a4e89a4e8b74e71aa8075c021ec9078c2\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-musllinux_1_1_s390x.whl\", hash = \"sha256:03543dcf98a6619254b409be2d22b51f21ec66272be4ebda7b04e6412e4b2e14\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:17b79c2963db82086229012cff93ea55196ed31f6493bb1ccd2c62f1724324e4\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-win32.whl\", hash = \"sha256:34ce9f93a4a68d1272d26030655dd1b58ff727b3ed2a33d80ec433561b03d67a\"},\n    {file = \"aiohttp-3.8.4-cp39-cp39-win_amd64.whl\", hash = \"sha256:41a86a69bb63bb2fc3dc9ad5ea9f10f1c9c8e282b471931be0268ddd09430b04\"},\n    {file = \"aiohttp-3.8.4.tar.gz\", hash = \"sha256:bf2e1a9162c1e441bf805a1fd166e249d574ca04e03b34f97e2928769e91ab5c\"},\n]\n\n[package.dependencies]\naiosignal = \">=1.1.2\"\nasync-timeout = \">=4.0.0a3,<5.0\"\nattrs = \">=17.3.0\"\ncharset-normalizer = \">=2.0,<4.0\"\nfrozenlist = \">=1.1.1\"\nmultidict = \">=4.5,<7.0\"\nyarl = \">=1.0,<2.0\"\n\n[package.extras]\nspeedups = [\"Brotli\", \"aiodns\", \"cchardet\"]\n\n[[package]]\nname = \"aiosignal\"\nversion = \"1.2.0\"\ndescription = \"aiosignal: a list of registered asynchronous callbacks\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"aiosignal-1.2.0-py3-none-any.whl\", hash = \"sha256:26e62109036cd181df6e6ad646f91f0dcfd05fe16d0cb924138ff2ab75d64e3a\"},\n    {file = \"aiosignal-1.2.0.tar.gz\", hash = \"sha256:78ed67db6c7b7ced4f98e495e572106d5c432a93e1ddd1bf475e1dc05f5b7df2\"},\n]\n\n[package.dependencies]\nfrozenlist = \">=1.1.0\"\n\n[[package]]\nname = \"aiosmtpd\"\nversion = \"1.4.2\"\ndescription = \"aiosmtpd - asyncio based SMTP server\"\noptional = false\npython-versions = \"~=3.6\"\nfiles = [\n    {file = \"aiosmtpd-1.4.2-py3-none-any.whl\", hash = \"sha256:314f70b74cb8474882cef396b186fbfad8660c7b52be5c1937f3c31df14232a4\"},\n    {file = \"aiosmtpd-1.4.2.tar.gz\", hash = \"sha256:aa891d010d2097274189078c6ce2a59a167f3fb2e974e028b572a61e92e1549c\"},\n]\n\n[package.dependencies]\natpublic = \"*\"\nattrs = \"*\"\n\n[[package]]\nname = \"aiosmtplib\"\nversion = \"1.1.4\"\ndescription = \"asyncio SMTP client\"\noptional = false\npython-versions = \">=3.5.2,<4.0.0\"\nfiles = [\n    {file = \"aiosmtplib-1.1.4-py3-none-any.whl\", hash = \"sha256:93e53edac183f1a608bc34464efeef23902e59e949017b1682014f59ecdcd37d\"},\n    {file = \"aiosmtplib-1.1.4.tar.gz\", hash = \"sha256:8270d0a06475aa05b9276fc954fbd08a1f6c59d0452b4899413d8bca1db24541\"},\n]\n\n[package.extras]\ndocs = [\"sphinx (>=2,<4)\", \"sphinx_autodoc_typehints (>=1.7.0,<2.0.0)\"]\nuvloop = [\"uvloop (>=0.13,<0.15)\"]\n\n[[package]]\nname = \"aiospamc\"\nversion = \"0.10.0\"\ndescription = \"An asyncio-based library to communicate with SpamAssassin's SPAMD service.\"\noptional = false\npython-versions = \">=3.8,<4.0\"\nfiles = [\n    {file = \"aiospamc-0.10.0-py3-none-any.whl\", hash = \"sha256:53381adc53814647608ec864263eb975cf9bf04370f16adc2e1c1fa7aca2f538\"},\n    {file = \"aiospamc-0.10.0.tar.gz\", hash = \"sha256:a31abdbd809c7f74352e03166ec98685677a97ed8d1cbbbd6e1274cb8919c0d4\"},\n]\n\n[package.dependencies]\ncertifi = \"*\"\nloguru = \">=0.7.0,<0.8.0\"\ntyper = \">=0.9.0,<0.10.0\"\ntyping-extensions = \">=4.6.2,<5.0.0\"\n\n[[package]]\nname = \"alembic\"\nversion = \"1.4.3\"\ndescription = \"A database migration tool for SQLAlchemy.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"alembic-1.4.3-py2.py3-none-any.whl\", hash = \"sha256:4e02ed2aa796bd179965041afa092c55b51fb077de19d61835673cc80672c01c\"},\n    {file = \"alembic-1.4.3.tar.gz\", hash = \"sha256:5334f32314fb2a56d86b4c4dd1ae34b08c03cae4cb888bc699942104d66bc245\"},\n]\n\n[package.dependencies]\nMako = \"*\"\npython-dateutil = \"*\"\npython-editor = \">=0.3\"\nSQLAlchemy = \">=1.1.0\"\n\n[[package]]\nname = \"appnope\"\nversion = \"0.1.0\"\ndescription = \"Disable App Nap on OS X 10.9\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"appnope-0.1.0-py2.py3-none-any.whl\", hash = \"sha256:5b26757dc6f79a3b7dc9fab95359328d5747fcb2409d331ea66d0272b90ab2a0\"},\n    {file = \"appnope-0.1.0.tar.gz\", hash = \"sha256:8b995ffe925347a2138d7ac0fe77155e4311a0ea6d6da4f5128fe4b3cbe5ed71\"},\n]\n\n[[package]]\nname = \"arrow\"\nversion = \"0.16.0\"\ndescription = \"Better dates & times for Python\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"arrow-0.16.0-py2.py3-none-any.whl\", hash = \"sha256:98184d8dd3e5d30b96c2df4596526f7de679ccb467f358b82b0f686436f3a6b8\"},\n    {file = \"arrow-0.16.0.tar.gz\", hash = \"sha256:92aac856ea5175c804f7ccb96aca4d714d936f1c867ba59d747a8096ec30e90a\"},\n]\n\n[package.dependencies]\npython-dateutil = \">=2.7.0\"\n\n[[package]]\nname = \"astroid\"\nversion = \"2.11.6\"\ndescription = \"An abstract syntax tree for Python with inference support.\"\noptional = false\npython-versions = \">=3.6.2\"\nfiles = [\n    {file = \"astroid-2.11.6-py3-none-any.whl\", hash = \"sha256:ba33a82a9a9c06a5ceed98180c5aab16e29c285b828d94696bf32d6015ea82a9\"},\n    {file = \"astroid-2.11.6.tar.gz\", hash = \"sha256:4f933d0bf5e408b03a6feb5d23793740c27e07340605f236496cd6ce552043d6\"},\n]\n\n[package.dependencies]\nlazy-object-proxy = \">=1.4.0\"\nsetuptools = \">=20.0\"\nwrapt = \">=1.11,<2\"\n\n[[package]]\nname = \"async-timeout\"\nversion = \"4.0.2\"\ndescription = \"Timeout context manager for asyncio programs\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"async-timeout-4.0.2.tar.gz\", hash = \"sha256:2163e1640ddb52b7a8c80d0a67a08587e5d245cc9c553a74a847056bc2976b15\"},\n    {file = \"async_timeout-4.0.2-py3-none-any.whl\", hash = \"sha256:8ca1e4fcf50d07413d66d1a5e416e42cfdf5851c981d679a09851a6853383b3c\"},\n]\n\n[[package]]\nname = \"atpublic\"\nversion = \"2.0\"\ndescription = \"public -- @public for populating __all__\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"atpublic-2.0.tar.gz\", hash = \"sha256:ebeb62b71a5c683a84c1b16bbf415708af5a46841b142b85ac3a22ec2d7613b0\"},\n]\n\n[[package]]\nname = \"attrs\"\nversion = \"20.2.0\"\ndescription = \"Classes Without Boilerplate\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"attrs-20.2.0-py2.py3-none-any.whl\", hash = \"sha256:fce7fc47dfc976152e82d53ff92fa0407700c21acd20886a13777a0d20e655dc\"},\n    {file = \"attrs-20.2.0.tar.gz\", hash = \"sha256:26b54ddbbb9ee1d34d5d3668dd37d6cf74990ab23c828c2888dccdceee395594\"},\n]\n\n[package.extras]\ndev = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pre-commit\", \"pympler\", \"pytest (>=4.3.0)\", \"six\", \"sphinx\", \"sphinx-rtd-theme\", \"zope.interface\"]\ndocs = [\"sphinx\", \"sphinx-rtd-theme\", \"zope.interface\"]\ntests = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pympler\", \"pytest (>=4.3.0)\", \"six\", \"zope.interface\"]\ntests-no-zope = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pympler\", \"pytest (>=4.3.0)\", \"six\"]\n\n[[package]]\nname = \"backcall\"\nversion = \"0.2.0\"\ndescription = \"Specifications for callback functions passed in to an API\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"backcall-0.2.0-py2.py3-none-any.whl\", hash = \"sha256:fbbce6a29f263178a1f7915c1940bde0ec2b2a967566fe1c65c1dfb7422bd255\"},\n    {file = \"backcall-0.2.0.tar.gz\", hash = \"sha256:5cbdbf27be5e7cfadb448baf0aa95508f91f2bbc6c6437cd9cd06e2a4c215e1e\"},\n]\n\n[[package]]\nname = \"bcrypt\"\nversion = \"3.2.0\"\ndescription = \"Modern password hashing for your software and your servers\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"bcrypt-3.2.0-cp36-abi3-macosx_10_10_universal2.whl\", hash = \"sha256:b589229207630484aefe5899122fb938a5b017b0f4349f769b8c13e78d99a8fd\"},\n    {file = \"bcrypt-3.2.0-cp36-abi3-macosx_10_9_x86_64.whl\", hash = \"sha256:c95d4cbebffafcdd28bd28bb4e25b31c50f6da605c81ffd9ad8a3d1b2ab7b1b6\"},\n    {file = \"bcrypt-3.2.0-cp36-abi3-manylinux1_x86_64.whl\", hash = \"sha256:63d4e3ff96188e5898779b6057878fecf3f11cfe6ec3b313ea09955d587ec7a7\"},\n    {file = \"bcrypt-3.2.0-cp36-abi3-manylinux2010_x86_64.whl\", hash = \"sha256:cd1ea2ff3038509ea95f687256c46b79f5fc382ad0aa3664d200047546d511d1\"},\n    {file = \"bcrypt-3.2.0-cp36-abi3-manylinux2014_aarch64.whl\", hash = \"sha256:cdcdcb3972027f83fe24a48b1e90ea4b584d35f1cc279d76de6fc4b13376239d\"},\n    {file = \"bcrypt-3.2.0-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_24_x86_64.whl\", hash = \"sha256:a0584a92329210fcd75eb8a3250c5a941633f8bfaf2a18f81009b097732839b7\"},\n    {file = \"bcrypt-3.2.0-cp36-abi3-musllinux_1_1_x86_64.whl\", hash = \"sha256:56e5da069a76470679f312a7d3d23deb3ac4519991a0361abc11da837087b61d\"},\n    {file = \"bcrypt-3.2.0-cp36-abi3-win32.whl\", hash = \"sha256:a67fb841b35c28a59cebed05fbd3e80eea26e6d75851f0574a9273c80f3e9b55\"},\n    {file = \"bcrypt-3.2.0-cp36-abi3-win_amd64.whl\", hash = \"sha256:81fec756feff5b6818ea7ab031205e1d323d8943d237303baca2c5f9c7846f34\"},\n    {file = \"bcrypt-3.2.0.tar.gz\", hash = \"sha256:5b93c1726e50a93a033c36e5ca7fdcd29a5c7395af50a6892f5d9e7c6cfbfb29\"},\n]\n\n[package.dependencies]\ncffi = \">=1.1\"\nsix = \">=1.4.1\"\n\n[package.extras]\ntests = [\"pytest (>=3.2.1,!=3.3.0)\"]\ntypecheck = [\"mypy\"]\n\n[[package]]\nname = \"black\"\nversion = \"22.1.0\"\ndescription = \"The uncompromising code formatter.\"\noptional = false\npython-versions = \">=3.6.2\"\nfiles = [\n    {file = \"black-22.1.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:1297c63b9e1b96a3d0da2d85d11cd9bf8664251fd69ddac068b98dc4f34f73b6\"},\n    {file = \"black-22.1.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:2ff96450d3ad9ea499fc4c60e425a1439c2120cbbc1ab959ff20f7c76ec7e866\"},\n    {file = \"black-22.1.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:0e21e1f1efa65a50e3960edd068b6ae6d64ad6235bd8bfea116a03b21836af71\"},\n    {file = \"black-22.1.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e2f69158a7d120fd641d1fa9a921d898e20d52e44a74a6fbbcc570a62a6bc8ab\"},\n    {file = \"black-22.1.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:228b5ae2c8e3d6227e4bde5920d2fc66cc3400fde7bcc74f480cb07ef0b570d5\"},\n    {file = \"black-22.1.0-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:b1a5ed73ab4c482208d20434f700d514f66ffe2840f63a6252ecc43a9bc77e8a\"},\n    {file = \"black-22.1.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:35944b7100af4a985abfcaa860b06af15590deb1f392f06c8683b4381e8eeaf0\"},\n    {file = \"black-22.1.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:7835fee5238fc0a0baf6c9268fb816b5f5cd9b8793423a75e8cd663c48d073ba\"},\n    {file = \"black-22.1.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:dae63f2dbf82882fa3b2a3c49c32bffe144970a573cd68d247af6560fc493ae1\"},\n    {file = \"black-22.1.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:5fa1db02410b1924b6749c245ab38d30621564e658297484952f3d8a39fce7e8\"},\n    {file = \"black-22.1.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:c8226f50b8c34a14608b848dc23a46e5d08397d009446353dad45e04af0c8e28\"},\n    {file = \"black-22.1.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:2d6f331c02f0f40aa51a22e479c8209d37fcd520c77721c034517d44eecf5912\"},\n    {file = \"black-22.1.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:742ce9af3086e5bd07e58c8feb09dbb2b047b7f566eb5f5bc63fd455814979f3\"},\n    {file = \"black-22.1.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:fdb8754b453fb15fad3f72cd9cad3e16776f0964d67cf30ebcbf10327a3777a3\"},\n    {file = \"black-22.1.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f5660feab44c2e3cb24b2419b998846cbb01c23c7fe645fee45087efa3da2d61\"},\n    {file = \"black-22.1.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:6f2f01381f91c1efb1451998bd65a129b3ed6f64f79663a55fe0e9b74a5f81fd\"},\n    {file = \"black-22.1.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:efbadd9b52c060a8fc3b9658744091cb33c31f830b3f074422ed27bad2b18e8f\"},\n    {file = \"black-22.1.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:8871fcb4b447206904932b54b567923e5be802b9b19b744fdff092bd2f3118d0\"},\n    {file = \"black-22.1.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ccad888050f5393f0d6029deea2a33e5ae371fd182a697313bdbd835d3edaf9c\"},\n    {file = \"black-22.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:07e5c049442d7ca1a2fc273c79d1aecbbf1bc858f62e8184abe1ad175c4f7cc2\"},\n    {file = \"black-22.1.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:373922fc66676133ddc3e754e4509196a8c392fec3f5ca4486673e685a421321\"},\n    {file = \"black-22.1.0-py3-none-any.whl\", hash = \"sha256:3524739d76b6b3ed1132422bf9d82123cd1705086723bc3e235ca39fd21c667d\"},\n    {file = \"black-22.1.0.tar.gz\", hash = \"sha256:a7c0192d35635f6fc1174be575cb7915e92e5dd629ee79fdaf0dcfa41a80afb5\"},\n]\n\n[package.dependencies]\nclick = \">=8.0.0\"\nmypy-extensions = \">=0.4.3\"\npathspec = \">=0.9.0\"\nplatformdirs = \">=2\"\ntomli = \">=1.1.0\"\n\n[package.extras]\ncolorama = [\"colorama (>=0.4.3)\"]\nd = [\"aiohttp (>=3.7.4)\"]\njupyter = [\"ipython (>=7.8.0)\", \"tokenize-rt (>=3.2.0)\"]\nuvloop = [\"uvloop (>=0.15.2)\"]\n\n[[package]]\nname = \"blinker\"\nversion = \"1.4\"\ndescription = \"Fast, simple object-to-object and broadcast signaling\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"blinker-1.4.tar.gz\", hash = \"sha256:471aee25f3992bd325afa3772f1063dbdbbca947a041b8b89466dc00d606f8b6\"},\n]\n\n[[package]]\nname = \"boto3\"\nversion = \"1.35.37\"\ndescription = \"The AWS SDK for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"boto3-1.35.37-py3-none-any.whl\", hash = \"sha256:385ca77bf8ea4ab2d97f6e2435bdb29f77d9301e2f7ac796c2f465753c2adf3c\"},\n    {file = \"boto3-1.35.37.tar.gz\", hash = \"sha256:470d981583885859fed2fd1c185eeb01cc03e60272d499bafe41b12625b158c8\"},\n]\n\n[package.dependencies]\nbotocore = \">=1.35.37,<1.36.0\"\njmespath = \">=0.7.1,<2.0.0\"\ns3transfer = \">=0.10.0,<0.11.0\"\n\n[package.extras]\ncrt = [\"botocore[crt] (>=1.21.0,<2.0a0)\"]\n\n[[package]]\nname = \"botocore\"\nversion = \"1.35.37\"\ndescription = \"Low-level, data-driven core of boto 3.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"botocore-1.35.37-py3-none-any.whl\", hash = \"sha256:64f965d4ba7adb8d79ce044c3aef7356e05dd74753cf7e9115b80f477845d920\"},\n    {file = \"botocore-1.35.37.tar.gz\", hash = \"sha256:b2b4d29bafd95b698344f2f0577bb67064adbf1735d8a0e3c7473daa59c23ba6\"},\n]\n\n[package.dependencies]\njmespath = \">=0.7.1,<2.0.0\"\npython-dateutil = \">=2.1,<3.0.0\"\nurllib3 = {version = \">=1.25.4,<2.2.0 || >2.2.0,<3\", markers = \"python_version >= \\\"3.10\\\"\"}\n\n[package.extras]\ncrt = [\"awscrt (==0.22.0)\"]\n\n[[package]]\nname = \"cachetools\"\nversion = \"4.1.1\"\ndescription = \"Extensible memoizing collections and decorators\"\noptional = false\npython-versions = \"~=3.5\"\nfiles = [\n    {file = \"cachetools-4.1.1-py3-none-any.whl\", hash = \"sha256:513d4ff98dd27f85743a8dc0e92f55ddb1b49e060c2d5961512855cda2c01a98\"},\n    {file = \"cachetools-4.1.1.tar.gz\", hash = \"sha256:bbaa39c3dede00175df2dc2b03d0cf18dd2d32a7de7beb68072d13043c9edb20\"},\n]\n\n[[package]]\nname = \"cbor2\"\nversion = \"5.2.0\"\ndescription = \"Pure Python CBOR (de)serializer with extensive tag support\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"cbor2-5.2.0.tar.gz\", hash = \"sha256:a33aa2e5534fd74401ac95686886e655e3b2ce6383b3f958199b6e70a87c94bf\"},\n]\n\n[package.extras]\ntest = [\"pytest\", \"pytest-cov\"]\n\n[[package]]\nname = \"certifi\"\nversion = \"2019.11.28\"\ndescription = \"Python package for providing Mozilla's CA Bundle.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"certifi-2019.11.28-py2.py3-none-any.whl\", hash = \"sha256:017c25db2a153ce562900032d5bc68e9f191e44e9a0f762f373977de9df1fbb3\"},\n    {file = \"certifi-2019.11.28.tar.gz\", hash = \"sha256:25b64c7da4cd7479594d035c08c2d809eb4aab3a26e5a990ea98cc450c320f1f\"},\n]\n\n[[package]]\nname = \"cffi\"\nversion = \"1.14.4\"\ndescription = \"Foreign Function Interface for Python calling C code.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"cffi-1.14.4-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:ebb253464a5d0482b191274f1c8bf00e33f7e0b9c66405fbffc61ed2c839c775\"},\n    {file = \"cffi-1.14.4-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:2c24d61263f511551f740d1a065eb0212db1dbbbbd241db758f5244281590c06\"},\n    {file = \"cffi-1.14.4-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:9f7a31251289b2ab6d4012f6e83e58bc3b96bd151f5b5262467f4bb6b34a7c26\"},\n    {file = \"cffi-1.14.4-cp27-cp27m-win32.whl\", hash = \"sha256:5cf4be6c304ad0b6602f5c4e90e2f59b47653ac1ed9c662ed379fe48a8f26b0c\"},\n    {file = \"cffi-1.14.4-cp27-cp27m-win_amd64.whl\", hash = \"sha256:f60567825f791c6f8a592f3c6e3bd93dd2934e3f9dac189308426bd76b00ef3b\"},\n    {file = \"cffi-1.14.4-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:c6332685306b6417a91b1ff9fae889b3ba65c2292d64bd9245c093b1b284809d\"},\n    {file = \"cffi-1.14.4-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:d9efd8b7a3ef378dd61a1e77367f1924375befc2eba06168b6ebfa903a5e59ca\"},\n    {file = \"cffi-1.14.4-cp35-cp35m-macosx_10_9_x86_64.whl\", hash = \"sha256:51a8b381b16ddd370178a65360ebe15fbc1c71cf6f584613a7ea08bfad946698\"},\n    {file = \"cffi-1.14.4-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:1d2c4994f515e5b485fd6d3a73d05526aa0fcf248eb135996b088d25dfa1865b\"},\n    {file = \"cffi-1.14.4-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:af5c59122a011049aad5dd87424b8e65a80e4a6477419c0c1015f73fb5ea0293\"},\n    {file = \"cffi-1.14.4-cp35-cp35m-win32.whl\", hash = \"sha256:594234691ac0e9b770aee9fcdb8fa02c22e43e5c619456efd0d6c2bf276f3eb2\"},\n    {file = \"cffi-1.14.4-cp35-cp35m-win_amd64.whl\", hash = \"sha256:64081b3f8f6f3c3de6191ec89d7dc6c86a8a43911f7ecb422c60e90c70be41c7\"},\n    {file = \"cffi-1.14.4-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:f803eaa94c2fcda012c047e62bc7a51b0bdabda1cad7a92a522694ea2d76e49f\"},\n    {file = \"cffi-1.14.4-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:105abaf8a6075dc96c1fe5ae7aae073f4696f2905fde6aeada4c9d2926752362\"},\n    {file = \"cffi-1.14.4-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:0638c3ae1a0edfb77c6765d487fee624d2b1ee1bdfeffc1f0b58c64d149e7eec\"},\n    {file = \"cffi-1.14.4-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:7c6b1dece89874d9541fc974917b631406233ea0440d0bdfbb8e03bf39a49b3b\"},\n    {file = \"cffi-1.14.4-cp36-cp36m-win32.whl\", hash = \"sha256:155136b51fd733fa94e1c2ea5211dcd4c8879869008fc811648f16541bf99668\"},\n    {file = \"cffi-1.14.4-cp36-cp36m-win_amd64.whl\", hash = \"sha256:6bc25fc545a6b3d57b5f8618e59fc13d3a3a68431e8ca5fd4c13241cd70d0009\"},\n    {file = \"cffi-1.14.4-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:a7711edca4dcef1a75257b50a2fbfe92a65187c47dab5a0f1b9b332c5919a3fb\"},\n    {file = \"cffi-1.14.4-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:00e28066507bfc3fe865a31f325c8391a1ac2916219340f87dfad602c3e48e5d\"},\n    {file = \"cffi-1.14.4-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:798caa2a2384b1cbe8a2a139d80734c9db54f9cc155c99d7cc92441a23871c03\"},\n    {file = \"cffi-1.14.4-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:a5ed8c05548b54b998b9498753fb9cadbfd92ee88e884641377d8a8b291bcc01\"},\n    {file = \"cffi-1.14.4-cp37-cp37m-win32.whl\", hash = \"sha256:00a1ba5e2e95684448de9b89888ccd02c98d512064b4cb987d48f4b40aa0421e\"},\n    {file = \"cffi-1.14.4-cp37-cp37m-win_amd64.whl\", hash = \"sha256:9cc46bc107224ff5b6d04369e7c595acb700c3613ad7bcf2e2012f62ece80c35\"},\n    {file = \"cffi-1.14.4-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:df5169c4396adc04f9b0a05f13c074df878b6052430e03f50e68adf3a57aa28d\"},\n    {file = \"cffi-1.14.4-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:9ffb888f19d54a4d4dfd4b3f29bc2c16aa4972f1c2ab9c4ab09b8ab8685b9c2b\"},\n    {file = \"cffi-1.14.4-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:8d6603078baf4e11edc4168a514c5ce5b3ba6e3e9c374298cb88437957960a53\"},\n    {file = \"cffi-1.14.4-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:d5ff0621c88ce83a28a10d2ce719b2ee85635e85c515f12bac99a95306da4b2e\"},\n    {file = \"cffi-1.14.4-cp38-cp38-win32.whl\", hash = \"sha256:b4e248d1087abf9f4c10f3c398896c87ce82a9856494a7155823eb45a892395d\"},\n    {file = \"cffi-1.14.4-cp38-cp38-win_amd64.whl\", hash = \"sha256:ec80dc47f54e6e9a78181ce05feb71a0353854cc26999db963695f950b5fb375\"},\n    {file = \"cffi-1.14.4-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:840793c68105fe031f34d6a086eaea153a0cd5c491cde82a74b420edd0a2b909\"},\n    {file = \"cffi-1.14.4-cp39-cp39-manylinux1_i686.whl\", hash = \"sha256:b18e0a9ef57d2b41f5c68beefa32317d286c3d6ac0484efd10d6e07491bb95dd\"},\n    {file = \"cffi-1.14.4-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:045d792900a75e8b1e1b0ab6787dd733a8190ffcf80e8c8ceb2fb10a29ff238a\"},\n    {file = \"cffi-1.14.4-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:7ef7d4ced6b325e92eb4d3502946c78c5367bc416398d387b39591532536734e\"},\n    {file = \"cffi-1.14.4-cp39-cp39-win32.whl\", hash = \"sha256:ba4e9e0ae13fc41c6b23299545e5ef73055213e466bd107953e4a013a5ddd7e3\"},\n    {file = \"cffi-1.14.4-cp39-cp39-win_amd64.whl\", hash = \"sha256:f032b34669220030f905152045dfa27741ce1a6db3324a5bc0b96b6c7420c87b\"},\n    {file = \"cffi-1.14.4.tar.gz\", hash = \"sha256:1a465cbe98a7fd391d47dce4b8f7e5b921e6cd805ef421d04f5f66ba8f06086c\"},\n]\n\n[package.dependencies]\npycparser = \"*\"\n\n[[package]]\nname = \"cfgv\"\nversion = \"3.4.0\"\ndescription = \"Validate configuration and produce human readable error messages.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"cfgv-3.4.0-py2.py3-none-any.whl\", hash = \"sha256:b7265b1f29fd3316bfcd2b330d63d024f2bfd8bcb8b0272f8e19a504856c48f9\"},\n    {file = \"cfgv-3.4.0.tar.gz\", hash = \"sha256:e52591d4c5f5dead8e0f673fb16db7949d2cfb3f7da4582893288f0ded8fe560\"},\n]\n\n[[package]]\nname = \"chardet\"\nversion = \"3.0.4\"\ndescription = \"Universal encoding detector for Python 2 and 3\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"chardet-3.0.4-py2.py3-none-any.whl\", hash = \"sha256:fc323ffcaeaed0e0a02bf4d117757b98aed530d9ed4531e3e15460124c106691\"},\n    {file = \"chardet-3.0.4.tar.gz\", hash = \"sha256:84ab92ed1c4d4f16916e05906b6b75a6c0fb5db821cc65e70cbd64a3e2a5eaae\"},\n]\n\n[[package]]\nname = \"charset-normalizer\"\nversion = \"2.1.0\"\ndescription = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"\noptional = false\npython-versions = \">=3.6.0\"\nfiles = [\n    {file = \"charset-normalizer-2.1.0.tar.gz\", hash = \"sha256:575e708016ff3a5e3681541cb9d79312c416835686d054a23accb873b254f413\"},\n    {file = \"charset_normalizer-2.1.0-py3-none-any.whl\", hash = \"sha256:5189b6f22b01957427f35b6a08d9a0bc45b46d3788ef5a92e978433c7a35f8a5\"},\n]\n\n[package.extras]\nunicode-backport = [\"unicodedata2\"]\n\n[[package]]\nname = \"click\"\nversion = \"8.0.3\"\ndescription = \"Composable command line interface toolkit\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"click-8.0.3-py3-none-any.whl\", hash = \"sha256:353f466495adaeb40b6b5f592f9f91cb22372351c84caeb068132442a4518ef3\"},\n    {file = \"click-8.0.3.tar.gz\", hash = \"sha256:410e932b050f5eed773c4cda94de75971c89cdb3155a72a0831139a79e5ecb5b\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n\n[[package]]\nname = \"coinbase-commerce\"\nversion = \"1.0.1\"\ndescription = \"Coinbase Commerce API client library\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"coinbase_commerce-1.0.1-py2.py3-none-any.whl\", hash = \"sha256:2eee6981767873f2ab803a2d40ad497b08a2231bcf68de79ccec0314728370fe\"},\n    {file = \"coinbase_commerce-1.0.1.tar.gz\", hash = \"sha256:5f6807655e9297210c1178dca62d1c1a997505368311c55c8ebe4f466344d966\"},\n]\n\n[package.dependencies]\nrequests = \">=2.14.0\"\nsix = \">=1.9\"\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.5\"\ndescription = \"Cross-platform colored terminal text.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"colorama-0.4.5-py2.py3-none-any.whl\", hash = \"sha256:854bf444933e37f5824ae7bfc1e98d5bce2ebe4160d46b5edf346a89358e99da\"},\n    {file = \"colorama-0.4.5.tar.gz\", hash = \"sha256:e6c6b4334fc50988a639d9b98aa429a0b57da6e17b9a44f0451f930b6967b7a4\"},\n]\n\n[[package]]\nname = \"coloredlogs\"\nversion = \"14.0\"\ndescription = \"Colored terminal output for Python's logging module\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"coloredlogs-14.0-py2.py3-none-any.whl\", hash = \"sha256:346f58aad6afd48444c2468618623638dadab76e4e70d5e10822676f2d32226a\"},\n    {file = \"coloredlogs-14.0.tar.gz\", hash = \"sha256:a1fab193d2053aa6c0a97608c4342d031f1f93a3d1218432c59322441d31a505\"},\n]\n\n[package.dependencies]\nhumanfriendly = \">=7.1\"\n\n[package.extras]\ncron = [\"capturer (>=2.4)\"]\n\n[[package]]\nname = \"coverage\"\nversion = \"6.4.2\"\ndescription = \"Code coverage measurement for Python\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"coverage-6.4.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:a9032f9b7d38bdf882ac9f66ebde3afb8145f0d4c24b2e600bc4c6304aafb87e\"},\n    {file = \"coverage-6.4.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:e0524adb49c716ca763dbc1d27bedce36b14f33e6b8af6dba56886476b42957c\"},\n    {file = \"coverage-6.4.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d4548be38a1c810d79e097a38107b6bf2ff42151900e47d49635be69943763d8\"},\n    {file = \"coverage-6.4.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f23876b018dfa5d3e98e96f5644b109090f16a4acb22064e0f06933663005d39\"},\n    {file = \"coverage-6.4.2-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6fe75dcfcb889b6800f072f2af5a331342d63d0c1b3d2bf0f7b4f6c353e8c9c0\"},\n    {file = \"coverage-6.4.2-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:2f8553878a24b00d5ab04b7a92a2af50409247ca5c4b7a2bf4eabe94ed20d3ee\"},\n    {file = \"coverage-6.4.2-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:d774d9e97007b018a651eadc1b3970ed20237395527e22cbeb743d8e73e0563d\"},\n    {file = \"coverage-6.4.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:d56f105592188ce7a797b2bd94b4a8cb2e36d5d9b0d8a1d2060ff2a71e6b9bbc\"},\n    {file = \"coverage-6.4.2-cp310-cp310-win32.whl\", hash = \"sha256:d230d333b0be8042ac34808ad722eabba30036232e7a6fb3e317c49f61c93386\"},\n    {file = \"coverage-6.4.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:5ef42e1db047ca42827a85e34abe973971c635f83aed49611b7f3ab49d0130f0\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:25b7ec944f114f70803d6529394b64f8749e93cbfac0fe6c5ea1b7e6c14e8a46\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7bb00521ab4f99fdce2d5c05a91bddc0280f0afaee0e0a00425e28e209d4af07\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2dff52b3e7f76ada36f82124703f4953186d9029d00d6287f17c68a75e2e6039\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:147605e1702d996279bb3cc3b164f408698850011210d133a2cb96a73a2f7996\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:422fa44070b42fef9fb8dabd5af03861708cdd6deb69463adc2130b7bf81332f\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:8af6c26ba8df6338e57bedbf916d76bdae6308e57fc8f14397f03b5da8622b4e\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:5336e0352c0b12c7e72727d50ff02557005f79a0b8dcad9219c7c4940a930083\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-win32.whl\", hash = \"sha256:0f211df2cba951ffcae210ee00e54921ab42e2b64e0bf2c0befc977377fb09b7\"},\n    {file = \"coverage-6.4.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:a13772c19619118903d65a91f1d5fea84be494d12fd406d06c849b00d31bf120\"},\n    {file = \"coverage-6.4.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:f7bd0ffbcd03dc39490a1f40b2669cc414fae0c4e16b77bb26806a4d0b7d1452\"},\n    {file = \"coverage-6.4.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:0895ea6e6f7f9939166cc835df8fa4599e2d9b759b02d1521b574e13b859ac32\"},\n    {file = \"coverage-6.4.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d4e7ced84a11c10160c0697a6cc0b214a5d7ab21dfec1cd46e89fbf77cc66fae\"},\n    {file = \"coverage-6.4.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:80db4a47a199c4563d4a25919ff29c97c87569130375beca3483b41ad5f698e8\"},\n    {file = \"coverage-6.4.2-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3def6791adf580d66f025223078dc84c64696a26f174131059ce8e91452584e1\"},\n    {file = \"coverage-6.4.2-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:4f89d8e03c8a3757aae65570d14033e8edf192ee9298303db15955cadcff0c63\"},\n    {file = \"coverage-6.4.2-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:6d0b48aff8e9720bdec315d67723f0babd936a7211dc5df453ddf76f89c59933\"},\n    {file = \"coverage-6.4.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:2b20286c2b726f94e766e86a3fddb7b7e37af5d0c635bdfa7e4399bc523563de\"},\n    {file = \"coverage-6.4.2-cp38-cp38-win32.whl\", hash = \"sha256:d714af0bdba67739598849c9f18efdcc5a0412f4993914a0ec5ce0f1e864d783\"},\n    {file = \"coverage-6.4.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:5f65e5d3ff2d895dab76b1faca4586b970a99b5d4b24e9aafffc0ce94a6022d6\"},\n    {file = \"coverage-6.4.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:a697977157adc052284a7160569b36a8bbec09db3c3220642e6323b47cec090f\"},\n    {file = \"coverage-6.4.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:c77943ef768276b61c96a3eb854eba55633c7a3fddf0a79f82805f232326d33f\"},\n    {file = \"coverage-6.4.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:54d8d0e073a7f238f0666d3c7c0d37469b2aa43311e4024c925ee14f5d5a1cbe\"},\n    {file = \"coverage-6.4.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f22325010d8824594820d6ce84fa830838f581a7fd86a9235f0d2ed6deb61e29\"},\n    {file = \"coverage-6.4.2-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:24b04d305ea172ccb21bee5bacd559383cba2c6fcdef85b7701cf2de4188aa55\"},\n    {file = \"coverage-6.4.2-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:866ebf42b4c5dbafd64455b0a1cd5aa7b4837a894809413b930026c91e18090b\"},\n    {file = \"coverage-6.4.2-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:e36750fbbc422c1c46c9d13b937ab437138b998fe74a635ec88989afb57a3978\"},\n    {file = \"coverage-6.4.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:79419370d6a637cb18553ecb25228893966bd7935a9120fa454e7076f13b627c\"},\n    {file = \"coverage-6.4.2-cp39-cp39-win32.whl\", hash = \"sha256:b5e28db9199dd3833cc8a07fa6cf429a01227b5d429facb56eccd765050c26cd\"},\n    {file = \"coverage-6.4.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:edfdabe7aa4f97ed2b9dd5dde52d2bb29cb466993bb9d612ddd10d0085a683cf\"},\n    {file = \"coverage-6.4.2-pp36.pp37.pp38-none-any.whl\", hash = \"sha256:e2618cb2cf5a7cc8d698306e42ebcacd02fb7ef8cfc18485c59394152c70be97\"},\n    {file = \"coverage-6.4.2.tar.gz\", hash = \"sha256:6c3ccfe89c36f3e5b9837b9ee507472310164f352c9fe332120b764c9d60adbe\"},\n]\n\n[package.dependencies]\ntomli = {version = \"*\", optional = true, markers = \"python_full_version <= \\\"3.11.0a6\\\" and extra == \\\"toml\\\"\"}\n\n[package.extras]\ntoml = [\"tomli\"]\n\n[[package]]\nname = \"crontab\"\nversion = \"0.22.8\"\ndescription = \"Parse and use crontab schedules in Python\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"crontab-0.22.8.tar.gz\", hash = \"sha256:1ac977fb1b8ba5b7b58e6f713cd7df36e61d7aee4c2b809abcf76adddd2deeaf\"},\n]\n\n[[package]]\nname = \"cryptography\"\nversion = \"37.0.1\"\ndescription = \"cryptography is a package which provides cryptographic recipes and primitives to Python developers.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"cryptography-37.0.1-cp36-abi3-macosx_10_10_universal2.whl\", hash = \"sha256:74b55f67f4cf026cb84da7a1b04fc2a1d260193d4ad0ea5e9897c8b74c1e76ac\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-macosx_10_10_x86_64.whl\", hash = \"sha256:0db5cf21bd7d092baacb576482b0245102cea2d3cf09f09271ce9f69624ecb6f\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:faf0f5456c059c7b1c29441bdd5e988f0ba75bdc3eea776520d8dcb1e30e1b5c\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.manylinux_2_24_aarch64.whl\", hash = \"sha256:06bfafa6e53ccbfb7a94be4687b211a025ce0625e3f3c60bb15cd048a18f3ed8\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bf585476fcbcd37bed08072e8e2db3954ce1bfc68087a2dc9c19cfe0b90979ca\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6d4daf890e674d191757d8d7d60dc3a29c58c72c7a76a05f1c0a326013f47e8b\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-manylinux_2_24_x86_64.whl\", hash = \"sha256:ae1cd29fbe6b716855454e44f4bf743465152e15d2d317303fe3b58ee9e5af7a\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-musllinux_1_1_aarch64.whl\", hash = \"sha256:451aaff8b8adf2dd0597cbb1fdcfc8a7d580f33f843b7cce75307a7f20112dd8\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-musllinux_1_1_x86_64.whl\", hash = \"sha256:1858eff6246bb8bbc080eee78f3dd1528739e3f416cba5f9914e8631b8df9871\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-win32.whl\", hash = \"sha256:e69a0e36e62279120e648e787b76d79b41e0f9e86c1c636a4f38d415595c722e\"},\n    {file = \"cryptography-37.0.1-cp36-abi3-win_amd64.whl\", hash = \"sha256:a18ff4bfa9d64914a84d7b06c46eb86e0cc03113470b3c111255aceb6dcaf81d\"},\n    {file = \"cryptography-37.0.1-pp37-pypy37_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cce90609e01e1b192fae9e13665058ab46b2ea53a3c05a3ea74a3eb8c3af8857\"},\n    {file = \"cryptography-37.0.1-pp37-pypy37_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:c4a58eeafbd7409054be41a377e726a7904a17c26f45abf18125d21b1215b08b\"},\n    {file = \"cryptography-37.0.1-pp38-pypy38_pp73-macosx_10_10_x86_64.whl\", hash = \"sha256:618391152147a1221c87b1b0b7f792cafcfd4b5a685c5c72eeea2ddd29aeceff\"},\n    {file = \"cryptography-37.0.1-pp38-pypy38_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7ceae26f876aabe193b13a0c36d1bb8e3e7e608d17351861b437bd882f617e9f\"},\n    {file = \"cryptography-37.0.1-pp38-pypy38_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:930b829e8a2abaf43a19f38277ae3c5e1ffcf547b936a927d2587769ae52c296\"},\n    {file = \"cryptography-37.0.1-pp38-pypy38_pp73-win_amd64.whl\", hash = \"sha256:58021d6e9b1d88b1105269d0da5e60e778b37dfc0e824efc71343dd003726831\"},\n    {file = \"cryptography-37.0.1-pp39-pypy39_pp73-macosx_10_10_x86_64.whl\", hash = \"sha256:b1ee5c82cf03b30f6ae4e32d2bcb1e167ef74d6071cbb77c2af30f101d0b360b\"},\n    {file = \"cryptography-37.0.1-pp39-pypy39_pp73-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f095988548ec5095e3750cdb30e6962273d239b1998ba1aac66c0d5bee7111c1\"},\n    {file = \"cryptography-37.0.1-pp39-pypy39_pp73-manylinux_2_24_x86_64.whl\", hash = \"sha256:125702572be12bcd318e3a14e9e70acd4be69a43664a75f0397e8650fe3c6cc3\"},\n    {file = \"cryptography-37.0.1-pp39-pypy39_pp73-win_amd64.whl\", hash = \"sha256:315af6268de72bcfa0bb3401350ce7d921f216e6b60de12a363dad128d9d459f\"},\n    {file = \"cryptography-37.0.1.tar.gz\", hash = \"sha256:d610d0ee14dd9109006215c7c0de15eee91230b70a9bce2263461cf7c3720b83\"},\n]\n\n[package.dependencies]\ncffi = \">=1.12\"\n\n[package.extras]\ndocs = [\"sphinx (>=1.6.5,!=1.8.0,!=3.1.0,!=3.1.1)\", \"sphinx-rtd-theme\"]\ndocstest = [\"pyenchant (>=1.6.11)\", \"sphinxcontrib-spelling (>=4.0.1)\", \"twine (>=1.12.0)\"]\npep8test = [\"black\", \"flake8\", \"flake8-import-order\", \"pep8-naming\"]\nsdist = [\"setuptools-rust (>=0.11.4)\"]\nssh = [\"bcrypt (>=3.1.5)\"]\ntest = [\"hypothesis (>=1.11.4,!=3.79.2)\", \"iso8601\", \"pretend\", \"pytest (>=6.2.0)\", \"pytest-benchmark\", \"pytest-cov\", \"pytest-subtests\", \"pytest-xdist\", \"pytz\"]\n\n[[package]]\nname = \"cssbeautifier\"\nversion = \"1.15.1\"\ndescription = \"CSS unobfuscator and beautifier.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"cssbeautifier-1.15.1.tar.gz\", hash = \"sha256:9f7064362aedd559c55eeecf6b6bed65e05f33488dcbe39044f0403c26e1c006\"},\n]\n\n[package.dependencies]\neditorconfig = \">=0.12.2\"\njsbeautifier = \"*\"\nsix = \">=1.13.0\"\n\n[[package]]\nname = \"decorator\"\nversion = \"4.4.2\"\ndescription = \"Decorators for Humans\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*\"\nfiles = [\n    {file = \"decorator-4.4.2-py2.py3-none-any.whl\", hash = \"sha256:41fa54c2a0cc4ba648be4fd43cff00aedf5b9465c9bf18d64325bc225f08f760\"},\n    {file = \"decorator-4.4.2.tar.gz\", hash = \"sha256:e3a62f0520172440ca0dcc823749319382e377f37f140a0b99ef45fecb84bfe7\"},\n]\n\n[[package]]\nname = \"deprecated\"\nversion = \"1.2.13\"\ndescription = \"Python @deprecated decorator to deprecate old python classes, functions or methods.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"Deprecated-1.2.13-py2.py3-none-any.whl\", hash = \"sha256:64756e3e14c8c5eea9795d93c524551432a0be75629f8f29e67ab8caf076c76d\"},\n    {file = \"Deprecated-1.2.13.tar.gz\", hash = \"sha256:43ac5335da90c31c24ba028af536a91d41d53f9e6901ddb021bcc572ce44e38d\"},\n]\n\n[package.dependencies]\nwrapt = \">=1.10,<2\"\n\n[package.extras]\ndev = [\"PyTest\", \"PyTest (<5)\", \"PyTest-Cov\", \"PyTest-Cov (<2.6)\", \"bump2version (<1)\", \"configparser (<5)\", \"importlib-metadata (<3)\", \"importlib-resources (<4)\", \"sphinx (<2)\", \"sphinxcontrib-websupport (<2)\", \"tox\", \"zipp (<2)\"]\n\n[[package]]\nname = \"dill\"\nversion = \"0.3.5.1\"\ndescription = \"serialize all of python\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*\"\nfiles = [\n    {file = \"dill-0.3.5.1-py2.py3-none-any.whl\", hash = \"sha256:33501d03270bbe410c72639b350e941882a8b0fd55357580fbc873fba0c59302\"},\n    {file = \"dill-0.3.5.1.tar.gz\", hash = \"sha256:d75e41f3eff1eee599d738e76ba8f4ad98ea229db8b085318aa2b3333a208c86\"},\n]\n\n[package.extras]\ngraph = [\"objgraph (>=1.7.2)\"]\n\n[[package]]\nname = \"distlib\"\nversion = \"0.3.8\"\ndescription = \"Distribution utilities\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"distlib-0.3.8-py2.py3-none-any.whl\", hash = \"sha256:034db59a0b96f8ca18035f36290806a9a6e6bd9d1ff91e45a7f172eb17e51784\"},\n    {file = \"distlib-0.3.8.tar.gz\", hash = \"sha256:1530ea13e350031b6312d8580ddb6b27a104275a31106523b8f123787f494f64\"},\n]\n\n[[package]]\nname = \"djlint\"\nversion = \"1.34.1\"\ndescription = \"HTML Template Linter and Formatter\"\noptional = false\npython-versions = \">=3.8.0,<4.0.0\"\nfiles = [\n    {file = \"djlint-1.34.1-py3-none-any.whl\", hash = \"sha256:96ff1c464fb6f061130ebc88663a2ea524d7ec51f4b56221a2b3f0320a3cfce8\"},\n    {file = \"djlint-1.34.1.tar.gz\", hash = \"sha256:db93fa008d19eaadb0454edf1704931d14469d48508daba2df9941111f408346\"},\n]\n\n[package.dependencies]\nclick = \">=8.0.1,<9.0.0\"\ncolorama = \">=0.4.4,<0.5.0\"\ncssbeautifier = \">=1.14.4,<2.0.0\"\nhtml-tag-names = \">=0.1.2,<0.2.0\"\nhtml-void-elements = \">=0.1.0,<0.2.0\"\njsbeautifier = \">=1.14.4,<2.0.0\"\njson5 = \">=0.9.11,<0.10.0\"\npathspec = \">=0.12.0,<0.13.0\"\nPyYAML = \">=6.0,<7.0\"\nregex = \">=2023.0.0,<2024.0.0\"\ntomli = {version = \">=2.0.1,<3.0.0\", markers = \"python_version < \\\"3.11\\\"\"}\ntqdm = \">=4.62.2,<5.0.0\"\n\n[[package]]\nname = \"dkimpy\"\nversion = \"1.0.5\"\ndescription = \"DKIM (DomainKeys Identified Mail), ARC (Authenticated Receive Chain), and TLSRPT (TLS Report) email signing and verification\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"dkimpy-1.0.5.tar.gz\", hash = \"sha256:9a2420bf09af686736773153fca32a02ae11ecbe24b540c26104628959f91121\"},\n]\n\n[package.dependencies]\ndnspython = \">=1.16.0\"\n\n[package.extras]\narc = [\"authres\"]\nasyncio = [\"aiodns\"]\ned25519 = [\"pynacl\"]\ntesting = [\"authres\", \"pynacl\"]\n\n[[package]]\nname = \"dnspython\"\nversion = \"2.0.0\"\ndescription = \"DNS toolkit\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"dnspython-2.0.0-py3-none-any.whl\", hash = \"sha256:40bb3c24b9d4ec12500f0124288a65df232a3aa749bb0c39734b782873a2544d\"},\n    {file = \"dnspython-2.0.0.zip\", hash = \"sha256:044af09374469c3a39eeea1a146e8cac27daec951f1f1f157b1962fc7cb9d1b7\"},\n]\n\n[package.extras]\ncurio = [\"curio (>=1.2)\", \"sniffio (>=1.1)\"]\ndnssec = [\"cryptography (>=2.6)\"]\ndoh = [\"requests\", \"requests-toolbelt\"]\nidna = [\"idna (>=2.1)\"]\ntrio = [\"sniffio (>=1.1)\", \"trio (>=0.14.0)\"]\n\n[[package]]\nname = \"editorconfig\"\nversion = \"0.12.4\"\ndescription = \"EditorConfig File Locator and Interpreter for Python\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"EditorConfig-0.12.4.tar.gz\", hash = \"sha256:24857fa1793917dd9ccf0c7810a07e05404ce9b823521c7dce22a4fb5d125f80\"},\n]\n\n[[package]]\nname = \"email-validator\"\nversion = \"1.1.3\"\ndescription = \"A robust email syntax and deliverability validation library for Python 2.x/3.x.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7\"\nfiles = [\n    {file = \"email_validator-1.1.3-py2.py3-none-any.whl\", hash = \"sha256:5675c8ceb7106a37e40e2698a57c056756bf3f272cfa8682a4f87ebd95d8440b\"},\n    {file = \"email_validator-1.1.3.tar.gz\", hash = \"sha256:aa237a65f6f4da067119b7df3f13e89c25c051327b2b5b66dc075f33d62480d7\"},\n]\n\n[package.dependencies]\ndnspython = \">=1.15.0\"\nidna = \">=2.0.0\"\n\n[[package]]\nname = \"exceptiongroup\"\nversion = \"1.1.1\"\ndescription = \"Backport of PEP 654 (exception groups)\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"exceptiongroup-1.1.1-py3-none-any.whl\", hash = \"sha256:232c37c63e4f682982c8b6459f33a8981039e5fb8756b2074364e5055c498c9e\"},\n    {file = \"exceptiongroup-1.1.1.tar.gz\", hash = \"sha256:d484c3090ba2889ae2928419117447a14daf3c1231d5e30d0aae34f354f01785\"},\n]\n\n[package.extras]\ntest = [\"pytest (>=6)\"]\n\n[[package]]\nname = \"facebook-sdk\"\nversion = \"3.1.0\"\ndescription = \"This client library is designed to support the Facebook Graph API and the official Facebook JavaScript SDK, which is the canonical way to implement Facebook authentication.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"facebook-sdk-3.1.0.tar.gz\", hash = \"sha256:cabcd2e69ea3d9f042919c99b353df7aa1e2be86d040121f6e9f5e63c1cf0f8d\"},\n    {file = \"facebook_sdk-3.1.0-py2.py3-none-any.whl\", hash = \"sha256:2e987b3e0f466a6f4ee77b935eb023dba1384134f004a2af21f1cfff7fe0806e\"},\n]\n\n[package.dependencies]\nrequests = \"*\"\n\n[[package]]\nname = \"filelock\"\nversion = \"3.15.4\"\ndescription = \"A platform independent file lock.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"filelock-3.15.4-py3-none-any.whl\", hash = \"sha256:6ca1fffae96225dab4c6eaf1c4f4f28cd2568d3ec2a44e15a08520504de468e7\"},\n    {file = \"filelock-3.15.4.tar.gz\", hash = \"sha256:2207938cbc1844345cb01a5a95524dae30f0ce089eba5b00378295a17e3e90cb\"},\n]\n\n[package.extras]\ndocs = [\"furo (>=2023.9.10)\", \"sphinx (>=7.2.6)\", \"sphinx-autodoc-typehints (>=1.25.2)\"]\ntesting = [\"covdefaults (>=2.3)\", \"coverage (>=7.3.2)\", \"diff-cover (>=8.0.1)\", \"pytest (>=7.4.3)\", \"pytest-asyncio (>=0.21)\", \"pytest-cov (>=4.1)\", \"pytest-mock (>=3.12)\", \"pytest-timeout (>=2.2)\", \"virtualenv (>=20.26.2)\"]\ntyping = [\"typing-extensions (>=4.8)\"]\n\n[[package]]\nname = \"flanker\"\nversion = \"0.9.11\"\ndescription = \"Mailgun Parsing Tools\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"flanker-0.9.11.tar.gz\", hash = \"sha256:974418e5b498fd3bcb3859c22e22d26495257f9cf98b744c17f2335aca86e001\"},\n]\n\n[package.dependencies]\nattrs = \"*\"\nchardet = \">=1.0.1\"\ncryptography = \">=0.5\"\nidna = \">=2.5\"\nply = \">=3.10\"\nregex = \">=0.1.20110315\"\nsix = \"*\"\ntld = \"*\"\nWebOb = \">=0.9.8\"\n\n[package.extras]\ncchardet = [\"cchardet (>=0.3.5)\"]\ntests = [\"coverage\", \"coveralls\", \"mock\", \"nose\"]\nvalidator = [\"dnsq (>=1.1.6)\", \"redis (>=2.7.1)\"]\n\n[[package]]\nname = \"flask\"\nversion = \"1.1.2\"\ndescription = \"A simple framework for building complex web applications.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"Flask-1.1.2-py2.py3-none-any.whl\", hash = \"sha256:8a4fdd8936eba2512e9c85df320a37e694c93945b33ef33c89946a340a238557\"},\n    {file = \"Flask-1.1.2.tar.gz\", hash = \"sha256:4efa1ae2d7c9865af48986de8aeb8504bf32c7f3d6fdc9353d34b21f4b127060\"},\n]\n\n[package.dependencies]\nclick = \">=5.1\"\nitsdangerous = \">=0.24\"\nJinja2 = \">=2.10.1\"\nWerkzeug = \">=0.15\"\n\n[package.extras]\ndev = [\"coverage\", \"pallets-sphinx-themes\", \"pytest\", \"sphinx\", \"sphinx-issues\", \"sphinxcontrib-log-cabinet\", \"tox\"]\ndocs = [\"pallets-sphinx-themes\", \"sphinx\", \"sphinx-issues\", \"sphinxcontrib-log-cabinet\"]\ndotenv = [\"python-dotenv\"]\n\n[[package]]\nname = \"flask-admin\"\nversion = \"1.5.7\"\ndescription = \"Simple and extensible admin interface framework for Flask\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"Flask-Admin-1.5.7.tar.gz\", hash = \"sha256:145f59407d78319925e20f7c3021f60c71f0cacc98e916e52000845dc4c63621\"},\n]\n\n[package.dependencies]\nFlask = \">=0.7\"\nwtforms = \"*\"\n\n[package.extras]\naws = [\"boto\"]\nazure = [\"azure-storage-blob\"]\n\n[[package]]\nname = \"flask-cors\"\nversion = \"3.0.9\"\ndescription = \"A Flask extension adding a decorator for CORS support\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"Flask-Cors-3.0.9.tar.gz\", hash = \"sha256:6bcfc100288c5d1bcb1dbb854babd59beee622ffd321e444b05f24d6d58466b8\"},\n    {file = \"Flask_Cors-3.0.9-py2.py3-none-any.whl\", hash = \"sha256:cee4480aaee421ed029eaa788f4049e3e26d15b5affb6a880dade6bafad38324\"},\n]\n\n[package.dependencies]\nFlask = \">=0.9\"\nSix = \"*\"\n\n[[package]]\nname = \"flask-debugtoolbar\"\nversion = \"0.11.0\"\ndescription = \"A toolbar overlay for debugging Flask applications.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"Flask-DebugToolbar-0.11.0.tar.gz\", hash = \"sha256:3c4e79d354ede014e6657c545a536d4fb273cc89e3fd6b4835b02e346dd3aab4\"},\n    {file = \"Flask_DebugToolbar-0.11.0-py2.py3-none-any.whl\", hash = \"sha256:0e9a80d4c599233c68376e81cc99976200b5ac5248cfb24f18935cc5b69ac5b3\"},\n]\n\n[package.dependencies]\nBlinker = \"*\"\nFlask = \">=0.8\"\nitsdangerous = \"*\"\nwerkzeug = \"*\"\n\n[[package]]\nname = \"flask-debugtoolbar-sqlalchemy\"\nversion = \"0.2.0\"\ndescription = \"Flask Debug Toolbar panel for SQLAlchemy\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"flask-debugtoolbar-sqlalchemy-0.2.0.tar.gz\", hash = \"sha256:82be8b0c20784a71f9f89bcb38b0f4f9220c70964e4cb86f04e0403e7c6b19b5\"},\n    {file = \"flask_debugtoolbar_sqlalchemy-0.2.0-py3-none-any.whl\", hash = \"sha256:86ff6c21b7c9a3fe555b16fcd665947c9a03defcf0dfa941d94f82343d9d261a\"},\n]\n\n[package.dependencies]\nflask-debugtoolbar = \"*\"\nPygments = \"*\"\nsqlalchemy = \"*\"\nsqlparse = \"*\"\n\n[[package]]\nname = \"flask-httpauth\"\nversion = \"4.1.0\"\ndescription = \"Basic and Digest HTTP authentication for Flask routes\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"Flask-HTTPAuth-4.1.0.tar.gz\", hash = \"sha256:9e028e4375039a49031eb9ecc40be4761f0540476040f6eff329a31dabd4d000\"},\n    {file = \"Flask_HTTPAuth-4.1.0-py2.py3-none-any.whl\", hash = \"sha256:29e0288869a213c7387f0323b6bf2c7191584fb1da8aa024d9af118e5cd70de7\"},\n]\n\n[package.dependencies]\nFlask = \"*\"\n\n[[package]]\nname = \"flask-limiter\"\nversion = \"1.4\"\ndescription = \"Rate limiting for flask applications\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"Flask-Limiter-1.4.tar.gz\", hash = \"sha256:021279c905a1e24f181377ab3be711be7541734b494f4e6db2b8edeba7601e48\"},\n    {file = \"Flask_Limiter-1.4-py3-none-any.whl\", hash = \"sha256:f8a65a7874f48ff8df2ea5e86d5b85b48fcbae065ebeb5271b317fe68fcfa979\"},\n]\n\n[package.dependencies]\nFlask = \">=0.8\"\nlimits = \"*\"\nsix = \">=1.4.1\"\n\n[[package]]\nname = \"flask-login\"\nversion = \"0.5.0\"\ndescription = \"User session management for Flask\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"Flask-Login-0.5.0.tar.gz\", hash = \"sha256:6d33aef15b5bcead780acc339464aae8a6e28f13c90d8b1cf9de8b549d1c0b4b\"},\n    {file = \"Flask_Login-0.5.0-py2.py3-none-any.whl\", hash = \"sha256:7451b5001e17837ba58945aead261ba425fdf7b4f0448777e597ddab39f4fba0\"},\n]\n\n[package.dependencies]\nFlask = \"*\"\n\n[[package]]\nname = \"flask-migrate\"\nversion = \"2.5.3\"\ndescription = \"SQLAlchemy database migrations for Flask applications using Alembic\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"Flask-Migrate-2.5.3.tar.gz\", hash = \"sha256:a69d508c2e09d289f6e55a417b3b8c7bfe70e640f53d2d9deb0d056a384f37ee\"},\n    {file = \"Flask_Migrate-2.5.3-py2.py3-none-any.whl\", hash = \"sha256:4dc4a5cce8cbbb06b8dc963fd86cf8136bd7d875aabe2d840302ea739b243732\"},\n]\n\n[package.dependencies]\nalembic = \">=0.7\"\nFlask = \">=0.9\"\nFlask-SQLAlchemy = \">=1.0\"\n\n[[package]]\nname = \"flask-profiler\"\nversion = \"1.8.1\"\ndescription = \"API endpoint profiler for Flask framework\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"flask_profiler-1.8.1-py3-none-any.whl\", hash = \"sha256:56b51e47c98e9f36150fafffd449b075c58a9b404389a071d405222a35183758\"},\n    {file = \"flask_profiler-1.8.1.tar.gz\", hash = \"sha256:fc9f2875a4f22223ddc04ffacd75792854162c4cdbef165598a51f898521ac51\"},\n]\n\n[package.dependencies]\nFlask = \"*\"\nFlask-HTTPAuth = \"*\"\nsimplejson = \"*\"\n\n[[package]]\nname = \"flask-sqlalchemy\"\nversion = \"2.5.1\"\ndescription = \"Adds SQLAlchemy support to your Flask application.\"\noptional = false\npython-versions = \">= 2.7, != 3.0.*, != 3.1.*, != 3.2.*, != 3.3.*\"\nfiles = [\n    {file = \"Flask-SQLAlchemy-2.5.1.tar.gz\", hash = \"sha256:2bda44b43e7cacb15d4e05ff3cc1f8bc97936cc464623424102bfc2c35e95912\"},\n    {file = \"Flask_SQLAlchemy-2.5.1-py2.py3-none-any.whl\", hash = \"sha256:f12c3d4cc5cc7fdcc148b9527ea05671718c3ea45d50c7e732cceb33f574b390\"},\n]\n\n[package.dependencies]\nFlask = \">=0.10\"\nSQLAlchemy = \">=0.8.0\"\n\n[[package]]\nname = \"flask-wtf\"\nversion = \"0.14.3\"\ndescription = \"Simple integration of Flask and WTForms.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"Flask-WTF-0.14.3.tar.gz\", hash = \"sha256:d417e3a0008b5ba583da1763e4db0f55a1269d9dd91dcc3eb3c026d3c5dbd720\"},\n    {file = \"Flask_WTF-0.14.3-py2.py3-none-any.whl\", hash = \"sha256:57b3faf6fe5d6168bda0c36b0df1d05770f8e205e18332d0376ddb954d17aef2\"},\n]\n\n[package.dependencies]\nFlask = \"*\"\nitsdangerous = \"*\"\nWTForms = \"*\"\n\n[[package]]\nname = \"frozenlist\"\nversion = \"1.3.3\"\ndescription = \"A list-like structure which implements collections.abc.MutableSequence\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"frozenlist-1.3.3-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:ff8bf625fe85e119553b5383ba0fb6aa3d0ec2ae980295aaefa552374926b3f4\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:dfbac4c2dfcc082fcf8d942d1e49b6aa0766c19d3358bd86e2000bf0fa4a9cf0\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:b1c63e8d377d039ac769cd0926558bb7068a1f7abb0f003e3717ee003ad85530\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:7fdfc24dcfce5b48109867c13b4cb15e4660e7bd7661741a391f821f23dfdca7\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2c926450857408e42f0bbc295e84395722ce74bae69a3b2aa2a65fe22cb14b99\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:1841e200fdafc3d51f974d9d377c079a0694a8f06de2e67b48150328d66d5483\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f470c92737afa7d4c3aacc001e335062d582053d4dbe73cda126f2d7031068dd\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:783263a4eaad7c49983fe4b2e7b53fa9770c136c270d2d4bbb6d2192bf4d9caf\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:924620eef691990dfb56dc4709f280f40baee568c794b5c1885800c3ecc69816\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:ae4dc05c465a08a866b7a1baf360747078b362e6a6dbeb0c57f234db0ef88ae0\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:bed331fe18f58d844d39ceb398b77d6ac0b010d571cba8267c2e7165806b00ce\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-musllinux_1_1_s390x.whl\", hash = \"sha256:02c9ac843e3390826a265e331105efeab489ffaf4dd86384595ee8ce6d35ae7f\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:9545a33965d0d377b0bc823dcabf26980e77f1b6a7caa368a365a9497fb09420\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-win32.whl\", hash = \"sha256:d5cd3ab21acbdb414bb6c31958d7b06b85eeb40f66463c264a9b343a4e238642\"},\n    {file = \"frozenlist-1.3.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:b756072364347cb6aa5b60f9bc18e94b2f79632de3b0190253ad770c5df17db1\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:b4395e2f8d83fbe0c627b2b696acce67868793d7d9750e90e39592b3626691b7\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:14143ae966a6229350021384870458e4777d1eae4c28d1a7aa47f24d030e6678\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:5d8860749e813a6f65bad8285a0520607c9500caa23fea6ee407e63debcdbef6\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:23d16d9f477bb55b6154654e0e74557040575d9d19fe78a161bd33d7d76808e8\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:eb82dbba47a8318e75f679690190c10a5e1f447fbf9df41cbc4c3afd726d88cb\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9309869032abb23d196cb4e4db574232abe8b8be1339026f489eeb34a4acfd91\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:a97b4fe50b5890d36300820abd305694cb865ddb7885049587a5678215782a6b\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c188512b43542b1e91cadc3c6c915a82a5eb95929134faf7fd109f14f9892ce4\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:303e04d422e9b911a09ad499b0368dc551e8c3cd15293c99160c7f1f07b59a48\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:0771aed7f596c7d73444c847a1c16288937ef988dc04fb9f7be4b2aa91db609d\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-musllinux_1_1_ppc64le.whl\", hash = \"sha256:66080ec69883597e4d026f2f71a231a1ee9887835902dbe6b6467d5a89216cf6\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-musllinux_1_1_s390x.whl\", hash = \"sha256:41fe21dc74ad3a779c3d73a2786bdf622ea81234bdd4faf90b8b03cad0c2c0b4\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:f20380df709d91525e4bee04746ba612a4df0972c1b8f8e1e8af997e678c7b81\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-win32.whl\", hash = \"sha256:f30f1928162e189091cf4d9da2eac617bfe78ef907a761614ff577ef4edfb3c8\"},\n    {file = \"frozenlist-1.3.3-cp311-cp311-win_amd64.whl\", hash = \"sha256:a6394d7dadd3cfe3f4b3b186e54d5d8504d44f2d58dcc89d693698e8b7132b32\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:8df3de3a9ab8325f94f646609a66cbeeede263910c5c0de0101079ad541af332\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:0693c609e9742c66ba4870bcee1ad5ff35462d5ffec18710b4ac89337ff16e27\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:cd4210baef299717db0a600d7a3cac81d46ef0e007f88c9335db79f8979c0d3d\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:394c9c242113bfb4b9aa36e2b80a05ffa163a30691c7b5a29eba82e937895d5e\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6327eb8e419f7d9c38f333cde41b9ae348bec26d840927332f17e887a8dcb70d\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2e24900aa13212e75e5b366cb9065e78bbf3893d4baab6052d1aca10d46d944c\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:3843f84a6c465a36559161e6c59dce2f2ac10943040c2fd021cfb70d58c4ad56\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:84610c1502b2461255b4c9b7d5e9c48052601a8957cd0aea6ec7a7a1e1fb9420\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:c21b9aa40e08e4f63a2f92ff3748e6b6c84d717d033c7b3438dd3123ee18f70e\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-musllinux_1_1_s390x.whl\", hash = \"sha256:efce6ae830831ab6a22b9b4091d411698145cb9b8fc869e1397ccf4b4b6455cb\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:40de71985e9042ca00b7953c4f41eabc3dc514a2d1ff534027f091bc74416401\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-win32.whl\", hash = \"sha256:180c00c66bde6146a860cbb81b54ee0df350d2daf13ca85b275123bbf85de18a\"},\n    {file = \"frozenlist-1.3.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:9bbbcedd75acdfecf2159663b87f1bb5cfc80e7cd99f7ddd9d66eb98b14a8411\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:034a5c08d36649591be1cbb10e09da9f531034acfe29275fc5454a3b101ce41a\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:ba64dc2b3b7b158c6660d49cdb1d872d1d0bf4e42043ad8d5006099479a194e5\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:47df36a9fe24054b950bbc2db630d508cca3aa27ed0566c0baf661225e52c18e\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:008a054b75d77c995ea26629ab3a0c0d7281341f2fa7e1e85fa6153ae29ae99c\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:841ea19b43d438a80b4de62ac6ab21cfe6827bb8a9dc62b896acc88eaf9cecba\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:e235688f42b36be2b6b06fc37ac2126a73b75fb8d6bc66dd632aa35286238703\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ca713d4af15bae6e5d79b15c10c8522859a9a89d3b361a50b817c98c2fb402a2\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9ac5995f2b408017b0be26d4a1d7c61bce106ff3d9e3324374d66b5964325448\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:a4ae8135b11652b08a8baf07631d3ebfe65a4c87909dbef5fa0cdde440444ee4\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:4ea42116ceb6bb16dbb7d526e242cb6747b08b7710d9782aa3d6732bd8d27649\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:810860bb4bdce7557bc0febb84bbd88198b9dbc2022d8eebe5b3590b2ad6c842\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-musllinux_1_1_s390x.whl\", hash = \"sha256:ee78feb9d293c323b59a6f2dd441b63339a30edf35abcb51187d2fc26e696d13\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:0af2e7c87d35b38732e810befb9d797a99279cbb85374d42ea61c1e9d23094b3\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-win32.whl\", hash = \"sha256:899c5e1928eec13fd6f6d8dc51be23f0d09c5281e40d9cf4273d188d9feeaf9b\"},\n    {file = \"frozenlist-1.3.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:7f44e24fa70f6fbc74aeec3e971f60a14dde85da364aa87f15d1be94ae75aeef\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:2b07ae0c1edaa0a36339ec6cce700f51b14a3fc6545fdd32930d2c83917332cf\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:ebb86518203e12e96af765ee89034a1dbb0c3c65052d1b0c19bbbd6af8a145e1\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:5cf820485f1b4c91e0417ea0afd41ce5cf5965011b3c22c400f6d144296ccbc0\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5c11e43016b9024240212d2a65043b70ed8dfd3b52678a1271972702d990ac6d\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8fa3c6e3305aa1146b59a09b32b2e04074945ffcfb2f0931836d103a2c38f936\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:352bd4c8c72d508778cf05ab491f6ef36149f4d0cb3c56b1b4302852255d05d5\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:65a5e4d3aa679610ac6e3569e865425b23b372277f89b5ef06cf2cdaf1ebf22b\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:b1e2c1185858d7e10ff045c496bbf90ae752c28b365fef2c09cf0fa309291669\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:f163d2fd041c630fed01bc48d28c3ed4a3b003c00acd396900e11ee5316b56bb\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:05cdb16d09a0832eedf770cb7bd1fe57d8cf4eaf5aced29c4e41e3f20b30a784\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:8bae29d60768bfa8fb92244b74502b18fae55a80eac13c88eb0b496d4268fd2d\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-musllinux_1_1_s390x.whl\", hash = \"sha256:eedab4c310c0299961ac285591acd53dc6723a1ebd90a57207c71f6e0c2153ab\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:3bbdf44855ed8f0fbcd102ef05ec3012d6a4fd7c7562403f76ce6a52aeffb2b1\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-win32.whl\", hash = \"sha256:efa568b885bca461f7c7b9e032655c0c143d305bf01c30caf6db2854a4532b38\"},\n    {file = \"frozenlist-1.3.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:cfe33efc9cb900a4c46f91a5ceba26d6df370ffddd9ca386eb1d4f0ad97b9ea9\"},\n    {file = \"frozenlist-1.3.3.tar.gz\", hash = \"sha256:58bcc55721e8a90b88332d6cd441261ebb22342e238296bb330968952fbb3a6a\"},\n]\n\n[[package]]\nname = \"future\"\nversion = \"0.18.3\"\ndescription = \"Clean single-source support for Python 3 and 2\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*\"\nfiles = [\n    {file = \"future-0.18.3.tar.gz\", hash = \"sha256:34a17436ed1e96697a86f9de3d15a3b0be01d8bc8de9c1dffd59fb8234ed5307\"},\n]\n\n[[package]]\nname = \"gevent\"\nversion = \"22.10.2\"\ndescription = \"Coroutine-based network library\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5\"\nfiles = [\n    {file = \"gevent-22.10.2-cp27-cp27m-macosx_10_14_x86_64.whl\", hash = \"sha256:97cd42382421779f5d82ec5007199e8a84aa288114975429e4fd0a98f2290f10\"},\n    {file = \"gevent-22.10.2-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:1e1286a76f15b5e15f1e898731d50529e249529095a032453f2c101af3fde71c\"},\n    {file = \"gevent-22.10.2-cp27-cp27m-win32.whl\", hash = \"sha256:59b47e81b399d49a5622f0f503c59f1ce57b7705306ea0196818951dfc2f36c8\"},\n    {file = \"gevent-22.10.2-cp27-cp27m-win_amd64.whl\", hash = \"sha256:1d543c9407a1e4bca11a8932916988cfb16de00366de5bf7bc9e7a3f61e60b18\"},\n    {file = \"gevent-22.10.2-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:4e2f008c82dc54ec94f4de12ca6feea60e419babb48ec145456907ae61625aa4\"},\n    {file = \"gevent-22.10.2-cp310-cp310-macosx_10_15_x86_64.whl\", hash = \"sha256:990d7069f14dc40674e0d5cb43c68fd3bad8337048613b9bb94a0c4180ffc176\"},\n    {file = \"gevent-22.10.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:f23d0997149a816a2a9045af29c66f67f405a221745b34cefeac5769ed451db8\"},\n    {file = \"gevent-22.10.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b43d500d7d3c0e03070dee813335bb5315215aa1cf6a04c61093dfdd718640b3\"},\n    {file = \"gevent-22.10.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:17b68f4c9e20e47ad49fe797f37f91d5bbeace8765ce2707f979a8d4ec197e4d\"},\n    {file = \"gevent-22.10.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:1f001cac0ba8da76abfeb392a3057f81fab3d67cc916c7df8ea977a44a2cc989\"},\n    {file = \"gevent-22.10.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:3b7eae8a0653ba95a224faaddf629a913ace408edb67384d3117acf42d7dcf89\"},\n    {file = \"gevent-22.10.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:8f2477e7b0a903a01485c55bacf2089110e5f767014967ba4b287ff390ae2638\"},\n    {file = \"gevent-22.10.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ddaa3e310a8f1a45b5c42cf50b54c31003a3028e7d4e085059090ea0e7a5fddd\"},\n    {file = \"gevent-22.10.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:98bc510e80f45486ef5b806a1c305e0e89f0430688c14984b0dbdec03331f48b\"},\n    {file = \"gevent-22.10.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:877abdb3a669576b1d51ce6a49b7260b2a96f6b2424eb93287e779a3219d20ba\"},\n    {file = \"gevent-22.10.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:d21ad79cca234cdbfa249e727500b0ddcbc7adfff6614a96e6eaa49faca3e4f2\"},\n    {file = \"gevent-22.10.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:1e955238f59b2947631c9782a713280dd75884e40e455313b5b6bbc20b92ff73\"},\n    {file = \"gevent-22.10.2-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:5aa99e4882a9e909b4756ee799c6fa0f79eb0542779fad4cc60efa23ec1b2aa8\"},\n    {file = \"gevent-22.10.2-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:d82081656a5b9a94d37c718c8646c757e1617e389cdc533ea5e6a6f0b8b78545\"},\n    {file = \"gevent-22.10.2-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:54f4bfd74c178351a4a05c5c7df6f8a0a279ff6f392b57608ce0e83c768207f9\"},\n    {file = \"gevent-22.10.2-cp36-cp36m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1ff3796692dff50fec2f381b9152438b221335f557c4f9b811f7ded51b7a25a1\"},\n    {file = \"gevent-22.10.2-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f01c9adbcb605364694b11dcd0542ec468a29ac7aba2fb5665dc6caf17ba4d7e\"},\n    {file = \"gevent-22.10.2-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:9d85574eb729f981fea9a78998725a06292d90a3ed50ddca74530c3148c0be41\"},\n    {file = \"gevent-22.10.2-cp36-cp36m-win32.whl\", hash = \"sha256:8c192d2073e558e241f0b592c1e2b34127a4481a5be240cad4796533b88b1a98\"},\n    {file = \"gevent-22.10.2-cp36-cp36m-win_amd64.whl\", hash = \"sha256:a2237451c721a0f874ef89dbb4af4fdc172b76a964befaa69deb15b8fff10f49\"},\n    {file = \"gevent-22.10.2-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:53ee7f170ed42c7561fe8aff5d381dc9a4124694e70580d0c02fba6aafc0ea37\"},\n    {file = \"gevent-22.10.2-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:96c56c280e3c43cfd075efd10b250350ed5ffd3c1514ec99a080b1b92d7c8374\"},\n    {file = \"gevent-22.10.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b6c144e08dfad4106effc043a026e5d0c0eff6ad031904c70bf5090c63f3a6a7\"},\n    {file = \"gevent-22.10.2-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:018f93de7d5318d2fb440f846839a4464738468c3476d5c9cf7da45bb71c18bd\"},\n    {file = \"gevent-22.10.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f7ed2346eb9dc4344f9cb0d7963ce5b74fe16fdd031a2809bb6c2b6eba7ebcd5\"},\n    {file = \"gevent-22.10.2-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:84c517e33ed604fa06b7d756dc0171169cc12f7fdd68eb7b17708a62eebf4516\"},\n    {file = \"gevent-22.10.2-cp37-cp37m-win32.whl\", hash = \"sha256:4114f0f439f0b547bb6f1d474fee99ddb46736944ad2207cef3771828f6aa358\"},\n    {file = \"gevent-22.10.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:0d581f22a5be6281b11ad6309b38b18f0638cf896931223cbaa5adb904826ef6\"},\n    {file = \"gevent-22.10.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:2929377c8ebfb6f4d868d161cd8de2ea6b9f6c7a5fcd4f78bcd537319c16190b\"},\n    {file = \"gevent-22.10.2-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:efc003b6c1481165af61f0aeac248e0a9ac8d880bb3acbe469b448674b2d5281\"},\n    {file = \"gevent-22.10.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:db562a8519838bddad0c439a2b12246bab539dd50e299ea7ff3644274a33b6a5\"},\n    {file = \"gevent-22.10.2-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:1472012493ca1fac103f700d309cb6ef7964dcdb9c788d1768266e77712f5e49\"},\n    {file = \"gevent-22.10.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6c04ee32c11e9fcee47c1b431834878dc987a7a2cc4fe126ddcae3bad723ce89\"},\n    {file = \"gevent-22.10.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:8729129edef2637a8084258cb9ec4e4d5ca45d97ac77aa7a6ff19ccb530ab731\"},\n    {file = \"gevent-22.10.2-cp38-cp38-win32.whl\", hash = \"sha256:ae90226074a6089371a95f20288431cd4b3f6b0b096856afd862e4ac9510cddd\"},\n    {file = \"gevent-22.10.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:494c7f29e94df9a1c3157d67bb7edfa32a46eed786e04d9ee68d39f375e30001\"},\n    {file = \"gevent-22.10.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:58898dbabb5b11e4d0192aae165ad286dc6742c543e1be9d30dc82753547c508\"},\n    {file = \"gevent-22.10.2-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:4197d423e198265eef39a0dea286ef389da9148e070310f34455ecee8172c391\"},\n    {file = \"gevent-22.10.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da4183f0b9d9a1e25e1758099220d32c51cc2c6340ee0dea3fd236b2b37598e4\"},\n    {file = \"gevent-22.10.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a5488eba6a568b4d23c072113da4fc0feb1b5f5ede7381656dc913e0d82204e2\"},\n    {file = \"gevent-22.10.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:319d8b1699b7b8134de66d656cd739b308ab9c45ace14d60ae44de7775b456c9\"},\n    {file = \"gevent-22.10.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:f3329bedbba4d3146ae58c667e0f9ac1e6f1e1e6340c7593976cdc60aa7d1a47\"},\n    {file = \"gevent-22.10.2-cp39-cp39-win32.whl\", hash = \"sha256:172caa66273315f283e90a315921902cb6549762bdcb0587fd60cb712a9d6263\"},\n    {file = \"gevent-22.10.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:323b207b281ba0405fea042067fa1a61662e5ac0d574ede4ebbda03efd20c350\"},\n    {file = \"gevent-22.10.2-pp27-pypy_73-win_amd64.whl\", hash = \"sha256:ed7f16613eebf892a6a744d7a4a8f345bc6f066a0ff3b413e2479f9c0a180193\"},\n    {file = \"gevent-22.10.2-pp37-pypy37_pp73-win_amd64.whl\", hash = \"sha256:a47a4e77e2bc668856aad92a0b8de7ee10768258d93cd03968e6c7ba2e832f76\"},\n    {file = \"gevent-22.10.2.tar.gz\", hash = \"sha256:1ca01da176ee37b3527a2702f7d40dbc9ffb8cfc7be5a03bfa4f9eec45e55c46\"},\n]\n\n[package.dependencies]\ncffi = {version = \">=1.12.2\", markers = \"platform_python_implementation == \\\"CPython\\\" and sys_platform == \\\"win32\\\"\"}\ngreenlet = {version = \">=2.0.0\", markers = \"platform_python_implementation == \\\"CPython\\\"\"}\nsetuptools = \"*\"\n\"zope.event\" = \"*\"\n\"zope.interface\" = \"*\"\n\n[package.extras]\ndnspython = [\"dnspython (>=1.16.0,<2.0)\", \"idna\"]\ndocs = [\"repoze.sphinx.autointerface\", \"sphinxcontrib-programoutput\", \"zope.schema\"]\nmonitor = [\"psutil (>=5.7.0)\"]\nrecommended = [\"backports.socketpair\", \"cffi (>=1.12.2)\", \"dnspython (>=1.16.0,<2.0)\", \"idna\", \"psutil (>=5.7.0)\", \"selectors2\"]\ntest = [\"backports.socketpair\", \"cffi (>=1.12.2)\", \"contextvars (==2.4)\", \"coverage (>=5.0)\", \"coveralls (>=1.7.0)\", \"dnspython (>=1.16.0,<2.0)\", \"futures\", \"idna\", \"mock\", \"objgraph\", \"psutil (>=5.7.0)\", \"requests\", \"selectors2\"]\n\n[[package]]\nname = \"google-api-core\"\nversion = \"1.22.2\"\ndescription = \"Google API client core library\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*\"\nfiles = [\n    {file = \"google-api-core-1.22.2.tar.gz\", hash = \"sha256:779107f17e0fef8169c5239d56a8fbff03f9f72a3893c0c9e5842ec29dfedd54\"},\n    {file = \"google_api_core-1.22.2-py2.py3-none-any.whl\", hash = \"sha256:67e33a852dcca7cb7eff49abc35c8cc2c0bb8ab11397dc8306d911505cae2990\"},\n]\n\n[package.dependencies]\ngoogle-auth = \">=1.21.1,<2.0dev\"\ngoogleapis-common-protos = \">=1.6.0,<2.0dev\"\nprotobuf = \">=3.12.0\"\npytz = \"*\"\nrequests = \">=2.18.0,<3.0.0dev\"\nsetuptools = \">=34.0.0\"\nsix = \">=1.10.0\"\n\n[package.extras]\ngrpc = [\"grpcio (>=1.29.0,<2.0dev)\"]\ngrpcgcp = [\"grpcio-gcp (>=0.2.2)\"]\ngrpcio-gcp = [\"grpcio-gcp (>=0.2.2)\"]\n\n[[package]]\nname = \"google-api-python-client\"\nversion = \"1.12.3\"\ndescription = \"Google API Client Library for Python\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*\"\nfiles = [\n    {file = \"google-api-python-client-1.12.3.tar.gz\", hash = \"sha256:844ef76bda585ea0ea2d5e7f8f9a0eb10d6e2eba66c4fea0210ec7843941cb1a\"},\n    {file = \"google_api_python_client-1.12.3-py2.py3-none-any.whl\", hash = \"sha256:5b3f4908c041f3109135841cf7e49fc4477f26f7d02b6db72753a17f8b338d01\"},\n]\n\n[package.dependencies]\ngoogle-api-core = \">=1.21.0,<2dev\"\ngoogle-auth = \">=1.16.0\"\ngoogle-auth-httplib2 = \">=0.0.3\"\nhttplib2 = \">=0.15.0,<1dev\"\nsix = \">=1.13.0,<2dev\"\nuritemplate = \">=3.0.0,<4dev\"\n\n[[package]]\nname = \"google-auth\"\nversion = \"1.22.0\"\ndescription = \"Google Authentication Library\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*\"\nfiles = [\n    {file = \"google-auth-1.22.0.tar.gz\", hash = \"sha256:a73e6fb6d232ed1293ef9a5301e6f8aada7880d19c65d7f63e130dc50ec05593\"},\n    {file = \"google_auth-1.22.0-py2.py3-none-any.whl\", hash = \"sha256:e86e72142d939a8d90a772947268aacc127ab7a1d1d6f3e0fecca7a8d74d8257\"},\n]\n\n[package.dependencies]\naiohttp = {version = \">=3.6.2,<4.0.0dev\", markers = \"python_version >= \\\"3.6\\\"\"}\ncachetools = \">=2.0.0,<5.0\"\npyasn1-modules = \">=0.2.1\"\nrsa = {version = \">=3.1.4,<5\", markers = \"python_version >= \\\"3.5\\\"\"}\nsetuptools = \">=40.3.0\"\nsix = \">=1.9.0\"\n\n[[package]]\nname = \"google-auth-httplib2\"\nversion = \"0.0.4\"\ndescription = \"Google Authentication Library: httplib2 transport\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"google-auth-httplib2-0.0.4.tar.gz\", hash = \"sha256:8d092cc60fb16517b12057ec0bba9185a96e3b7169d86ae12eae98e645b7bc39\"},\n    {file = \"google_auth_httplib2-0.0.4-py2.py3-none-any.whl\", hash = \"sha256:aeaff501738b289717fac1980db9711d77908a6c227f60e4aa1923410b43e2ee\"},\n]\n\n[package.dependencies]\ngoogle-auth = \"*\"\nhttplib2 = \">=0.9.1\"\nsix = \"*\"\n\n[[package]]\nname = \"googleapis-common-protos\"\nversion = \"1.52.0\"\ndescription = \"Common protobufs used in Google APIs\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*\"\nfiles = [\n    {file = \"googleapis-common-protos-1.52.0.tar.gz\", hash = \"sha256:560716c807117394da12cecb0a54da5a451b5cf9866f1d37e9a5e2329a665351\"},\n    {file = \"googleapis_common_protos-1.52.0-py2.py3-none-any.whl\", hash = \"sha256:c8961760f5aad9a711d37b675be103e0cc4e9a39327e0d6d857872f698403e24\"},\n]\n\n[package.dependencies]\nprotobuf = \">=3.6.0\"\n\n[package.extras]\ngrpc = [\"grpcio (>=1.0.0)\"]\n\n[[package]]\nname = \"greenlet\"\nversion = \"2.0.2\"\ndescription = \"Lightweight in-process concurrent programming\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*\"\nfiles = [\n    {file = \"greenlet-2.0.2-cp27-cp27m-macosx_10_14_x86_64.whl\", hash = \"sha256:bdfea8c661e80d3c1c99ad7c3ff74e6e87184895bbaca6ee8cc61209f8b9b85d\"},\n    {file = \"greenlet-2.0.2-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:9d14b83fab60d5e8abe587d51c75b252bcc21683f24699ada8fb275d7712f5a9\"},\n    {file = \"greenlet-2.0.2-cp27-cp27m-win32.whl\", hash = \"sha256:6c3acb79b0bfd4fe733dff8bc62695283b57949ebcca05ae5c129eb606ff2d74\"},\n    {file = \"greenlet-2.0.2-cp27-cp27m-win_amd64.whl\", hash = \"sha256:283737e0da3f08bd637b5ad058507e578dd462db259f7f6e4c5c365ba4ee9343\"},\n    {file = \"greenlet-2.0.2-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:d27ec7509b9c18b6d73f2f5ede2622441de812e7b1a80bbd446cb0633bd3d5ae\"},\n    {file = \"greenlet-2.0.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:d967650d3f56af314b72df7089d96cda1083a7fc2da05b375d2bc48c82ab3f3c\"},\n    {file = \"greenlet-2.0.2-cp310-cp310-macosx_11_0_x86_64.whl\", hash = \"sha256:30bcf80dda7f15ac77ba5af2b961bdd9dbc77fd4ac6105cee85b0d0a5fcf74df\"},\n    {file = \"greenlet-2.0.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:26fbfce90728d82bc9e6c38ea4d038cba20b7faf8a0ca53a9c07b67318d46088\"},\n    {file = \"greenlet-2.0.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9190f09060ea4debddd24665d6804b995a9c122ef5917ab26e1566dcc712ceeb\"},\n    {file = \"greenlet-2.0.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:d75209eed723105f9596807495d58d10b3470fa6732dd6756595e89925ce2470\"},\n    {file = \"greenlet-2.0.2-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:3a51c9751078733d88e013587b108f1b7a1fb106d402fb390740f002b6f6551a\"},\n    {file = \"greenlet-2.0.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:76ae285c8104046b3a7f06b42f29c7b73f77683df18c49ab5af7983994c2dd91\"},\n    {file = \"greenlet-2.0.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:2d4686f195e32d36b4d7cf2d166857dbd0ee9f3d20ae349b6bf8afc8485b3645\"},\n    {file = \"greenlet-2.0.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:c4302695ad8027363e96311df24ee28978162cdcdd2006476c43970b384a244c\"},\n    {file = \"greenlet-2.0.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:d4606a527e30548153be1a9f155f4e283d109ffba663a15856089fb55f933e47\"},\n    {file = \"greenlet-2.0.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c48f54ef8e05f04d6eff74b8233f6063cb1ed960243eacc474ee73a2ea8573ca\"},\n    {file = \"greenlet-2.0.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:a1846f1b999e78e13837c93c778dcfc3365902cfb8d1bdb7dd73ead37059f0d0\"},\n    {file = \"greenlet-2.0.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3a06ad5312349fec0ab944664b01d26f8d1f05009566339ac6f63f56589bc1a2\"},\n    {file = \"greenlet-2.0.2-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:eff4eb9b7eb3e4d0cae3d28c283dc16d9bed6b193c2e1ace3ed86ce48ea8df19\"},\n    {file = \"greenlet-2.0.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:5454276c07d27a740c5892f4907c86327b632127dd9abec42ee62e12427ff7e3\"},\n    {file = \"greenlet-2.0.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:7cafd1208fdbe93b67c7086876f061f660cfddc44f404279c1585bbf3cdc64c5\"},\n    {file = \"greenlet-2.0.2-cp35-cp35m-macosx_10_14_x86_64.whl\", hash = \"sha256:910841381caba4f744a44bf81bfd573c94e10b3045ee00de0cbf436fe50673a6\"},\n    {file = \"greenlet-2.0.2-cp35-cp35m-manylinux2010_x86_64.whl\", hash = \"sha256:18a7f18b82b52ee85322d7a7874e676f34ab319b9f8cce5de06067384aa8ff43\"},\n    {file = \"greenlet-2.0.2-cp35-cp35m-win32.whl\", hash = \"sha256:03a8f4f3430c3b3ff8d10a2a86028c660355ab637cee9333d63d66b56f09d52a\"},\n    {file = \"greenlet-2.0.2-cp35-cp35m-win_amd64.whl\", hash = \"sha256:4b58adb399c4d61d912c4c331984d60eb66565175cdf4a34792cd9600f21b394\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-macosx_10_14_x86_64.whl\", hash = \"sha256:703f18f3fda276b9a916f0934d2fb6d989bf0b4fb5a64825260eb9bfd52d78f0\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:32e5b64b148966d9cccc2c8d35a671409e45f195864560829f395a54226408d3\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:2dd11f291565a81d71dab10b7033395b7a3a5456e637cf997a6f33ebdf06f8db\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e0f72c9ddb8cd28532185f54cc1453f2c16fb417a08b53a855c4e6a418edd099\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:cd021c754b162c0fb55ad5d6b9d960db667faad0fa2ff25bb6e1301b0b6e6a75\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:3c9b12575734155d0c09d6c3e10dbd81665d5c18e1a7c6597df72fd05990c8cf\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:b9ec052b06a0524f0e35bd8790686a1da006bd911dd1ef7d50b77bfbad74e292\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-win32.whl\", hash = \"sha256:dbfcfc0218093a19c252ca8eb9aee3d29cfdcb586df21049b9d777fd32c14fd9\"},\n    {file = \"greenlet-2.0.2-cp36-cp36m-win_amd64.whl\", hash = \"sha256:9f35ec95538f50292f6d8f2c9c9f8a3c6540bbfec21c9e5b4b751e0a7c20864f\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-macosx_10_15_x86_64.whl\", hash = \"sha256:d5508f0b173e6aa47273bdc0a0b5ba055b59662ba7c7ee5119528f466585526b\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:f82d4d717d8ef19188687aa32b8363e96062911e63ba22a0cff7802a8e58e5f1\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c9c59a2120b55788e800d82dfa99b9e156ff8f2227f07c5e3012a45a399620b7\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:2780572ec463d44c1d3ae850239508dbeb9fed38e294c68d19a24d925d9223ca\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:937e9020b514ceedb9c830c55d5c9872abc90f4b5862f89c0887033ae33c6f73\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:36abbf031e1c0f79dd5d596bfaf8e921c41df2bdf54ee1eed921ce1f52999a86\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:18e98fb3de7dba1c0a852731c3070cf022d14f0d68b4c87a19cc1016f3bb8b33\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-win32.whl\", hash = \"sha256:3f6ea9bd35eb450837a3d80e77b517ea5bc56b4647f5502cd28de13675ee12f7\"},\n    {file = \"greenlet-2.0.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:7492e2b7bd7c9b9916388d9df23fa49d9b88ac0640db0a5b4ecc2b653bf451e3\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-macosx_10_15_x86_64.whl\", hash = \"sha256:b864ba53912b6c3ab6bcb2beb19f19edd01a6bfcbdfe1f37ddd1778abfe75a30\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:1087300cf9700bbf455b1b97e24db18f2f77b55302a68272c56209d5587c12d1\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:ba2956617f1c42598a308a84c6cf021a90ff3862eddafd20c3333d50f0edb45b\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:fc3a569657468b6f3fb60587e48356fe512c1754ca05a564f11366ac9e306526\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:8eab883b3b2a38cc1e050819ef06a7e6344d4a990d24d45bc6f2cf959045a45b\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:acd2162a36d3de67ee896c43effcd5ee3de247eb00354db411feb025aa319857\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:0bf60faf0bc2468089bdc5edd10555bab6e85152191df713e2ab1fcc86382b5a\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:b0ef99cdbe2b682b9ccbb964743a6aca37905fda5e0452e5ee239b1654d37f2a\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-win32.whl\", hash = \"sha256:b80f600eddddce72320dbbc8e3784d16bd3fb7b517e82476d8da921f27d4b249\"},\n    {file = \"greenlet-2.0.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:4d2e11331fc0c02b6e84b0d28ece3a36e0548ee1a1ce9ddde03752d9b79bba40\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:8512a0c38cfd4e66a858ddd1b17705587900dd760c6003998e9472b77b56d417\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-macosx_11_0_x86_64.whl\", hash = \"sha256:88d9ab96491d38a5ab7c56dd7a3cc37d83336ecc564e4e8816dbed12e5aaefc8\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:561091a7be172ab497a3527602d467e2b3fbe75f9e783d8b8ce403fa414f71a6\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:971ce5e14dc5e73715755d0ca2975ac88cfdaefcaab078a284fea6cfabf866df\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:be4ed120b52ae4d974aa40215fcdfde9194d63541c7ded40ee12eb4dda57b76b\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:94c817e84245513926588caf1152e3b559ff794d505555211ca041f032abbb6b\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:1a819eef4b0e0b96bb0d98d797bef17dc1b4a10e8d7446be32d1da33e095dbb8\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:7efde645ca1cc441d6dc4b48c0f7101e8d86b54c8530141b09fd31cef5149ec9\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-win32.whl\", hash = \"sha256:ea9872c80c132f4663822dd2a08d404073a5a9b5ba6155bea72fb2a79d1093b5\"},\n    {file = \"greenlet-2.0.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:db1a39669102a1d8d12b57de2bb7e2ec9066a6f2b3da35ae511ff93b01b5d564\"},\n    {file = \"greenlet-2.0.2.tar.gz\", hash = \"sha256:e7c8dc13af7db097bed64a051d2dd49e9f0af495c26995c00a9ee842690d34c0\"},\n]\n\n[package.extras]\ndocs = [\"Sphinx\", \"docutils (<0.18)\"]\ntest = [\"objgraph\", \"psutil\"]\n\n[[package]]\nname = \"gunicorn\"\nversion = \"20.0.4\"\ndescription = \"WSGI HTTP Server for UNIX\"\noptional = false\npython-versions = \">=3.4\"\nfiles = [\n    {file = \"gunicorn-20.0.4-py2.py3-none-any.whl\", hash = \"sha256:cd4a810dd51bf497552cf3f863b575dabd73d6ad6a91075b65936b151cbf4f9c\"},\n    {file = \"gunicorn-20.0.4.tar.gz\", hash = \"sha256:1904bb2b8a43658807108d59c3f3d56c2b6121a701161de0ddf9ad140073c626\"},\n]\n\n[package.dependencies]\nsetuptools = \">=3.0\"\n\n[package.extras]\neventlet = [\"eventlet (>=0.9.7)\"]\ngevent = [\"gevent (>=0.13)\"]\nsetproctitle = [\"setproctitle\"]\ntornado = [\"tornado (>=0.2)\"]\n\n[[package]]\nname = \"html-tag-names\"\nversion = \"0.1.2\"\ndescription = \"List of known HTML tag names\"\noptional = false\npython-versions = \">=3.7,<4.0\"\nfiles = [\n    {file = \"html-tag-names-0.1.2.tar.gz\", hash = \"sha256:04924aca48770f36b5a41c27e4d917062507be05118acb0ba869c97389084297\"},\n    {file = \"html_tag_names-0.1.2-py3-none-any.whl\", hash = \"sha256:eeb69ef21078486b615241f0393a72b41352c5219ee648e7c61f5632d26f0420\"},\n]\n\n[[package]]\nname = \"html-void-elements\"\nversion = \"0.1.0\"\ndescription = \"List of HTML void tag names.\"\noptional = false\npython-versions = \">=3.7,<4.0\"\nfiles = [\n    {file = \"html-void-elements-0.1.0.tar.gz\", hash = \"sha256:931b88f84cd606fee0b582c28fcd00e41d7149421fb673e1e1abd2f0c4f231f0\"},\n    {file = \"html_void_elements-0.1.0-py3-none-any.whl\", hash = \"sha256:784cf39db03cdeb017320d9301009f8f3480f9d7b254d0974272e80e0cb5e0d2\"},\n]\n\n[[package]]\nname = \"httplib2\"\nversion = \"0.22.0\"\ndescription = \"A comprehensive HTTP client library.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"httplib2-0.22.0-py3-none-any.whl\", hash = \"sha256:14ae0a53c1ba8f3d37e9e27cf37eabb0fb9980f435ba405d546948b009dd64dc\"},\n    {file = \"httplib2-0.22.0.tar.gz\", hash = \"sha256:d7a10bc5ef5ab08322488bde8c726eeee5c8618723fdb399597ec58f3d82df81\"},\n]\n\n[package.dependencies]\npyparsing = {version = \">=2.4.2,<3.0.0 || >3.0.0,<3.0.1 || >3.0.1,<3.0.2 || >3.0.2,<3.0.3 || >3.0.3,<4\", markers = \"python_version > \\\"3.0\\\"\"}\n\n[[package]]\nname = \"humanfriendly\"\nversion = \"8.2\"\ndescription = \"Human friendly output for text interfaces using Python\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"humanfriendly-8.2-py2.py3-none-any.whl\", hash = \"sha256:e78960b31198511f45fd455534ae7645a6207d33e512d2e842c766d15d9c8080\"},\n    {file = \"humanfriendly-8.2.tar.gz\", hash = \"sha256:bf52ec91244819c780341a3438d5d7b09f431d3f113a475147ac9b7b167a3d12\"},\n]\n\n[package.dependencies]\npyreadline = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\n\n[[package]]\nname = \"identify\"\nversion = \"2.6.0\"\ndescription = \"File identification library for Python\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"identify-2.6.0-py2.py3-none-any.whl\", hash = \"sha256:e79ae4406387a9d300332b5fd366d8994f1525e8414984e1a59e058b2eda2dd0\"},\n    {file = \"identify-2.6.0.tar.gz\", hash = \"sha256:cb171c685bdc31bcc4c1734698736a7d5b6c8bf2e0c15117f4d469c8640ae5cf\"},\n]\n\n[package.extras]\nlicense = [\"ukkonen\"]\n\n[[package]]\nname = \"idna\"\nversion = \"2.10\"\ndescription = \"Internationalized Domain Names in Applications (IDNA)\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"idna-2.10-py2.py3-none-any.whl\", hash = \"sha256:b97d804b1e9b523befed77c48dacec60e6dcb0b5391d57af6a65a312a90648c0\"},\n    {file = \"idna-2.10.tar.gz\", hash = \"sha256:b307872f855b18632ce0c21c5e45be78c0ea7ae4c15c828c20788b26921eb3f6\"},\n]\n\n[[package]]\nname = \"iniconfig\"\nversion = \"1.0.1\"\ndescription = \"iniconfig: brain-dead simple config-ini parsing\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"iniconfig-1.0.1-py3-none-any.whl\", hash = \"sha256:80cf40c597eb564e86346103f609d74efce0f6b4d4f30ec8ce9e2c26411ba437\"},\n    {file = \"iniconfig-1.0.1.tar.gz\", hash = \"sha256:e5f92f89355a67de0595932a6c6c02ab4afddc6fcdc0bfc5becd0d60884d3f69\"},\n]\n\n[[package]]\nname = \"ipython\"\nversion = \"7.31.1\"\ndescription = \"IPython: Productive Interactive Computing\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"ipython-7.31.1-py3-none-any.whl\", hash = \"sha256:55df3e0bd0f94e715abd968bedd89d4e8a7bce4bf498fb123fed4f5398fea874\"},\n    {file = \"ipython-7.31.1.tar.gz\", hash = \"sha256:b5548ec5329a4bcf054a5deed5099b0f9622eb9ea51aaa7104d215fece201d8c\"},\n]\n\n[package.dependencies]\nappnope = {version = \"*\", markers = \"sys_platform == \\\"darwin\\\"\"}\nbackcall = \"*\"\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\ndecorator = \"*\"\njedi = \">=0.16\"\nmatplotlib-inline = \"*\"\npexpect = {version = \">4.3\", markers = \"sys_platform != \\\"win32\\\"\"}\npickleshare = \"*\"\nprompt-toolkit = \">=2.0.0,<3.0.0 || >3.0.0,<3.0.1 || >3.0.1,<3.1.0\"\npygments = \"*\"\nsetuptools = \">=18.5\"\ntraitlets = \">=4.2\"\n\n[package.extras]\nall = [\"Sphinx (>=1.3)\", \"ipykernel\", \"ipyparallel\", \"ipywidgets\", \"nbconvert\", \"nbformat\", \"nose (>=0.10.1)\", \"notebook\", \"numpy (>=1.17)\", \"pygments\", \"qtconsole\", \"requests\", \"testpath\"]\ndoc = [\"Sphinx (>=1.3)\"]\nkernel = [\"ipykernel\"]\nnbconvert = [\"nbconvert\"]\nnbformat = [\"nbformat\"]\nnotebook = [\"ipywidgets\", \"notebook\"]\nparallel = [\"ipyparallel\"]\nqtconsole = [\"qtconsole\"]\ntest = [\"ipykernel\", \"nbformat\", \"nose (>=0.10.1)\", \"numpy (>=1.17)\", \"pygments\", \"requests\", \"testpath\"]\n\n[[package]]\nname = \"ipython-genutils\"\nversion = \"0.2.0\"\ndescription = \"Vestigial utilities from IPython\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"ipython_genutils-0.2.0-py2.py3-none-any.whl\", hash = \"sha256:72dd37233799e619666c9f639a9da83c34013a73e8bbc79a7a6348d93c61fab8\"},\n    {file = \"ipython_genutils-0.2.0.tar.gz\", hash = \"sha256:eb2e116e75ecef9d4d228fdc66af54269afa26ab4463042e33785b887c628ba8\"},\n]\n\n[[package]]\nname = \"isort\"\nversion = \"5.10.1\"\ndescription = \"A Python utility / library to sort Python imports.\"\noptional = false\npython-versions = \">=3.6.1,<4.0\"\nfiles = [\n    {file = \"isort-5.10.1-py3-none-any.whl\", hash = \"sha256:6f62d78e2f89b4500b080fe3a81690850cd254227f27f75c3a0c491a1f351ba7\"},\n    {file = \"isort-5.10.1.tar.gz\", hash = \"sha256:e8443a5e7a020e9d7f97f1d7d9cd17c88bcb3bc7e218bf9cf5095fe550be2951\"},\n]\n\n[package.extras]\ncolors = [\"colorama (>=0.4.3,<0.5.0)\"]\npipfile-deprecated-finder = [\"pipreqs\", \"requirementslib\"]\nplugins = [\"setuptools\"]\nrequirements-deprecated-finder = [\"pip-api\", \"pipreqs\"]\n\n[[package]]\nname = \"itsdangerous\"\nversion = \"1.1.0\"\ndescription = \"Various helpers to pass data to untrusted environments and back.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"itsdangerous-1.1.0-py2.py3-none-any.whl\", hash = \"sha256:b12271b2047cb23eeb98c8b5622e2e5c5e9abd9784a153e9d8ef9cb4dd09d749\"},\n    {file = \"itsdangerous-1.1.0.tar.gz\", hash = \"sha256:321b033d07f2a4136d3ec762eac9f16a10ccd60f53c0c91af90217ace7ba1f19\"},\n]\n\n[[package]]\nname = \"jedi\"\nversion = \"0.17.2\"\ndescription = \"An autocompletion tool for Python that can be used for text editors.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"jedi-0.17.2-py2.py3-none-any.whl\", hash = \"sha256:98cc583fa0f2f8304968199b01b6b4b94f469a1f4a74c1560506ca2a211378b5\"},\n    {file = \"jedi-0.17.2.tar.gz\", hash = \"sha256:86ed7d9b750603e4ba582ea8edc678657fb4007894a12bcf6f4bb97892f31d20\"},\n]\n\n[package.dependencies]\nparso = \">=0.7.0,<0.8.0\"\n\n[package.extras]\nqa = [\"flake8 (==3.7.9)\"]\ntesting = [\"Django (<3.1)\", \"colorama\", \"docopt\", \"pytest (>=3.9.0,<5.0.0)\"]\n\n[[package]]\nname = \"jinja2\"\nversion = \"2.11.3\"\ndescription = \"A very fast and expressive template engine.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"Jinja2-2.11.3-py2.py3-none-any.whl\", hash = \"sha256:03e47ad063331dd6a3f04a43eddca8a966a26ba0c5b7207a9a9e4e08f1b29419\"},\n    {file = \"Jinja2-2.11.3.tar.gz\", hash = \"sha256:a6d58433de0ae800347cab1fa3043cebbabe8baa9d29e668f1c768cb87a333c6\"},\n]\n\n[package.dependencies]\nMarkupSafe = \">=0.23\"\n\n[package.extras]\ni18n = [\"Babel (>=0.8)\"]\n\n[[package]]\nname = \"jmespath\"\nversion = \"0.10.0\"\ndescription = \"JSON Matching Expressions\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*\"\nfiles = [\n    {file = \"jmespath-0.10.0-py2.py3-none-any.whl\", hash = \"sha256:cdf6525904cc597730141d61b36f2e4b8ecc257c420fa2f4549bac2c2d0cb72f\"},\n    {file = \"jmespath-0.10.0.tar.gz\", hash = \"sha256:b85d0567b8666149a93172712e68920734333c0ce7e89b78b3e987f71e5ed4f9\"},\n]\n\n[[package]]\nname = \"jsbeautifier\"\nversion = \"1.15.1\"\ndescription = \"JavaScript unobfuscator and beautifier.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"jsbeautifier-1.15.1.tar.gz\", hash = \"sha256:ebd733b560704c602d744eafc839db60a1ee9326e30a2a80c4adb8718adc1b24\"},\n]\n\n[package.dependencies]\neditorconfig = \">=0.12.2\"\nsix = \">=1.13.0\"\n\n[[package]]\nname = \"json5\"\nversion = \"0.9.25\"\ndescription = \"A Python implementation of the JSON5 data format.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"json5-0.9.25-py3-none-any.whl\", hash = \"sha256:34ed7d834b1341a86987ed52f3f76cd8ee184394906b6e22a1e0deb9ab294e8f\"},\n    {file = \"json5-0.9.25.tar.gz\", hash = \"sha256:548e41b9be043f9426776f05df8635a00fe06104ea51ed24b67f908856e151ae\"},\n]\n\n[[package]]\nname = \"jwcrypto\"\nversion = \"0.8\"\ndescription = \"Implementation of JOSE Web standards\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"jwcrypto-0.8-py2.py3-none-any.whl\", hash = \"sha256:16e17faa4dce36551ade3a3ccb06236a61e5924ea1db163c9be9827acf935a82\"},\n    {file = \"jwcrypto-0.8.tar.gz\", hash = \"sha256:b7fee2635bbefdf145399392f5be26ad54161c8271c66b5fe107b4b452f06c24\"},\n]\n\n[package.dependencies]\ncryptography = \">=2.3\"\n\n[[package]]\nname = \"lazy-object-proxy\"\nversion = \"1.7.1\"\ndescription = \"A fast and thorough lazy object proxy.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"lazy-object-proxy-1.7.1.tar.gz\", hash = \"sha256:d609c75b986def706743cdebe5e47553f4a5a1da9c5ff66d76013ef396b5a8a4\"},\n    {file = \"lazy_object_proxy-1.7.1-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:bb8c5fd1684d60a9902c60ebe276da1f2281a318ca16c1d0a96db28f62e9166b\"},\n    {file = \"lazy_object_proxy-1.7.1-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a57d51ed2997e97f3b8e3500c984db50a554bb5db56c50b5dab1b41339b37e36\"},\n    {file = \"lazy_object_proxy-1.7.1-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:fd45683c3caddf83abbb1249b653a266e7069a09f486daa8863fb0e7496a9fdb\"},\n    {file = \"lazy_object_proxy-1.7.1-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:8561da8b3dd22d696244d6d0d5330618c993a215070f473b699e00cf1f3f6443\"},\n    {file = \"lazy_object_proxy-1.7.1-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:fccdf7c2c5821a8cbd0a9440a456f5050492f2270bd54e94360cac663398739b\"},\n    {file = \"lazy_object_proxy-1.7.1-cp310-cp310-win32.whl\", hash = \"sha256:898322f8d078f2654d275124a8dd19b079080ae977033b713f677afcfc88e2b9\"},\n    {file = \"lazy_object_proxy-1.7.1-cp310-cp310-win_amd64.whl\", hash = \"sha256:85b232e791f2229a4f55840ed54706110c80c0a210d076eee093f2b2e33e1bfd\"},\n    {file = \"lazy_object_proxy-1.7.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:46ff647e76f106bb444b4533bb4153c7370cdf52efc62ccfc1a28bdb3cc95442\"},\n    {file = \"lazy_object_proxy-1.7.1-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:12f3bb77efe1367b2515f8cb4790a11cffae889148ad33adad07b9b55e0ab22c\"},\n    {file = \"lazy_object_proxy-1.7.1-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c19814163728941bb871240d45c4c30d33b8a2e85972c44d4e63dd7107faba44\"},\n    {file = \"lazy_object_proxy-1.7.1-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:e40f2013d96d30217a51eeb1db28c9ac41e9d0ee915ef9d00da639c5b63f01a1\"},\n    {file = \"lazy_object_proxy-1.7.1-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:2052837718516a94940867e16b1bb10edb069ab475c3ad84fd1e1a6dd2c0fcfc\"},\n    {file = \"lazy_object_proxy-1.7.1-cp36-cp36m-win32.whl\", hash = \"sha256:6a24357267aa976abab660b1d47a34aaf07259a0c3859a34e536f1ee6e76b5bb\"},\n    {file = \"lazy_object_proxy-1.7.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:6aff3fe5de0831867092e017cf67e2750c6a1c7d88d84d2481bd84a2e019ec35\"},\n    {file = \"lazy_object_proxy-1.7.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:6a6e94c7b02641d1311228a102607ecd576f70734dc3d5e22610111aeacba8a0\"},\n    {file = \"lazy_object_proxy-1.7.1-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c4ce15276a1a14549d7e81c243b887293904ad2d94ad767f42df91e75fd7b5b6\"},\n    {file = \"lazy_object_proxy-1.7.1-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e368b7f7eac182a59ff1f81d5f3802161932a41dc1b1cc45c1f757dc876b5d2c\"},\n    {file = \"lazy_object_proxy-1.7.1-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:6ecbb350991d6434e1388bee761ece3260e5228952b1f0c46ffc800eb313ff42\"},\n    {file = \"lazy_object_proxy-1.7.1-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:553b0f0d8dbf21890dd66edd771f9b1b5f51bd912fa5f26de4449bfc5af5e029\"},\n    {file = \"lazy_object_proxy-1.7.1-cp37-cp37m-win32.whl\", hash = \"sha256:c7a683c37a8a24f6428c28c561c80d5f4fd316ddcf0c7cab999b15ab3f5c5c69\"},\n    {file = \"lazy_object_proxy-1.7.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:df2631f9d67259dc9620d831384ed7732a198eb434eadf69aea95ad18c587a28\"},\n    {file = \"lazy_object_proxy-1.7.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:07fa44286cda977bd4803b656ffc1c9b7e3bc7dff7d34263446aec8f8c96f88a\"},\n    {file = \"lazy_object_proxy-1.7.1-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:4dca6244e4121c74cc20542c2ca39e5c4a5027c81d112bfb893cf0790f96f57e\"},\n    {file = \"lazy_object_proxy-1.7.1-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:91ba172fc5b03978764d1df5144b4ba4ab13290d7bab7a50f12d8117f8630c38\"},\n    {file = \"lazy_object_proxy-1.7.1-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:043651b6cb706eee4f91854da4a089816a6606c1428fd391573ef8cb642ae4f7\"},\n    {file = \"lazy_object_proxy-1.7.1-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:b9e89b87c707dd769c4ea91f7a31538888aad05c116a59820f28d59b3ebfe25a\"},\n    {file = \"lazy_object_proxy-1.7.1-cp38-cp38-win32.whl\", hash = \"sha256:9d166602b525bf54ac994cf833c385bfcc341b364e3ee71e3bf5a1336e677b55\"},\n    {file = \"lazy_object_proxy-1.7.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:8f3953eb575b45480db6568306893f0bd9d8dfeeebd46812aa09ca9579595148\"},\n    {file = \"lazy_object_proxy-1.7.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:dd7ed7429dbb6c494aa9bc4e09d94b778a3579be699f9d67da7e6804c422d3de\"},\n    {file = \"lazy_object_proxy-1.7.1-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:70ed0c2b380eb6248abdef3cd425fc52f0abd92d2b07ce26359fcbc399f636ad\"},\n    {file = \"lazy_object_proxy-1.7.1-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7096a5e0c1115ec82641afbdd70451a144558ea5cf564a896294e346eb611be1\"},\n    {file = \"lazy_object_proxy-1.7.1-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:f769457a639403073968d118bc70110e7dce294688009f5c24ab78800ae56dc8\"},\n    {file = \"lazy_object_proxy-1.7.1-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:39b0e26725c5023757fc1ab2a89ef9d7ab23b84f9251e28f9cc114d5b59c1b09\"},\n    {file = \"lazy_object_proxy-1.7.1-cp39-cp39-win32.whl\", hash = \"sha256:2130db8ed69a48a3440103d4a520b89d8a9405f1b06e2cc81640509e8bf6548f\"},\n    {file = \"lazy_object_proxy-1.7.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:677ea950bef409b47e51e733283544ac3d660b709cfce7b187f5ace137960d61\"},\n    {file = \"lazy_object_proxy-1.7.1-pp37.pp38-none-any.whl\", hash = \"sha256:d66906d5785da8e0be7360912e99c9188b70f52c422f9fc18223347235691a84\"},\n]\n\n[[package]]\nname = \"limits\"\nversion = \"1.5.1\"\ndescription = \"Rate limiting utilities\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"limits-1.5.1-py2-none-any.whl\", hash = \"sha256:0e5f8b10f18dd809eb2342f5046eb9aa5e4e69a0258567b5f4aa270647d438b3\"},\n    {file = \"limits-1.5.1.tar.gz\", hash = \"sha256:f0c3319f032c4bfad68438ed1325c0fac86dac64582c7c25cddc87a0b658fa20\"},\n]\n\n[package.dependencies]\nsix = \">=1.4.1\"\n\n[[package]]\nname = \"loguru\"\nversion = \"0.7.2\"\ndescription = \"Python logging made (stupidly) simple\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"loguru-0.7.2-py3-none-any.whl\", hash = \"sha256:003d71e3d3ed35f0f8984898359d65b79e5b21943f78af86aa5491210429b8eb\"},\n    {file = \"loguru-0.7.2.tar.gz\", hash = \"sha256:e671a53522515f34fd406340ee968cb9ecafbc4b36c679da03c18fd8d0bd51ac\"},\n]\n\n[package.dependencies]\ncolorama = {version = \">=0.3.4\", markers = \"sys_platform == \\\"win32\\\"\"}\nwin32-setctime = {version = \">=1.0.0\", markers = \"sys_platform == \\\"win32\\\"\"}\n\n[package.extras]\ndev = [\"Sphinx (==7.2.5)\", \"colorama (==0.4.5)\", \"colorama (==0.4.6)\", \"exceptiongroup (==1.1.3)\", \"freezegun (==1.1.0)\", \"freezegun (==1.2.2)\", \"mypy (==v0.910)\", \"mypy (==v0.971)\", \"mypy (==v1.4.1)\", \"mypy (==v1.5.1)\", \"pre-commit (==3.4.0)\", \"pytest (==6.1.2)\", \"pytest (==7.4.0)\", \"pytest-cov (==2.12.1)\", \"pytest-cov (==4.1.0)\", \"pytest-mypy-plugins (==1.9.3)\", \"pytest-mypy-plugins (==3.0.0)\", \"sphinx-autobuild (==2021.3.14)\", \"sphinx-rtd-theme (==1.3.0)\", \"tox (==3.27.1)\", \"tox (==4.11.0)\"]\n\n[[package]]\nname = \"mako\"\nversion = \"1.2.4\"\ndescription = \"A super-fast templating language that borrows the best ideas from the existing templating languages.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"Mako-1.2.4-py3-none-any.whl\", hash = \"sha256:c97c79c018b9165ac9922ae4f32da095ffd3c4e6872b45eded42926deea46818\"},\n    {file = \"Mako-1.2.4.tar.gz\", hash = \"sha256:d60a3903dc3bb01a18ad6a89cdbe2e4eadc69c0bc8ef1e3773ba53d44c3f7a34\"},\n]\n\n[package.dependencies]\nMarkupSafe = \">=0.9.2\"\n\n[package.extras]\nbabel = [\"Babel\"]\nlingua = [\"lingua\"]\ntesting = [\"pytest\"]\n\n[[package]]\nname = \"markupsafe\"\nversion = \"1.1.1\"\ndescription = \"Safely add untrusted strings to HTML/XML markup.\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*\"\nfiles = [\n    {file = \"MarkupSafe-1.1.1-cp27-cp27m-macosx_10_6_intel.whl\", hash = \"sha256:09027a7803a62ca78792ad89403b1b7a73a01c8cb65909cd876f7fcebd79b161\"},\n    {file = \"MarkupSafe-1.1.1-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:e249096428b3ae81b08327a63a485ad0878de3fb939049038579ac0ef61e17e7\"},\n    {file = \"MarkupSafe-1.1.1-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:500d4957e52ddc3351cabf489e79c91c17f6e0899158447047588650b5e69183\"},\n    {file = \"MarkupSafe-1.1.1-cp27-cp27m-win32.whl\", hash = \"sha256:b2051432115498d3562c084a49bba65d97cf251f5a331c64a12ee7e04dacc51b\"},\n    {file = \"MarkupSafe-1.1.1-cp27-cp27m-win_amd64.whl\", hash = \"sha256:98c7086708b163d425c67c7a91bad6e466bb99d797aa64f965e9d25c12111a5e\"},\n    {file = \"MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:cd5df75523866410809ca100dc9681e301e3c27567cf498077e8551b6d20e42f\"},\n    {file = \"MarkupSafe-1.1.1-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:43a55c2930bbc139570ac2452adf3d70cdbb3cfe5912c71cdce1c2c6bbd9c5d1\"},\n    {file = \"MarkupSafe-1.1.1-cp34-cp34m-macosx_10_6_intel.whl\", hash = \"sha256:1027c282dad077d0bae18be6794e6b6b8c91d58ed8a8d89a89d59693b9131db5\"},\n    {file = \"MarkupSafe-1.1.1-cp34-cp34m-manylinux1_i686.whl\", hash = \"sha256:62fe6c95e3ec8a7fad637b7f3d372c15ec1caa01ab47926cfdf7a75b40e0eac1\"},\n    {file = \"MarkupSafe-1.1.1-cp34-cp34m-manylinux1_x86_64.whl\", hash = \"sha256:88e5fcfb52ee7b911e8bb6d6aa2fd21fbecc674eadd44118a9cc3863f938e735\"},\n    {file = \"MarkupSafe-1.1.1-cp34-cp34m-win32.whl\", hash = \"sha256:ade5e387d2ad0d7ebf59146cc00c8044acbd863725f887353a10df825fc8ae21\"},\n    {file = \"MarkupSafe-1.1.1-cp34-cp34m-win_amd64.whl\", hash = \"sha256:09c4b7f37d6c648cb13f9230d847adf22f8171b1ccc4d5682398e77f40309235\"},\n    {file = \"MarkupSafe-1.1.1-cp35-cp35m-macosx_10_6_intel.whl\", hash = \"sha256:79855e1c5b8da654cf486b830bd42c06e8780cea587384cf6545b7d9ac013a0b\"},\n    {file = \"MarkupSafe-1.1.1-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:c8716a48d94b06bb3b2524c2b77e055fb313aeb4ea620c8dd03a105574ba704f\"},\n    {file = \"MarkupSafe-1.1.1-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:7c1699dfe0cf8ff607dbdcc1e9b9af1755371f92a68f706051cc8c37d447c905\"},\n    {file = \"MarkupSafe-1.1.1-cp35-cp35m-win32.whl\", hash = \"sha256:6dd73240d2af64df90aa7c4e7481e23825ea70af4b4922f8ede5b9e35f78a3b1\"},\n    {file = \"MarkupSafe-1.1.1-cp35-cp35m-win_amd64.whl\", hash = \"sha256:9add70b36c5666a2ed02b43b335fe19002ee5235efd4b8a89bfcf9005bebac0d\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-macosx_10_6_intel.whl\", hash = \"sha256:24982cc2533820871eba85ba648cd53d8623687ff11cbb805be4ff7b4c971aff\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:d53bc011414228441014aa71dbec320c66468c1030aae3a6e29778a3382d96e5\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:00bc623926325b26bb9605ae9eae8a215691f33cae5df11ca5424f06f2d1f473\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:717ba8fe3ae9cc0006d7c451f0bb265ee07739daf76355d06366154ee68d221e\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-manylinux2010_i686.whl\", hash = \"sha256:3b8a6499709d29c2e2399569d96719a1b21dcd94410a586a18526b143ec8470f\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:84dee80c15f1b560d55bcfe6d47b27d070b4681c699c572af2e3c7cc90a3b8e0\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:b1dba4527182c95a0db8b6060cc98ac49b9e2f5e64320e2b56e47cb2831978c7\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-win32.whl\", hash = \"sha256:535f6fc4d397c1563d08b88e485c3496cf5784e927af890fb3c3aac7f933ec66\"},\n    {file = \"MarkupSafe-1.1.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:b1282f8c00509d99fef04d8ba936b156d419be841854fe901d8ae224c59f0be5\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-macosx_10_6_intel.whl\", hash = \"sha256:8defac2f2ccd6805ebf65f5eeb132adcf2ab57aa11fdf4c0dd5169a004710e7d\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:bf5aa3cbcfdf57fa2ee9cd1822c862ef23037f5c832ad09cfea57fa846dec193\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:46c99d2de99945ec5cb54f23c8cd5689f6d7177305ebff350a58ce5f8de1669e\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:ba59edeaa2fc6114428f1637ffff42da1e311e29382d81b339c1817d37ec93c6\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-manylinux2010_i686.whl\", hash = \"sha256:6fffc775d90dcc9aed1b89219549b329a9250d918fd0b8fa8d93d154918422e1\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:a6a744282b7718a2a62d2ed9d993cad6f5f585605ad352c11de459f4108df0a1\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:195d7d2c4fbb0ee8139a6cf67194f3973a6b3042d742ebe0a9ed36d8b6f0c07f\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-win32.whl\", hash = \"sha256:b00c1de48212e4cc9603895652c5c410df699856a2853135b3967591e4beebc2\"},\n    {file = \"MarkupSafe-1.1.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:9bf40443012702a1d2070043cb6291650a0841ece432556f784f004937f0f32c\"},\n    {file = \"MarkupSafe-1.1.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:6788b695d50a51edb699cb55e35487e430fa21f1ed838122d722e0ff0ac5ba15\"},\n    {file = \"MarkupSafe-1.1.1-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:cdb132fc825c38e1aeec2c8aa9338310d29d337bebbd7baa06889d09a60a1fa2\"},\n    {file = \"MarkupSafe-1.1.1-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:13d3144e1e340870b25e7b10b98d779608c02016d5184cfb9927a9f10c689f42\"},\n    {file = \"MarkupSafe-1.1.1-cp38-cp38-manylinux2010_i686.whl\", hash = \"sha256:acf08ac40292838b3cbbb06cfe9b2cb9ec78fce8baca31ddb87aaac2e2dc3bc2\"},\n    {file = \"MarkupSafe-1.1.1-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:d9be0ba6c527163cbed5e0857c451fcd092ce83947944d6c14bc95441203f032\"},\n    {file = \"MarkupSafe-1.1.1-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:caabedc8323f1e93231b52fc32bdcde6db817623d33e100708d9a68e1f53b26b\"},\n    {file = \"MarkupSafe-1.1.1-cp38-cp38-win32.whl\", hash = \"sha256:596510de112c685489095da617b5bcbbac7dd6384aeebeda4df6025d0256a81b\"},\n    {file = \"MarkupSafe-1.1.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:e8313f01ba26fbbe36c7be1966a7b7424942f670f38e666995b88d012765b9be\"},\n    {file = \"MarkupSafe-1.1.1-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:d73a845f227b0bfe8a7455ee623525ee656a9e2e749e4742706d80a6065d5e2c\"},\n    {file = \"MarkupSafe-1.1.1-cp39-cp39-manylinux1_i686.whl\", hash = \"sha256:98bae9582248d6cf62321dcb52aaf5d9adf0bad3b40582925ef7c7f0ed85fceb\"},\n    {file = \"MarkupSafe-1.1.1-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:2beec1e0de6924ea551859edb9e7679da6e4870d32cb766240ce17e0a0ba2014\"},\n    {file = \"MarkupSafe-1.1.1-cp39-cp39-manylinux2010_i686.whl\", hash = \"sha256:7fed13866cf14bba33e7176717346713881f56d9d2bcebab207f7a036f41b850\"},\n    {file = \"MarkupSafe-1.1.1-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:6f1e273a344928347c1290119b493a1f0303c52f5a5eae5f16d74f48c15d4a85\"},\n    {file = \"MarkupSafe-1.1.1-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:feb7b34d6325451ef96bc0e36e1a6c0c1c64bc1fbec4b854f4529e51887b1621\"},\n    {file = \"MarkupSafe-1.1.1-cp39-cp39-win32.whl\", hash = \"sha256:22c178a091fc6630d0d045bdb5992d2dfe14e3259760e713c490da5323866c39\"},\n    {file = \"MarkupSafe-1.1.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:b7d644ddb4dbd407d31ffb699f1d140bc35478da613b441c582aeb7c43838dd8\"},\n    {file = \"MarkupSafe-1.1.1.tar.gz\", hash = \"sha256:29872e92839765e546828bb7754a68c418d927cd064fd4708fab9fe9c8bb116b\"},\n]\n\n[[package]]\nname = \"matplotlib-inline\"\nversion = \"0.1.3\"\ndescription = \"Inline Matplotlib backend for Jupyter\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"matplotlib-inline-0.1.3.tar.gz\", hash = \"sha256:a04bfba22e0d1395479f866853ec1ee28eea1485c1d69a6faf00dc3e24ff34ee\"},\n    {file = \"matplotlib_inline-0.1.3-py3-none-any.whl\", hash = \"sha256:aed605ba3b72462d64d475a21a9296f400a19c4f74a31b59103d2a99ffd5aa5c\"},\n]\n\n[package.dependencies]\ntraitlets = \"*\"\n\n[[package]]\nname = \"mccabe\"\nversion = \"0.7.0\"\ndescription = \"McCabe checker, plugin for flake8\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"mccabe-0.7.0-py2.py3-none-any.whl\", hash = \"sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e\"},\n    {file = \"mccabe-0.7.0.tar.gz\", hash = \"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\"},\n]\n\n[[package]]\nname = \"memory-profiler\"\nversion = \"0.57.0\"\ndescription = \"A module for monitoring memory usage of a python program\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"memory_profiler-0.57.0.tar.gz\", hash = \"sha256:23b196f91ea9ac9996e30bfab1e82fecc30a4a1d24870e81d1e81625f786a2c3\"},\n]\n\n[package.dependencies]\npsutil = \"*\"\n\n[[package]]\nname = \"multidict\"\nversion = \"4.7.6\"\ndescription = \"multidict implementation\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"multidict-4.7.6-cp35-cp35m-macosx_10_14_x86_64.whl\", hash = \"sha256:275ca32383bc5d1894b6975bb4ca6a7ff16ab76fa622967625baeebcf8079000\"},\n    {file = \"multidict-4.7.6-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:1ece5a3369835c20ed57adadc663400b5525904e53bae59ec854a5d36b39b21a\"},\n    {file = \"multidict-4.7.6-cp35-cp35m-win32.whl\", hash = \"sha256:5141c13374e6b25fe6bf092052ab55c0c03d21bd66c94a0e3ae371d3e4d865a5\"},\n    {file = \"multidict-4.7.6-cp35-cp35m-win_amd64.whl\", hash = \"sha256:9456e90649005ad40558f4cf51dbb842e32807df75146c6d940b6f5abb4a78f3\"},\n    {file = \"multidict-4.7.6-cp36-cp36m-macosx_10_14_x86_64.whl\", hash = \"sha256:e0d072ae0f2a179c375f67e3da300b47e1a83293c554450b29c900e50afaae87\"},\n    {file = \"multidict-4.7.6-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:3750f2205b800aac4bb03b5ae48025a64e474d2c6cc79547988ba1d4122a09e2\"},\n    {file = \"multidict-4.7.6-cp36-cp36m-win32.whl\", hash = \"sha256:f07acae137b71af3bb548bd8da720956a3bc9f9a0b87733e0899226a2317aeb7\"},\n    {file = \"multidict-4.7.6-cp36-cp36m-win_amd64.whl\", hash = \"sha256:6513728873f4326999429a8b00fc7ceddb2509b01d5fd3f3be7881a257b8d463\"},\n    {file = \"multidict-4.7.6-cp37-cp37m-macosx_10_14_x86_64.whl\", hash = \"sha256:feed85993dbdb1dbc29102f50bca65bdc68f2c0c8d352468c25b54874f23c39d\"},\n    {file = \"multidict-4.7.6-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:fcfbb44c59af3f8ea984de67ec7c306f618a3ec771c2843804069917a8f2e255\"},\n    {file = \"multidict-4.7.6-cp37-cp37m-win32.whl\", hash = \"sha256:4538273208e7294b2659b1602490f4ed3ab1c8cf9dbdd817e0e9db8e64be2507\"},\n    {file = \"multidict-4.7.6-cp37-cp37m-win_amd64.whl\", hash = \"sha256:d14842362ed4cf63751648e7672f7174c9818459d169231d03c56e84daf90b7c\"},\n    {file = \"multidict-4.7.6-cp38-cp38-macosx_10_14_x86_64.whl\", hash = \"sha256:c026fe9a05130e44157b98fea3ab12969e5b60691a276150db9eda71710cd10b\"},\n    {file = \"multidict-4.7.6-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:51a4d210404ac61d32dada00a50ea7ba412e6ea945bbe992e4d7a595276d2ec7\"},\n    {file = \"multidict-4.7.6-cp38-cp38-win32.whl\", hash = \"sha256:5cf311a0f5ef80fe73e4f4c0f0998ec08f954a6ec72b746f3c179e37de1d210d\"},\n    {file = \"multidict-4.7.6-cp38-cp38-win_amd64.whl\", hash = \"sha256:7388d2ef3c55a8ba80da62ecfafa06a1c097c18032a501ffd4cabbc52d7f2b19\"},\n    {file = \"multidict-4.7.6.tar.gz\", hash = \"sha256:fbb77a75e529021e7c4a8d4e823d88ef4d23674a202be4f5addffc72cbb91430\"},\n]\n\n[[package]]\nname = \"mypy-extensions\"\nversion = \"0.4.3\"\ndescription = \"Experimental type system extensions for programs checked with the mypy typechecker.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"mypy_extensions-0.4.3-py2.py3-none-any.whl\", hash = \"sha256:090fedd75945a69ae91ce1303b5824f428daf5a028d2f6ab8a299250a846f15d\"},\n    {file = \"mypy_extensions-0.4.3.tar.gz\", hash = \"sha256:2d82818f5bb3e369420cb3c4060a7970edba416647068eb4c5343488a6c604a8\"},\n]\n\n[[package]]\nname = \"newrelic\"\nversion = \"8.8.0\"\ndescription = \"New Relic Python Agent\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*\"\nfiles = [\n    {file = \"newrelic-8.8.0-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:9c0d5153b7363d5cb5cac7f8d1a4e03669b074afee2dda201851a67c7bed1e32\"},\n    {file = \"newrelic-8.8.0-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:d21af16cee1e0caf4c73c4c1b2d7ba9f33fe6a870d93135dc8b23ac592f49b38\"},\n    {file = \"newrelic-8.8.0-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:435ac9e3791f78e05c9da8107a6ef49c13e62ac302696858fa2411198fe201ff\"},\n    {file = \"newrelic-8.8.0-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:6662ec79493f23f9d0995a015177c87508bea4c541f7c9f17a61b503b82e1367\"},\n    {file = \"newrelic-8.8.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:6b4db0e7544232d4e6e835a02ee28637970576f8dce82ffcaa3d675246e822d5\"},\n    {file = \"newrelic-8.8.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9355f209ba8d82fd0f9d78d7cc1d9bef0ae4677b3cfed7b7aaec521adbe87559\"},\n    {file = \"newrelic-8.8.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c4a0556c6ece49132ab1c32bfe398047a8311f9a8b6862b482495d132fcb0ad4\"},\n    {file = \"newrelic-8.8.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:caccdf201735df80b470ddf772f60a154f2c07c0c1b2b3f6e999d55e79ce601e\"},\n    {file = \"newrelic-8.8.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:da8f2dc31e182768fe314d8ceb6f42acd09956708846f8ae71f07f044a3aa05e\"},\n    {file = \"newrelic-8.8.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:67902b3c53fa497dba887068166261d114ac2347c8a4908d735d7594cca163dc\"},\n    {file = \"newrelic-8.8.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ef9c178329f8c04f0574908c1f04ff1f18b9eba55b869744583fee3eac48e571\"},\n    {file = \"newrelic-8.8.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:1bc307d06e2033637e7b484af22f540ca041fb23a54b311bcd5968ca1a64e4ef\"},\n    {file = \"newrelic-8.8.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:796ed5ff44b04b41e051dc0112e5016e53a37e39e95023c45ff7ecd34c254a7d\"},\n    {file = \"newrelic-8.8.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bcd3219e1e816a0fdb51ac993cac6744e6a835c13ee72e21d86bcbc2d16628ce\"},\n    {file = \"newrelic-8.8.0.tar.gz\", hash = \"sha256:84d1f71284efa5f1cae696161e0c3cb65eaa2f53116fe5e7c5a62be7d15d9536\"},\n]\n\n[package.extras]\ninfinite-tracing = [\"grpcio\", \"protobuf\"]\n\n[[package]]\nname = \"newrelic-telemetry-sdk\"\nversion = \"0.5.0\"\ndescription = \"New Relic Telemetry SDK\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"newrelic-telemetry-sdk-0.5.0.tar.gz\", hash = \"sha256:461ba12a54f3c44e85e89343d99f66228b4d4703cd2808cefc8fc0b83c97e4e7\"},\n    {file = \"newrelic_telemetry_sdk-0.5.0-py2.py3-none-any.whl\", hash = \"sha256:f7087b2d5a3d0e686532ae3dceaffcfb8e1bb4d372d598071438631c0c8af37b\"},\n]\n\n[package.dependencies]\nurllib3 = \">=1.7,<2\"\n\n[[package]]\nname = \"nodeenv\"\nversion = \"1.9.1\"\ndescription = \"Node.js virtual environment builder\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7\"\nfiles = [\n    {file = \"nodeenv-1.9.1-py2.py3-none-any.whl\", hash = \"sha256:ba11c9782d29c27c70ffbdda2d7415098754709be8a7056d79a737cd901155c9\"},\n    {file = \"nodeenv-1.9.1.tar.gz\", hash = \"sha256:6ec12890a2dab7946721edbfbcd91f3319c6ccc9aec47be7c7e6b7011ee6645f\"},\n]\n\n[[package]]\nname = \"oauthlib\"\nversion = \"3.1.0\"\ndescription = \"A generic, spec-compliant, thorough implementation of the OAuth request-signing logic\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"oauthlib-3.1.0-py2.py3-none-any.whl\", hash = \"sha256:df884cd6cbe20e32633f1db1072e9356f53638e4361bef4e8b03c9127c9328ea\"},\n    {file = \"oauthlib-3.1.0.tar.gz\", hash = \"sha256:bee41cc35fcca6e988463cacc3bcb8a96224f470ca547e697b604cc697b2f889\"},\n]\n\n[package.extras]\nrsa = [\"cryptography\"]\nsignals = [\"blinker\"]\nsignedtoken = [\"cryptography\", \"pyjwt (>=1.0.0)\"]\n\n[[package]]\nname = \"packaging\"\nversion = \"20.4\"\ndescription = \"Core utilities for Python packages\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"packaging-20.4-py2.py3-none-any.whl\", hash = \"sha256:998416ba6962ae7fbd6596850b80e17859a5753ba17c32284f67bfff33784181\"},\n    {file = \"packaging-20.4.tar.gz\", hash = \"sha256:4357f74f47b9c12db93624a82154e9b120fa8293699949152b22065d556079f8\"},\n]\n\n[package.dependencies]\npyparsing = \">=2.0.2\"\nsix = \"*\"\n\n[[package]]\nname = \"parso\"\nversion = \"0.7.1\"\ndescription = \"A Python Parser\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"parso-0.7.1-py2.py3-none-any.whl\", hash = \"sha256:97218d9159b2520ff45eb78028ba8b50d2bc61dcc062a9682666f2dc4bd331ea\"},\n    {file = \"parso-0.7.1.tar.gz\", hash = \"sha256:caba44724b994a8a5e086460bb212abc5a8bc46951bf4a9a1210745953622eb9\"},\n]\n\n[package.extras]\ntesting = [\"docopt\", \"pytest (>=3.0.7)\"]\n\n[[package]]\nname = \"pathspec\"\nversion = \"0.12.1\"\ndescription = \"Utility library for gitignore style pattern matching of file paths.\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"pathspec-0.12.1-py3-none-any.whl\", hash = \"sha256:a0d503e138a4c123b27490a4f7beda6a01c6f288df0e4a8b79c7eb0dc7b4cc08\"},\n    {file = \"pathspec-0.12.1.tar.gz\", hash = \"sha256:a482d51503a1ab33b1c67a6c3813a26953dbdc71c31dacaef9a838c4e29f5712\"},\n]\n\n[[package]]\nname = \"pexpect\"\nversion = \"4.8.0\"\ndescription = \"Pexpect allows easy control of interactive console applications.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pexpect-4.8.0-py2.py3-none-any.whl\", hash = \"sha256:0b48a55dcb3c05f3329815901ea4fc1537514d6ba867a152b581d69ae3710937\"},\n    {file = \"pexpect-4.8.0.tar.gz\", hash = \"sha256:fc65a43959d153d0114afe13997d439c22823a27cefceb5ff35c2178c6784c0c\"},\n]\n\n[package.dependencies]\nptyprocess = \">=0.5\"\n\n[[package]]\nname = \"pgpy\"\nversion = \"0.5.4\"\ndescription = \"Pretty Good Privacy for Python\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7\"\nfiles = [\n    {file = \"PGPy-0.5.4-py2.py3-none-any.whl\", hash = \"sha256:c29ad9b2bcba6575c3773410894e77a7552b6a3de184fd99b4da3995986f26a9\"},\n    {file = \"PGPy-0.5.4.tar.gz\", hash = \"sha256:bdd3da1e006fc8e81cc02232969924d6e8c98a4af1621a925d99bba09164183b\"},\n]\n\n[package.dependencies]\ncryptography = \">=2.6\"\npyasn1 = \"*\"\nsix = \">=1.9.0\"\n\n[[package]]\nname = \"phpserialize\"\nversion = \"1.3\"\ndescription = \"a port of the serialize and unserialize functions of php to python.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"phpserialize-1.3.tar.gz\", hash = \"sha256:bf672d312d203d09a84c26366fab8f438a3ffb355c407e69974b7ef2d39a0fa7\"},\n]\n\n[[package]]\nname = \"pickleshare\"\nversion = \"0.7.5\"\ndescription = \"Tiny 'shelve'-like database with concurrency support\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pickleshare-0.7.5-py2.py3-none-any.whl\", hash = \"sha256:9649af414d74d4df115d5d718f82acb59c9d418196b7b4290ed47a12ce62df56\"},\n    {file = \"pickleshare-0.7.5.tar.gz\", hash = \"sha256:87683d47965c1da65cdacaf31c8441d12b8044cdec9aca500cd78fc2c683afca\"},\n]\n\n[[package]]\nname = \"platformdirs\"\nversion = \"2.4.1\"\ndescription = \"A small Python module for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"platformdirs-2.4.1-py3-none-any.whl\", hash = \"sha256:1d7385c7db91728b83efd0ca99a5afb296cab9d0ed8313a45ed8ba17967ecfca\"},\n    {file = \"platformdirs-2.4.1.tar.gz\", hash = \"sha256:440633ddfebcc36264232365d7840a970e75e1018d15b4327d11f91909045fda\"},\n]\n\n[package.extras]\ndocs = [\"Sphinx (>=4)\", \"furo (>=2021.7.5b38)\", \"proselint (>=0.10.2)\", \"sphinx-autodoc-typehints (>=1.12)\"]\ntest = [\"appdirs (==1.4.4)\", \"pytest (>=6)\", \"pytest-cov (>=2.7)\", \"pytest-mock (>=3.6)\"]\n\n[[package]]\nname = \"pluggy\"\nversion = \"0.13.1\"\ndescription = \"plugin and hook calling mechanisms for python\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"pluggy-0.13.1-py2.py3-none-any.whl\", hash = \"sha256:966c145cd83c96502c3c3868f50408687b38434af77734af1e9ca461a4081d2d\"},\n    {file = \"pluggy-0.13.1.tar.gz\", hash = \"sha256:15b2acde666561e1298d71b523007ed7364de07029219b604cf808bfa1c765b0\"},\n]\n\n[package.extras]\ndev = [\"pre-commit\", \"tox\"]\n\n[[package]]\nname = \"ply\"\nversion = \"3.11\"\ndescription = \"Python Lex & Yacc\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"ply-3.11-py2.py3-none-any.whl\", hash = \"sha256:096f9b8350b65ebd2fd1346b12452efe5b9607f7482813ffca50c22722a807ce\"},\n    {file = \"ply-3.11.tar.gz\", hash = \"sha256:00c7c1aaa88358b9c765b6d3000c6eec0ba42abca5351b095321aef446081da3\"},\n]\n\n[[package]]\nname = \"pre-commit\"\nversion = \"3.8.0\"\ndescription = \"A framework for managing and maintaining multi-language pre-commit hooks.\"\noptional = false\npython-versions = \">=3.9\"\nfiles = [\n    {file = \"pre_commit-3.8.0-py2.py3-none-any.whl\", hash = \"sha256:9a90a53bf82fdd8778d58085faf8d83df56e40dfe18f45b19446e26bf1b3a63f\"},\n    {file = \"pre_commit-3.8.0.tar.gz\", hash = \"sha256:8bb6494d4a20423842e198980c9ecf9f96607a07ea29549e180eef9ae80fe7af\"},\n]\n\n[package.dependencies]\ncfgv = \">=2.0.0\"\nidentify = \">=1.0.0\"\nnodeenv = \">=0.11.1\"\npyyaml = \">=5.1\"\nvirtualenv = \">=20.10.0\"\n\n[[package]]\nname = \"prompt-toolkit\"\nversion = \"3.0.7\"\ndescription = \"Library for building powerful interactive command lines in Python\"\noptional = false\npython-versions = \">=3.6.1\"\nfiles = [\n    {file = \"prompt_toolkit-3.0.7-py3-none-any.whl\", hash = \"sha256:83074ee28ad4ba6af190593d4d4c607ff525272a504eb159199b6dd9f950c950\"},\n    {file = \"prompt_toolkit-3.0.7.tar.gz\", hash = \"sha256:822f4605f28f7d2ba6b0b09a31e25e140871e96364d1d377667b547bb3bf4489\"},\n]\n\n[package.dependencies]\nwcwidth = \"*\"\n\n[[package]]\nname = \"protobuf\"\nversion = \"5.27.1\"\ndescription = \"\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"protobuf-5.27.1-cp310-abi3-win32.whl\", hash = \"sha256:3adc15ec0ff35c5b2d0992f9345b04a540c1e73bfee3ff1643db43cc1d734333\"},\n    {file = \"protobuf-5.27.1-cp310-abi3-win_amd64.whl\", hash = \"sha256:25236b69ab4ce1bec413fd4b68a15ef8141794427e0b4dc173e9d5d9dffc3bcd\"},\n    {file = \"protobuf-5.27.1-cp38-abi3-macosx_10_9_universal2.whl\", hash = \"sha256:4e38fc29d7df32e01a41cf118b5a968b1efd46b9c41ff515234e794011c78b17\"},\n    {file = \"protobuf-5.27.1-cp38-abi3-manylinux2014_aarch64.whl\", hash = \"sha256:917ed03c3eb8a2d51c3496359f5b53b4e4b7e40edfbdd3d3f34336e0eef6825a\"},\n    {file = \"protobuf-5.27.1-cp38-abi3-manylinux2014_x86_64.whl\", hash = \"sha256:ee52874a9e69a30271649be88ecbe69d374232e8fd0b4e4b0aaaa87f429f1631\"},\n    {file = \"protobuf-5.27.1-cp38-cp38-win32.whl\", hash = \"sha256:7a97b9c5aed86b9ca289eb5148df6c208ab5bb6906930590961e08f097258107\"},\n    {file = \"protobuf-5.27.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:f6abd0f69968792da7460d3c2cfa7d94fd74e1c21df321eb6345b963f9ec3d8d\"},\n    {file = \"protobuf-5.27.1-cp39-cp39-win32.whl\", hash = \"sha256:dfddb7537f789002cc4eb00752c92e67885badcc7005566f2c5de9d969d3282d\"},\n    {file = \"protobuf-5.27.1-cp39-cp39-win_amd64.whl\", hash = \"sha256:39309898b912ca6febb0084ea912e976482834f401be35840a008da12d189340\"},\n    {file = \"protobuf-5.27.1-py3-none-any.whl\", hash = \"sha256:4ac7249a1530a2ed50e24201d6630125ced04b30619262f06224616e0030b6cf\"},\n    {file = \"protobuf-5.27.1.tar.gz\", hash = \"sha256:df5e5b8e39b7d1c25b186ffdf9f44f40f810bbcc9d2b71d9d3156fee5a9adf15\"},\n]\n\n[[package]]\nname = \"psutil\"\nversion = \"5.7.2\"\ndescription = \"Cross-platform lib for process and system monitoring in Python.\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"psutil-5.7.2-cp27-none-win32.whl\", hash = \"sha256:f2018461733b23f308c298653c8903d32aaad7873d25e1d228765e91ae42c3f2\"},\n    {file = \"psutil-5.7.2-cp27-none-win_amd64.whl\", hash = \"sha256:66c18ca7680a31bf16ee22b1d21b6397869dda8059dbdb57d9f27efa6615f195\"},\n    {file = \"psutil-5.7.2-cp35-cp35m-win32.whl\", hash = \"sha256:5e9d0f26d4194479a13d5f4b3798260c20cecf9ac9a461e718eb59ea520a360c\"},\n    {file = \"psutil-5.7.2-cp35-cp35m-win_amd64.whl\", hash = \"sha256:4080869ed93cce662905b029a1770fe89c98787e543fa7347f075ade761b19d6\"},\n    {file = \"psutil-5.7.2-cp36-cp36m-win32.whl\", hash = \"sha256:d8a82162f23c53b8525cf5f14a355f5d1eea86fa8edde27287dd3a98399e4fdf\"},\n    {file = \"psutil-5.7.2-cp36-cp36m-win_amd64.whl\", hash = \"sha256:0ee3c36428f160d2d8fce3c583a0353e848abb7de9732c50cf3356dd49ad63f8\"},\n    {file = \"psutil-5.7.2-cp37-cp37m-win32.whl\", hash = \"sha256:ff1977ba1a5f71f89166d5145c3da1cea89a0fdb044075a12c720ee9123ec818\"},\n    {file = \"psutil-5.7.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:a5b120bb3c0c71dfe27551f9da2f3209a8257a178ed6c628a819037a8df487f1\"},\n    {file = \"psutil-5.7.2-cp38-cp38-win32.whl\", hash = \"sha256:10512b46c95b02842c225f58fa00385c08fa00c68bac7da2d9a58ebe2c517498\"},\n    {file = \"psutil-5.7.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:68d36986ded5dac7c2dcd42f2682af1db80d4bce3faa126a6145c1637e1b559f\"},\n    {file = \"psutil-5.7.2.tar.gz\", hash = \"sha256:90990af1c3c67195c44c9a889184f84f5b2320dce3ee3acbd054e3ba0b4a7beb\"},\n]\n\n[package.extras]\ntest = [\"enum34\", \"ipaddress\", \"mock\", \"pywin32\", \"unittest2\", \"wmi\"]\n\n[[package]]\nname = \"psycopg2-binary\"\nversion = \"2.9.3\"\ndescription = \"psycopg2 - Python-PostgreSQL Database Adapter\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"psycopg2-binary-2.9.3.tar.gz\", hash = \"sha256:761df5313dc15da1502b21453642d7599d26be88bff659382f8f9747c7ebea4e\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-macosx_10_14_x86_64.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\", hash = \"sha256:539b28661b71da7c0e428692438efbcd048ca21ea81af618d845e06ebfd29478\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:2f2534ab7dc7e776a263b463a16e189eb30e85ec9bbe1bff9e78dae802608932\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6e82d38390a03da28c7985b394ec3f56873174e2c88130e6966cb1c946508e65\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:57804fc02ca3ce0dbfbef35c4b3a4a774da66d66ea20f4bda601294ad2ea6092\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-manylinux_2_24_aarch64.whl\", hash = \"sha256:083a55275f09a62b8ca4902dd11f4b33075b743cf0d360419e2051a8a5d5ff76\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-manylinux_2_24_ppc64le.whl\", hash = \"sha256:0a29729145aaaf1ad8bafe663131890e2111f13416b60e460dae0a96af5905c9\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:3a79d622f5206d695d7824cbf609a4f5b88ea6d6dab5f7c147fc6d333a8787e4\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:090f3348c0ab2cceb6dfbe6bf721ef61262ddf518cd6cc6ecc7d334996d64efa\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:a9e1f75f96ea388fbcef36c70640c4efbe4650658f3d6a2967b4cc70e907352e\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:c3ae8e75eb7160851e59adc77b3a19a976e50622e44fd4fd47b8b18208189d42\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-win32.whl\", hash = \"sha256:7b1e9b80afca7b7a386ef087db614faebbf8839b7f4db5eb107d0f1a53225029\"},\n    {file = \"psycopg2_binary-2.9.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:8b344adbb9a862de0c635f4f0425b7958bf5a4b927c8594e6e8d261775796d53\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-macosx_10_14_x86_64.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\", hash = \"sha256:e847774f8ffd5b398a75bc1c18fbb56564cda3d629fe68fd81971fece2d3c67e\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:68641a34023d306be959101b345732360fc2ea4938982309b786f7be1b43a4a1\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3303f8807f342641851578ee7ed1f3efc9802d00a6f83c101d21c608cb864460\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-manylinux_2_24_aarch64.whl\", hash = \"sha256:e3699852e22aa68c10de06524a3721ade969abf382da95884e6a10ff798f9281\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-manylinux_2_24_ppc64le.whl\", hash = \"sha256:526ea0378246d9b080148f2d6681229f4b5964543c170dd10bf4faaab6e0d27f\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:b1c8068513f5b158cf7e29c43a77eb34b407db29aca749d3eb9293ee0d3103ca\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:15803fa813ea05bef089fa78835118b5434204f3a17cb9f1e5dbfd0b9deea5af\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:152f09f57417b831418304c7f30d727dc83a12761627bb826951692cc6491e57\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:404224e5fef3b193f892abdbf8961ce20e0b6642886cfe1fe1923f41aaa75c9d\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-win32.whl\", hash = \"sha256:1f6b813106a3abdf7b03640d36e24669234120c72e91d5cbaeb87c5f7c36c65b\"},\n    {file = \"psycopg2_binary-2.9.3-cp36-cp36m-win_amd64.whl\", hash = \"sha256:2d872e3c9d5d075a2e104540965a1cf898b52274a5923936e5bfddb58c59c7c2\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-macosx_10_14_x86_64.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\", hash = \"sha256:10bb90fb4d523a2aa67773d4ff2b833ec00857f5912bafcfd5f5414e45280fb1\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:874a52ecab70af13e899f7847b3e074eeb16ebac5615665db33bce8a1009cf33\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a29b3ca4ec9defec6d42bf5feb36bb5817ba3c0230dd83b4edf4bf02684cd0ae\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-manylinux_2_24_aarch64.whl\", hash = \"sha256:12b11322ea00ad8db8c46f18b7dfc47ae215e4df55b46c67a94b4effbaec7094\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-manylinux_2_24_ppc64le.whl\", hash = \"sha256:53293533fcbb94c202b7c800a12c873cfe24599656b341f56e71dd2b557be063\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:c381bda330ddf2fccbafab789d83ebc6c53db126e4383e73794c74eedce855ef\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:9d29409b625a143649d03d0fd7b57e4b92e0ecad9726ba682244b73be91d2fdb\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:183a517a3a63503f70f808b58bfbf962f23d73b6dccddae5aa56152ef2bcb232\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:15c4e4cfa45f5a60599d9cec5f46cd7b1b29d86a6390ec23e8eebaae84e64554\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-win32.whl\", hash = \"sha256:adf20d9a67e0b6393eac162eb81fb10bc9130a80540f4df7e7355c2dd4af9fba\"},\n    {file = \"psycopg2_binary-2.9.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:2f9ffd643bc7349eeb664eba8864d9e01f057880f510e4681ba40a6532f93c71\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-macosx_10_14_x86_64.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\", hash = \"sha256:def68d7c21984b0f8218e8a15d514f714d96904265164f75f8d3a70f9c295667\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:e6aa71ae45f952a2205377773e76f4e3f27951df38e69a4c95440c779e013560\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:dffc08ca91c9ac09008870c9eb77b00a46b3378719584059c034b8945e26b272\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:280b0bb5cbfe8039205c7981cceb006156a675362a00fe29b16fbc264e242834\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-manylinux_2_24_aarch64.whl\", hash = \"sha256:af9813db73395fb1fc211bac696faea4ca9ef53f32dc0cfa27e4e7cf766dcf24\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-manylinux_2_24_ppc64le.whl\", hash = \"sha256:63638d875be8c2784cfc952c9ac34e2b50e43f9f0a0660b65e2a87d656b3116c\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:ffb7a888a047696e7f8240d649b43fb3644f14f0ee229077e7f6b9f9081635bd\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:0c9d5450c566c80c396b7402895c4369a410cab5a82707b11aee1e624da7d004\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:d1c1b569ecafe3a69380a94e6ae09a4789bbb23666f3d3a08d06bbd2451f5ef1\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:8fc53f9af09426a61db9ba357865c77f26076d48669f2e1bb24d85a22fb52307\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-win32.whl\", hash = \"sha256:6472a178e291b59e7f16ab49ec8b4f3bdada0a879c68d3817ff0963e722a82ce\"},\n    {file = \"psycopg2_binary-2.9.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:35168209c9d51b145e459e05c31a9eaeffa9a6b0fd61689b48e07464ffd1a83e\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-macosx_10_14_x86_64.macosx_10_9_intel.macosx_10_9_x86_64.macosx_10_10_intel.macosx_10_10_x86_64.whl\", hash = \"sha256:47133f3f872faf28c1e87d4357220e809dfd3fa7c64295a4a148bcd1e6e34ec9\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:b3a24a1982ae56461cc24f6680604fffa2c1b818e9dc55680da038792e004d18\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:91920527dea30175cc02a1099f331aa8c1ba39bf8b7762b7b56cbf54bc5cce42\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:887dd9aac71765ac0d0bac1d0d4b4f2c99d5f5c1382d8b770404f0f3d0ce8a39\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-manylinux_2_24_aarch64.whl\", hash = \"sha256:1f14c8b0942714eb3c74e1e71700cbbcb415acbc311c730370e70c578a44a25c\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-manylinux_2_24_ppc64le.whl\", hash = \"sha256:7af0dd86ddb2f8af5da57a976d27cd2cd15510518d582b478fbb2292428710b4\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:93cd1967a18aa0edd4b95b1dfd554cf15af657cb606280996d393dadc88c3c35\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:bda845b664bb6c91446ca9609fc69f7db6c334ec5e4adc87571c34e4f47b7ddb\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:01310cf4cf26db9aea5158c217caa92d291f0500051a6469ac52166e1a16f5b7\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:99485cab9ba0fa9b84f1f9e1fef106f44a46ef6afdeec8885e0b88d0772b49e8\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-win32.whl\", hash = \"sha256:46f0e0a6b5fa5851bbd9ab1bc805eef362d3a230fbdfbc209f4a236d0a7a990d\"},\n    {file = \"psycopg2_binary-2.9.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:accfe7e982411da3178ec690baaceaad3c278652998b2c45828aaac66cd8285f\"},\n]\n\n[[package]]\nname = \"ptyprocess\"\nversion = \"0.6.0\"\ndescription = \"Run a subprocess in a pseudo terminal\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"ptyprocess-0.6.0-py2.py3-none-any.whl\", hash = \"sha256:d7cc528d76e76342423ca640335bd3633420dc1366f258cb31d05e865ef5ca1f\"},\n    {file = \"ptyprocess-0.6.0.tar.gz\", hash = \"sha256:923f299cc5ad920c68f2bc0bc98b75b9f838b93b599941a6b63ddbc2476394c0\"},\n]\n\n[[package]]\nname = \"pyasn1\"\nversion = \"0.4.8\"\ndescription = \"ASN.1 types and codecs\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pyasn1-0.4.8-py2.py3-none-any.whl\", hash = \"sha256:39c7e2ec30515947ff4e87fb6f456dfc6e84857d34be479c9d4a4ba4bf46aa5d\"},\n    {file = \"pyasn1-0.4.8.tar.gz\", hash = \"sha256:aef77c9fb94a3ac588e87841208bdec464471d9871bd5050a287cc9a475cd0ba\"},\n]\n\n[[package]]\nname = \"pyasn1-modules\"\nversion = \"0.2.8\"\ndescription = \"A collection of ASN.1-based protocols modules.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pyasn1-modules-0.2.8.tar.gz\", hash = \"sha256:905f84c712230b2c592c19470d3ca8d552de726050d1d1716282a1f6146be65e\"},\n    {file = \"pyasn1_modules-0.2.8-py2.py3-none-any.whl\", hash = \"sha256:a50b808ffeb97cb3601dd25981f6b016cbb3d31fbf57a8b8a87428e6158d0c74\"},\n]\n\n[package.dependencies]\npyasn1 = \">=0.4.6,<0.5.0\"\n\n[[package]]\nname = \"pycparser\"\nversion = \"2.20\"\ndescription = \"C parser in Python\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"pycparser-2.20-py2.py3-none-any.whl\", hash = \"sha256:7582ad22678f0fcd81102833f60ef8d0e57288b6b5fb00323d101be910e35705\"},\n    {file = \"pycparser-2.20.tar.gz\", hash = \"sha256:2d475327684562c3a96cc71adf7dc8c4f0565175cf86b6d7a404ff4c771f15f0\"},\n]\n\n[[package]]\nname = \"pycryptodome\"\nversion = \"3.9.8\"\ndescription = \"Cryptographic library for Python\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"pycryptodome-3.9.8-cp27-cp27m-macosx_10_6_intel.whl\", hash = \"sha256:50348edd283afdccddc0938cdc674484533912ba8a99a27c7bfebb75030aa856\"},\n    {file = \"pycryptodome-3.9.8-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:80d57177a0b7c14d4594c62bbb47fe2f6309ad3b0a34348a291d570925c97a82\"},\n    {file = \"pycryptodome-3.9.8-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:fbe65d5cfe04ff2f7684160d50f5118bdefb01e3af4718eeb618bfed40f19d94\"},\n    {file = \"pycryptodome-3.9.8-cp27-cp27m-win32.whl\", hash = \"sha256:bcd5b8416e73e4b0d48afba3704d8c826414764dafaed7a1a93c442188d90ccc\"},\n    {file = \"pycryptodome-3.9.8-cp27-cp27m-win_amd64.whl\", hash = \"sha256:360955eece2cd0fa694a708d10303c6abd7b39614fa2547b6bd245da76198beb\"},\n    {file = \"pycryptodome-3.9.8-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:1e655746f539421d923fd48df8f6f40b3443d80b75532501c0085b64afed9df5\"},\n    {file = \"pycryptodome-3.9.8-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:709b9f144d23e290b9863121d1ace14a72e01f66ea9c903fbdc690520dfdfcf0\"},\n    {file = \"pycryptodome-3.9.8-cp35-cp35m-macosx_10_6_intel.whl\", hash = \"sha256:6276478ada411aca97c0d5104916354b3d740d368407912722bd4d11aa9ee4c2\"},\n    {file = \"pycryptodome-3.9.8-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:54bdedd28476dea8a3cd86cb67c0df1f0e3d71cae8022354b0f879c41a3d27b2\"},\n    {file = \"pycryptodome-3.9.8-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:f521178e5a991ffd04182ed08f552daca1affcb826aeda0e1945cd989a9d4345\"},\n    {file = \"pycryptodome-3.9.8-cp35-cp35m-manylinux2014_aarch64.whl\", hash = \"sha256:f2e045224074d5664dc9cbabbf4f4d4d46f1ee90f24780e3a9a668fd096ff17f\"},\n    {file = \"pycryptodome-3.9.8-cp35-cp35m-win32.whl\", hash = \"sha256:a207231a52426de3ff20f5608f0687261a3329d97a036c51f7d4c606a6f30c23\"},\n    {file = \"pycryptodome-3.9.8-cp35-cp35m-win_amd64.whl\", hash = \"sha256:2b998dc45ef5f4e5cf5248a6edfcd8d8e9fb5e35df8e4259b13a1b10eda7b16b\"},\n    {file = \"pycryptodome-3.9.8-cp36-cp36m-macosx_10_6_intel.whl\", hash = \"sha256:03d5cca8618620f45fd40f827423f82b86b3a202c8d44108601b0f5f56b04299\"},\n    {file = \"pycryptodome-3.9.8-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:f78a68c2c820e4731e510a2df3eef0322f24fde1781ced970bf497b6c7d92982\"},\n    {file = \"pycryptodome-3.9.8-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:132a56abba24e2e06a479d8e5db7a48271a73a215f605017bbd476d31f8e71c1\"},\n    {file = \"pycryptodome-3.9.8-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:cecbf67e81d6144a50dc615629772859463b2e4f815d0c082fa421db362f040e\"},\n    {file = \"pycryptodome-3.9.8-cp36-cp36m-win32.whl\", hash = \"sha256:67dcad1b8b201308586a8ca2ffe89df1e4f731d5a4cdd0610cc4ea790351c739\"},\n    {file = \"pycryptodome-3.9.8-cp36-cp36m-win_amd64.whl\", hash = \"sha256:b56638d58a3a4be13229c6a815cd448f9e3ce40c00880a5398471b42ee86f50e\"},\n    {file = \"pycryptodome-3.9.8-cp37-cp37m-macosx_10_6_intel.whl\", hash = \"sha256:bec2bcdf7c9ce7f04d718e51887f3b05dc5c1cfaf5d2c2e9065ecddd1b2f6c9a\"},\n    {file = \"pycryptodome-3.9.8-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:abc2e126c9490e58a36a0f83516479e781d83adfb134576a5cbe5c6af2a3e93c\"},\n    {file = \"pycryptodome-3.9.8-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:ef39c98d9b8c0736d91937d193653e47c3b19ddf4fc3bccdc5e09aaa4b0c5d21\"},\n    {file = \"pycryptodome-3.9.8-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:87006cf0d81505408f1ae4f55cf8a5d95a8e029a4793360720ae17c6500f7ecc\"},\n    {file = \"pycryptodome-3.9.8-cp37-cp37m-win32.whl\", hash = \"sha256:4350a42028240c344ee855f032c7d4ad6ff4f813bfbe7121547b7dc579ecc876\"},\n    {file = \"pycryptodome-3.9.8-cp37-cp37m-win_amd64.whl\", hash = \"sha256:c8bf40cf6e281a4378e25846924327e728a887e8bf0ee83b2604a0f4b61692e8\"},\n    {file = \"pycryptodome-3.9.8-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:d8074c8448cfd0705dfa71ca333277fce9786d0b9cac75d120545de6253f996a\"},\n    {file = \"pycryptodome-3.9.8-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:8063a712fba642f78d3c506b0896846601b6de7f5c3d534e388ad0cc07f5a149\"},\n    {file = \"pycryptodome-3.9.8-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:dd302b6ae3965afeb5ef1b0d92486f986c0e65183cd7835973f0b593800590e6\"},\n    {file = \"pycryptodome-3.9.8-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:663f8de2b3df2e744d6e1610506e0ea4e213bde906795953c1e82279c169f0a7\"},\n    {file = \"pycryptodome-3.9.8-cp38-cp38-win32.whl\", hash = \"sha256:02e51e1d5828d58f154896ddfd003e2e7584869c275e5acbe290443575370fba\"},\n    {file = \"pycryptodome-3.9.8-cp38-cp38-win_amd64.whl\", hash = \"sha256:55eb61aca2c883db770999f50d091ff7c14016f2769ad7bca3d9b75d1d7c1b68\"},\n    {file = \"pycryptodome-3.9.8-cp39-cp39-manylinux1_i686.whl\", hash = \"sha256:39ef9fb52d6ec7728fce1f1693cb99d60ce302aeebd59bcedea70ca3203fda60\"},\n    {file = \"pycryptodome-3.9.8-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:de6e1cd75677423ff64712c337521e62e3a7a4fc84caabbd93207752e831a85a\"},\n    {file = \"pycryptodome-3.9.8-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:9f62d21bc693f3d7d444f17ed2ad7a913b4c37c15cd807895d013c39c0517dfd\"},\n    {file = \"pycryptodome-3.9.8.tar.gz\", hash = \"sha256:0e24171cf01021bc5dc17d6a9d4f33a048f09d62cc3f62541e95ef104588bda4\"},\n]\n\n[[package]]\nname = \"pygments\"\nversion = \"2.7.4\"\ndescription = \"Pygments is a syntax highlighting package written in Python.\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"Pygments-2.7.4-py3-none-any.whl\", hash = \"sha256:bc9591213a8f0e0ca1a5e68a479b4887fdc3e75d0774e5c71c31920c427de435\"},\n    {file = \"Pygments-2.7.4.tar.gz\", hash = \"sha256:df49d09b498e83c1a73128295860250b0b7edd4c723a32e9bc0d295c7c2ec337\"},\n]\n\n[[package]]\nname = \"pyjwt\"\nversion = \"2.4.0\"\ndescription = \"JSON Web Token implementation in Python\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"PyJWT-2.4.0-py3-none-any.whl\", hash = \"sha256:72d1d253f32dbd4f5c88eaf1fdc62f3a19f676ccbadb9dbc5d07e951b2b26daf\"},\n    {file = \"PyJWT-2.4.0.tar.gz\", hash = \"sha256:d42908208c699b3b973cbeb01a969ba6a96c821eefb1c5bfe4c390c01d67abba\"},\n]\n\n[package.extras]\ncrypto = [\"cryptography (>=3.3.1)\"]\ndev = [\"coverage[toml] (==5.0.4)\", \"cryptography (>=3.3.1)\", \"mypy\", \"pre-commit\", \"pytest (>=6.0.0,<7.0.0)\", \"sphinx\", \"sphinx-rtd-theme\", \"zope.interface\"]\ndocs = [\"sphinx\", \"sphinx-rtd-theme\", \"zope.interface\"]\ntests = [\"coverage[toml] (==5.0.4)\", \"pytest (>=6.0.0,<7.0.0)\"]\n\n[[package]]\nname = \"pylint\"\nversion = \"2.14.4\"\ndescription = \"python code static checker\"\noptional = false\npython-versions = \">=3.7.2\"\nfiles = [\n    {file = \"pylint-2.14.4-py3-none-any.whl\", hash = \"sha256:89b61867db16eefb7b3c5b84afc94081edaf11544189e2b238154677529ad69f\"},\n    {file = \"pylint-2.14.4.tar.gz\", hash = \"sha256:47705453aa9dce520e123a7d51843d5f0032cbfa06870f89f00927aa1f735a4a\"},\n]\n\n[package.dependencies]\nastroid = \">=2.11.6,<=2.12.0-dev0\"\ncolorama = {version = \">=0.4.5\", markers = \"sys_platform == \\\"win32\\\"\"}\ndill = \">=0.2\"\nisort = \">=4.2.5,<6\"\nmccabe = \">=0.6,<0.8\"\nplatformdirs = \">=2.2.0\"\ntomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\ntomlkit = \">=0.10.1\"\n\n[package.extras]\nspelling = [\"pyenchant (>=3.2,<4.0)\"]\ntestutils = [\"gitpython (>3)\"]\n\n[[package]]\nname = \"pyopenssl\"\nversion = \"19.1.0\"\ndescription = \"Python wrapper module around the OpenSSL library\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pyOpenSSL-19.1.0-py2.py3-none-any.whl\", hash = \"sha256:621880965a720b8ece2f1b2f54ea2071966ab00e2970ad2ce11d596102063504\"},\n    {file = \"pyOpenSSL-19.1.0.tar.gz\", hash = \"sha256:9a24494b2602aaf402be5c9e30a0b82d4a5c67528fe8fb475e3f3bc00dd69507\"},\n]\n\n[package.dependencies]\ncryptography = \">=2.8\"\nsix = \">=1.5.2\"\n\n[package.extras]\ndocs = [\"sphinx\", \"sphinx-rtd-theme\"]\ntest = [\"flaky\", \"pretend\", \"pytest (>=3.0.1)\"]\n\n[[package]]\nname = \"pyotp\"\nversion = \"2.4.0\"\ndescription = \"Python One Time Password Library\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pyotp-2.4.0-py2.py3-none-any.whl\", hash = \"sha256:e96c2d725d0b613b793775bb184e90297fda5f4989e210e28acf08a09ac2cc83\"},\n    {file = \"pyotp-2.4.0.tar.gz\", hash = \"sha256:01eceab573181188fe038d001e42777884a7f5367203080ef5bda0e30fe82d28\"},\n]\n\n[[package]]\nname = \"pyparsing\"\nversion = \"2.4.7\"\ndescription = \"Python parsing module\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*\"\nfiles = [\n    {file = \"pyparsing-2.4.7-py2.py3-none-any.whl\", hash = \"sha256:ef9d7589ef3c200abe66653d3f1ab1033c3c419ae9b9bdb1240a85b024efc88b\"},\n    {file = \"pyparsing-2.4.7.tar.gz\", hash = \"sha256:c203ec8783bf771a155b207279b9bccb8dea02d8f0c9e5f8ead507bc3246ecc1\"},\n]\n\n[[package]]\nname = \"pyre2\"\nversion = \"0.3.6\"\ndescription = \"Python wrapper for Google\\\\'s RE2 using Cython\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"pyre2-0.3.6-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:6d8e550899886ee01f1b8149ba1c336e1c749cec2e33414815a76fb5649cdf67\"},\n    {file = \"pyre2-0.3.6-cp36-cp36m-manylinux2010_i686.whl\", hash = \"sha256:310d5c98495114692940ffa020aaeef1341427755b6ca5a17c63092060ed93dc\"},\n    {file = \"pyre2-0.3.6-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:97de5d4cf7d8b9be7dbe0dc0941c4a6c1395fc598722d9644adc55427d3dd083\"},\n    {file = \"pyre2-0.3.6-cp36-cp36m-win_amd64.whl\", hash = \"sha256:18cd5d76973ee57232a5d851489c202105e4752aee6dcbd38742c0475f3f1c4e\"},\n    {file = \"pyre2-0.3.6-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:225784d7bd905bc3e87d4bbcc6ac4087ccea8905dd657273fd71bfb113e50e82\"},\n    {file = \"pyre2-0.3.6-cp37-cp37m-manylinux2010_i686.whl\", hash = \"sha256:c3b45f789374d0f95866330fcd34bb6b93705e8f5c276d9d70d318a227ba5954\"},\n    {file = \"pyre2-0.3.6-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:f3467dd9a4c8100f6406bc6277d945a13b7fd7c4426d2415564de1324b5db94f\"},\n    {file = \"pyre2-0.3.6-cp37-cp37m-win_amd64.whl\", hash = \"sha256:608558276d3539002ad6300d0b0a2b0941577fdea009715ff4d31052e05cb409\"},\n    {file = \"pyre2-0.3.6-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:ebe92a3222f2f6f176eeb3859638734e4f9a82d5940ad7d6f0c1288153c70ce2\"},\n    {file = \"pyre2-0.3.6-cp38-cp38-manylinux2010_i686.whl\", hash = \"sha256:961020835a3b805eed51a082e5effdccb51979c4efef2a17f17122967cb4749a\"},\n    {file = \"pyre2-0.3.6-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:cc180989186f05b75020b53c79059c338e9e1940d325fc945c84aab2b5c57525\"},\n    {file = \"pyre2-0.3.6-cp38-cp38-win_amd64.whl\", hash = \"sha256:7c398942c3467fe23b2dd4a11dd78da8aee774d0b481e84b1b208819ee724cca\"},\n    {file = \"pyre2-0.3.6-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:617c4d75b41b34afe7590e144efad1c564a8b49a1e0827872afc2243b24beada\"},\n    {file = \"pyre2-0.3.6-cp39-cp39-manylinux2010_i686.whl\", hash = \"sha256:f3ae7b087abcbc4b910d535c2fb877ef452b61d2514a63fd15b8b020b51fe4b5\"},\n    {file = \"pyre2-0.3.6-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:b87e9aeee74376210bd82c8328eb007b93378f3cd61fa6176161c3b9037e8474\"},\n    {file = \"pyre2-0.3.6-cp39-cp39-win_amd64.whl\", hash = \"sha256:1efec117f2543b38adcbe038a2ae156eb91b6ed8a73c998c3752a766d6241075\"},\n    {file = \"pyre2-0.3.6.tar.gz\", hash = \"sha256:6fe972c0cadec49a5a055690e5aa29f8aebaed0fa9b7d8d3530e33719b61f91c\"},\n]\n\n[package.extras]\nperf = [\"regex\"]\ntest = [\"pytest\"]\n\n[[package]]\nname = \"pyreadline\"\nversion = \"2.1\"\ndescription = \"A python implmementation of GNU readline.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pyreadline-2.1.zip\", hash = \"sha256:4530592fc2e85b25b1a9f79664433da09237c1a270e4d78ea5aa3a2c7229e2d1\"},\n]\n\n[[package]]\nname = \"pyspf\"\nversion = \"2.0.14\"\ndescription = \"SPF (Sender Policy Framework) implemented in Python.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pyspf-2.0.14.tar.gz\", hash = \"sha256:57a7ef01bda090173aafb6af0106251686ed73f03db4e911fcd34c57fc347186\"},\n]\n\n[[package]]\nname = \"pytest\"\nversion = \"7.3.1\"\ndescription = \"pytest: simple powerful testing with Python\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"pytest-7.3.1-py3-none-any.whl\", hash = \"sha256:3799fa815351fea3a5e96ac7e503a96fa51cc9942c3753cda7651b93c1cfa362\"},\n    {file = \"pytest-7.3.1.tar.gz\", hash = \"sha256:434afafd78b1d78ed0addf160ad2b77a30d35d4bdf8af234fe621919d9ed15e3\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\nexceptiongroup = {version = \">=1.0.0rc8\", markers = \"python_version < \\\"3.11\\\"\"}\niniconfig = \"*\"\npackaging = \"*\"\npluggy = \">=0.12,<2.0\"\ntomli = {version = \">=1.0.0\", markers = \"python_version < \\\"3.11\\\"\"}\n\n[package.extras]\ntesting = [\"argcomplete\", \"attrs (>=19.2.0)\", \"hypothesis (>=3.56)\", \"mock\", \"nose\", \"pygments (>=2.7.2)\", \"requests\", \"xmlschema\"]\n\n[[package]]\nname = \"pytest-cov\"\nversion = \"3.0.0\"\ndescription = \"Pytest plugin for measuring coverage.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"pytest-cov-3.0.0.tar.gz\", hash = \"sha256:e7f0f5b1617d2210a2cabc266dfe2f4c75a8d32fb89eafb7ad9d06f6d076d470\"},\n    {file = \"pytest_cov-3.0.0-py3-none-any.whl\", hash = \"sha256:578d5d15ac4a25e5f961c938b85a05b09fdaae9deef3bb6de9a6e766622ca7a6\"},\n]\n\n[package.dependencies]\ncoverage = {version = \">=5.2.1\", extras = [\"toml\"]}\npytest = \">=4.6\"\n\n[package.extras]\ntesting = [\"fields\", \"hunter\", \"process-tests\", \"pytest-xdist\", \"six\", \"virtualenv\"]\n\n[[package]]\nname = \"python-dateutil\"\nversion = \"2.8.1\"\ndescription = \"Extensions to the standard Python datetime module\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,>=2.7\"\nfiles = [\n    {file = \"python-dateutil-2.8.1.tar.gz\", hash = \"sha256:73ebfe9dbf22e832286dafa60473e4cd239f8592f699aa5adaf10050e6e1823c\"},\n    {file = \"python_dateutil-2.8.1-py2.py3-none-any.whl\", hash = \"sha256:75bb3f31ea686f1197762692a9ee6a7550b59fc6ca3a1f4b5d7e32fb98e2da2a\"},\n]\n\n[package.dependencies]\nsix = \">=1.5\"\n\n[[package]]\nname = \"python-dotenv\"\nversion = \"0.14.0\"\ndescription = \"Add .env support to your django/flask apps in development and deployments\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"python-dotenv-0.14.0.tar.gz\", hash = \"sha256:8c10c99a1b25d9a68058a1ad6f90381a62ba68230ca93966882a4dbc3bc9c33d\"},\n    {file = \"python_dotenv-0.14.0-py2.py3-none-any.whl\", hash = \"sha256:c10863aee750ad720f4f43436565e4c1698798d763b63234fb5021b6c616e423\"},\n]\n\n[package.extras]\ncli = [\"click (>=5.0)\"]\n\n[[package]]\nname = \"python-editor\"\nversion = \"1.0.4\"\ndescription = \"Programmatically open an editor, capture the result.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"python-editor-1.0.4.tar.gz\", hash = \"sha256:51fda6bcc5ddbbb7063b2af7509e43bd84bfc32a4ff71349ec7847713882327b\"},\n    {file = \"python_editor-1.0.4-py2-none-any.whl\", hash = \"sha256:5f98b069316ea1c2ed3f67e7f5df6c0d8f10b689964a4a811ff64f0106819ec8\"},\n    {file = \"python_editor-1.0.4-py3-none-any.whl\", hash = \"sha256:1bf6e860a8ad52a14c3ee1252d5dc25b2030618ed80c022598f00176adc8367d\"},\n]\n\n[[package]]\nname = \"python-gnupg\"\nversion = \"0.4.6\"\ndescription = \"A wrapper for the Gnu Privacy Guard (GPG or GnuPG)\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"python-gnupg-0.4.6.tar.gz\", hash = \"sha256:3aa0884b3bd414652c2385b9df39e7b87272c2eca1b8fcc3089bc9e58652019a\"},\n    {file = \"python_gnupg-0.4.6-py2.py3-none-any.whl\", hash = \"sha256:cba3566e8a8fb7bb417d6897a6e17bfc7f9371052e57eb0057783c07d762a679\"},\n]\n\n[[package]]\nname = \"pytz\"\nversion = \"2020.1\"\ndescription = \"World timezone definitions, modern and historical\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"pytz-2020.1-py2.py3-none-any.whl\", hash = \"sha256:a494d53b6d39c3c6e44c3bec237336e14305e4f29bbf800b599253057fbb79ed\"},\n    {file = \"pytz-2020.1.tar.gz\", hash = \"sha256:c35965d010ce31b23eeb663ed3cc8c906275d6be1a34393a1d73a41febf4a048\"},\n]\n\n[[package]]\nname = \"pyyaml\"\nversion = \"6.0\"\ndescription = \"YAML parser and emitter for Python\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"PyYAML-6.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:d4db7c7aef085872ef65a8fd7d6d09a14ae91f691dec3e87ee5ee0539d516f53\"},\n    {file = \"PyYAML-6.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:9df7ed3b3d2e0ecfe09e14741b857df43adb5a3ddadc919a2d94fbdf78fea53c\"},\n    {file = \"PyYAML-6.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:77f396e6ef4c73fdc33a9157446466f1cff553d979bd00ecb64385760c6babdc\"},\n    {file = \"PyYAML-6.0-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a80a78046a72361de73f8f395f1f1e49f956c6be882eed58505a15f3e430962b\"},\n    {file = \"PyYAML-6.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:f84fbc98b019fef2ee9a1cb3ce93e3187a6df0b2538a651bfb890254ba9f90b5\"},\n    {file = \"PyYAML-6.0-cp310-cp310-win32.whl\", hash = \"sha256:2cd5df3de48857ed0544b34e2d40e9fac445930039f3cfe4bcc592a1f836d513\"},\n    {file = \"PyYAML-6.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:daf496c58a8c52083df09b80c860005194014c3698698d1a57cbcfa182142a3a\"},\n    {file = \"PyYAML-6.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:d4b0ba9512519522b118090257be113b9468d804b19d63c71dbcf4a48fa32358\"},\n    {file = \"PyYAML-6.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:81957921f441d50af23654aa6c5e5eaf9b06aba7f0a19c18a538dc7ef291c5a1\"},\n    {file = \"PyYAML-6.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:afa17f5bc4d1b10afd4466fd3a44dc0e245382deca5b3c353d8b757f9e3ecb8d\"},\n    {file = \"PyYAML-6.0-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:dbad0e9d368bb989f4515da330b88a057617d16b6a8245084f1b05400f24609f\"},\n    {file = \"PyYAML-6.0-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:432557aa2c09802be39460360ddffd48156e30721f5e8d917f01d31694216782\"},\n    {file = \"PyYAML-6.0-cp311-cp311-win32.whl\", hash = \"sha256:bfaef573a63ba8923503d27530362590ff4f576c626d86a9fed95822a8255fd7\"},\n    {file = \"PyYAML-6.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:01b45c0191e6d66c470b6cf1b9531a771a83c1c4208272ead47a3ae4f2f603bf\"},\n    {file = \"PyYAML-6.0-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:897b80890765f037df3403d22bab41627ca8811ae55e9a722fd0392850ec4d86\"},\n    {file = \"PyYAML-6.0-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:50602afada6d6cbfad699b0c7bb50d5ccffa7e46a3d738092afddc1f9758427f\"},\n    {file = \"PyYAML-6.0-cp36-cp36m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:48c346915c114f5fdb3ead70312bd042a953a8ce5c7106d5bfb1a5254e47da92\"},\n    {file = \"PyYAML-6.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:98c4d36e99714e55cfbaaee6dd5badbc9a1ec339ebfc3b1f52e293aee6bb71a4\"},\n    {file = \"PyYAML-6.0-cp36-cp36m-win32.whl\", hash = \"sha256:0283c35a6a9fbf047493e3a0ce8d79ef5030852c51e9d911a27badfde0605293\"},\n    {file = \"PyYAML-6.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:07751360502caac1c067a8132d150cf3d61339af5691fe9e87803040dbc5db57\"},\n    {file = \"PyYAML-6.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:819b3830a1543db06c4d4b865e70ded25be52a2e0631ccd2f6a47a2822f2fd7c\"},\n    {file = \"PyYAML-6.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:473f9edb243cb1935ab5a084eb238d842fb8f404ed2193a915d1784b5a6b5fc0\"},\n    {file = \"PyYAML-6.0-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0ce82d761c532fe4ec3f87fc45688bdd3a4c1dc5e0b4a19814b9009a29baefd4\"},\n    {file = \"PyYAML-6.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:231710d57adfd809ef5d34183b8ed1eeae3f76459c18fb4a0b373ad56bedcdd9\"},\n    {file = \"PyYAML-6.0-cp37-cp37m-win32.whl\", hash = \"sha256:c5687b8d43cf58545ade1fe3e055f70eac7a5a1a0bf42824308d868289a95737\"},\n    {file = \"PyYAML-6.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:d15a181d1ecd0d4270dc32edb46f7cb7733c7c508857278d3d378d14d606db2d\"},\n    {file = \"PyYAML-6.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:0b4624f379dab24d3725ffde76559cff63d9ec94e1736b556dacdfebe5ab6d4b\"},\n    {file = \"PyYAML-6.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:213c60cd50106436cc818accf5baa1aba61c0189ff610f64f4a3e8c6726218ba\"},\n    {file = \"PyYAML-6.0-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:9fa600030013c4de8165339db93d182b9431076eb98eb40ee068700c9c813e34\"},\n    {file = \"PyYAML-6.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:277a0ef2981ca40581a47093e9e2d13b3f1fbbeffae064c1d21bfceba2030287\"},\n    {file = \"PyYAML-6.0-cp38-cp38-win32.whl\", hash = \"sha256:d4eccecf9adf6fbcc6861a38015c2a64f38b9d94838ac1810a9023a0609e1b78\"},\n    {file = \"PyYAML-6.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:1e4747bc279b4f613a09eb64bba2ba602d8a6664c6ce6396a4d0cd413a50ce07\"},\n    {file = \"PyYAML-6.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:055d937d65826939cb044fc8c9b08889e8c743fdc6a32b33e2390f66013e449b\"},\n    {file = \"PyYAML-6.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:e61ceaab6f49fb8bdfaa0f92c4b57bcfbea54c09277b1b4f7ac376bfb7a7c174\"},\n    {file = \"PyYAML-6.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d67d839ede4ed1b28a4e8909735fc992a923cdb84e618544973d7dfc71540803\"},\n    {file = \"PyYAML-6.0-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:cba8c411ef271aa037d7357a2bc8f9ee8b58b9965831d9e51baf703280dc73d3\"},\n    {file = \"PyYAML-6.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:40527857252b61eacd1d9af500c3337ba8deb8fc298940291486c465c8b46ec0\"},\n    {file = \"PyYAML-6.0-cp39-cp39-win32.whl\", hash = \"sha256:b5b9eccad747aabaaffbc6064800670f0c297e52c12754eb1d976c57e4f74dcb\"},\n    {file = \"PyYAML-6.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:b3d267842bf12586ba6c734f89d1f5b871df0273157918b0ccefa29deb05c21c\"},\n    {file = \"PyYAML-6.0.tar.gz\", hash = \"sha256:68fb519c14306fec9720a2a5b45bc9f0c8d1b9c72adf45c37baedfcd949c35a2\"},\n]\n\n[[package]]\nname = \"redis\"\nversion = \"4.6.0\"\ndescription = \"Python client for Redis database and key-value store\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"redis-4.6.0-py3-none-any.whl\", hash = \"sha256:e2b03db868160ee4591de3cb90d40ebb50a90dd302138775937f6a42b7ed183c\"},\n    {file = \"redis-4.6.0.tar.gz\", hash = \"sha256:585dc516b9eb042a619ef0a39c3d7d55fe81bdb4df09a52c9cdde0d07bf1aa7d\"},\n]\n\n[package.dependencies]\nasync-timeout = {version = \">=4.0.2\", markers = \"python_full_version <= \\\"3.11.2\\\"\"}\n\n[package.extras]\nhiredis = [\"hiredis (>=1.0.0)\"]\nocsp = [\"cryptography (>=36.0.1)\", \"pyopenssl (==20.0.1)\", \"requests (>=2.26.0)\"]\n\n[[package]]\nname = \"regex\"\nversion = \"2023.12.25\"\ndescription = \"Alternative regular expression module, to replace re.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"regex-2023.12.25-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:0694219a1d54336fd0445ea382d49d36882415c0134ee1e8332afd1529f0baa5\"},\n    {file = \"regex-2023.12.25-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:b014333bd0217ad3d54c143de9d4b9a3ca1c5a29a6d0d554952ea071cff0f1f8\"},\n    {file = \"regex-2023.12.25-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:d865984b3f71f6d0af64d0d88f5733521698f6c16f445bb09ce746c92c97c586\"},\n    {file = \"regex-2023.12.25-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:1e0eabac536b4cc7f57a5f3d095bfa557860ab912f25965e08fe1545e2ed8b4c\"},\n    {file = \"regex-2023.12.25-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:c25a8ad70e716f96e13a637802813f65d8a6760ef48672aa3502f4c24ea8b400\"},\n    {file = \"regex-2023.12.25-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a9b6d73353f777630626f403b0652055ebfe8ff142a44ec2cf18ae470395766e\"},\n    {file = \"regex-2023.12.25-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a9cc99d6946d750eb75827cb53c4371b8b0fe89c733a94b1573c9dd16ea6c9e4\"},\n    {file = \"regex-2023.12.25-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:88d1f7bef20c721359d8675f7d9f8e414ec5003d8f642fdfd8087777ff7f94b5\"},\n    {file = \"regex-2023.12.25-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:cb3fe77aec8f1995611f966d0c656fdce398317f850d0e6e7aebdfe61f40e1cd\"},\n    {file = \"regex-2023.12.25-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:7aa47c2e9ea33a4a2a05f40fcd3ea36d73853a2aae7b4feab6fc85f8bf2c9704\"},\n    {file = \"regex-2023.12.25-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:df26481f0c7a3f8739fecb3e81bc9da3fcfae34d6c094563b9d4670b047312e1\"},\n    {file = \"regex-2023.12.25-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:c40281f7d70baf6e0db0c2f7472b31609f5bc2748fe7275ea65a0b4601d9b392\"},\n    {file = \"regex-2023.12.25-cp310-cp310-musllinux_1_1_s390x.whl\", hash = \"sha256:d94a1db462d5690ebf6ae86d11c5e420042b9898af5dcf278bd97d6bda065423\"},\n    {file = \"regex-2023.12.25-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:ba1b30765a55acf15dce3f364e4928b80858fa8f979ad41f862358939bdd1f2f\"},\n    {file = \"regex-2023.12.25-cp310-cp310-win32.whl\", hash = \"sha256:150c39f5b964e4d7dba46a7962a088fbc91f06e606f023ce57bb347a3b2d4630\"},\n    {file = \"regex-2023.12.25-cp310-cp310-win_amd64.whl\", hash = \"sha256:09da66917262d9481c719599116c7dc0c321ffcec4b1f510c4f8a066f8768105\"},\n    {file = \"regex-2023.12.25-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:1b9d811f72210fa9306aeb88385b8f8bcef0dfbf3873410413c00aa94c56c2b6\"},\n    {file = \"regex-2023.12.25-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:d902a43085a308cef32c0d3aea962524b725403fd9373dea18110904003bac97\"},\n    {file = \"regex-2023.12.25-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:d166eafc19f4718df38887b2bbe1467a4f74a9830e8605089ea7a30dd4da8887\"},\n    {file = \"regex-2023.12.25-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c7ad32824b7f02bb3c9f80306d405a1d9b7bb89362d68b3c5a9be53836caebdb\"},\n    {file = \"regex-2023.12.25-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:636ba0a77de609d6510235b7f0e77ec494d2657108f777e8765efc060094c98c\"},\n    {file = \"regex-2023.12.25-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:0fda75704357805eb953a3ee15a2b240694a9a514548cd49b3c5124b4e2ad01b\"},\n    {file = \"regex-2023.12.25-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:f72cbae7f6b01591f90814250e636065850c5926751af02bb48da94dfced7baa\"},\n    {file = \"regex-2023.12.25-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:db2a0b1857f18b11e3b0e54ddfefc96af46b0896fb678c85f63fb8c37518b3e7\"},\n    {file = \"regex-2023.12.25-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:7502534e55c7c36c0978c91ba6f61703faf7ce733715ca48f499d3dbbd7657e0\"},\n    {file = \"regex-2023.12.25-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:e8c7e08bb566de4faaf11984af13f6bcf6a08f327b13631d41d62592681d24fe\"},\n    {file = \"regex-2023.12.25-cp311-cp311-musllinux_1_1_ppc64le.whl\", hash = \"sha256:283fc8eed679758de38fe493b7d7d84a198b558942b03f017b1f94dda8efae80\"},\n    {file = \"regex-2023.12.25-cp311-cp311-musllinux_1_1_s390x.whl\", hash = \"sha256:f44dd4d68697559d007462b0a3a1d9acd61d97072b71f6d1968daef26bc744bd\"},\n    {file = \"regex-2023.12.25-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:67d3ccfc590e5e7197750fcb3a2915b416a53e2de847a728cfa60141054123d4\"},\n    {file = \"regex-2023.12.25-cp311-cp311-win32.whl\", hash = \"sha256:68191f80a9bad283432385961d9efe09d783bcd36ed35a60fb1ff3f1ec2efe87\"},\n    {file = \"regex-2023.12.25-cp311-cp311-win_amd64.whl\", hash = \"sha256:7d2af3f6b8419661a0c421584cfe8aaec1c0e435ce7e47ee2a97e344b98f794f\"},\n    {file = \"regex-2023.12.25-cp312-cp312-macosx_10_9_universal2.whl\", hash = \"sha256:8a0ccf52bb37d1a700375a6b395bff5dd15c50acb745f7db30415bae3c2b0715\"},\n    {file = \"regex-2023.12.25-cp312-cp312-macosx_10_9_x86_64.whl\", hash = \"sha256:c3c4a78615b7762740531c27cf46e2f388d8d727d0c0c739e72048beb26c8a9d\"},\n    {file = \"regex-2023.12.25-cp312-cp312-macosx_11_0_arm64.whl\", hash = \"sha256:ad83e7545b4ab69216cef4cc47e344d19622e28aabec61574b20257c65466d6a\"},\n    {file = \"regex-2023.12.25-cp312-cp312-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b7a635871143661feccce3979e1727c4e094f2bdfd3ec4b90dfd4f16f571a87a\"},\n    {file = \"regex-2023.12.25-cp312-cp312-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:d498eea3f581fbe1b34b59c697512a8baef88212f92e4c7830fcc1499f5b45a5\"},\n    {file = \"regex-2023.12.25-cp312-cp312-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:43f7cd5754d02a56ae4ebb91b33461dc67be8e3e0153f593c509e21d219c5060\"},\n    {file = \"regex-2023.12.25-cp312-cp312-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:51f4b32f793812714fd5307222a7f77e739b9bc566dc94a18126aba3b92b98a3\"},\n    {file = \"regex-2023.12.25-cp312-cp312-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ba99d8077424501b9616b43a2d208095746fb1284fc5ba490139651f971d39d9\"},\n    {file = \"regex-2023.12.25-cp312-cp312-musllinux_1_1_aarch64.whl\", hash = \"sha256:4bfc2b16e3ba8850e0e262467275dd4d62f0d045e0e9eda2bc65078c0110a11f\"},\n    {file = \"regex-2023.12.25-cp312-cp312-musllinux_1_1_i686.whl\", hash = \"sha256:8c2c19dae8a3eb0ea45a8448356ed561be843b13cbc34b840922ddf565498c1c\"},\n    {file = \"regex-2023.12.25-cp312-cp312-musllinux_1_1_ppc64le.whl\", hash = \"sha256:60080bb3d8617d96f0fb7e19796384cc2467447ef1c491694850ebd3670bc457\"},\n    {file = \"regex-2023.12.25-cp312-cp312-musllinux_1_1_s390x.whl\", hash = \"sha256:b77e27b79448e34c2c51c09836033056a0547aa360c45eeeb67803da7b0eedaf\"},\n    {file = \"regex-2023.12.25-cp312-cp312-musllinux_1_1_x86_64.whl\", hash = \"sha256:518440c991f514331f4850a63560321f833979d145d7d81186dbe2f19e27ae3d\"},\n    {file = \"regex-2023.12.25-cp312-cp312-win32.whl\", hash = \"sha256:e2610e9406d3b0073636a3a2e80db05a02f0c3169b5632022b4e81c0364bcda5\"},\n    {file = \"regex-2023.12.25-cp312-cp312-win_amd64.whl\", hash = \"sha256:cc37b9aeebab425f11f27e5e9e6cf580be7206c6582a64467a14dda211abc232\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:da695d75ac97cb1cd725adac136d25ca687da4536154cdc2815f576e4da11c69\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d126361607b33c4eb7b36debc173bf25d7805847346dd4d99b5499e1fef52bc7\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:4719bb05094d7d8563a450cf8738d2e1061420f79cfcc1fa7f0a44744c4d8f73\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:5dd58946bce44b53b06d94aa95560d0b243eb2fe64227cba50017a8d8b3cd3e2\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:22a86d9fff2009302c440b9d799ef2fe322416d2d58fc124b926aa89365ec482\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:2aae8101919e8aa05ecfe6322b278f41ce2994c4a430303c4cd163fef746e04f\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:e692296c4cc2873967771345a876bcfc1c547e8dd695c6b89342488b0ea55cd8\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:263ef5cc10979837f243950637fffb06e8daed7f1ac1e39d5910fd29929e489a\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:d6f7e255e5fa94642a0724e35406e6cb7001c09d476ab5fce002f652b36d0c39\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:88ad44e220e22b63b0f8f81f007e8abbb92874d8ced66f32571ef8beb0643b2b\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-musllinux_1_1_s390x.whl\", hash = \"sha256:3a17d3ede18f9cedcbe23d2daa8a2cd6f59fe2bf082c567e43083bba3fb00347\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:d15b274f9e15b1a0b7a45d2ac86d1f634d983ca40d6b886721626c47a400bf39\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-win32.whl\", hash = \"sha256:ed19b3a05ae0c97dd8f75a5d8f21f7723a8c33bbc555da6bbe1f96c470139d3c\"},\n    {file = \"regex-2023.12.25-cp37-cp37m-win_amd64.whl\", hash = \"sha256:a6d1047952c0b8104a1d371f88f4ab62e6275567d4458c1e26e9627ad489b445\"},\n    {file = \"regex-2023.12.25-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:b43523d7bc2abd757119dbfb38af91b5735eea45537ec6ec3a5ec3f9562a1c53\"},\n    {file = \"regex-2023.12.25-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:efb2d82f33b2212898f1659fb1c2e9ac30493ac41e4d53123da374c3b5541e64\"},\n    {file = \"regex-2023.12.25-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:b7fca9205b59c1a3d5031f7e64ed627a1074730a51c2a80e97653e3e9fa0d415\"},\n    {file = \"regex-2023.12.25-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:086dd15e9435b393ae06f96ab69ab2d333f5d65cbe65ca5a3ef0ec9564dfe770\"},\n    {file = \"regex-2023.12.25-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:e81469f7d01efed9b53740aedd26085f20d49da65f9c1f41e822a33992cb1590\"},\n    {file = \"regex-2023.12.25-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:34e4af5b27232f68042aa40a91c3b9bb4da0eeb31b7632e0091afc4310afe6cb\"},\n    {file = \"regex-2023.12.25-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9852b76ab558e45b20bf1893b59af64a28bd3820b0c2efc80e0a70a4a3ea51c1\"},\n    {file = \"regex-2023.12.25-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:ff100b203092af77d1a5a7abe085b3506b7eaaf9abf65b73b7d6905b6cb76988\"},\n    {file = \"regex-2023.12.25-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:cc038b2d8b1470364b1888a98fd22d616fba2b6309c5b5f181ad4483e0017861\"},\n    {file = \"regex-2023.12.25-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:094ba386bb5c01e54e14434d4caabf6583334090865b23ef58e0424a6286d3dc\"},\n    {file = \"regex-2023.12.25-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:5cd05d0f57846d8ba4b71d9c00f6f37d6b97d5e5ef8b3c3840426a475c8f70f4\"},\n    {file = \"regex-2023.12.25-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:9aa1a67bbf0f957bbe096375887b2505f5d8ae16bf04488e8b0f334c36e31360\"},\n    {file = \"regex-2023.12.25-cp38-cp38-musllinux_1_1_s390x.whl\", hash = \"sha256:98a2636994f943b871786c9e82bfe7883ecdaba2ef5df54e1450fa9869d1f756\"},\n    {file = \"regex-2023.12.25-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:37f8e93a81fc5e5bd8db7e10e62dc64261bcd88f8d7e6640aaebe9bc180d9ce2\"},\n    {file = \"regex-2023.12.25-cp38-cp38-win32.whl\", hash = \"sha256:d78bd484930c1da2b9679290a41cdb25cc127d783768a0369d6b449e72f88beb\"},\n    {file = \"regex-2023.12.25-cp38-cp38-win_amd64.whl\", hash = \"sha256:b521dcecebc5b978b447f0f69b5b7f3840eac454862270406a39837ffae4e697\"},\n    {file = \"regex-2023.12.25-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:f7bc09bc9c29ebead055bcba136a67378f03d66bf359e87d0f7c759d6d4ffa31\"},\n    {file = \"regex-2023.12.25-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:e14b73607d6231f3cc4622809c196b540a6a44e903bcfad940779c80dffa7be7\"},\n    {file = \"regex-2023.12.25-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:9eda5f7a50141291beda3edd00abc2d4a5b16c29c92daf8d5bd76934150f3edc\"},\n    {file = \"regex-2023.12.25-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:cc6bb9aa69aacf0f6032c307da718f61a40cf970849e471254e0e91c56ffca95\"},\n    {file = \"regex-2023.12.25-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:298dc6354d414bc921581be85695d18912bea163a8b23cac9a2562bbcd5088b1\"},\n    {file = \"regex-2023.12.25-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2f4e475a80ecbd15896a976aa0b386c5525d0ed34d5c600b6d3ebac0a67c7ddf\"},\n    {file = \"regex-2023.12.25-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:531ac6cf22b53e0696f8e1d56ce2396311254eb806111ddd3922c9d937151dae\"},\n    {file = \"regex-2023.12.25-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:22f3470f7524b6da61e2020672df2f3063676aff444db1daa283c2ea4ed259d6\"},\n    {file = \"regex-2023.12.25-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:89723d2112697feaa320c9d351e5f5e7b841e83f8b143dba8e2d2b5f04e10923\"},\n    {file = \"regex-2023.12.25-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:0ecf44ddf9171cd7566ef1768047f6e66975788258b1c6c6ca78098b95cf9a3d\"},\n    {file = \"regex-2023.12.25-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:905466ad1702ed4acfd67a902af50b8db1feeb9781436372261808df7a2a7bca\"},\n    {file = \"regex-2023.12.25-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:4558410b7a5607a645e9804a3e9dd509af12fb72b9825b13791a37cd417d73a5\"},\n    {file = \"regex-2023.12.25-cp39-cp39-musllinux_1_1_s390x.whl\", hash = \"sha256:7e316026cc1095f2a3e8cc012822c99f413b702eaa2ca5408a513609488cb62f\"},\n    {file = \"regex-2023.12.25-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:3b1de218d5375cd6ac4b5493e0b9f3df2be331e86520f23382f216c137913d20\"},\n    {file = \"regex-2023.12.25-cp39-cp39-win32.whl\", hash = \"sha256:11a963f8e25ab5c61348d090bf1b07f1953929c13bd2309a0662e9ff680763c9\"},\n    {file = \"regex-2023.12.25-cp39-cp39-win_amd64.whl\", hash = \"sha256:e693e233ac92ba83a87024e1d32b5f9ab15ca55ddd916d878146f4e3406b5c91\"},\n    {file = \"regex-2023.12.25.tar.gz\", hash = \"sha256:29171aa128da69afdf4bde412d5bedc335f2ca8fcfe4489038577d05f16181e5\"},\n]\n\n[[package]]\nname = \"requests\"\nversion = \"2.31.0\"\ndescription = \"Python HTTP for Humans.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"requests-2.31.0-py3-none-any.whl\", hash = \"sha256:58cd2187c01e70e6e26505bca751777aa9f2ee0b7f4300988b709f44e013003f\"},\n    {file = \"requests-2.31.0.tar.gz\", hash = \"sha256:942c5a758f98d790eaed1a29cb6eefc7ffb0d1cf7af05c3d2791656dbd6ad1e1\"},\n]\n\n[package.dependencies]\ncertifi = \">=2017.4.17\"\ncharset-normalizer = \">=2,<4\"\nidna = \">=2.5,<4\"\nurllib3 = \">=1.21.1,<3\"\n\n[package.extras]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7)\"]\nuse-chardet-on-py3 = [\"chardet (>=3.0.2,<6)\"]\n\n[[package]]\nname = \"requests-file\"\nversion = \"1.5.1\"\ndescription = \"File transport adapter for Requests\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"requests-file-1.5.1.tar.gz\", hash = \"sha256:07d74208d3389d01c38ab89ef403af0cfec63957d53a0081d8eca738d0247d8e\"},\n    {file = \"requests_file-1.5.1-py2.py3-none-any.whl\", hash = \"sha256:dfe5dae75c12481f68ba353183c53a65e6044c923e64c24b2209f6c7570ca953\"},\n]\n\n[package.dependencies]\nrequests = \">=1.0.0\"\nsix = \"*\"\n\n[[package]]\nname = \"requests-oauthlib\"\nversion = \"1.3.0\"\ndescription = \"OAuthlib authentication support for Requests.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"requests-oauthlib-1.3.0.tar.gz\", hash = \"sha256:b4261601a71fd721a8bd6d7aa1cc1d6a8a93b4a9f5e96626f8e4d91e8beeaa6a\"},\n    {file = \"requests_oauthlib-1.3.0-py2.py3-none-any.whl\", hash = \"sha256:7f71572defaecd16372f9006f33c2ec8c077c3cfa6f5911a9a90202beb513f3d\"},\n]\n\n[package.dependencies]\noauthlib = \">=3.0.0\"\nrequests = \">=2.0.0\"\n\n[package.extras]\nrsa = [\"oauthlib[signedtoken] (>=3.0.0)\"]\n\n[[package]]\nname = \"rsa\"\nversion = \"4.6\"\ndescription = \"Pure-Python RSA implementation\"\noptional = false\npython-versions = \">=3.5, <4\"\nfiles = [\n    {file = \"rsa-4.6-py3-none-any.whl\", hash = \"sha256:6166864e23d6b5195a5cfed6cd9fed0fe774e226d8f854fcb23b7bbef0350233\"},\n    {file = \"rsa-4.6.tar.gz\", hash = \"sha256:109ea5a66744dd859bf16fe904b8d8b627adafb9408753161e766a92e7d681fa\"},\n]\n\n[package.dependencies]\npyasn1 = \">=0.1.3\"\n\n[[package]]\nname = \"ruamel.yaml\"\nversion = \"0.16.12\"\ndescription = \"ruamel.yaml is a YAML parser/emitter that supports roundtrip preservation of comments, seq/map flow style, and map key order\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"ruamel.yaml-0.16.12-py2.py3-none-any.whl\", hash = \"sha256:012b9470a0ea06e4e44e99e7920277edf6b46eee0232a04487ea73a7386340a5\"},\n    {file = \"ruamel.yaml-0.16.12.tar.gz\", hash = \"sha256:076cc0bc34f1966d920a49f18b52b6ad559fbe656a0748e3535cf7b3f29ebf9e\"},\n]\n\n[package.extras]\ndocs = [\"ryd\"]\njinja2 = [\"ruamel.yaml.jinja2 (>=0.2)\"]\n\n[[package]]\nname = \"ruff\"\nversion = \"0.1.5\"\ndescription = \"An extremely fast Python linter and code formatter, written in Rust.\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"ruff-0.1.5-py3-none-macosx_10_7_x86_64.whl\", hash = \"sha256:32d47fc69261c21a4c48916f16ca272bf2f273eb635d91c65d5cd548bf1f3d96\"},\n    {file = \"ruff-0.1.5-py3-none-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl\", hash = \"sha256:171276c1df6c07fa0597fb946139ced1c2978f4f0b8254f201281729981f3c17\"},\n    {file = \"ruff-0.1.5-py3-none-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:17ef33cd0bb7316ca65649fc748acc1406dfa4da96a3d0cde6d52f2e866c7b39\"},\n    {file = \"ruff-0.1.5-py3-none-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:b2c205827b3f8c13b4a432e9585750b93fd907986fe1aec62b2a02cf4401eee6\"},\n    {file = \"ruff-0.1.5-py3-none-manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:bb408e3a2ad8f6881d0f2e7ad70cddb3ed9f200eb3517a91a245bbe27101d379\"},\n    {file = \"ruff-0.1.5-py3-none-manylinux_2_17_ppc64.manylinux2014_ppc64.whl\", hash = \"sha256:f20dc5e5905ddb407060ca27267c7174f532375c08076d1a953cf7bb016f5a24\"},\n    {file = \"ruff-0.1.5-py3-none-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:aafb9d2b671ed934998e881e2c0f5845a4295e84e719359c71c39a5363cccc91\"},\n    {file = \"ruff-0.1.5-py3-none-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:a4894dddb476597a0ba4473d72a23151b8b3b0b5f958f2cf4d3f1c572cdb7af7\"},\n    {file = \"ruff-0.1.5-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a00a7ec893f665ed60008c70fe9eeb58d210e6b4d83ec6654a9904871f982a2a\"},\n    {file = \"ruff-0.1.5-py3-none-musllinux_1_2_aarch64.whl\", hash = \"sha256:a8c11206b47f283cbda399a654fd0178d7a389e631f19f51da15cbe631480c5b\"},\n    {file = \"ruff-0.1.5-py3-none-musllinux_1_2_armv7l.whl\", hash = \"sha256:fa29e67b3284b9a79b1a85ee66e293a94ac6b7bb068b307a8a373c3d343aa8ec\"},\n    {file = \"ruff-0.1.5-py3-none-musllinux_1_2_i686.whl\", hash = \"sha256:9b97fd6da44d6cceb188147b68db69a5741fbc736465b5cea3928fdac0bc1aeb\"},\n    {file = \"ruff-0.1.5-py3-none-musllinux_1_2_x86_64.whl\", hash = \"sha256:721f4b9d3b4161df8dc9f09aa8562e39d14e55a4dbaa451a8e55bdc9590e20f4\"},\n    {file = \"ruff-0.1.5-py3-none-win32.whl\", hash = \"sha256:f80c73bba6bc69e4fdc73b3991db0b546ce641bdcd5b07210b8ad6f64c79f1ab\"},\n    {file = \"ruff-0.1.5-py3-none-win_amd64.whl\", hash = \"sha256:c21fe20ee7d76206d290a76271c1af7a5096bc4c73ab9383ed2ad35f852a0087\"},\n    {file = \"ruff-0.1.5-py3-none-win_arm64.whl\", hash = \"sha256:82bfcb9927e88c1ed50f49ac6c9728dab3ea451212693fe40d08d314663e412f\"},\n    {file = \"ruff-0.1.5.tar.gz\", hash = \"sha256:5cbec0ef2ae1748fb194f420fb03fb2c25c3258c86129af7172ff8f198f125ab\"},\n]\n\n[[package]]\nname = \"s3transfer\"\nversion = \"0.10.3\"\ndescription = \"An Amazon S3 Transfer Manager\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"s3transfer-0.10.3-py3-none-any.whl\", hash = \"sha256:263ed587a5803c6c708d3ce44dc4dfedaab4c1a32e8329bab818933d79ddcf5d\"},\n    {file = \"s3transfer-0.10.3.tar.gz\", hash = \"sha256:4f50ed74ab84d474ce614475e0b8d5047ff080810aac5d01ea25231cfc944b0c\"},\n]\n\n[package.dependencies]\nbotocore = \">=1.33.2,<2.0a.0\"\n\n[package.extras]\ncrt = [\"botocore[crt] (>=1.33.2,<2.0a.0)\"]\n\n[[package]]\nname = \"sentry-sdk\"\nversion = \"2.16.0\"\ndescription = \"Python client for Sentry (https://sentry.io)\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"sentry_sdk-2.16.0-py2.py3-none-any.whl\", hash = \"sha256:49139c31ebcd398f4f6396b18910610a0c1602f6e67083240c33019d1f6aa30c\"},\n    {file = \"sentry_sdk-2.16.0.tar.gz\", hash = \"sha256:90f733b32e15dfc1999e6b7aca67a38688a567329de4d6e184154a73f96c6892\"},\n]\n\n[package.dependencies]\ncertifi = \"*\"\nurllib3 = \">=1.26.11\"\n\n[package.extras]\naiohttp = [\"aiohttp (>=3.5)\"]\nanthropic = [\"anthropic (>=0.16)\"]\narq = [\"arq (>=0.23)\"]\nasyncpg = [\"asyncpg (>=0.23)\"]\nbeam = [\"apache-beam (>=2.12)\"]\nbottle = [\"bottle (>=0.12.13)\"]\ncelery = [\"celery (>=3)\"]\ncelery-redbeat = [\"celery-redbeat (>=2)\"]\nchalice = [\"chalice (>=1.16.0)\"]\nclickhouse-driver = [\"clickhouse-driver (>=0.2.0)\"]\ndjango = [\"django (>=1.8)\"]\nfalcon = [\"falcon (>=1.4)\"]\nfastapi = [\"fastapi (>=0.79.0)\"]\nflask = [\"blinker (>=1.1)\", \"flask (>=0.11)\", \"markupsafe\"]\ngrpcio = [\"grpcio (>=1.21.1)\", \"protobuf (>=3.8.0)\"]\nhttp2 = [\"httpcore[http2] (==1.*)\"]\nhttpx = [\"httpx (>=0.16.0)\"]\nhuey = [\"huey (>=2)\"]\nhuggingface-hub = [\"huggingface-hub (>=0.22)\"]\nlangchain = [\"langchain (>=0.0.210)\"]\nlitestar = [\"litestar (>=2.0.0)\"]\nloguru = [\"loguru (>=0.5)\"]\nopenai = [\"openai (>=1.0.0)\", \"tiktoken (>=0.3.0)\"]\nopentelemetry = [\"opentelemetry-distro (>=0.35b0)\"]\nopentelemetry-experimental = [\"opentelemetry-distro\"]\npure-eval = [\"asttokens\", \"executing\", \"pure-eval\"]\npymongo = [\"pymongo (>=3.1)\"]\npyspark = [\"pyspark (>=2.4.4)\"]\nquart = [\"blinker (>=1.1)\", \"quart (>=0.16.1)\"]\nrq = [\"rq (>=0.6)\"]\nsanic = [\"sanic (>=0.8)\"]\nsqlalchemy = [\"sqlalchemy (>=1.2)\"]\nstarlette = [\"starlette (>=0.19.1)\"]\nstarlite = [\"starlite (>=1.48)\"]\ntornado = [\"tornado (>=6)\"]\n\n[[package]]\nname = \"setuptools\"\nversion = \"67.6.0\"\ndescription = \"Easily download, build, install, upgrade, and uninstall Python packages\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"setuptools-67.6.0-py3-none-any.whl\", hash = \"sha256:b78aaa36f6b90a074c1fa651168723acbf45d14cb1196b6f02c0fd07f17623b2\"},\n    {file = \"setuptools-67.6.0.tar.gz\", hash = \"sha256:2ee892cd5f29f3373097f5a814697e397cf3ce313616df0af11231e2ad118077\"},\n]\n\n[package.extras]\ndocs = [\"furo\", \"jaraco.packaging (>=9)\", \"jaraco.tidelift (>=1.4)\", \"pygments-github-lexers (==0.0.5)\", \"rst.linker (>=1.9)\", \"sphinx (>=3.5)\", \"sphinx-favicon\", \"sphinx-hoverxref (<2)\", \"sphinx-inline-tabs\", \"sphinx-lint\", \"sphinx-notfound-page (==0.8.3)\", \"sphinx-reredirects\", \"sphinxcontrib-towncrier\"]\ntesting = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"flake8 (<5)\", \"flake8-2020\", \"ini2toml[lite] (>=0.9)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pip (>=19.1)\", \"pip-run (>=8.8)\", \"pytest (>=6)\", \"pytest-black (>=0.3.7)\", \"pytest-checkdocs (>=2.4)\", \"pytest-cov\", \"pytest-enabler (>=1.3)\", \"pytest-flake8\", \"pytest-mypy (>=0.9.1)\", \"pytest-perf\", \"pytest-timeout\", \"pytest-xdist\", \"tomli-w (>=1.0.0)\", \"virtualenv (>=13.0.0)\", \"wheel\"]\ntesting-integration = [\"build[virtualenv]\", \"filelock (>=3.4.0)\", \"jaraco.envs (>=2.2)\", \"jaraco.path (>=3.2.0)\", \"pytest\", \"pytest-enabler\", \"pytest-xdist\", \"tomli\", \"virtualenv (>=13.0.0)\", \"wheel\"]\n\n[[package]]\nname = \"simplejson\"\nversion = \"3.17.2\"\ndescription = \"Simple, fast, extensible JSON encoder/decoder for Python\"\noptional = false\npython-versions = \">=2.5, !=3.0.*, !=3.1.*, !=3.2.*\"\nfiles = [\n    {file = \"simplejson-3.17.2-cp27-cp27m-macosx_10_13_x86_64.whl\", hash = \"sha256:2d3eab2c3fe52007d703a26f71cf649a8c771fcdd949a3ae73041ba6797cfcf8\"},\n    {file = \"simplejson-3.17.2-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:813846738277729d7db71b82176204abc7fdae2f566e2d9fcf874f9b6472e3e6\"},\n    {file = \"simplejson-3.17.2-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:292c2e3f53be314cc59853bd20a35bf1f965f3bc121e007ab6fd526ed412a85d\"},\n    {file = \"simplejson-3.17.2-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:0dd9d9c738cb008bfc0862c9b8fa6743495c03a0ed543884bf92fb7d30f8d043\"},\n    {file = \"simplejson-3.17.2-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:42b8b8dd0799f78e067e2aaae97e60d58a8f63582939af60abce4c48631a0aa4\"},\n    {file = \"simplejson-3.17.2-cp27-cp27m-win32.whl\", hash = \"sha256:8042040af86a494a23c189b5aa0ea9433769cc029707833f261a79c98e3375f9\"},\n    {file = \"simplejson-3.17.2-cp27-cp27m-win_amd64.whl\", hash = \"sha256:034550078a11664d77bc1a8364c90bb7eef0e44c2dbb1fd0a4d92e3997088667\"},\n    {file = \"simplejson-3.17.2-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:fed0f22bf1313ff79c7fc318f7199d6c2f96d4de3234b2f12a1eab350e597c06\"},\n    {file = \"simplejson-3.17.2-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:2e7b57c2c146f8e4dadf84977a83f7ee50da17c8861fd7faf694d55e3274784f\"},\n    {file = \"simplejson-3.17.2-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:da3c55cdc66cfc3fffb607db49a42448785ea2732f055ac1549b69dcb392663b\"},\n    {file = \"simplejson-3.17.2-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:c1cb29b1fced01f97e6d5631c3edc2dadb424d1f4421dad079cb13fc97acb42f\"},\n    {file = \"simplejson-3.17.2-cp33-cp33m-win32.whl\", hash = \"sha256:8f713ea65958ef40049b6c45c40c206ab363db9591ff5a49d89b448933fa5746\"},\n    {file = \"simplejson-3.17.2-cp33-cp33m-win_amd64.whl\", hash = \"sha256:344e2d920a7f27b4023c087ab539877a1e39ce8e3e90b867e0bfa97829824748\"},\n    {file = \"simplejson-3.17.2-cp34-cp34m-win32.whl\", hash = \"sha256:05b43d568300c1cd43f95ff4bfcff984bc658aa001be91efb3bb21df9d6288d3\"},\n    {file = \"simplejson-3.17.2-cp34-cp34m-win_amd64.whl\", hash = \"sha256:cff6453e25204d3369c47b97dd34783ca820611bd334779d22192da23784194b\"},\n    {file = \"simplejson-3.17.2-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:8acf76443cfb5c949b6e781c154278c059b09ac717d2757a830c869ba000cf8d\"},\n    {file = \"simplejson-3.17.2-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:869a183c8e44bc03be1b2bbcc9ec4338e37fa8557fc506bf6115887c1d3bb956\"},\n    {file = \"simplejson-3.17.2-cp35-cp35m-manylinux2010_i686.whl\", hash = \"sha256:5c659a0efc80aaaba57fcd878855c8534ecb655a28ac8508885c50648e6e659d\"},\n    {file = \"simplejson-3.17.2-cp35-cp35m-manylinux2010_x86_64.whl\", hash = \"sha256:72d8a3ffca19a901002d6b068cf746be85747571c6a7ba12cbcf427bfb4ed971\"},\n    {file = \"simplejson-3.17.2-cp35-cp35m-manylinux2014_aarch64.whl\", hash = \"sha256:4b3442249d5e3893b90cb9f72c7d6ce4d2ea144d2c0d9f75b9ae1e5460f3121a\"},\n    {file = \"simplejson-3.17.2-cp35-cp35m-win32.whl\", hash = \"sha256:e058c7656c44fb494a11443191e381355388443d543f6fc1a245d5d238544396\"},\n    {file = \"simplejson-3.17.2-cp35-cp35m-win_amd64.whl\", hash = \"sha256:934115642c8ba9659b402c8bdbdedb48651fb94b576e3b3efd1ccb079609b04a\"},\n    {file = \"simplejson-3.17.2-cp36-cp36m-macosx_10_13_x86_64.whl\", hash = \"sha256:ffd4e4877a78c84d693e491b223385e0271278f5f4e1476a4962dca6824ecfeb\"},\n    {file = \"simplejson-3.17.2-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:10fc250c3edea4abc15d930d77274ddb8df4803453dde7ad50c2f5565a18a4bb\"},\n    {file = \"simplejson-3.17.2-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:76ac9605bf2f6d9b56abf6f9da9047a8782574ad3531c82eae774947ae99cc3f\"},\n    {file = \"simplejson-3.17.2-cp36-cp36m-manylinux2010_i686.whl\", hash = \"sha256:7f10f8ba9c1b1430addc7dd385fc322e221559d3ae49b812aebf57470ce8de45\"},\n    {file = \"simplejson-3.17.2-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:bc00d1210567a4cdd215ac6e17dc00cb9893ee521cee701adfd0fa43f7c73139\"},\n    {file = \"simplejson-3.17.2-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:af4868da7dd53296cd7630687161d53a7ebe2e63814234631445697bd7c29f46\"},\n    {file = \"simplejson-3.17.2-cp36-cp36m-win32.whl\", hash = \"sha256:7d276f69bfc8c7ba6c717ba8deaf28f9d3c8450ff0aa8713f5a3280e232be16b\"},\n    {file = \"simplejson-3.17.2-cp36-cp36m-win_amd64.whl\", hash = \"sha256:a55c76254d7cf8d4494bc508e7abb993a82a192d0db4552421e5139235604625\"},\n    {file = \"simplejson-3.17.2-cp37-cp37m-macosx_10_14_x86_64.whl\", hash = \"sha256:9a2b7543559f8a1c9ed72724b549d8cc3515da7daf3e79813a15bdc4a769de25\"},\n    {file = \"simplejson-3.17.2-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:311f5dc2af07361725033b13cc3d0351de3da8bede3397d45650784c3f21fbcf\"},\n    {file = \"simplejson-3.17.2-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:2862beabfb9097a745a961426fe7daf66e1714151da8bb9a0c430dde3d59c7c0\"},\n    {file = \"simplejson-3.17.2-cp37-cp37m-manylinux2010_i686.whl\", hash = \"sha256:afebfc3dd3520d37056f641969ce320b071bc7a0800639c71877b90d053e087f\"},\n    {file = \"simplejson-3.17.2-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:d4813b30cb62d3b63ccc60dd12f2121780c7a3068db692daeb90f989877aaf04\"},\n    {file = \"simplejson-3.17.2-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:3fabde09af43e0cbdee407555383063f8b45bfb52c361bc5da83fcffdb4fd278\"},\n    {file = \"simplejson-3.17.2-cp37-cp37m-win32.whl\", hash = \"sha256:ceaa28a5bce8a46a130cd223e895080e258a88d51bf6e8de2fc54a6ef7e38c34\"},\n    {file = \"simplejson-3.17.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:9551f23e09300a9a528f7af20e35c9f79686d46d646152a0c8fc41d2d074d9b0\"},\n    {file = \"simplejson-3.17.2-cp38-cp38-macosx_10_14_x86_64.whl\", hash = \"sha256:c94dc64b1a389a416fc4218cd4799aa3756f25940cae33530a4f7f2f54f166da\"},\n    {file = \"simplejson-3.17.2-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:b59aa298137ca74a744c1e6e22cfc0bf9dca3a2f41f51bc92eb05695155d905a\"},\n    {file = \"simplejson-3.17.2-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:ad8f41c2357b73bc9e8606d2fa226233bf4d55d85a8982ecdfd55823a6959995\"},\n    {file = \"simplejson-3.17.2-cp38-cp38-manylinux2010_i686.whl\", hash = \"sha256:845a14f6deb124a3bcb98a62def067a67462a000e0508f256f9c18eff5847efc\"},\n    {file = \"simplejson-3.17.2-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:d0b64409df09edb4c365d95004775c988259efe9be39697d7315c42b7a5e7e94\"},\n    {file = \"simplejson-3.17.2-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:55d65f9cc1b733d85ef95ab11f559cce55c7649a2160da2ac7a078534da676c8\"},\n    {file = \"simplejson-3.17.2.tar.gz\", hash = \"sha256:75ecc79f26d99222a084fbdd1ce5aad3ac3a8bd535cd9059528452da38b68841\"},\n]\n\n[[package]]\nname = \"six\"\nversion = \"1.15.0\"\ndescription = \"Python 2 and 3 compatibility utilities\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*\"\nfiles = [\n    {file = \"six-1.15.0-py2.py3-none-any.whl\", hash = \"sha256:8b74bedcbbbaca38ff6d7491d76f2b06b3592611af620f8426e82dddb04a5ced\"},\n    {file = \"six-1.15.0.tar.gz\", hash = \"sha256:30639c035cdb23534cd4aa2dd52c3bf48f06e5f4a941509c8bafd8ce11080259\"},\n]\n\n[[package]]\nname = \"sqlalchemy\"\nversion = \"1.3.24\"\ndescription = \"Database Abstraction Library\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"SQLAlchemy-1.3.24-cp27-cp27m-macosx_10_14_x86_64.whl\", hash = \"sha256:87a2725ad7d41cd7376373c15fd8bf674e9c33ca56d0b8036add2d634dba372e\"},\n    {file = \"SQLAlchemy-1.3.24-cp27-cp27m-win32.whl\", hash = \"sha256:f597a243b8550a3a0b15122b14e49d8a7e622ba1c9d29776af741f1845478d79\"},\n    {file = \"SQLAlchemy-1.3.24-cp27-cp27m-win_amd64.whl\", hash = \"sha256:fc4cddb0b474b12ed7bdce6be1b9edc65352e8ce66bc10ff8cbbfb3d4047dbf4\"},\n    {file = \"SQLAlchemy-1.3.24-cp35-cp35m-macosx_10_14_x86_64.whl\", hash = \"sha256:f1149d6e5c49d069163e58a3196865e4321bad1803d7886e07d8710de392c548\"},\n    {file = \"SQLAlchemy-1.3.24-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:14f0eb5db872c231b20c18b1e5806352723a3a89fb4254af3b3e14f22eaaec75\"},\n    {file = \"SQLAlchemy-1.3.24-cp35-cp35m-manylinux2010_x86_64.whl\", hash = \"sha256:e98d09f487267f1e8d1179bf3b9d7709b30a916491997137dd24d6ae44d18d79\"},\n    {file = \"SQLAlchemy-1.3.24-cp35-cp35m-manylinux2014_aarch64.whl\", hash = \"sha256:fc1f2a5a5963e2e73bac4926bdaf7790c4d7d77e8fc0590817880e22dd9d0b8b\"},\n    {file = \"SQLAlchemy-1.3.24-cp35-cp35m-win32.whl\", hash = \"sha256:f3c5c52f7cb8b84bfaaf22d82cb9e6e9a8297f7c2ed14d806a0f5e4d22e83fb7\"},\n    {file = \"SQLAlchemy-1.3.24-cp35-cp35m-win_amd64.whl\", hash = \"sha256:0352db1befcbed2f9282e72843f1963860bf0e0472a4fa5cf8ee084318e0e6ab\"},\n    {file = \"SQLAlchemy-1.3.24-cp36-cp36m-macosx_10_14_x86_64.whl\", hash = \"sha256:2ed6343b625b16bcb63c5b10523fd15ed8934e1ed0f772c534985e9f5e73d894\"},\n    {file = \"SQLAlchemy-1.3.24-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:34fcec18f6e4b24b4a5f6185205a04f1eab1e56f8f1d028a2a03694ebcc2ddd4\"},\n    {file = \"SQLAlchemy-1.3.24-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:e47e257ba5934550d7235665eee6c911dc7178419b614ba9e1fbb1ce6325b14f\"},\n    {file = \"SQLAlchemy-1.3.24-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:816de75418ea0953b5eb7b8a74933ee5a46719491cd2b16f718afc4b291a9658\"},\n    {file = \"SQLAlchemy-1.3.24-cp36-cp36m-win32.whl\", hash = \"sha256:26155ea7a243cbf23287f390dba13d7927ffa1586d3208e0e8d615d0c506f996\"},\n    {file = \"SQLAlchemy-1.3.24-cp36-cp36m-win_amd64.whl\", hash = \"sha256:f03bd97650d2e42710fbe4cf8a59fae657f191df851fc9fc683ecef10746a375\"},\n    {file = \"SQLAlchemy-1.3.24-cp37-cp37m-macosx_10_14_x86_64.whl\", hash = \"sha256:a006d05d9aa052657ee3e4dc92544faae5fcbaafc6128217310945610d862d39\"},\n    {file = \"SQLAlchemy-1.3.24-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:1e2f89d2e5e3c7a88e25a3b0e43626dba8db2aa700253023b82e630d12b37109\"},\n    {file = \"SQLAlchemy-1.3.24-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:0d5d862b1cfbec5028ce1ecac06a3b42bc7703eb80e4b53fceb2738724311443\"},\n    {file = \"SQLAlchemy-1.3.24-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:0172423a27fbcae3751ef016663b72e1a516777de324a76e30efa170dbd3dd2d\"},\n    {file = \"SQLAlchemy-1.3.24-cp37-cp37m-win32.whl\", hash = \"sha256:d37843fb8df90376e9e91336724d78a32b988d3d20ab6656da4eb8ee3a45b63c\"},\n    {file = \"SQLAlchemy-1.3.24-cp37-cp37m-win_amd64.whl\", hash = \"sha256:c10ff6112d119f82b1618b6dc28126798481b9355d8748b64b9b55051eb4f01b\"},\n    {file = \"SQLAlchemy-1.3.24-cp38-cp38-macosx_10_14_x86_64.whl\", hash = \"sha256:861e459b0e97673af6cc5e7f597035c2e3acdfb2608132665406cded25ba64c7\"},\n    {file = \"SQLAlchemy-1.3.24-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:5de2464c254380d8a6c20a2746614d5a436260be1507491442cf1088e59430d2\"},\n    {file = \"SQLAlchemy-1.3.24-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:d375d8ccd3cebae8d90270f7aa8532fe05908f79e78ae489068f3b4eee5994e8\"},\n    {file = \"SQLAlchemy-1.3.24-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:014ea143572fee1c18322b7908140ad23b3994036ef4c0d630110faf942652f8\"},\n    {file = \"SQLAlchemy-1.3.24-cp38-cp38-win32.whl\", hash = \"sha256:6607ae6cd3a07f8a4c3198ffbf256c261661965742e2b5265a77cd5c679c9bba\"},\n    {file = \"SQLAlchemy-1.3.24-cp38-cp38-win_amd64.whl\", hash = \"sha256:fcb251305fa24a490b6a9ee2180e5f8252915fb778d3dafc70f9cc3f863827b9\"},\n    {file = \"SQLAlchemy-1.3.24-cp39-cp39-macosx_10_14_x86_64.whl\", hash = \"sha256:01aa5f803db724447c1d423ed583e42bf5264c597fd55e4add4301f163b0be48\"},\n    {file = \"SQLAlchemy-1.3.24-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:4d0e3515ef98aa4f0dc289ff2eebb0ece6260bbf37c2ea2022aad63797eacf60\"},\n    {file = \"SQLAlchemy-1.3.24-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:bce28277f308db43a6b4965734366f533b3ff009571ec7ffa583cb77539b84d6\"},\n    {file = \"SQLAlchemy-1.3.24-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:8110e6c414d3efc574543109ee618fe2c1f96fa31833a1ff36cc34e968c4f233\"},\n    {file = \"SQLAlchemy-1.3.24-cp39-cp39-win32.whl\", hash = \"sha256:ee5f5188edb20a29c1cc4a039b074fdc5575337c9a68f3063449ab47757bb064\"},\n    {file = \"SQLAlchemy-1.3.24-cp39-cp39-win_amd64.whl\", hash = \"sha256:09083c2487ca3c0865dc588e07aeaa25416da3d95f7482c07e92f47e080aa17b\"},\n    {file = \"SQLAlchemy-1.3.24.tar.gz\", hash = \"sha256:ebbb777cbf9312359b897bf81ba00dae0f5cb69fba2a18265dcc18a6f5ef7519\"},\n]\n\n[package.extras]\nmssql = [\"pyodbc\"]\nmssql-pymssql = [\"pymssql\"]\nmssql-pyodbc = [\"pyodbc\"]\nmysql = [\"mysqlclient\"]\noracle = [\"cx-oracle\"]\npostgresql = [\"psycopg2\"]\npostgresql-pg8000 = [\"pg8000 (<1.16.6)\"]\npostgresql-psycopg2binary = [\"psycopg2-binary\"]\npostgresql-psycopg2cffi = [\"psycopg2cffi\"]\npymysql = [\"pymysql\", \"pymysql (<1)\"]\n\n[[package]]\nname = \"sqlalchemy-utils\"\nversion = \"0.36.8\"\ndescription = \"Various utility functions for SQLAlchemy.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"SQLAlchemy-Utils-0.36.8.tar.gz\", hash = \"sha256:fb66e9956e41340011b70b80f898fde6064ec1817af77199ee21ace71d7d6ab0\"},\n]\n\n[package.dependencies]\nsix = \"*\"\nSQLAlchemy = \">=1.0\"\n\n[package.extras]\nanyjson = [\"anyjson (>=0.3.3)\"]\narrow = [\"arrow (>=0.3.4)\"]\nbabel = [\"Babel (>=1.3)\"]\ncolor = [\"colour (>=0.0.4)\"]\nencrypted = [\"cryptography (>=0.6)\"]\nintervals = [\"intervals (>=0.7.1)\"]\npassword = [\"passlib (>=1.6,<2.0)\"]\npendulum = [\"pendulum (>=2.0.5)\"]\nphone = [\"phonenumbers (>=5.9.2)\"]\ntest = [\"Jinja2 (>=2.3)\", \"Pygments (>=1.2)\", \"docutils (>=0.10)\", \"flake8 (>=2.4.0)\", \"flexmock (>=0.9.7)\", \"isort (>=4.2.2)\", \"mock (==2.0.0)\", \"pg8000 (>=1.12.4)\", \"psycopg2 (>=2.5.1)\", \"psycopg2cffi (>=2.8.1)\", \"pymysql\", \"pyodbc\", \"pytest (>=2.7.1)\", \"python-dateutil (>=2.6)\", \"pytz (>=2014.2)\"]\ntest-all = [\"Babel (>=1.3)\", \"Jinja2 (>=2.3)\", \"Pygments (>=1.2)\", \"anyjson (>=0.3.3)\", \"arrow (>=0.3.4)\", \"colour (>=0.0.4)\", \"cryptography (>=0.6)\", \"docutils (>=0.10)\", \"flake8 (>=2.4.0)\", \"flexmock (>=0.9.7)\", \"furl (>=0.4.1)\", \"intervals (>=0.7.1)\", \"isort (>=4.2.2)\", \"mock (==2.0.0)\", \"passlib (>=1.6,<2.0)\", \"pendulum (>=2.0.5)\", \"pg8000 (>=1.12.4)\", \"phonenumbers (>=5.9.2)\", \"psycopg2 (>=2.5.1)\", \"psycopg2cffi (>=2.8.1)\", \"pymysql\", \"pyodbc\", \"pytest (>=2.7.1)\", \"python-dateutil\", \"python-dateutil (>=2.6)\", \"pytz (>=2014.2)\"]\ntimezone = [\"python-dateutil\"]\nurl = [\"furl (>=0.4.1)\"]\n\n[[package]]\nname = \"sqlparse\"\nversion = \"0.4.4\"\ndescription = \"A non-validating SQL parser.\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"sqlparse-0.4.4-py3-none-any.whl\", hash = \"sha256:5430a4fe2ac7d0f93e66f1efc6e1338a41884b7ddf2a350cedd20ccc4d9d28f3\"},\n    {file = \"sqlparse-0.4.4.tar.gz\", hash = \"sha256:d446183e84b8349fa3061f0fe7f06ca94ba65b426946ffebe6e3e8295332420c\"},\n]\n\n[package.extras]\ndev = [\"build\", \"flake8\"]\ndoc = [\"sphinx\"]\ntest = [\"pytest\", \"pytest-cov\"]\n\n[[package]]\nname = \"strictyaml\"\nversion = \"1.1.0\"\ndescription = \"Strict, typed YAML parser\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"strictyaml-1.1.0.tar.gz\", hash = \"sha256:6b07dbd4f77ab023ed4167c43ffc1b9f9354fb6075cc6ff3b91fefcbb80342ca\"},\n]\n\n[package.dependencies]\npython-dateutil = \">=2.6.0\"\n\"ruamel.yaml\" = \">=0.14.2\"\n\n[[package]]\nname = \"tld\"\nversion = \"0.12.6\"\ndescription = \"Extract the top-level domain (TLD) from the URL given.\"\noptional = false\npython-versions = \">=2.7, <4\"\nfiles = [\n    {file = \"tld-0.12.6-py27-none-any.whl\", hash = \"sha256:ef5b162d6fa295822dacd4fe4df1b62d8df2550795a97399a8905821b58d3702\"},\n    {file = \"tld-0.12.6-py35-none-any.whl\", hash = \"sha256:826bbe61dccc8d63144b51caef83e1373fbaac6f9ada46fca7846021f5d36fef\"},\n    {file = \"tld-0.12.6-py36-none-any.whl\", hash = \"sha256:843844e4256c943983d86366b5af3ac9cd1c9a0b6465f04d9f70e3b4c1a7989f\"},\n    {file = \"tld-0.12.6-py37-none-any.whl\", hash = \"sha256:a92ac6b84917e7d9e934434b8d37e9be534598f138fbb86b3c0d5426f2621890\"},\n    {file = \"tld-0.12.6-py38-none-any.whl\", hash = \"sha256:266106ad9035f54cd5cce5f823911a51f697e7c58cb45bfbd6c53b4c2976ece2\"},\n    {file = \"tld-0.12.6-py39-none-any.whl\", hash = \"sha256:b6650f2d5392a49760064bc55d73ce3397a378ef24ded96efb516c6b8ec68c26\"},\n    {file = \"tld-0.12.6.tar.gz\", hash = \"sha256:69fed19d26bb3f715366fb4af66fdeace896c55c052b00e8aaba3a7b63f3e7f0\"},\n]\n\n[[package]]\nname = \"tldextract\"\nversion = \"3.1.2\"\ndescription = \"Accurately separate the TLD from the registered domain and subdomains of a URL, using the Public Suffix List. By default, this includes the public ICANN TLDs and their exceptions. You can optionally support the Public Suffix List's private domains as well.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"tldextract-3.1.2-py2.py3-none-any.whl\", hash = \"sha256:f55e05f6bf4cc952a87d13594386d32ad2dd265630a8bdfc3df03bd60425c6b0\"},\n    {file = \"tldextract-3.1.2.tar.gz\", hash = \"sha256:d2034c3558651f7d8fdadea83fb681050b2d662dc67a00d950326dc902029444\"},\n]\n\n[package.dependencies]\nfilelock = \">=3.0.8\"\nidna = \"*\"\nrequests = \">=2.1.0\"\nrequests-file = \">=1.4\"\n\n[[package]]\nname = \"tomli\"\nversion = \"2.0.1\"\ndescription = \"A lil' TOML parser\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"tomli-2.0.1-py3-none-any.whl\", hash = \"sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc\"},\n    {file = \"tomli-2.0.1.tar.gz\", hash = \"sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f\"},\n]\n\n[[package]]\nname = \"tomlkit\"\nversion = \"0.11.0\"\ndescription = \"Style preserving TOML library\"\noptional = false\npython-versions = \">=3.6,<4.0\"\nfiles = [\n    {file = \"tomlkit-0.11.0-py3-none-any.whl\", hash = \"sha256:0f4050db66fd445b885778900ce4dd9aea8c90c4721141fde0d6ade893820ef1\"},\n    {file = \"tomlkit-0.11.0.tar.gz\", hash = \"sha256:71ceb10c0eefd8b8f11fe34e8a51ad07812cb1dc3de23247425fbc9ddc47b9dd\"},\n]\n\n[[package]]\nname = \"tqdm\"\nversion = \"4.64.0\"\ndescription = \"Fast, Extensible Progress Meter\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7\"\nfiles = [\n    {file = \"tqdm-4.64.0-py2.py3-none-any.whl\", hash = \"sha256:74a2cdefe14d11442cedf3ba4e21a3b84ff9a2dbdc6cfae2c34addb2a14a5ea6\"},\n    {file = \"tqdm-4.64.0.tar.gz\", hash = \"sha256:40be55d30e200777a307a7585aee69e4eabb46b4ec6a4b4a5f2d9f11e7d5408d\"},\n]\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\n\n[package.extras]\ndev = [\"py-make (>=0.1.0)\", \"twine\", \"wheel\"]\nnotebook = [\"ipywidgets (>=6)\"]\nslack = [\"slack-sdk\"]\ntelegram = [\"requests\"]\n\n[[package]]\nname = \"traitlets\"\nversion = \"5.0.4\"\ndescription = \"Traitlets Python configuration system\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"traitlets-5.0.4-py3-none-any.whl\", hash = \"sha256:9664ec0c526e48e7b47b7d14cd6b252efa03e0129011de0a9c1d70315d4309c3\"},\n    {file = \"traitlets-5.0.4.tar.gz\", hash = \"sha256:86c9351f94f95de9db8a04ad8e892da299a088a64fd283f9f6f18770ae5eae1b\"},\n]\n\n[package.dependencies]\nipython-genutils = \"*\"\n\n[package.extras]\ntest = [\"pytest\"]\n\n[[package]]\nname = \"twilio\"\nversion = \"7.3.2\"\ndescription = \"Twilio API client and TwiML generator\"\noptional = false\npython-versions = \">=3.6.0\"\nfiles = [\n    {file = \"twilio-7.3.2-py2.py3-none-any.whl\", hash = \"sha256:6cc6ed114b07a7ce853503a5a27281f56237b411ea415012955cff3a57045f1b\"},\n    {file = \"twilio-7.3.2.tar.gz\", hash = \"sha256:3170da33c7f4293bbebcd032b183866e044fcf8418e5c5e15bdd5ec7a0a958b6\"},\n]\n\n[package.dependencies]\nPyJWT = \">=2.0.0,<3.0.0\"\npytz = \"*\"\nrequests = \">=2.0.0\"\n\n[[package]]\nname = \"typer\"\nversion = \"0.9.0\"\ndescription = \"Typer, build great CLIs. Easy to code. Based on Python type hints.\"\noptional = false\npython-versions = \">=3.6\"\nfiles = [\n    {file = \"typer-0.9.0-py3-none-any.whl\", hash = \"sha256:5d96d986a21493606a358cae4461bd8cdf83cbf33a5aa950ae629ca3b51467ee\"},\n    {file = \"typer-0.9.0.tar.gz\", hash = \"sha256:50922fd79aea2f4751a8e0408ff10d2662bd0c8bbfa84755a699f3bada2978b2\"},\n]\n\n[package.dependencies]\nclick = \">=7.1.1,<9.0.0\"\ntyping-extensions = \">=3.7.4.3\"\n\n[package.extras]\nall = [\"colorama (>=0.4.3,<0.5.0)\", \"rich (>=10.11.0,<14.0.0)\", \"shellingham (>=1.3.0,<2.0.0)\"]\ndev = [\"autoflake (>=1.3.1,<2.0.0)\", \"flake8 (>=3.8.3,<4.0.0)\", \"pre-commit (>=2.17.0,<3.0.0)\"]\ndoc = [\"cairosvg (>=2.5.2,<3.0.0)\", \"mdx-include (>=1.4.1,<2.0.0)\", \"mkdocs (>=1.1.2,<2.0.0)\", \"mkdocs-material (>=8.1.4,<9.0.0)\", \"pillow (>=9.3.0,<10.0.0)\"]\ntest = [\"black (>=22.3.0,<23.0.0)\", \"coverage (>=6.2,<7.0)\", \"isort (>=5.0.6,<6.0.0)\", \"mypy (==0.910)\", \"pytest (>=4.4.0,<8.0.0)\", \"pytest-cov (>=2.10.0,<5.0.0)\", \"pytest-sugar (>=0.9.4,<0.10.0)\", \"pytest-xdist (>=1.32.0,<4.0.0)\", \"rich (>=10.11.0,<14.0.0)\", \"shellingham (>=1.3.0,<2.0.0)\"]\n\n[[package]]\nname = \"typing-extensions\"\nversion = \"4.8.0\"\ndescription = \"Backported and Experimental Type Hints for Python 3.8+\"\noptional = false\npython-versions = \">=3.8\"\nfiles = [\n    {file = \"typing_extensions-4.8.0-py3-none-any.whl\", hash = \"sha256:8f92fc8806f9a6b641eaa5318da32b44d401efaac0f6678c9bc448ba3605faa0\"},\n    {file = \"typing_extensions-4.8.0.tar.gz\", hash = \"sha256:df8e4339e9cb77357558cbdbceca33c303714cf861d1eef15e1070055ae8b7ef\"},\n]\n\n[[package]]\nname = \"unidecode\"\nversion = \"1.1.1\"\ndescription = \"ASCII transliterations of Unicode text\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"Unidecode-1.1.1-py2.py3-none-any.whl\", hash = \"sha256:1d7a042116536098d05d599ef2b8616759f02985c85b4fef50c78a5aaf10822a\"},\n    {file = \"Unidecode-1.1.1.tar.gz\", hash = \"sha256:2b6aab710c2a1647e928e36d69c21e76b453cd455f4e2621000e54b2a9b8cce8\"},\n]\n\n[[package]]\nname = \"uritemplate\"\nversion = \"3.0.1\"\ndescription = \"URI templates\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\nfiles = [\n    {file = \"uritemplate-3.0.1-py2.py3-none-any.whl\", hash = \"sha256:07620c3f3f8eed1f12600845892b0e036a2420acf513c53f7de0abd911a5894f\"},\n    {file = \"uritemplate-3.0.1.tar.gz\", hash = \"sha256:5af8ad10cec94f215e3f48112de2022e1d5a37ed427fbd88652fa908f2ab7cae\"},\n]\n\n[[package]]\nname = \"urllib3\"\nversion = \"1.26.20\"\ndescription = \"HTTP library with thread-safe connection pooling, file post, and more.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,>=2.7\"\nfiles = [\n    {file = \"urllib3-1.26.20-py2.py3-none-any.whl\", hash = \"sha256:0ed14ccfbf1c30a9072c7ca157e4319b70d65f623e91e7b32fadb2853431016e\"},\n    {file = \"urllib3-1.26.20.tar.gz\", hash = \"sha256:40c2dc0c681e47eb8f90e7e27bf6ff7df2e677421fd46756da1161c39ca70d32\"},\n]\n\n[package.extras]\nbrotli = [\"brotli (==1.0.9)\", \"brotli (>=1.0.9)\", \"brotlicffi (>=0.8.0)\", \"brotlipy (>=0.6.0)\"]\nsecure = [\"certifi\", \"cryptography (>=1.3.4)\", \"idna (>=2.0.0)\", \"ipaddress\", \"pyOpenSSL (>=0.14)\", \"urllib3-secure-extra\"]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7,<2.0)\"]\n\n[[package]]\nname = \"virtualenv\"\nversion = \"20.21.1\"\ndescription = \"Virtual Python Environment builder\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"virtualenv-20.21.1-py3-none-any.whl\", hash = \"sha256:09ddbe1af0c8ed2bb4d6ed226b9e6415718ad18aef9fa0ba023d96b7a8356049\"},\n    {file = \"virtualenv-20.21.1.tar.gz\", hash = \"sha256:4c104ccde994f8b108163cf9ba58f3d11511d9403de87fb9b4f52bf33dbc8668\"},\n]\n\n[package.dependencies]\ndistlib = \">=0.3.6,<1\"\nfilelock = \">=3.4.1,<4\"\nplatformdirs = \">=2.4,<4\"\n\n[package.extras]\ndocs = [\"furo (>=2023.3.27)\", \"proselint (>=0.13)\", \"sphinx (>=6.1.3)\", \"sphinx-argparse (>=0.4)\", \"sphinxcontrib-towncrier (>=0.2.1a0)\", \"towncrier (>=22.12)\"]\ntest = [\"covdefaults (>=2.3)\", \"coverage (>=7.2.3)\", \"coverage-enable-subprocess (>=1)\", \"flaky (>=3.7)\", \"packaging (>=23.1)\", \"pytest (>=7.3.1)\", \"pytest-env (>=0.8.1)\", \"pytest-freezegun (>=0.4.2)\", \"pytest-mock (>=3.10)\", \"pytest-randomly (>=3.12)\", \"pytest-timeout (>=2.1)\"]\n\n[[package]]\nname = \"watchtower\"\nversion = \"0.8.0\"\ndescription = \"Python CloudWatch Logging\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"watchtower-0.8.0-py2.py3-none-any.whl\", hash = \"sha256:d6704b258494bddc3e9ddda286ef5067e4b09ab4287aea4289afdd035cc4742b\"},\n    {file = \"watchtower-0.8.0.tar.gz\", hash = \"sha256:9733d1dfc2ab25880386188ee41b19d39893a09c91725bd92b2f782a72890fda\"},\n]\n\n[package.dependencies]\nboto3 = \">=1.9.253,<2\"\n\n[[package]]\nname = \"wcwidth\"\nversion = \"0.2.5\"\ndescription = \"Measures the displayed width of unicode strings in a terminal\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"wcwidth-0.2.5-py2.py3-none-any.whl\", hash = \"sha256:beb4802a9cebb9144e99086eff703a642a13d6a0052920003a230f3294bbe784\"},\n    {file = \"wcwidth-0.2.5.tar.gz\", hash = \"sha256:c4d647b99872929fdb7bdcaa4fbe7f01413ed3d98077df798530e5b04f116c83\"},\n]\n\n[[package]]\nname = \"webauthn\"\nversion = \"0.4.7\"\ndescription = \"A WebAuthn Python module.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"webauthn-0.4.7-py2.py3-none-any.whl\", hash = \"sha256:238391b2e2cc60fb51a2cd2d2d6be149920b9af6184651353d9f95856617a9e7\"},\n    {file = \"webauthn-0.4.7.tar.gz\", hash = \"sha256:8ad9072ff1d6169f3be30d4dc8733ea563dd266962397bc58b40f674a6af74ac\"},\n]\n\n[package.dependencies]\ncbor2 = \">=4.0.1\"\ncryptography = \">=2.3.1\"\nfuture = \">=0.17.1\"\npyOpenSSL = \">=16.0.0\"\nsix = \">=1.11.0\"\n\n[[package]]\nname = \"webob\"\nversion = \"1.8.7\"\ndescription = \"WSGI request and response object\"\noptional = false\npython-versions = \">=2.7,!=3.0.*,!=3.1.*,!=3.2.*\"\nfiles = [\n    {file = \"WebOb-1.8.7-py2.py3-none-any.whl\", hash = \"sha256:73aae30359291c14fa3b956f8b5ca31960e420c28c1bec002547fb04928cf89b\"},\n    {file = \"WebOb-1.8.7.tar.gz\", hash = \"sha256:b64ef5141be559cfade448f044fa45c2260351edcb6a8ef6b7e00c7dcef0c323\"},\n]\n\n[package.extras]\ndocs = [\"Sphinx (>=1.7.5)\", \"pylons-sphinx-themes\"]\ntesting = [\"coverage\", \"pytest (>=3.1.0)\", \"pytest-cov\", \"pytest-xdist\"]\n\n[[package]]\nname = \"werkzeug\"\nversion = \"1.0.1\"\ndescription = \"The comprehensive WSGI web application library.\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"Werkzeug-1.0.1-py2.py3-none-any.whl\", hash = \"sha256:2de2a5db0baeae7b2d2664949077c2ac63fbd16d98da0ff71837f7d1dea3fd43\"},\n    {file = \"Werkzeug-1.0.1.tar.gz\", hash = \"sha256:6c80b1e5ad3665290ea39320b91e1be1e0d5f60652b964a3070216de83d2e47c\"},\n]\n\n[package.extras]\ndev = [\"coverage\", \"pallets-sphinx-themes\", \"pytest\", \"pytest-timeout\", \"sphinx\", \"sphinx-issues\", \"tox\"]\nwatchdog = [\"watchdog\"]\n\n[[package]]\nname = \"win32-setctime\"\nversion = \"1.1.0\"\ndescription = \"A small Python utility to set file creation time on Windows\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"win32_setctime-1.1.0-py3-none-any.whl\", hash = \"sha256:231db239e959c2fe7eb1d7dc129f11172354f98361c4fa2d6d2d7e278baa8aad\"},\n    {file = \"win32_setctime-1.1.0.tar.gz\", hash = \"sha256:15cf5750465118d6929ae4de4eb46e8edae9a5634350c01ba582df868e932cb2\"},\n]\n\n[package.extras]\ndev = [\"black (>=19.3b0)\", \"pytest (>=4.6.2)\"]\n\n[[package]]\nname = \"wrapt\"\nversion = \"1.15.0\"\ndescription = \"Module for decorators, wrappers and monkey patching.\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7\"\nfiles = [\n    {file = \"wrapt-1.15.0-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:ca1cccf838cd28d5a0883b342474c630ac48cac5df0ee6eacc9c7290f76b11c1\"},\n    {file = \"wrapt-1.15.0-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:e826aadda3cae59295b95343db8f3d965fb31059da7de01ee8d1c40a60398b29\"},\n    {file = \"wrapt-1.15.0-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:5fc8e02f5984a55d2c653f5fea93531e9836abbd84342c1d1e17abc4a15084c2\"},\n    {file = \"wrapt-1.15.0-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:96e25c8603a155559231c19c0349245eeb4ac0096fe3c1d0be5c47e075bd4f46\"},\n    {file = \"wrapt-1.15.0-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:40737a081d7497efea35ab9304b829b857f21558acfc7b3272f908d33b0d9d4c\"},\n    {file = \"wrapt-1.15.0-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:f87ec75864c37c4c6cb908d282e1969e79763e0d9becdfe9fe5473b7bb1e5f09\"},\n    {file = \"wrapt-1.15.0-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:1286eb30261894e4c70d124d44b7fd07825340869945c79d05bda53a40caa079\"},\n    {file = \"wrapt-1.15.0-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:493d389a2b63c88ad56cdc35d0fa5752daac56ca755805b1b0c530f785767d5e\"},\n    {file = \"wrapt-1.15.0-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:58d7a75d731e8c63614222bcb21dd992b4ab01a399f1f09dd82af17bbfc2368a\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:21f6d9a0d5b3a207cdf7acf8e58d7d13d463e639f0c7e01d82cdb671e6cb7923\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:ce42618f67741d4697684e501ef02f29e758a123aa2d669e2d964ff734ee00ee\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:41d07d029dd4157ae27beab04d22b8e261eddfc6ecd64ff7000b10dc8b3a5727\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:54accd4b8bc202966bafafd16e69da9d5640ff92389d33d28555c5fd4f25ccb7\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2fbfbca668dd15b744418265a9607baa970c347eefd0db6a518aaf0cfbd153c0\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:76e9c727a874b4856d11a32fb0b389afc61ce8aaf281ada613713ddeadd1cfec\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:e20076a211cd6f9b44a6be58f7eeafa7ab5720eb796975d0c03f05b47d89eb90\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:a74d56552ddbde46c246b5b89199cb3fd182f9c346c784e1a93e4dc3f5ec9975\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-win32.whl\", hash = \"sha256:26458da5653aa5b3d8dc8b24192f574a58984c749401f98fff994d41d3f08da1\"},\n    {file = \"wrapt-1.15.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:75760a47c06b5974aa5e01949bf7e66d2af4d08cb8c1d6516af5e39595397f5e\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:ba1711cda2d30634a7e452fc79eabcadaffedf241ff206db2ee93dd2c89a60e7\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:56374914b132c702aa9aa9959c550004b8847148f95e1b824772d453ac204a72\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:a89ce3fd220ff144bd9d54da333ec0de0399b52c9ac3d2ce34b569cf1a5748fb\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:3bbe623731d03b186b3d6b0d6f51865bf598587c38d6f7b0be2e27414f7f214e\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:3abbe948c3cbde2689370a262a8d04e32ec2dd4f27103669a45c6929bcdbfe7c\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:b67b819628e3b748fd3c2192c15fb951f549d0f47c0449af0764d7647302fda3\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:7eebcdbe3677e58dd4c0e03b4f2cfa346ed4049687d839adad68cc38bb559c92\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:74934ebd71950e3db69960a7da29204f89624dde411afbfb3b4858c1409b1e98\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-win32.whl\", hash = \"sha256:bd84395aab8e4d36263cd1b9308cd504f6cf713b7d6d3ce25ea55670baec5416\"},\n    {file = \"wrapt-1.15.0-cp311-cp311-win_amd64.whl\", hash = \"sha256:a487f72a25904e2b4bbc0817ce7a8de94363bd7e79890510174da9d901c38705\"},\n    {file = \"wrapt-1.15.0-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:4ff0d20f2e670800d3ed2b220d40984162089a6e2c9646fdb09b85e6f9a8fc29\"},\n    {file = \"wrapt-1.15.0-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:9ed6aa0726b9b60911f4aed8ec5b8dd7bf3491476015819f56473ffaef8959bd\"},\n    {file = \"wrapt-1.15.0-cp35-cp35m-manylinux2010_i686.whl\", hash = \"sha256:896689fddba4f23ef7c718279e42f8834041a21342d95e56922e1c10c0cc7afb\"},\n    {file = \"wrapt-1.15.0-cp35-cp35m-manylinux2010_x86_64.whl\", hash = \"sha256:75669d77bb2c071333417617a235324a1618dba66f82a750362eccbe5b61d248\"},\n    {file = \"wrapt-1.15.0-cp35-cp35m-win32.whl\", hash = \"sha256:fbec11614dba0424ca72f4e8ba3c420dba07b4a7c206c8c8e4e73f2e98f4c559\"},\n    {file = \"wrapt-1.15.0-cp35-cp35m-win_amd64.whl\", hash = \"sha256:fd69666217b62fa5d7c6aa88e507493a34dec4fa20c5bd925e4bc12fce586639\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:b0724f05c396b0a4c36a3226c31648385deb6a65d8992644c12a4963c70326ba\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:bbeccb1aa40ab88cd29e6c7d8585582c99548f55f9b2581dfc5ba68c59a85752\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:38adf7198f8f154502883242f9fe7333ab05a5b02de7d83aa2d88ea621f13364\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:578383d740457fa790fdf85e6d346fda1416a40549fe8db08e5e9bd281c6a475\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-musllinux_1_1_aarch64.whl\", hash = \"sha256:a4cbb9ff5795cd66f0066bdf5947f170f5d63a9274f99bdbca02fd973adcf2a8\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-musllinux_1_1_i686.whl\", hash = \"sha256:af5bd9ccb188f6a5fdda9f1f09d9f4c86cc8a539bd48a0bfdc97723970348418\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-musllinux_1_1_x86_64.whl\", hash = \"sha256:b56d5519e470d3f2fe4aa7585f0632b060d532d0696c5bdfb5e8319e1d0f69a2\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-win32.whl\", hash = \"sha256:77d4c1b881076c3ba173484dfa53d3582c1c8ff1f914c6461ab70c8428b796c1\"},\n    {file = \"wrapt-1.15.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:077ff0d1f9d9e4ce6476c1a924a3332452c1406e59d90a2cf24aeb29eeac9420\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:5c5aa28df055697d7c37d2099a7bc09f559d5053c3349b1ad0c39000e611d317\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3a8564f283394634a7a7054b7983e47dbf39c07712d7b177b37e03f2467a024e\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:780c82a41dc493b62fc5884fb1d3a3b81106642c5c5c78d6a0d4cbe96d62ba7e\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:e169e957c33576f47e21864cf3fc9ff47c223a4ebca8960079b8bd36cb014fd0\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:b02f21c1e2074943312d03d243ac4388319f2456576b2c6023041c4d57cd7019\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:f2e69b3ed24544b0d3dbe2c5c0ba5153ce50dcebb576fdc4696d52aa22db6034\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:d787272ed958a05b2c86311d3a4135d3c2aeea4fc655705f074130aa57d71653\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-win32.whl\", hash = \"sha256:02fce1852f755f44f95af51f69d22e45080102e9d00258053b79367d07af39c0\"},\n    {file = \"wrapt-1.15.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:abd52a09d03adf9c763d706df707c343293d5d106aea53483e0ec8d9e310ad5e\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:cdb4f085756c96a3af04e6eca7f08b1345e94b53af8921b25c72f096e704e145\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:230ae493696a371f1dbffaad3dafbb742a4d27a0afd2b1aecebe52b740167e7f\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:63424c681923b9f3bfbc5e3205aafe790904053d42ddcc08542181a30a7a51bd\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:d6bcbfc99f55655c3d93feb7ef3800bd5bbe963a755687cbf1f490a71fb7794b\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:c99f4309f5145b93eca6e35ac1a988f0dc0a7ccf9ccdcd78d3c0adf57224e62f\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:b130fe77361d6771ecf5a219d8e0817d61b236b7d8b37cc045172e574ed219e6\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:96177eb5645b1c6985f5c11d03fc2dbda9ad24ec0f3a46dcce91445747e15094\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:d5fe3e099cf07d0fb5a1e23d399e5d4d1ca3e6dfcbe5c8570ccff3e9208274f7\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-win32.whl\", hash = \"sha256:abd8f36c99512755b8456047b7be10372fca271bf1467a1caa88db991e7c421b\"},\n    {file = \"wrapt-1.15.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:b06fa97478a5f478fb05e1980980a7cdf2712015493b44d0c87606c1513ed5b1\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:2e51de54d4fb8fb50d6ee8327f9828306a959ae394d3e01a1ba8b2f937747d86\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:0970ddb69bba00670e58955f8019bec4a42d1785db3faa043c33d81de2bf843c\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:76407ab327158c510f44ded207e2f76b657303e17cb7a572ffe2f5a8a48aa04d\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:cd525e0e52a5ff16653a3fc9e3dd827981917d34996600bbc34c05d048ca35cc\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9d37ac69edc5614b90516807de32d08cb8e7b12260a285ee330955604ed9dd29\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:078e2a1a86544e644a68422f881c48b84fef6d18f8c7a957ffd3f2e0a74a0d4a\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:2cf56d0e237280baed46f0b5316661da892565ff58309d4d2ed7dba763d984b8\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:7dc0713bf81287a00516ef43137273b23ee414fe41a3c14be10dd95ed98a2df9\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-win32.whl\", hash = \"sha256:46ed616d5fb42f98630ed70c3529541408166c22cdfd4540b88d5f21006b0eff\"},\n    {file = \"wrapt-1.15.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:eef4d64c650f33347c1f9266fa5ae001440b232ad9b98f1f43dfe7a79435c0a6\"},\n    {file = \"wrapt-1.15.0-py3-none-any.whl\", hash = \"sha256:64b1df0f83706b4ef4cfb4fb0e4c2669100fd7ecacfb59e091fad300d4e04640\"},\n    {file = \"wrapt-1.15.0.tar.gz\", hash = \"sha256:d06730c6aed78cee4126234cf2d071e01b44b915e725a6cb439a879ec9754a3a\"},\n]\n\n[[package]]\nname = \"wtforms\"\nversion = \"2.3.3\"\ndescription = \"A flexible forms validation and rendering library for Python web development.\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"WTForms-2.3.3-py2.py3-none-any.whl\", hash = \"sha256:7b504fc724d0d1d4d5d5c114e778ec88c37ea53144683e084215eed5155ada4c\"},\n    {file = \"WTForms-2.3.3.tar.gz\", hash = \"sha256:81195de0ac94fbc8368abbaf9197b88c4f3ffd6c2719b5bf5fc9da744f3d829c\"},\n]\n\n[package.dependencies]\nMarkupSafe = \"*\"\n\n[package.extras]\nemail = [\"email-validator\"]\nipaddress = [\"ipaddress\"]\nlocale = [\"Babel (>=1.3)\"]\n\n[[package]]\nname = \"yacron\"\nversion = \"0.11.2\"\ndescription = \"A modern Cron replacement that is Docker-friendly\"\noptional = false\npython-versions = \">=3.5\"\nfiles = [\n    {file = \"yacron-0.11.2-py3-none-any.whl\", hash = \"sha256:2f5bf07f7064c9a8a335ec7311177dc057cd122eb478373cd76597e0872941f9\"},\n    {file = \"yacron-0.11.2.tar.gz\", hash = \"sha256:5d8da679f3ab503c7871845f3034876af4828aad5ac8eff066413e77ac3bc772\"},\n]\n\n[package.dependencies]\naiohttp = \">=3.0,<4\"\naiosmtplib = \"*\"\ncrontab = \"0.22.8\"\njinja2 = \"*\"\npytz = \"*\"\nsentry-sdk = \"*\"\nstrictyaml = \">=0.7.2\"\n\n[[package]]\nname = \"yarl\"\nversion = \"1.9.2\"\ndescription = \"Yet another URL library\"\noptional = false\npython-versions = \">=3.7\"\nfiles = [\n    {file = \"yarl-1.9.2-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:8c2ad583743d16ddbdf6bb14b5cd76bf43b0d0006e918809d5d4ddf7bde8dd82\"},\n    {file = \"yarl-1.9.2-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:82aa6264b36c50acfb2424ad5ca537a2060ab6de158a5bd2a72a032cc75b9eb8\"},\n    {file = \"yarl-1.9.2-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:c0c77533b5ed4bcc38e943178ccae29b9bcf48ffd1063f5821192f23a1bd27b9\"},\n    {file = \"yarl-1.9.2-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ee4afac41415d52d53a9833ebae7e32b344be72835bbb589018c9e938045a560\"},\n    {file = \"yarl-1.9.2-cp310-cp310-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:9bf345c3a4f5ba7f766430f97f9cc1320786f19584acc7086491f45524a551ac\"},\n    {file = \"yarl-1.9.2-cp310-cp310-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:2a96c19c52ff442a808c105901d0bdfd2e28575b3d5f82e2f5fd67e20dc5f4ea\"},\n    {file = \"yarl-1.9.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:891c0e3ec5ec881541f6c5113d8df0315ce5440e244a716b95f2525b7b9f3608\"},\n    {file = \"yarl-1.9.2-cp310-cp310-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:c3a53ba34a636a256d767c086ceb111358876e1fb6b50dfc4d3f4951d40133d5\"},\n    {file = \"yarl-1.9.2-cp310-cp310-musllinux_1_1_aarch64.whl\", hash = \"sha256:566185e8ebc0898b11f8026447eacd02e46226716229cea8db37496c8cdd26e0\"},\n    {file = \"yarl-1.9.2-cp310-cp310-musllinux_1_1_i686.whl\", hash = \"sha256:2b0738fb871812722a0ac2154be1f049c6223b9f6f22eec352996b69775b36d4\"},\n    {file = \"yarl-1.9.2-cp310-cp310-musllinux_1_1_ppc64le.whl\", hash = \"sha256:32f1d071b3f362c80f1a7d322bfd7b2d11e33d2adf395cc1dd4df36c9c243095\"},\n    {file = \"yarl-1.9.2-cp310-cp310-musllinux_1_1_s390x.whl\", hash = \"sha256:e9fdc7ac0d42bc3ea78818557fab03af6181e076a2944f43c38684b4b6bed8e3\"},\n    {file = \"yarl-1.9.2-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:56ff08ab5df8429901ebdc5d15941b59f6253393cb5da07b4170beefcf1b2528\"},\n    {file = \"yarl-1.9.2-cp310-cp310-win32.whl\", hash = \"sha256:8ea48e0a2f931064469bdabca50c2f578b565fc446f302a79ba6cc0ee7f384d3\"},\n    {file = \"yarl-1.9.2-cp310-cp310-win_amd64.whl\", hash = \"sha256:50f33040f3836e912ed16d212f6cc1efb3231a8a60526a407aeb66c1c1956dde\"},\n    {file = \"yarl-1.9.2-cp311-cp311-macosx_10_9_universal2.whl\", hash = \"sha256:646d663eb2232d7909e6601f1a9107e66f9791f290a1b3dc7057818fe44fc2b6\"},\n    {file = \"yarl-1.9.2-cp311-cp311-macosx_10_9_x86_64.whl\", hash = \"sha256:aff634b15beff8902d1f918012fc2a42e0dbae6f469fce134c8a0dc51ca423bb\"},\n    {file = \"yarl-1.9.2-cp311-cp311-macosx_11_0_arm64.whl\", hash = \"sha256:a83503934c6273806aed765035716216cc9ab4e0364f7f066227e1aaea90b8d0\"},\n    {file = \"yarl-1.9.2-cp311-cp311-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:b25322201585c69abc7b0e89e72790469f7dad90d26754717f3310bfe30331c2\"},\n    {file = \"yarl-1.9.2-cp311-cp311-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:22a94666751778629f1ec4280b08eb11815783c63f52092a5953faf73be24191\"},\n    {file = \"yarl-1.9.2-cp311-cp311-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:8ec53a0ea2a80c5cd1ab397925f94bff59222aa3cf9c6da938ce05c9ec20428d\"},\n    {file = \"yarl-1.9.2-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:159d81f22d7a43e6eabc36d7194cb53f2f15f498dbbfa8edc8a3239350f59fe7\"},\n    {file = \"yarl-1.9.2-cp311-cp311-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:832b7e711027c114d79dffb92576acd1bd2decc467dec60e1cac96912602d0e6\"},\n    {file = \"yarl-1.9.2-cp311-cp311-musllinux_1_1_aarch64.whl\", hash = \"sha256:95d2ecefbcf4e744ea952d073c6922e72ee650ffc79028eb1e320e732898d7e8\"},\n    {file = \"yarl-1.9.2-cp311-cp311-musllinux_1_1_i686.whl\", hash = \"sha256:d4e2c6d555e77b37288eaf45b8f60f0737c9efa3452c6c44626a5455aeb250b9\"},\n    {file = \"yarl-1.9.2-cp311-cp311-musllinux_1_1_ppc64le.whl\", hash = \"sha256:783185c75c12a017cc345015ea359cc801c3b29a2966c2655cd12b233bf5a2be\"},\n    {file = \"yarl-1.9.2-cp311-cp311-musllinux_1_1_s390x.whl\", hash = \"sha256:b8cc1863402472f16c600e3e93d542b7e7542a540f95c30afd472e8e549fc3f7\"},\n    {file = \"yarl-1.9.2-cp311-cp311-musllinux_1_1_x86_64.whl\", hash = \"sha256:822b30a0f22e588b32d3120f6d41e4ed021806418b4c9f0bc3048b8c8cb3f92a\"},\n    {file = \"yarl-1.9.2-cp311-cp311-win32.whl\", hash = \"sha256:a60347f234c2212a9f0361955007fcf4033a75bf600a33c88a0a8e91af77c0e8\"},\n    {file = \"yarl-1.9.2-cp311-cp311-win_amd64.whl\", hash = \"sha256:be6b3fdec5c62f2a67cb3f8c6dbf56bbf3f61c0f046f84645cd1ca73532ea051\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:38a3928ae37558bc1b559f67410df446d1fbfa87318b124bf5032c31e3447b74\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ac9bb4c5ce3975aeac288cfcb5061ce60e0d14d92209e780c93954076c7c4367\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:3da8a678ca8b96c8606bbb8bfacd99a12ad5dd288bc6f7979baddd62f71c63ef\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:13414591ff516e04fcdee8dc051c13fd3db13b673c7a4cb1350e6b2ad9639ad3\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:bf74d08542c3a9ea97bb8f343d4fcbd4d8f91bba5ec9d5d7f792dbe727f88938\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:6e7221580dc1db478464cfeef9b03b95c5852cc22894e418562997df0d074ccc\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-musllinux_1_1_aarch64.whl\", hash = \"sha256:494053246b119b041960ddcd20fd76224149cfea8ed8777b687358727911dd33\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-musllinux_1_1_i686.whl\", hash = \"sha256:52a25809fcbecfc63ac9ba0c0fb586f90837f5425edfd1ec9f3372b119585e45\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-musllinux_1_1_ppc64le.whl\", hash = \"sha256:e65610c5792870d45d7b68c677681376fcf9cc1c289f23e8e8b39c1485384185\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-musllinux_1_1_s390x.whl\", hash = \"sha256:1b1bba902cba32cdec51fca038fd53f8beee88b77efc373968d1ed021024cc04\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:662e6016409828ee910f5d9602a2729a8a57d74b163c89a837de3fea050c7582\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-win32.whl\", hash = \"sha256:f364d3480bffd3aa566e886587eaca7c8c04d74f6e8933f3f2c996b7f09bee1b\"},\n    {file = \"yarl-1.9.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:6a5883464143ab3ae9ba68daae8e7c5c95b969462bbe42e2464d60e7e2698368\"},\n    {file = \"yarl-1.9.2-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:5610f80cf43b6202e2c33ba3ec2ee0a2884f8f423c8f4f62906731d876ef4fac\"},\n    {file = \"yarl-1.9.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:b9a4e67ad7b646cd6f0938c7ebfd60e481b7410f574c560e455e938d2da8e0f4\"},\n    {file = \"yarl-1.9.2-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:83fcc480d7549ccebe9415d96d9263e2d4226798c37ebd18c930fce43dfb9574\"},\n    {file = \"yarl-1.9.2-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5fcd436ea16fee7d4207c045b1e340020e58a2597301cfbcfdbe5abd2356c2fb\"},\n    {file = \"yarl-1.9.2-cp38-cp38-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:84e0b1599334b1e1478db01b756e55937d4614f8654311eb26012091be109d59\"},\n    {file = \"yarl-1.9.2-cp38-cp38-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:3458a24e4ea3fd8930e934c129b676c27452e4ebda80fbe47b56d8c6c7a63a9e\"},\n    {file = \"yarl-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:838162460b3a08987546e881a2bfa573960bb559dfa739e7800ceeec92e64417\"},\n    {file = \"yarl-1.9.2-cp38-cp38-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:f4e2d08f07a3d7d3e12549052eb5ad3eab1c349c53ac51c209a0e5991bbada78\"},\n    {file = \"yarl-1.9.2-cp38-cp38-musllinux_1_1_aarch64.whl\", hash = \"sha256:de119f56f3c5f0e2fb4dee508531a32b069a5f2c6e827b272d1e0ff5ac040333\"},\n    {file = \"yarl-1.9.2-cp38-cp38-musllinux_1_1_i686.whl\", hash = \"sha256:149ddea5abf329752ea5051b61bd6c1d979e13fbf122d3a1f9f0c8be6cb6f63c\"},\n    {file = \"yarl-1.9.2-cp38-cp38-musllinux_1_1_ppc64le.whl\", hash = \"sha256:674ca19cbee4a82c9f54e0d1eee28116e63bc6fd1e96c43031d11cbab8b2afd5\"},\n    {file = \"yarl-1.9.2-cp38-cp38-musllinux_1_1_s390x.whl\", hash = \"sha256:9b3152f2f5677b997ae6c804b73da05a39daa6a9e85a512e0e6823d81cdad7cc\"},\n    {file = \"yarl-1.9.2-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:5415d5a4b080dc9612b1b63cba008db84e908b95848369aa1da3686ae27b6d2b\"},\n    {file = \"yarl-1.9.2-cp38-cp38-win32.whl\", hash = \"sha256:f7a3d8146575e08c29ed1cd287068e6d02f1c7bdff8970db96683b9591b86ee7\"},\n    {file = \"yarl-1.9.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:63c48f6cef34e6319a74c727376e95626f84ea091f92c0250a98e53e62c77c72\"},\n    {file = \"yarl-1.9.2-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:75df5ef94c3fdc393c6b19d80e6ef1ecc9ae2f4263c09cacb178d871c02a5ba9\"},\n    {file = \"yarl-1.9.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:c027a6e96ef77d401d8d5a5c8d6bc478e8042f1e448272e8d9752cb0aff8b5c8\"},\n    {file = \"yarl-1.9.2-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:f3b078dbe227f79be488ffcfc7a9edb3409d018e0952cf13f15fd6512847f3f7\"},\n    {file = \"yarl-1.9.2-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:59723a029760079b7d991a401386390c4be5bfec1e7dd83e25a6a0881859e716\"},\n    {file = \"yarl-1.9.2-cp39-cp39-manylinux_2_17_ppc64le.manylinux2014_ppc64le.whl\", hash = \"sha256:b03917871bf859a81ccb180c9a2e6c1e04d2f6a51d953e6a5cdd70c93d4e5a2a\"},\n    {file = \"yarl-1.9.2-cp39-cp39-manylinux_2_17_s390x.manylinux2014_s390x.whl\", hash = \"sha256:c1012fa63eb6c032f3ce5d2171c267992ae0c00b9e164efe4d73db818465fac3\"},\n    {file = \"yarl-1.9.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:a74dcbfe780e62f4b5a062714576f16c2f3493a0394e555ab141bf0d746bb955\"},\n    {file = \"yarl-1.9.2-cp39-cp39-manylinux_2_5_i686.manylinux1_i686.manylinux_2_17_i686.manylinux2014_i686.whl\", hash = \"sha256:8c56986609b057b4839968ba901944af91b8e92f1725d1a2d77cbac6972b9ed1\"},\n    {file = \"yarl-1.9.2-cp39-cp39-musllinux_1_1_aarch64.whl\", hash = \"sha256:2c315df3293cd521033533d242d15eab26583360b58f7ee5d9565f15fee1bef4\"},\n    {file = \"yarl-1.9.2-cp39-cp39-musllinux_1_1_i686.whl\", hash = \"sha256:b7232f8dfbd225d57340e441d8caf8652a6acd06b389ea2d3222b8bc89cbfca6\"},\n    {file = \"yarl-1.9.2-cp39-cp39-musllinux_1_1_ppc64le.whl\", hash = \"sha256:53338749febd28935d55b41bf0bcc79d634881195a39f6b2f767870b72514caf\"},\n    {file = \"yarl-1.9.2-cp39-cp39-musllinux_1_1_s390x.whl\", hash = \"sha256:066c163aec9d3d073dc9ffe5dd3ad05069bcb03fcaab8d221290ba99f9f69ee3\"},\n    {file = \"yarl-1.9.2-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:8288d7cd28f8119b07dd49b7230d6b4562f9b61ee9a4ab02221060d21136be80\"},\n    {file = \"yarl-1.9.2-cp39-cp39-win32.whl\", hash = \"sha256:b124e2a6d223b65ba8768d5706d103280914d61f5cae3afbc50fc3dfcc016623\"},\n    {file = \"yarl-1.9.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:61016e7d582bc46a5378ffdd02cd0314fb8ba52f40f9cf4d9a5e7dbef88dee18\"},\n    {file = \"yarl-1.9.2.tar.gz\", hash = \"sha256:04ab9d4b9f587c06d801c2abfe9317b77cdf996c65a90d5e84ecc45010823571\"},\n]\n\n[package.dependencies]\nidna = \">=2.0\"\nmultidict = \">=4.0\"\n\n[[package]]\nname = \"zope.event\"\nversion = \"4.5.0\"\ndescription = \"Very basic event publishing system\"\noptional = false\npython-versions = \"*\"\nfiles = [\n    {file = \"zope.event-4.5.0-py2.py3-none-any.whl\", hash = \"sha256:2666401939cdaa5f4e0c08cf7f20c9b21423b95e88f4675b1443973bdb080c42\"},\n    {file = \"zope.event-4.5.0.tar.gz\", hash = \"sha256:5e76517f5b9b119acf37ca8819781db6c16ea433f7e2062c4afc2b6fbedb1330\"},\n]\n\n[package.dependencies]\nsetuptools = \"*\"\n\n[package.extras]\ndocs = [\"Sphinx\"]\ntest = [\"zope.testrunner\"]\n\n[[package]]\nname = \"zope.interface\"\nversion = \"5.1.1\"\ndescription = \"Interfaces for Python\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\nfiles = [\n    {file = \"zope.interface-5.1.1-cp27-cp27m-macosx_10_9_x86_64.whl\", hash = \"sha256:67ecb94206d4575f40e8b7625956f2549d181ad12156b411a24b675ee1456fdd\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27m-manylinux1_i686.whl\", hash = \"sha256:04e0125b2c862b0129c10b0520e4998dbbfc40d60f1d84517d76dbc516ad022d\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27m-manylinux1_x86_64.whl\", hash = \"sha256:f229d52369e9b0a7dd6cf96b531d1c7977a94149417d8bb3d50bdcf7a80387f8\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27m-manylinux2010_i686.whl\", hash = \"sha256:95342cf3bca936d2fd876b93dec7f02adfc488a8ff10b36c8ea8078960adface\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27m-manylinux2010_x86_64.whl\", hash = \"sha256:58efa73ec3b45a6e89d3e81561bdbd771ac8de8d946b3e652682ce8214ddb513\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27m-win32.whl\", hash = \"sha256:5c78295ebc782e186c54ca9a374ae47cee49b8207d3ad0b07c2669f6747c3f9c\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27m-win_amd64.whl\", hash = \"sha256:56465ad46ae83291ea3bc1020d70a7570ebce6fb3791c1c75d7f6fbcf12acc6b\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27mu-manylinux1_i686.whl\", hash = \"sha256:29ed20dbbfa4e7d48f6a6c923ffe996305617bffbb0c01e7b34dd02f19429bf1\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:7346291f434bc2816f4bd22440aee36eeee504d212a121a777e378e924c4c4e8\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27mu-manylinux2010_i686.whl\", hash = \"sha256:a9c5a7e23caf04fe280e0c242b3644d76406c236fae9469be2aa5e5174ce1808\"},\n    {file = \"zope.interface-5.1.1-cp27-cp27mu-manylinux2010_x86_64.whl\", hash = \"sha256:3e81f8b4a3de63d31a61865c9f4956f0b7a925a2f7a5dc0240e3f356aff175ac\"},\n    {file = \"zope.interface-5.1.1-cp35-cp35m-macosx_10_6_intel.whl\", hash = \"sha256:46e9cb44736f633647f1e6598c3e049f96c82f7ec1336e4e2326544ea1cf98b0\"},\n    {file = \"zope.interface-5.1.1-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:1f858ae20e219d4453ce790f618f45d2c2845955f1e017c391e31aaebee065b1\"},\n    {file = \"zope.interface-5.1.1-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:410c1a104f44b098521e348aab55708bd00a0e0d38c90444a88bb02d00473185\"},\n    {file = \"zope.interface-5.1.1-cp35-cp35m-manylinux2010_i686.whl\", hash = \"sha256:3ba8f66a34ce76ee73de99473b1752a79b86b8369db95567422157dba201793f\"},\n    {file = \"zope.interface-5.1.1-cp35-cp35m-manylinux2010_x86_64.whl\", hash = \"sha256:fdcee72b7020490b21c150c235b95ce7e1e1fe9fe71160936d2eab35d38dfdd2\"},\n    {file = \"zope.interface-5.1.1-cp35-cp35m-win32.whl\", hash = \"sha256:31063831f233f4cfed1e515c692febea733ee72bece0337dec21b882473e60be\"},\n    {file = \"zope.interface-5.1.1-cp35-cp35m-win_amd64.whl\", hash = \"sha256:fb1b094b60cfc762a66bdc6bb07b3c65b441a84999e035e7e78133802776fcd5\"},\n    {file = \"zope.interface-5.1.1-cp36-cp36m-macosx_10_6_intel.whl\", hash = \"sha256:6fafefc463792b38723a5fe7abf32e5c397d097d813a5bf4f2f657d65309eb9d\"},\n    {file = \"zope.interface-5.1.1-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:1421739ef86e32f6b6cef91153a998fd5099e4353c9b2cee4c9f983b50096e24\"},\n    {file = \"zope.interface-5.1.1-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:7aa5b73788704434e98dde0392503e068819df2b52d55209fae4ada7e86e6a97\"},\n    {file = \"zope.interface-5.1.1-cp36-cp36m-manylinux2010_i686.whl\", hash = \"sha256:b05ba336dada8d8c4ae8471c026cfa93d734a8c53e345be8b37cc34c5e90a95e\"},\n    {file = \"zope.interface-5.1.1-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:0d397c63211e43e63b8407977b1a27c6cf7bd75d8303bf0904a96a83e6bded20\"},\n    {file = \"zope.interface-5.1.1-cp36-cp36m-win32.whl\", hash = \"sha256:bd152b98ffe7b4bfe01cffafa6a4ca27cd52371de788d99c897c7113384868ec\"},\n    {file = \"zope.interface-5.1.1-cp36-cp36m-win_amd64.whl\", hash = \"sha256:8d61add553adaffc1fbab2f763ee88ff00d76fd2e2bbf559e02f7c081a1d2b28\"},\n    {file = \"zope.interface-5.1.1-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:d44b6eeb414fda374f027cff9e3c6114da801d2a3d9cf054af0febc0aa76c561\"},\n    {file = \"zope.interface-5.1.1-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:a04877077eb25d76188929be9e734ce216af9a116c29b0af6775248e9d875d9c\"},\n    {file = \"zope.interface-5.1.1-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:09c43731652228d2d4ddd3dfe5457e82254aeeafe606dcc9cbc551756038b8fe\"},\n    {file = \"zope.interface-5.1.1-cp37-cp37m-manylinux2010_i686.whl\", hash = \"sha256:5b9dbbcb637f4411b57692acf11321824ab64f152c42e649fc0ebf960be15615\"},\n    {file = \"zope.interface-5.1.1-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:eab4ad27c485331f25c1c49c0b483ee500df7bcd0d1e2549b4abfa7cc674ab77\"},\n    {file = \"zope.interface-5.1.1-cp37-cp37m-win32.whl\", hash = \"sha256:55bc33d3e0b191a16d5d696fe5f2716acc4701a4fdb891281bbd1b4a84a94fde\"},\n    {file = \"zope.interface-5.1.1-cp37-cp37m-win_amd64.whl\", hash = \"sha256:090267317d9e8bf8c1f2cef1d7e9f438e55010a58ba7f514f481c21c3f20f348\"},\n    {file = \"zope.interface-5.1.1-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:46294c0b4da40f9d19b84319a7a932bbee68715db925336aea47fc917fcbc28a\"},\n    {file = \"zope.interface-5.1.1-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:801591cf7218e26f40aacdcb6655b9bf6e6e01c1d071b7a5b142959b5bb1a681\"},\n    {file = \"zope.interface-5.1.1-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:d7dd226c385fa65b9d487db0ce77c6270ce271c8684fcfe392787d05c3b4e0ac\"},\n    {file = \"zope.interface-5.1.1-cp38-cp38-manylinux2010_i686.whl\", hash = \"sha256:67f2b706184dde4e194582b8c114ef1f6a990a777f2547f0c79f05f23d0688d0\"},\n    {file = \"zope.interface-5.1.1-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:53004603b2e9e4c1e99554bdb603b52564e2a51c1692064d61269f0bcb21ae1c\"},\n    {file = \"zope.interface-5.1.1-cp38-cp38-win32.whl\", hash = \"sha256:ded12f5819357119ccda08b12815e888077832911ee05cd8a66049c5ce2280cd\"},\n    {file = \"zope.interface-5.1.1-cp38-cp38-win_amd64.whl\", hash = \"sha256:abf615c103c4427d22af6cc938869fe4e6b355f9bfa20919e142ec3ff860df7a\"},\n    {file = \"zope.interface-5.1.1.tar.gz\", hash = \"sha256:5e98cd35f2ae34e7830f3c91675bf418e6ee985817568d982c44dabd7345325b\"},\n]\n\n[package.dependencies]\nsetuptools = \"*\"\n\n[package.extras]\ndocs = [\"Sphinx\", \"repoze.sphinx.autointerface\"]\ntest = [\"coverage (>=5.0.3)\", \"zope.event\", \"zope.testing\"]\ntesting = [\"coverage (>=5.0.3)\", \"zope.event\", \"zope.testing\"]\n\n[metadata]\nlock-version = \"2.0\"\npython-versions = \"^3.10\"\ncontent-hash = \"314f199bd50ccbf636ce1c6c753f8c79a1f5a16aa7c1a330a2ec514a13dbad2d\"\n"
        },
        {
          "name": "proto",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 3.455078125,
          "content": "[tool.black]\ntarget-version = ['py310']\nexclude = '''\n(\n  /(\n      \\.eggs         # exclude a few common directories in the\n    | \\.git          # root of the project\n    | \\.hg\n    | \\.mypy_cache\n    | \\.tox\n    | \\.venv\n    | _build\n    | buck-out\n    | build\n    | dist\n    | migrations    # migrations/ is generated by alembic\n    | app/events/generated\n  )/\n)\n'''\n\n[tool.ruff]\nignore-init-module-imports = true\nexclude = [\".venv\", \"migrations\", \"app/events/generated\"]\n\n[tool.djlint]\nindent = 2\nprofile = \"jinja\"\nblank_line_after_tag = \"if,for,include,load,extends,block,endcall\"\n\n# H006: Images should have a height attribute\n# H013: Images should have an alt attribute\n# H016: Missing title tag in html. | False positive on template\n# H017: Tag should be self closing\n# H019: Replace 'javascript:abc()' with on_ event and real url. (javascript:history.back())\n# H021: Avoid inline styles\n# H025: Tag seems to be orphan (it messes up with indicators on strings such as <email@example.com>)\n# H030: Consider adding a meta description | False positive on template\n# H031: Consider adding meta keywords\n# T003: Endblock should have a name\n# J004: (Jinja) Static urls should follow {{ url_for('static'..) }} pattern\n# J018: (Jinja) Internal links should use the {{ url_for() ... }} pattern. | Some false positives\n# T001: Variables should be wrapped in a single whitespace. | Messes up with comments\nignore = \"H006,H013,H016,H017,H019,H021,H025,H030,H031,T003,J004,J018,T001\"\n\n[tool.poetry]\nname = \"SimpleLogin\"\nversion = \"0.1.0\"\ndescription = \"open-source email alias solution\"\nauthors = [\"SimpleLogin <dev@simplelogin.io>\"]\nlicense = \"MIT\"\nrepository = \"https://github.com/simple-login/app\"\nkeywords = [\"email\", \"alias\", \"privacy\", \"oauth2\", \"openid\"]\npackages = [\n  { include = \"app/\" },\n  { include = \"migrations/\" },\n]\ninclude = [\"templates/*\", \"templates/**/*\", \"local_data/*.txt\"]\n\n[tool.poetry.dependencies]\npython = \"^3.10\"\nflask = \"^1.1.2\"\nflask_login = \"^0.5.0\"\nwtforms = \"^2.3.3\"\nunidecode = \"^1.1.1\"\ngunicorn = \"^20.0.4\"\nbcrypt = \"^3.2.0\"\npython-dotenv = \"^0.14.0\"\nipython = \"^7.31.1\"\nsqlalchemy_utils = \"^0.36.8\"\npsycopg2-binary = \"^2.9.3\"\nsentry_sdk = \"^2.16.0\"\nblinker = \"^1.4\"\narrow = \"^0.16.0\"\nFlask-WTF = \"^0.14.3\"\nboto3 = \"^1.15.9\"\nFlask-Migrate = \"^2.5.3\"\nflask_admin = \"^1.5.6\"\nflask-cors = \"^3.0.9\"\nwatchtower = \"^0.8.0\"\nsqlalchemy-utils = \"^0.36.8\"\njwcrypto = \"^0.8\"\nyacron = \"^0.11.1\"\nflask-debugtoolbar = \"^0.11.0\"\nrequests_oauthlib = \"^1.3.0\"\npyopenssl = \"^19.1.0\"\naiosmtpd = \"^1.2\"\ndnspython = \"^2.0.0\"\ncoloredlogs = \"^14.0\"\npycryptodome = \"^3.9.8\"\nphpserialize = \"^1.3\"\ndkimpy = \"^1.0.5\"\npyotp = \"^2.4.0\"\nflask_profiler = \"^1.8.1\"\nfacebook-sdk = \"^3.1.0\"\ngoogle-api-python-client = \"^1.12.3\"\ngoogle-auth-httplib2 = \"^0.0.4\"\npython-gnupg = \"^0.4.6\"\nwebauthn = \"^0.4.7\"\npyspf = \"^2.0.14\"\nFlask-Limiter = \"^1.4\"\nmemory_profiler = \"^0.57.0\"\ngevent = \"22.10.2\"\nemail_validator = \"^1.1.1\"\nPGPy = \"0.5.4\"\ncoinbase-commerce = \"^1.0.1\"\nrequests = \"^2.25.1\"\nnewrelic = \"8.8.0\"\nflanker = \"^0.9.11\"\npyre2 = \"^0.3.6\"\ntldextract = \"^3.1.2\"\nflask-debugtoolbar-sqlalchemy = \"^0.2.0\"\ntwilio = \"^7.3.2\"\nDeprecated = \"^1.2.13\"\ncryptography = \"37.0.1\"\nSQLAlchemy = \"1.3.24\"\nredis = \"^4.5.3\"\nnewrelic-telemetry-sdk = \"^0.5.0\"\naiospamc = \"0.10\"\n\n[tool.poetry.dev-dependencies]\npytest = \"^7.0.0\"\npytest-cov = \"^3.0.0\"\nblack = \"^22.1.0\"\ndjlint = \"^1.3.0\"\npylint = \"^2.14.4\"\n\n[tool.poetry.group.dev.dependencies]\nruff = \"^0.1.5\"\npre-commit = \"^3.8.0\"\n\n[build-system]\nrequires = [\"poetry>=0.12\"]\nbuild-backend = \"poetry.masonry.api\"\n"
        },
        {
          "name": "pytest.ci.ini",
          "type": "blob",
          "size": 0.1083984375,
          "content": "[pytest]\naddopts =\n    --cov\n    --cov-config coverage.ini\n    --cov-report=html:htmlcov\ntestpaths =\n    tests\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "server.py",
          "type": "blob",
          "size": 17.712890625,
          "content": "import os\nimport time\nfrom datetime import timedelta\n\nimport arrow\nimport click\nimport flask_limiter\nimport flask_profiler\nimport newrelic.agent\nimport sentry_sdk\n\nfrom flask import (\n    Flask,\n    redirect,\n    url_for,\n    render_template,\n    request,\n    jsonify,\n    flash,\n    session,\n    g,\n)\nfrom flask_admin import Admin\nfrom flask_cors import cross_origin, CORS\nfrom flask_login import current_user\nfrom sentry_sdk.integrations.flask import FlaskIntegration\nfrom sentry_sdk.integrations.sqlalchemy import SqlalchemyIntegration\nfrom werkzeug.middleware.proxy_fix import ProxyFix\n\nfrom app import config, constants\nfrom app.admin_model import (\n    SLAdminIndexView,\n    UserAdmin,\n    AliasAdmin,\n    MailboxAdmin,\n    ManualSubscriptionAdmin,\n    CouponAdmin,\n    CustomDomainAdmin,\n    AdminAuditLogAdmin,\n    ProviderComplaintAdmin,\n    NewsletterAdmin,\n    NewsletterUserAdmin,\n    DailyMetricAdmin,\n    MetricAdmin,\n    InvalidMailboxDomainAdmin,\n    EmailSearchAdmin,\n    CustomDomainSearchAdmin,\n)\nfrom app.api.base import api_bp\nfrom app.auth.base import auth_bp\nfrom app.build_info import SHA1\nfrom app.config import (\n    DB_URI,\n    FLASK_SECRET,\n    SENTRY_DSN,\n    URL,\n    FLASK_PROFILER_PATH,\n    FLASK_PROFILER_PASSWORD,\n    SENTRY_FRONT_END_DSN,\n    FIRST_ALIAS_DOMAIN,\n    SESSION_COOKIE_NAME,\n    PLAUSIBLE_HOST,\n    PLAUSIBLE_DOMAIN,\n    GITHUB_CLIENT_ID,\n    GOOGLE_CLIENT_ID,\n    FACEBOOK_CLIENT_ID,\n    LANDING_PAGE_URL,\n    STATUS_PAGE_URL,\n    SUPPORT_EMAIL,\n    PGP_SIGNER,\n    PAGE_LIMIT,\n    ZENDESK_ENABLED,\n    MAX_NB_EMAIL_FREE_PLAN,\n    MEM_STORE_URI,\n)\nfrom app.dashboard.base import dashboard_bp\nfrom app.db import Session\nfrom app.developer.base import developer_bp\nfrom app.discover.base import discover_bp\nfrom app.extensions import login_manager, limiter\nfrom app.fake_data import fake_data\nfrom app.internal.base import internal_bp\nfrom app.jose_utils import get_jwk_key\nfrom app.log import LOG\nfrom app.models import (\n    User,\n    Alias,\n    CustomDomain,\n    Mailbox,\n    EmailLog,\n    Contact,\n    ManualSubscription,\n    Coupon,\n    AdminAuditLog,\n    ProviderComplaint,\n    Newsletter,\n    NewsletterUser,\n    DailyMetric,\n    Metric2,\n    InvalidMailboxDomain,\n)\nfrom app.monitor.base import monitor_bp\nfrom app.newsletter_utils import send_newsletter_to_user\nfrom app.oauth.base import oauth_bp\nfrom app.onboarding.base import onboarding_bp\nfrom app.payments.coinbase import setup_coinbase_commerce\nfrom app.payments.paddle import setup_paddle_callback\nfrom app.phone.base import phone_bp\nfrom app.redis_services import initialize_redis_services\nfrom app.sentry_utils import sentry_before_send\n\nif SENTRY_DSN:\n    LOG.d(\"enable sentry\")\n    sentry_sdk.init(\n        dsn=SENTRY_DSN,\n        release=f\"app@{SHA1}\",\n        integrations=[\n            FlaskIntegration(),\n            SqlalchemyIntegration(),\n        ],\n        before_send=sentry_before_send,\n    )\n\n# the app is served behind nginx which uses http and not https\nos.environ[\"OAUTHLIB_INSECURE_TRANSPORT\"] = \"1\"\n\n\ndef create_light_app() -> Flask:\n    app = Flask(__name__)\n    app.config[\"SQLALCHEMY_DATABASE_URI\"] = DB_URI\n    app.config[\"SQLALCHEMY_TRACK_MODIFICATIONS\"] = False\n\n    @app.teardown_appcontext\n    def shutdown_session(response_or_exc):\n        Session.remove()\n\n    return app\n\n\ndef create_app() -> Flask:\n    app = Flask(__name__)\n    # SimpleLogin is deployed behind NGINX\n    app.wsgi_app = ProxyFix(app.wsgi_app, x_for=1, x_host=1)\n\n    app.url_map.strict_slashes = False\n\n    app.config[\"SQLALCHEMY_DATABASE_URI\"] = DB_URI\n    app.config[\"SQLALCHEMY_TRACK_MODIFICATIONS\"] = False\n    # enable to print all queries generated by sqlalchemy\n    # app.config[\"SQLALCHEMY_ECHO\"] = True\n\n    app.secret_key = FLASK_SECRET\n\n    app.config[\"TEMPLATES_AUTO_RELOAD\"] = True\n\n    # to have a \"fluid\" layout for admin\n    app.config[\"FLASK_ADMIN_FLUID_LAYOUT\"] = True\n\n    # to avoid conflict with other cookie\n    app.config[\"SESSION_COOKIE_NAME\"] = SESSION_COOKIE_NAME\n    if URL.startswith(\"https\"):\n        app.config[\"SESSION_COOKIE_SECURE\"] = True\n    app.config[\"SESSION_COOKIE_SAMESITE\"] = \"Lax\"\n    if MEM_STORE_URI:\n        app.config[flask_limiter.extension.C.STORAGE_URL] = MEM_STORE_URI\n        initialize_redis_services(app, MEM_STORE_URI)\n\n    limiter.init_app(app)\n\n    setup_error_page(app)\n\n    init_extensions(app)\n    register_blueprints(app)\n    set_index_page(app)\n    jinja2_filter(app)\n\n    setup_favicon_route(app)\n    setup_openid_metadata(app)\n\n    init_admin(app)\n    setup_paddle_callback(app)\n    setup_coinbase_commerce(app)\n    setup_do_not_track(app)\n    register_custom_commands(app)\n\n    if FLASK_PROFILER_PATH:\n        LOG.d(\"Enable flask-profiler\")\n        app.config[\"flask_profiler\"] = {\n            \"enabled\": True,\n            \"storage\": {\"engine\": \"sqlite\", \"FILE\": FLASK_PROFILER_PATH},\n            \"basicAuth\": {\n                \"enabled\": True,\n                \"username\": \"admin\",\n                \"password\": FLASK_PROFILER_PASSWORD,\n            },\n            \"ignore\": [\"^/static/.*\", \"/git\", \"/exception\", \"/health\"],\n        }\n        flask_profiler.init_app(app)\n\n    # enable CORS on /api endpoints\n    CORS(app, resources={r\"/api/*\": {\"origins\": \"*\"}})\n\n    # set session to permanent so user stays signed in after quitting the browser\n    # the cookie is valid for 7 days\n    @app.before_request\n    def make_session_permanent():\n        session.permanent = True\n        app.permanent_session_lifetime = timedelta(days=7)\n\n    @app.teardown_appcontext\n    def cleanup(resp_or_exc):\n        Session.remove()\n\n    @app.route(\"/health\", methods=[\"GET\"])\n    def healthcheck():\n        return \"success\", 200\n\n    return app\n\n\n@login_manager.user_loader\ndef load_user(alternative_id):\n    user = User.get_by(alternative_id=alternative_id)\n    if user:\n        sentry_sdk.set_user({\"email\": user.email, \"id\": user.id})\n        if user.disabled:\n            return None\n        if not user.is_active():\n            return None\n\n    return user\n\n\ndef register_blueprints(app: Flask):\n    app.register_blueprint(auth_bp)\n    app.register_blueprint(monitor_bp)\n    app.register_blueprint(dashboard_bp)\n    app.register_blueprint(developer_bp)\n    app.register_blueprint(phone_bp)\n\n    app.register_blueprint(oauth_bp, url_prefix=\"/oauth\")\n    app.register_blueprint(oauth_bp, url_prefix=\"/oauth2\")\n    app.register_blueprint(onboarding_bp)\n\n    app.register_blueprint(discover_bp)\n    app.register_blueprint(internal_bp)\n    app.register_blueprint(api_bp)\n\n\ndef set_index_page(app):\n    @app.route(\"/\", methods=[\"GET\", \"POST\"])\n    def index():\n        if current_user.is_authenticated:\n            return redirect(url_for(\"dashboard.index\"))\n        else:\n            return redirect(url_for(\"auth.login\"))\n\n    @app.before_request\n    def before_request():\n        # not logging /static call\n        if (\n            not request.path.startswith(\"/static\")\n            and not request.path.startswith(\"/admin/static\")\n            and not request.path.startswith(\"/_debug_toolbar\")\n        ):\n            g.start_time = time.time()\n\n            # to handle the referral url that has ?slref=code part\n            ref_code = request.args.get(\"slref\")\n            if ref_code:\n                session[\"slref\"] = ref_code\n\n    @app.after_request\n    def after_request(res):\n        # not logging /static call\n        if (\n            not request.path.startswith(\"/static\")\n            and not request.path.startswith(\"/admin/static\")\n            and not request.path.startswith(\"/_debug_toolbar\")\n            and not request.path.startswith(\"/git\")\n            and not request.path.startswith(\"/favicon.ico\")\n            and not request.path.startswith(\"/health\")\n        ):\n            start_time = g.start_time or time.time()\n            LOG.d(\n                \"%s %s %s %s %s, takes %s\",\n                request.remote_addr,\n                request.method,\n                request.path,\n                request.args,\n                res.status_code,\n                time.time() - start_time,\n            )\n            newrelic.agent.record_custom_event(\n                \"HttpResponseStatus\", {\"code\": res.status_code}\n            )\n        return res\n\n\ndef setup_openid_metadata(app):\n    @app.route(\"/.well-known/openid-configuration\")\n    @cross_origin()\n    def openid_config():\n        res = {\n            \"issuer\": URL,\n            \"authorization_endpoint\": URL + \"/oauth2/authorize\",\n            \"token_endpoint\": URL + \"/oauth2/token\",\n            \"userinfo_endpoint\": URL + \"/oauth2/userinfo\",\n            \"jwks_uri\": URL + \"/jwks\",\n            \"response_types_supported\": [\n                \"code\",\n                \"token\",\n                \"id_token\",\n                \"id_token token\",\n                \"id_token code\",\n            ],\n            \"subject_types_supported\": [\"public\"],\n            \"id_token_signing_alg_values_supported\": [\"RS256\"],\n            # todo: add introspection and revocation endpoints\n            # \"introspection_endpoint\": URL + \"/oauth2/token/introspection\",\n            # \"revocation_endpoint\": URL + \"/oauth2/token/revocation\",\n        }\n\n        return jsonify(res)\n\n    @app.route(\"/jwks\")\n    @cross_origin()\n    def jwks():\n        res = {\"keys\": [get_jwk_key()]}\n        return jsonify(res)\n\n\ndef get_current_user():\n    try:\n        return g.user\n    except AttributeError:\n        return current_user\n\n\ndef setup_error_page(app):\n    @app.errorhandler(400)\n    def bad_request(e):\n        if request.path.startswith(\"/api/\"):\n            return jsonify(error=\"Bad Request\"), 400\n        else:\n            return render_template(\"error/400.html\"), 400\n\n    @app.errorhandler(401)\n    def unauthorized(e):\n        if request.path.startswith(\"/api/\"):\n            return jsonify(error=\"Unauthorized\"), 401\n        else:\n            flash(\"You need to login to see this page\", \"error\")\n            return redirect(url_for(\"auth.login\", next=request.full_path))\n\n    @app.errorhandler(403)\n    def forbidden(e):\n        if request.path.startswith(\"/api/\"):\n            return jsonify(error=\"Forbidden\"), 403\n        else:\n            return render_template(\"error/403.html\"), 403\n\n    @app.errorhandler(429)\n    def rate_limited(e):\n        LOG.w(\n            \"Client hit rate limit on path %s, user:%s\",\n            request.path,\n            get_current_user(),\n        )\n        if request.path.startswith(\"/api/\"):\n            return jsonify(error=\"Rate limit exceeded\"), 429\n        else:\n            return render_template(\"error/429.html\"), 429\n\n    @app.errorhandler(404)\n    def page_not_found(e):\n        if request.path.startswith(\"/api/\"):\n            return jsonify(error=\"No such endpoint\"), 404\n        else:\n            return render_template(\"error/404.html\"), 404\n\n    @app.errorhandler(405)\n    def wrong_method(e):\n        if request.path.startswith(\"/api/\"):\n            return jsonify(error=\"Method not allowed\"), 405\n        else:\n            return render_template(\"error/405.html\"), 405\n\n    @app.errorhandler(Exception)\n    def error_handler(e):\n        LOG.e(e)\n        if request.path.startswith(\"/api/\"):\n            return jsonify(error=\"Internal error\"), 500\n        else:\n            return render_template(\"error/500.html\"), 500\n\n\ndef setup_favicon_route(app):\n    @app.route(\"/favicon.ico\")\n    def favicon():\n        return redirect(\"/static/favicon.ico\")\n\n\ndef jinja2_filter(app):\n    def format_datetime(value):\n        dt = arrow.get(value)\n        return dt.humanize()\n\n    app.jinja_env.filters[\"dt\"] = format_datetime\n\n    @app.context_processor\n    def inject_stage_and_region():\n        now = arrow.now()\n        return dict(\n            YEAR=now.year,\n            NOW=now,\n            URL=URL,\n            SENTRY_DSN=SENTRY_FRONT_END_DSN,\n            VERSION=SHA1,\n            FIRST_ALIAS_DOMAIN=FIRST_ALIAS_DOMAIN,\n            PLAUSIBLE_HOST=PLAUSIBLE_HOST,\n            PLAUSIBLE_DOMAIN=PLAUSIBLE_DOMAIN,\n            GITHUB_CLIENT_ID=GITHUB_CLIENT_ID,\n            GOOGLE_CLIENT_ID=GOOGLE_CLIENT_ID,\n            FACEBOOK_CLIENT_ID=FACEBOOK_CLIENT_ID,\n            LANDING_PAGE_URL=LANDING_PAGE_URL,\n            STATUS_PAGE_URL=STATUS_PAGE_URL,\n            SUPPORT_EMAIL=SUPPORT_EMAIL,\n            PGP_SIGNER=PGP_SIGNER,\n            CANONICAL_URL=f\"{URL}{request.path}\",\n            PAGE_LIMIT=PAGE_LIMIT,\n            ZENDESK_ENABLED=ZENDESK_ENABLED,\n            MAX_NB_EMAIL_FREE_PLAN=MAX_NB_EMAIL_FREE_PLAN,\n            HEADER_ALLOW_API_COOKIES=constants.HEADER_ALLOW_API_COOKIES,\n        )\n\n\ndef init_extensions(app: Flask):\n    login_manager.init_app(app)\n\n\ndef init_admin(app):\n    admin = Admin(name=\"SimpleLogin\", template_mode=\"bootstrap4\")\n\n    admin.init_app(app, index_view=SLAdminIndexView())\n    admin.add_view(EmailSearchAdmin(name=\"Email Search\", endpoint=\"email_search\"))\n    admin.add_view(\n        CustomDomainSearchAdmin(\n            name=\"Custom domain search\", endpoint=\"custom_domain_search\"\n        )\n    )\n    admin.add_view(UserAdmin(User, Session))\n    admin.add_view(AliasAdmin(Alias, Session))\n    admin.add_view(MailboxAdmin(Mailbox, Session))\n    admin.add_view(CouponAdmin(Coupon, Session))\n    admin.add_view(ManualSubscriptionAdmin(ManualSubscription, Session))\n    admin.add_view(CustomDomainAdmin(CustomDomain, Session))\n    admin.add_view(AdminAuditLogAdmin(AdminAuditLog, Session))\n    admin.add_view(ProviderComplaintAdmin(ProviderComplaint, Session))\n    admin.add_view(NewsletterAdmin(Newsletter, Session))\n    admin.add_view(NewsletterUserAdmin(NewsletterUser, Session))\n    admin.add_view(DailyMetricAdmin(DailyMetric, Session))\n    admin.add_view(MetricAdmin(Metric2, Session))\n    admin.add_view(InvalidMailboxDomainAdmin(InvalidMailboxDomain, Session))\n\n\ndef register_custom_commands(app):\n    \"\"\"\n    Adhoc commands run during data migration.\n    Registered as flask command, so it can run as:\n\n    > flask {task-name}\n    \"\"\"\n\n    @app.cli.command(\"fill-up-email-log-alias\")\n    def fill_up_email_log_alias():\n        \"\"\"Fill up email_log.alias_id column\"\"\"\n        # split all emails logs into 1000-size trunks\n        nb_email_log = EmailLog.count()\n        LOG.d(\"total trunks %s\", nb_email_log // 1000 + 2)\n        for trunk in reversed(range(1, nb_email_log // 1000 + 2)):\n            nb_update = 0\n            for email_log, contact in (\n                Session.query(EmailLog, Contact)\n                .filter(EmailLog.contact_id == Contact.id)\n                .filter(EmailLog.id <= trunk * 1000)\n                .filter(EmailLog.id > (trunk - 1) * 1000)\n                .filter(EmailLog.alias_id.is_(None))\n            ):\n                email_log.alias_id = contact.alias_id\n                nb_update += 1\n\n            LOG.d(\"finish trunk %s, update %s email logs\", trunk, nb_update)\n            Session.commit()\n\n    @app.cli.command(\"dummy-data\")\n    def dummy_data():\n        from init_app import add_sl_domains, add_proton_partner\n\n        LOG.w(\"reset db, add fake data\")\n        fake_data()\n        add_sl_domains()\n        add_proton_partner()\n\n    @app.cli.command(\"send-newsletter\")\n    @click.option(\"-n\", \"--newsletter_id\", type=int, help=\"Newsletter ID to be sent\")\n    def send_newsletter(newsletter_id):\n        newsletter = Newsletter.get(newsletter_id)\n        if not newsletter:\n            LOG.w(f\"no such newsletter {newsletter_id}\")\n            return\n\n        nb_success = 0\n        nb_failure = 0\n\n        # user_ids that have received the newsletter\n        user_received_newsletter = Session.query(NewsletterUser.user_id).filter(\n            NewsletterUser.newsletter_id == newsletter_id\n        )\n\n        # only send newsletter to those who haven't received it\n        # not query users directly here as we can run out of memory\n        user_ids = (\n            Session.query(User.id)\n            .order_by(User.id)\n            .filter(User.id.notin_(user_received_newsletter))\n            .all()\n        )\n\n        # user_ids is an array of tuple (user_id,)\n        user_ids = [user_id[0] for user_id in user_ids]\n\n        for user_id in user_ids:\n            user = User.get(user_id)\n            # refetch newsletter\n            newsletter = Newsletter.get(newsletter_id)\n\n            if not user:\n                LOG.i(f\"User {user_id} was maybe deleted in the meantime\")\n                continue\n\n            comm_email, unsubscribe_link, via_email = user.get_communication_email()\n            if not comm_email:\n                continue\n\n            sent, error_msg = send_newsletter_to_user(newsletter, user)\n            if sent:\n                LOG.d(f\"{newsletter} sent to {user}\")\n                nb_success += 1\n            else:\n                nb_failure += 1\n\n            # sleep in between to not overwhelm mailbox provider\n            time.sleep(0.2)\n\n        LOG.d(f\"Nb success {nb_success}, failures {nb_failure}\")\n\n\ndef setup_do_not_track(app):\n    @app.route(\"/dnt\")\n    def do_not_track():\n        return \"\"\"\n        <script src=\"/static/local-storage-polyfill.js\"></script>\n\n        <script>\n// Disable Analytics if this script is called\n\nstore.set('analytics-ignore', 't');\n\nalert(\"Analytics disabled\");\n\nwindow.location.href = \"/\";\n\n</script>\n        \"\"\"\n\n\ndef local_main():\n    config.COLOR_LOG = True\n    app = create_app()\n\n    # enable flask toolbar\n    from flask_debugtoolbar import DebugToolbarExtension\n\n    app.config[\"DEBUG_TB_PROFILER_ENABLED\"] = True\n    app.config[\"DEBUG_TB_INTERCEPT_REDIRECTS\"] = False\n    app.debug = True\n    DebugToolbarExtension(app)\n\n    # disable the sqlalchemy debug panels because of \"IndexError: pop from empty list\" from:\n    # duration = time.time() - conn.info['query_start_time'].pop(-1)\n    # app.config[\"DEBUG_TB_PANELS\"] += (\"flask_debugtoolbar_sqlalchemy.SQLAlchemyPanel\",)\n\n    app.run(debug=True, port=7777)\n\n    # uncomment to run https locally\n    # LOG.d(\"enable https\")\n    # import ssl\n    # context = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)\n    # context.load_cert_chain(\"local_data/cert.pem\", \"local_data/key.pem\")\n    # app.run(debug=True, port=7777, ssl_context=context)\n\n\nif __name__ == \"__main__\":\n    local_main()\n"
        },
        {
          "name": "shell.py",
          "type": "blob",
          "size": 2.1015625,
          "content": "import flask_migrate\nfrom IPython import embed\nfrom sqlalchemy_utils import create_database, database_exists, drop_database\n\nfrom app import models\nfrom app.config import DB_URI\nfrom app.db import Session\nfrom app.log import LOG\nfrom app.models import User, RecoveryCode\n\nif False:\n    # noinspection PyUnreachableCode\n    def create_db():\n        if not database_exists(DB_URI):\n            LOG.d(\"db not exist, create database\")\n            create_database(DB_URI)\n\n            # Create all tables\n            # Use flask-migrate instead of db.create_all()\n            flask_migrate.upgrade()\n\n    # noinspection PyUnreachableCode\n    def reset_db():\n        if database_exists(DB_URI):\n            drop_database(DB_URI)\n        create_db()\n\n\ndef change_password(user_id, new_password):\n    user = User.get(user_id)\n    user.set_password(new_password)\n    Session.commit()\n\n\ndef migrate_recovery_codes():\n    last_id = -1\n    while True:\n        recovery_codes = (\n            RecoveryCode.filter(RecoveryCode.id > last_id)\n            .order_by(RecoveryCode.id)\n            .limit(100)\n            .all()\n        )\n        batch_codes = len(recovery_codes)\n        old_codes = 0\n        new_codes = 0\n        last_code = None\n        last_code_id = None\n        for recovery_code in recovery_codes:\n            if len(recovery_code.code) == models._RECOVERY_CODE_LENGTH:\n                last_code = recovery_code.code\n                last_code_id = recovery_code.id\n                recovery_code.code = RecoveryCode._hash_code(recovery_code.code)\n                old_codes += 1\n                Session.flush()\n            else:\n                new_codes += 1\n            last_id = recovery_code.id\n        Session.commit()\n        LOG.i(\n            f\"Updated {old_codes}/{batch_codes} for this batch ({new_codes} already updated)\"\n        )\n        if last_code is not None:\n            recovery_code = RecoveryCode.get_by(id=last_code_id)\n            assert RecoveryCode._hash_code(last_code) == recovery_code.code\n            LOG.i(\"Check is Good\")\n\n        if len(recovery_codes) == 0:\n            break\n\n\nif __name__ == \"__main__\":\n    embed()\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "wsgi.py",
          "type": "blob",
          "size": 0.048828125,
          "content": "from server import create_app\n\napp = create_app()\n"
        }
      ]
    }
  ]
}