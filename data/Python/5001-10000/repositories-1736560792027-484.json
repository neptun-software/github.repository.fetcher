{
  "metadata": {
    "timestamp": 1736560792027,
    "page": 484,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lebinh/ngxtop",
      "stars": 6493,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0361328125,
          "content": "*.py[cod]\n.idea\n.vagrant\nVagrantfile\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.05078125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2014 Binh Le.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 7.4306640625,
          "content": "================================================================\n``ngxtop`` - **real-time** metrics for nginx server (and others)\n================================================================\n\n**ngxtop** parses your nginx access log and outputs useful, ``top``-like, metrics of your nginx server.\nSo you can tell what is happening with your server in real-time.\n\n    ``ngxtop`` is designed to run in a short-period time just like the ``top`` command for troubleshooting and monitoring\n    your Nginx server at the moment. If you need a long running monitoring process or storing your webserver stats in external\n    monitoring / graphing system, you can try `Luameter <https://luameter.com>`_.\n\n``ngxtop`` tries to determine the correct location and format of nginx access log file by default, so you can just run\n``ngxtop`` and having a close look at all requests coming to your nginx server. But it does not limit you to nginx\nand the default top view. ``ngxtop`` is flexible enough for you to configure and change most of its behaviours.\nYou can query for different things, specify your log and format, even parse remote Apache common access log with ease.\nSee sample usages below for some ideas about what you can do with it.\n\nInstallation\n------------\n\n::\n\n    pip install ngxtop\n\n\nNote: ``ngxtop`` is primarily developed and tested with python2 but also supports python3.\n\nUsage\n-----\n\n::\n\n    Usage:\n        ngxtop [options]\n        ngxtop [options] (print|top|avg|sum) <var>\n        ngxtop info\n\n    Options:\n        -l <file>, --access-log <file>  access log file to parse.\n        -f <format>, --log-format <format>  log format as specify in log_format directive.\n        --no-follow  ngxtop default behavior is to ignore current lines in log\n                         and only watch for new lines as they are written to the access log.\n                         Use this flag to tell ngxtop to process the current content of the access log instead.\n        -t <seconds>, --interval <seconds>  report interval when running in follow mode [default: 2.0]\n\n        -g <var>, --group-by <var>  group by variable [default: request_path]\n        -w <var>, --having <expr>  having clause [default: 1]\n        -o <var>, --order-by <var>  order of output for default query [default: count]\n        -n <number>, --limit <number>  limit the number of records included in report for top command [default: 10]\n        -a <exp> ..., --a <exp> ...  add exp (must be aggregation exp: sum, avg, min, max, etc.) into output\n\n        -v, --verbose  more verbose output\n        -d, --debug  print every line and parsed record\n        -h, --help  print this help message.\n        --version  print version information.\n\n        Advanced / experimental options:\n        -c <file>, --config <file>  allow ngxtop to parse nginx config file for log format and location.\n        -i <filter-expression>, --filter <filter-expression>  filter in, records satisfied given expression are processed.\n        -p <filter-expression>, --pre-filter <filter-expression> in-filter expression to check in pre-parsing phase.\n\nSamples\n-------\n\nDefault output\n~~~~~~~~~~~~~~\n\n::\n\n    $ ngxtop\n    running for 411 seconds, 64332 records processed: 156.60 req/sec\n\n    Summary:\n    |   count |   avg_bytes_sent |   2xx |   3xx |   4xx |   5xx |\n    |---------+------------------+-------+-------+-------+-------|\n    |   64332 |         2775.251 | 61262 |  2994 |    71 |     5 |\n\n    Detailed:\n    | request_path                             |   count |   avg_bytes_sent |   2xx |   3xx |   4xx |   5xx |\n    |------------------------------------------+---------+------------------+-------+-------+-------+-------|\n    | /abc/xyz/xxxx                            |   20946 |          434.693 | 20935 |     0 |    11 |     0 |\n    | /xxxxx.json                              |    5633 |         1483.723 |  5633 |     0 |     0 |     0 |\n    | /xxxxx/xxx/xxxxxxxxxxxxx                 |    3629 |         6835.499 |  3626 |     0 |     3 |     0 |\n    | /xxxxx/xxx/xxxxxxxx                      |    3627 |        15971.885 |  3623 |     0 |     4 |     0 |\n    | /xxxxx/xxx/xxxxxxx                       |    3624 |         7830.236 |  3621 |     0 |     3 |     0 |\n    | /static/js/minified/utils.min.js         |    3031 |         1781.155 |  2104 |   927 |     0 |     0 |\n    | /static/js/minified/xxxxxxx.min.v1.js    |    2889 |         2210.235 |  2068 |   821 |     0 |     0 |\n    | /static/tracking/js/xxxxxxxx.js          |    2594 |         1325.681 |  1927 |   667 |     0 |     0 |\n    | /xxxxx/xxx.html                          |    2521 |          573.597 |  2520 |     0 |     1 |     0 |\n    | /xxxxx/xxxx.json                         |    1840 |          800.542 |  1839 |     0 |     1 |     0 |\n\nView top source IPs of clients\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ ngxtop top remote_addr\n    running for 20 seconds, 3215 records processed: 159.62 req/sec\n\n    top remote_addr\n    | remote_addr     |   count |\n    |-----------------+---------|\n    | 118.173.177.161 |      20 |\n    | 110.78.145.3    |      16 |\n    | 171.7.153.7     |      16 |\n    | 180.183.67.155  |      16 |\n    | 183.89.65.9     |      16 |\n    | 202.28.182.5    |      16 |\n    | 1.47.170.12     |      15 |\n    | 119.46.184.2    |      15 |\n    | 125.26.135.219  |      15 |\n    | 125.26.213.203  |      15 |\n\nList 4xx or 5xx responses together with HTTP referer\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ ngxtop -i 'status >= 400' print request status http_referer\n    running for 2 seconds, 28 records processed: 13.95 req/sec\n\n    request, status, http_referer:\n    | request   |   status | http_referer   |\n    |-----------+----------+----------------|\n    | -         |      400 | -              |\n\nParse apache log from remote server with `common` format\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n::\n\n    $ ssh user@remote_server tail -f /var/log/apache2/access.log | ngxtop -f common\n    running for 20 seconds, 1068 records processed: 53.01 req/sec\n\n    Summary:\n    |   count |   avg_bytes_sent |   2xx |   3xx |   4xx |   5xx |\n    |---------+------------------+-------+-------+-------+-------|\n    |    1068 |        28026.763 |  1029 |    20 |    19 |     0 |\n\n    Detailed:\n    | request_path                             |   count |   avg_bytes_sent |   2xx |   3xx |   4xx |   5xx |\n    |------------------------------------------+---------+------------------+-------+-------+-------+-------|\n    | /xxxxxxxxxx                              |     199 |        55150.402 |   199 |     0 |     0 |     0 |\n    | /xxxxxxxx/xxxxx                          |     167 |        47591.826 |   167 |     0 |     0 |     0 |\n    | /xxxxxxxxxxxxx/xxxxxx                    |      25 |         7432.200 |    25 |     0 |     0 |     0 |\n    | /xxxx/xxxxx/x/xxxxxxxxxxxxx/xxxxxxx      |      22 |          698.727 |    22 |     0 |     0 |     0 |\n    | /xxxx/xxxxx/x/xxxxxxxxxxxxx/xxxxxx       |      19 |         7431.632 |    19 |     0 |     0 |     0 |\n    | /xxxxx/xxxxx/                            |      18 |         7840.889 |    18 |     0 |     0 |     0 |\n    | /xxxxxxxx/xxxxxxxxxxxxxxxxx              |      15 |         7356.000 |    15 |     0 |     0 |     0 |\n    | /xxxxxxxxxxx/xxxxxxxx                    |      15 |         9978.800 |    15 |     0 |     0 |     0 |\n    | /xxxxx/                                  |      14 |            0.000 |     0 |    14 |     0 |     0 |\n    | /xxxxxxxxxx/xxxxxxxx/xxxxx               |      13 |        20530.154 |    13 |     0 |     0 |     0 |\n\n"
        },
        {
          "name": "ngxtop",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0205078125,
          "content": "[wheel]\nuniversal = 1"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.05859375,
          "content": "from setuptools import setup\n\nsetup(\n    name='ngxtop',\n    version='0.0.3',\n    description='Real-time metrics for nginx server',\n    long_description=open('README.rst').read(),\n    license='MIT',\n\n    url='https://github.com/lebinh/ngxtop',\n    author='Binh Le',\n    author_email='lebinh.it@gmail.com',\n\n    classifiers=[\n        'Development Status :: 4 - Beta',\n        'License :: OSI Approved :: MIT License',\n        'Environment :: Console',\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'Programming Language :: Python :: 2',\n        'Programming Language :: Python :: 2.6',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.2',\n        'Programming Language :: Python :: 3.3',\n    ],\n    keywords='cli monitoring nginx system',\n\n    packages=['ngxtop'],\n    install_requires=['docopt', 'tabulate', 'pyparsing'],\n\n    entry_points={\n        'console_scripts': [\n            'ngxtop = ngxtop.ngxtop:main',\n        ],\n    },\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}