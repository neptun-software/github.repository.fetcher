{
  "metadata": {
    "timestamp": 1736560674687,
    "page": 323,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "garrettj403/SciencePlots",
      "stars": 7322,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.09375,
          "content": ".ipynb_checkpoints/\n.DS_STORE\nSciencePlots.egg-info/\n\ndist/\ndev/\n\nTODO.md\nnew-version.md\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 3.6611328125,
          "content": "v2.1.2 (upcoming release)\n====================\nNew features\n------------\n- Added all 23 \"discrete rainbow\" styles proposed by Paul Tol on his website (by @IchBinGROOT)\n  Access them with the style names `discrete-rainbow-1`, `discrete-rainbow-2`, ..., `discrete-rainbow-23`\n- Updated `README.md` to reflect that _Install from `conda-forge` is now available!_\n\nMaintenance\n-----------\n- Now all subdirectories of the ``styles`` folder are parsed for styles, instead of the first two levels only\n- Upgrade & unify issue templates\n\nv2.1.1 (25-Nov-2023)\n====================\n- Avoid Matplotlib issuing `INFO` log statements about no available fonts\n  due to last release changes.\n- Add `science` + `no-latex ` example\n\nv2.1.0 (30-May-2023)\n====================\n- Change `science` and `ieee` to use Times New Roman look-alike fonts\n- Tweak `plot-examples.py` and clean PDF output\n\nv2.0.1 (03-Dec-2022)\n====================\n- Add Turkish `turkish-font` language style\n\nv2.0.0 (21-Nov-2022)\n====================\n- Fix import on case sensitive OSs\n- Finally bump to this version, following breaking change of distribution\n\nv1.1.0 (07-Nov-2022)\n====================\n- Major change in distribution system\n  - Now needs import directive `import scienceplots`\n- Fix not using raw string in `plot-example.py`\n- Update README\n\nv1.0.9 (16-Sep-2021)\n====================\n\n- `notebook`:\n   - make Latex fonts sans-serif\n- Fix bug with Latex packages:\n   - e.g., `\\usepackage{amsmath, amssymb, sfmath}` --> `\\usepackage{amsmath} \\usepackage{amssymb} \\usepackage{sfmath}`\n- Add `pyproject.toml` file (see PEP 517/518)\n- Minor updates to README, including adding more papers to publication list\n\nv1.0.8 (02-Jun-2021)\n====================\n\n- ``nature``:\n   - Added style for Nature articles\n   - Uses sans-serif fonts\n- ``latex-sans``:\n   - Added style for using LaTeX with sans-serif fonts\n- ``std-colors``:\n   - Added style to recover the standard color cycle of the SciencePlots package\n   - For example, if you use ``plt.style.use([\"science\", \"ieeee\"]). The figure will use the ``\"ieee\"`` color cycle. To revert to the standard color cycle, you can use ``plt.style.use([\"science\", \"ieee\", \"std-colors\"])``.\n- ``science``:\n   - Added ``amssymb`` to LaTeX preamble\n- ``grid``: \n   - Set ``axes.axisbelow`` to True\n- Minor updates to README\n\nv1.0.7 (28-Feb-2021)\n====================\n\n- Add support for CJK fonts:\n   - see README for details\n- Add example of CJK fonts:\n   - see Fig 14a, Fig 14b, Fig 14c, Fig 14d\n- ``science`` style:\n   - use default serif font\n- ``ieee`` style: \n   - use Times font\n- ``grid`` style:\n   - change line style to '--'\n- README:\n   - add badge for Zenodo reference\n   - add info on citing SciencePlots\n   - add info on using Times New Roman\n   - add more papers using SciencePlots\n   \nv1.0.6 (19-Oct-2020)\n====================\n\n- The main reason for this release is to trigger Zenodo:\n   - I've added SciencePlots to Zenodo (an archiving service).\n   - It only archives after new releases, so I will make a trivial version bump.\n- Trivial changes to README:\n   - Added installation info for Google Colab, Jupyter Notebooks, etc.\n   - Added PyPI badge\n   - Added more papers to list\n\nv1.0.5 (8-Sep-2020)\n===================\n\n- New color blind safe color cycles (``high-contrast.mplstyle``, ``light.mplstyle``). Taken from [Paul Tol's website](https://personal.sron.nl/~pault/).\n- Fixed color order in ``muted.mplstyle``, ``vibrant.mplstyle``, and ``bright.mplstyle``.\n\nv1.0.4 (14-Aug-2020)\n====================\n\n- New style: ``grid``\n   - this will add grid lines\n- ``science`` style:\n   - use a serif font with mathtex\n- README:\n   - Add example of the ``notebook`` style\n   - Add FAQ\n   - Update publications\n   - Other misc changes...\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2018 John Garrett\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0244140625,
          "content": "global-include *.mplstyle"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.8447265625,
          "content": "Science Plots\n=============\n\n<p align=\"left\">\n    <table>\n        <tr>\n            <td style=\"text-align: center;\">PyPI version</td>\n            <td style=\"text-align: center;\">\n                <a href=\"https://badge.fury.io/py/SciencePlots\">\n                    <img src=\"https://badge.fury.io/py/SciencePlots.svg\" alt=\"PyPI version\" height=\"18\"/>\n                </a>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"text-align: center;\">conda-forge version</td>\n            <td style=\"text-align: center;\">\n                <a href=\"https://anaconda.org/conda-forge/scienceplots\">\n                    <img src=\"https://anaconda.org/conda-forge/scienceplots/badges/version.svg\" alt=\"conda-forge version\" height=\"18\"/>\n                </a>\n            </td>\n        </tr>\n        <tr>\n            <td style=\"text-align: center;\">DOI</td>\n            <td style=\"text-align: center;\">\n                <a href=\"https://zenodo.org/badge/latestdoi/144605189\">\n                    <img src=\"https://zenodo.org/badge/144605189.svg\" alt=\"DOI\" height=\"18\"/>\n                </a>\n            </td>\n        </tr>\n    </table>\n</p>\n\n> **Warning**\n> : As of version 2.0.0, you need to add `import scienceplots` before setting the style (`plt.style.use('science')`).\n\n*Matplotlib styles for scientific figures*\n\nThis repo has Matplotlib styles to format your figures for scientific papers, presentations and theses.\n\n<p align=\"center\">\n<img src=\"https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig01a.jpg\" width=\"500\">\n</p>\n\nYou can find [the full gallery of included styles here](https://github.com/garrettj403/SciencePlots/wiki/Gallery).\n\nGetting Started\n---------------\n\nThe easiest way to install SciencePlots is by using `pip`:\n\n```bash\n# to install the latest release (from PyPI)\npip install SciencePlots\n\n# to install the latest release (using Conda)\nconda install -c conda-forge scienceplots\n\n# to install the latest commit (from GitHub)\npip install git+https://github.com/garrettj403/SciencePlots\n\n# to clone and install from a local copy\ngit clone https://github.com/garrettj403/SciencePlots.git\ncd SciencePlots\npip install -e .\n```\n\nFrom version `v1.1.0` on, `import scienceplots` is needed on top of your scripts so Matplotlib can make use of the styles.\n\n**Notes:** \n- SciencePlots requires Latex ([see Latex installation instructions](https://github.com/garrettj403/SciencePlots/wiki/FAQ#installing-latex)). \n- If you would like to use CJK fonts, you will need to install these font separately ([see CJK font installation instructions](https://github.com/garrettj403/SciencePlots/wiki/FAQ#installing-cjk-fonts)).\n\nPlease see the [FAQ](https://github.com/garrettj403/SciencePlots/wiki/FAQ) for more information and troubleshooting.\n\nUsing the Styles\n----------------\n\n``\"science\"`` is the primary style in this repo. Whenever you want to use it, simply add the following to the top of your python script:\n\n```python\nimport matplotlib.pyplot as plt\nimport scienceplots\n\nplt.style.use('science')\n```\n\nYou can also combine multiple styles together by:\n\n```python\nplt.style.use(['science','ieee'])\n```\n\nIn this case, the ``ieee`` style will override some of the parameters from the ``science`` style in order to configure the plot for IEEE papers (column width, fontsizes, etc.).\n\nTo use any of the styles temporarily, you can use:\n\n```python\nwith plt.style.context('science'):\n    plt.figure()\n    plt.plot(x, y)\n    plt.show()\n```\n\nExamples\n--------\n\nThe basic ``science`` style is shown below:\n\n<img src=\"https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig01a.jpg\" width=\"500\">\n\nIt can be cascaded with other styles to fine-tune the appearance. For example, the ``science`` + ``notebook`` styles (intended for Jupyter notebooks):\n\n<img src=\"https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig10.jpg\" width=\"500\">\n\nPlease see [the project Wiki](https://github.com/garrettj403/SciencePlots/wiki/Gallery) for a full list of available styles.\n\nSpecific Styles for Academic Journals\n-------------------------------------\n\nThe ``science`` + ``ieee`` styles for IEEE papers:\n\n<img src=\"https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig02a.jpg\" width=\"500\">\n\n   - IEEE requires figures to be readable when printed in black and white. The ``ieee`` style also sets the figure width to fit within one column of an IEEE paper.\n\nThe ``science`` + ``nature`` styles for Nature articles:\n\n<img src=\"https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig02c.jpg\" width=\"500\">\n\n   - Nature recommends sans-serif fonts.\n\nOther languages\n---------------\n\nSciencePlots currently supports:\n * [Traditional Chinese](https://github.com/garrettj403/SciencePlots/wiki/Gallery#traditional-chinese)\n * [Simplified Chinese](https://github.com/garrettj403/SciencePlots/wiki/Gallery#simplified-chinese)\n * [Japanese](https://github.com/garrettj403/SciencePlots/wiki/Gallery#japanese)\n * [Korean](https://github.com/garrettj403/SciencePlots/wiki/Gallery#korean)\n * [Russian](https://github.com/garrettj403/SciencePlots/wiki/Gallery#russian)\n * [Turkish](https://github.com/garrettj403/SciencePlots/wiki/Gallery#turkish)\n\nExample: Traditional Chinese (`science` + `no-latex` + `cjk-tc-font`):\n\n<img src=\"https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig14a.jpg\" width=\"500\">\n\nSee the [FAQ](https://github.com/garrettj403/SciencePlots/wiki/FAQ#installing-cjk-fonts) for information on installing CJK fonts.\n\nOther color cycles\n------------------\n\nSciencePlots comes with a variety of different color cycles. For a full list, [see the project Wiki](https://github.com/garrettj403/SciencePlots/wiki/Gallery#color-cycles). Two examples are shown below.\n\nThe ``bright`` color cycle (color blind safe):\n\n<img src=\"https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig06.jpg\" width=\"500\">\n\nThe ``high-vis`` color cycle:\n\n<img src=\"https://github.com/garrettj403/SciencePlots/raw/master/examples/figures/fig04.jpg\" width=\"500\">\n\nHelp and Contributing\n---------------------\n\nPlease feel free to contribute to the SciencePlots repo! For example, it would be good to add new styles for different journals and add new color cycles. Before starting a new style or making any changes, please create an issue through the [GitHub issue tracker](https://github.com/garrettj403/SciencePlots/issues). That way we can discuss if the changes are necessary and the best approach.\n\nIf you need any help with SciencePlots, please first check the [FAQ](https://github.com/garrettj403/SciencePlots/wiki/FAQ) and search through the [previous GitHub issues](https://github.com/garrettj403/SciencePlots/issues). If you can't find an answer, create a new issue through the [GitHub issue tracker](https://github.com/garrettj403/SciencePlots/issues).\n\nYou can checkout [Matplotlib's documentation](https://matplotlib.org/tutorials/introductory/customizing.html) for more information on plotting settings.\n\nFAQ\n---\n\nYou can find [the FAQ in the project Wiki.](https://github.com/garrettj403/SciencePlots/wiki/FAQ)\n\nSciencePlots in Academic Papers\n-------------------------------\n\nThe following papers use ``SciencePlots``:\n\n- J. D. Garrett, C.-Y. E. Tong, L. Zeng, T.-J. Chen and M.-J. Wang, [\"A 345 GHz Sideband-Separating Receiver Prototype with Ultra-Wide Instantaneous Bandwidth,\"](https://ieeexplore.ieee.org/document/10089556) *IEEE Trans. THz Sci. Technol.*, vol. 13, no. 3, pp. 237-245, Mar. 2023.\n\n- J. Garrett, B.-K. Tan, C. Chaumont, F. Boussaha, and G. Yassin, [\"A 230-GHz Endfire SIS Mixer With Near Quantum-Limited Performance,\"](https://ieeexplore.ieee.org/document/9833810) *IEEE Microw. Wirel. Compon. Lett.*, Jul. 2022. ([open access](https://ora.ox.ac.uk/objects/uuid:59a100bf-c997-499a-be20-01fc66fffe2b))\n\n- J. Garrett, and E. Tong, [\"Measuring Cryogenic Waveguide Loss in the Terahertz Regime,\"](https://ieeexplore.ieee.org/document/9727077) *IEEE Trans. THz Sci. Technol.*, vol. 12, no. 3, pp. 293-299, May 2022.\n\n- Y. Liu, X. Liu, and Y. Sun, [\"QGrain: An open-source and easy-to-use software for the comprehensive analysis of grain size distributions\"](https://doi.org/10.1016/j.sedgeo.2021.105980), *Sedimentary Geology*, vol. 423, 105980, Aug. 2021.\n\n- M. Gasanov, *et al.*, [\"A New Multi-objective Approach to Optimize Irrigation Using a Crop Simulation Model and Weather History\"](https://link.springer.com/chapter/10.1007/978-3-030-77970-2_7) in *Computational Science–ICCS 2021*, Krakow, Poland, Jun. 2021, pp. 75-88. ([open access](https://www.researchgate.net/profile/Sergey-Matveev-5/publication/352285985_A_New_Multi-objective_Approach_to_Optimize_Irrigation_Using_a_Crop_Simulation_Model_and_Weather_History/links/60e74b88b8c0d5588ce2da07/A-New-Multi-objective-Approach-to-Optimize-Irrigation-Using-a-Crop-Simulation-Model-and-Weather-History.pdf))\n\n- J. Garrett, and E. Tong, [\"A Dispersion-Compensated Algorithm for the Analysis of Electromagnetic Waveguides,\"](https://ieeexplore.ieee.org/document/9447194) *IEEE Signal Process. Lett.*, vol. 28, pp. 1175-1179, Jun. 2021.\n\n- G. Jegannathan, *et al.*, [\"Current-Assisted SPAD with Improved p-n Junction and Enhanced NIR Performance\"](https://www.mdpi.com/1424-8220/20/24/7105), *Sensors*, Dec 2020. ([open access](https://www.mdpi.com/1424-8220/20/24/7105))\n\n- H. Tian, *et al.*, [\"ivis Dimensionality Reduction Framework for Biomacromolecular Simulations\"](https://pubs.acs.org/doi/abs/10.1021/acs.jcim.0c00485), *J. Chem. Inf. Model.*, Aug 2020. ([open access](https://arxiv.org/pdf/2004.10718.pdf))\n\n- P. Stoltz, *et al.*, [\"A new simple algorithm for space charge limited emission,\"](https://aip.scitation.org/doi/10.1063/5.0020781) *Phys. Plasmas*, vol. 27, no. 9, pp. 093103, Sep. 2020. ([open access](https://aip.scitation.org/doi/10.1063/5.0020781))\n\n- J. Garrett, *et al.*, [\"A Nonlinear Transmission Line Model for Simulating Distributed SIS Frequency Multipliers,\"](https://ieeexplore.ieee.org/abstract/document/9050728)  *IEEE Trans. THz Sci. Technol.*, vol. 10, no. 3, pp. 246-255, May 2020. ([open access](https://ora.ox.ac.uk/objects/uuid:5ca31c2c-a984-462c-b21a-3fe16eee0d9b/download_file?safe_filename=XXXX_final_JohnGarrett.pdf&type_of_work=Journal+article))\n\n- J. Garrett, *et al.*, [\"Simulating the Behavior of a 230 GHz SIS Mixer Using Multi-Tone Spectral Domain Analysis,\"](https://ieeexplore.ieee.org/document/8822760/) *IEEE Trans. THz Sci. Technol.*, vol. 9, no. 9, pp. 540-548, Nov. 2019. ([open access](https://ora.ox.ac.uk/objects/uuid:0fd4537d-258c-454a-bbfb-09b1bcd88d49/download_file?file_format=pdf&safe_filename=XXXX_final.pdf&type_of_work=Journal+article))\n\n- J. Garrett, *et al.*, [\"A Compact and Easy to Fabricate E-plane Waveguide Bend,\"](https://ieeexplore.ieee.org/document/8760521) *IEEE Microw. Wireless Compon. Lett.*, vol. 29, no. 8, pp. 529-531, Aug. 2019. ([open access](https://ora.ox.ac.uk/objects/uuid:496855f9-be2a-47cd-b498-1753d8033f50/download_file?file_format=pdf&safe_filename=Waveguide_Bend__IEEE_MWCL_.pdf&type_of_work=Journal+article))\n\n- J. Garrett, [\"A 230 GHz Focal Plane Array Using a Wide IF Bandwidth SIS Receiver,\"](https://ora.ox.ac.uk/objects/uuid:d47fbf3b-1cf3-4e58-be97-767b9893066e/download_file?file_format=pdf&safe_filename=GarrettJ_DPhilThesis.pdf&type_of_work=Thesis) DPhil thesis, University of Oxford, Oxford, UK, 2018. ([open access](https://ora.ox.ac.uk/objects/uuid:d47fbf3b-1cf3-4e58-be97-767b9893066e/download_file?file_format=pdf&safe_filename=GarrettJ_DPhilThesis.pdf&type_of_work=Thesis))\n\nIf you use ``SciencePlots`` in your paper/thesis, feel free to add it to the list!\n\nCiting SciencePlots\n-------------------\n\nYou don't have to cite SciencePlots if you use it but it's nice if you do:\n\n    @article{SciencePlots,\n      author       = {John D. Garrett},\n      title        = {{garrettj403/SciencePlots}},\n      month        = sep,\n      year         = 2021,\n      publisher    = {Zenodo},\n      version      = {1.0.9},\n      doi          = {10.5281/zenodo.4106649},\n      url          = {http://doi.org/10.5281/zenodo.4106649}\n    }\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.0537109375,
          "content": "[build-system]\nrequires = [\"setuptools\", \"matplotlib\"]\n"
        },
        {
          "name": "scienceplots",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.314453125,
          "content": "\"\"\"Install SciencePlots.\n\nThis script (setup.py) will install the SciencePlots package.\nIn order to expose .mplstyle files to matplotlib, \"import scienceplots\"\nmust be called before plt.style.use(...).\n\"\"\"\n\nimport os\nfrom setuptools import setup\n\n# Get description from README\nroot = os.path.abspath(os.path.dirname(__file__))\nwith open(os.path.join(root, 'README.md'), 'r', encoding='utf-8') as f:\n    long_description = f.read()\n\nsetup(\n    name='SciencePlots',\n    version='2.1.1',\n    author=\"John Garrett\",\n    author_email=\"garrettj403@gmail.com\",\n    maintainer=\"Echedey Luis\",\n    maintainer_email=\"echelual@gmail.com\",\n    description=\"Format Matplotlib for scientific plotting\",\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    license=\"MIT\",\n    url=\"https://github.com/garrettj403/SciencePlots/\",\n\n    install_requires=['matplotlib'],\n    packages=[\"scienceplots\"],\n    package_data={\n      'scienceplots': ['styles/**/*.mplstyle'],\n    },\n\n    classifiers=[\n        'Framework :: Matplotlib', \n        'License :: OSI Approved :: MIT License',\n        'Programming Language :: Python :: 3'\n    ],\n    keywords=[\n        \"matplotlib-style-sheets\",\n        \"matplotlib-figures\",\n        \"scientific-papers\",\n        \"thesis-template\",\n        \"matplotlib-styles\",\n        \"python\"\n    ],\n)\n"
        }
      ]
    }
  ]
}