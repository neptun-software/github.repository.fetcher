{
  "metadata": {
    "timestamp": 1736560540681,
    "page": 147,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xonsh/xonsh",
      "stars": 8499,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".authors.yml",
          "type": "blob",
          "size": 41.2470703125,
          "content": "- name: Randy Syring\n  email: randy@thesyrings.us\n  num_commits: 4\n  first_commit: 2016-04-01 00:16:37\n  github: rsyring\n- name: vaaaaanquish\n  email: 6syun9@gmail.com\n  aliases:\n  - '@vaaaaanquish'\n  - vaaaaanquish\n  - 6syun9\n  num_commits: 21\n  first_commit: 2018-07-17 01:14:04\n  github: vaaaaanquish\n- name: Dan Allan\n  email: dallan@bnl.gov\n  num_commits: 1\n  first_commit: 2018-12-14 20:04:25\n  github: danielballan\n- name: Lucas Inojosa\n  email: lucas.inojosa@gmail.com\n  alternate_emails:\n  - linojosa@lalinojosa.home\n  num_commits: 4\n  first_commit: 2016-04-23 15:08:17\n  github: lucasicf\n- name: Jamie Bliss\n  email: jamie@ivylav.es\n  aliases:\n  - James Bliss\n  alternate_emails:\n  - jamie@ivyleav.es\n  - jamie.bliss@ilq.com\n  - jbliss@nextgenerationenrollment.com\n  - astronouth7303@gmail.com\n  num_commits: 216\n  first_commit: 2016-07-20 14:05:08\n  github: astronouth7303\n- name: Cody Scott\n  email: cody.j.b.scott@gmail.com\n  num_commits: 6\n  first_commit: 2016-02-20 10:43:27\n  github: Siecje\n- name: Mark Wiebe\n  email: mwwiebe@gmail.com\n  num_commits: 2\n  first_commit: 2016-05-22 21:28:53\n- name: adam j hartz\n  email: adam@smatz.net\n  num_commits: 4\n  first_commit: 2016-05-19 14:04:42\n  github: adqm\n  alternate_emails:\n  - hz@mit.edu\n- name: Travis Shirk\n  email: travis@pobox.com\n  num_commits: 24\n  first_commit: 2015-11-13 23:50:50\n  github: nicfit\n- name: Gil Forsyth\n  email: gilforsyth@gmail.com\n  alternate_emails:\n  - gforsyth@users.noreply.github.com\n  - Gilbert.Forsyth@capitalone.com\n  - gforsyth@gwu.edu\n  - gil@forsyth.dev\n  num_commits: 680\n  first_commit: 2015-10-19 16:04:32\n  github: gforsyth\n- name: Morten Enemark Lund\n  email: melund@gmail.com\n  num_commits: 522\n  first_commit: 2015-07-10 07:54:10\n  github: melund\n- name: Ned Letcher\n  email: nletcher@gmail.com\n  num_commits: 1\n  first_commit: 2016-05-19 23:05:34\n  github: ned2\n- name: Jan Schulz\n  email: jasc@gmx.net\n  num_commits: 3\n  first_commit: 2016-07-04 12:33:45\n  github: janschulz\n- name: Zach Crownover\n  email: zachary.crownover@gmail.com\n  github: strangelittlemonkey\n  num_commits: 1\n  first_commit: 2018-09-25 02:47:30\n- name: Nathan Hoad\n  email: nathan@getoffmalawn.com\n  num_commits: 2\n  first_commit: 2017-04-19 04:47:15\n- name: Konstantin Molchanov\n  email: kmolchanov@machinezone.com\n  alternate_emails:\n  - moigagoo@live.com\n  num_commits: 27\n  first_commit: 2016-02-11 03:47:16\n  github: moigagoo\n- name: BlahGeek\n  email: i@BlahGeek.com\n  num_commits: 83\n  first_commit: 2016-08-20 22:07:18\n  github: blahgeek\n- name: Nickolay Bukreyev\n  email: buknik95@yandex.ru\n  num_commits: 4\n  first_commit: 2016-07-30 07:34:31\n  github: SirNickolas\n- name: Miguel de Val-Borro\n  email: miguel@archlinux.net\n  num_commits: 1\n  first_commit: 2015-11-08 22:32:28\n  github: migueldvb\n- name: Andrew Hundt\n  email: ATHundt@gmail.com\n  num_commits: 12\n  first_commit: 2017-08-13 21:48:26\n  github: ahundt\n- name: Alessio Bogon\n  email: youtux@gmail.com\n  alternate_emails:\n  - youtux@users.noreply.github.com\n  num_commits: 7\n  first_commit: 2016-06-17 16:16:16\n  github: youtux\n- name: Konstantinos Tsakiltzidis\n  email: laerusk@gmail.com\n  aliases:\n  - laerus\n  num_commits: 339\n  first_commit: 2016-06-17 07:08:58\n  github: Carreau\n- name: Hirotomo Moriwaki\n  email: hirotomo.moriwaki@gmail.com\n  num_commits: 1\n  first_commit: 2018-11-09 00:14:50\n  github: philopon\n- name: Phil Elson\n  email: pelson.pub@gmail.com\n  num_commits: 1\n  first_commit: 2016-06-10 00:39:38\n  github: pelson\n- name: Samuel Dion-Girardeau\n  email: samuel.diongirardeau@gmail.com\n  num_commits: 3\n  first_commit: 2018-01-13 14:24:46\n  github: samueldg\n- name: Burak Yiğit Kaya\n  email: ben@byk.im\n  aliases:\n  - Burak Yigit Kaya\n  num_commits: 40\n  first_commit: 2015-06-18 04:00:34\n  github: BYK\n- name: Guillaume Leclerc\n  email: guillaume.leclerc@epfl.ch\n  alternate_emails:\n  - guillaume.leclerc.work@gmail.com\n  num_commits: 26\n  first_commit: 2016-05-12 12:16:15\n  github: GuillaumeLeclerc\n- name: Sagar Tewari\n  email: sagartewari01@gmail.com\n  alternate_emails:\n  - sagartewariym@yahoo.com\n  num_commits: 33\n  first_commit: 2018-06-05 10:51:44\n  github: sagartewari01\n- name: JuanPablo\n  email: jpabloaj@gmail.com\n  num_commits: 5\n  first_commit: 2015-03-15 22:05:07\n  github: juanpabloaj\n- name: Alexey\n  email: forestbiiird@gmail.com\n  num_commits: 4\n  first_commit: 2018-04-06 03:12:52\n  github: WouldYouKindly\n- name: Alexandre Ferland\n  email: aferlandqc@gmail.com\n  aliases:\n  - admiralobvious\n  num_commits: 4\n  first_commit: 2015-03-16 23:33:04\n- name: K.-Michael Aye\n  email: kmichael.aye@gmail.com\n  alternate_emails:\n  - michaelaye@users.noreply.github.com\n  num_commits: 8\n  first_commit: 2015-07-25 03:46:15\n  github: michaelaye\n- name: Michael Droettboom\n  email: mdboom@gmail.com\n  num_commits: 3\n  first_commit: 2015-08-24 16:32:54\n  github: mdboom\n- name: Erin Call\n  email: erincall@github.com\n  num_commits: 1\n  first_commit: 2016-06-01 02:20:14\n  github: ErinCall\n- name: Yohei Tamura\n  email: tamuhey@gmail.com\n  num_commits: 7\n  first_commit: 2018-12-20 09:42:36\n  github: tamuhey\n- name: Eric Dill\n  email: edill@bnl.gov\n  num_commits: 2\n  first_commit: 2016-07-05 20:21:59\n  github: ericdill\n- name: Trevor Bekolay\n  email: tbekolay@gmail.com\n  num_commits: 1\n  first_commit: 2016-06-11 13:11:13\n  github: tbekolay\n- name: Matthias Bussonnier\n  email: bussonniermatthias@gmail.com\n  num_commits: 38\n  first_commit: 2015-11-27 03:58:02\n  github: Carreau\n- name: Jonathan Slenders\n  email: jonathan@slenders.be\n  num_commits: 12\n  first_commit: 2015-07-30 16:26:58\n  github: jonathanslenders\n- name: guillearch\n  email: gcastellano@protonmail.com\n  num_commits: 3\n  first_commit: 2018-10-15 17:06:48\n  github: guillearch\n- name: VHarisop\n  email: the.machine.headed@gmail.com\n  num_commits: 18\n  first_commit: 2016-06-04 22:48:00\n  github: VHarisop\n- name: javValverde\n  email: jav.valve@gmail.com\n  num_commits: 3\n  first_commit: 2015-03-25 15:10:19\n  github: javValverde\n- name: Bernardas Ališauskas\n  email: bernardas.alisauskas@gmail.com\n  aliases:\n  - Bernardas\n  num_commits: 20\n  first_commit: 2016-06-27 09:39:26\n  github: Granitosaurus\n- name: Ollie Terrance\n  email: ollie.terrance@live.co.uk\n  num_commits: 5\n  first_commit: 2016-05-26 08:04:09\n- name: neruok\n  email: codywentz@gmail.com\n  alternate_emails:\n  - 6155000+neruok@users.noreply.github.com\n  num_commits: 2\n  first_commit: 2017-12-19 10:30:09\n  github: neruok\n- name: Gordon Ball\n  email: gordon@chronitis.net\n  num_commits: 30\n  first_commit: 2016-10-17 09:17:05\n  github: chronitis\n- name: Tzu-ping Chung\n  email: uranusjr@gmail.com\n  num_commits: 1\n  first_commit: 2015-11-04 04:40:01\n  github: uranusjr\n- name: Joel Gerber\n  email: joel@grrbrr.ca\n  num_commits: 23\n  first_commit: 2017-06-07 11:51:06\n  github: Jitsusama\n- name: Domenic Barbuzzi\n  email: dbarbuzzi@gmail.com\n  num_commits: 2\n  first_commit: 2018-10-15 15:53:28\n  github: dbarbuzzi\n- name: Andrew Toskin\n  email: andrew@tosk.in\n  num_commits: 1\n  first_commit: 2016-05-18 19:51:37\n  github: terrycloth\n- name: Shahin\n  email: me@5hah.in\n  num_commits: 3\n  first_commit: 2017-05-18 05:58:43\n  github: shahinism\n- name: Jason R. Coombs\n  email: jaraco@jaraco.com\n  num_commits: 16\n  first_commit: 2018-04-23 15:25:29\n  github: jaraco\n- name: torgny\n  email: torgny.andersson@gmail.com\n  num_commits: 1\n  first_commit: 2015-03-11 18:12:18\n- name: Maximilian Köhl\n  email: mail@koehlma.de\n  num_commits: 7\n  first_commit: 2017-12-24 22:32:27\n  github: koehlma\n- name: Marvin Steadfast\n  email: marvin@xsteadfastx.org\n  num_commits: 4\n  first_commit: 2016-07-20 09:16:25\n  github: xsteadfastx\n- name: halloleo\n  email: git@halloleo.dot.hailmail.dot.net\n  alternate_emails:\n  - halloleo@users.noreply.github.com\n  num_commits: 8\n  first_commit: 2018-11-06 00:00:27\n  github: halloleo\n- name: Aaron Meurer\n  email: asmeurer@gmail.com\n  num_commits: 4\n  first_commit: 2015-07-15 13:53:57\n  github: asmeurer\n- name: metamind\n  email: metamind@Metafoot\n  num_commits: 2\n  first_commit: 2016-07-24 13:26:43\n  github: laerus\n- name: Will Wykeham\n  email: will@wykeham.net\n  num_commits: 8\n  first_commit: 2016-05-12 11:57:54\n- name: William Woodall\n  email: william@osrfoundation.org\n  num_commits: 1\n  first_commit: 2016-06-04 21:51:43\n- name: Rob Brewer\n  email: rwb123@gmail.com\n  aliases:\n  - Robert W. Brewer\n  num_commits: 35\n  first_commit: 2015-05-08 01:14:26\n  github: scopatz\n- name: Matteo Bertini\n  email: matteo@naufraghi.net\n  num_commits: 4\n  first_commit: 2015-03-16 12:19:21\n- name: Jake Hedman\n  email: jake@hedman.email\n  num_commits: 6\n  first_commit: 2018-10-29 07:10:17\n  github: JakeHedman\n- name: Alexander Sosedkin\n  email: monk@unboiled.info\n  num_commits: 7\n  first_commit: 2016-09-24 02:35:09\n  github: t184256\n- name: Klaus Alexander Seistrup\n  email: klaus@seistrup.dk\n  alternate_emails:\n  - kseistrup@users.noreply.github.com\n  num_commits: 47\n  first_commit: 2015-07-28 13:29:31\n  github: kseistrup\n- name: Marcel Bollmann\n  email: bollmann@linguistics.rub.de\n  num_commits: 5\n  first_commit: 2015-03-13 20:47:45\n  github: mbollmann\n- name: mdraw\n  email: mdraw.gh@gmail.com\n  num_commits: 5\n  first_commit: 2015-09-30 19:57:53\n  github: mdraw\n- name: ariel faigon\n  email: github.2009@yendor.com\n  num_commits: 1\n  first_commit: 2016-05-29 20:14:33\n  github: arielf\n- name: Hugo Wang\n  email: w@mitnk.com\n  num_commits: 165\n  first_commit: 2016-06-04 22:56:42\n  github: mitnk\n- name: David Strobach\n  email: lalochcz@gmail.com\n  aliases:\n  - laloch\n  num_commits: 164\n  first_commit: 2018-07-26 13:51:50\n  github: laloch\n- name: Nico Lehmann\n  email: nlehmann@dcc.uchile.cl\n  num_commits: 3\n  first_commit: 2017-10-28 02:58:25\n  github: nilehmann\n- name: traverseda\n  email: traverse.da@gmail.com\n  num_commits: 6\n  first_commit: 2017-12-04 10:20:53\n- name: Jean-Benoist Leger\n  email: jb@leger.tf\n  alternate_emails:\n  - jbleger@gertrude\n  - jbleger@hds.utc.fr\n  num_commits: 53\n  first_commit: 2017-01-01 19:27:34\n- name: Nigel Tea\n  email: nigelbtea@gmail.com\n  num_commits: 1\n  first_commit: 2016-09-28 08:32:45\n  github: nigeltea\n- name: JohnLunzer\n  email: lunzer@gmail.com\n  aliases:\n  - jlunz\n  alternate_emails:\n  - lunz8748@usroc1miniwaas.corp.exelisinc.com\n  num_commits: 18\n  first_commit: 2016-05-25 15:01:30\n- name: Qiushi Pan\n  email: qiu.gits@gmail.com\n  num_commits: 2\n  first_commit: 2018-11-24 15:18:47\n  github: qqhann\n- name: Mattias Ugelvik\n  email: uglemat@gmail.com\n  num_commits: 5\n  first_commit: 2015-03-19 15:18:02\n- name: Frank Sachsenheim\n  email: funkyfuture@riseup.net\n  alternate_emails:\n  - funkyfuture@users.noreply.github.com\n  num_commits: 14\n  first_commit: 2016-05-15 06:55:38\n  github: funkyfuture\n- name: Anthony Scopatz\n  email: scopatz@gmail.com\n  num_commits: 2661\n  first_commit: 2015-01-21 17:04:13\n  github: scopatz\n- name: anatoly techtonik\n  email: techtonik@gmail.com\n  num_commits: 4\n  first_commit: 2019-01-22 14:02:27\n  github: techtonik\n- name: Mark Szumowski\n  email: mark@szumowski.net\n  github: mszu\n  num_commits: 1\n  first_commit: 2016-06-08 22:47:07\n- name: Ryan Gonzalez\n  email: rymg19@gmail.com\n  num_commits: 5\n  first_commit: 2016-05-20 15:42:40\n  github: kirbyfan64\n- name: The Gitter Badger\n  email: badger@gitter.im\n  num_commits: 1\n  first_commit: 2016-03-07 11:48:24\n- name: Cameron Bates\n  email: cameron.r.bates@gmail.com\n  num_commits: 1\n  first_commit: 2015-03-10 19:40:48\n  github: crbates\n- name: Kermit Alexander II\n  email: tuxfreak@tuxfamily.org\n  num_commits: 1\n  first_commit: 2016-06-17 09:47:18\n  github: DangerOnTheRanger\n- name: Richard Kim\n  email: emacs18@gmail.com\n  num_commits: 1\n  first_commit: 2015-11-08 15:56:15\n  github: emacs18\n- name: Brian S. Corbin\n  email: brian.corbin@pokitdok.com\n  num_commits: 1\n  first_commit: 2015-03-18 16:53:25\n- name: Oleh Prypin\n  email: oleh@pryp.in\n  num_commits: 8\n  first_commit: 2016-07-01 03:14:13\n  github: BlaXpirit\n- name: Erez Shinan\n  email: erezshin+git@gmail.com\n  num_commits: 1\n  first_commit: 2018-10-15 01:04:41\n  github: erezsh\n- name: Paul Goelz\n  email: s8pagoel@stud.uni-saarland.de\n  num_commits: 18\n  first_commit: 2016-06-12 17:27:52\n  github: pgoelz\n- name: Nakada Takumi\n  email: usrNeko@kerorin.local\n  num_commits: 1\n  first_commit: 2017-02-24 19:50:25\n  github: harukaeru\n- name: Sebastian Wagner\n  email: sebix@sebix.at\n  num_commits: 3\n  first_commit: 2017-12-04 14:42:51\n  github: sebix\n- name: Ross Nomann\n  email: rossnomann@protonmail.com\n  num_commits: 1\n  first_commit: 2017-06-22 16:19:40\n  github: rossnomann\n- name: eyalzek\n  email: eyal.ez@gmail.com\n  num_commits: 1\n  first_commit: 2015-03-19 11:39:10\n  github: eyalzek\n- name: josh\n  email: josh.sarver@gmail.com\n  num_commits: 2\n  first_commit: 2015-10-01 04:21:57\n  github: jsarver\n- name: AaronV77\n  email: aaronvaloroso77@gmail.com\n  num_commits: 4\n  first_commit: 2018-07-14 14:21:52\n  github: AaronV77\n- name: Kurtis Rader\n  email: krader@skepticism.us\n  num_commits: 14\n  first_commit: 2015-11-05 22:35:41\n  github: krader1961\n- name: Andre Weltsch\n  email: andre.t.weltsch@campus.tu-berlin.de\n  alternate_emails:\n  - andre@weltsch.de\n  num_commits: 6\n  first_commit: 2017-01-16 16:38:45\n  github: aweltsch\n- name: yuqing\n  email: waywardson@126.com\n  alternate_emails:\n  - yuqing@cmcm.com\n  num_commits: 3\n  first_commit: 2016-05-13 02:42:19\n  github: tsingakbar\n- name: Pedro Rodriguez\n  email: ski.rodriguez@gmail.com\n  num_commits: 1\n  first_commit: 2017-01-26 13:00:22\n  github: EntilZha\n- name: Jeremy Donahue\n  email: jeremydonahue@gmail.com\n  num_commits: 6\n  first_commit: 2016-06-08 21:43:39\n- name: Justin Moen\n  email: jamoen7@gmail.com\n  num_commits: 12\n  first_commit: 2016-07-15 17:42:54\n  github: stockninja\n- name: TobalJackson\n  email: Tobaljackson@gmail.com\n  num_commits: 2\n  first_commit: 2016-05-13 11:14:49\n  github: TobalJackson\n- name: Eric Harris\n  email: ericmharris@gmail.com\n  num_commits: 1\n  first_commit: 2016-08-04 13:37:26\n  github: ericmharris\n- name: Erick Tucto\n  email: erick.tucto@outlook.com\n  num_commits: 4\n  first_commit: 2018-12-12 18:26:28\n  github: ErickTucto\n- name: goodboy\n  email: tgoodlet@users.noreply.github.com\n  num_commits: 0\n  first_commit: 2018-02-11 23:39:33\n- name: Greg Thole\n  email: gthole@gmail.com\n  num_commits: 2\n  first_commit: 2015-05-13 21:51:53\n- name: Min RK\n  email: benjaminrk@gmail.com\n  num_commits: 2\n  first_commit: 2016-01-14 09:40:22\n- name: Raphael Gaschignard\n  email: raphael@rtpg.co\n  num_commits: 6\n  first_commit: 2016-08-23 11:09:57\n  github: rtpg\n- name: Tyler Goodlet\n  email: tgoodlet@gmail.com\n  num_commits: 4\n  first_commit: 2017-01-05 18:15:39\n  github: tgoodlet\n- name: Nicolas Avrutin\n  email: rasputin@google.com\n  num_commits: 2\n  first_commit: 2016-06-05 16:22:08\n  github: nicolasavru\n- name: Stephan Fitzpatrick\n  email: knowsuchagency@gmail.com\n  num_commits: 10\n  first_commit: 2018-08-15 17:33:55\n  github: knowsuchagency\n- name: Kevin Yokley\n  email: kyokley2@gmail.com\n  num_commits: 2\n  first_commit: 2016-05-31 16:39:56\n  github: kyokley\n- name: Rahiel Kasim\n  email: rahielkasim@gmail.com\n  num_commits: 3\n  first_commit: 2016-06-05 15:00:56\n  github: rahiel\n- name: Austin Bingham\n  email: austin.bingham@gmail.com\n  num_commits: 1\n  first_commit: 2015-03-10 07:31:32\n- name: jlunz\n  email: lunz8748@ak.(none)\n  num_commits: 1\n  first_commit: 2016-06-13 15:49:25\n- name: David Gros\n  email: dngros@live.com\n  num_commits: 5\n  first_commit: 2018-07-01 02:51:52\n  github: DNGros\n- name: dragon788\n  email: dragon788@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2016-12-08 23:04:28\n  github: dragon788\n- name: Jonathan Hogg\n  email: jonathan@significant-whitespace.com\n  num_commits: 1\n  first_commit: 2017-01-01 08:28:37\n  github: jonathanhogg\n- name: cryzed\n  email: cryzed@googlemail.com\n  num_commits: 15\n  first_commit: 2016-06-08 18:49:03\n  github: cryzed\n- name: Nathan Goldbaum\n  email: ngoldbau@illinois.edu\n  alternate_emails:\n  - goldbaum@ucolick.org\n  num_commits: 6\n  first_commit: 2015-05-16 22:01:01\n  github: ngoldbaum\n- name: Andrea D'Amore\n  email: anddam@brapi.net\n  num_commits: 5\n  first_commit: 2016-11-26 04:17:05\n  github: anddam\n- name: Raphael Das Gupta\n  email: raphael.das.gupta@hsr.ch\n  alternate_emails:\n  - git@raphael.dasgupta.ch\n  aliases:\n  - Raphael Borun Das Gupta\n  num_commits: 12\n  first_commit: 2017-01-03 06:56:44\n- name: Andrei\n  email: fizicars@gmail.com\n  num_commits: 1\n  first_commit: 2016-08-24 07:11:42\n- name: Daniel Hahler\n  email: git@thequod.de\n  num_commits: 1\n  first_commit: 2015-07-12 06:44:26\n- name: SanketDG\n  email: sanketdasgupta@gmail.com\n  num_commits: 3\n  first_commit: 2016-08-18 12:05:33\n  github: SanketDG\n- name: Paul Barton\n  email: pablo.barton@gmail.com\n  aliases:\n  - Pablo Barton\n  num_commits: 4\n  first_commit: 2015-03-17 09:46:52\n  github: SavinaRoja\n- name: Mark Harfouche\n  email: mark.harfouche@gmail.com\n  github: hmaarrfk\n  num_commits: 1\n  first_commit: 2018-11-02 10:11:42\n- name: Carol Willing\n  email: carolcode@willingconsulting.com\n  num_commits: 1\n  first_commit: 2016-01-18 23:35:33\n  github: willingc\n- name: Kilte Leichnam\n  email: nwotnbm@gmail.com\n  num_commits: 1\n  first_commit: 2016-07-19 07:26:36\n  github: Kilte\n- name: Ollie Ford\n  email: me@ojford.com\n  num_commits: 2\n  first_commit: 2016-10-09 16:06:54\n  github: OJFord\n- name: christopher\n  email: cjwright4242@gmail.com\n  num_commits: 50\n  first_commit: 2018-04-24 14:59:31\n- name: Raniere Silva\n  email: raniere@rgaiacs.com\n  num_commits: 1\n  first_commit: 2015-10-11 23:58:16\n  github: rgaiacs\n- name: Derek Thomas\n  email: derekathomas@gmail.com\n  num_commits: 19\n  first_commit: 2016-10-02 04:18:20\n  github: derekbrokeit\n- name: Leonardo Santagada\n  email: santagada@gmail.com\n  num_commits: 47\n  first_commit: 2016-07-07 04:29:41\n  github: santagada\n- name: Mark Bestley\n  email: 37385+bestlem@users.noreply.github.com\n  num_commits: 3\n  first_commit: 2018-04-24 17:00:35\n  github: bestlem\n- name: Michał Zając\n  email: emzajac@gmail.com\n  alternate_emails:\n  - michal.zajac@swmansion.com\n  aliases:\n  - zajaczajac\n  num_commits: 2\n  first_commit: 2015-05-05 10:03:01\n- name: 74th\n  email: site@74th.tech\n  num_commits: 4\n  first_commit: 2019-01-05 03:58:32\n  github: 74th\n- name: Mickaël Schoentgen\n  email: contact@tiger-222.fr\n  num_commits: 4\n  first_commit: 2018-11-01 11:32:32\n  github: BoboTiG\n- name: Brian Visel\n  email: eode@eptitude.net\n  num_commits: 13\n  first_commit: 2016-06-08 19:06:12\n- name: Thomas Kluyver\n  email: takowl@gmail.com\n  num_commits: 1\n  first_commit: 2016-02-03 09:20:01\n  github: takluyver\n- name: James Elías\n  email: jamiees2@gmail.com\n  num_commits: 5\n  first_commit: 2015-03-10 05:43:20\n- name: Emre Ates\n  email: ates@bu.edu\n  num_commits: 2\n  first_commit: 2018-09-17 16:30:34\n  github: EmreAtes\n- name: Donne Martin\n  email: donne.martin@gmail.com\n  num_commits: 1\n  first_commit: 2016-05-14 18:59:14\n  github: donnemartin\n- name: Aaron Griffin\n  email: aig787@gmail.com\n  num_commits: 37\n  first_commit: 2015-04-01 12:32:12\n- name: Alexey Shrub\n  email: ashrub@yandex.ru\n  num_commits: 1\n  first_commit: 2018-09-08 06:15:08\n- name: Jean-Christophe Fillion-Robin\n  email: jchris.fillionr@kitware.com\n  num_commits: 1\n  first_commit: 2016-11-02 00:42:58\n  github: jcfr\n- name: Charlie Arnold\n  email: charlie.arnold@gmail.com\n  num_commits: 1\n  first_commit: 2015-03-18 13:38:16\n- name: Nate Tangsurat\n  email: e4r7hbug@gmail.com\n  num_commits: 1\n  first_commit: 2018-10-31 23:31:32\n  github: e4r7hbug\n- name: Steven Silvester\n  email: steven.silvester@ieee.org\n  num_commits: 4\n  first_commit: 2015-04-01 21:01:35\n  github: blink1073\n- name: David\n  email: auscompgeek@users.noreply.github.com\n  num_commits: 3\n  first_commit: 2015-10-10 02:08:27\n- name: Romain Bignon\n  email: romain@symlink.me\n  num_commits: 2\n  first_commit: 2016-08-26 08:38:50\n- name: mel\n  email: mel@anybodytech.com\n  num_commits: 6\n  first_commit: 2015-06-26 08:51:45\n  github: melund\n- name: Michael Ensslin\n  email: michael@ensslin.cc\n  num_commits: 1\n  first_commit: 2015-06-13 19:59:24\n- name: Robert DeFriesse\n  email: Robert.DEFRIESSE@3ds.com\n  num_commits: 4\n  first_commit: 2018-06-25 16:22:52\n  github: robdefriesse\n- name: dbxnr\n  email: dbxnr@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2018-10-01 15:39:50\n  github: dbxnr\n- name: sushobhana\n  email: sushobhanapatra@gmail.com\n  num_commits: 1\n  first_commit: 2018-11-13 06:34:47\n  github: sushobhana\n- name: Florian Mounier\n  email: florian.mounier@kozea.fr\n  num_commits: 1\n  first_commit: 2015-03-09 05:54:59\n- name: Danmou\n  email: dmrtzn@gmail.com\n  num_commits: 3\n  first_commit: 2017-11-02 18:16:54\n  github: Danmou\n- name: Adam Hartz\n  email: hartz@mit.edu\n  aliases:\n  - adam j hartz\n  alternate_emails:\n  - hartz@mit.edu\n  num_commits: 1490\n  first_commit: 2015-03-13 20:16:28\n  github: adqm\n- name: Justin Calamari\n  email: justin.calamari@gmail.com\n  num_commits: 4\n  first_commit: 2018-07-27 22:32:44\n  github: justcalamari\n- name: Brian Skinn\n  email: brian.skinn@gmail.com\n  num_commits: 8\n  first_commit: 2019-01-29 15:21:08\n  github: bskinn\n- name: Glen Zangirolami\n  email: glenbot@gmail.com\n  num_commits: 1\n  first_commit: 2015-03-17 10:47:13\n- name: Niklas Hambüchen\n  email: mail@nh2.me\n  num_commits: 3\n  first_commit: 2017-06-17 21:00:29\n  github: nh2\n- name: Owen Campbell\n  email: owen.campbell@tanti.org.uk\n  num_commits: 2\n  first_commit: 2016-09-03 13:54:11\n  github: meatballs\n- name: adamheins\n  email: adam@pebble.com\n  num_commits: 1\n  first_commit: 2015-10-06 21:18:25\n  github: adamheins\n- name: Jared Crawford\n  email: jmcrawford45@gmail.com\n  num_commits: 6\n  first_commit: 2018-09-29 04:55:30\n  github: jmcrawford45\n- name: Will S\n  email: wsha.code@gmail.com\n  num_commits: 9\n  first_commit: 2016-06-10 06:35:14\n  github: willsALMANJ\n- name: Atsushi Morimoto\n  email: atsushi.morimoto@dena.com\n  num_commits: 0\n  first_commit: 2019-01-23 20:01:34\n  github: 74th\n- name: Thomas Marquart\n  email: thomas@marquart.se\n  num_commits: 4\n  first_commit: 2015-03-17 03:34:36\n- name: David Dotson\n  email: dotsdl@gmail.com\n  num_commits: 20\n  first_commit: 2018-07-14 12:53:07\n  github: dotsdl\n- name: anula\n  email: anula.szy@gmail.com\n  num_commits: 5\n  first_commit: 2015-05-12 05:52:00\n- name: Benjamin Pollack\n  email: benjamin@bitquabit.com\n  num_commits: 4\n  first_commit: 2015-11-21 12:55:44\n  github: bpollack\n- name: Joseph Paul\n  email: mail@jsph.pl\n  num_commits: 1\n  first_commit: 2018-11-01 06:34:09\n  github: jsphpl\n- name: Sébastien Pierre\n  email: sebastien.pierre@gmail.com\n  num_commits: 3\n  first_commit: 2016-05-17 09:17:32\n  github: sebastien\n- name: Sardorbek Imomaliev\n  email: sardorbek.imomaliev@gmail.com\n  num_commits: 4\n  first_commit: 2017-01-29 23:40:33\n- name: Daniel Milde\n  email: daniel@milde.cz\n  num_commits: 1\n  first_commit: 2015-11-08 15:15:08\n  github: Dundee\n- name: Katriel Cohn-Gordon\n  email: me@katriel.co.uk\n  num_commits: 1\n  first_commit: 2015-03-15 18:26:26\n- name: Chad Kennedy\n  email: chadkennedyonline@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2019-01-14 14:41:48\n- name: stonebig\n  email: stonebig34@gmail.com\n  num_commits: 1\n  first_commit: 2015-11-29 04:36:20\n  github: stonebig\n- name: Ronny Pfannschmidt\n  email: opensource@ronnypfannschmidt.de\n  num_commits: 1\n  first_commit: 2015-08-07 16:39:22\n- name: Jakub Nowak\n  email: jakub.jakub.nowak@gmail.com\n  num_commits: 4\n  first_commit: 2018-09-18 15:54:52\n  github: MrQubo\n- name: Jay Tuckey\n  email: jay.tuckey@gmail.com\n  num_commits: 5\n  first_commit: 2018-10-19 06:30:56\n- name: selepo\n  email: po.lenhoff@gmail.com\n  num_commits: 4\n  first_commit: 2015-11-03 13:42:29\n  github: selepo\n- name: Bob Hyman\n  email: bob.hyman@bobssoftwareworks.com\n  num_commits: 147\n  first_commit: 2016-06-26 16:48:47\n  github: bobhy\n  alternate_emails:\n  - bob.hyman@gmail.com\n- name: Fabien Dubosson\n  email: fabien.dubosson@gmail.com\n  num_commits: 4\n  first_commit: 2017-02-21 05:46:12\n  github: StreakyCobra\n- name: Troy de Freitas\n  email: 9503857+ntdef@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2019-02-05 19:03:06\n  github: ntdef\n- name: virus\n  email: virusbb001a@gmail.com\n  num_commits: 35\n  first_commit: 2019-03-06 10:36:26\n  github: virusbb001\n- name: Steven Kryskalla\n  email: skryskalla@gmail.com\n  num_commits: 2\n  first_commit: 2019-03-24 11:00:24\n- name: Kale Kundert\n  email: kale@thekunderts.net\n  num_commits: 4\n  first_commit: 2019-03-16 01:36:28\n  github: kalekundert\n- name: Rodrigo Oliveira\n  email: rodrigo.oliveira@byne.com.br\n  num_commits: 1\n  first_commit: 2019-05-06 14:48:58\n  github: rodrigogolive\n- name: Carmen Bianca Bakker\n  email: carmen@carmenbianca.eu\n  num_commits: 24\n  first_commit: 2019-04-07 16:33:01\n  github: carmenbianca\n- name: Andrés García García\n  email: a.garcia230395@gmail.com\n  aliases:\n  - Ad115\n  num_commits: 4\n  github: Ad115\n  first_commit: 2019-05-06 14:17:57\n- name: con-f-use\n  email: con-f-use@users.noreply.github.com\n  num_commits: 19\n  first_commit: 2019-05-15 04:53:37\n- name: cclauss\n  email: cclauss@me.com\n  num_commits: 2\n  first_commit: 2019-05-02 07:35:11\n  github: cclauss\n- name: Eddie Peters\n  email: edward.paul.peters@gmail.com\n  alternate_emails:\n  - eddie@dinogalactic.com\n  num_commits: 3\n  first_commit: 2019-05-10 06:18:40\n  github: eppeters\n- name: shadow-light\n  email: 42055707+shadow-light@users.noreply.github.com\n  num_commits: 3\n  first_commit: 2018-09-16 22:50:24\n- name: Gyuri Horak\n  email: dyuri@horak.hu\n  num_commits: 59\n  first_commit: 2019-06-18 12:00:16\n  github: dyuri\n- name: Ke Zhang\n  email: kezhang@bnl.gov\n  aliases:\n  - ke-zhang-rd\n  num_commits: 2\n  first_commit: 2019-07-13 15:02:41\n- name: Daniel Smith\n  email: malorian@me.com\n  num_commits: 1\n  first_commit: 2019-07-13 12:11:59\n- name: Alexander Steffen\n  email: devel.20.webmeister@spamgourmet.com\n  num_commits: 5\n  first_commit: 2019-07-13 04:44:55\n  github: webmeister\n- name: Sean Farley\n  email: sean@farley.io\n  num_commits: 4\n  first_commit: 2019-07-13 15:09:39\n  github: seanfarley\n- name: Nils ANDRÉ-CHANG\n  email: nils@nilsand.re\n  num_commits: 1\n  first_commit: 2019-08-05 17:03:44\n  github: NilsIrl\n- name: László Vaskó\n  email: vlaci@balabit.hu\n  num_commits: 2\n  first_commit: 2019-08-02 10:34:08\n  github: vlaci\n- name: Jan Chren\n  email: dev.rindeal@gmail.com\n  num_commits: 3\n  first_commit: 2019-08-06 12:38:28\n  github: rindeal\n- name: chengxuncc\n  email: chengxuncc@gmail.com\n  num_commits: 1\n  first_commit: 2019-07-28 22:19:49\n  github: chengxuncc\n- name: Caleb Hattingh\n  email: caleb.hattingh@gmail.com\n  num_commits: 12\n  first_commit: 2019-08-02 22:11:22\n  github: cjrh\n- name: nedsociety\n  email: nedsociety@gmail.com\n  num_commits: 1\n  first_commit: 2019-10-01 02:14:59\n  github: nedsociety\n- name: fanosta\n  email: github@nageler.org\n  num_commits: 1\n  first_commit: 2019-09-17 16:36:49\n  github: fanosta\n- name: Allan Crooks\n  email: allan.crooks@sixtyten.org\n  num_commits: 2\n  first_commit: 2019-10-02 16:45:15\n- name: micimize\n  email: rosenthalm93@gmail.com\n  num_commits: 2\n  first_commit: 2019-09-15 21:36:37\n  github: micimize\n- name: David Kalliecharan\n  email: david@david.science\n  num_commits: 1\n  first_commit: 2019-10-10 08:16:49\n  github: ddkn\n- name: Mike Crowe\n  email: drmikecrowe@gmail.com\n  aliases:\n  - drmikecrowe\n  num_commits: 6\n  first_commit: 2020-01-28 09:44:58\n  github: drmikecrowe\n- name: anki-code\n  email: anki-code@users.noreply.github.com\n  alternate_emails:\n  - anki-code\n  - aaa@aaa.aaa\n  - 1@1.1\n  aliases:\n  - Andy Kipp\n  - Andy Kirby\n  - a\n  num_commits: 103\n  first_commit: 2019-10-15 18:20:58\n  github: xxh\n- name: Sylvain Corlay\n  email: sylvain.corlay@gmail.com\n  num_commits: 1\n  first_commit: 2019-11-25 18:43:13\n  github: SylvainCorlay\n- name: Chris Lasher\n  email: chris.lasher@gmail.com\n  num_commits: 2\n  first_commit: 2019-12-07 18:09:37\n  github: gotgenes\n- name: Edmund Miller\n  email: edmund.a.miller@protonmail.com\n  num_commits: 2\n  first_commit: 2019-07-14 11:37:12\n- name: Marcio Mazza\n  email: marciomazza@gmail.com\n  num_commits: 1\n  first_commit: 2020-02-05 13:38:52\n  github: marciomazza\n- name: Noortheen Raja\n  email: jnoortheen@gmail.com\n  num_commits: 239\n  first_commit: 2020-03-15 10:13:56\n  github: jnoortheen\n- name: Samuel Lotz\n  email: samuel.lotz@salotz.info\n  num_commits: 3\n  first_commit: 2020-03-03 11:30:33\n  github: salotz\n- name: Jerzy Drozdz\n  email: jerzy.drozdz@gmail.com\n  num_commits: 3\n  first_commit: 2020-03-01 11:56:23\n  github: t0fik\n- name: Gabriel Vogel\n  email: gabriel.vogel@online.de\n  num_commits: 2\n  first_commit: 2020-03-10 19:06:59\n  github: Gobbel2000\n- name: anki\n  email: anki@code.email\n  num_commits: 2\n  first_commit: 2020-03-02 04:59:17\n- name: Manor Askenazi\n  email: manor@biomedical.hosting\n  num_commits: 1\n  first_commit: 2020-04-25 18:21:05\n  github: manor\n- name: Marduk Bolaños\n  email: mardukbp@mac.com\n  num_commits: 4\n  first_commit: 2020-04-30 20:26:48\n  github: mardukbp\n- name: Stefane Fermigier\n  email: sf@fermigier.com\n  num_commits: 1\n  first_commit: 2020-03-23 06:07:20\n- name: swedneck\n  email: 40505480+swedneck@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2020-05-31 10:15:42\n  github: swedneck\n- name: Feng Tian\n  email: fengttt@gmail.com\n  num_commits: 1\n  first_commit: 2020-05-28 12:13:26\n  github: fengttt\n- name: cafehaine\n  email: kilian.guillaume@gmail.com\n  num_commits: 13\n  first_commit: 2020-08-01 15:20:04\n  github: cafehaine\n- name: paugier\n  email: pierre.augier@univ-grenoble-alpes.fr\n  num_commits: 1\n  first_commit: 2020-05-13 03:07:31\n  github: paugier\n- name: Daniel Shimon\n  email: daniel.shimon22@gmail.com\n  num_commits: 67\n  first_commit: 2020-07-23 08:11:36\n- name: Achim Herwig\n  email: achim.herwig@wodca.de\n  num_commits: 5\n  first_commit: 2020-06-27 11:13:32\n  github: Achimh3011\n- name: Marius van Niekerk\n  email: marius.v.niekerk@gmail.com\n  num_commits: 4\n  first_commit: 2020-08-28 15:45:07\n  github: mariusvniekerk\n- name: Danny Sepler\n  email: dannysepler@gmail.com\n  num_commits: 24\n  first_commit: 2020-08-29 12:32:49\n  github: dannysepler\n- name: Eadaen1\n  email: eadaen@protonmail.com\n  num_commits: 29\n  first_commit: 2020-09-11 04:05:11\n  github: Eadaen\n- name: Wendell CTR Turner\n  email: Wendell.CTR.Turner@faa.gov\n  num_commits: 1\n  first_commit: 2020-09-16 08:17:15\n- name: Wendell Turner\n  email: skyking@ilikecarrots.com\n  num_commits: 8\n  first_commit: 2020-09-13 11:10:42\n  github: wendellwt\n- name: a\n  email: a\n  num_commits: 167\n  first_commit: 2020-10-08 15:17:00.327697\n- name: Will Shanks\n  email: willshanks@us.ibm.com\n  num_commits: 1\n  first_commit: 2020-10-13 11:26:03\n  github: willsALMANJ\n- name: Faris A Chugthai\n  email: 20028782+farisachugthai@users.noreply.github.com\n  num_commits: 2\n  first_commit: 2021-01-05 11:26:09\n- name: Asaf Fisher\n  email: asaffisher@icloud.com\n  num_commits: 2\n  first_commit: 2021-01-04 12:44:21\n- name: Dominic Ward\n  email: deeuu@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2020-11-16 09:46:42\n- name: omjadas\n  email: omja.das@gmail.com\n  num_commits: 3\n  first_commit: 2020-10-16 23:09:08\n  github: omjadas\n- name: Leandro Emmanuel Reina Kiperman\n  email: leandro.kip93@gmail.com\n  num_commits: 1\n  first_commit: 2021-01-04 12:31:05\n- name: Henré Botha\n  email: henrebotha@gmail.com\n  num_commits: 1\n  first_commit: 2020-11-26 08:27:33\n  github: henrebotha\n- name: Aneesh Durg\n  email: aneeshdurg17@gmail.com\n  num_commits: 1\n  first_commit: 2021-01-25 16:37:29\n- name: colons\n  email: colons@colons.co\n  num_commits: 1\n  first_commit: 2020-11-25 07:00:46\n  github: colons\n- name: yggdr\n  email: github@schukraft.org\n  num_commits: 1\n  first_commit: 2021-01-06 10:34:22\n- name: Gao, Xiang\n  email: qasdfgtyuiop@gmail.com\n  num_commits: 1\n  first_commit: 2021-01-31 17:22:41\n- name: Tejasvi S Tomar\n  email: 45873379+tejasvi@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-02-08 10:50:51\n- name: Evgeny\n  email: eugenesvk@users.noreply.github.com\n  num_commits: 12\n  first_commit: 2021-02-22 09:32:34\n- name: Adam Schwalm\n  email: adamschwalm@gmail.com\n  num_commits: 1\n  first_commit: 2021-03-01 11:44:32\n- name: Nate Simon\n  email: njsimon10@gmail.com\n  num_commits: 1\n  first_commit: 2021-02-09 10:54:17\n- name: jmoranos\n  email: 48717183+jmoranos@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-04-26 22:41:54\n- name: Peter Ye\n  email: 46109467+yaxollum@users.noreply.github.com\n  alternate_emails:\n  - yaxollum@gmail.com\n  num_commits: 36\n  first_commit: 2021-06-11 14:11:19\n- name: Walter A. Boring IV\n  email: waboring@hemna.com\n  num_commits: 1\n  first_commit: 2021-03-04 22:53:30\n- name: bhawkins\n  email: 1729052+bhawkins@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-03-22 22:20:36\n- name: JackofSpades707\n  email: JackofSpades707@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-06-08 20:12:56\n- name: Jeremy Schlatter\n  email: jeremy@jeremyschlatter.com\n  num_commits: 3\n  first_commit: 2021-07-09 22:55:54\n- name: Luiz Antonio Lazoti\n  email: luizlazoti@hotmail.com\n  num_commits: 1\n  first_commit: 2021-04-28 17:44:57\n- name: francium\n  email: francium@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-04-15 16:36:34\n- name: Vasilis Gerakaris\n  email: vasilis.gerakaris@navarino.gr\n  alternate_emails:\n  - vgerak@gmail.com\n  num_commits: 6\n  first_commit: 2021-10-14 17:00:39\n- name: Samuel Dion-Girardeau\n  email: samueldg@users.noreply.github.com\n  num_commits: 3\n  first_commit: 2021-09-05 03:45:00\n- name: FranzAtGithub\n  email: 62662135+FranzAtGithub@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-09-14 12:55:19\n- name: IJR222\n  email: isaacjohnr22@gmail.com\n  num_commits: 1\n  first_commit: 2021-11-02 08:52:05\n- name: Shanmukha Vishnu\n  email: 50124557+iam-shanmukha@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-10-05 10:08:56\n- name: Ali Uneri\n  email: auneri@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-08-16 15:02:12\n- name: Eleni E\n  email: Contessina@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2021-11-17 13:58:09\n- name: Kaarel Pärtel\n  email: kaarelp2rtel@gmail.com\n  num_commits: 1\n  first_commit: 2021-11-17 13:39:28\n- name: Gabriele N. Tornetta\n  email: P403n1x87@users.noreply.github.com\n  num_commits: 2\n  first_commit: 2021-10-07 11:22:51\n- name: cmidkiff87\n  email: 39914727+cmidkiff87@users.noreply.github.com\n  num_commits: 2\n  first_commit: 2021-08-21 09:18:13\n- name: Michael Ramsey\n  email: mike@hackerdise.me\n  num_commits: 1\n  first_commit: 2021-09-14 12:54:18\n- name: circuit10\n  email: heath.mitchell27@gmail.com\n  num_commits: 1\n  first_commit: 2021-10-15 09:00:18\n- name: Oliver Bestwalter\n  email: oliver@bestwalter.de\n  num_commits: 3\n  first_commit: 2022-02-18 21:15:45\n- name: Ryan Delaney\n  email: 1139517+rpdelaney@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-02-04 03:10:53\n- name: E Pluribus Unum\n  email: 90979253+Playfloor@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-03-21 05:35:20\n- name: ylmrx\n  email: ylmrx@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-03-05 11:15:32\n- name: Hierosme\n  email: 56162977+Hierosme@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-01-08 13:58:46\n- name: Kyllingene\n  email: 69094702+Kyllingene@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-03-15 03:47:16\n- name: dev2718\n  email: alexanderfirbas@gmail.com\n  num_commits: 10\n  first_commit: 2022-01-09 04:16:06\n- name: zzj\n  email: 29055749+zjzh@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-02-11 14:53:00\n- name: Daniel\n  email: 291111@uwr.edu.pl\n  num_commits: 1\n  first_commit: 2022-02-11 13:01:41\n- name: Ganer\n  email: 34655998+GanerCodes@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-03-22 08:28:49\n- name: mattmc3\n  email: mattmc3@gmail.com\n  num_commits: 1\n  first_commit: 2021-11-22 23:39:21\n- name: Evan Hubinger\n  email: evanjhub@gmail.com\n  num_commits: 1\n  first_commit: 2021-12-16 22:09:52\n- name: Angus Hollands\n  email: goosey15@gmail.com\n  num_commits: 6\n  first_commit: 2021-11-18 18:42:29\n- name: doronz88\n  email: doron88@gmail.com\n  num_commits: 7\n  first_commit: 2022-04-27 12:41:13\n- name: Stefano Rivera\n  email: github@rivera.za.net\n  alternate_emails:\n  - stefano@rivera.za.net\n  num_commits: 4\n  first_commit: 2022-05-08 00:26:57\n- name: dependabot[bot]\n  email: 49699333+dependabot[bot]@users.noreply.github.com\n  num_commits: 9\n  first_commit: 2022-06-08 09:43:32\n- name: jbw3\n  email: jbw3@users.noreply.github.com\n  num_commits: 2\n  first_commit: 2022-05-28 11:52:27\n- name: Italo Cunha\n  email: cunha@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-06-05 11:08:06\n- name: Timmy Welch\n  email: timmy@narnian.us\n  num_commits: 1\n  first_commit: 2022-05-21 01:24:36\n- name: Naveen\n  email: 172697+naveensrinivasan@users.noreply.github.com\n  num_commits: 2\n  first_commit: 2022-06-06 01:11:33\n- name: Hannes Römer\n  email: 16097755+hroemer@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-06-27 22:21:34\n- name: pre-commit-ci[bot]\n  email: 66853113+pre-commit-ci[bot]@users.noreply.github.com\n  num_commits: 78\n  first_commit: 2022-07-11 14:26:34\n- name: jgart\n  email: 47760695+jgarte@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-07-25 06:05:00\n- name: Michael Panitz (at Cascadia College)\n  email: mike.panitz@gmail.com\n  num_commits: 1\n  first_commit: 2022-08-04 07:21:43\n- name: Tim Gates\n  email: tim.gates@iress.com\n  num_commits: 1\n  first_commit: 2022-07-22 19:12:46\n- name: amukher3\n  email: 51139088+amukher3@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-06-12 14:49:17\n  github: amukher3\n- name: Ashish Kurmi\n  email: 100655670+boahc077@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-09-12 10:56:08\n- name: Lie Ryan\n  email: lie.1296@gmail.com\n  num_commits: 4\n  first_commit: 2022-09-12 21:02:08\n  github: lieryan\n- name: Justin\n  email: rinkaandchan@outlook.com\n  num_commits: 1\n  first_commit: 2022-10-25 10:07:20\n- name: yotamolenik\n  email: 39271599+yotamolenik@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-12-05 10:34:20\n- name: Blake Ramsdell\n  email: blaker@gmail.com\n  num_commits: 2\n  first_commit: 2022-10-04 14:46:42\n- name: austin-yang\n  email: 110882105+IAustin-YangI@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-10-24 10:46:52\n- name: Marco Rubin\n  email: 20150305+Rubo3@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2022-11-09 05:40:34\n- name: Qyriad\n  email: qyriad@gmail.com\n  num_commits: 1\n  first_commit: 2022-11-23 12:45:19\n- name: Tobias Becker\n  email: nullpointeracception@gmail.com\n  num_commits: 1\n  first_commit: 2023-01-17 13:05:39\n- name: AkshayWarrier\n  email: 58233418+AkshayWarrier@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2023-01-23 10:15:38\n- name: Thomas Hess\n  email: tux12345@justmail.de\n  num_commits: 1\n  first_commit: 2023-03-02 02:05:22\n- name: Ivan Ogasawara\n  email: ivan.ogasawara@gmail.com\n  num_commits: 3\n  first_commit: 2023-02-27 14:07:45\n- name: kouhe3\n  email: 25522053+kouhe3@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2023-03-23 09:25:07\n- name: HackTheOxidation\n  email: 86469309+HackTheOxidation@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2023-08-14 13:12:26\n- name: Cosine Chen\n  email: cosine_chen@163.com\n  num_commits: 1\n  first_commit: 2023-07-26 18:44:55\n- name: mgunyho\n  email: 20118130+mgunyho@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2023-09-04 07:37:18\n- name: ShalokShalom\n  email: shalokshalom@protonmail.ch\n  num_commits: 1\n  first_commit: 2023-08-23 11:30:20\n- name: Wilfried Pollan\n  email: gitwipo@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2023-08-22 14:47:47\n- name: Jacqueline Leykam\n  email: me@jacqueline.id.au\n  num_commits: 1\n  first_commit: 2023-11-27 05:12:28\n- name: Joshix-1\n  email: 57299889+Joshix-1@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2023-11-23 06:19:34\n- name: Nathan Monfils\n  email: nathanmonfils@gmail.com\n  num_commits: 1\n  first_commit: 2024-01-15 05:25:23\n- name: JamesParrott\n  email: 80779630+JamesParrott@users.noreply.github.com\n  num_commits: 2\n  first_commit: 2024-01-16 08:56:07\n- name: Airat Makhmutov\n  email: 108220148+rautyrauty@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2023-12-31 10:08:28\n- name: Matthieu LAURENT\n  email: matthieu.laurent69@protonmail.com\n  num_commits: 1\n  first_commit: 2024-01-30 06:24:36\n- name: Daniel Saunders\n  email: dsaunders410@gmail.com\n  num_commits: 1\n  first_commit: 2024-02-27 10:22:12\n- name: Andrew\n  email: andrew222651@fastmail.com\n  num_commits: 1\n  first_commit: 2024-03-06 04:37:19\n- name: l-no\n  email: 22138751+l-no@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2024-04-10 01:48:46\n- name: jyn\n  email: github@jyn.dev\n  num_commits: 2\n  first_commit: 2024-05-30 10:03:55\n- name: amacfie-tc\n  email: 91503417+amacfie-tc@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2024-06-10 12:25:31\n- name: lunrenyi\n  email: 87307989+lunrenyi@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2024-06-18 12:15:49\n- name: Spencer Bliven\n  email: spencer.bliven@gmail.com\n  num_commits: 1\n  first_commit: 2024-06-29 06:49:57\n- name: Niraj Kulkarni\n  email: kulkarniniraj14@gmail.com\n  num_commits: 1\n  first_commit: 2024-07-04 04:37:55\n- name: Aidan Courtney\n  email: aidanfc97@gmail.com\n  num_commits: 1\n  first_commit: 2024-07-27 11:33:35\n- name: Max Nordlund\n  email: max.nordlund@gmail.com\n  num_commits: 1\n  first_commit: 2024-10-30 09:11:04\n- name: Shawn Wallace\n  email: yungwallace@live.com\n  num_commits: 1\n  first_commit: 2024-10-31 05:33:45\n- name: Faidon Liambotis\n  email: paravoid@debian.org\n  num_commits: 1\n  first_commit: 2024-09-17 06:47:59\n- name: Jueun Lee\n  email: seirios0107@gmail.com\n  num_commits: 1\n  first_commit: 2024-11-18 18:04:24\n- name: Simon Billinge\n  email: sbillinge@users.noreply.github.com\n  num_commits: 1\n  first_commit: 2024-12-08 03:28:31\n- name: Bala\n  email: kumaran.4353@gmail.com\n  num_commits: 1\n  first_commit: 2024-12-02 07:01:09\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.603515625,
          "content": "[run]\n#branch = true\nsource =\n  xonsh/\n  xontrib/\nomit =\n  .venv/*\n  xonsh/lazyasd.py\n  xonsh/parser_table.py\n  xonsh/completion_parser_table.py\n  xonsh/parsers/ply/*\n\n# keep all cache files in one place\ndata_file = .cache/coverage\n\n# https://stackoverflow.com/questions/42721896/coverage-in-parallel-for-django-tests\n# when run with xdist - but append mode will not work\n#concurrency = multiprocessing\n#parallel = true\n\n[report]\nprecision = 2\nexclude_lines =\n    pragma: no cover\n    raise NotImplementedError\nskip_covered = true\nskip_empty = true\nshow_missing = true\nsort = Miss\n\n# keep improving ;)\nfail_under = 60\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.6044921875,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n# This should be first, because the git documentation says \"When more\n# than one pattern matches the path, a later line overrides an earlier line.\"\n* text=auto\n\n# Text files\n*.bat text\n*.css_t text\n*.in text\n*.json text\n*.py text\n*.rst text\n*.sh text\n*.txt text\n*.xsh text\n*.yaml text\n*.yml text\nCONTRIBUTING text\nlicense text\nLICENSE text\nMakefile text\nREADME text\n\n# Files in the lazyjson format require LF line endings\ntests/history/histories/*.json text eol=lf\n\n# Binary files\n*.ico binary\n*.gif binary\n*.gz binary\n*.png binary\n*.webm binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.16796875,
          "content": "*.pyc\n*.out\n*.xcf\n*.egg\n.eggs/\n.pytest_cache/\nlexer_table.py\nparser_table.py\nparser_test_table.py\nxonsh/lexer_table.py\nxonsh/parser_table.py\nxonsh/completion_parser_table.py\nxonsh/parsers/completion_parser_table.py\ntests/lexer_table.py\ntests/parser_table.py\ntests/lexer_test_table.py\ntests/parser_test_table.py\ntests/testfile\nbuild/\ndist/\nxonsh.egg-info/\ndocs/_build/\ndocs/envvarsbody\ndocs/xontribsbody\ndocs/eventsbody\nxonsh/dev.githash\nxontrib/__init__.py\n\n# temporary files from vim and emacs\n*~\n*#\n.#*\n*.swp\n*.swo\n\n# Virtualenv\npip-selfcheck.json\nbin/\n/lib/\ninclude/\nvenv/\n.venv*/\n\n# Python project version files\n.python-version\n\n# Mac\n.DS_Store\n\n# Editor project files\n*.komodo*\n.cache\n.idea\n\n.coverage\ncoverage.xml\nfeedstock/\n*.cred\ntttt\nActually_test.tst\nActually.tst\nComplete_test.tst\nComplete.tst\ntags\n\n# Rever\nrever/\n# Allow the lib\n!/xonsh/lib\n\n\n# Allow tests/bin\n!/tests/bin\n\n# elm\nxonsh/webconfig/elm-stuff/\nxonsh/webconfig/js/app.js\n\n# VS Code\n.vscode/\n\n# AppImage\n*.AppImage\n\n# mypy\n.dmypy.json\n.mypy_cache\n\n# testmon pytest-plugin\n.testmondata\n.testmondata-*\n\n# pdm\n.pdm.toml\n.pdm-python\n__pypackages__\n\n# one can use pip or pdm during development\npdm.lock\n\n# asv benchmarks\n.asv/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 16.1474609375,
          "content": "# This file was autogenerated by rever: https://regro.github.io/rever-docs/\n# This prevent git from showing duplicates with various logging commands.\n# See the git documentation for more details. The syntax is:\n#\n#   good-name <good-email> bad-name <bad-email>\n#\n# You can skip bad-name if it is the same as good-name and is unique in the repo.\n#\n# This file is up-to-date if the command git log --format=\"%aN <%aE>\" | sort -u\n# gives no duplicates.\n\nAnthony Scopatz <scopatz@gmail.com>\nAdam Hartz <hartz@mit.edu> adam j hartz <hartz@mit.edu>\nGil Forsyth <gilforsyth@gmail.com> Gil Forsyth <gforsyth@users.noreply.github.com>\nGil Forsyth <gilforsyth@gmail.com> Gil Forsyth <Gilbert.Forsyth@capitalone.com>\nGil Forsyth <gilforsyth@gmail.com> Gil Forsyth <gforsyth@gwu.edu>\nGil Forsyth <gilforsyth@gmail.com> Gil Forsyth <gil@forsyth.dev>\nMorten Enemark Lund <melund@gmail.com>\nKonstantinos Tsakiltzidis <laerusk@gmail.com> laerus <laerusk@gmail.com>\nNoortheen Raja <jnoortheen@gmail.com>\nJamie Bliss <jamie@ivylav.es> James Bliss <jamie@ivyleav.es>\nJamie Bliss <jamie@ivylav.es> James Bliss <jamie.bliss@ilq.com>\nJamie Bliss <jamie@ivylav.es> James Bliss <jbliss@nextgenerationenrollment.com>\nJamie Bliss <jamie@ivylav.es> James Bliss <astronouth7303@gmail.com>\na <a>\nHugo Wang <w@mitnk.com>\nDavid Strobach <lalochcz@gmail.com> laloch <lalochcz@gmail.com>\nBob Hyman <bob.hyman@bobssoftwareworks.com> Bob Hyman <bob.hyman@gmail.com>\nanki-code <anki-code@users.noreply.github.com> Andy Kipp <anki-code>\nanki-code <anki-code@users.noreply.github.com> Andy Kipp <aaa@aaa.aaa>\nanki-code <anki-code@users.noreply.github.com> Andy Kipp <1@1.1>\nanki-code <anki-code@users.noreply.github.com> Andy Kirby <anki-code>\nanki-code <anki-code@users.noreply.github.com> Andy Kirby <aaa@aaa.aaa>\nanki-code <anki-code@users.noreply.github.com> Andy Kirby <1@1.1>\nanki-code <anki-code@users.noreply.github.com> a <anki-code>\nanki-code <anki-code@users.noreply.github.com> a <aaa@aaa.aaa>\nanki-code <anki-code@users.noreply.github.com> a <1@1.1>\nBlahGeek <i@BlahGeek.com>\npre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\nDaniel Shimon <daniel.shimon22@gmail.com>\nGyuri Horak <dyuri@horak.hu>\nJean-Benoist Leger <jb@leger.tf> Jean-Benoist Leger <jbleger@gertrude>\nJean-Benoist Leger <jb@leger.tf> Jean-Benoist Leger <jbleger@hds.utc.fr>\nchristopher <cjwright4242@gmail.com>\nKlaus Alexander Seistrup <klaus@seistrup.dk> Klaus Alexander Seistrup <kseistrup@users.noreply.github.com>\nLeonardo Santagada <santagada@gmail.com>\nBurak Yiğit Kaya <ben@byk.im> Burak Yigit Kaya <ben@byk.im>\nMatthias Bussonnier <bussonniermatthias@gmail.com>\nAaron Griffin <aig787@gmail.com>\nPeter Ye <46109467+yaxollum@users.noreply.github.com> Peter Ye <yaxollum@gmail.com>\nRob Brewer <rwb123@gmail.com> Robert W. Brewer <rwb123@gmail.com>\nvirus <virusbb001a@gmail.com>\nSagar Tewari <sagartewari01@gmail.com> Sagar Tewari <sagartewariym@yahoo.com>\nGordon Ball <gordon@chronitis.net>\nEadaen1 <eadaen@protonmail.com>\nKonstantin Molchanov <kmolchanov@machinezone.com> Konstantin Molchanov <moigagoo@live.com>\nGuillaume Leclerc <guillaume.leclerc@epfl.ch> Guillaume Leclerc <guillaume.leclerc.work@gmail.com>\nTravis Shirk <travis@pobox.com>\nCarmen Bianca Bakker <carmen@carmenbianca.eu>\nDanny Sepler <dannysepler@gmail.com>\nJoel Gerber <joel@grrbrr.ca>\nvaaaaanquish <6syun9@gmail.com> @vaaaaanquish <6syun9@gmail.com>\nvaaaaanquish <6syun9@gmail.com> vaaaaanquish <6syun9@gmail.com>\nvaaaaanquish <6syun9@gmail.com> 6syun9 <6syun9@gmail.com>\nBernardas Ališauskas <bernardas.alisauskas@gmail.com> Bernardas <bernardas.alisauskas@gmail.com>\nDavid Dotson <dotsdl@gmail.com>\nDerek Thomas <derekathomas@gmail.com>\ncon-f-use <con-f-use@users.noreply.github.com>\nVHarisop <the.machine.headed@gmail.com>\nJohnLunzer <lunzer@gmail.com> jlunz <lunz8748@usroc1miniwaas.corp.exelisinc.com>\nPaul Goelz <s8pagoel@stud.uni-saarland.de>\nJason R. Coombs <jaraco@jaraco.com>\ncryzed <cryzed@googlemail.com>\nFrank Sachsenheim <funkyfuture@riseup.net> Frank Sachsenheim <funkyfuture@users.noreply.github.com>\nKurtis Rader <krader@skepticism.us>\nBrian Visel <eode@eptitude.net>\ncafehaine <kilian.guillaume@gmail.com>\nAndrew Hundt <ATHundt@gmail.com>\nJonathan Slenders <jonathan@slenders.be>\nJustin Moen <jamoen7@gmail.com>\nRaphael Das Gupta <raphael.das.gupta@hsr.ch> Raphael Borun Das Gupta <git@raphael.dasgupta.ch>\nCaleb Hattingh <caleb.hattingh@gmail.com>\nEvgeny <eugenesvk@users.noreply.github.com>\nStephan Fitzpatrick <knowsuchagency@gmail.com>\ndev2718 <alexanderfirbas@gmail.com>\nWill S <wsha.code@gmail.com>\ndependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\nK.-Michael Aye <kmichael.aye@gmail.com> K.-Michael Aye <michaelaye@users.noreply.github.com>\nhalloleo <git@halloleo.dot.hailmail.dot.net> halloleo <halloleo@users.noreply.github.com>\nWill Wykeham <will@wykeham.net>\nOleh Prypin <oleh@pryp.in>\nBrian Skinn <brian.skinn@gmail.com>\nWendell Turner <skyking@ilikecarrots.com>\nAlessio Bogon <youtux@gmail.com> Alessio Bogon <youtux@users.noreply.github.com>\nYohei Tamura <tamuhey@gmail.com>\nMaximilian Köhl <mail@koehlma.de>\nAlexander Sosedkin <monk@unboiled.info>\ndoronz88 <doron88@gmail.com>\nCody Scott <cody.j.b.scott@gmail.com>\nJake Hedman <jake@hedman.email>\ntraverseda <traverse.da@gmail.com>\nAndre Weltsch <andre.t.weltsch@campus.tu-berlin.de> Andre Weltsch <andre@weltsch.de>\nJeremy Donahue <jeremydonahue@gmail.com>\nRaphael Gaschignard <raphael@rtpg.co>\nNathan Goldbaum <ngoldbau@illinois.edu> Nathan Goldbaum <goldbaum@ucolick.org>\nmel <mel@anybodytech.com>\nJared Crawford <jmcrawford45@gmail.com>\nMike Crowe <drmikecrowe@gmail.com> drmikecrowe <drmikecrowe@gmail.com>\nVasilis Gerakaris <vasilis.gerakaris@navarino.gr> Vasilis Gerakaris <vgerak@gmail.com>\nAngus Hollands <goosey15@gmail.com>\nJuanPablo <jpabloaj@gmail.com>\nOllie Terrance <ollie.terrance@live.co.uk>\nMarcel Bollmann <bollmann@linguistics.rub.de>\nmdraw <mdraw.gh@gmail.com>\nMattias Ugelvik <uglemat@gmail.com>\nRyan Gonzalez <rymg19@gmail.com>\nDavid Gros <dngros@live.com>\nAndrea D'Amore <anddam@brapi.net>\nJames Elías <jamiees2@gmail.com>\nanula <anula.szy@gmail.com>\nJay Tuckey <jay.tuckey@gmail.com>\nAlexander Steffen <devel.20.webmeister@spamgourmet.com>\nAchim Herwig <achim.herwig@wodca.de>\nRandy Syring <randy@thesyrings.us>\nLucas Inojosa <lucas.inojosa@gmail.com> Lucas Inojosa <linojosa@lalinojosa.home>\nadam j hartz <adam@smatz.net> adam j hartz <hz@mit.edu>\nNickolay Bukreyev <buknik95@yandex.ru>\nAlexey <forestbiiird@gmail.com>\nAlexandre Ferland <aferlandqc@gmail.com> admiralobvious <aferlandqc@gmail.com>\nMarvin Steadfast <marvin@xsteadfastx.org>\nAaron Meurer <asmeurer@gmail.com>\nMatteo Bertini <matteo@naufraghi.net>\nanatoly techtonik <techtonik@gmail.com>\nAaronV77 <aaronvaloroso77@gmail.com>\nErick Tucto <erick.tucto@outlook.com>\nTyler Goodlet <tgoodlet@gmail.com>\nPaul Barton <pablo.barton@gmail.com> Pablo Barton <pablo.barton@gmail.com>\n74th <site@74th.tech>\nMickaël Schoentgen <contact@tiger-222.fr>\nSteven Silvester <steven.silvester@ieee.org>\nRobert DeFriesse <Robert.DEFRIESSE@3ds.com>\nJustin Calamari <justin.calamari@gmail.com>\nThomas Marquart <thomas@marquart.se>\nBenjamin Pollack <benjamin@bitquabit.com>\nSardorbek Imomaliev <sardorbek.imomaliev@gmail.com>\nJakub Nowak <jakub.jakub.nowak@gmail.com>\nselepo <po.lenhoff@gmail.com>\nFabien Dubosson <fabien.dubosson@gmail.com>\nKale Kundert <kale@thekunderts.net>\nAndrés García García <a.garcia230395@gmail.com> Ad115 <a.garcia230395@gmail.com>\nSean Farley <sean@farley.io>\nMarduk Bolaños <mardukbp@mac.com>\nMarius van Niekerk <marius.v.niekerk@gmail.com>\nStefano Rivera <github@rivera.za.net> Stefano Rivera <stefano@rivera.za.net>\nLie Ryan <lie.1296@gmail.com>\nJan Schulz <jasc@gmx.net>\nSamuel Dion-Girardeau <samuel.diongirardeau@gmail.com>\nMichael Droettboom <mdboom@gmail.com>\nguillearch <gcastellano@protonmail.com>\njavValverde <jav.valve@gmail.com>\nShahin <me@5hah.in>\nNico Lehmann <nlehmann@dcc.uchile.cl>\nSebastian Wagner <sebix@sebix.at>\nyuqing <waywardson@126.com> yuqing <yuqing@cmcm.com>\nRahiel Kasim <rahielkasim@gmail.com>\nSanketDG <sanketdasgupta@gmail.com>\nMark Bestley <37385+bestlem@users.noreply.github.com>\nDavid <auscompgeek@users.noreply.github.com>\nDanmou <dmrtzn@gmail.com>\nNiklas Hambüchen <mail@nh2.me>\nSébastien Pierre <sebastien.pierre@gmail.com>\nEddie Peters <edward.paul.peters@gmail.com> Eddie Peters <eddie@dinogalactic.com>\nshadow-light <42055707+shadow-light@users.noreply.github.com>\nJan Chren <dev.rindeal@gmail.com>\nSamuel Lotz <samuel.lotz@salotz.info>\nJerzy Drozdz <jerzy.drozdz@gmail.com>\nomjadas <omja.das@gmail.com>\nJeremy Schlatter <jeremy@jeremyschlatter.com>\nSamuel Dion-Girardeau <samueldg@users.noreply.github.com>\nOliver Bestwalter <oliver@bestwalter.de>\nIvan Ogasawara <ivan.ogasawara@gmail.com>\nMark Wiebe <mwwiebe@gmail.com>\nNathan Hoad <nathan@getoffmalawn.com>\nEric Dill <edill@bnl.gov>\nneruok <codywentz@gmail.com> neruok <6155000+neruok@users.noreply.github.com>\nDomenic Barbuzzi <dbarbuzzi@gmail.com>\nmetamind <metamind@Metafoot>\nQiushi Pan <qiu.gits@gmail.com>\njosh <josh.sarver@gmail.com>\nTobalJackson <Tobaljackson@gmail.com>\nGreg Thole <gthole@gmail.com>\nMin RK <benjaminrk@gmail.com>\nNicolas Avrutin <rasputin@google.com>\nKevin Yokley <kyokley2@gmail.com>\nOllie Ford <me@ojford.com>\nMichał Zając <emzajac@gmail.com> zajaczajac <michal.zajac@swmansion.com>\nEmre Ates <ates@bu.edu>\nRomain Bignon <romain@symlink.me>\nOwen Campbell <owen.campbell@tanti.org.uk>\nSteven Kryskalla <skryskalla@gmail.com>\ncclauss <cclauss@me.com>\nKe Zhang <kezhang@bnl.gov> ke-zhang-rd <kezhang@bnl.gov>\nLászló Vaskó <vlaci@balabit.hu>\nAllan Crooks <allan.crooks@sixtyten.org>\nmicimize <rosenthalm93@gmail.com>\nChris Lasher <chris.lasher@gmail.com>\nEdmund Miller <edmund.a.miller@protonmail.com>\nGabriel Vogel <gabriel.vogel@online.de>\nanki <anki@code.email>\nFaris A Chugthai <20028782+farisachugthai@users.noreply.github.com>\nAsaf Fisher <asaffisher@icloud.com>\nGabriele N. Tornetta <P403n1x87@users.noreply.github.com>\ncmidkiff87 <39914727+cmidkiff87@users.noreply.github.com>\njbw3 <jbw3@users.noreply.github.com>\nNaveen <172697+naveensrinivasan@users.noreply.github.com>\nBlake Ramsdell <blaker@gmail.com>\nJamesParrott <80779630+JamesParrott@users.noreply.github.com>\njyn <github@jyn.dev>\nDan Allan <dallan@bnl.gov>\nNed Letcher <nletcher@gmail.com>\nZach Crownover <zachary.crownover@gmail.com>\nMiguel de Val-Borro <miguel@archlinux.net>\nHirotomo Moriwaki <hirotomo.moriwaki@gmail.com>\nPhil Elson <pelson.pub@gmail.com>\nErin Call <erincall@github.com>\nTrevor Bekolay <tbekolay@gmail.com>\nTzu-ping Chung <uranusjr@gmail.com>\nAndrew Toskin <andrew@tosk.in>\ntorgny <torgny.andersson@gmail.com>\nWilliam Woodall <william@osrfoundation.org>\nariel faigon <github.2009@yendor.com>\nNigel Tea <nigelbtea@gmail.com>\nMark Szumowski <mark@szumowski.net>\nThe Gitter Badger <badger@gitter.im>\nCameron Bates <cameron.r.bates@gmail.com>\nKermit Alexander II <tuxfreak@tuxfamily.org>\nRichard Kim <emacs18@gmail.com>\nBrian S. Corbin <brian.corbin@pokitdok.com>\nErez Shinan <erezshin+git@gmail.com>\nNakada Takumi <usrNeko@kerorin.local>\nRoss Nomann <rossnomann@protonmail.com>\neyalzek <eyal.ez@gmail.com>\nPedro Rodriguez <ski.rodriguez@gmail.com>\nEric Harris <ericmharris@gmail.com>\nAustin Bingham <austin.bingham@gmail.com>\njlunz <lunz8748@ak.(none)>\ndragon788 <dragon788@users.noreply.github.com>\nJonathan Hogg <jonathan@significant-whitespace.com>\nAndrei <fizicars@gmail.com>\nDaniel Hahler <git@thequod.de>\nMark Harfouche <mark.harfouche@gmail.com>\nCarol Willing <carolcode@willingconsulting.com>\nKilte Leichnam <nwotnbm@gmail.com>\nRaniere Silva <raniere@rgaiacs.com>\nThomas Kluyver <takowl@gmail.com>\nDonne Martin <donne.martin@gmail.com>\nAlexey Shrub <ashrub@yandex.ru>\nJean-Christophe Fillion-Robin <jchris.fillionr@kitware.com>\nCharlie Arnold <charlie.arnold@gmail.com>\nNate Tangsurat <e4r7hbug@gmail.com>\nMichael Ensslin <michael@ensslin.cc>\ndbxnr <dbxnr@users.noreply.github.com>\nsushobhana <sushobhanapatra@gmail.com>\nFlorian Mounier <florian.mounier@kozea.fr>\nGlen Zangirolami <glenbot@gmail.com>\nadamheins <adam@pebble.com>\nJoseph Paul <mail@jsph.pl>\nDaniel Milde <daniel@milde.cz>\nKatriel Cohn-Gordon <me@katriel.co.uk>\nChad Kennedy <chadkennedyonline@users.noreply.github.com>\nstonebig <stonebig34@gmail.com>\nRonny Pfannschmidt <opensource@ronnypfannschmidt.de>\nTroy de Freitas <9503857+ntdef@users.noreply.github.com>\nRodrigo Oliveira <rodrigo.oliveira@byne.com.br>\nDaniel Smith <malorian@me.com>\nNils ANDRÉ-CHANG <nils@nilsand.re>\nchengxuncc <chengxuncc@gmail.com>\nnedsociety <nedsociety@gmail.com>\nfanosta <github@nageler.org>\nDavid Kalliecharan <david@david.science>\nSylvain Corlay <sylvain.corlay@gmail.com>\nMarcio Mazza <marciomazza@gmail.com>\nManor Askenazi <manor@biomedical.hosting>\nStefane Fermigier <sf@fermigier.com>\nswedneck <40505480+swedneck@users.noreply.github.com>\nFeng Tian <fengttt@gmail.com>\npaugier <pierre.augier@univ-grenoble-alpes.fr>\nWendell CTR Turner <Wendell.CTR.Turner@faa.gov>\nWill Shanks <willshanks@us.ibm.com>\nDominic Ward <deeuu@users.noreply.github.com>\nLeandro Emmanuel Reina Kiperman <leandro.kip93@gmail.com>\nHenré Botha <henrebotha@gmail.com>\nAneesh Durg <aneeshdurg17@gmail.com>\ncolons <colons@colons.co>\nyggdr <github@schukraft.org>\nGao, Xiang <qasdfgtyuiop@gmail.com>\nTejasvi S Tomar <45873379+tejasvi@users.noreply.github.com>\nAdam Schwalm <adamschwalm@gmail.com>\nNate Simon <njsimon10@gmail.com>\njmoranos <48717183+jmoranos@users.noreply.github.com>\nWalter A. Boring IV <waboring@hemna.com>\nbhawkins <1729052+bhawkins@users.noreply.github.com>\nJackofSpades707 <JackofSpades707@users.noreply.github.com>\nLuiz Antonio Lazoti <luizlazoti@hotmail.com>\nfrancium <francium@users.noreply.github.com>\nFranzAtGithub <62662135+FranzAtGithub@users.noreply.github.com>\nIJR222 <isaacjohnr22@gmail.com>\nShanmukha Vishnu <50124557+iam-shanmukha@users.noreply.github.com>\nAli Uneri <auneri@users.noreply.github.com>\nEleni E <Contessina@users.noreply.github.com>\nKaarel Pärtel <kaarelp2rtel@gmail.com>\nMichael Ramsey <mike@hackerdise.me>\ncircuit10 <heath.mitchell27@gmail.com>\nRyan Delaney <1139517+rpdelaney@users.noreply.github.com>\nE Pluribus Unum <90979253+Playfloor@users.noreply.github.com>\nylmrx <ylmrx@users.noreply.github.com>\nHierosme <56162977+Hierosme@users.noreply.github.com>\nKyllingene <69094702+Kyllingene@users.noreply.github.com>\nzzj <29055749+zjzh@users.noreply.github.com>\nDaniel <291111@uwr.edu.pl>\nGaner <34655998+GanerCodes@users.noreply.github.com>\nmattmc3 <mattmc3@gmail.com>\nEvan Hubinger <evanjhub@gmail.com>\nItalo Cunha <cunha@users.noreply.github.com>\nTimmy Welch <timmy@narnian.us>\nHannes Römer <16097755+hroemer@users.noreply.github.com>\njgart <47760695+jgarte@users.noreply.github.com>\nMichael Panitz (at Cascadia College) <mike.panitz@gmail.com>\nTim Gates <tim.gates@iress.com>\namukher3 <51139088+amukher3@users.noreply.github.com>\nAshish Kurmi <100655670+boahc077@users.noreply.github.com>\nJustin <rinkaandchan@outlook.com>\nyotamolenik <39271599+yotamolenik@users.noreply.github.com>\naustin-yang <110882105+IAustin-YangI@users.noreply.github.com>\nMarco Rubin <20150305+Rubo3@users.noreply.github.com>\nQyriad <qyriad@gmail.com>\nTobias Becker <nullpointeracception@gmail.com>\nAkshayWarrier <58233418+AkshayWarrier@users.noreply.github.com>\nThomas Hess <tux12345@justmail.de>\nkouhe3 <25522053+kouhe3@users.noreply.github.com>\nHackTheOxidation <86469309+HackTheOxidation@users.noreply.github.com>\nCosine Chen <cosine_chen@163.com>\nmgunyho <20118130+mgunyho@users.noreply.github.com>\nShalokShalom <shalokshalom@protonmail.ch>\nWilfried Pollan <gitwipo@users.noreply.github.com>\nJacqueline Leykam <me@jacqueline.id.au>\nJoshix-1 <57299889+Joshix-1@users.noreply.github.com>\nNathan Monfils <nathanmonfils@gmail.com>\nAirat Makhmutov <108220148+rautyrauty@users.noreply.github.com>\nMatthieu LAURENT <matthieu.laurent69@protonmail.com>\nDaniel Saunders <dsaunders410@gmail.com>\nAndrew <andrew222651@fastmail.com>\nl-no <22138751+l-no@users.noreply.github.com>\namacfie-tc <91503417+amacfie-tc@users.noreply.github.com>\nlunrenyi <87307989+lunrenyi@users.noreply.github.com>\nSpencer Bliven <spencer.bliven@gmail.com>\nNiraj Kulkarni <kulkarniniraj14@gmail.com>\nAidan Courtney <aidanfc97@gmail.com>\nMax Nordlund <max.nordlund@gmail.com>\nShawn Wallace <yungwallace@live.com>\nFaidon Liambotis <paravoid@debian.org>\nJueun Lee <seirios0107@gmail.com>\nSimon Billinge <sbillinge@users.noreply.github.com>\nBala <kumaran.4353@gmail.com>\ngoodboy <tgoodlet@users.noreply.github.com>\nAtsushi Morimoto <atsushi.morimoto@dena.com>\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.001953125,
          "content": "default_language_version:\n    # force all unspecified python hooks to run python3\n    python: python3.13\n\n#ci:\n#  autofix_prs: false\n\nrepos:\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    # Ruff version.\n    rev: 'v0.8.3'\n    hooks:\n      - id: ruff\n        args: [., --fix, --exit-non-zero-on-fix]\n        pass_filenames: false\n      - id: ruff-format\n        args: [\"xonsh\", \"xontrib\", \"tests\", \"xompletions\"]\n        pass_filenames: false\n\n  - repo: https://github.com/pre-commit/mirrors-mypy\n    rev: 'v1.13.0'  # Use the sha / tag you want to point at\n    hooks:\n      - id: mypy\n        pass_filenames: false\n        additional_dependencies:\n          - types-ujson\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: trailing-whitespace\n        exclude: |\n          (?x)^(\n              docs/_static/.+\n          )$\n      - id: check-case-conflict\n      - id: check-merge-conflict\n      - id: check-yaml\n      - id: check-toml\n      - id: check-added-large-files\n"
        },
        {
          "name": "AUTHORS.rst",
          "type": "blob",
          "size": 5.107421875,
          "content": "All of the people who have made at least one contribution to xonsh.\nAuthors are sorted by number of commits.\n\n* Anthony Scopatz\n* Adam Hartz\n* Gil Forsyth\n* Morten Enemark Lund\n* Konstantinos Tsakiltzidis\n* Noortheen Raja\n* Jamie Bliss\n* a\n* Hugo Wang\n* David Strobach\n* Bob Hyman\n* anki-code\n* BlahGeek\n* pre-commit-ci[bot]\n* Daniel Shimon\n* Gyuri Horak\n* Jean-Benoist Leger\n* christopher\n* Klaus Alexander Seistrup\n* Leonardo Santagada\n* Burak Yiğit Kaya\n* Matthias Bussonnier\n* Aaron Griffin\n* Peter Ye\n* Rob Brewer\n* virus\n* Sagar Tewari\n* Gordon Ball\n* Eadaen1\n* Konstantin Molchanov\n* Guillaume Leclerc\n* Travis Shirk\n* Carmen Bianca Bakker\n* Danny Sepler\n* Joel Gerber\n* vaaaaanquish\n* Bernardas Ališauskas\n* David Dotson\n* Derek Thomas\n* con-f-use\n* VHarisop\n* JohnLunzer\n* Paul Goelz\n* Jason R. Coombs\n* cryzed\n* Frank Sachsenheim\n* Kurtis Rader\n* Brian Visel\n* cafehaine\n* Andrew Hundt\n* Jonathan Slenders\n* Justin Moen\n* Raphael Das Gupta\n* Caleb Hattingh\n* Evgeny\n* Stephan Fitzpatrick\n* dev2718\n* Will S\n* dependabot[bot]\n* K.-Michael Aye\n* halloleo\n* Will Wykeham\n* Oleh Prypin\n* Brian Skinn\n* Wendell Turner\n* Alessio Bogon\n* Yohei Tamura\n* Maximilian Köhl\n* Alexander Sosedkin\n* doronz88\n* Cody Scott\n* Jake Hedman\n* traverseda\n* Andre Weltsch\n* Jeremy Donahue\n* Raphael Gaschignard\n* Nathan Goldbaum\n* mel\n* Jared Crawford\n* Mike Crowe\n* Vasilis Gerakaris\n* Angus Hollands\n* JuanPablo\n* Ollie Terrance\n* Marcel Bollmann\n* mdraw\n* Mattias Ugelvik\n* Ryan Gonzalez\n* David Gros\n* Andrea D'Amore\n* James Elías\n* anula\n* Jay Tuckey\n* Alexander Steffen\n* Achim Herwig\n* Randy Syring\n* Lucas Inojosa\n* adam j hartz\n* Nickolay Bukreyev\n* Alexey\n* Alexandre Ferland\n* Marvin Steadfast\n* Aaron Meurer\n* Matteo Bertini\n* anatoly techtonik\n* AaronV77\n* Erick Tucto\n* Tyler Goodlet\n* Paul Barton\n* 74th\n* Mickaël Schoentgen\n* Steven Silvester\n* Robert DeFriesse\n* Justin Calamari\n* Thomas Marquart\n* Benjamin Pollack\n* Sardorbek Imomaliev\n* Jakub Nowak\n* selepo\n* Fabien Dubosson\n* Kale Kundert\n* Andrés García García\n* Sean Farley\n* Marduk Bolaños\n* Marius van Niekerk\n* Stefano Rivera\n* Lie Ryan\n* Jan Schulz\n* Samuel Dion-Girardeau\n* Michael Droettboom\n* guillearch\n* javValverde\n* Shahin\n* Nico Lehmann\n* Sebastian Wagner\n* yuqing\n* Rahiel Kasim\n* SanketDG\n* Mark Bestley\n* David\n* Danmou\n* Niklas Hambüchen\n* Sébastien Pierre\n* Eddie Peters\n* shadow-light\n* Jan Chren\n* Samuel Lotz\n* Jerzy Drozdz\n* omjadas\n* Jeremy Schlatter\n* Samuel Dion-Girardeau\n* Oliver Bestwalter\n* Ivan Ogasawara\n* Mark Wiebe\n* Nathan Hoad\n* Eric Dill\n* neruok\n* Domenic Barbuzzi\n* metamind\n* Qiushi Pan\n* josh\n* TobalJackson\n* Greg Thole\n* Min RK\n* Nicolas Avrutin\n* Kevin Yokley\n* Ollie Ford\n* Michał Zając\n* Emre Ates\n* Romain Bignon\n* Owen Campbell\n* Steven Kryskalla\n* cclauss\n* Ke Zhang\n* László Vaskó\n* Allan Crooks\n* micimize\n* Chris Lasher\n* Edmund Miller\n* Gabriel Vogel\n* anki\n* Faris A Chugthai\n* Asaf Fisher\n* Gabriele N. Tornetta\n* cmidkiff87\n* jbw3\n* Naveen\n* Blake Ramsdell\n* JamesParrott\n* jyn\n* Dan Allan\n* Ned Letcher\n* Zach Crownover\n* Miguel de Val-Borro\n* Hirotomo Moriwaki\n* Phil Elson\n* Erin Call\n* Trevor Bekolay\n* Tzu-ping Chung\n* Andrew Toskin\n* torgny\n* William Woodall\n* ariel faigon\n* Nigel Tea\n* Mark Szumowski\n* The Gitter Badger\n* Cameron Bates\n* Kermit Alexander II\n* Richard Kim\n* Brian S. Corbin\n* Erez Shinan\n* Nakada Takumi\n* Ross Nomann\n* eyalzek\n* Pedro Rodriguez\n* Eric Harris\n* Austin Bingham\n* jlunz\n* dragon788\n* Jonathan Hogg\n* Andrei\n* Daniel Hahler\n* Mark Harfouche\n* Carol Willing\n* Kilte Leichnam\n* Raniere Silva\n* Thomas Kluyver\n* Donne Martin\n* Alexey Shrub\n* Jean-Christophe Fillion-Robin\n* Charlie Arnold\n* Nate Tangsurat\n* Michael Ensslin\n* dbxnr\n* sushobhana\n* Florian Mounier\n* Glen Zangirolami\n* adamheins\n* Joseph Paul\n* Daniel Milde\n* Katriel Cohn-Gordon\n* Chad Kennedy\n* stonebig\n* Ronny Pfannschmidt\n* Troy de Freitas\n* Rodrigo Oliveira\n* Daniel Smith\n* Nils ANDRÉ-CHANG\n* chengxuncc\n* nedsociety\n* fanosta\n* David Kalliecharan\n* Sylvain Corlay\n* Marcio Mazza\n* Manor Askenazi\n* Stefane Fermigier\n* swedneck\n* Feng Tian\n* paugier\n* Wendell CTR Turner\n* Will Shanks\n* Dominic Ward\n* Leandro Emmanuel Reina Kiperman\n* Henré Botha\n* Aneesh Durg\n* colons\n* yggdr\n* Gao, Xiang\n* Tejasvi S Tomar\n* Adam Schwalm\n* Nate Simon\n* jmoranos\n* Walter A. Boring IV\n* bhawkins\n* JackofSpades707\n* Luiz Antonio Lazoti\n* francium\n* FranzAtGithub\n* IJR222\n* Shanmukha Vishnu\n* Ali Uneri\n* Eleni E\n* Kaarel Pärtel\n* Michael Ramsey\n* circuit10\n* Ryan Delaney\n* E Pluribus Unum\n* ylmrx\n* Hierosme\n* Kyllingene\n* zzj\n* Daniel\n* Ganer\n* mattmc3\n* Evan Hubinger\n* Italo Cunha\n* Timmy Welch\n* Hannes Römer\n* jgart\n* Michael Panitz (at Cascadia College)\n* Tim Gates\n* amukher3\n* Ashish Kurmi\n* Justin\n* yotamolenik\n* austin-yang\n* Marco Rubin\n* Qyriad\n* Tobias Becker\n* AkshayWarrier\n* Thomas Hess\n* kouhe3\n* HackTheOxidation\n* Cosine Chen\n* mgunyho\n* ShalokShalom\n* Wilfried Pollan\n* Jacqueline Leykam\n* Joshix-1\n* Nathan Monfils\n* Airat Makhmutov\n* Matthieu LAURENT\n* Daniel Saunders\n* Andrew\n* l-no\n* amacfie-tc\n* lunrenyi\n* Spencer Bliven\n* Niraj Kulkarni\n* Aidan Courtney\n* Max Nordlund\n* Shawn Wallace\n* Faidon Liambotis\n* Jueun Lee\n* Simon Billinge\n* Bala\n* goodboy\n* Atsushi Morimoto\n"
        },
        {
          "name": "CHANGELOG.rst",
          "type": "blob",
          "size": 211.4775390625,
          "content": "====================\nXonsh Change Log\n====================\n\n.. current developments\n\nv0.19.0\n====================\n\n**Added:**\n\n* env: Added ``$XONSH_SUPPRESS_WELCOME`` variable to suppress the welcome message.\n\n**Changed:**\n\n* replaced `case_insensitive_dictionary` dependency with local\n  `CaseInsensitiveDict` class\n\n**Fixed:**\n\n* parsers: fix deprecation warnings triggered on python3.13\n* Fix DeprecationWarning while initializing Expression\n\n**Authors:**\n\n* Gil Forsyth\n* pre-commit-ci[bot]\n* Evgeny\n* doronz88\n* JamesParrott\n* Jueun Lee\n* Simon Billinge\n* Bala\n\n\n\nv0.18.4\n====================\n\n**Changed:**\n\n* Now SystemExit that invoked from callable alias follows to exiting from callable alias instead of exiting the entire shell.\n\n**Fixed:**\n\n* Built-in commands such as `xonfig -h` and `xontrib -h` no longer cause the shell to exit.\n* Fixed incorrect quoting behaviour in `activate.xsh` for virtualenv version 20.26.6.\n\n**Authors:**\n\n* anki-code\n* pre-commit-ci[bot]\n* Peter Ye\n* Max Nordlund\n* Shawn Wallace\n* Faidon Liambotis\n\n\n\nv0.18.3\n====================\n\n**Added:**\n\n* executables: Added ``locate_relative_path`` functionality to ``locate_file``.\n\n**Changed:**\n\n* ``$MULTILINE_PROMPT`` changed from ``'.'`` to ``' '`` (space)\n  to have an ability to copy the multiline functions from shell history without deleting the dot manually (#5624 #5634).\n\n**Fixed:**\n\n* Fixed ``$AUTO_CD`` regress after previous refactoring.\n* Partial fix for \"Bad file descriptor\" in case of callable alias with execx invocation inside e.g. ExecAlias (#5645).\n* completer: Fixed exception when in python-only completion context (#5632).\n* Fixed exception \"object has no attribute readlines\" in case of redirect callable alias output.\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* pre-commit-ci[bot]\n* Aidan Courtney\n\n\n\nv0.18.2\n====================\n\n**Fixed:**\n\n* Fixed wrong order of directories in PATH (#5606 #5605). Please do not use 0.18.0 and 0.18.1 versions.\n\n**Authors:**\n\n* anki-code\n\n\n\nv0.18.1\n====================\n\n**Authors:**\n\n* Gil Forsyth\n\n\n\nv0.18.0\n====================\n\n**Added:**\n\n* Added ``@aliases.return_command`` decorator to eliminate the need to wrap the logic for modifying command into callable alias wrapper (#5473).\n* Tutorial: added example of callable environment variable.\n* tools: added ``mkdir`` to ``xonsh.tools.chdir`` e.g. ``with chdir('/tmp/new', mkdir=True): pass``.\n* env: Added ``$XONSH_MODE`` variable to detect the current execution mode:\n  ``interactive``, ``script_from_file``, ``source``, ``single_command``, ``script_from_stdin``.\n* Builtin: ``exit`` can return exit code e.g. ``exit 71``.\n* builtin: added ``__xonsh__.imp`` to have an ability to import and use modules immediately in one line\n  e.g. ``__xonsh__.json.loads('{}')``.\n  In the future ``__xonsh__`` will have short notation ``@`` and the line will looks more elegant ``@.imp.json.loads('{}')``.\n* builtins: Added color to printx e.g. ``printx('Good', color='GREEN')``.\n* aliases: Added ability to set multiple decorator aliases e.g. ``j = $(@json @noerr echo '{}')``.\n* Created ``xonsh.api`` to use xonsh functionality in pure python code and downstream projects (#5383 #5538).\n  It's usable but don't treat this serios because it's mostly to move some functions into distinct\n  submodule to reflect the intention to have the API. We need review and improvements here.\n\n**Changed:**\n\n* New executable resolving method was introduced and the commands_cache usages were replaced in the key places. As result we expect speed up in xonsh startup, reducing lagging during typing in prompt and speed ups during the commands execution (#5544 by @anki-code).\n* ``COLOR_RESULTS`` switched to ``False`` for non-interactive command case to improve speed in default behavior (#5562).\n* main: Importing sqlite became optional.\n* prompt: Switching to prompt_toolkit in edge case of sending stdin to interactive mode (#5462 #5517).\n* Rename: ``SpecModifier``, ``xthread``, ``xunthread`` renamed to ``DecoratorAlias``, ``@thread``, ``@unthread`` to support idea that\n  spec modifier is like a Python decorator.\n* Big refactoring of internal modules structure to give clear understanding of internal xonsh components (#5538).\n  E.g. if you have ``import xonsh.jobs`` convert this to ``import xonsh.procs.jobs``.\n  This kind of refactoring occurs once per many years.\n\n**Deprecated:**\n\n* Starting from this release we notify that in the future we will not recommend to use ``xonsh.procs.run_subproc``\n  and ``xonsh.built_ins.subproc_*`` functions for downstream projects because of #5383.\n  We will develop ``xonsh.api`` as alternative.\n\n**Removed:**\n\n* xontrib: Do not autoload xontribs in ``xonsh --no-rc`` mode.\n\n**Fixed:**\n\n* Callable alias: fixed capturing stdout in case of redirect e.g. `a > file` (#5527).\n* Commands Cache: Fixed cache update logic that lead to lagging during typing.\n* Replaced deprecated `sys.last_type, sys.last_value, sys.last_traceback` with `sys.last_exc`\n* Fixed ``history gc`` invocation failing when ``sqlite`` history backend is used.\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* pre-commit-ci[bot]\n* Jason R. Coombs\n* lunrenyi\n* Spencer Bliven\n* Niraj Kulkarni\n\n\n\nv0.17.0\n====================\n\n**Added:**\n\n* Added section \"Use the Nix Package manager with Xonsh\" to \"Platform-specific tips and tricks\".\n* Added ``env.detype_all()`` to get all available variables that is possible to detype.\n* Reading stop signals from the process and update the process state (#5361).\n* Added support of NixOS core tools in ``predict_threadable``.\n* Added catching an exceptions during load a history backend to avoid shell exiting e.g. on permission error.\n* Added catching an exception when cache file is not writable.\n* Added FuncAlias to process callable aliases.\n* Added alias name printing in case of exception in alias.\n* Saving history in case of any type of exiting the shell.\n* Added catching ChildProcessError in jobs. Avoiding hanging aliases in some cases.\n* Added xonsh support into Jupytext project! Jupytext is to store Jupyter notebooks as a plain text documents.\n* Now last executed CommandPipeline is available in ``__xonsh__.last``.\n* Added ``xonsh --no-env`` option to run xonsh without inheriting the environment variables. Now by running ``xonsh --no-rc --no-env`` you have pure xonsh session.\n* Added thread class, name, func and alias names to thread exception for easy understanding the source of issue.\n* Added shortcut ``-st`` for ``--shell-type``.\n* Saving history on SIGINT. Development tools like PyCharm send SIGINT before killing the run\n  and doing this is the last chance to save history.\n* Added ``spec.raise_subproc_error`` for fine-tuning exceptions via ``SpecModifierAlias`` (#5494).\n* Added ``$XONSH_SUBPROC_OUTPUT_FORMAT`` to switch the way to return the output lines.\n  Default ``stream_lines`` to return text. Alternative ``list_lines`` to return\n  the list of lines. Now you can run ``du $(ls)`` without additional stripping.\n  Also supported custom lambda function to process lines (if you're looking for\n  alternative to bash IFS).\n* Added ``xthread`` and ``xunthread`` aliases to force command running as threaded and unthreaded.\n* Added ``SpecModifierAlias`` class to have an ability to create alias that modifies spec before run e.g. ``xthread`` alias.\n* Added mode ``$XONSH_TRACE_SUBPROC=3`` to show more information about pipeline.\n* Added \"Callable alias and capturing\" to the tutorial.\n* Xonfig: show sensitive env variables that could affect the shell behavior.\n* We started `Zulip Community <https://xonsh.zulipchat.com/join/hbvue5rimpdkwkdjuiqfs7tv/>`_ to publish news and chatting.\n\n**Changed:**\n\n* Minor cleanup of ``commands_cache``, unifying behavior across platforms.\n* Xonsh AppImage downgraded to Python 3.11. We need to resolve 3.12 parser support (5166) before upgrade.\n* Env variables completion: now use substring for search and then sort results by the position of substring and then alphabetically. PR 5388.\n* jobs: default representation changed to dict.\n* The CommandPipeline repr will not show descriptors by default. Use XONSH_DEBUG mode to see them.\n* Prompt: ``env_name`` will have yellow color by default.\n* Show ``root`` and ``@#`` in prompt if user is superuser.\n* Cleaning logic and functions around threading and capturing in ``procs/specs.py`` file.\n* Now the ending new line symbol ``\\n`` will be stripped from the single line output.\n  For ``$(whoami)`` you will get ``'user'`` instead of ``'user\\n'``.\n* ``$XONSH_TRACE_SUBPROC=2`` returns more useful details.\n* The home based ``~/.xonshrc`` will not be executed in non-interactive mode (#5491).\n\n**Removed:**\n\n* No longer is ``.`` implied for running commands on Windows. Instead the behavior is the same across platforms. Windows users will need to prefix ``./`` or ``.\\`` to run commands from the current directory (#5476).\n* Unpin prompt-toolkit version (#5438).\n\n**Fixed:**\n\n* Commands on Windows now honor the case as they appear on the file system (#5469).\n* Prevent exception on start up if ``dircolors`` util is wrong.\n* Fixed ``Bad file descriptor`` and I/O errors after running callable alias (#5435).\n* Fixed showing exception message in some cases.\n* Fixed empty stacktrace for CalledProcessError.\n* Fixed redirect with python substitution e.g. ``echo 1 > @('/tmp/file')`` is working now.\n* Fixed showing alias description using superhelp e.g. ``which?``.\n* Fixed ``xonsh -DVAR=VAL`` behavior: initiate env variables before shell initialization.\n* Fixed processing exit signals and exceptions (e.g. SIGHUP in #5381) to provide careful exiting with right exit code and TTY cleaning.\n* Fixed ``TypeError`` in xoreutils.\n* Fixed populating the return code for interrupted process.\n* Windows: fixed path to RC file in ``xonfig web``.\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* pre-commit-ci[bot]\n* Peter Ye\n* Jason R. Coombs\n* dependabot[bot]\n* doronz88\n* jyn\n* l-no\n* amacfie-tc\n\n\n\nv0.16.0\n====================\n\n**Added:**\n\n* Square brackets can now be used in command arguments without quotes (e.g. `echo a[b]`)\n* Add ``XONSH_BASH_PATH_OVERRIDE`` option (off-by-default) to override what is\n  returned by `xonsh.platform.bash_command`.\n* Added PATH.prepend(path) to add path to the beginning.\n\n**Changed:**\n\n* Xonsh AppImage now on Python 3.12 that works faster.\n* Xonsh AppImage: pinned prompt-toolkit version until fix upstream issue.\n* Builtin aliases (xontrib, history) switched to threadable mode.\n* EnvPath methods (append, remove, add, insert) prepare the path before action.\n* Replaced black formatter with `ruff-format <https://docs.astral.sh/ruff/>`_\n* ``source_foreign_fn`` now does not run subshells in interactive mode, so\n  associated RC files like ``zshrc`` and ``bashrc`` will not be auto-loaded on\n  sourcing.\n* Removed usage of deprecated ``cgi`` module\n\n**Removed:**\n\n* Removed ``ArgParserAlias.hook_pre_add_argument``, ``ArgParserAlias.hook_post_add_argument``.\n  Please use custom action instead to modify the argument options.\n* Removed deprecated module ``xonsh.proc``\n\n**Fixed:**\n\n* Fixed an issue with completions when using absolute paths to commands and having $UPDATE_COMPLETIONS_ON_KEYPRESS set to True. https://github.com/xonsh/xonsh/issues/5127\n* Jobs: fixed \"index out of range\" exception.\n* Expressions like ``2>1`` are now parsed correctly as Python code instead of being treated like special io-redirection operators.\n* Redirect tokens in quotes (e.g. \">\", \"2>\", \"2>1\") are now correctly passed to commands as regular arguments.\n* Fixed NotADirectoryError during load dircolors.\n* Fixed a bug that caused ``xonfig web`` to overwrite its own configuration file. See https://github.com/xonsh/xonsh/issues/5297\n* If an error is encountered while loading the xonshrc file, the traceback is now output as plain text rather than as a list of Tokens\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* pre-commit-ci[bot]\n* Peter Ye\n* dependabot[bot]\n* l-no\n\n\n\nv0.15.1\n====================\n\n**Fixed:**\n\n* pytest: Fix pytest collection starting at pytest>=8.1.0\n\n**Authors:**\n\n* doronz88\n* Daniel Saunders\n* Andrew\n\n\n\nv0.15.0\n====================\n\n**Added:**\n\n* `Atuin <https://atuin.sh/>`_ now has official support for xonsh. (Related PR: https://github.com/atuinsh/atuin/pull/1375)\n\n**Changed:**\n\n* Updated docs to reflect VS Code support for xonsh as the user's default shell.\n* Pinned prompt-toolkit version 3.0.29-3.0.40 to workaround upstream issue. More info in issue 5241.\n\n**Authors:**\n\n* anki-code\n* pre-commit-ci[bot]\n* Jason R. Coombs\n* dependabot[bot]\n* Matthieu LAURENT\n\n\n\nv0.14.4\n====================\n\n**Added:**\n\n* System clipboard can be fully disabled using ``$XONSH_USE_SYSTEM_CLIPBOARD``.\n\n**Authors:**\n\n* anki-code\n* pre-commit-ci[bot]\n* dependabot[bot]\n* Stefano Rivera\n* Nathan Monfils\n* JamesParrott\n* Airat Makhmutov\n\n\n\nv0.14.3\n====================\n\n**Added:**\n\n* Added ``on_pre_spec_run`` event.\n* Added ``on_post_spec_run`` event.\n\n**Fixed:**\n\n* ``xonsh`` now adds the user site packages directory to ``sys.path`` where\n  required for proper ``xontrib`` discovery\n\n**Authors:**\n\n* Gil Forsyth\n* pre-commit-ci[bot]\n* Jacqueline Leykam\n* Joshix-1\n\n\n\nv0.14.2\n====================\n\n**Fixed:**\n\n* history: fix json file permissions upon `sudo` (#5220)\n* ``cd`` with no arguments will always return to ``$HOME``\n* Correctly parse multi line foreign aliases\n* Upgrade Python version at the introduction (https://github.com/xonsh/xonsh/pull/5193)\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* pre-commit-ci[bot]\n* dependabot[bot]\n* doronz88\n* mgunyho\n* ShalokShalom\n* Wilfried Pollan\n\n\n\nv0.14.1\n====================\n\n**Added:**\n\n* Added ``history delete`` command to both the JSON and SQLite history backends allowing users to delete commands from history that matches a pattern.\n* Now you can become a sponsor to xonsh - https://github.com/sponsors/xonsh\n* Added preliminary support for Python v3.12\n\n**Changed:**\n\n* Always load rc files except that --norc is passed.\n* Unset the default line continuation environment variables (``$MULTILINE_PROMPT_PRE`` and ``$MULTILINE_PROMPT_POS``) to allow differentiating between user setting an empty value and not setting anything\n* Dropped support for Python v3.8\n\n**Fixed:**\n\n* This change fixes issue #4855, that is, rc files will be loaded in non-interactive mode.\n* platform: fix `BASH_COMPLETIONS_DEFAULT` on M1\n* Fix wrong verification for the simple output, introduced by PR5072\n\n**Authors:**\n\n* Noortheen Raja\n* anki-code\n* pre-commit-ci[bot]\n* Evgeny\n* doronz88\n* Ivan Ogasawara\n* HackTheOxidation\n* Cosine Chen\n\n\n\nv0.14.0\n====================\n\n**Added:**\n\n* key_bindings: map `escape-f` as another word completer for macOS\n* Added ``history pull`` command to SQLite history backend to pull the history from parallel sessions and add to the current session.\n* Add support for `Semantic Prompt <https://gitlab.freedesktop.org/Per_Bothner/specifications/blob/master/proposals/semantic-prompts.md>`_ for line continuations in multiline prompts via two environment variables: ``$MULTILINE_PROMPT_PRE`` (e.g., ``\\x01\\x1b]133;P;k=c\\x07\\x02``), and ``$MULTILINE_PROMPT_POS`` (e.g., ``\\x01\\x1b]133;B\\x07\\x02``) that are inserted before/after each continuation line 'dots' block to mark input\n* Wheels for Python 3.11 are part of the automated release action\n* Added ``chdir`` to ``xonsh.tools``. This allows to use ``with chdir(\"dir\"):`` to run commands block in the certain directory without manually cd-ing.\n* Display the current branch of Fossil VCS checkouts in the prompt,\n  similar to git and hg.\n* Added link to xonsh on Mastodon - https://mastodon.online/@xonsh\n* xontrib load: added option ``-s`` to skip warning about not installed xontribs.\n\n**Changed:**\n\n* Altered documentation for xonshrc to remove Python REPL prompts so that you can copy the code without having to edit it.\n* xonsh AppImage - bumped python to 3.11\n* The prompt end character switched to ``@``.\n* The `command not found` error will show the ``repr(cmd)`` to uncover the cases when the command name has ``\\n``, ``\\t`` or not visible color codes and raises the error.\n* ``abbrevs`` xontrib transferred to `xontrib-abbrevs <https://github.com/xonsh/xontrib-abbrevs>`_.\n* ``bashisms`` xontrib transferred to `xontrib-bashisms <https://github.com/xonsh/xontrib-bashisms>`_.\n* ``free_cwd`` xontrib transferred to `xontrib-free-cwd <https://github.com/xonsh/xontrib-free-cwd>`_.\n* ``whole_word_jumping`` xontrib transferred to `xontrib-whole-word-jumping <https://github.com/xonsh/xontrib-whole-word-jumping>`_.\n* ``fish_completer`` xontrib transferred to `xontrib-fish-completer <https://github.com/xonsh/xontrib-fish-completer>`_.\n* ``vox``, ``autovox``, ``voxapi`` xontribs transferred to `xontrib-vox <https://github.com/xonsh/xontrib-vox>`_.\n* ``pdb``, ``xog`` xontribs transferred to `xontrib-debug-tools <https://github.com/xonsh/xontrib-debug-tools>`_.\n\n**Fixed:**\n\n* Fixed xpip alias for xonsh AppImage.\n* Fixed missing ``webconfig/js/xonsh_sticker.svg`` in ``xonfig web``.\n* update load_xontrib pytest fixture to handle auto-loaded xontribs\n* Suppress subprocess traceback on exception in case ``$XONSH_SHOW_TRACEBACK=False`` with ``$RAISE_SUBPROC_ERROR=True``.\n* Improve the error message when ``$RAISE_SUBPROC_ERROR`` is set to True.\n* Fixed xontrib-jupyter to work in JupyterLab and terminal-based `Euporie <https://github.com/joouha/euporie>`_ environment.\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* pre-commit-ci[bot]\n* Evgeny\n* Mark Bestley\n* Samuel Dion-Girardeau\n* doronz88\n* Ivan Ogasawara\n* Tobias Becker\n* AkshayWarrier\n* Thomas Hess\n* kouhe3\n\n\n\nv0.13.4\n====================\n\n**Added:**\n\n* tests for methods changed in tools.py (is_tok_color_dict)\n* ``$XDG_CACHE_HOME``, ``$XONSH_CACHE_DIR`` are now available inside ``Xonsh``\n* #2455 Add `on_command_not_found` event, fired when a command is not found.\n\n**Changed:**\n\n* is_str_str_dict changed to check for Token:style dict\n\n**Removed:**\n\n* ``$COMMANDS_CACHE_SIZE_WARNING`` is removed. When ``$COMMANDS_CACHE_SAVE_INTERMEDIATE`` is enabled,\n  the cache file size is optimized.\n\n**Fixed:**\n\n* #4668 Fix ptk completion stacking when auto-suggest is on and no normal completions are generated.\n* $XONSH_STYLE_OVERRIDES cannot be assigned dict of {Token: str} #4375\n* commands_cache: add a configurable value to disable cache. useful for running scripts\n* fixed stale results when ``$COMMANDS_CACHE_SAVE_INTERMEDIATE`` is enabled.\n*  #4951 Fix gitstatus prompt when rebasing\n* fixed using aliases to override commands without the file extension on Windows\n* #3279 Add `XONSH_HISTORY_IGNORE_REGEX` support. You can specify a regular\n  expression in the environment variable `XONSH_HISTORY_IGNORE_REGEX` and any\n  command that matches the expression will not be added to the history.\n\n**Authors:**\n\n* Noortheen Raja\n* pre-commit-ci[bot]\n* Vasilis Gerakaris\n* Lie Ryan\n* Blake Ramsdell\n* Justin\n* yotamolenik\n* austin-yang\n* Marco Rubin\n* Qyriad\n\n\n\nv0.13.3\n====================\n\n**Fixed:**\n\n* ``pygments`` startup crash when incorrect prepending ``bg:`` to ``noinherit``\n  style directives\n\n**Authors:**\n\n* Gil Forsyth\n\n\n\nv0.13.2\n====================\n\n**Changed:**\n\n* When there is no git repository, the values of all ``gitstatus`` prompt fields are now ``None``.\n* With ``$THREAD_SUBPROCS=False``: When a callable alias is executed with ``![]``, its standard output and standard error are no longer captured. This is because a separate thread is required in order to both capture the output and stream it to the terminal while the alias is running.\n\n**Fixed:**\n\n* Fixed timeit syntax error\n* When there is no git repository, ``$PROMPT`` format strings like ``{gitstatus: hello {}}`` now work as expected.\n* With ``$THREAD_SUBPROCS=False``: When ``cd`` is used with an invalid directory, the error message is now correctly displayed.\n* Fixed case when xpip returns None instead of command.\n\n**Authors:**\n\n* anki-code\n* Peter Ye\n* pre-commit-ci[bot]\n* Lie Ryan\n* amukher3\n* Ashish Kurmi\n\n\n\nv0.13.1\n====================\n\n**Added:**\n\n* The ujson (faster version of json) added to xonsh[full] package.\n\n**Changed:**\n\n* Bumped Python version in `xonsh.AppImage` to 3.10\n* The terminal's title is updated with the current command's name even if the command is a captured command or a callable alias\n\n**Fixed:**\n\n* Warn and continue if a user without ``pygments`` tries to load an unknown style\n* Fixed a bash completion bug when prefixing a file path with '<' or '>' (for redirecting stdin/stdout/stderr)\n* Fixed a bash completion bug when completing a git branch name when deleting a remote branch (e.g. `git push origin :dev-branch`)\n* A callable alias containing subprocess commands no longer freezes when piped to another command\n* ``less`` no longer stops when a callable alias containing subprocess commands is piped into it\n* ``gitstatus`` Prompt-field would be empty on paths without git setup.\n* When using the sway window manager, ``swaymsg -t get_inputs`` no longer fails with the error \"Unable to receive IPC response\"\n* The ``current_job`` variable now works as expected when used in ``$TITLE``\n\n**Security:**\n\n* ``xpip`` will never add ``sudo`` under any circumstances and will instead append ``--user`` as needed\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* Peter Ye\n* pre-commit-ci[bot]\n* Stefano Rivera\n* jbw3\n* jgart\n* Michael Panitz (at Cascadia College)\n* Tim Gates\n\n\n\nv0.13.0\n====================\n\n**Removed:**\n\n* The ``xonsh`` code-base is no longer amalgamated, so tracebacks should be\n  human-readable without intervention.  This may have (minor) impacts on startup\n  speed.\n\n**Fixed:**\n\n* Fix xontrib loading for `free_cwd`\n* Fixed `whole_word_jumping` xontrib failing on Linux, conditional import of ``ptk_win32`` → Windows only\n* Fixed error caused by unintialized Xonsh session env when using Xonsh as a library just for its Pygments lexer plugin.\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* Eddie Peters\n* cmidkiff87\n* Hannes Römer\n\n\n\nv0.12.6\n====================\n\n**Fixed:**\n\n* String literal concatenation now works with f-strings and path literals\n* A SyntaxError is raised when string literal concatenation is attempted with literals of different types (e.g. str and bytes)\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* Peter Ye\n\n\n\nv0.12.5\n====================\n\n**Added:**\n\n* Support for f-glob strings (e.g. ``fg`{prefix}*```)\n* Now xontribs support `loading and unloading <https://github.com/xonsh/xonsh/issues/4541>`_\n  with functions ``_load_xontrib_(xsh: XonshSession, **kwargs) -> dict``,\n  ``_unload_xontrib_(xsh: XonshSession, **kwargs) -> None`` defined in their module.\n  `Updated doc <https://xon.sh/tutorial_xontrib.html>`_\n* Added a special '$LAST_RETURN_CODE' environment variable to access the return code of the last issued command. (Only set during interactive use).\n* New prompt-customization fields: 'last_return_code_if_nonzero', 'last_return_code'.\n* Documented the HISTCONTROL ignorespace option\n\n**Changed:**\n\n* ![] now returns a HiddenCommandPipeline when run with a background command (e.g. `![sleep 10 &]`)\n* Extended `whole_word_jumping` xontrib with matching bindings for\n  `delete` and `backspace`. The `XONSH_WHOLE_WORD_CTRL_BKSP` environment\n  variable can be set to `False` to avoid binding `control+backspace` in\n  incompatible terminals.\n* The default prompt (on unix-systems) now includes a red [<errorcode>] field in case a command failed.\n* New docs theme ``furo``\n* completions from fish are now filter based on the current prefix.\n\n**Removed:**\n\n* xontrib ``prompt_ret_code`` is now removed.\n  Now the default prompt already shows the last-return-code when the previous command fails.\n  Please use the new prompt fields ``last_return_code``, ``last_return_code_if_nonzero`` from\n  the `PR <https://github.com/xonsh/xonsh/pull/4798>`_\n\n**Fixed:**\n\n* Using `fg` for commands started in the background (e.g. `![sleep 10 &]`) now works\n* SIGHUP (instead of SIGKILL) is sent to unfinished jobs when exiting the shell. This allows the `nohup` command to work properly.\n* `bg` now properly resumes jobs in the background\n* ExecAlias now sets the returncode of a command correctly\n* Empty/comment-only commands no longer get added to the history\n* On prompt-toolkit, when there is a job like `sleep 500 &` running in the background, pressing Ctrl+D twice to force quit now works properly\n* Environment Variables are now completed correctly when in quotes\n* Silence spurious errors on exit due to out-of-order cleanup\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* Peter Ye\n* dev2718\n* dependabot[bot]\n* Stefano Rivera\n* Naveen\n* jbw3\n* Italo Cunha\n* Timmy Welch\n\n\n\nv0.12.4\n====================\n\n**Authors:**\n\n* Gil Forsyth\n\n\n\nv0.12.3\n====================\n\n**Changed:**\n\n* fix: remove os.path.basename from _get_git_branch()\n* now 3rd party xontrib list is maintained at `Awesome Xontribs <https://github.com/xonsh/awesome-xontribs/>`_ page.\n  Going forward, new contributions will be updated here, making it not depending on `the xonsh release <https://github.com/xonsh/xonsh/issues/4679>`_.\n\n**Removed:**\n\n* Removed Python 3.7 support following `NEP0029 <https://numpy.org/neps/nep-0029-deprecation_policy.html>`_\n\n**Fixed:**\n\n* Dictionaries are now pretty-printed with their items in the correct order\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* Peter Ye\n* doronz88\n* Stefano Rivera\n\n\n\nv0.12.2\n====================\n\n**Fixed:**\n\n* Fixed completions for command argument paths after equal signs\n* A trailing space no longer gets appended when tab-completing command arguments that involve equals signs. For example `dd sta` gets completed to `dd status=`, without a space space after the equals sign.\n* regression on `gitstatus <https://github.com/xonsh/xonsh/pull/4771>`_ prompt is fixed now. It will display the value now instead of the name.\n* `fixed <https://github.com/xonsh/xonsh/pull/4763>`_ ``vox rm`` crashing when user input is required\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* Peter Ye\n\n\n\nv0.12.1\n====================\n\n**Fixed:**\n\n* fixed regression issue in loading `xontrib-abbrevs <https://github.com/xonsh/xonsh/pull/4757>`_\n* Allow xonsh to start gracefully even if modal cursors aren't in the available\n  prompt_toolkit version\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n\n\n\nv0.12.0\n====================\n\n**Added:**\n\n* Added interface to complete any alias that has ``xonsh_complete`` attribute. It is a function with ``fn(**kwargs) -> Iterator[RichCompletion | str]`` signature.\n* added ``$ALIAS_COMPLETIONS_OPTIONS_LONGEST`` to control showing options in completions\n* added ``$CMD_COMPLETIONS_SHOW_DESC`` environment variable to control showing command completions with a description part.\n* `completer complete` command is added to test current completions\n* completions from man page will now show the description for the options if available.\n* ``$XONSH_COMPLETER_DIRS`` to put command completers\n* ``Aliases.register`` to register an alias function.\n* Tracebacks are now printed in color if available (interactive session with shell that supports colors with pygments installed and $COLOR_RESULTS enabled)\n* Added python's match statement for python >=3.10.\n* Added support for the $SHLVL environment variable, typed as int, using bash's semantics.\n* Python files with command completions can be put inside ``xompletions`` namespace package,\n  they will get loaded lazily.\n* `xontrib.fish_completer` is available to complete using `fish` shell.\n* Support for pythons sys.last_type, sys.last_value, sys.last_traceback.\n* added ``xonsh-uname`` command to ``xoreutils``\n* auto-completion support for commands : ``source-foreign``, ``source-bash``, ``source-zsh``, ``source-cmd``\n* added ``history transfer`` command to transfer history entries between backends.\n* now ``$PROMPT_FIELDS`` is a custom class with method ``pick(field_name)`` to get the field value efficiently.\n  The results are cached within the same prompt call.\n* new class ``xonsh.prompt.base.PromptField`` to ease creating/extending prompt-fields\n* **Sublime Text 4** extension to the Editors page.\n* Support for the `virtualenv <https://virtualenv.pypa.io/en/20.0.1/extend.html#activation-scripts>`_ ``activate.xsh`` script is back! Ensure you create the virtualenv from the same python where xonsh is installed.\n* vox new/create accepts a new ``--prompt`` argument, which is passed through to ``python -m venv``\n* New set of commands and options to manage virtualenvs inspired from ``pew``\n\n    * runin\n    * runinall\n    * new\n\n        * ``--link`` : to associate venv with project directory\n        * ``--temp`` : to create temporary virtualenvs\n\n    * activate\n\n        * now will cd into project directory if the venv is associated\n\n    * toggle-ssp - toggle system site packages\n    * project - manage project path associations\n    * wipe - to quickly remove all user installed packages\n* ``prompt.env.env_name`` is now aware of the \"prompt\" key in ``pyvenv.cfg`` - search order from first to last is: ``$VIRTUAL_ENV_PROMPT``, ``pyvenv.cfg``, ``$VIRTUAL_ENV``, $``CONDA_DEFAULT_ENV``\n* new command ``vox upgrade``\n* ``xonfig web`` can now update ``abbrevs/aliases/env-variables``.\n* Added `xontrib-default-command <https://github.com/oh-my-xonsh/xontrib-default-command>` to xontrib list.\n* new `xontrib-django <https://github.com/jnoortheen/xontrib-django>`_ for django management completions\n* Added `xontrib-gruvbox <https://github.com/rpdelaney/xontrib-gruvbox>` to xontrib list.\n* Added `xontrib-up <https://github.com/oh-my-xonsh/xontrib-up>` to xontrib list.\n\n**Changed:**\n\n* BREAKING CHANGE: ``/etc/xonshrc`` location for run control file has been deprecated in favor of ``/etc/xonsh/xonshrc``.\n* Both ``*.xsh`` and ``*.py`` files inside ``$XONSHRC_DIR`` will get loaded now.\n* Environment-variables of no predefined type or path environment variables are now represented as strings via the empty string.\n* Made stacktraces behave like in python, i.e. when something in user-provided code fails (both interactively and non-interactively), only that part is shown, and the (static) part of the stacktrace showing the location where the user code was called in xonsh remains hidden. When an unexpected exception occurs inside xonsh, everything is shown like before.\n* run_compiled_code, run_script_with_cache, run_code_with_cache now return sys.exc_info() triples instead of throwing errors\n* SyntaxError tracebacks now by default hide the internal parser state (like in python); set XONSH_DEBUG >= 1 to enable it again.\n* XonshError tracebacks now by default hide xonshs internal state; set XONSH_DEBUG >= 1 to enable it again.\n* run_code_with_cache takes a new parameter display_filename to override the filename shown in exceptions (this is independent of caching)\n* Update uptime lib by the last one from Pypi\n* ``umask``, ``ulimit`` commands will not override the system's commands unless requested\n* Xontribs that require other third party packages are moved to its own packages.\n  The following xontribs are moved and can be loaded after install as usual\n\n  * mpl\n  * distributed\n  * jupyter-kernel\n  * jedi\n* Xonsh adopts `NEP-0029 <https://numpy.org/neps/nep-0029-deprecation_policy.html>`_ in supporting Python versions.\n* Privatise certain attributes of lexer/parser to minimise API surface\n* Make `XSH.load` calls explicit (not in Execer)\n* Make import hooks require Execer\n* Simplified foreign functions\n* Updated tutorial.rst to clarify use of time_format\n* ``vox new`` will use default python version of the system rather than the one vox is run with\n* ``xonfig web`` now shows latest xontribs available from ``xonsh.xontribs_meta``\n\n**Removed:**\n\n* ``$XONSH_GITSTATUS_*`` is removed\n  since the prompt fields can be customized easily now individually.\n* ``$XONSH_GITSTATUS_FIELDS_HIDDEN`` is removed.\n  Please set hidden fields in ``$PROMPT_FIELDS['gitstatus'].hidden = (...)``\n* Removed ``xonsh.ptk2`` module whcih was kept for some old packages sake. Now xonsh requires atleast ptk3 version.\n\n**Fixed:**\n\n* Some of the bash completions scripts can change path starting with '~/' to `/home/user/` during autocompletion.\n  xonsh `bash_completions` does not expect that, so it breaks autocompletion by producing paths like `~/f/home/user/foo`.\n  After the fix if bash returns changed paths then `/home/user` prefix will be replaced with `~/`.\n* ``pip`` completer now handles path completions correctly\n* SyntaxErrors thrown during compilation (i.e. not during parsing) now include the offending source line.\n* If a .xsh file is imported, the resulting module will now always have an absolute \\_\\_file\\_\\_ attribute to be consistent with pythons behavior since python 3.4.\n* ``$CONDA_DEFAULT_ENV`` is now respected when xonsh is run outside of conda.\n* Fixed unpacking of dictionaries inside a dictionary\n* Empty or comments only .xsh files can now be imported to align with pythons behavior.\n* Fixed regex globbing for file paths that contain special regex characters (e.g. \"test*1/model\")\n* Fixed list comprehension in return statement incorrectly being parsed as a subprocess command.\n* Fixed the expansion of $XONSH_TRACEBACK_LOGFILE user paths (e.g. \"~/log\")\n* Fixed DeprecationWarning when providing autocompletion for a non-callable type with ``(``\n* OSC codes in ``$PROMPT`` is no longer removed when using ptk shell.\n  These codes need to be escaped with ``\\001..\\002`` instead.\n* Attempt to show a modal cursor in vi_mode (ie. block in cmd, bar in ins)\n* Xonsh can now be used in VIM (e.g. by \":read !ls\" if VIM is configured to use xonsh. This may be the case when xonsh is the default shell.)\n* Fixed OSError on Windows when GnuWin32 is installed in the PATH.\n* Do not show welcome message when any ``$XONSHRC_DIR`` directory entry exists.\n* SyntaxErrors now get initialized with all available fields so that the error message can be formatted properly.\n* Raising BaseException no longer causes Xonsh to crash (fix #4567)\n* Exceptions in user code when using xonsh non-interactively no longer simply crash xonsh, rather a proper stacktrace is printed and also postmain() is called.\n* Tracebacks will now show the correct filename (i.e. as in python) for interactive use \"<stdin>\", scripts read by stdin \"<stdin>\" and -c commands \"<string>\". (Instead of MD5 hashes as filenames or \"<xonsh-code>\")\n* Default ZSH FUNCSCMD was not working in ZSH 5.8 (and possibly other versions)\n* Passing multiple files to be sourced to source-foreign was broken\n* prompt field ``current_branch`` will now work empty git repository.\n\n**Authors:**\n\n* Gil Forsyth\n* Noortheen Raja\n* anki-code\n* Daniel Shimon\n* Peter Ye\n* Jason R. Coombs\n* dev2718\n* Evgeny\n* Angus Hollands\n* omjadas\n* Oliver Bestwalter\n* Samuel Dion-Girardeau\n* Ryan Delaney\n* E Pluribus Unum\n* ylmrx\n* Hierosme\n* Kyllingene\n* zzj\n* Daniel\n* Ganer\n* mattmc3\n* Evan Hubinger\n\n\n\nv0.11.0\n====================\n\n\n\nv0.11.0\n====================\n\n**Added:**\n\n* added new utility classes ``xonsh.cli_utils.ArgParserAlias``, ``xonsh.cli_utils.ArgCompleter``.\n  These are helper classes, that add coloring and auto-completion support to the alias-commands.\n* when ``$ENABLE_ASYNC_PROMPT=True`` lazy load ``prompt-toolkit``'s color-input support.\n* Add ``CTRL-Right`` key binding to complete a single auto-suggestion word.\n* Show environment variables' type and descriptions when completing them.\n* Add ``CTRL-Backspace`` key binding to delete a single word via ``$XONSH_CTRL_BKSPC_DELETION``.\n* Improved ``pip``/``xpip`` completer.\n* Separator used by gitstatus can now be styled using ``XONSH_GITSTATUS_SEPARATOR``.\n* Complete 'import' statements with modules that aren't loaded.\n* Complete multiple modules/objects in 'import' statements.\n* Multiple new metadata fields in ``setup.py``\n* Pure Python control files are now supported when named ``*.py``.\n  Using python files may lower the startup time by a bit.\n* new environment variable ``$XONSH_TRACE_SUBPROC_FUNC``\n  to handle ``$XONSH_TRACE_SUBPROC`` output\n* Added `xontrib-pyrtn <https://github.com/dyuri/xontrib-pyrtn>` to xontrib list.\n\n**Changed:**\n\n* Display error message when running `xonfig colors` in a non-interactive shell\n* Using ``ArgparserAlias`` for ``dirs``, ``popd``, ``pushd``\n* use ``ArgparserAlias`` for ``disown`` alias with completion support\n* ``history`` alias now has colored help message and completion support when running interactively.\n* using ``ArgparserAlias`` for ``trace`` alias with completion support\n* improve ``vox`` CLI completions\n* use ArgparserAlias for ``xexec``. Now it supports completions.\n* ``xonfig`` now has colored help message when ran interactively.\n* Using ``ArgparserAlias`` to improve ``xontrib`` completions\n* Changed !() to also capture background subprocesses\n* Suggested commands are cached for better performance.\n* Improved pipelines performance by using a mutable buffer.\n* Curly braces { } in directory names are now escaped in the prompt\n* The ``--rc`` argument is extended to support directories as well as files.\n  Passing a directory will result in all ``*.xsh`` files in the directory being\n  sorted and loaded at startup (equivalent to using the environment variable\n  ``XONSHRC_DIR``).\n* The environment variables ``XONSHRC`` and ``XONSHRC_DIR`` are no longer updated by xonsh on\n  startup according to which files were actually loaded. This caused problems if xonsh is called\n  recursively, as the child shells would inherit the modified startup environment of the parent.\n  These variables will now be left untouched, and the actual RC files loaded (according to those\n  variables and command line arguments) can be seen in the output of ``xonfig``.\n* Replaced `xontrib-linuxbrew <https://github.com/eugenesvk/xontrib-linuxbrew>`_ with `xontrib-homebrew <https://github.com/eugenesvk/xontrib-homebrew>`_, which also supports Homebrew on macOS\n\n**Removed:**\n\n* Completely dropped the deprecated ``--config-path`` argument, which no longer\n  did anything.\n* The environment variable ``LOADED_RC_FILES`` is no longer set. It contained a list of booleans\n  as to which RC files had been successfully loaded, but it required knowledge of the RC loading\n  internals to interpret which status corresponded to which file. As above, the (successfully)\n  loaded RC files are now shown in ``xonfig``.\n\n**Fixed:**\n\n* Add quotes in autocomplete when filename contains brackets\n* Handle ``None`` value on XSH.env if ``$UPDATE_OS_ENVIRON`` is set to ``True``\n* Implemented `__hash__` method to Env, so that it can be used in `lru_cache` without crashing.\n* Make sure aliases are always captured regardless of ``$XONSH_CAPTURE_ALWAYS``\n* ``fromdircolors`` doesn't crash if output from subprocess call to ``dircolors`` returns\n  nothing (usually due to permission errors)\n* Fixed issue with environment not being iterable on session objects.\n* Fixed issue where environment is None in commands cache.\n* ``${...}.swap()`` can be called from multiple threads safetly.\n* Piping multiple function aliases doesn't raise a recursion error anymore.\n* Fixed detection of App Execution Alias for latest 3.8 and 3.9 releases\n* ``Jedi`` completer doesn't complete paths with ``~``.\n* Sometimes the completion menu doesn't take space when cursor is at the bottom of the screen.\n* vox now passes system-site-packages option\n* Fix Duplicate paths left over when add paths to Path via xonsh.tools.EnvPath\n* Fix  Crash with FileNotFoundError when current working directory is deleted #4467\n* Completing a single-arg python code segment (e.g. ``@(/etc/hos<TAB>)``).\n* Fixed pipelines in WSL2\n* Newline symbols in Prompt-toolkit's completions are replaced by <space>\n* Fix launching processes on Windows by using full paths (https://bugs.python.org/issue8557)\n\n\n\nv0.10.1\n====================\n\n**Fixed:**\n\n* ``execx`` and ``xonsh -c`` previously exposed xonsh-internal code in global scope. They also did not support defining variables and then referring to them in comprehensions, generators, functions, or lambdas. - https://github.com/xonsh/xonsh/issues/4363\n* Short color token names can be used in ``register_custom_style()`` (#4339)\n\n**Authors:**\n\n* Gyuri Horak\n* Jeremy Schlatter\n\n\n\nv0.10.0\n====================\n\n**Added:**\n\n* Added ability to set XONSH_HISTORY_FILE before loading the history backend.\n* Added ability to get the arguments list in ExecAlias using ``$args`` and ``$arg<n>`` environment variables.\n* Added instruction how to run xonsh AppImage on Alpine\n* Xonsh now supports generators as completer functions.\n* Completion Context - Allow completers to access a parsed representation of the current commandline context.\n* Added casting CommandPipeline to int, hash and str.\n* Ability to call the tool by the name from callable alias with the same name without the infinite loop error.\n* ``on wsl`` field when running xonfig (when linux is detected)\n* Help and superhelp (``obj?`` and ``obj??``) now use the ``__name__`` if available.\n* added ``$XONSH_GITSTATUS_FIELDS_TO_HIDE`` to hide unwanted fields from ``{gitstatus}`` prompt field.\n* Added number of lines added and removed to gitstatus\n* Saving current working directory (cwd) to the history.\n* Added XONSH_HISTORY_SAVE_CWD environment variable.\n* Added environment variable ``$COMPLETE_DOTS`` to specify how current and previous directories should be tab completed in cd  ('./', '../'):\n    - ``always`` Always complete paths with ./ and ../\n    - ``never`` Never complete paths with ./ and ../\n    - ``matching`` Complete if path starts with . or ..\n* Complete ``import`` keyword in ``from ... import`` statements.\n* Enabled case-insensitive completions for the ``jedi`` xontrib.\n* Non-exclusive completers that enable aggregating multiple completer results.\n* New ``$XONSH_CAPTURE_ALWAYS`` variable for opt-in interactive capturing.\n  Since this capturing breaks background jobs and some interactive programs (like ``git`` invoking an editor),\n  This behavior is now opt-in using this variable.\n  See https://github.com/xonsh/xonsh/pull/4283 and linked issues.\n* Wrap selection with quote/parens when ``$XONSH_AUTOPAIR=True``.\n* Now xonsh will work with Python 3.10. (Match statement is not supported).\n* In addition to reading single rc files at startup (``/etc/xonshrc``, ``~/.config/xonsh/rc.xsh``),\n  xonsh now also supports rc.d-style config directories, from which all files are sourced. This is\n  designed to support drop-in style configuration where you could, for example, have a common config\n  file shared across multiple machines and a separate machine specific file.\n\n  This is controlled by the environment variable ``XONSHRC_DIR``, which defaults to\n  ``[\"/etc/xonsh/rc.d\", \"~/.config/xonsh/rc.d\"]``. If those directories exist, then any ``xsh`` files\n  contained within are sorted and then sourced.\n* Added xontrib-prompt-starship - Starship prompt in xonsh shell.\n* Added XONSH_SUBPROC_CAPTURED_PRINT_STDERR (default False) environment variable to hide unwanted printing the stderr when using captured object.\n* A ``$XONSH_TRACE_COMPLETIONS`` variable for completions debugging.\n* Added warning about prompt-toolkit in the welcome message.\n* Added history backend name to the xonfig.\n* `xontrib-linuxbrew <https://github.com/eugenesvk/xontrib-linuxbrew>`_ to add Homebrew's shell environment to xonsh shell on Linux\n* Added xontrib-macro-lib - the library of the useful macros for the xonsh shell: https://github.com/anki-code/xontrib-macro-lib\n\n**Changed:**\n\n* update imphooks encoding regex to match the newer version at PEP 263\n* Enabled bracketed paste mode for readline to protect against paste jacking\n* The group of environment variables around history moved to the \"Interactive Prompt History\" section.\n* Disabled completing subpaths for commands in ``jedi``.\n* Improved ``which`` output for non-simple aliases\n* New json history will be in XONSH_DATA_DIR/history_json directory.\n* Completers for ``and/or``, ``&&/||/|`` and environment variables are now non-exclusive.\n* Disabled ptk copying words/lines to clipboard on deletion (can be re-enabled with ``$XONSH_COPY_ON_DELETE``).\n* Separated between ``XONSH_DEBUG`` and ``XONSH_NO_AMALGAMATE``. Setting ``XONSH_DEBUG=1`` now acts like ``XONSH_DEBUG=2`` before (basic information like input transformation, command replacement) and ``XONSH_DEBUG=2`` like ``XONSH_DEBUG=1`` before (more debugging information presented, like PLY parsing messages).\n* Cleaned up available aliases for ``shell_type``\n* Speedup commands-cache by saving results between runs and use the last run's result\n* The ``completer add`` command after the non-exclusive completers.\n  This means it will not block them from adding their completions.\n* Updated the tab-completion tutorial.\n\n**Fixed:**\n\n* handle importing/decoding user modules with a 'UTF-8 with BOM' encoding (#4160)\n* Fixed XONSH_HISTORY_FILE that has the actual path from the history backend now\n* Annotated assignments (``x: int = 42``, ``x: int``).\n* Fixed xpip sudo behavior in xonsh AppImage.\n* Prevent cancelled future errors for async prompt ($ENABLE_ASYNC_PROMPT) fields from bubbling up (and destroying the prompt's formatting)\n* $() no longer silently captures stderr\n* Added catching callable argument and raising appropriate exception\n* Crashing command-not-found output for bad file names on linux.\n* Fixed error message when an empty command is run\n* Fixed @$ crash when no output is sent out by the command\n* Fixed xonsh crash when launched using `xonsh -c '$(\"\")'`\n* now abbrevs callback will not remove word from ``buffer.text``. See https://github.com/xonsh/xonsh/issues/3642#issuecomment-793789741\n* Fixed the incorrect SyntaxError that was thrown when a subprocess command was preceded by a comment ending with a colon\n* Fixed the missing auto-indentation in readline and prompt_toolkit when a statement ending with a colon was followed by a comment\n* Fixed the incorrect auto-indentation in prompt_toolkit when a comment ended with a colon\n* Fixed JSON history garbage collection for XONSH_HISTORY_SIZE in seconds.\n* Fixed ``skip`` completer (completes ``sudo``, ``which`` and other commands).\n* In a subprocess command, having whitespace in between the left bracket and the command no longer raises a SyntaxError.\n* Reduced history reading when run script or command. Potential speed increasing.\n* Fixed crash on statup if XONSH_COLOR_STYLE is set to something invalid.\n* Fixed the colorize and/or keywords.\n* Functions can be used for $TITLE, the same way as for $PROMPT. (#4148)\n* wsl detection works on archlinux wsl2 now (and hopefully everywhere)\n* Fixed an exception when run xonfig wizard in no RC mode.\n* Bash completions now handle quoted and space-containing arguments better.\n* ``import`` completions always work.\n* Test consistent RC loading behaviour in a variety of startup scenarios\n* Absolute paths to executables don't break bash completions anymore\n* Fix colors and text in the welcome message.\n\n**Authors:**\n\n* Gil Forsyth\n* anki-code\n* Noortheen Raja\n* Gyuri Horak\n* Daniel Shimon\n* Matthias Bussonnier\n* Gordon Ball\n* cryzed\n* Peter Ye\n* Evgeny\n* Jeremy Schlatter\n* jmoranos\n* Walter A. Boring IV\n* bhawkins\n* JackofSpades707\n* Luiz Antonio Lazoti\n* francium\n\n\n\nv0.9.27\n====================\n\n**Added:**\n\n* Add new internal command \"disown\" to remove background jobs from the shell's job list\n* Python3.9 issues with subscriptor forms fixed.\n* added `xontrib-cd <https://github.com/eugenesvk/xontrib-cd>`_\n* Added **xontrib-history-encrypt** - new history backend that encrypt the xonsh shell commands history to prevent leaking sensitive data. If you like the idea give a star to the repository https://github.com/anki-code/xontrib-history-encrypt\n\n**Changed:**\n\n* New awesome landing on https://xon.sh - feel free to share and tweet!\n* History files (json, sqlite) now have 600 (rw only for user) permission by default.\n* PTK(python-prompt-toolkit) is no longer vendored with xonsh.\n\n**Fixed:**\n\n* Fixed a bug where \"cd\" and \"rmdir\" would return non-directory completions\n* SQLite History Backend: show message instead of exiting when disk is full.\n\n**Authors:**\n\n* Gil Forsyth\n* anki-code\n* Noortheen Raja\n* Tejasvi S Tomar\n* Evgeny\n* Adam Schwalm\n* Nate Simon\n\n\n\nv0.9.26\n====================\n\n**Added:**\n\n* abbrevs now support callbacks\n* Added a new xontrib ``tcg``\n\n**Fixed:**\n\n* now xonsh stdout delegates ``isatty`` to wrapped io stream.\n\n**Authors:**\n\n* Gil Forsyth\n* anki-code\n* Noortheen Raja\n* Gao, Xiang\n\n\n\nv0.9.25\n====================\n\n**Added:**\n\n* VC_GIT_INCLUDE_UNTRACKED environment variable if untracked file changes are desired to show a dirty working directory\n* added `xontrib-powerline2 <https://github.com/vaaaaanquish/xontrib-powerline2>`_\n* Add '``|``' and '``|=``' operators to the ``Aliases`` class.\n* Add tests to the merging functionality.\n* Add \"back2dir\" xontrib (https://github.com/anki-code/xontrib-back2dir) - back to the latest used directory when starting xonsh shell.\n* show code-coverage for PRs\n* Added ``CommandPipeline.raw_out`` and ``CommandPipeline.raw_err`` to get stdout/err as raw bytes.\n* The ``@()`` operator now supports ``bytes`` objects.\n* index for history's sqlite-DB\n* support passing style from RichCompleter to PTK's Completer\n* ``xonsh.cli_utils`` to create cli from functions easily.\n* Python API for completer command with ``xonsh.completer`` module functions.\n* Added new environment variable ``$PROMPT_TOKENS_FORMATTER``.\n    That can be used to set a callable that receives all tokens in the prompt template.\n    It gives option to format the prompt with different prefix based on other tokens values.\n    Enables users to implement something like [powerline](https://github.com/vaaaaanquish/xontrib-powerline2)\n    without resorting to separate $PROMPT_FIELDS. Works with ``ASYNC_PROMPT`` as well.\n    Check the `PR <https://github.com/xonsh/xonsh/pull/3922>`_ for a snippet implementing powerline\n* PTK style rules can be defined in custom styles using the ``Token.PTK`` token prefix.\n  For example ``custom_style[\"Token.PTK.CompletionMenu.Completion.Current\"] = \"bg:#ff0000 #fff\"`` sets the ``completion-menu.completion.current`` PTK style to white on red.\n* Added new environment variable ``XONSH_STYLE_OVERRIDES``. It's a dictionary containing pygments/ptk style definitions that overrides the styles defined by ``XONSH_COLOR_STYLE``.\n  For example::\n\n    $XONSH_STYLE_OVERRIDES[\"Token.Literal.String.Single\"] = \"#00ff00\"  # green 'strings' (pygments)\n    $XONSH_STYLE_OVERRIDES[\"completion-menu\"] = \"bg:#ffff00 #000\"  # black on yellow completion (ptk)\n    $XONSH_STYLE_OVERRIDES[\"Token.PTK.CompletionMenu.Completion.Current\"] = \"bg:#ff0000 #fff\" # current completion is white on red (ptk via pygments)\n* support PTK's clipboard integration if pyperclip is installed.\n    So that some common emacs like\n    `cut/copy <https://github.com/prompt-toolkit/python-prompt-toolkit/blob/master/examples/prompts/system-clipboard-integration.py>`_\n    will work out of the box.\n* Added Python 3.9 to continuous integration.\n* ``open in google cloud shell`` button 🤩\n* Respect ignorespace present in $HISTCONTROL\n* ``_get_normalized_pstring_quote`` returns a consistent set of prefixes, and the quote, for all path-string variants e.g. inputs ``pr'`` and ``rp'`` both produce the tuple ``(\"pr\", \"'\")``. This function is used by ``xonsh.completers.complete_path`` and ``xonsh.completers._path_from_partial_string``.\n* Added warning about huge amount of commands in CommandsCache that could affect on start speed.\n* New ``xonsh.procs`` subpackage for handling subprocess mode.\n* Environment variable ``$COMPLETION_MODE`` controls kind of TAB completion used with prompt-toolkit shell.\n  ``default``, the default, retains prior Xonsh behavior: first TAB displays the common prefix of matching completions,\n  next TAB selects the first or next available completion.\n  ``menu-complete`` enables TAB behavior like ``readline`` command ``menu-complete``.  First TAB selects the first matching\n  completion, subsequent TABs cycle through available completions till the last one.  Next TAB after that displays\n  the common prefix, then the cycle repeats.\n* Added timing probes for prompt tokens, lexer and before prompt.\n* improve github actions by adding cache\n* ``xog`` xontrib - a simple command to establish and print temporary traceback\n  log file.\n* Added ``xontribs`` section to the ``xonfig``.\n* added xontrib-avox-poetry(http://github.com/jnoortheen/xontrib-avox-poetry)\n* added xontrib-broot(http://github.com/jnoortheen/xontrib-broot)\n* added `xontrib-long-cmd-durations <https://github.com/jnoortheen/xontrib-cmd-durations>`_\n* added `xontrib-commands <https://github.com/jnoortheen/xontrib-commands>`_\n* added xontrib-powerline3(http://github.com/jnoortheen/xontrib-powerline3)\n* Added ``xontrib-zoxide`` to the list of xontribs.\n* Added ``xontrib-gitinfo`` to the list of xontribs.\n\n**Changed:**\n\n* ``CommandPipeline.__repr__`` now returns formatted output wherein its printed\n  attributes are also repr strings. This improves the output of ``!()``.\n* prompt-toolkit required version updated to >=3.0\n* group environment variables into categories.\n* The SQLite history backend now has the same logic of storing stdout to the memory like json history backend.\n* Using ``ujson`` (if installed) in LazyJSON to loading json history 15% faster.\n* use requirements.txt env in both CI/local/pre-commit checks\n* add caching to CI jobs to improve speed\n* The change that allows Nuitka build the xonsh binary.\n* Remove ``p``, ``rp`` and ``pr`` prefix from partial p-string used in ``xonsh.completers._path_from_partial_string``, such that ``ast.literal_eval`` does not raise ``SyntaxError``. ``pr`` and ``rp`` strings are now treated internally as raw strings, but the p-string quote is correctly returned.\n* Increment the prefix length when the prefix input to ``xonsh.completers.complete_path`` is a p-string. This preserves the length of the prefix for path-string variants.\n* Pygments debug messages about cache will be shoen only in debug mode.\n* ``ulimit`` builtin now operates on \"soft\" limits by default.\n* tests for vc-branch should accept both master and main\n* upgrade black formatter to version 20.8b1\n* Use ``xontribs_meta.py`` instead of ``xontribs.json``\n* Welcome message cosmetic changes.\n* rewrite xontribs/jedi.xsh -> xontribs/jedi.py to take advantage of python tooling\n\n**Deprecated:**\n\n* ``PTK_STYLE_OVERRIDES`` has been deprecated, its function replaced by ``XONSH_STYLE_OVERRIDES``\n* The ``xonsh.proc`` module has been deprecated. Please use the new\n  ``xonsh.procs`` subpackage instead. Deprecation warnings related to this\n  have been added.\n\n**Removed:**\n\n* The deprecated ``foreground`` decorator has been removed.\n  Please use ``unthreadable`` instead.\n* ``xonsh.proc.unthreadable`` and ``xonsh.proc.uncapturable``\n  have been moved to ``xonsh.tools``. Please import from\n  this module instead.\n\n**Fixed:**\n\n* Now the directory and the symlink to this directory will be read from PATH once. Increasing the startup speed on Linux.\n* Environment variable registration no longer fails to validate when the default\n  is a callable.\n* Default values created from callables are stored on in the evironment.\n* Completers also recognize ``:`` as a valid split point for insertion for, e.g. pytest completions\n\n  .. code\n  pytest test_worker::<TAB>\n* Colorize ``and``/``or`` operators correctly like ``&&``/``||``\n* Speed of CommandsCache increased when aliases have multiple updates (i.e. init conda).\n* Now when loading RC files, xonsh will not fail to import modules located on\n  the same folder.\n* Setting an alias with IO redirections (e.g ``ls | wc``) now works correctly.\n* PTK shell: ``window has no childres`` error while completion is triggered - https://github.com/xonsh/xonsh/issues/3963\n* make_xontrib - typerror - https://github.com/xonsh/xonsh/issues/3971\n* Fix libc detection on FreeBSD\n* Fix uptime functionality on FreeBSD\n* Updated History Backend tutorial.\n* enabled flake8 warning on ambiguous names. it is fun naming variables in coded words until oneday it looks like encrypted.\n* Added ANSI fallback for ``xonsh.tools.print_color`` if shell is not yet initialized. Fixes #3840.\n* ``./run-tests.xsh`` without arguments previously gave an esoteric error. It\n  now prints help on how to run the tests.\n* The git customisation example in the .xonshrc docs uses the right module name\n\n**Authors:**\n\n* Anthony Scopatz\n* Jamie Bliss\n* a\n* David Strobach\n* Bob Hyman\n* anki-code\n* Gyuri Horak\n* Noortheen Raja\n* Carmen Bianca Bakker\n* Danny Sepler\n* vaaaaanquish\n* Daniel Shimon\n* Jerzy Drozdz\n* Faris A Chugthai\n* Asaf Fisher\n* Dominic Ward\n* omjadas\n* Leandro Emmanuel Reina Kiperman\n* Henré Botha\n* Aneesh Durg\n* colons\n* yggdr\n\n\n\nv0.9.24\n====================\n\n**Added:**\n\n* Ability to register custom styles via ``xonsh.pyghooks.register_custom_style``\n* Add method of escaping an environment variable from expansion to the Bash to Xonsh Translation Guide.\n* added mypy to the project. many of the errors are ignored. but it is a start.\n* Added example of subproc calling to the tutorial.\n* New xontrib-sh (https://github.com/anki-code/xontrib-sh) to paste and run snippets from bash, zsh, fish.\n\n**Changed:**\n\n* Now ``COMPLETIONS_CONFIRM`` is ``True`` by default.\n* ``xonsh.AppImage`` python version pinned to 3.8.\n* Cookiecutter template to creating new xontribs has many improvements (https://github.com/xonsh/xontrib-cookiecutter).\n* Docs sections improvement.\n\n**Removed:**\n\n* Removed ``import random``.\n\n**Fixed:**\n\n* #1207 - custom color themes\n* Webconfig updarted for the ``NO_COLOR`` to ``RESET`` change.\n* async prompt field's returns from earlier data\n* Async prompt will now support nested-format strings in prompts\n* handle None value for ASYNC_PROMPT_THREAD_WORKERS\n* Fixed f-strings parsing in Python 3.9\n* Fixed reset color in ``xontrib list``.\n* Fixed NO_COLOR to RESET in prompt_ret_code and mplhooks.\n\n**Authors:**\n\n* Anthony Scopatz\n* David Strobach\n* a\n* anki-code\n* Gyuri Horak\n* Noortheen Raja\n* Will Shanks\n\n\n\nv0.9.23\n====================\n\n**Added:**\n\n* add API docs for ptk_shell.updator module\n* add flake8-docstrings to the project. it integrates pydocstyle to flake8.\n* Support for ANSI OSC escape sequences in ``$PROMPT``, setting ``$TITLE`` for example. (#374, #1403)\n* Now ptk_shell supports loading its sections in thread, speeding up the prompt. Enable it by setting ``$ENABLE_ASYNC_PROMPT=True``.\n* Added ``unset``, ``export``, ``set -e``, ``set -x``, ``shopt``, ``complete`` to xontrib bashisms.\n* Use command_cache when finding available commands, to speedup command-not-found suggestions\n* Added Visual Studio Code (VSCode) extension and Vim syntax file to the Editors page.\n* Added ``exit(exit_code)`` function by default in not interactive mode. Now importing ``exit`` from ``sys`` is not needed.\n* Added Python syntax highlighting of xsh files on Github repo xonsh/xonsh\n* history clear, history off and history on actions, for managing whether history in the current session is saved.\n* ValueErrors from environ.register now report the name of the bad env var\n* Add a new color ``DEFAULT`` that is used to designate the terminal's default color.\n* Add a new special color token ``RESET`` used to reset all attributes.\n* Add a new xonsh tool 'print_warning' that prints a traceback with a warning message.\n* Added `xontrib-onepath <https://github.com/anki-code/xontrib-onepath>`_ to associate files with apps in xonsh shell like in graphical OS.\n* Added ``print_color`` and ``printx`` functions to builtins as reference to ``xonsh.tools.print_color``.\n* Added to xontrib whole_word_jumping: Shift+Delete hotkey to delete whole word.\n* Added \"Advanced String Literals\" to the \"Tutorial\".\n* ``xonfig jupyter-kernel`` new subcommand to generate xonsh kernel spec for jupyter.\n  Installing a new xonsh kernel for jupyter automatically removes any other one registered with jupyter,\n  otherwise the new one might not be used.\n* Added xontrib ``powerline-binding`` (https://github.com/dyuri/xontrib-powerline-binding) - uses ``powerline`` to render the prompt.\n\n**Changed:**\n\n* Improved printing of xonsh ``--shell-type`` argument in help message.\n* \"Bash to Xonsh Translation Guide\" improvements.\n* More stable exception handling in the tab completer.\n* Changed sections order in docs\n* The ``path`` type in ``${...}.register`` was renamed to ``env_path`` as it should be and added\n  new ``path`` type instead that represent ``pathlib.Path``. Now you can register typed environment\n  variables that will be converted to ``Path``.\n* xonsh/environ.py: new rule: for \"registered\" environment variables (in ``DEFAULT_VARS`` or via ``env.register()``),\n  if default is set to ``DefaultNotGiven``, then variable has no default and raises ``KeyError`` if it is not\n  actually defined in environment.  Likewise, ``\"var\" in __xonsh__.env`` will return False.\n* Changed defaults for ANSICON, TERM and VIRTUAL_ENV to ``DefaultNotGiven``, so code can rationally test whether\n  the expected external program has defined these variables.  No need to do this for variables that xonsh\n  itself defines.\n* Moved internal uses of ``NO_COLOR`` to ``RESET``.\n* When retrieving the git status or other fields for building the prompt xonsh will run\n  the git commands with ``$GIT_OPTIONAL_LOCKS=0``.  For details on what this entails see\n  the git documentation for\n  `GIT_OPTIONAL_LOCKS <https://git-scm.com/docs/git#Documentation/git.txt-codeGITOPTIONALLOCKScode/>`_.\n* Minor improvements to the get prompt speed. (Mostly in git.)\n* ptk key binding for TAB -- hitting TAB to start completion now automatically selects the first displayed completion (if any).\n  hitting TAB when in insert mode inserts TAB, as heretofore.  This more exactly follows behavior of readline ``menu-complete``.\n  There is no configuration option for tailoring this behavior.\n* ``xonfig info`` displays whether jupyter detected in environment and\n  also path of xonsh jupyter kernel spec, if any.\n* xontrib-argcomplete and xontrib-pipeliner description improvement.\n\n**Deprecated:**\n\n* Deprecated the ``NO_COLOR`` color reset token in favor of ``RESET``.\n\n**Removed:**\n\n* Deprecated ``--config-path`` argument suppressed from help.\n* setup no longer (tries to) install jupyter kernel automatically,\n  user must run ``xonfig jupyter-kernel`` manually.\n\n**Fixed:**\n\n* cygwin needs full path to find exe; disable thread_subprocs as default for cygwin\n* Fixed logic in git dirty working directory\n* Fixed type registration for ``*DIRS`` environment variables.\n* Fixed #3703 and #3739, recent code change made it impossible to tell whether a (registered) environment variable\n  was missing from environment or present and set to its registered default value. The test for ANSICON was\n  failing due to this.\n* Fixed environment variables substitution: unknown variables stay unreplaced now (#3818).\n* Fixed xpg xontrib link\n* Fix crash when xonsh tries to run windows app execution aliases.\n* Setup wasn't consistently detecting jupyter in environment; ``python setup.py install`` worked, but\n  ``pip install .`` wouldn't (because pip mucks with ``sys.path``),\n  nor would install from wheel (because it doesn't run ``setup.py``).\n* ``xonfig info`` now displays actual value of ON_MSYS and ON_CYGWIN instead of lazy bool type.\n  (maybe was happening only on Windows?)\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* Morten Enemark Lund\n* Bob Hyman\n* a\n* anki-code\n* christopher\n* Eadaen1\n* Danny Sepler\n* Gyuri Horak\n* cafehaine\n* Wendell Turner\n* Noortheen Raja\n* Marius van Niekerk\n* Wendell CTR Turner\n\n\n\nv0.9.22\n====================\n\n**Added:**\n\n* Added xontrib-argcomplete to support kislyuk/argcomplete - tab completion for argparse.\n* New ``tools.debian_command_not_found()`` function for finding commands in\n  debian/ubuntu packages.\n* New ``tools.conda_suggest_command_not_found()`` function for finding commands in\n  conda packages.\n* Borrow shift-selection from prompt-toolkit. Shift-arrow (selects a letter) and control-shift-arrow (selects a word) should now be supported.\n* Documentation for keyboard shortcuts\n* Xonsh now supports bash-style variable assignments preceding\n  subprocess commands (e.g. ``$FOO=\"bar\" bash -c r\"echo $FOO\"``).\n\n**Changed:**\n\n* Added the fastest way to run xonsh AppImage to the docs.\n* ``command_not_found()`` is now a wrapper function that finds packages for missing\n  commands in a variety of locations. This function now also takes an ``env`` argument\n  for looking up values in the enviornment.\n* The variable cwd_dir, used for prompts,\n  now always has a slash at the end, so users can use the\n  construct \"{cwd_dir}{cwd_base}\" in their custom prompt definitions.\n\n**Fixed:**\n\n* crash when starting wizard by ``xonfig wizard``\n  xonsh.environ: ensure get_docs(name).doc_default is str when name is not registered.\n* Fixed issue where xontribs were failing from ``AttributeError: '_MergedKeyBindings' object has no attribute 'add'``\n\n**Authors:**\n\n* Anthony Scopatz\n* David Strobach\n* Bob Hyman\n* anki-code\n* Danny Sepler\n* Eadaen1\n\n\n\nv0.9.21\n====================\n\n**Added:**\n\n* ``xonsh-in-docker.py`` script now has ``--pytest`` parameter,\n  that automates pytest installation into the Docker container.\n* Setup extras tag '[full]' to install prompt-toolkit and pygments in one fell swoop.\n  Full feature install can be ``pip install xonsh[full]``.\n* Support for PEP 570 positional-only parameters.\n* Support for starred expressions within return statement\n  (``return x, *my_list``).\n* Xonsh now runs in Python 3.9\n* ``vox`` xontrib now supports ``new --activate`` and ``deactivate --remove``\n  to create + activate and deactivate + remove virtual environments in a single\n  command.\n\n**Changed:**\n\n* Rewrote Installation and Configuration sections of Getting Started doc\n  to clarify install from packages, and generally improve flow.\n\n**Fixed:**\n\n* Fixed incorrect reference to XONSH_HIST_SIZE instead of XONSH_HISTORY_SIZE\n* RST code-block:: xonshcon now works.\n* Non-default parameters can not follow defaults anymore.\n* Fixed parser not emmiting errors in some cases.\n\n**Authors:**\n\n* Anthony Scopatz\n* Jamie Bliss\n* David Strobach\n* Bob Hyman\n* Will S\n* Danny Sepler\n* Marius van Niekerk\n\n\n\nv0.9.20\n====================\n\n**Added:**\n\n* ``abbrevs`` expansion now allows for setting cursor to a specific\n  position within the expanded abbrev. For instance\n  ::\n\n    abbrevs[\"eswap\"] = \"with ${...}.swap(<edit>):\\n    \"\n\n  expands ``eswap`` as you type to environment context manager\n  ``swap()`` syntax and places the cursor at the position of the\n  ``<edit>`` mark removing the mark itself in the process.\n* Support for ANSI escape codes in ``$PROMPT``/``$RIGHT_PROMPT``. In this way 3rd party prompt generators like ``powerline`` or ``starship`` can be used to set the prompt. ANSI escape codes might be mixed with the normal formatting (like ``{BOLD_GREEN}``) and *prompt variables* (like ``{user}``) should work as well.\n  For example:\n  ::\n\n    $PROMPT=lambda: $(starship prompt)\n    $RIGHT_PROMPT=\"\\x1b[33m{hostname} {GREEN}> \"\n* Added ``$HOSTNAME`` and ``$HOSTTYPE`` environment variables.\n* New ``Env.rawkeys()`` iterator for iterating over all keys in an environment,\n  not just the string keys like with ``__iter__()``.\n* New landing page for https://xon.sh\n* Added xonsh AppImage to the GitHub release assets\n* xonsh now comes with a bulitin version of prompt-toolkit (3.0.5) which will be used as fall back if prompt_toolkit is not installed.\n* Support for Python 3.8 PEP 572 assignment expressions (walrus operator).\n\n**Changed:**\n\n* custom startup scripts replaced by setup.py -generated (console) entrypoint scripts for both xonsh and xonsh-cat.\n  This means xonsh.bat and xonsh-cat.bat are replaced on Windows by xonsh.exe and xonsh-cat.exe, respectively.\n\n**Fixed:**\n\n* Iterating over ``${...}`` or ``__xonsh__.env`` yields only string\n  values again.\n* List comprehensions do not ignore the second and subsequent ``if`` clauses\n  in multi-if comprehension expressions any more.\n* Xonsh can now fully handle special Xonsh syntax within f-strings, including\n  environmnent variables within ``${}`` operator and captured subprocess\n  expansion within f-string expressions.\n* Avoid startup error on Windows when py.exe chooses wrong python interpreter to run xonsh.\n  When multiple interpreters are in PATH, 'py' will choose the first one (usually in the virtual environment),\n  but 'py -3' finds the system-wide one, apparently by design.\n\n* For xonsh-cat, avoid parsing and processing first (0'th) argument when invoked directly from OS shell.\n* Run control files are now read in with ``$THREAD_SUBPROCS`` off.\n  This prevents a weird error when starting xonsh from Bash (and\n  possibly other shells) where the top-level xonsh process would\n  be stopped and placed into the background during startup. It\n  may be necessary to set ``$THREAD_SUBPROCS=False`` in downstream\n  xonsh scripts and modules.\n* Fixed installation issues where generated files (like the parser table and\n  amalgamated modules) were not installed.\n* The xonsh test suite has been cleaned up. So no more failing test. Hopefully.\n* Addressed robustness issue with ``\"locked\"`` history key not\n  being present at startup.\n* ``vox`` xontrib works again with the new environment defaults.\n\n**Authors:**\n\n* Anthony Scopatz\n* Morten Enemark Lund\n* David Strobach\n* Bob Hyman\n* anki-code\n* Raphael Das Gupta\n* Gyuri Horak\n\n\n\nv0.9.19\n====================\n\n**Added:**\n\n* ``history`` command now supports ``flush`` action\n* Added new items on \"Bash to xsh\" page\n* JsonHistory: added ``history gc --force`` switch to allow user to override above warning.\n* JsonHistoryGC: display following warning when garbage collection would delete \"too\" much data and don't delete anything.\n\n  \"Warning: History garbage collection would discard more history ({size_over} {units}) than it would keep ({limit_size}).\\n\"\n  \"Not removing any history for now. Either increase your limit ($XONSH_HISTORY_SIZE), or run ``history gc --force``.\",\n\n  It is displayed when the amount of history on disk is more than double the limit configured (or defaulted) for $XONSH_HISTORY_SIZE.\n* $LS_COLORS code 'mh' now recognized for (multi) hard-linked files.\n* $LS_COLORS code 'ca' now recognized for files with security capabilities (linux only).\n* CI step to run flake8 after pytest.\n* RichCompletion for completions with different display value, description and prefix_len.\n* Allow completer access to multiline document when available via ``xonsh.completers.tools.get_ptk_completer().current_document``.\n* ``abbrevs`` word expasion can now be reverted by pressing\n  the space bar second time immediately after the previous\n  word got expanded.\n* ``ulimit`` command.\n* ``pdb`` xontrib, that runs pdb debugger on reception of SIGUSR1 signal.\n* xontrib-xpg is a xontrib for running or explaining sql queries for posgresql database.\n\n**Changed:**\n\n* Xonsh now launches subprocesses with their ``argv[0]`` argument containing\n  the command exactly as inserted by the user instead of setting it to the\n  resolved path of the executable. This is for consistency with bash and other\n  shells.\n* Added ability to register, deregister environment variables;\n  centralized environment default variables\n* Added exit to the \"Bash to xsh\" article.\n* xonsh.main _failback_to_other_shells now tries user's login shell (in $SHELL) before trying system wide shells from /etc/shells.\n* The current working directory is now correctly obtained in line 501 of xonsh/parsers/base.py\n* Garbage collection avoids deleting history and issues a warning instead if existing history is more than double the comfigured limit.\n  This protects active users who might have accumulated a lot of history while a bug was preventing garbage collection.  The warning\n  will be displayed each time Xonsh is started until user takes action to reconcile the situation.\n* ``tests\\test_integrations.py`` no longer runs with XONSH_DEBUG=1 (because new, debug-only progress messages from history were breaking it).\n* Updated pytest_plugin for pytest 5.4 API, pip requirements for pytest>= 5.4\n* Major improvements to Jedi xontrib completer:\n    * Use new Jedi API\n    * Replace the existing python completer\n    * Create rich completions with extra info\n    * Use entire multiline document if available\n    * Complete xonsh special tokens\n    * Be aware of _ (last result)\n    * Only show dunder attrs when prefix ends with '_'\n* Many files are starting to be formatted using ``pyupgrade --py36-plus``, in order to automatically update to newer\n  Python constructs.\n* ``xontrib load`` does not stop loading modules on error any more.\n\n**Deprecated:**\n\n* ``pytest --flake8`` now exits with error message to use flake8 instead.\n  Allows single list of lint exceptions to apply in CI and your IDE.\n\n**Removed:**\n\n* Removed history replay\n* pytest-flake8 package from requirements\\*.txt\n* Xonsh now relies exclusively on Setuptools for install.\n* Compatibility with Python 3.5 has been removed as well as all related code. In\n  particular xonsh.inspector does not defined ``getouterframes`` anymore, use\n  ``inspect.getouterframe`` directly.\n\n**Fixed:**\n\n* Unhandled exception triggered by unexpected return from callable alias.\n* Fix path completer throwing exception sometimes\n* Fixed help operator not displaying definition for callables.\n* JsonHistory.files(): Now once again enumerates history files from the directory.  This has been broken for about 2 years.\n* JsonHistory.run_gc(): Don't busy loop while waiting for history garbage collection to complete, sleep a bit instead.\n  This does much to keep Xonsh ptk_shell responsive when dealing with very large history on disk.\n* Fixed JSON history indexing error.\n* Fixed syntax error in scripts containing line continuation syntax.\n* $LS_COLORS code 'fi' now used for \"regular files\", as it should have been all along. (was 'rs')\n  See (#3608)[https://github.com/xonsh/xonsh/issues/3608].\n* pyghooks.color_files now follows implememntation of ls --color closely.  Thanks @qwenger!\n  However, a few documented differences remain due to use in Xonsh.\n\n* $LS_COLORS['ln'] = 'target' now works.  Also fixes #3578.\n* Fixed exit code for commands executed via ``-c`` (#3402)\n* Logical subprocess operators now work after long arguments (e.g. ``--version``).\n* ``pip`` completer no longer erroneously fires for ``pipx``\n* Updated development guide to reference flake8 instead of pylint\n* Corrected flake8 config for allowed exceptions.\n* various pytest warnings in a \"clean\" test run.\n* The current Mercurial topic is shown.\n* Fixed import problems due to modules using deprecated pkg_resources methods by proxying calls to the underlying loader.\n* Typo in 'source' alias.\n* Crash in 'completer' completer.\n* Don't complete unnecessarily in 'base' completer\n* Viewing mock objects in the shell\n* Fixed formatting error in ``vox rm`` command.\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* Morten Enemark Lund\n* Bob Hyman\n* David Strobach\n* Burak Yiğit Kaya\n* Matthias Bussonnier\n* anki-code\n* David Dotson\n* con-f-use\n* Daniel Shimon\n* Jason R. Coombs\n* Gyuri Horak\n* Achim Herwig\n* Marduk Bolaños\n* Stefane Fermigier\n* swedneck\n* Feng Tian\n* cafehaine\n* paugier\n\n\n\nv0.9.18\n====================\n\n**Added:**\n\n* external *xontrib-hist-navigator* to facilitate directory history navigation.\n* Support package prompt-toolkit V3 as well as V2 in prompt_toolkit shell.\n* New `xontrib-output-search <https://github.com/anki-code/xontrib-output-search>`_ to get identifiers, names, paths, URLs and words from the previous command output and use them for the next command.\n* New `xontrib-pipeliner <https://github.com/anki-code/xontrib-pipeliner>`_ is to easily process the lines using pipes.\n* New `xontrib-prompt-bar <https://github.com/anki-code/xontrib-prompt-bar>`_ with elegance bar style for prompt.\n\n**Changed:**\n\n* $SHELL_TYPE \"prompt_toolkit\" with any suffix creates the \"prompt_toolkit\" shell, requires package prompt-toolkit >= 2.0\n* Moved code from package xonsh.ptk2 to xonsh.ptk_shell (because it's the only one now); package xonsh.ptk2 redirects thence.\n* Added extremely simplified xonsh AppImage building process.\n* Added examples of usage $XONSH_TRACE_SUBPROC to the docs\n* Use UTF-8 encoding when writing .xonshrc with webconfig for Windows compatibility\n\n**Deprecated:**\n\n* prompt-toolkit versions before 2.0\n\n**Removed:**\n\n* package xonsh.ptk\n\n**Fixed:**\n\n* Fixed name autosuggestion in path completer (#3519)\n* Flake8/black fixes to the whole code tree, in 3 steps.\n  Devs should update their IDE to run both during file editing, to avoid a re-accumulation of arbitrary exceptions.\n* tests/test_builtins.py, fix test case test_convert_macro_arg_eval(kind).\n\n**Authors:**\n\n* Gil Forsyth\n* Jamie Bliss\n* Bob Hyman\n* anki-code\n* Raphael Das Gupta\n* Noortheen Raja\n* Manor Askenazi\n* Marduk Bolaños\n\n\n\nv0.9.17\n====================\n\n**Changed:**\n\n* ``@$()`` subprocess operator now properly strips newline characters off\n  the lines of multiline output.\n\n* ``@$()`` subprocess operator does not require leading and trailing whitespace\n  anymore, so expansions like ``cd /lib/modules/@$(uname -r)/kernel`` or\n  ``gdb --pid=@$(pidof crashme)`` are now possible.\n* Moved most CI to github actions (OSX is still on travis)\n* Replaced Repl.It with RunThis on the front page of the docs.\n\n**Fixed:**\n\n* autovox xontrib now works with Python 3.5\n* It is now possible to pass ``\"&\"`` as the last argument in subprocess mode.\n* Fixed a bug on Windows causing ``FileNotFoundError`` exception if path\n  elements contain trailing spaces.\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* David Strobach\n\n\n\nv0.9.16\n====================\n\n**Added:**\n\n* Added ``abbrevs`` xontrib.\n* Added `xontrib-pyenv <https://github.com/dyuri/xontrib-pyenv>`_ to list of registered xontribs.\n\n**Changed:**\n\n* ``xdg-open`` now runs unthreaded.\n\n**Fixed:**\n\n* Return Token.Text when filesystem item's type not defined in LS_COLORS; avoid crashing Pygments.\n* Fixed bug on Windows if Path elements has trailing spaces. Windows in general and ``os.path.isdir()``\n  doesn't care about trailing spaces but ``os.scandir()`` does.\n\n**Authors:**\n\n* Morten Enemark Lund\n* Bob Hyman\n* David Strobach\n* Gyuri Horak\n* Chris Lasher\n\n\n\nv0.9.15\n====================\n\n**Added:**\n\n* Adds documentation for how to setup an emacs editing mode for xonsh.\n* New ``$XONSH_TRACE_SUBPROC`` environment variable.\n* Added ``-l``, ``-c`` and ``-a`` options to ``xexec``, works now like ``exec``\n  in bash/zsh\n* **$HISTCONTROL** - *errordups* support for history-sqlite backend\n\n**Changed:**\n\n* ``-l`` switch works like bash, loads environment in non-interactive shell\n* The xonsh pytest plugin no longer messes up the test order for pytest. Xsh test\n  are still executed first to avoid a bug were other tests would prevent ``test_*.xsh``\n  files to run correctly.\n* New repo name for xxh\n\n**Fixed:**\n\n* Correctly follow symlinks when using dot-dot paths with cd -P.\n* ``execx`` does not require the input string to be newline-terminated.\n* ``evalx`` accepts newline-terminated input string.\n* Fixed issue where negative exit codes (such as those produced\n  by core dumps) where treated as logical successes when chaining\n  processes with other boolean expressions.\n* Fixed XONSH_TRACE_SUBPROC for pipeline command.\n* updated CONTRIBUTING.rst about running pylint for changed files\n\n**Authors:**\n\n* Anthony Scopatz\n* Morten Enemark Lund\n* David Strobach\n* anki-code\n* Samuel Lotz\n* Gyuri Horak\n* Noortheen Raja\n* Gabriel Vogel\n* anki\n* Jerzy Drozdz\n\n\n\nv0.9.14\n====================\n\n**Added:**\n\n* Added building process of standalone rootless AppImage for xonsh.\n* pyproject.toml -- so vscode can use black as python formatter interactively\n* The ``xonsh/interactive`` container has been added, in addition to the previous ``xonsh/xonsh`` and ``xonsh/action`` containers. See https://hub.docker.com/u/xonsh\n* New ``$THREAD_SUBPROCS`` environment variable allows you to\n  specify whether threadable subprocesses should actually be\n  run in a thread or not.  Default ``True``.\n* event on_lscolors_changed which fires when an item in $LS_COLORS changed.\n* dict pyghooks.file_color_tokens containing color tokens for file types defined in $LS_COLORS.\n* file pyproject.toml containing config rules for black formatter consistent with flake8\n* New ``umask`` utility to view or set the file creation mask\n* New ``xonfig web`` command that launches a web UI (in your browser) that\n  allows users to configure their ``$XONSH_COLOR_STYLE``, ``$PROMPT``, and\n  loaded xontribs in an interactive way. This is the prefered way to initialize\n  the ``~/.xonshrc`` file on a new system or for new users.  It supersedes the\n  old ``xonfig wizard`` command.\n* New ``xonsh.webconfig`` subpackage for creating and launching ``xonfig web``.\n* Added ``localtime`` entry to the ``$PROMPT_FIELDS`` dictionary, allowing users\n  to easily place the current time in their prompt. This can be formatted with\n  the ``time_format`` entry of ``$PROMPT_FIELDS``, which defaults to ``\"%H:%M:%S\"``.\n  These are implemented in the new ``xonsh.prompt.times`` module.\n* The ``html`` module in ``xonsh.lazyimps`` was added to lazily import\n  ``pygments.formatters.html``.\n* New ``xonsh.pyghooks.XonshHtmlFormatter`` class that enables HTML formatting of\n  xonsh color strings.\n\n**Changed:**\n\n* the feature list: subprocess mode colorizes files per $LS_COLORS, when they appear as arguments in the command line.\n  Yet another approximation of ls -c file coloring behavior.\n* file setup.cfg to declare flake8 rules for all tools (not just pytest)\n* Moved python 3.8 parsing out of base parser\n* The ``xonsh.pyghooks.XonshLexer`` now inherits from ``Python3Lexer``,\n  rather than ``PythonLexer``.\n* ``xonsh.pyghooks.XonshStyle`` now presents the ``highlight_color`` and\n  ``background_color`` from the underlying style correctly.\n\n**Removed:**\n\n* Removed deprecated ``xonda`` ``xontrib`` from list\n\n**Fixed:**\n\n-  `[color] in .gitconfig (#3427) <https://github.com/xonsh/xonsh/issues/3427>`_ now stripped from {curr\\_branch}\n\n  - `Before <https://i.imgur.com/EMhPdgU.png>`_\n  - `After <https://i.imgur.com/sJiqgsb.png>`_\n\n* The autovox xontrib now preserves activated environment on cd\n* setup.cfg -- duplicated flake8 config so interactive use and test runs enforce same rules. (Implementation is arguably a regression.)\n* Pressing ``Ctrl+Z`` no longer deadlocks the terminal,\n  allowing further input from the user, even for threaded\n  subprocesses.\n* ``XonshImportHook.get_source()`` now takes a dotted module name instead of a file path, as it should\n* Fixed documentation on environment variable ``$PROMPT_REFRESH_INTERVAL``.\n* Using rmtree on windows no longer attempts to use invalid ``rm`` command\n  and uses ``del`` instead.\n* Avoid crash in SubprocessSpec._run_binary() when command line has 2 real subprocesses piped together.\n* Fixed an issue on Windows where pressing ctrl-c could sometimes result\n  in a traceback if the process had already quit before being killed by xonsh.\n* Modified base_shell._TeeStdBuf to feed bytes not str to console window under VS Code.\n* Command line with leading whitespace improperly formated (PTK2/PTK3).\n* Fix Ctrl-C event causing Atribute error on Windows (for reals this time).\n* Unit test failures in test_integrations under ubuntu 19.10 with Python 3.8.0\n* .gitignore entries for venv under project root (as for autovox) and for VS Code.\n* Minor typo fixes to xontrib descriptions.\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* Morten Enemark Lund\n* Jamie Bliss\n* Bob Hyman\n* David Strobach\n* Burak Yiğit Kaya\n* anki-code\n* adam j hartz\n* Nickolay Bukreyev\n* Edmund Miller\n* Mike Crowe\n* Sylvain Corlay\n* Chris Lasher\n* Marcio Mazza\n\n\n\nv0.9.13\n====================\n\n**Changed:**\n\n* The ``$LS_COLORS`` environment variable will no longer raise exceptions when trying\n  to convert ANSI color sequences to xonsh color names.\n\n**Removed:**\n\n* Remove built in support for \"win unicode console\". Full unicode support on windows is now provided by\n  using the new `Windows terminal <https://github.com/microsoft/terminal>`__.\n\n**Fixed:**\n\n* Fixed issue converting ANSI color codes that contained both slow blink and set foreground\n  or set background sequences.\n* Fix coreutils ``cat`` behaviour on empty input (e.g. ``cat -``).\n\n* Fix Ctrl-C event causing Atribute error on Windows.\n* Fix Added OpenBSD as a platform\n\n* Fix Corrected aliases for OpenBSD to not include ``--color=auto`` and ``-v``\n* Fixed a regession with xonsh superhelp ``??`` operator and ``which -v`` which showed Pythons builtin\n  doc strings.\n\n**Authors:**\n\n* Anthony Scopatz\n* Morten Enemark Lund\n* David Kalliecharan\n\n\n\nv0.9.12\n====================\n\n**Added:**\n\n* Added ``autovox`` xontrib\n* ``xonsh.lib.itertools.as_iterable`` for making sure that strings are turned into iterables\n* The ``percol`` command no longer predicts as threadable.\n\n**Changed:**\n\n* The ``source`` alias is now unthreaded, enabling ``contextvars`` to be used\n  correctly in sourced files.\n* Changed the ``ExecAlias`` to only be applied when the logical operators\n  (``and``, ``or``) are surrounded by whitespace.\n\n**Fixed:**\n\n* Fixed missing ANSI color modifiers which causes traceback when they were used by ``$LS_COLORS``.\n* gray empty bottom bar when using $XONSH_UPDATE_PROMPT_ON_KEYPRESS\n* ``xonsh.lib.subprocess.check_output()`` now properly captures output.\n* Correct ANSI colors for the default color scheme to stop suppressing the bold / italic / underline modifiers.\n* tab completion for cd correctly handles the CDPATH environment variable\n* On Windows, send ``CTRL_C_EVENT`` to subprocesses instead of ``SIGINT``.\n* ``xonsh`` will return a non-zero exit code if it is run in file mode and\n  cannot find the file specified, e.g.\n\n  .. code-block::\n\n     $ xonsh thisfiledoesntexist.xsh\n     xonsh: thisfiledoesntexist.xsh: No such file or directory.\n     $ _.returncode\n     1\n* Fixed issue with Jedi xontrib incorrectly raising errors\n  during tab completion.\n* Defining functions inside of the shell no longer crashes on Python 3.8.\n* The encoding for xonsh script are now always assumed to be utf-8, even on\n  Windows where the default encoding can be different. This allows for writing\n  real unicode characters in the xonsh script files.\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* Morten Enemark Lund\n* Jamie Bliss\n* christopher\n* Carmen Bianca Bakker\n* Caleb Hattingh\n* Sean Farley\n* Allan Crooks\n* micimize\n* nedsociety\n* fanosta\n\n\n\nv0.9.11\n====================\n\n**Changed:**\n\n* ``vox activate`` will now prepend the absolute path of the virtualenv ``bin/`` directory (or ``Scripts/`` on Windows) to ``$PATH``; before this was a relative path.\n\n**Fixed:**\n\n* \"lou carcolh\" example and description of ``endidx`` in completer tutorial\n* Logical operators in aliases are now executed as expected, e.g.\n  ``aliases['echocat'] = 'echo \"hi\" and echo \"there\"'`` will, when run, return\n\n  .. code-block::\n\n     hi\n     there\n\n**Authors:**\n\n* Gil Forsyth\n* con-f-use\n* Caleb Hattingh\n\n\n\nv0.9.10\n====================\n\n**Added:**\n\n* $PROMPT_REFRESH_INTERVAL: Automatically invalidate the PROMPT every so many seconds.\n* Allow disabling individual items in gitstatus prompt\n\n**Fixed:**\n\n* Fix ``cat`` can't read pseudo files with zero size such as /proc/\\* or /sys/\\* (#3182, #3199)\n* command-not-found: now works on non-Debian bansed distributions\n* Implemented ``'target'`` psuedo-color in ``$LS_COLORS`` for link coloring based\n  off of the link target. This was causing issues on some systems where this is\n  the default.\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* Morten Enemark Lund\n* virus\n* vaaaaanquish\n* K.-Michael Aye\n* Alexander Steffen\n* Jan Chren\n* Sean Farley\n* László Vaskó\n* Nils ANDRÉ-CHANG\n* chengxuncc\n\n\n\nv0.9.9\n====================\n\n**Added:**\n\n* $COMPLETION_IN_THREAD: When this is True, background theads is used for completion.\n* Open man page when requesting help for subprocess commands, e.g. using ``sh?``\n* Add several cmds/tools for predict list\n\n**Changed:**\n\n* Changed ``XonshSession.link_builtins`` to set a ``DynamicAccessProxy`` for each ``builtin`` link\n* ``events`` is now unlinked from ``builtins``\n\n**Removed:**\n\n* Removed ``DeprecationWarningProxy``; no longer needed\n* Removed ``load_proxies`` and ``unload_proxies``; moved functionality to ``XonshSession.link_builtins``, ``XonshSession.unlink_builtins``, respectively.\n* Removed deprecated ``builtin.__xonsh_*__`` alises, please use ``builtins.__xonsh__.*`` instead.\n\n**Fixed:**\n\n* Added proxied ``__dir__`` method to ``DynamicAccessProxy`` to restore\n  tab-completion for objects that use the proxy (especially ``events``)\n* Avoid displaying finished tasks in title.\n* ``inspect.getsource`` now works correctly and the ``__xonsh__.execer`` resets\n  ``<filename>`` correctly.  This was causing several very strange buggy\n  behaviors.\n* Hitting ``Enter`` while ``$VI_MODE=True`` now executes the current code block\n  irrespective of cursor position\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* David Dotson\n* vaaaaanquish\n* Alexander Steffen\n* Ke Zhang\n* Daniel Smith\n\n\n\nv0.9.8\n====================\n\n**Fixed:**\n\n* Fixed a bug in sourcing Bash functions, where ``delare -F`` contained\n  newlines, meaning that the ``read`` command that followed it would only\n  pick up the first function declaration. ``echo`` is used to normalize\n  whitespace.\n\n**Authors:**\n\n* Anthony Scopatz\n\n\n\nv0.9.7\n====================\n\n**Added:**\n\n* add xontrib (xontrib-readable-traceback)\n* Registered kitty xontrib.\n* The zipapp extra was added to install the importlib.resources backport on <3.7\n\n**Changed:**\n\n* turn off warning on completer\n* xontrib metadata loading is now zipapp safe when possible\n\n**Fixed:**\n\n* Updated py-bash-completion that is vended with xonsh to v0.2.6 which\n  includes a fix completion which uses a subshell environment and a\n  fix for string index error in stripped prefix.\n* Removed obsolte \"Alt+.\" keybinding in xontrib-bashisms that was causing built-in binding to malfunction.\n* Fixed that occurs when type a command before rendering.\n\n**Authors:**\n\n* Anthony Scopatz\n* Jamie Bliss\n* con-f-use\n* vaaaaanquish\n* Gyuri Horak\n\n\n\nv0.9.6\n====================\n\n**Fixed:**\n\n* Fixed exception in help/version threadable predictor\n* Fixed gitstatus prompt so that it also now reports deleted files\n* Fixed issue where the prompt-toolkit2 shell could not display and\n  would end up in an infinite error loop if ``$MULTILINE_PROMPT``\n  was a suitably \"false\" value, such as ``None`` or an empty string.\n* Fixed issue where setting ``$XONSH_STDERR_PREFIX`` and ``$XONSH_STDERR_POSTFIX``\n  and running a command in the ``xonshrc`` file would throw an error.\n\n**Authors:**\n\n* Anthony Scopatz\n* David Strobach\n* virus\n* shadow-light\n\n\n\nv0.9.5\n====================\n\n**Fixed:**\n\n* Style 'bw'. Background colors was added in the style description.\n* Fix causing error in ``get_predictor_threadable`` on windows when try to run not exist command\n* ``pip`` completer no longer fires when ``pip`` happens to appear within a word\n  like ``bagpipes``\n* Fixed issue with ``history gc`` command not running properly.\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* Jean-Benoist Leger\n* virus\n* con-f-use\n\n\n\nv0.9.4\n====================\n\n**Added:**\n\n* Add processing ``%d`` for avoid overwriting in ``run-tests.xsh``\n\n**Changed:**\n\n* Xonsh now does not attempt to expand raw strings, so now::\n\n    $ echo \"$HOME\"\n    /home/user\n    $ echo r\"$HOME\"\n    $HOME\n* sudoedit now runs unthreaded\n\n**Fixed:**\n\n* threadable predictor for 'env' command based on predictor from the executed\n  command. Fixes #2759 and #3103.\n* An error in the 'xon.sh' executable that only popped up during testing has\n  been fixed.  Specifically: It now directly calls 'python3' without invoking\n  'env'.\n* bashisms extension can be used again with prompt_toolkit v1\n* Fix a crash when setting ``$INTENSIFY_COLORS_ON_WIN`` in certain situations.\n* Fix issue with bashsisms xontrib causing syntax errors for some Python statements\n* portable trick to pass args which replace '/usr/bin/env' is removed and\n  '/usr/bin/env' is used. Fixes bug when a python3 used is outside the default\n  'PATH'.\n\n**Authors:**\n\n* Anthony Scopatz\n* Morten Enemark Lund\n* Jean-Benoist Leger\n* David Strobach\n* virus\n* Carmen Bianca Bakker\n* con-f-use\n* cclauss\n* Eddie Peters\n\n\n\nv0.9.3\n====================\n\n**Deprecated:**\n\n* Python v3.4 has been fully, completely, and (hopefully) correctly\n  deprecated. Please migrate to an officially supported version of Python.\n\n**Authors:**\n\n* Anthony Scopatz\n\n\n\nv0.9.2\n====================\n\n**Changed:**\n\n* For aliases, predictor is build with the predictor of original command, in\n  place of default predictor.\n\n**Fixed:**\n\n* Updated setup.py to require Python 3.4 using the ``python_requires`` keyword.\n  This rectifies issues with pip installing xonsh. Python 3.4 support will\n  be removed on the following release.\n\n**Authors:**\n\n* Anthony Scopatz\n* Jean-Benoist Leger\n\n\n\nv0.9.1\n====================\n\n**Changed:**\n\n* We no longer manually check the Python version in ``setup.py``,\n  but instead use the setuptools ``python_requires`` feature.\n\n**Fixed:**\n\n* Updates for integrating with new colors styles in Pygments v2.4.0.\n\n**Authors:**\n\n* Anthony Scopatz\n\n\n\nv0.9.0\n====================\n\n**Added:**\n\n* Implemented the following \"bang command\" bashisms: ``!$``, ``$*``, ``!^``,\n  and ``!<str>``.  These are in addition to ``!!``, which was already\n  implemented.\n* asciinema (terminal recorder) added in not threadable commands.\n* tput added in not threadable commands.\n* New ``color_tools.KNOWN_XONSH_COLORS`` frozenset.\n* New ``pyghooks.PYGMENTS_MODIFIERS`` mapping from color modifier names to\n  pygments colors.\n* New ``pyghooks.color_name_to_pygments_code()`` function for converting\n  color names into pygments color codes.\n\n**Changed:**\n\n* Circle now runs ``black`` checks on contents of bundled xontribs\n\n* The ``black`` checks no longer skip some files buried deeper in the directory\n  tree.\n* Errors while formatting the prompt are highlighted for easier debugging.\n* Pygments styles only define the standard set of colors, by default.\n  Additional colors are computed as needed.\n* PTYs created for running threadable command have now size set to same size\n  than main terminal.\n* Update documentation pointing to the minimal required version of\n  Python (3.5).\n\n**Deprecated:**\n\n* Drop support for Python 3.4.\n\n**Removed:**\n\n* ``pyghooks.KNOWN_COLORS`` is no longer needed or useful as pygments colors\n  are computed automatically.\n* ``style_tools.KNOWN_COLORS`` was never used, redundant with\n  ``pyghooks.KNOWN_COLORS`` and has thus been removed.\n\n**Fixed:**\n\n* Fixed a DeprecationWarning that would show up during an import of MutableSet.\n* Fixed error with aliases composed of functions wrapped in functools.partial.\n* ``black`` formatted all xontribs\n* deleting a non existing environement variable with default value do nothing\n  instead of raising a exception trying to deleting it in existing values dict.\n* Fixed crash while converting ANSI color codes with leading zeroes\n* Fixed crash while parsing invalid ANSI color code\n* fix causing infinite loop when doing ``cat`` empty file\n* Fixed issue which occurs when user doesn't have access to parent directory and\n  xonsh scan all parents directory to find if we are in a Hg repository.\n* Fixed issue with pygments-cache not properly generating a cache the first\n  time when using prompt-toolkit when using ``ptk2``.\n  This was due to a lingering lazy import of ``pkg_resources``\n  that has been removed.\n* Minor update for Python v3.8.\n* Fixed a \"'NoneType' object is not iterable\" bug when looking up ``stty``\n  in command cache.\n* The release tarball now includes all test files.\n* Arguments passed to python in 'scripts/xonsh' and in 'scripts/xonsh-cat' are\n  now passed by a portable hack in sh, not anymore by /usr/bin/env.\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* Jean-Benoist Leger\n* David Strobach\n* virus\n* Carmen Bianca Bakker\n* Alexander Sosedkin\n* Kale Kundert\n* Andrés García García\n* Samuel Dion-Girardeau\n* Steven Kryskalla\n* Rodrigo Oliveira\n\n\n\nv0.8.12\n====================\n\n**Added:**\n\n* Support for more ANSI escape sequence modifers allowed in color names.\n  The current modifiers now allowed are: BOLD, FAINT, ITALIC, UNDERLINE,\n  SLOWBLINK, FASTBLINK, INVERT, CONCEAL, and STRIKETHROUGH.\n* New ``ansi_tools.ansi_color_name_to_escape_code()`` function for\n  converting a color name to an ANSI escape code.\n* ``color_tools.RE_XONSH_COLOR`` is a regular expression for matching\n  xonsh color names.\n* ``color_tools.iscolor()`` is a simple function for testing whether a\n  string is a valid color name or not.\n* The ``tools.all_permutations()`` function yields all possible permutations\n  of an iterable, including removals.\n\n**Changed:**\n\n* change url of xontrib-autojump\n* ANSI color styles may now be defined simply by their plain and intense colors.\n* ``SET_FOREGROUND_3INTS_`` renamed to ``SET_FOREGROUND_FAINT_``,\n  ``SET_BACKGROUND_3INTS_`` renamed to ``SET_BACKGROUND_FAINT_``,\n  ``SET_FOREGROUND_SHORT_`` renamed to ``SET_FOREGROUND_SLOWBLINK_``, and\n  ``SET_BACKGROUND_SHORT_`` renamed to ``SET_BACKGROUND_SLOWBLINK_``.\n\n**Removed:**\n\n* ``ansi_tools.ANSI_REVERSE_COLOR_NAME_TRANSLATIONS`` removed, as it is\n  no longer needed.\n\n**Fixed:**\n\n* Fixed issues where ``$LS_COLORS`` could not convert valid ANSI colors.\n\n**Authors:**\n\n* Anthony Scopatz\n* virus\n\n\n\nv0.8.11\n====================\n\n**Added:**\n\n* New ``xonsh.color_tools.short_to_ints()`` function for directly\n  converting a short (0 - 256) color into a 3-tuple of ints\n  representing its RGB value.\n* New ``xonsh.ansi_colors.ansi_reverse_style()`` function for\n  converting a mapping of color names to ANSI escape codes into\n  a mapping from escape codes into color names. This is not a\n  round-trippable operation.\n* New ``xonsh.ansi_colors.ansi_color_escape_code_to_name()`` function\n  for converting an ANSI color escape code into the closest xonsh\n  color name for a given style.\n* New ``xonsh.events.EventManager.exists()`` method enables checking\n  whether events actually exist without making the event if it\n  doesn't exist.\n* New command-specific event categories called ``on_pre_spec_run_<cmd-name>``\n  and ``on_post_spec_run_<cmd-name>`` will be fired before and after\n  ``SubpocSpec.run()`` is called.  This allows for command specific\n  events to be executed.  For example, ``on_pre_spec_run_ls`` would\n  be run prior to an invocation of ``ls``.\n* New ``xonsh.environ.LsColors`` class for managing the ``$LS_COLORS``\n  environment variable. This ensures that the ``ls`` command respects the\n  ``$XONSH_COLOR_STYLE`` setting. An instance of this class is added to the\n  environment when either the ``$LS_COLORS`` class is first accessed or\n  the ``ls`` command is executed.\n* The ``on_pre_spec_run_ls`` event is initialized with a default handler\n  that ensures that ``$LS_COLORS`` is set in the actual environment prior\n  to running an ``ls`` command.\n* New ``xonsh.tools.detype()`` function that simply calls an object's own\n  ``detype()`` method in order to detype it.\n* New ``xonsh.tools.always_none()`` function that simply returns ``None``.\n* New ``Env.set_ensurer()`` method for setting an ensurer on an environment.\n\n**Changed:**\n\n* The black and white style ``bw`` now uses actual black and white\n  ANSI colore codes for its colors, rather than just empty color\n  sequences.\n* An environment variable ``detype`` operation no longer needs to be a\n  function, but may also be ``None``. If ``None``, this variable is\n  considered not detypeable, and will not be exported to subprocess\n  environments via the ``Env.detype()`` function.\n* An environment variable ``detype`` function no longer needs to return\n  a string, but may also return ``None``. If ``None`` is returned, this\n  variable is  considered not detypeable, and will not be exported to\n  subprocess environments via the ``Env.detype()`` function.\n* The ``Env.detype()`` method has been updated to respect the new\n  ``None`` types when detyping.\n* The ``xonsh.tools.expandvars()`` function has been updated to respect\n  the new ``None`` types when detyping.\n* The ``xonsh.xonfig.make_xonfig_wizard()`` function has been updated to respect\n  the new ``None`` types when detyping.\n* Event handlers may now be added and discarded during event firing for\n  normal events.  Such modifications will not be applied until the\n  current firing operation is concluded. Thus you won't see newly added\n  events fired.\n* xonsh now uses its own vendored version of ply. Any installed versions will no longer be used. This reflects that ply is no\n  longer distributed as an installable package.\n* Updated to use ply version 3.11.\n* Reverted change in ``give_to_terminal`` to restore working version of\n  ``cmake``, ``rm -i``, etc.  This breaks ``pv | head``.\n\n**Deprecated:**\n\n* The ``xonsh.color_tools.make_pallete()`` function is no\n  longer deprecated, as it is actually needed in other parts of\n  xonsh still, such as ``pyghooks``.\n\n**Removed:**\n\n* All code references to ``$FORMATTER_DICT`` have been removed.\n\n**Fixed:**\n\n* Resolved issues where macro functions were not able to properly\n  accept single-line statements in ``exec`` and ``single`` mode.\n* Minor fixes to ``xonsh.events.debug_level()``.\n* Fixed a regression where some interactive commands were not waited for\n  properly for long enough.\n* Fixed environments not showing in the prompt when using Anaconda Python.\n\n* Fixed regression with anaconda activate/deactivate scripts not working on Windows.\n\n**Authors:**\n\n* Anthony Scopatz\n* Morten Enemark Lund\n\n\n\nv0.8.10\n====================\n\n**Added:**\n\n* New ``xonsh.aliases.partial_eval_alias()`` function and related classes\n  for dispatching and evaluating partial alias applications for callable\n  aliases.\n\n**Changed:**\n\n* Subprocesses will no longer close file descriptors automatically.\n  This was causing issues with other commands that expected file\n  descriptors to remain open, such as ``make``.\n* The ``xonsh.Aliases.eval_alias()`` method updated to use\n  ``xonsh.aliases.partial_eval_alias()``.\n\n**Fixed:**\n\n* Fixed ``xonsh.completers.base.complete_base()`` to no longer throw an\n  error caused by ``complete_python()`` sometimes returning a tuple.\n  This fixes cases such as ``ls &&<TAB>``.\n* Fixed regression with line continuations in implicit subprocess mode within\n  indented blocks of code, such as if-statements.\n* Resolved issue where setting empty signal masks was causing the\n  terminal to close. This was problematic for certain command\n  pipelines. For example, ``pv /dev/urandom | head`` now works.\n* Prevents recursive errors from being raised when there is no child process\n  in ``xonsh.procs.jobs.wait_for_active_job()``.\n* Tweaked ``xonsh.completers.commands.complete_skipper()`` to insert a space following\n  certain tokens (``&&``, ``||``, ``|``, ``and``, ``or``) to avoid overwriting existing tokens\n  with completer output.\n* Fixed bug with evaluating recursive aliases that did not implement\n  the full callable alias signature.\n\n**Authors:**\n\n* Anthony Scopatz\n* Gil Forsyth\n* Troy de Freitas\n\n\n\nv0.8.9\n====================\n\n**Added:**\n\n* New ``env_prefix`` & ``env_postfix`` prompt fields for rendering the pre- and\n  post-fix characters of the an active virtual environment.\n* ON_WSL attribute in platform.py\n* Rendering of ``{env_name}`` in ``$PROMPT`` is now suppressed if\n  the ``$VIRTUAL_ENV_DISABLE_PROMPT`` environment variable is\n  defined and truthy.\n* Rendering of ``{env_name}`` in ``$PROMPT`` is now overridden by\n  the value of ``str($VIRTUAL_ENV_PROMPT)`` if that environment variable\n  is defined and ``not None``. ``$VIRTUAL_ENV_DISABLE_PROMPT`` takes precedence\n  over ``$VIRTUAL_ENV_PROMPT``.\n* A xontrib which adds support for `direnv <https://direnv.net/>`_\n\n**Changed:**\n\n* ``env_name`` prompt field now looks up the pre- and post-fix characters,\n  rather than relying on hard-coded values.\n* Some minor ``history show`` efficiency improvements.\n* If we are on wsl, avoid to use xonsh_preexec_fn when pipe.\n\n**Fixed:**\n\n* Made ``$PATH`` searching more robust to broken symlinks on Windows.\n* undesirable SIGSTOP by putting in a SIGCONT\n* Fixed issue with recursive aliases not being passed all keyword arguments\n  that are part of the callable alias spec. This allows commands like\n  ``aliases['hsa'] = \"history show all\"; hsa | head`` to no longer fail\n  with strange errors.\n\n**Authors:**\n\n* Anthony Scopatz\n* Sagar Tewari\n* Brian Skinn\n* Yohei Tamura\n* anatoly techtonik\n* 74th\n* Chad Kennedy\n\n\n\nv0.8.8\n====================\n\n**Added:**\n\n* ``vox new`` has an added ``-p --interpreter`` flag for choosing the Python interpreter to use for virtualenv creation\n* The default Python intrepreter vox uses to create virtual environments can be set using the ``$VOX_DEFAULT_INTERPRETER`` environment variable.\n\n\n**Changed:**\n\n* ``lib.ChainDB`` now resolves results to the type of the inputs if possible\n\n\n\n\nv0.8.7\n====================\n\n**Added:**\n\n* New xonsh syntax ``pf`` strings -- combining path strings with f-strings.\n\n  Usage:\n\n  .. code-block:: bash\n\n       gil@bad_cat ~ $ repos = 'github.com'\n       gil@bad_cat ~ $ pf\"~/{repos}\"\n       PosixPath('/home/gil/github.com')\n       gil@bad_cat ~ $ pf\"{$HOME}\"\n       PosixPath('/home/gil')\n       gil@bad_cat ~ $ pf\"/home/${'US' + 'ER'}\"\n       PosixPath('/home/gil')\n\n\n**Fixed:**\n\n* Set ``ls`` to ``predict_true`` in ``default_threadable_predictors``.  This prevents ``ls`` on OSX\n  from being flagged on OSX as unthreadable (incorrectly) because it relies on ``ncurses``.\n\n\n\n\nv0.8.6\n====================\n\n**Added:**\n\n* Doco about how to update xonsh and how to set and unset environment variables\n\n\n**Fixed:**\n\n* Updated behavior of the ``cat`` coreutils function so that it properly\n  handles as vareity of cases such as:\n\n    * Exits after concatenating normal files which have a finite size\n    * Continues to run for special files which do not have a size,\n      such as ``/dev/random``\n    * Is interruptable in all cases with Ctrl-C.\n* Callable aliases were not properly raising a ``CalledProcessError`` when they\n  returned a non-zero exist status when ``$RAISE_SUBPROC_ERROR = True``. This has\n  been fixed.\n* Fixed interpretation of color names with PTK2 and Pygments 2.3.1.\n\n\n\n\nv0.8.5\n====================\n\n**Added:**\n\n* Add alias to `base16 shell <https://github.com/chriskempson/base16-shell>`_\n\n* Installation / Usage\n    1. To install use pip\n\n       .. code-block:: bash\n\n            python3 -m pip install xontrib-base16-shell\n\n    2. Add on ``~/.xonshrc``\n\n       .. code:: xonsh\n            :number-lines:\n\n            $BASE16_SHELL = $HOME + \"/.config/base16-shell/\"\n            xontrib load base16_shell\n\n\n    3. See image\n\n       .. image:: https://raw.githubusercontent.com/ErickTucto/xontrib-base16-shell/master/docs/terminal.png\n            :width: 600px\n            :alt: terminal.png\n\n* New ``DumbShell`` class that kicks in whenever ``$TERM == \"dumb\"``.\n  This usually happens in emacs. Currently, this class inherits from\n  the ``ReadlineShell`` but adds some light customization to make\n  sure that xonsh looks good in the resultant terminal emulator.\n* Aliases from foreign shells (e.g. Bash) that are more than single expressions,\n  or contain sub-shell executions, are now evaluated and run in the foreign shell.\n  Previously, xonsh would attempt to translate the alias from sh-lang into\n  xonsh. These restrictions have been removed.  For example, the following now\n  works:\n\n  .. code-block:: sh\n\n      $ source-bash 'alias eee=\"echo aaa \\$(echo b)\"'\n      $ eee\n      aaa b\n\n* New ``ForeignShellBaseAlias``, ``ForeignShellFunctionAlias``, and\n  ``ForeignShellExecAlias`` classes have been added which manage foreign shell\n  alias execution.\n\n\n**Changed:**\n\n* String aliases will now first be checked to see if they contain sub-expressions\n  that require evaluations, such as ``@(expr)``, ``$[cmd]``, etc. If they do,\n  then an ``ExecAlias`` will be constructed, rather than a simple list-of-strs\n  substitutiuon alias being used. For example:\n\n  .. code-block:: sh\n\n      $ aliases['uuu'] = \"echo ccc $(echo ddd)\"\n      $ aliases['uuu']\n      ExecAlias('echo ccc $(echo ddd)\\n', filename='<exec-alias:uuu>')\n      $ uuu\n      ccc ddd\n\n* The ``parse_aliases()`` function now requires the shell name.\n* ``ForeignShellFunctionAlias`` now inherits from ``ForeignShellBaseAlias``\n  rather than ``object``.\n\n\n**Fixed:**\n\n* Fixed issues where the prompt-toolkit v2 shell would print an extra newline\n  after Python evaluations in interactive mode.\n\n\n\n\nv0.8.4\n====================\n\n**Added:**\n\n* Added the possibility of arbitrary paths to the help strings in ``vox activate`` and\n  ``vox remove``; also updated the documentation accordingly.\n* New ``xonsh.aliases.ExecAlias`` class enables multi-statement aliases.\n* New ``xonsh.ast.isexpression()`` function will return a boolean of whether\n  code is a simple xonsh expression or not.\n* Added top-level ``run-tests.xsh`` script for safely running the test suite.\n\n\n**Changed:**\n\n* String aliases are no longer split with ``shlex.split()``, but instead use\n  ``xonsh.lexer.Lexer.split()``.\n* Update xonsh/prompt/cwd.py _collapsed_pwd to print 2 chars if a directory begins with \".\"\n* test which determines whether a directory is a virtualenv\n\n  previously it used to check the existence of 'pyvenv.cfg'\n  now it checks if 'bin/python' is executable\n\n\n**Fixed:**\n\n* Fixed issue with ``and`` & ``or`` being incorrectly tokenized in implicit\n  subprocesses. Auto-wrapping of certain subprocesses will now correctly work.\n  For example::\n\n      $ echo x-and-y\n      x-and-y\n* Fix EOFError when press `control+d`\n* fix no candidates if no permission files in PATH\n* Fixed interpretation of color names with PTK2 and Pygments 2.3.\n* Several ResourceWarnings: unclosed file in tests\n* AttributeError crash when using --timings flag\n* issue #2929\n\n\n\n\nv0.8.3\n====================\n\n**Added:**\n\n* Dociumentation paragrapgh about gow to run xonsh in Emacs shell\n\n\n**Changed:**\n\n* Updated what pip requirements are needed to build the documnetaion\n* ``$XONSH_TRACEBACK_LOGFILE`` now beside strings also accepts ``os.PathLike``\n  objects.\n* Updated vended version of ``ply`` to 3.11\n* Deprecation warnings now print from stacklevel 3.\n\n\n**Fixed:**\n\n* Annotation assignment statements (e.g. ``x : int = 42``) are now supported.\n* Fixed error output wording for fg and bg commands\n* Flake8 errors\n* xonsh can now properly parse import statements with trailing comma within\n  parentheses, e.g.::\n\n    from x import (y, z,)\n* ResourceWarning: unclosed scandir iterator in imphooks.py\n* Removed use of deprecated ``inspect.formatargspec()`` for ``inspect.signature()``\n* ``Makefile`` directive that updates vended version of ``ply``\n\n\n\n\nv0.8.2\n====================\n\n**Changed:**\n\n* Now there is only a single instance of ``string.Formatter()`` in the\n  code base, which is called ``xonsh.tools.FORMATTER``.\n\n\n**Fixed:**\n\n* f-strings (``f\"{expr}\"``) are now fully capable of executing xonsh expressions.\n  The one exception to this is that ``![cmd]`` and ``!(cmd)`` don't work because\n  the ``!`` character interferes with Python string formatting. If you need to\n  run subprocesses inside of f-strings, use ``$[cmd]`` and ``$(cmd)`` instead.\n* Fixed occasional \"no attribute 'settitle' error\"\n\n\n\n\nv0.8.1\n====================\n\n**Added:**\n\n* ``SubprocSpec`` has a new ``pipeline_index`` integer attribute that indicates\n  the commands position in a pipeline. For example, in\n\n  .. code-block:: sh\n\n    p = ![ls -l | grep x]\n\n  The ``ls`` command would have a pipeline index of 0\n  (``p.specs[0].pipeline_index == 0``) and ``grep`` would have a pipeline index\n  of 1 (``p.specs[1].pipeline_index == 1``).  This may be usefule in callable\n  alaises which recieve the spec as an argument.\n\n\n**Changed:**\n\n* Removed ``fish`` from list of supported foreign shells in the wizard.\n* Circle CI config updated to use a pinned version of ``black`` (18.9b0)\n* Pytest plugin now uses ``xonsh.main.setup()`` to setup test environment.\n* Linux platform discovery will no longer use ``platform.linux_distribution()``\n  on Python >=3.6.6. due to pending deprecation warning.\n* Updated Linux Guide as Xonsh is now available in Arch Linux official repositories.\n\n\n**Fixed:**\n\n* Builtin dynamic proxies and deprecation warning proxies were not deleting\n  attributes and items properly.\n* Fixed stdout/sdterr writing infinite recursion error that would occur in\n  long pipelines of callable aliases.\n* Fixed a bug which under very rare conditions could cause the shell\n  to die with PermissionError exception while sending SIGSTOP signal\n  to a child process.\n* Fixed further raw string deprecation warnings thoughout the code base.\n\n\n\n\nv0.8.0\n====================\n\n**Added:**\n\n* Windows CI jobs on Azure Pipelines\n* The ``cryptop`` command will no longer have its output captured\n  by default.\n* Added new env-var ``PTK_STYLE_OVERRIDES``. The variable is\n  a dictionary containing custom prompt_toolkit style definitions.\n  For instance::\n\n    $PTK_STYLE_OVERRIDES['completion-menu'] = 'bg:#333333 #EEEEEE'\n\n  will provide for more visually pleasing completion menu style whereas::\n\n    $PTK_STYLE_OVERRIDES['bottom-toolbar'] = 'noreverse'\n\n  will prevent prompt_toolkit from inverting the bottom toolbar colors\n  (useful for powerline extension users)\n\n  Note: This only works with prompt_toolkit 2 prompter.\n\n\n**Changed:**\n\n* All ``__xonsh_*__`` builtins have been migrated to a ``XonshSession`` instance at\n  ``__xonsh__``. E.g. ``__xonsh_env__`` is now ``__xonsh__.env``.\n* Other xonsh-specific builtins (such as ``XonshError``) have been proxied to\n  the ``__xonsh__`` session object as well.\n\n\n**Deprecated:**\n\n* All ``__xonsh_*__`` builtins are deprected. Instead, the corresponding\n  ``__xonsh__.*`` accessor should be used. The existing ``__xonsh_*__`` accessors\n  still work, but issue annoying warnings.\n\n\n**Fixed:**\n\n* Fixed deprecation warnings from unallowed escape sequences as well as importing abstract base classes directly from ``collections``\n* Fix for string index error in stripped prefix\n* bash_completions to include special characters in lprefix\n\n  Previously, glob expansion characters would not be included in lprefix for replacement\n\n  .. code-block:: sh\n\n    $ touch /tmp/abc\n    $ python\n    >>> from bash_completion import bash_completions\n    >>>\n    >>> def get_completions(line):\n    ...     split = line.split()\n    ...     if len(split) > 1 and not line.endswith(' '):\n    ...         prefix = split[-1]\n    ...         begidx = len(line.rsplit(prefix)[0])\n    ...     else:\n    ...         prefix = ''\n    ...         begidx = len(line)\n    ...     endidx = len(line)\n    ...     return bash_completions(prefix, line, begidx, endidx)\n    ...\n    >>> get_completions('ls /tmp/a*')\n    ({'/tmp/abc '}, 0)\n\n  Now, lprefix begins at the first special character:\n\n  .. code-block:: sh\n\n    $ python\n    >>> from bash_completion import bash_completions\n    >>>\n    >>> def get_completions(line):\n    ...     split = line.split()\n    ...     if len(split) > 1 and not line.endswith(' '):\n    ...         prefix = split[-1]\n    ...         begidx = len(line.rsplit(prefix)[0])\n    ...     else:\n    ...         prefix = ''\n    ...         begidx = len(line)\n    ...     endidx = len(line)\n    ...     return bash_completions(prefix, line, begidx, endidx)\n    ...\n    >>> get_completions('ls /tmp/a*')\n    ({'/tmp/abc '}, 7)\n* The ``xonsh.main.setup()`` function now correctly passes the\n  ``shell_type`` argument to the shell instance.\n* try_subproc_toks now works for subprocs with trailing and leading whitespace\n\n  Previously, non-greedy wrapping of commands would fail if they had leading and trailing whitespace:\n\n  .. code-block:: sh\n\n    $ true && false || echo a\n    xonsh: For full traceback set: $XONSH_SHOW_TRACEBACK = True\n    NameError: name 'false' is not defined\n\n    $ echo; echo && echo a\n\n    xonsh: For full traceback set: $XONSH_SHOW_TRACEBACK = True\n    NameError: name 'echo' is not defined\n\n  Now, the commands are parsed as expected:\n\n  .. code-block:: sh\n\n    $ true && false || echo a\n    a\n\n    $ echo; echo && echo a\n\n\n    a\n\n\n\n\nv0.7.10\n====================\n\n**Added:**\n\n* 'off' can be passed as falsy value to all flags accepting boolean argument.\n* DragonFly BSD support\n* Format strings (f-strings) now allow environment variables to be looked up.\n  For example, ``f\"{$HOME}\"`` will yield ``\"/home/user\"``. Note that this will\n  look up and fill in the ``detype()``-ed version of the environment variable,\n  i.e. it's native string representation.\n\n\n**Changed:**\n\n* Running ``aurman`` command will now be predicted to be unthreaded by default.\n\n\n**Fixed:**\n\n* The xonsh ``xonfig wizard`` would crash if an unknown foreign shell was\n  provided. This has been fixed.\n* The ``hg split`` command will now predict as unthreadable.\n* Fixed path completer crash on attempted f-string completion\n\n\n\n\nv0.7.9\n====================\n\n**Added:**\n\n* The python-mode ``@(expr)`` syntax may now be used inside of subprocess\n  arguments, not just as a stand-alone argument. For example:\n\n  .. code-block:: sh\n\n    $ x = 'hello'\n    $ echo /path/to/@(x)\n    /path/to/hello\n\n  This syntax will even properly expand to the outer product if the ``expr``\n  is a list (or other non-string iterable) of values:\n\n  .. code-block:: sh\n\n    $ echo /path/to/@(['hello', 'world'])\n    /path/to/hello /path/to/world\n\n    $ echo @(['a', 'b']):@('x', 'y')\n    a:x a:y b:x b:y\n\n  Previously this was not possible.\n* New ``$DOTGLOB`` environment variable enables globs to match\n  \"hidden\" files which start with a literal ``.``. Set this\n  variable to ``True`` to get this matching behavior.\n  Cooresponding API changes have been made to\n  ``xonsh.tools.globpath()`` and ``xonsh.tools.iglobpath()``\n* New environment variable ``$FOREIGN_ALIASES_SUPPRESS_SKIP_MESSAGE``\n  enables the removal of skipping foreign alias messages.\n* New ``--suppress-skip-message`` command line option for skipping\n  foreign alias messages when sourcing foreign shells.\n\n\n**Fixed:**\n\n* In Bash completions, if there are no files to source, a ``set()`` will\n  no longer be inserted into the completion script.\n* Fixed issue with TAB completion in readline not replacing values\n  with spaces properly when the prefix was unquoted.\n\n\n\n\nv0.7.8\n====================\n\n**Added:**\n\n* ``xonsh.lib.collections.ChainDB``, a chain map which merges mergable fields\n\n\n**Fixed:**\n\n* Pass all params to voxapi.create\n* PTK tab-completion now auto-accepts completion if only one option is present\n  (note that fix is only for PTK2)\n\n\n\n\nv0.7.7\n====================\n\n**Added:**\n\n* A xontrib which adds support for autojump to xonsh\n* Added new env-var ``XONSH_HISTORY_MATCH_ANYWHERE``. If set to ``True`` then\n  up-arrow history matching will match existing history entries with the search\n  term located anywhere, not just at the beginning of the line. Default value is\n  ``False``\n\n\n**Changed:**\n\n* Improved iteration over virtual environments in ``Vox.__iter__``\n\n\n**Fixed:**\n\n* Fix for ``Enter`` not returning from Control-R search buffer\n* Fixed automatic wrapping of many subprocesses that spanned multiple lines via\n  line continuation characters with logical operators separating the commands.\n  For example, the following now works:\n\n  .. code-block:: sh\n\n        echo 'a' \\\n        and echo 'b'\n* Environment swapping would not properly reraise errors due to weird\n  Python name binding issue.\n\n\n\n\nv0.7.6\n====================\n\n**Added:**\n\n* Callable aliases may now accept a ``stack`` argument. If they do, then the\n  stack, as computed from the aliases call site, is provided as a list of\n  ``FrameInfo`` objects (as detailed in the standard library ``inspect``\n  module). Otherwise, the ``stack`` parameter is ``None``.\n* ``SubprocSpec`` now has a ``stack`` attribute, for passing the call stack\n  to callable aliases. This defaults to ``None`` if the spec does not\n  need the stack. The ``resolve_stack()`` method computes the ``stack``\n  attribute.\n\n\n**Changed:**\n\n* xonsh/environ.py\n  Exceptions are caught in the code executed under Env.swap()\n\n\n**Fixed:**\n\n* Scripts are now cached by their realpath, not just abspath.\n* Fixed a potential crash (``AssertionError: wrong color format``) on Python 3.5 and prompt_toolkit 1.\n* The ``completer`` command now correctly finds completion functions\n  when nested inside of other functions.\n* Fixed a crash when using the ``$XONSH_STDERR_PREFIX/POSTFIX`` with\n  prompt_toolkit and Pygments 2.2.\n\n\n\n\nv0.7.5\n====================\n\n**Fixed:**\n\n* Recent command history in ptk2 prompt now returns most recently executed\n  commands first (as expected)\n* Fixed a regression taat prevented the readline backend from beeing used. This\n  regression was caused by the new ansi-color names, which are incompatible with\n  pygments 2.2.\n\n\n\n\nv0.7.4\n====================\n\n**Added:**\n\n* New ``xonsh-cat`` command line utility, which is a xonsh replacement\n  for the standard UNIX ``cat`` command.\n* The new ``xonsh.xoreutils.cat.cat_main()`` enables the ``xonsh.xoreutils.cat``\n  module to be run as a command line utility.\n* New ``CommandsCache.is_only_functional_alias()`` and\n  ``CommandsCache.lazy_is_only_functional_alias()`` methods for determining if\n  if a command name is only implemented as a function, and thus has no\n  underlying binary command to execute.\n* ``xonsh.xontribs.xontribs_load()`` is a new first-class API for loading\n  xontribs via a Python function.\n* ``$COMPLETIONS_DISPLAY`` now supports readline-like behavior on\n  prompt-toolkit v2.\n\n\n**Changed:**\n\n* The xonsh Jupyter kernel now will properly redirect the output of commands\n  such as ``git log``, ``man``, ``less`` and other paged commands to the client.\n  This is done by setting ``$PAGER = 'cat'``. If ``cat`` is not available\n  on the system, ``xonsh-cat`` is used instead.\n* The ``setup()`` function for starting up a working xonsh has ``aliases``,\n  ``xontribs``, and ``threadable_predictors`` as new additional keyword\n  arguments for customizing the loading of xonsh.\n\n\n**Fixed:**\n\n* Fixed a bug with converting new PTK2 colors names to old names when using PTK1 or Jupyter\n    as the shell type.\n* ``CommandsCache.locate_binary()`` will now properly return None when\n  ``ignore_alias=False`` and the command is only a functional alias,\n  such as with ``cd``. Previously, it would return the name of the\n  command.\n* Fixed issue with ``$COMPLETIONS_DISPLAY`` raising an error on\n  prompt-toolkit v2 when the value was not set to ``multi``.\n* ValueError when executing ``vox list``\n\n\n\n\nv0.7.3\n====================\n\n**Added:**\n\n* Add the ``PROMPT_TOOLKIT_COLOR_DEPTH`` environment to xonsh default environment.\n  Possible values are ``DEPTH_1_BIT``/``MONOCHROME``,\n  ``DEPTH_4_BIT``/``ANSI_COLORS_ONLY``, ``DEPTH_8_BIT``/``DEFAULT``, or ``DEPTH_24_BIT``/``TRUE_COLOR``.\n  Note: not all terminals support all color depths.\n* New way to fix unreadable default terminal colors on Windows 10. Windows 10\n  now supports true color in the terminal, so if prompt toolkit 2 is\n  installed Xonsh will use a style with hard coded colors instead of the\n  default terminal colors. This will give the same color experience as on linux an mac.\n  The behaviour can be disabled with ``$INTENSIFY_COLORS_ON_WIN``\n  environment variable.\n* New ``JupyterShell`` for interactive interfacing with Jupyter.\n\n\n**Changed:**\n\n* All ansicolor names used in styles have ben updated to the color names used by prompt_toolkit 2.\n  The new names are are much easier to understand\n  (e.g. ``ansicyan``/``ansibrightcyan`` vs. the old ``#ansiteal``/``#ansiturquoise``). The names are automatically\n  translated back when using prompt_toolkit 1.\n\n\n**Removed:**\n\n* Removed support for pygments < 2.2.\n\n\n**Fixed:**\n\n* New ansi-color names fixes the problem with darker colors using prompt_toolkit 2 on windows.\n* Fixed a problem with the color styles on prompt toolkit 2. The default pygment\n  style is no longer merged into style selected in xonsh.\n* The JupyterKernel has been fixed from a rather broken state.\n\n\n\n\nv0.7.2\n====================\n\n**Added:**\n\n* ``history show`` builtin now supports optional ``-0`` parameter that switches\n  the output to null-delimited. Useful for piping history to external filters.\n\n\n**Fixed:**\n\n* If exception is raised in indir context manager, return to original directory\n* Fixed issue that autocomplete menu does not display\n  at terminal's maximum height\n\n\n\n\nv0.7.1\n====================\n\n**Added:**\n\n* Added feature to aliases.\n* ``xonsh.lib.os.rmtree()`` an rmtree which works on windows properly (even with\n  git)\n\n\n**Changed:**\n\n* set default value of ``$AUTO_SUGGEST_IN_COMPLETIONS=False``\n* Use the ``pygments_cache.get_all_styles()`` function instead of\n  interacting directly with pygments.\n\n\n**Fixed:**\n\n* Fixed issue with ``$ARG<N>`` varaibles not being passed to subprocesses correctly.\n* Fixed issue with multiline string inside of ``@(expr)`` in\n  unwrapped subprocesses. For example, the following now works::\n\n    echo @(\"\"\"hello\n    mom\"\"\")\n* ``CommandPipeline.output`` now does properly lazy, non-blocking creation of\n  output string. ``CommandPipeline.out`` remains blocking.\n* Fix regression in ``INTENSIFY_COLORS_ON_WIN`` functionality due to prompt_toolkit 2 update.\n* Fixed issue that can't insert quotation marks and double quotes\n  for completion.\n* Fixed issue with ``SyntaxErrors`` being reported on the wrong line\n  when a block of code contained multiple implicit subprocesses.\n* ``prompt_toolkit >= 2`` will start up even if Pygments isn't present\n* Fixed a regression with ``xonfig styles`` reporting ``AttributeError: module 'pygments' has no attribute 'styles'``\n* ptk dependent xontribs (that use custom keybindings) now work with both ptk1\n  and ptk2\n* Fixed async tokenizing issue on Python v3.7.\n\n\n\n\nv0.7.0\n====================\n\n**Added:**\n\n* Added a hook for printing a spcial display method on an object.\n* Support for ``prompt_toolkit 2.0``\n* The ``--shell-type`` (``$SHELL_TYPE``) may now be specified using\n  shortcuts, such as ``rl`` for ``readline`` and ``ptk2`` for\n  ``prompt_toolkit2``. See ``xonsh --help`` for a full listing\n  of available aliases.\n\n\n**Fixed:**\n\n- Restored AUGASSIGN_OPS definition, which was inadvertently removed.\n\n\n\n\nv0.6.10\n====================\n\n**Added:**\n\n* ``xonsh.lib.subprocess.check_output`` as a ``check_output`` drop in\n\n\n**Fixed:**\n\n* ``xonsh.lib.subprocess.run`` doesn't change dirs unless asked\n\n\n\n\nv0.6.9\n====================\n\n**Added:**\n\n* New xonsh standard library ``xonsh.lib`` subpackage\n* ``xonsh.lib.os.indir`` a context manager for temporarily entering into a directory\n* ``xonsh.lib.subprocess.run`` and ``xonsh.lib.subprocess.check_call``\n  subprocess stubs using ``xonsh`` as the backend\n\n\n**Fixed:**\n\n* update xoreutils._which.which() for python 3.x support.\n* Fixed issue with incorrect strip lengths for prefixes with quotes in them\n* Fixed bash script to also consider leading double quotes and not just single\n  quotes\n* Launching xonsh with prompt_toolkit version 2.x no longer fails, and instead fallsback to readline shell. This is a patch for until prompt_toolkit 2.x support is fully implemented. See PR #2570\n\n\n\n\nv0.6.8\n====================\n\n**Fixed:**\n\n* completions relative to ``CDPATH`` only trigger when used with ``cd``\n* Import of ``ctypes.util`` is now explictly performed, as needed.\n  Python v3.7 no longer imports this module along with ``ctypes``.\n* Fixed issue with pygments-cache not properly generating a cache the first\n  time when using prompt-toolkit. This was due to a lingering lazy import\n  of ``pkg_resources`` that has been removed.\n* Removed duplicate ``pip`` completer\n* ``bash_completion`` no longer returns invalid prefix lengths for directories\n  containing escape file names\n* Fixed error when using redirection (e.g., >) on Windows.\n\n\n\n\nv0.6.7\n====================\n\n**Changed:**\n\n* Xonsh live example has been re-added back to the documentation.\n\n\n**Fixed:**\n\n* Fixed issue where xonsh would fail to properly return the terminal prompt\n  (and eat up 100% CPU) after a failed subprocess command in interactive mode\n  if ``$RAISE_SUBPROC_ERROR = True``.\n* ``xonsh.tokenize.tok_name`` no longer mutates the standard library ``tokenize.tok_name``.\n  A copy is made on import instead.\n\n\n\n\nv0.6.6\n====================\n\n**Added:**\n\n* A multipurpose add method to EnvPath. For example:\n\n  .. code-block:: xonshcon\n\n    >>> $PATH\n    EnvPath(\n    ['/usr/bin', '/usr/local/bin', '/bin']\n    )\n    >>> $PATH.add('~/.local/bin', front=True); $PATH\n    EnvPath(\n    ['/home/user/.local/bin', '/usr/bin', '/usr/local/bin', '/bin']\n    )\n    >>> $PATH.add('/usr/bin', front=True, replace=True); $PATH\n    EnvPath(\n    ['/usr/bin', '/home/user/.local/bin', '/usr/local/bin', '/bin']\n    )\n\n* Added ``pygments-cache`` project in order to reduce startup time.\n\n\n**Changed:**\n\n* built_ins.py, corrected a typo.\n* test/test_news.py\n  It now uses regex to verify the format of rst files\n* Mercurial (``hg``) will no longer run in a threadable subprocess when\n  it is run in interactive mode.\n\n\n**Fixed:**\n\n* issue 2313\n\n\n\n\nv0.6.5\n====================\n\n**Added:**\n\n* Wizard ``FileInsterter`` node class now has ``dumps()`` method for\n  converting a mapping to a string to insert in a file.\n\n\n**Fixed:**\n\n* Fixed issue with ``xonfig wizard`` writer failing to write valid run control\n  files for environment variables that are containter types. In particular,\n  the storage of ``$XONSH_HISTORY_SIZE`` has been fixed.\n\n\n\n\nv0.6.4\n====================\n\n**Changed:**\n\n* Error message improved for sourcing foreign shells, when file cannot be found\n  or there is a syntax error.\n\n\n**Fixed:**\n\n* Fixed issues with readline completer tab completing entries\n  with spaces.\n* Fixed ``xonsh.tools.columnize()`` bug the prevented single-row\n  input from being columnized correctly.\n* Now honor ASYNC and AWAIT as keywords in tokenizer on\n  Python 3.7.\n\n\n\n\nv0.6.3\n====================\n\n**Added:**\n\n* Docs for using ``@(<expr>)`` as a way to run commands and a gotcha about\n  list of strings vs single string expressions.\n* Ubuntu versions which xonsh is packaged for (with xonsh versions)\n\n\n**Changed:**\n\n* When reporting errors without a traceback (i.e. ``$XONSH_SHOW_TRACEBACK = False``) and the error is a ``XonshError``\n  the exception type is not longer printed.\n* ``CommandPipeline.proc`` may now be ``None``, to accomodate when the process\n  fails to even start (i.e. a missing command or incorrect permisions).\n\n\n**Fixed:**\n\n* The ``curl`` command will now be run in a thread, which prevents documents that\n  do not end in a newline from writing over the next prompt and vice versa.\n* Fix bug on Windows when ``PATHEXT`` environment variable did not exist.\n  This also fixes building the xonsh documentation on Windows.\n* Fixed a bug in the `free_cwd <http://xon.sh/xontribs.html#free-cwd>`__ Windows Xontrib, which caused the prompt to error if the current directory is\n  deleted/renamed from an other process.\n* Fixed issue with ``$XONSH_SHOW_TRACEBACK`` not being respected in subprocess\n  mode when the command could not be found or had incorrect permissions.\n\n\n\n\nv0.6.2\n====================\n\n**Added:**\n\n* Release tarballs now include licenses and minimal documentation for xonsh and ply\n* Wizard now has a ``FileInserter`` node that allows blocks to be\n  inserted and replaced inside of a file. This adheres to conversion\n  rules fordumping as provided on this node.\n* New ``xonsh.wizard.StateVisitor.flatten()`` method for flattening the\n  current state.\n\n\n**Changed:**\n\n* The xonsh startup wizard will only be triggered if no xonshrc files exist\n  and the file ``~/.local/config/xonsh/no-wizard`` is not present.\n* The ``xonfig wizard`` command will now run write out to the xonshrc file.\n* Wizard nodes ``Save`` and ``Load`` had their names changed to ``SaveJSON``\n  and ``LoadJSON``.\n\n\n**Removed:**\n\n* Static configuration is dead (``config.json``), long live run control (``xonshrc``)!\n* The following evironment variables have been removed as they are no longer needed:\n  ``$LOADED_CONFIG`` and ``$XONSHCONFIG``.\n* Many support functions for static configuration have also been removed.\n\n\n**Fixed:**\n\n* Files starting with ``#`` are auto-escaped by TAB completion\n\n\n\n\nv0.6.1\n====================\n\n**Added:**\n\n* Support for MSYS2.\n* New ``xonsh.main.setup()`` function for starting up xonsh in 3rd party\n  packages.\n\n\n**Changed:**\n\n* Updated CircleCI to use circle version 2.0\n* Replaced StopIteration with return in CommandPipeline.iterraw.\n* Xonsh run control now also looks for the XDG-compliant file\n  ``~/.config/xonsh/rc.xsh`` at startup.\n\n\n**Fixed:**\n\n* Clean out ``$LINES`` and ``$COLUMNS`` if set, preventing some programs from drawing weirdly\n* cat from xoreutils now outputs in configured encoding\n* Fixed hanging issue with pipelines whose middle processes exit before the\n  first or last process.\n* Fixed issue where xonsh would deduplicate spaces from bash autocompletions.\n* Fixed failing redirections from stderr to stdout when the command\n  being executed was a callable alias.\n* Ensure that the ``free_cwd`` contrib can only be active on pure Windows.\n* Made an exceptional case in ``iglobpath()`` more robust when Python globbing\n  fails for due to strange scrandir issue.\n* Unexpected process suspension on Cygwin and MSYS2.\n* ``$XONSH_APPEND_NEWLINE`` will now default to True when in interactive mode.\n* Fixed issue with uncalled lambdas being run in subproc mode.\n* Lambda nodes not have proper line and column numbers in AST.\n* Properly throw ``SyntaxError`` when no kwargs are defined\n  in a kwarg-only function. This used to throw a\n  ``TypeError: 'NoneType' object is not iterable``.\n* Addressed issue where encoding and errors were None when teeing output.\n* Commands like ``git c`` would complete to ``git 'checkout '`` because git adds an extra space\n  to the end of the completion, which was being captured in the completion. Xonsh now fixes the git issue\n  while retaining all whitespace when there is other internal whitespace.\n\n\n\n\nv0.6.0\n====================\n\n**Added:**\n\n* Added an alias command, matching bash's implementation, available as part of bashisms.\n* New ``$AUTO_SUGGEST_IN_COMPLETIONS`` environment variable that enables/disables\n  whether the auto-suggestion result appears in the tab completions.\n* Added ``__add__()`` and ``__radd__()`` methods to ``EnvPath``.\n* Xonsh now supports f-strings, as in Python v3.6+.\n* Added ``ipython`` as unthreadable in command cache threadabilty predictors.\n* Added ``whole_word_jumping`` xontrib\n* Added ``$XONSH_APPEND_NEWLINE`` environment variable\n* Support for PEP 515: Underscores in Numeric Literals\n*  ``xonsh.color_tools.make_palette()``\n\n   Simple rename of the pre-existing\n   ``xonsh.color_tools.make_pallete()`` function.\n\n*  ``xonsh.tools.decorator()`` function/method decorator.\n\n   This allows for an API function to be annotated with a\n   decorator that documents deprecation, while also tying in\n   functionality that will warn a user that the function has\n   been deprecated, and, raise an ``AssertionError`` if the\n   function has passed its expiry date.\n* New xontrib ``schedule`` (Xonsh Task Scheduler)\n\n\n**Changed:**\n\n* ``on_pre_prompt`` is now fired before prompt calculations are made, allowing modifications to the prompt.\n* ``emacsclient`` will now return false in the threadable predictors.\n* Improved the autopair behavior to match that of popular code editors.\n* Moved the lazy ``pkg_resources`` package back to its original\n  place. The will hopefully address some of the slowdown issues\n  experiances on some platforms.\n* When xonsh is used to run an ``xsh`` script, the ``xonshrc`` is not loaded\n* Change in the behavior of the default predictor with binary analysis. The pattern ``libgpm`` is use, assuming when ``gpm`` is used the program is not threadable. This change solves issues with programs as ``links``.\n* Error messages added to the ``source`` command if it is used with a language\n  that is not xonsh or Python.\n\n\n**Deprecated:**\n\n*  ``xonsh.color_tools.make_pallette()``\n\n   Deprecated in release 0.5.10 and will be removed in release 0.6.0.\n\n\n**Fixed:**\n\n* Now f-strings can be used inside @() without explicit enclosing command in ![]\n* Fix for ``x, y, *z = ...`` unpacking.\n* Git branch detection now correctly passes the environment down to the subprocess\n  call.  This allows for branch detection when git is installed into a non-standard\n  location.\n* Escape regex characters in ``path_complete`` to avoid regex parsing errors for\n  certain combinations of characters in path completer\n* gistatus: Fixed hash not being shown when in detaced HEAD and there are no tags\n* Fix branch colorization when ``git`` or ``hg`` are aliases.\n* Fixed leftover ``.git/index.lock`` in ``gitstatus``\n* Made JSON history loading more robust to corrupt files.\n* Starting a new command with an open parentheses will no longer\n  throw a traceback when ``$UPDATE_COMPLETIONS_ON_KEYPRESS`` is\n  ``True``.\n* Automatically wrapping subprocess calls would sometimes include\n  semincolons and other line-ending tokens, rather than stopping at them.\n  This has been fixed.\n*  Numerous spelling errors in documentation, docstrings/comments, text\n   strings and local variable names.\n\n*  Spelling error in the ``xonsh.color_tools.make_pallete()`` public\n   function declaration. This was fixed by renaming the function to\n   ``xonsh.color_tools.make_palette()`` while maintaining a binding\n   of ``make_pallete()`` to the new ``make_palette()`` in case users\n   are already used to this API.\n* Fixed issue with starting triple quote strings being run as a command.\n* Fixed a problem with escaping charet (^) character for cmd.exe in the source-cmd function.\n* ``EOF in multi-line statement`` errors were misreported as being on line 0.\n  Now they are correctly reported as being on the last line of the file.\n\n\n\n\nv0.5.12\n====================\n\n**Fixed:**\n\n* Fixed ``release.xsh`` to prevent it from dirtying the repo on release and\n  leading to an unwanted ``.dev`` suffix on the version number\n\n\n\n\nv0.5.11\n====================\n\n**Added:**\n\n* ``release.xsh`` creates a github release with the merged news entries as the\n  release body\n\n\n**Fixed:**\n\n* ``xonfig`` now displays the proper value for \"on linux\"\n\n\nv0.5.10\n====================\n\n**Added:**\n\n* Added ``xclip`` and ``repo`` to default threadable predictors (Issues #2355\n  and #2348)\n* Pretty printing of the $PATH variable\n* Add \"fzf-widgets\" xontrib which provides fuzzy search productivity widgets\n  with on custom keybindings to xontrib list.\n* New ``free_cwd`` xontrib for Windows, which prevent the current directory from being locked when the prompt is shown.\n  This allows the other programs or Windows explorer to delete the current or parent directory. This is accomplished by\n  resetting the CWD to the users home directory temporarily while the prompt is displayed. The directory is still locked\n  while any commands are processed so xonsh still can't remove it own working directory.\n\n\n**Changed:**\n\n* Codecov threshold to 2%\n\n\n**Removed:**\n\n* On Windows environments variables in wrapped like``%foo%`` are no longer expanded automatically.\n\n\n**Fixed:**\n\n* Fixed the ``--rc`` option so it now runs xonsh with the specified rc file\n* ``@$`` operator now functions properly when returned command is an alias\n* Correct line continuation would not work on Windows if the line continuations were used\n  in the ``xonshrc`` file.\n* Fixed a regression in the Windows ``sudo`` command, that allows users to run elevated commands in xonsh.\n* Fix echo command from xoreutils.\n* Fixed a bug on Windows which meant xonsh wasn't using PATH environment variable but instead relying on a default\n  value from the windows registry.\n\n\n\n\nv0.5.9\n====================\n\n**Added:**\n\n* Add ``Alt .`` keybinding to ``bashisms-xontrib`` to insert last argument of\n  previous command into current buffer\n\n\n**Fixed:**\n\n* Fix crash when openSSH version of bash is on PATH on Windows.\n* Added missing ensurers to make sure that ``bool`` env_vars are bools and\n  ``int`` env_vars are integers:\n\n  * ``DIRSTACK_SIZE``\n  * ``EXPAND_ENV_VARS``\n  * ``PUSHD_MINUS``\n  * ``PUSHD_SILENT``\n  * ``SUGGEST_COMMANDS``\n  * ``SUGGEST_MAX_NUM``\n  * ``SUGGEST_THRESHOLD``\n\n\n\n\nv0.5.8\n====================\n\n**Changed:**\n\n* The ``xonsh.platform.os_environ`` wrapper is  now case-insensitive and\n  case-preserving on Windows.\n* The private ``_TeeStd`` class will no longer attempt to write to a\n  standard buffer after the tee has been 'closed' and the standard\n  buffer returned to the system.\n\n\n**Fixed:**\n\n* Fixed a bug on py34 where os.scandir was used by accident.\n* Line continuations (``\\\\``) is subproc mode will no longer consume the\n  surrounding whitespace.\n* Fixed a bug if foreign_shell name was not written in lower case in\n  the static configuration file ``config.json``\n* Fixed a regression on Windows where caused ``which`` reported that the\n  ``PATH`` environment variable could not be found.\n* Fixed issue with foregrounding jobs that were started in the background.\n* Fixed that ``Ctrl-C`` crashes xonsh after running an invalid command.\n* Fixed an potential ``ProcessLookupError`` issue, see #2288.\n\n\n\n\nv0.5.7\n====================\n\n**Added:**\n\n* New ``color_tools`` module provides basic color tools for converting\n  to and from various formats as well as creating palettes from color\n  strings.\n* Redirections may now be used in string and list-of-strings\n  aliases.\n* Subprocess redirection may now forego the whitespace between the\n  redirection and a file name.  For example,\n  ``echo hello world >/dev/null``.\n* Add a ``-P`` flag to the ``cd`` function in order to change directory and\n  following symlinks.\n* ``xonfig tutorial`` command to launch the http://xon.sh/tutorial in the\n  browser.\n* ``@(...)`` syntax now supports generators and tuples without parentheses.\n* Sourcing foreign shells now have the ``--show`` option, which\n  lets you see when script will be run, and the ``--dryrun``\n  option which prevents the source from actually taking place.\n  Xonsh's foreign shell API also added these keyword arguments.\n* Subprocess mode now supports subshells. Place any xonsh\n  code between two parentheses, e.g. ``(cmd)``, to run\n  this command in a separate xonsh subprocess.\n* Foreign shell aliases now have the ability to take extra arguments,\n  if needed.\n* Xonsh will issue a warning message when the current working\n  directory has been remove out from under it and not replaced\n  prior to running the next command.\n* Line continuation backslashes are respected on Windows in the PTK shell if\n  the backspace is is preceded by a space.\n* Added ``ponysay`` as a command which will usually not run in a\n  threaded mode in the commands cache.\n* New ``jsonutils`` module available for serializing special\n  xonsh objects to JSON.\n\n\n**Changed:**\n\n* The literal tokens ``and`` and ``or`` must be surrounded by\n  whitespace to delimit subprocess mode. If they do not have\n  whitespace on both sides in subproc mode, they are considered\n  to be part of a command argument.\n* The ``xontrib`` command is now flagged as unthreadable and will be\n  run on the main Python thread. This allows xontribs to set signal\n  handlers and other operations that require the main thread.\n* nvim (Neovim) has been flagged as unthreadable\n* The interactive prompt will now catch ``SystemExit`` and, instead\n  of exiting the session, will refresh the prompt. This is the same\n  process as for keyboard interrupts.\n* Xonsh no longer launches the wizard for new users. Instead a welcome screen is\n  shown which says how to launch the wizard.\n* Added Windows ``expanduser()``-like function which prevents\n  the expansion of ``~`` that are not followed by a path\n  separator.\n* Collecting xonsh history files was reported to have random runtime\n  OSError failures. This exception is now handled, just in case. The\n  The exception will still be printed in debug mode.\n* ``Shell.stype`` has been renamed to ``Shell.shell_type``.\n* The configuration wizard now displays the proper control sequence to leave\n  the wizard at the to start of the wizard itself. Note that this is Ctrl+D for\n  readline and Ctrl+C for prompt-toolkit.\n* Callable alias proxy functions are now more friendly to\n  ``functools.partial()``.\n* ``prompt.vc.get_hg_branch`` now uses ``os.scandir`` to walk up the filetree\n  looking for a ``.hg`` directory. This results in (generally) faster branch\n  resolution compared to the subprocess call to ``hg root``.\n* Xonsh's script and code caches will are now invalidated whenever the\n  xonsh version changes for a given Python version.\n* Autowrapping of subprocess globs has been improved to cover\n  more cases that are ambiguous with Python syntax.\n* Job control info when foregrounding or backgrounding jobs will now\n  only be displayed when xonsh is in interactive mode.\n* Enabled virtual terminal processing in the prompt-toolkit shell for Windows.\n\n\n**Fixed:**\n\n* 3rd party pygments styles (like solorized or monokailight) are now\n  able to be used in xonsh. These styles are dynamically created upon\n  first use, rather than being lazily loaded by xonsh.\n* On Windows, ``os.environ`` is case insensitive. This would potentially\n  change the case of environment variables set into the environment.\n  Xonsh now uses ``nt.environ``, the case sensitive counterpart, to avoid\n  these issues on Windows.\n* Fix how ``$PWD`` is managed in order to work with symlinks gracefully\n* ``history replay`` no longer barfs on ``style_name`` when setting up the\n  environment\n* ``Shell.shell_type`` is now properly set to the same value as ``$SHELL_TYPE``.\n* Fixed ``source-zsh`` to work with zsh v5.2.\n* Fixed issue where ``del (x, y)`` would raise a syntax error.\n* Certain vim commands issue commands involving subshells,\n  and this is now supported.\n* Null bytes handed to Popen are now automatically escaped prior\n  to running a subprocess. This prevents Popen from issuing\n  embedded null byte exceptions.\n* Xonsh will no longer crash is the current working directory is\n  removed out from under it.\n* Multiline strings can now be written in subprocess mode.\n* PTK completions will now correctly deduplicate autosuggest completions\n  and display completions values based on the cursor position.\n* Fixed bug where trailing backspaces on Windows paths could be interpreted\n  as line continuations characters. Now line continuation characters must be\n  preceded by a space on Windows. This only applies to xonsh in interactive\n  mode to ensure  scripts are portable.\n* Importing ``*.xsh`` files will now respect the encoding listed in\n  that file and properly fallback to UTF-8. This behaviour follows\n  the rules described in PEP 263.\n* Wizard is now able to properly serialize environment paths.\n\n\nv0.5.6\n====================\n\n**Added:**\n\n* New core utility function aliases (written in pure Python) are now\n  available in ``xonsh.xoreutils``. These include: ``cat``, ``echo``,\n  ``pwd``, ``tee``, ``tty``, and ``yes``. These are not enabled by default.\n  Use the new ``coreutils`` xontrib to load them.\n* CircleCI test post codecov run\n* The ``trace`` will automatically disable color printing when\n  stdout is not a TTY or stdout is captured.\n* New ``jedi`` xontrib enables jedi-based tab completions when it is loaded.\n  This supersedes xonsh's default Python-mode completer.\n* The lexer has a new ``split()`` method which splits strings\n  according to xonsh's rules for whitespace and quotes.\n* New events for hooking into the Python import process are now available.\n  You can now provide a handler for:\n\n  - ``on_import_pre_find_spec``\n  - ``on_import_post_find_spec``\n  - ``on_import_pre_create_module``\n  - ``on_import_post_create_module``\n  - ``on_import_pre_exec_module``\n  - ``on_import_post_exec_module``\n\n\n**Changed:**\n\n* The prompt toolkit shell's first completion will now be the\n  current token from the auto-suggestion, if available.\n* Sourcing foreign shells will now safely skip applying aliases\n  with the same name as existing xonsh aliases by default.\n  This prevents accidentally overwriting important xonsh standard\n  aliases, such as ``cd``.\n\n\n**Fixed:**\n\n* Threadable prediction for subprocesses will now consult both the command\n  as it was typed in and any resolved aliases.\n* The first prompt will no longer print in the middle of the line if the user has\n  already started typing.\n* Windows consoles will now automatically enable virtual terminal processing\n  with the readline shell, if available. This allows the full use of ANSI\n  escape sequences.\n* On the Windows readline shell, the tab-completion suppression prompt will no\n  longer error out depending on what you press.\n* Fixed issue with subprocess mode wrapping not respecting line continuation\n  backslashes.\n* Handle a bug where Bash On Windows causes platform.windows_bash_command()\n  to raise CalledProcessError.\n* Fixed issues pertaining to completing from raw string paths.\n  This is particularly relevant to Windows, where raw strings\n  are inserted in path completion.\n* Replace deprecated calls to ``time.clock()`` by calls to\n  ``time.perf_counter()``.\n* Use ``clock()`` to set the start time of ``_timings`` in non-windows instead\n  of manually setting it to ``0.0``.\n* The ``trace`` utility will now correctly color output and not\n  print extraneous newlines when called in a script.\n* The ``@$(cmd)`` operator now correctly splits strings according to\n  xonsh semantics, rather than just on whitespace using ``str.split()``.\n* The ``mpl`` xontrib has been updated to improve matplotlib\n  handling. If ``xontrib load mpl`` is run before matplotlib\n  is imported and xonsh is in interactive mode, matplotlib\n  will automatically enter interactive mode as well. Additionally,\n  ``pyplot.show()`` is patched in interactive mode to be non-blocking.\n  If a non-blocking show fails to draw the figure for some reason,\n  a regular blocking version is called.\n* Fixed issues like ``timeit ls`` causing OSError - \"Inappropriate ioctl\n  for device\".\n* Fixed a potential \"OSError: [Errno 22] Invalid argument\" to increase job\n  control stability.\n\n\n\n\nv0.5.5\n====================\n\n**Added:**\n\n* New ``--rc`` command line option allows users to specify paths to run control\n  files from the command line. This includes both xonsh-based and JSON-based\n  configuration.\n* New ``$UPDATE_COMPLETIONS_ON_KEYPRESS`` controls whether or not completions\n  will automatically display and update while typing. This feature is only\n  available in the prompt-toolkit shell.\n\n\n**Changed:**\n\n* Xonsh scripts now report ``__file__`` and ``__name__`` when run as scripts\n  or sourced. These variables have the same meaning as they do in Python\n  scripts.\n* ``$XONSHRC`` and related configuration variables now accept JSON-based\n  static configuration file names as elements. This unifies the two methods\n  of run control to a single entry point and loading system.\n* The ``xonsh.shell.Shell()`` class now requires that an Execer instance\n  be explicitly provided to its init method. This class is no longer\n  responsible for creating an execer an its dependencies.\n* Moved decorators ``unthreadable``, ``uncapturable`` from\n  ``xonsh.proc`` to ``xonsh.tools``.\n* Some refactorings on jobs control.\n\n\n**Deprecated:**\n\n* The ``--config-path`` command line option is now deprecated in favor of\n  ``--rc``.\n\n\n**Removed:**\n\n* ``xonsh.environ.DEFAULT_XONSHRC`` has been removed due to deprecation.\n  For this value, please check the environment instead, or call\n  ``xonsh.environ.default_xonshrc(env)``.\n\n\n**Fixed:**\n\n* Command pipelines that end in a callable alias are now interruptable with\n  ``^C`` and the processes that are piped into the alias have their file handles\n  closed. This should ensure that the entire pipeline is closed.\n* Fixed issue where unthreadable subprocs were not allowed to be\n  captured with the ``$(cmd)`` operator.\n* The ``ProcProxy`` class (unthreadable aliases) was not being executed and would\n  hang if the alias was capturable. This has been fixed.\n* Fixed a ``tcsetattr: Interrupted system call`` issue when run xonsh scripts.\n* Fixed issue with ``ValueError`` being thrown from ``inspect.signature()``\n  when called on C-extension callables in tab completer.\n* Fixed issue that ``ls | less`` crashes on Mac.\n* Threadable prediction was incorrectly based on the user input command, rather than\n  the version where aliases have been resolved. This has been corrected.\n\n\nv0.5.4\n====================\n\n**Added:**\n\n* Add alias ``xip`` (\"kip\") so that xonsh's Python environment (whatever that is) can be modified.\n* HistoryEntry, a SimpleNamespace object that represents a command in history.\n* ``xonsh.completers.bash_completion`` module\n* Added option to report timing information of xonsh startup times. Start xonsh\n  with the ``--timings`` flag to use the feature.\n* The Python tab completer will now complete the argument names of functions\n  and other callables.\n* Uptime module added to ``xonsh.xoreutils``. This can report the system\n  boot time and up time.\n* The environment variable ``XONSH_HISTORY_BACKEND`` now also supports a\n  value of class type or a History Backend instance.\n* ``on_envvar_new`` event that fires after a new envvar is created.\n* ``on_envvar_change`` event that fires after an envvar is changed.\n\n\n**Changed:**\n\n* history indexing api to be more simple, now returns HistoryEntry.\n* Decoupled ``bash_completion`` from xonsh project and added shim back to\n  xonsh.\n* The JSON history backend will now unlock history files that were created\n  prior to the last reboot.\n\n\n**Fixed:**\n\n* Fixed broken bash completions on Windows if 'Windows Subsystem for Linux' is installed.\n* Readline history would try to read the first element of history prior to\n  actually loading any history. This caused an exception to be raised on\n  Windows at xonsh startup when using pyreadline.\n* Fixed issue with readline tab completer overwriting initial prefix in\n  some instances.\n* Fixed issue wherein if ``git`` or (presumably) ``hg`` are aliased, then branch\n  information no longer appears in the ``$PROMPT``\n* Fixed an issue with commands that background themselves (such as\n  ``gpg-connect-agent``) not being able to be run from within xonshrc.\n\n\n\n\nv0.5.3\n====================\n\n**Added:**\n\n* Tab completion xontrib for python applications based on click framework.\n* Added ``on_transform_command`` event for pre-processing that macros can't handle.\n* Autodetection of backgroundability by binary analysis on POSIX.\n* New argument ``expand_user=True`` to ``tools.expand_path``.\n* New ``$COMPLETION_QUERY_LIMIT`` environment variable for setting the\n  number of completions above which the user will be asked if they wish to\n  see the potential completions.\n* Users may now redirect stdout to stderr in subprocess mode.\n\n\n**Changed:**\n\n* The ``Block`` and ``Functor`` context managers from ``xonsh.contexts`` have been\n  rewritten to use xonsh's macro capabilities. You must now enter these via the\n  ``with!`` statement, e.g. ``with! Block(): pass``.\n* The ``distributed`` xontrib now needs to use the ``with!`` statement, since it\n  relies on ``Functor``.\n* ``telnet`` has been flagged as unthreadable.\n* When ``$DYNAMIC_CWD_ELISION_CHAR`` is non empty and the last dir of cwd is too\n  long and shortened, the elision char is added at the end.\n* ``pygments`` is no longer a strict dependency of the ``prompt_toolkit``\n  backend. If ``pygments`` is not installed, the PTK backend will use the\n  default ansi color settings from the terminal. Syntax highlighting requires\n  that ``pygments`` is installed.\n* Events are now keyword arguments only\n* Restored ``on_precommand`` to its original signature.\n* Move ``built_ins.expand_path`` to ``tools.expand_path``.\n* Rename ``tools.expandpath`` to ``tools._expandpath``.\n* Added ``gvim`` command to unthreadable predictors.\n* The ``source`` alias now passes ``$ARGS`` down to file it is sourcing.\n\n\n**Removed:**\n\n* ``XonshBlockError`` has been removed, since it no longer serves a purpose.\n\n\n**Fixed:**\n\n* ``PopenThread`` will now re-issue SIGINT to the main thread when it is\n  received.\n* Fixed an issue that using sqlite history backend does not kill unfinished\n  jobs when quitting xonsh with a second \"exit\".\n* Fixed an issue that xonsh would fail over to external shells when\n  running .xsh script which raises exceptions.\n* Fixed an issue with ``openpty()`` returning non-unix line endings in its buffer.\n  This was causing git and ssh to fail when xonsh was used as the login shell on the\n  server. See https://mail.python.org/pipermail/python-list/2013-June/650460.html for\n  more details.\n* Restored the ability to ^Z and ``fg`` processes on posix platforms.\n* CommandPipelines were not guaranteed to have been ended when the return code\n  was requested. This has been fixed.\n* Introduce path expansion in ``is_writable_file`` to fix\n  ``$XONSH_TRACEBACK_LOGFILE=~/xonsh.log``.\n* Backgrounding a running process (^Z) now restores ECHO mode to the terminal\n  in cases where the subprocess doesn't properly restore itself. A major instance\n  of this behaviour is Python's interactive interpreter.\n* Readline backend would not ask the user to confirm the printing of completion\n  options if they numbered above a certain value. Instead they would be dumped to\n  the screen. This has been fixed.\n* Jupyter kernel was no longer properly running subprocess commands.\n  This has been fixed.\n* The filename is applied to the target of the ``source`` alias, providing better\n  tracebacks.\n\n\n\n\nv0.5.2\n====================\n\n**Added:**\n\n* Added ``weechat`` to default predictors\n* ``$DYNAMIC_CWD_ELISION_CHAR`` environment variable to control how a shortened\n  path is displayed.\n\n\n**Changed:**\n\n* ``_ret_code`` function of ``prompt_ret_code`` xontrib return now ``None`` when\n  return code is 0 instead of empty string allowing more customization of prompt\n  format.\n\n\n**Fixed:**\n\n* Minor Python completer token counting bug fix.\n* multiline syntax error in PTK shell due to buffer not being reset\n* Segfaults and other early exit signals are now reported correctly,\n  again.\n* ``tests/bin/{cat,pwd,wc}`` shebang changed to python3\n\n\n\n\nv0.5.1\n====================\n\n**Fixed:**\n\n* Fixed xonfig raising error when xonsh is not installed from source.\n\n\n\n\nv0.5.0\n====================\n\n**Added:**\n\n* $XONTRIB_MPL_MINIMAL environment variable can be set to change if plots are minimalist or as-seen\n* xontrib-mpl now supports iTerm2 inline image display if iterm2_tools python package is installed\n* Xonsh now will fallback to other shells if encountered errors when\n  starting up.\n* Added entry to customization faq re: ``dirs`` alias (#1452)\n* Added entry to customization faq re: tab completion selection (#1725)\n* Added entry to customization faq re: libgcc core dump (#1160)\n* Section about quoting in the tutorial.\n* The ``$VC_HG_SHOW_BRANCH`` environment variable to control whether to hide the hg branch in the prompt.\n* xonfig now contains the latest git commit date if xonsh installed\n  from source.\n* Alt+Enter will execute a multiline code block irrespective of cursor position\n* Windows now has the ability to read output asynchronously from\n  the console.\n* Use `doctr <https://drdoctr.github.io/doctr/>`_ to deploy dev docs to github pages\n* New ``xonsh.proc.uncapturable()`` decorator for declaring that function\n  aliases should not be run in a captured subprocess.\n* New history backend sqlite.\n* Prompt user to install xontrib package if they try to load an uninstalled\n  xontrib\n* Callable aliases may now take a final ``spec`` argument, which is the\n  corresponding ``SubprocSpec`` instance.\n* New ``bashisms`` xontrib provides additional Bash-like syntax, such as ``!!``.\n  This xontrib only affects the command line, and not xonsh scripts.\n* Tests that create testing repos (git, hg)\n* New subprocess specification class ``SubprocSpec`` is used for specifying\n  and manipulating subprocess classes prior to execution.\n* New ``PopenThread`` class runs subprocesses on a a separate thread.\n* New ``CommandPipeline`` and ``HiddenCommandPipeline`` classes manage the\n  execution of a pipeline of commands via the execution of the last command\n  in the pipeline. Instances may be iterated and stream lines from the\n  stdout buffer. These pipelines read from the stdout & stderr streams in a\n  non-blocking manner.\n* ``$XONSH_STORE_STDOUT`` is now available on all platforms!\n* The ``CommandsCache`` now has the ability to predict whether or not a\n  command must be run in the foreground using ``Popen`` or may use a\n  background thread and can use ``PopenThread``.\n* Callable aliases may now use the full gamut of functions signatures:\n  ``f()``, ``f(args)``,  ``f(args, stdin=None)``,\n  ``f(args, stdin=None, stdout=None)``, and `\n  ``f(args, stdin=None, stdout=None, stderr=None)``.\n* Uncaptured subprocesses now receive a PTY file handle for stdout and\n  stderr.\n* New ``$XONSH_PROC_FREQUENCY`` environment variable that specifies how long\n  loops in the subprocess framework should sleep. This may be adjusted from\n  its default value to improved performance and mitigate \"leaky\" pipes on\n  slower machines.\n* ``Shift+Tab`` moves backwards in completion dropdown in prompt_toolkit\n* PromptFormatter class that holds all the related prompt methods\n* PromptFormatter caching when building the prompt\n* p-strings: ``p'/foo/bar'`` is short for ``pathlib.Path('/foo/bar')``\n* byte strings: prefixes other than ``b'foo'`` (eg, ``RB'foo'``) now work\n* Backticks for regex or glob searches now support an additional modifier\n  ``p``, which causes them to return Path objects instead of strings.\n* New ``BOTTOM_TOOLBAR`` environment variable to control a bottom toolbar as specified in prompt-toolkit\n* New ``$XONSH_STDERR_PREFIX`` and ``$XONSH_STDERR_POSTFIX`` environment\n  variables allow the user to print a prompt-like string before and after\n  all stderr that is seen. For example, say that you would like stderr\n  to appear on a red background, you might set\n  ``$XONSH_STDERR_PREFIX = \"{BACKGROUND_RED}\"`` and\n  ``$XONSH_STDERR_PREFIX = \"{NO_COLOR}\"``.\n* New ``xonsh.pyghooks.XonshTerminal256Formatter`` class patches\n  the pygments formatter to understand xonsh color token semantics.\n* Load events are now available\n* New events added: ``on_post_init``, ``on_pre_cmdloop``, ``on_pre_rc``, ``on_post_rc``, ``on_ptk_create``\n* Completion for ``xonsh`` builtin functions ``xontrib`` and ``xonfig``\n* Added a general customization FAQ page to the docs to collect various\n  tips/tricks/fixes for common issues/requests\n* ``test_single_command`` and ``test_redirect_out_to_file`` tests in ``test_integrations``\n* Add note that the target of redirection should be separated by a space.\n\n\n**Changed:**\n\n* CircleCI now handles flake8 checks\n* Travis doesn't allow failures on nightly\n* ``get_hg_branch`` runs ``hg root`` to find root dir and check if we're in repo\n* The default style will now use the color keywords (#ansired, #ansidarkred)\n  to set colors that follow the terminal color schemes. Currently, this requires\n  prompt_toolkit master (>1.0.8) and pygments master (2.2) to work correctly.\n* ``vox activate`` now accepts relative directories.\n* Updated the effectivity of ``$XONSH_DEBUG`` on debug messages.\n* Better documentation on how to get nice colors in Windows' default console\n* All custom prompt_toolkit key binding filters now declared with the\n  ``@Condition`` decorator\n* The style for the prompt toolkit completion menu is now lightgray/darkgray instead of turquoise/teal\n* landscape.io linting now ignores ply directory\n* ``history`` help messages to reflect subcommand usage\n* Quote all paths when completion if any of the paths needs be quoted,\n  so that bash can automatically complete to the max prefix of the paths.\n* Tee'd reads now occur in 1kb chunks, rather than character-by-character.\n* The ``which`` alias no longer has a trailing newline if it is captured.\n  This means that ``$(which cmd)`` will simply be the path to the command.\n* The following commands are, by default, predicted to be not threadable\n  in some circumstances:\n\n    * bash\n    * csh\n    * clear\n    * clear.exe\n    * cls\n    * cmd\n    * ex\n    * fish\n    * htop\n    * ksh\n    * less\n    * man\n    * more\n    * mutt\n    * nano\n    * psql\n    * ranger\n    * rview\n    * rvim\n    * scp\n    * sh\n    * ssh\n    * startx\n    * sudo\n    * tcsh\n    * top\n    * vi\n    * view\n    * vim\n    * vimpager\n    * xo\n    * xonsh\n    * zsh\n* The ``run_subproc()`` function has been replaced with a new implementation.\n* Piping between processes now uses OS pipes.\n* ``$XONSH_STORE_STDIN`` now uses ``os.pread()`` rather than ``tee`` and a new\n  file.\n* The implementation of the ``foreground()`` decorator has been moved to\n  ``unthreadable()``.\n* ``voxapi.Vox`` now supports ``pathlib.Path`` and ``PathLike`` objects as virtual environment identifiers\n* Renamed FORMATTER_DICT to PROMPT_FIELDS\n* BaseShell instantiates PromptFormatter\n* readline/ptk shells use PromptFormatter\n* Updated the bundled version of ``ply`` to current master available\n* vended ``ply`` is now a git subtree to help with any future updates\n* ``WHITE``  color keyword now means lightgray and ``INTENSE_WHITE`` completely white\n* Removed ``add_to_shell`` doc section from ``*nix`` install pages and instead\n  relocated it to the general customization page\n* Moved a few ``*nix`` customization tips from the linux install page to the general\n  customization page\n\n\n**Removed:**\n\n* coverage checks\n* ``CompletedCommand`` and ``HiddenCompletedCommand`` classes have been removed\n  in favor of ``CommandPipeline`` and ``HiddenCommandPipeline``.\n* ``SimpleProcProxy`` and ``SimpleForegroundProcProxy`` have been removed\n  in favor of a more general mechanism for dispatching callable aliases\n  implemented in the ``ProcProxyThread``  and ``ProcProxy`` classes.\n* ``test_run_subproc.py`` in favor of ``test_integrations.py``\n* Unused imports in many tests\n* Many duplicated tests (copypasta)\n\n\n**Fixed:**\n\n* xontrib-mpl now preserves the figure and does not permanently alter it for viewing\n* Fix up small pep8 violations\n* Fixed a bug where some files are not showing using bash completer\n* Fixed some issues with subprocess capturing aliases that it probably\n  shouldn't.\n* ``safe_readable()`` now checks for ``ValueError`` as well.\n* The scroll bars in the PTK completions menus are back.\n* Jupyter kernel installation now respects the setuptools ``root`` parameter.\n* Fix ``__repr__`` and ``__str__`` methods of ``SubprocSpec`` so they report\n  correctly\n* Fixed the message printed when which is unable to find the command.\n* Fixed a handful of sphinx errors and warnings in the docs\n* Fixed many PEP8 violations that had gone unnoticed\n* Fix failure to detect an Anaconda python distribution if the python was install from the conda-forge channel.\n* current_branch will try and locate the vc binary once\n* May now Ctrl-C out of an infinite loop with a subprocess, such as\n  ```while True: sleep 1``.\n* Fix for stdin redirects.\n* Backgrounding works with ``$XONSH_STORE_STDOUT``\n* ``PopenThread`` blocks its thread from finishing until command has completed\n  or process is suspended.\n* Added a minimum time buffer time for command pipelines to check for\n  if previous commands have executed successfully.  This is helpful\n  for pipelines where the last command takes a long time to start up,\n  such as GNU Parallel. This also checks to make sure that output has occurred.\n  This includes piping 2+ commands together and pipelines that end in\n  unthreadable commands.\n* ``curr_branch`` reports correctly when ``git config status.short true`` is used\n* ``pip`` completion now filters results by prefix\n* Fixed streaming ``!(alias)`` repr evaluation where bytes where not\n  streamed.\n* Aliases that begin with a comma now complete correctly (no spurious comma)\n* Use ``python3`` in shebang lines for compatibility with distros that still use Python 2 as the default Python\n* STDOUT is only stored when ``$XONSH_STORE_STDOUT=True``\n* Fixed issue with alias redirections to files throwing an OSError because\n  the function ProcProxies were not being waited upon.\n* Fixed issue with callable aliases that happen to call sys.exit() or\n  raise SystemExit taking out the whole xonsh process.\n* Safely flushes file handles on threaded buffers.\n* Proper default value and documentation for ``$BASH_COMPLETIONS``\n* Fixed readline completer issues on paths with spaces\n* Fix bug in ``argvquote()`` functions used when sourcing batch files on Windows. The bug meant an extra backslash was added to UNC paths.\n  Thanks to @bytesemantics for spotting it, and @janschulz for fixing the issue.\n* pep8, lint and refactor in pytest style of ``test_ptk_multiline.py``, ``test_replay.py``\n* Tab completion of aliases returned a upper cased alias on Windows.\n* History show all action now also include current session items.\n* ``proc.stream_stderr`` now handles stderr that doesn't have buffer attribute\n* Made ``history show`` result sorted.\n* Fixed issue that ``history gc`` does not delete empty history files.\n* Standard stream tees have been fixed to accept the possibility that\n  they may not be backed by a binary buffer. This includes the pipeline\n  stdout tee as well as the shell tees.\n* Fixed a bug when the pygments plugin was used by third party editors etc.\n* CPU usage of ``PopenThread`` and ``CommandPipeline`` has been brought\n  down significantly.\n\n\n\n\nv0.4.7\n====================\n\n**Added:**\n\n* Define alias for 'echo' on startup for Windows only.\n* New coredev `AstraLuma <https://github.com/AstraLuma>`_ added\n* ``which -a`` now searches in ``__xonsh_ctx__`` too\n* Info about the xontrib cookiecutter template on xontrib tutorial\n* xonsh's optional dependencies may now be installed with the pip extras ``ptk``, ``proctitle``, ``linux``, ``mac``, and ``win``.\n* Env ``help`` method to format and print the vardocs for an envvar\n* test_news fails if no empty line before a category\n* more info on test_news failures\n* Added ``on_precommand`` and ``on_postcommand`` `events </events.html>`_\n* New ``FORMATTER_DICT`` entry ``gitstatus`` to provides informative git status\n* FOREIGN_ALIASES_OVERRIDE envvar to control whether foreign aliases should\n  override xonsh aliases with the same name.\n\n* Warning on tutorial about foreign aliases being ignored if a xonsh alias\n  exist with the same name if not FOREIGN_ALIASES_OVERRIDE.\n* The prompt-toolkit shell now auto-inserts matching parentheses, brackets, and quotes. Enabled via the ``XONSH_AUTOPAIR`` environment variable\n* Better syntax highlights in prompt-toolkit, including valid command / path highlighting, macro syntax highlighting, and more\n* More info on tutorial about history interaction\n* Entry on bash_to_xsh\n* Macro context managers are now available via the ``with!``\n  syntax.\n\n\n**Changed:**\n\n* Devguide reflects the current process of releasing through ``release.xsh``\n* moved ``which`` from ``xonsh.aliases`` into ``xoreutils.which``\n* ``xonsh.prompt.gitstatus.gitstatus`` now returns a namedtuple\n\n* implementation of ``xonsh.prompt.vc_branch.get_git_branch`` and\n  ``xonsh.prompt.vc_branch.git_dirty_working_directory`` to use 'git status --procelain'\n* moved prompt formatting specific functions from ``xonsh.environ``\n  to ``xonsh.prompt.base``\n* All prompt formatter functions moved to ``xonsh.prompt`` subpackage\n* Printing the message about foreign aliases being ignored happens only\n  if XONSH_DEBUG is set.\n* Use ``SetConsoleTitleW()`` on Windows instead of a process call.\n* Tutorial to reflect the current history command argument functionality\n* Macro function arguments now default to ``str``, rather than ``eval``,\n  for consistency with other parts of the macro system.\n\n\n**Removed:**\n\n* aliases that use '!' in their name cause they clash with the macro syntax\n\n\n**Fixed:**\n\n* Fix regression where bash git completions where not loaded\n  automatically when GitForWindows is installed.\n* More tokens are now supported in subproc args, such as ``==``.\n* Python completions now work without space delimiters, e.g. ``a=matpl<TAB>``\n  will complete to ``a=matplotlib``\n* Parser would fail on nested, captured suprocess macros. Now, it works,\n  hooray!?\n* now fires chdir event if OS change in working directory is detected.\n* ``xonsh.prompt.vc_branch.git_dirty_working_directory``\n   uses ``porcelain`` option instead of using the bytestring\n   ``nothing to commit`` to find out if a git directory is dirty\n* Fix bug where know commands where not highlighted on windows.\n* Fixed completer showing executable in upper case on windows.\n* Fixed issue where tilde expansion was occurring more than once before an\n  equals sign.\n* test_dirstack test_cdpath_expansion leaving stray testing dirs\n* Better completer display for long completions in prompt-toolkit\n* Automatically append newline to target of ``source`` alias, so that it may\n  be exec'd.\n* test_news fails when single graves around word\n* Slashes in virtual environment names work in vox\n* non string type value in $FORMATTER_DICT turning prompt ugly\n* whole prompt turning useless when one formatting function raises an exception\n* Fix completion after alias expansion\n* Fix hard crash when foreign shell functions fails to run. #1715\n* Bug where non-default locations for ``XDG_DATA_HOME`` and ``XONSH_DATA_DIR``\n  would not expand ``~`` into the home directory\n* Auto quote path completions if path contains 'and' or 'or'\n\n* Completion now works on subcommands after pipe, ``&&``, ``||`` and so on.\n* cd . and cd <singleCharacter> now work.  Fix indexerror in AUTO_PUSHD case, too.\n* Fixed issue with accidentally wrapping generators inside of function calls.\n* History indexing with string returns most recent command.\n\n\n\n\nv0.4.6\n====================\n\n**Added:**\n\n* New option ``COMPLETIONS_CONFIRM``. When set, ``<Enter>`` is used to confirm\n  completion instead of running command while completion menu is displayed.\n* NetBSD is now supported.\n* Macro function calls are now available. These use a Rust-like\n  ``f!(arg)`` syntax.\n* Macro subprocess call now available with the ``echo! x y z``\n  syntax.\n* A new `event subsystem <http://xon.sh/tutorial_events.html>`_ has been added.\n* howto install sections for Debian/Ubuntu and Fedora.\n* ``History`` methods ``__iter__`` and ``__getitem__``\n\n* ``tools.get_portions`` that yields parts of an iterable\n* Added a py.test plugin to collect ``test_*.xsh`` files and run ``test_*()`` functions.\n* ``__repr__`` and ``__str__`` magic method on LazyObject\n\n\n**Changed:**\n\n* ``create_module`` implementation on XonshImportHook\n* Results of the ``bash`` tab completer are now properly escaped (quoted) when necessary.\n* Foreign aliases that match xonsh builtin aliases are now ignored with a warning.\n* ``prompt_toolkit`` completions now only show the rightmost portion\n  of a given completion in the dropdown\n* The value of ``'none'`` is no longer allowed for ``$SHELL_TYPE`` just during the initial\n  load from the environment. ``-D``, later times, and other sources still work.\n* ``yacc_debug=True`` now load the parser on the same thread that the\n  Parser instance is created. ``setup.py`` now uses this synchronous\n  form as it was causing the parser table to be missed by some package\n  managers.\n* Tilde expansion for the home directory now has the same semantics as Bash.\n  Previously it only matched leading tildes.\n* Context sensitive AST transformation now checks that all names in an\n  expression are in scope. If they are, then Python mode is retained. However,\n  if even one is missing, subprocess wrapping is attempted. Previously, only the\n  left-most name was examined for being within scope.\n* ``dirstack.pushd`` and ``dirstack.popd`` now handle UNC paths (of form ``\\\\<server>\\<share>\\...``), but only on Windows.\n  They emulate behavior of `CMD.EXE` by creating a temporary mapped drive letter (starting from z: down) to replace\n  the ``\\\\<server>\\<share>`` portion of the path, on the ``pushd`` and unmapping the drive letter when all references\n  to it are popped.\n\n* And ``dirstack`` suppresses this temporary drive mapping funky jive if registry entry\n  ``HKCU\\software\\microsoft\\command processor\\DisableUNCCheck`` (or HKLM\\...) is a DWORD value 1.  This allows Xonsh\n  to show the actual UNC path in your prompt string and *also* allows subprocess commands invoking `CMD.EXE` to run in\n  the expected working directory. See https://support.microsoft.com/en-us/kb/156276 to satisfy any lingering curiosity.\n* ``lazy_locate_binary`` handles binary on different drive letter than current working directory (on Windows).\n* ``_curr_session_parser`` now iterates over ``History``\n* New implementation of bash completer with better performance and compatibility.\n* ``$COMPLETIONS_BRACKETS`` is now available to determine whether or not to\n  include opening brackets in Python completions\n* ``xonsh.bat`` tries to use `pylauncher <https://www.python.org/dev/peps/pep-0397/>`_ when available.\n\n\n**Removed:**\n\n* ``History`` method ``show``\n* ``_hist_get_portion`` in favor of ``tools.get_portions``\n* Unused imports in proc, flake8.\n\n\n**Fixed:**\n\n* xonsh modules imported now have the __file__ attribute\n* Context sensitive AST transformer was not adding argument names to the\n  local scope. This would then enable extraneous subprocess mode wrapping\n  for expressions whose leftmost name was function argument. This has been\n  fixed by properly adding the argument names to the scope.\n* Foreign shell functions that are mapped to empty filenames no longer\n  receive aliases since they can't be found to source later.\n* Correctly preserve arguments given to xon.sh, in case there are quoted ones.\n* Environment variables in subprocess mode were not being expanded\n  unless they were in a sting. They are now expanded properly.\n* Fixed a bug that prevented xonsh from running scripts with code caching disabled.\n* Text of instructions to download missing program now does not get off and\n  appears in whole.\n* Fix some test problems when win_unicode_console was installed on windows.\n* Fixed bug that prompt string and ``$PWD`` failed to track change in actual working directory if the\n  invoked Python function happened to change it (e.g via ```os.chdir()```.  Fix is to update ``$PWD``\n  after each command in ```BaseShell.default()```.\n* The interactive prompt now correctly handles multiline strings.\n* ``cd \\\\<server>\\<share>`` now works when $AUTO_PUSHD is set, either creating a temporary mapped drive or simply\n  setting UNC working directory based on registry ``DisableUNCCheck``.  However, if $AUTO_PUSHD is not set and UNC\n  checking is enabled (default for Windows), it issues an error message and fails.  This improves on prior behavior,\n  which would fail to change the current working directory, but would set $PWD and prompt string to the UNC path,\n  creating false expectations.\n* fix parsing for tuple of tuples (like `(),()`)\n* ``sys.stdin``, ``sys.stdout``, ``sys.stderr`` no longer complete with\n  opening square brackets\n* xonsh now properly handles syntax error messages arising from using values in inappropriate contexts (e.g., ``del 7``).\n\n\nv0.4.5\n====================\n\n**Added:**\n\n* ``_hist_get`` that uses generators to filter and fetch\n  the history commands of each session.\n\n* ``-n`` option to the show subcommand to choose\n  to numerate the commands.\n* The ``exec`` command is now a first class alias that acts the same way as in\n  sh-based languages. It replaces the current process with the command and\n  argument that follows it. This allows xonsh to be used as a default shell\n  while maintaining functionality with SSH, gdb, and other third party programs\n  that assume the default shell supports raw ``exec command [args]`` syntax.\n\n  This feature introduces some ambiguity between exec-as-a-subprocess and\n  exec-as-a-function (the inescapable Python builtin). Though the two pieces of\n  syntax do not overlap, they perform very different operations. Please see\n  the xonsh FAQ for more information on trade-offs and mitigation strategies.\n* ``which -v`` now calls superhelp, which will print highlighted source.\n* Added xontribs:\n  * `z (Tracks your most used directories, based on 'frecency'.) <https://github.com/AstraLuma/xontrib-z>`_\n* amalgamate.py now supports relative imports.\n* ``history show`` args ``-t``, ``-f``, ``-T`` ``+T`` to filter commands by timestamp\n\n* ``ensure_timestamp`` in xonsh.tools to try and convert an object to a timestamp a.k.a float\n\n* ``$XONSH_DATETIME_FORMAT`` envvar, the default format to be used with ``datetime.datetime.strptime()``\n* ``xon.sh`` script now sets ``$LANG=C.UTF8`` in the event that no encoding\n  is detected.\n* amalgamate.py now properly handles ``from __future__`` imports.\n\n\n**Changed:**\n\n* ``_hist_show`` now uses ``_hist_get`` to print out the commands.\n* ``xonsh.completers`` sub-package is now fully lazy.\n* The vox xontrib now takes flags very similar to Python's venv tool. Use\n  ``vox --help <command>`` to learn more.\n* Xontribs may now define ``__all__`` as a module top-level to limit what gets exported to the shell context\n* xon.sh uses the interpreter used to install instead of the default python3.\n* ``imphooks`` now checks directory access rights.\n* $TITLE now changes both icon (tab) and window title\n* Moved ``amalgamate_source`` outside ``build_tables``\n\n* Disable amalgamation on setup develop\n* ``_hist_parse_args`` implementation refactor\n\n* moved all parameter checking in ``_hist_get``\n\n* ``_hist_show`` to handle numeration and timestamp printing of commands\n* ``xonsh.imphooks`` does not install the import hooks automatically, you now\n  need to explicitly call the  `install_hook()` method defined in this module.\n  For example: ``from xonsh.imphooks import install_hook; install_hook()``. The\n  ``install_hook`` method can safely be called several times. If you need\n  compatibility with previous versions of Xonsh you can use the following::\n\n    from xonsh import imphooks\n    getattr(imphooks, 'install_hook', lambda:None)()\n* xonfig command now dumps more encoding related settings.\n\n\n**Removed:**\n\n* Anaconda Build is shutting down so we can no longer build conda development packages.\n  All references to these packages are removed from the documentation.\n* Removed conda build recipe since the it is no longer used for Anaconda Build.\n  The recipe used to build xonsh on conda-forge can be found here:\n  https://github.com/conda-forge/xonsh-feedstock/blob/master/recipe/meta.yaml\n\n\n**Fixed:**\n\n* ``_zsh_hist_parser`` not parsing history files without timestamps.\n* Fixed amalgamation of aliased imports that are already in ``sys.modules``.\n* Xonsh will no longer fail to start in directories where the user doesn't have\n  read access.\n* Fixed parser error line number exception from being raised while trying to\n  raise a SyntaxError.\n* Made pip completer more robust to when pip is not installed.\n* Fix a startup problem on windows caused by a refactor of Prompt_toolkit.\n  https://github.com/jonathanslenders/python-prompt-toolkit/commit/a9df2a2\n* ``ensure_slice`` bugfix for -1 index/slice\n* Alias tab completion works again\n* Version number reported by bundled PLY\n* ``xonfig`` no longer breaks if PLY is externally installed and version 3.8\n* LazyObject supports set union\n* Fixed error with not sourcing files with ``$XONSH_ENCODING`` and\n  ``$XONSH_ENCODING_ERRORS``.\n* ``$IGNOREEOF`` envrionment variable now works properly in the\n  prompt-toolkit shell.\n* Completions in ``jupyter_kernel.py`` now use updated completion framework\n\n\n\n\nv0.4.4\n====================\n\n**Added:**\n\n* New ``lazyobject()``, ``lazydict()``, and ``lazybool()`` decorators to turn\n  functions into lazy, global objects.\n* ``vox remove`` command can remove multiple environments at once.\n* Added FreeBSD support.\n* Tab completion for pip python package manager.\n* Regular expressions for environment variable matching.\n\n* __contains__ method on Env\n* Added news tests to enforce changelog conformity.\n* A new way to add optional items to the prompt format string has been added.\n  Instead of relying on formatter dict items being padded with a space, now the\n  padding characters are specified in the format string itself, in place of the\n  format spec (after a ``:``).\n\n  For example, previously the prompt string ``{cwd}{curr_branch} $`` would rely\n  on ``curr_branch`` giving its output prepended with a space for separation,\n  or outputting nothing if it is not applicable. Now ``curr_branch`` just\n  outputs a value or ``None``, and the prompt string has to specify the\n  surrounding characters: ``{cwd}{curr_branch: {}} $``. Here the  value of\n  ``curr_branch`` will be prepended with a space (``{}`` is a placeholder for\n  the value itself). The format string after ``:`` is applied only if the value\n  is not ``None``.\n* ``xonsh.completers`` subpackage is now amalgamated.\n* amalgamate.py will now warn if the same name is defined across multiple\n  different files.\n* xonsh_builtins, xonsh_execer fixtures in conftest.py\n* Docs on how to tweak the Windows ConHost for a better color scheme.\n* Docs: how to fix Thunar's \"Open Terminal Here\" action.\n* A new API class was added to Vox: ``xontrib.voxapi.Vox``. This allows programmatic access to the virtual environment machinery for other xontribs. See the API documentation for details.\n* History now accepts multiple slices arguments separated by spaces\n\n\n**Changed:**\n\n* amalgamate now works on Python 2 and allows relative imports.\n* Top-level xonsh package now more lazy.\n* Show conda environment name in prompt in parentheses similar what conda does.\n* Implementation of expandvars now uses regex\n* Because of the addition of \"optional items\" to the prompt format string, the\n  functions ``xonsh.environ.current_branch``, ``xonsh.environ.env_name`` and\n  formatter dict items ``curr_branch``, ``current_job``, ``env_name`` are\n  no longer padded with a separator.\n* many test cases to use fixtures and parametrization\n* Public interface in ``xonsh.ansi_colors`` module now has ``ansi_``\n  prefix to prevent name conflicts with other parts of xonsh.\n* Vox was moved to xontrib. Behaves exactly the same as before, just need to add it to your xontribs.\n* is_int_as_str and is_slice_as_str are now reimplemented in EAFP style\n\n\n**Deprecated:**\n\n* yield statements (nose style) and for loops in tests\n* is_int_or_slice\n\n\n**Removed:**\n\n* _is_in_env, _get_env_string functions on tools\n* ``xonsh.environ.format_prompt`` has been dropped; ``partial_format_prompt``\n  can be used instead.\n* for loops and yield statements in test cases, unused imports\n* is_int_or_slice\n\n\n**Fixed:**\n\n* Fixed bug on Windows preventing xonsh from changing the console title.\n* Unrecognized ``$XONSH_COLOR_STYLE`` values don't crash terminal.\n* Writing the window title will no longer accidentally answer interactive\n  questions, eg ``rm -i`` now works as expected.\n* more matching cases for envvar reference\n* Certain linux VTE terminals would not start new tabs in the previous CWD.\n  This may now be rectified by adding ``{vte_new_tab_cwd}`` somewhere to the\n  prompt.\n* Unqualified usage of Unstorable in xonsh setup wizard that was causing the\n  wizard to crash and burn\n* Bare ``except:`` was replaced with ``except Exception`` to prevent\n  accidentally catching utility exceptions such as KeyboardInterrupt, which\n  caused unexpected problems like printing out the raw $PROMPT string.\n* Fixed multiple definition of ``EQUAL``.\n* Fixed multiple definition of ``pprint``.\n* Fixed multiple definition of ``pyghooks``.\n* Fixed multiple definition of ``pygments``.\n* Fixed multiple definition of ``tokenize``.\n* redundant and 'leaky' tests in nose\n* Fix bug that prevented disabling $INTENSIFY_COLORS_ON_WIN in ``xonshrc``\n* ``LazyJSON`` will now hide failures to close, and instead rely on reference\n  counting if something goes wrong.\n* Fixed maximum recursion error with color styles.\n* Parser tables will no longer be generated in the current directory\n  by accident.\n* Error messages when zsh or bash history file is not found\n\n\n\n\nv0.4.3\n====================\n\n**Added:**\n\n* The results of glob expressions are sorted if ``$GLOB_SORTED`` is set.\n* LazyObjects will now load themselves on ``__getitem__()``\n* New tools in ``xonsh.lazyasd`` module for loading modules in background\n  threads.\n\n\n**Changed:**\n\n* ``GLOB_SORTED`` is enabled by default.\n* Sped up loading of pygments by ~100x by loading ``pkg_resources`` in\n  background.\n* Sped up loading of prompt-toolkit by ~2x-3x by loading ``pkg_resources``\n  in background.\n* ``setup.py`` will no longer git checkout to replace the version number.\n  Now it simply stores and reuses the original version line.\n\n\n**Removed:**\n\n* Removed the ``xonsh.built_ins.ENV`` global instance of the Env class.\n\n\n**Fixed:**\n\n* Bug with setting hist size not being settable due to lazy object loading\n  has been resolved.\n* Minor amalgamate bug with ``import pkg.mod`` amalgamated imports.\n* No longer raises an error if a directory in ``$PATH`` does not exist on\n  Python v3.4.\n* Fixed a readline shell completion issue that caused by inconsistency between\n  ``$CASE_SENSITIVE_COMPLETIONS`` and readline's inputrc setting.\n\n\n\n\nv0.4.2\n====================\n\n**Added:**\n\n* dev versions now display a ``devN`` counter at the end and ``xonfig info``\n  also displays the git sha of the current build\n\n\n**Changed:**\n\n* `prompt_toolkit` completion no longer automatically selects the first entry on first tab-press when completing multiple directories at once\n\n\n**Fixed:**\n\n* Sourcing foreign shells now allow fully capture environment variables that\n  contain newlines as long as they also don't contain equal signs.\n* Added scripts directory to MANIFEST.in\n\n\n\n\nv0.4.1\n====================\n\n**Fixed:**\n\n* ``setup.py`` will only amalgamate source files if ``amalgamate.py`` is\n  available. This fixes issues with installing from pip.\n\n\n\n\nv0.4.0\n====================\n\n**Added:**\n\n* A new class, ``xonsh.tools.EnvPath`` has been added. This class implements a\n  ``MutableSequence`` object and overrides the ``__getitem__`` method so that\n  when its entries are requested (either explicitly or implicitly), variable\n  and user expansion is performed, and relative paths are resolved.\n  ``EnvPath`` accepts objects (or lists of objects) of ``str``, ``bytes`` or\n  ``pathlib.Path`` types.\n* New amalgamate tool collapses modules inside of a package into a single\n  ``__amalgam__.py`` module. This tool glues together all of the code from the\n  modules in a package, finds and removes intra-package imports, makes all\n  non-package imports lazy, and adds hooks into the ``__init__.py``.\n  This helps makes initial imports of modules fast and decreases startup time.\n  Packages and sub-packages must be amalgamated separately.\n* New lazy and self-destructive module ``xonsh.lazyasd`` adds a suite of\n  classes for delayed creation of objects.\n\n    - A ``LazyObject`` won't be created until it has an attribute accessed.\n    - A ``LazyDict`` will load each value only when a key is accessed.\n    - A ``LazyBool`` will only be created when ``__bool__()`` is called.\n\n  Additionally, when fully loaded, the above objects will replace themselves\n  by name in the context that they were handed, thus dereferencing themselves.\n  This is useful for global variables that may be expensive to create,\n  should only be created once, and may not be used in any particular session.\n* New ``xon.sh`` script added for launching xonsh from a sh environment.\n  This should be used if the normal ``xonsh`` script does not work for\n  some reason.\n* Normal globbing is now available in Python mode via ``g````\n* Backticks were expanded to allow searching using arbitrary functions, via\n  ``@<func>````\n* ``xonsh.platform`` now has a new ``PATH_DEFAULT`` variable.\n* Tab completers can now raise ``StopIteration`` to prevent consideration of\n  remaining completers.\n* Added tab completer for the ``completer`` alias.\n* New ``Block`` and ``Functor`` context managers are now available as\n  part of the ``xonsh.contexts`` module.\n* ``Block`` provides support for turning a context body into a non-executing\n  list of string lines. This is implement via a syntax tree transformation.\n  This is useful for creating remote execution tools that seek to prevent\n  local execution.\n* ``Functor`` is a subclass of the ``Block`` context manager that turns the\n  block into a callable object.  The function object is available via the\n  ``func()`` attribute.  However, the ``Functor`` instance is itself callable\n  and will dispatch to ``func()``.\n* New ``$VC_BRANCH_TIMEOUT`` environment variable is the time (in seconds)\n  of how long to spend attempting each individual version control branch\n  information command during ``$PROMPT`` formatting.  This allows for faster\n  prompt resolution and faster startup times.\n* New lazy methods added to CommandsCache allowing for testing and inspection\n  without the possibility of recomputing the cache.\n* ``!(command)`` is now usefully iterable, yielding lines of stdout\n* Added XonshCalledProcessError, which includes the relevant CompletedCommand.\n  Also handles differences between Py3.4 and 3.5 in CalledProcessError\n* Tab completion of paths now includes zsh-style path expansion (subsequence\n  matching), toggleable with ``$SUBSEQUENCE_PATH_COMPLETION``\n* Tab completion of paths now includes \"fuzzy\" matches that are accurate to\n  within a few characters, toggleable with ``$FUZZY_PATH_COMPLETION``\n* Provide ``$XONSH_SOURCE`` for scripts in the environment variables pointing to\n  the currently running script's path\n* Arguments '+' and '-' for the ``fg`` command (job control)\n* Provide ``$XONSH_SOURCE`` for scripts in the environment variables pointing to\n  the currently running script's path\n* ``!(command)`` is now usefully iterable, yielding lines of stdout\n* Added XonshCalledProcessError, which includes the relevant CompletedCommand.\n  Also handles differences between Py3.4 and 3.5 in CalledProcessError\n* XonshError and XonshCalledProcessError are now in builtins:\n\n  - ``history session``\n  - ``history xonsh``\n  - ``history all``\n  - ``history zsh``\n  - ``history bash``\n  - ``__xonsh_history__.show()``\n\n* New ``pathsep_to_set()`` and ``set_to_pathsep()`` functions convert to/from\n  ``os.pathsep`` separated strings to a set of strings.\n\n\n**Changed:**\n\n* Changed testing framework from nose to pytest\n* All ``PATH``-like environment variables are now stored in an ``EnvPath``\n  object, so that non-absolute paths or paths containing environment variables\n  can be resolved properly.\n* In ``VI_MODE``, the ``v`` key will enter character selection mode, not open\n  the editor.  ``Ctrl-X Ctrl-E`` will still open an editor in any mode\n* ``$XONSH_DEBUG`` will now suppress amalgamated imports. This usually needs to be\n  set in the calling environment or prior to *any* xonsh imports.\n* Restructured ``xonsh.platform`` to be fully lazy.\n* Restructured ``xonsh.ansi_colors`` to be fully lazy.\n* Ensured the ``pygments`` and ``xonsh.pyghooks`` are not imported until\n  actually needed.\n* Yacc parser is now loaded in a background thread.\n* Cleaned up argument parsing in ``xonsh.main.premain`` by removing the\n  ``undo_args`` hack.\n* Now complains on invalid arguments.\n* ``Env`` now guarantees that the ``$PATH`` is available and mutable when\n  initialized.\n* On Windows the ``PROMPT`` environment variable is reset to `$P$G` before\n  sourcing ``*.bat`` files.\n* On Windows the ``PROMPT`` environment variable is reset to `$P$G` before starting\n  subprocesses. This prevents the unformatted xonsh ``PROMPT`` template from showing up\n  when running batch files with ``ECHO ON```\n* ``@()`` now passes through functions as well as strings, which allows for the\n  use of anonymous aliases and aliases not explicitly added to the ``aliases``\n  mapping.\n* Functions in ``Execer`` now take ``transform`` kwarg instead of\n  ``wrap_subproc``.\n* Provide ``$XONSH_SOURCE`` for scripts in the environment variables pointing to\n  the currently running script's path\n* XonshError and XonshCalledProcessError are now in builtins\n* ``__repr__`` on the environment only shows a short representation of the\n  object instead of printing the whole environment dictionary\n* More informative prompt when configuring foreign shells in the wizard.\n* ``CommandsCache`` is now a mapping from command names to a tuple of\n  (executable locations, has alias flags). This enables faster lookup times.\n* ``locate_bin()`` now uses the ``CommandsCache``, rather than scanning the\n  ``$PATH`` itself.\n* ``$PATHEXT`` is now a set, rather than a list.\n* Ignore case and leading a quotes when sorting completions\n\n\n**Removed:**\n\n* The ``'console_scripts'`` option to setuptools has been removed. It was found\n  to cause slowdowns of over 150 ms on every startup.\n* Bash is no longer loaded by default as a foreign shell for initial\n  configuration. This was done to increase stock startup times. This\n  behaviour can be recovered by adding ``{\"shell\": \"bash\"}`` to your\n  ``\"foreign_shells\"`` in your config.json file. For more details,\n  see http://xon.sh/xonshconfig.html#foreign-shells\n* ``ensure_git()`` and ``ensure_hg()`` decorators removed.\n* ``call_hg_command()`` function removed.\n\n\n**Fixed:**\n\n* Issue where ``xonsh`` did not expand user and environment variables in\n  ``$PATH``, forcing the user to add absolute paths.\n* Fixed a problem with aliases not always being found.\n* Fixed issue where input was directed to the last process in a pipeline,\n  rather than the first.\n* Bug where xonfig wizard can't find ENV docs\n* Fixed ``xonsh.environ.locate_binary()`` to handle PATH variable are given as a tuple.\n* Fixed missing completions for ``cd`` and ```rmdir`` when directories had spaces\n  in their names.\n* Bug preventing `xonsh` executable being installed on macOS.\n* Strip leading space in commands passed using the \"-c\" switch\n* Fixed xonfig wizard failing on Windows due to colon in created filename.\n* Ensured that the prompt_toolkit shell functions, even without a ``completer``\n  attribute.\n* Fixed crash resulting from malformed ``$PROMPT`` or ``$TITLE``.\n* xonsh no longer backgrounds itself after every command on Cygwin.\n* Fixed an issue about ``os.killpg()`` on Cygwin which caused xonsh to crash\n  occasionally\n* Fix crash on startup when Bash Windows Subsystem for Linux is on the Path.\n* Fixed issue with setting and signaling process groups on Linux when the first\n  process is a function alias and has no pid.\n* Fixed ``_list_completers`` such that it does not throw a ValueError if no completer is registered.\n* Fixed ``_list_completers`` such that it does not throw an AttributeError if a completer has no docstring.\n* Bug that caused command line argument ``--config-path`` to be ignored.\n* Bug that caused xonsh to break on startup when prompt-toolkit < 1.0.0.\n\n\nv0.3.4\n====================\n\n**Changed:**\n\n* ``$PROMPT`` from foreign shells is now ignored.\n* ``$RC_FILES`` environment variable now stores the run control files we\n  attempted to load.\n* Only show the prompt for the wizard if we did not attempt to load any run\n  control files (as opposed to if none were successfully loaded).\n* Git and mercurial branch and dirty function refactor to improve run times.\n\n\n**Fixed:**\n\n* Fixed an issue whereby attempting to delete a literal value (e.g., ``del 7``)\n  in the prompt_toolkit shell would cause xonsh to crash.\n* Fixed broken behavior when using ``cd ..`` to move into a nonexistent\n  directory.\n* Partial workaround for Cygwin where ``pthread_sigmask`` appears to be missing\n  from the ``signal`` module.\n* Fixed crash resulting from malformed ``$PROMPT``.\n* Fixed regression on Windows with the locate_binary() function.\n  The bug prevented `source-cmd` from working correctly and broke the\n  ``activate``/``deactivate`` aliases for the conda environments.\n* Fixed crash resulting from errors other than syntax errors in run control\n  file.\n* On Windows if bash is not on the path look in the registry for the defaults\n  install directory for GitForWindows.\n\n\nv0.3.3\n====================\n**Added:**\n\n* Question mark literals, ``?``, are now allowed as part of\n  subprocess argument names.\n* IPython style visual pointer to show where syntax error was detected\n* Pretty printing of output and syntax highlighting of input and output can now\n  be controlled via new environment variables ``$COLOR_INPUT``,\n  ``$COLOR_RESULTS``, and ``$PRETTY_PRINT_RESULTS``.\n\n* In interactive mode, if there are stopped or background jobs, Xonsh prompts\n  for confirmations rather than just killing all jobs and exiting.\n\n**Changed:**\n\n* ``which`` now gives a better verbose report of where the executables are\n  found.\n* Tab completion now uses a different interface, which allows new completers\n  to be implemented in Python.\n* Most functions in the ``Execer`` now take an extra argument\n  ``transform``, indicating whether the syntax tree transformations should\n  be applied.\n* ``prompt_toolkit`` is now loaded lazily, decreasing load times when using\n  the ``readline`` shell.\n* RC files are now executed directly in the appropriate context.\n* ``_`` is now updated by ``![]``, to contain the appropriate\n  ``CompletedCommand`` object.\n\n\n\n**Removed:**\n\n* Fixed bug on Windows where ``which`` did not include current directory\n\n**Fixed:**\n\n* Fixed crashed bash-completer when bash is not available on Windows\n* Fixed bug on Windows where tab-completion for executables would return all files.\n* Fixed bug on Windows which caused the bash $PROMPT variable to be used when no\n  no $PROMPT variable was set in .xonshrc\n* Improved start-up times by caching information about bash completion\n  functions\n* The --shell-type CLI flag now takes precedence over $SHELL_TYPE specified in\n  .xonshrc\n* Fixed an issue about ``os.killpg()`` on OS X which caused xonsh crash with\n  occasionally.\n\n\n\nv0.3.2\n====================\n**Fixed:**\n\n* Fixed PermissionError when tab completions tries to lookup executables in\n  directories without read permissions.\n* Fixed incorrect parsing of command line flags\n\n\n\nv0.3.1\n====================\n**Added:**\n\n* When a subprocess exits with a signal (e.g. SIGSEGV), a message is printed,\n  similar to Bash.\n* Added comma literals to subproc mode.\n* ``@$(cmd)`` has been added as a subprocess-mode operator, which replaces in\n  the subprocess command itself with the result of running ``cmd``.\n* New ``showcmd`` alias for displaying how xonsh interprets subprocess mode\n  commands and arguments.\n* Added ``$DYNAMIC_CWD_WIDTH`` to allow the adjusting of the current working\n  directory width in the prompt.\n* Added ``$XONSH_DEBUG`` environment variable to help with debugging.\n* The ``${...}`` shortcut for ``__xonsh_env__`` now returns appropriate\n  completion options\n\n**Changed:**\n\n* On Windows the default bash completions files ``$BASH_COMPLETIONS`` now points\n  to the default location of the completions files used by 'Git for Windows'\n* On Cygwin, some tweaks are applied to foreign shell subprocess calls and the\n  readline import, in order to avoid hangs on launch.\n\n\n**Removed:**\n\n* Special cased code for handling version of prompt_toolkit < v1.0.0\n\n\n**Fixed:**\n\n* Show sorted bash completions suggestions.\n* Fix bash completions (e.g git etc.) on windows when completions files have\n  spaces in their path names\n* Fixed a bug preventing ``source-bash`` from working on Windows\n* Numerous improvements to job control via a nearly-complete rewrite.\n* Addressed issue with finding the next break in subproc mode in context\n  sensitive parsing.\n* Fixed issue with loading readline init files (inputrc) that seems to be\n  triggered by libedit.\n* ``$MULTILINE_PROMPT`` now allows colors, as originally intended.\n* Rectified install issue with Jupyter hook when installing with pyenv,\n  Jupyter install hook now respects ``--prefix`` argument.\n* Fixed issue with the xonsh.ply subpackage not being installed.\n* Fixed a parsing bug whereby a trailing ``&`` on a line was being ignored\n  (processes were unable to be started in the background)\n\n\n\nv0.3.0\n====================\n**Added:**\n\n* ``and``, ``or``, ``&&``, ``||`` have been added as subprocess logical operators,\n  by popular demand!\n* Subprocesses may be negated with ``not`` and grouped together with parentheses.\n* New framework for writing xonsh extensions, called ``xontribs``.\n* Added a new shell type ``'none'``, used to avoid importing ``readline`` or\n  ``prompt_toolkit`` when running scripts or running a single command.\n* New: `sudo` functionality on Windows through an alias\n* Automatically enhance colors for readability in the default terminal (cmd.exe)\n  on Windows. This functionality can be enabled/disabled with the\n  $INTENSIFY_COLORS_ON_WIN environment variable.\n* Added ``Ellipsis`` lookup to ``__xonsh_env__`` to allow environment variable checks, e.g. ``'HOME' in ${...}``\n* Added an option to update ``os.environ`` every time the xonsh environment changes.\n  This is disabled by default but can be enabled by setting ``$UPDATE_OS_ENVIRON`` to\n  True.\n* Added Windows 'cmd.exe' as a foreign shell. This gives xonsh the ability to source\n  Windows Batch files (.bat and .cmd). Calling ``source-cmd script.bat`` or the\n  alias ``source-bat script.bat`` will call the bat file and changes to the\n  environment variables will be reflected in xonsh.\n* Added an alias for the conda environment activate/deactivate batch scripts when\n  running the Anaconda python distribution on Windows.\n* Added a menu entry to launch xonsh when installing xonsh from a conda package\n* Added a new ``which`` alias that supports both regular ``which`` and also searches\n  through xonsh aliases. A pure python implementation of ``which`` is used. Thanks\n  to Trent Mick. https://github.com/trentm/which/\n* Added support for prompt toolkit v1.0.0.\n* Added ``$XONSH_CACHE_SCRIPTS`` and ``$XONSH_CACHE_EVERYTHING`` environment\n  variables to control caching of scripts and interactive commands.  These can\n  also be controlled by command line options ``--no-script-cache`` and\n  ``--cache-everything`` when starting xonsh.\n* Added a workaround to allow ctrl-c to interrupt reverse incremental search in\n  the readline shell\n\n**Changed:**\n\n* Running scripts through xonsh (or running a single command with ``-c``) no\n  longer runs the user's rc file, unless the ``--login`` option is specified.\n  Also avoids loading aliases and environments from foreign shells, as well as\n  loading bash completions.\n* rc files are now compiled and cached, to avoid re-parsing when they haven't\n  changed.  Scripts are also compiled and cached, and there is the option to\n  cache interactive commands.\n* Left and Right arrows in the ``prompt_toolkit`` shell now wrap in multiline\n  environments\n* Regexpath matching with backticks, now returns an empty list in python mode.\n* Pygments added as a dependency for the conda package\n* Foreign shells now allow for setting exit-on-error commands before and after\n  all other commands via the ``seterrprevcmd`` and ``seterrpostcmd`` arguments.\n  Sensinble defaults are provided for existing shells.\n* PLY is no longer a external dependency but is bundled in xonsh/ply. Xonsh can\n  therefore run without any external dependencies, although having prompt-toolkit\n  recommended.\n* Provide better user feedback when running ``which`` in a platform that doesn't\n  provide it (e.g. Windows).\n* The lexer now uses a custom tokenizer that handles regex globs in the proper\n  way.\n\n\n\n\n\n\n**Fixed:**\n\n* Fixed bug with loading prompt-toolkit shell < v0.57.\n* Fixed bug with prompt-toolkit completion when the cursor is not at the end of\n  the line.\n* Aliases will now evaluate environment variables and other expansions\n  at execution time rather than passing through a literal string.\n* Fixed environment variables from os.environ not being loaded when a running\n  a script\n* The readline shell will now load the inputrc files.\n* Fixed bug that prevented `source-alias` from working.\n* Now able to ``^C`` the xonfig wizard on start up.\n* Fixed deadlock on Windows when running subprocess that generates enough output\n  to fill the OS pipe buffer.\n* Sourcing foreign shells will now return a non-zero exit code if the\n  source operation failed for some reason.\n* Fixed PermissionError when running commands in directories without read permissions\n* Prevent Windows fixups from overriding environment vars in static config\n* Fixed Optional Github project status to reflect added/removed files via git_dirty_working_directory()\n* Fixed xonsh.exe launcher on Windows, when Python install directory has a space in it\n* Fixed `$CDPATH` to support `~` and environments variables in its items\n\n\n\n\nv0.2.7\n====================\n**Added:**\n\n* Added new valid ``$SHELL_TYPE`` called ``'best'``. This selects the best value\n  for the concrete shell type based on the availability on the user's machine.\n* New environment variable ``$XONSH_COLOR_STYLE`` will set the color mapping\n  for all of xonsh.\n* New ``XonshStyle`` pygments style will determine the appropriate color\n  mapping based on ``$XONSH_COLOR_STYLE``.  The associated ``xonsh_style_proxy()``\n  is intended for wrapping ``XonshStyle`` when actually being used by\n  pygments.\n* The functions ``print_color()`` and ``format_color()`` found in ``xonsh.tools``\n  dispatch to the approriate shell color handling and may be used from\n  anywhere.\n* ``xonsh.tools.HAVE_PYGMENTS`` flag now denotes if pygments is installed and\n  available on the users system.\n* The ``ansi_colors`` module is now available for handling ANSI color codes.\n* ``?`` and ``??`` operator output now has colored titles, like in IPython.\n* ``??`` will syntax highlight source code if pygments is available.\n* Python mode output is now syntax highlighted if pygments is available.\n* New ``$RIGHT_PROMPT`` environment variable for displaying right-aligned\n  text in prompt-toolkit shell.\n* Added ``!(...)`` operator, which returns an object representing the result\n  of running a command.  The truth value of this object is True if the\n  return code is equal to zero and False otherwise.\n* Optional dependency on the win_unicode_console package to enable unicode\n  support in cmd.exe on Windows. This can be disabled/enabled with the\n  ``$WIN_UNICODE_CONSOLE`` environment variable.\n\n**Changed:**\n\n* Updated ``$SHELL_TYPE`` default to ``'best'``.\n* Shell classes are now responsible for implementing their own color\n  formatting and printing.\n* Prompt coloring, history diffing, and tracing uses new color handling\n  capabilities.\n* New ``Token.Color`` token for xonsh color names, e.g. we now use\n  ``Token.Color.RED`` rather than ``Token.RED``.\n* Untracked files in git are ignored when determining if a git workdir is\n  is dirty. This affects the coloring of the branch label.\n* Regular expression globbing now uses ``re.fullmatch`` instead of\n  ``re.match``, and the result of an empty regex glob does not cause the\n  argument to be deleted.\n\n\n**Removed:**\n\n* The ``xonsh.tools.TERM_COLORS`` mapping has been axed, along with all\n  references to it. This may cause a problem if you were using a raw color code\n  in your xonshrc file from ``$FORMATTER_DICT``. To fix, simply remove these\n  references.\n\n**Fixed:**\n\n* Multidimensional slicing, as in numpy, no longer throws SyntaxErrors.\n* Some minor zsh fixes for more platforms and setups.\n* The ``BaseShell.settitle`` method no longer has its commands captured by\n  ``$(...)``\n\n\n\nv0.2.6\n====================\n**Added:**\n\n* ``trace`` alias added that enables users to turn on and off the printing\n  of source code lines prior to their execution. This is useful for debugging scripts.\n* New ability to force callable alias functions to be run in the foreground, i.e.\n  the main thread from which the function was called. This is useful for debuggers\n  and profilers which may require such access. Use the ``xonsh.proc.foreground``\n  decorator on an alias function to flag it. ``ForegroundProcProxy`` and\n  ``SimpleForegroundProcProxy`` classes have been added to support this feature.\n  Normally, forcing a foreground alias is not needed.\n* Added boolean ``$RAISE_SUBPROC_ERROR`` environment variable. If true\n  and a subprocess command exits with a non-zero return code, a\n  CalledProcessError will be raised. This is useful in scripts that should\n  fail at the first error.\n* If the ``setproctitle`` package is installed, the process title will be\n  set to ``'xonsh'`` rather than the path to the Python interpreter.\n* zsh foreign shell interface now supported natively in xonsh, like with Bash.\n  New ``source-zsh`` alias allows easy access to zsh scripts and functions.\n* Vox virtual environment manager added.\n\n**Changed:**\n\n* The ``foreign_shell_data()`` keyword arguments ``envcmd`` and ``aliascmd``\n  now default to ``None``.\n* Updated alias docs to pull in usage from the commands automatically.\n\n**Fixed:**\n\n* Hundreds of bugs related to line and column numbers have been addressed.\n* Fixed path completion not working for absolute paths or for expanded paths on Windows.\n* Fixed issue with hg dirty branches and $PATH.\n* Fixed issues related to foreign shell data in files with whitespace in the names.\n* Worked around bug in ConEmu/cmder which prevented ``get_git_branch()``\n  from working in these terminal emulators on Windows.\n\n\nv0.2.5\n===========\n**Added:**\n\n* New configuration utility 'xonfig' which reports current system\n  setup information and creates config files through an interactive\n  wizard.\n* Toolkit for creating wizards now available\n* timeit and which aliases will now complete their arguments.\n* $COMPLETIONS_MENU_ROWS environment variable controls the size of the\n  tab-completion menu in prompt-toolkit.\n* Prompt-toolkit shell now supports true multiline input with the ability\n  to scroll up and down in the prompt.\n\n**Changed:**\n\n* The xonfig wizard will run on interactive startup if no configuration\n  file is found.\n* BaseShell now has a singleline() method for prompting a single input.\n* Environment variable docs are now auto-generated.\n* Prompt-toolkit shell will now dynamically allocate space for the\n  tab-completion menu.\n* Looking up nonexistent environment variables now generates an error\n  in Python mode, but produces a sane default value in subprocess mode.\n* Environments are now considered to contain all manually-adjusted keys,\n  and also all keys with an associated default value.\n\n**Removed:**\n\n* Removed ``xonsh.ptk.shortcuts.Prompter.create_prompt_layout()`` and\n  ``xonsh.ptk.shortcuts.Prompter.create_prompt_application()`` methods\n  to reduce portion of xonsh that forks prompt-toolkit. This may require\n  users to upgrade to prompt-toolkit v0.57+.\n\n**Fixed:**\n\n* First prompt in the prompt-toolkit shell now allows for up and down\n  arrows to search through history.\n* Made obtaining the prompt-toolkit buffer thread-safe.\n* Now always set non-detypable environment variables when sourcing\n  foreign shells.\n* Fixed issue with job management if a TTY existed but was not controlled\n  by the process, posix only.\n* Jupyter kernel no longer times out when using foreign shells on startup.\n* Capturing redirections, e.g. ``$(echo hello > f.txt)``, no longer fails\n  with a decoding error.\n* Evaluation in a Jupyter cell will return pformatted object.\n* Jupyter with redirect uncaptured subprocs to notebook.\n* Tab completion in Jupyter fixed.\n\n\nv0.2.1 - v0.2.4\n===============\nYou are reading the docs...but you still feel hungry.\n\nv0.2.0\n=============\n**Added:**\n\n* Rich history recording and replaying\n\nv0.1.0\n=============\n**Added:**\n\n* Naturally typed environment variables\n* Inherits the environment from BASH\n* Uses BASH completion for subprocess commands\n* Regular expression filename globbing\n* Its own PLY-based lexer and parser\n* xonsh code parses into a Python AST\n* You can do all the normal Python things, like arithmetic and importing\n* Captured and uncaptured subprocesses\n* Pipes, redirection, and non-blocking subprocess syntax support\n* Help and superhelp with ? and ??\n* Command aliasing\n* Multiline input, unlike ed\n* History matching like in IPython\n* Color prompts\n* Low system overhead\n\n\n\n\n<v0.1.0\n=============\nThe before times, like 65,000,000 BCE.\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 11.974609375,
          "content": ".. _devguide:\n\n=================\nDeveloper's Guide\n=================\n.. image:: _static/knight-vs-snail.jpg\n   :width: 80 %\n   :alt: knight-vs-snail\n   :align: center\n\nWelcome to the xonsh developer's guide!  This is a place for developers to\nplace information that does not belong in the user's guide or the library\nreference but is useful or necessary for the next people that come along to\ndevelop xonsh.\n\n.. note:: All code changes must go through the pull request review procedure.\n\n\nMaking Your First Change\n========================\n\n.. note:: xonsh requires at least `pip 24.0` for `pyproject.toml` support. You can upgrade old versions using `pip install -U pip`.\n\nFirst, install xonsh from source and open a xonsh shell in your favorite\nterminal application. See installation instructions for details, but it\nis recommended to do an 'editable' install via `pip'\n\n        $ pip install -e .[dev]\n\nNext, make a trivial change (e.g. ``print(\"hello!\")`` in ``main.py``).\n\nFinally, run the following commands. You should see the effects of your change\n(e.g. ``hello!``)::\n\n        $ $XONSH_DEBUG=1\n        $ xonsh\n\n\nChangelog\n=========\nPull requests will often have CHANGELOG entries associated with. However,\nto avoid excessive merge conflicts, please follow the following procedure:\n\n1. Go into the ``news/`` directory,\n2. Copy the ``TEMPLATE.rst`` file to another file in the ``news/`` directory.\n   We suggest using the branchname::\n\n        @ cp TEMPLATE.rst branch.rst\n\n3. Add your entries as a bullet pointed lists in your ``branch.rst`` file in\n   the appropriate category. It is OK to leave the ``None`` entries for later\n   use.\n4. Commit your ``branch.rst``.\n\nFeel free to update this file whenever you want! Please don't use someone\nelse's file name. All of the files in this ``news/`` directory will be merged\nautomatically at release time.  The ``None`` entries will be automatically\nfiltered out too!\n\n\nStyle Guide\n===========\nxonsh is a pure Python project, and so we use PEP8 (with some additions) to\nensure consistency throughout the code base.\n\n-----------------\nRules to Write By\n-----------------\nIt is important to refer to things and concepts by their most specific name.\nWhen writing xonsh code or documentation please use technical terms\nappropriately. The following rules help provide needed clarity.\n\n**********\nInterfaces\n**********\n* User-facing APIs should be as generic and robust as possible.\n* Tests belong in the top-level ``tests`` directory.\n* Documentation belongs in the top-level ``docs`` directory.\n\n************\nExpectations\n************\n* Code must have associated tests and adequate documentation.\n* User-interaction code (such as the Shell class) is hard to test.\n  Mechanism to test such constructs should be developed over time.\n* Have *extreme* empathy for your users.\n* Be selfish. Since you will be writing tests you will be your first user.\n\n------------------\nPython Style Guide\n------------------\nxonsh follows `PEP8`_ for all Python code.  The following rules apply where\n`PEP8`_ is open to interpretation.\n\n* Use absolute imports (``import xonsh.tools``) rather than explicit\n  relative imports (``import .tools``). Implicit relative imports\n  (``import tools``) are never allowed.\n* We use sphinx with the numpydoc extension to autogenerate API documentation. Follow\n  the `numpydoc`_ standard for docstrings.\n* Simple functions should have simple docstrings.\n* Lines should be at most 80 characters long. The 72 and 79 character\n  recommendations from PEP8 are not required here.\n* All Python code should be compliant with Python 3.8+.\n* Tests should be written with `pytest <https://docs.pytest.org/>`_ using a procedural style. Do not use\n  unittest directly or write tests in an object-oriented style.\n* Test generators make more dots and the dots must flow!\n* We use `pre-commit <https://pre-commit.com/>`_ for linting (ruff-lint) and formatting(ruff-format) the code.\n  To enable this as a git pre-commit hook::\n\n    @ pre-commit install\n\n*******\nImports\n*******\n\n``xonsh`` imports should be sorted alphabetically, and by module location.  You\ncan (and should) use ``isort`` either from the command line or use the\n``pre-commit`` hook.\n\nHow to Test\n===========\n\n------\nDocker\n------\n\nIf you want to run your \"work in progress version\" without installing\nand in a fresh environment you can use Docker. If Docker is installed\nyou just have to run this::\n\n  @ python xonsh-in-docker.py\n\nThis will build and run the current state of the repository in an isolated\ncontainer (it may take a while the first time you run it). There are two\nadditional arguments you can pass this script.\n\n* The version of python\n* the version of ``prompt_toolkit``\n\nExample::\n\n  @ python docker.py 3.4 0.57\n\nEnsure your cwd is the root directory of the project (i.e., the one containing the\n.git directory).\n\n------------\nDependencies\n------------\n\nPrep your environment for running the tests::\n\n    @ pip install -e '.[dev]'\n\n\n-------------------------\nRunning the Tests - Basic\n-------------------------\n\nRun all the tests using pytest::\n\n    @ pytest -q\n\nUse \"-q\" to keep pytest from outputting a bunch of info for every test.\n\n----------------------------\nRunning the Tests - Advanced\n----------------------------\n\nTo perform all unit tests::\n\n    @ pytest\n\nIf you want to run specific tests you can specify the test names to\nexecute. For example to run test_aliases::\n\n    @ pytest test_aliases.py\n\nNote that you can pass multiple test names in the above examples::\n\n    @ pytest test_aliases.py test_environ.py\n\n----------------------------\nWriting the Tests - Advanced\n----------------------------\n\n(refer to pytest documentation)\n\nWith the Pytest framework you can use bare `assert` statements on\nanything you're trying to test, note that the name of the test function\nhas to be prefixed with `test_`::\n\n    def test_whatever():\n        assert is_true_or_false\n\nThe conftest.py in tests directory defines fixtures for mocking various\nparts of xonsh for more test isolation. For a list of the various fixtures::\n\n    @ pytest --fixtures\n\nwhen writing tests it's best to use pytest features i.e. parametrization::\n\n    @pytest.mark.parametrize('env', [test_env1, test_env2])\n    def test_one(env, xession):\n        # update the environment variables instead of setting the attribute\n        # which could result in leaks to other tests.\n        # each run will have the same set of default env variables set.\n        xession.env.update(env)\n        ...\n\nthis will run the test two times each time with the respective `test_env`.\nThis can be done with a for loop too but the test will run\nonly once for the different test cases and you get less isolation.\n\nWith that in mind, each test should have the least `assert` statements,\npreferably one.\n\nAt the moment, xonsh doesn't support any pytest plugins.\n\nHappy Testing!\n\n\nHow to Document\n===============\nDocumentation takes many forms. This will guide you through the steps of\nsuccessful documentation.\n\n----------\nDocstrings\n----------\nNo matter what language you are writing in, you should always have\ndocumentation strings along with you code. This is so important that it is\npart of the style guide.  When writing in Python, your docstrings should be\nin reStructured Text using the `numpydoc`_ format.\n\n------------------------\nAuto-Documentation Hooks\n------------------------\nThe docstrings that you have written will automatically be connected to the\nwebsite, once the appropriate hooks have been setup.  At this stage, all\ndocumentation lives within xonsh's top-level ``docs`` directory.\nWe uses the sphinx tool to manage and generate the documentation, which\nyou can learn about from `the sphinx website <http://sphinx-doc.org/>`_.\nIf you want to generate the documentation, first xonsh itself must be installed\nand then you may run the following command from the ``docs`` dir:\n\n.. code-block:: console\n\n    ~/xonsh/docs @ make html\n\nFor each new\nmodule, you will have to supply the appropriate hooks. This should be done the\nfirst time that the module appears in a pull request.  From here, call the\nnew module ``mymod``.  The following explains how to add hooks.\n\n------------\nPython Hooks\n------------\nPython API documentation is generated for the entries in ``docs/api.rst``.\n`sphinx-autosummary <https://www.sphinx-doc.org/en/master/usage/extensions/autosummary.html>`_\nis used to generate documentation for the modules.\nMention your module ``mymod`` under appropriate header.\nThis will discover all of the docstrings in ``mymod`` and create the\nappropriate webpage.\n\n\nBuilding the Website\n====================\n\nBuilding the website/documentation requires the following dependencies:\n\n#. `Sphinx <http://sphinx-doc.org/>`_\n#. `Furo Theme <https://pradyunsg.me/furo/>`_\n#. `numpydoc <https://numpydoc.readthedocs.io/>`_\n#. `MyST Parser <https://myst-parser.readthedocs.io>`_\n\nNote that xonsh itself needs to be installed too.\n\nIf you have cloned the git repository, you can install all of the doc-related\ndependencies by running::\n\n    @ pip install -e \".[doc]\"\n\n\n-----------------------------------\nProcedure for modifying the website\n-----------------------------------\nThe xonsh website source files are located in the ``docs`` directory.\nA developer first makes necessary changes, then rebuilds the website locally\nby executing the command::\n\n    @ make html\n\nThis will generate html files for the website in the ``_build/html/`` folder.\n\nThere is also a helper utility in the ``docs/`` folder that will watch for changes and automatically rebuild the documentation.  You can use this instead of running ``make html`` manually::\n\n    @ python docs/serve_docs.py\n\nThe developer may view the local changes by opening these files with their\nfavorite browser, e.g.::\n\n    @ firefox _build/html/index.html\n\nOnce the developer is satisfied with the changes, the changes should be\ncommitted and pull-requested per usual. The docs are built and deployed using\nGitHub Actions.\n\nDocs associated with the latest release are hosted at\nhttps://xon.sh while docs for the current ``main`` branch are available at\nhttps://xon.sh/dev\n\nBranches and Releases\n=====================\n\nMainline xonsh development occurs on the ``main`` branch. Other branches\nmay be used for feature development (topical branches) or to represent\npast and upcoming releases.\n\n-----------------\nMaintenance Tasks\n-----------------\nYou can cleanup your local repository of transient files such as \\*.pyc files\ncreated by unit testing by running::\n\n    @ rm -f xonsh/parser_table.py xonsh/completion_parser_table.py\n    @ rm -f xonsh/*.pyc tests/*.pyc\n    @ rm -fr build\n\n----------------------\nPerforming the Release\n----------------------\nThis is done through the `rever <https://github.com/regro/rever>`_. To get a list of the\nvalid options use::\n\n    @ pip install re-ver\n\nYou can perform a full release::\n\n    @ rever check\n    @ rever <version-number>\n\n\n----------------------\nCross-platform testing\n----------------------\nMost of the time, an actual VM machine is needed to test the nuances of cross platform testing.\nBut alas here are some other ways to test things\n\n1. Windows\n\n\n - `wine <https://www.winehq.org/>`_ can be used to emulate the development environment. It provides cmd.exe with its default installation.\n\n2. OS X\n\n - `darlinghq <https://www.darlinghq.org/>`_ can be used to emulate the development environment for Linux users.\n   Windows users can use Linux inside a virtual machine or WSL to run the same.\n - `OSX KVM <https://github.com/kholia/OSX-KVM>` can be used for virtualization.\n\n3. Linux\n\n - It far easier to test things for Linux. `docker <https://www.docker.com/>`_ is available on all three platforms.\n\nOne can leverage the Github Actions to provide a reverse shell to test things out.\nSolutions like `actions-tmate <https://mxschmitt.github.io/action-tmate/>`_ are available,\nbut they should not in any way violate the Github Action policies.\n\n\nDocument History\n================\nPortions of this page have been forked from the PyNE documentation,\nCopyright 2011-2015, the PyNE Development Team. All rights reserved.\n\n.. _PEP8: https://www.python.org/dev/peps/pep-0008/\n.. _numpydoc: https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard\n"
        },
        {
          "name": "FUNDING.yml",
          "type": "blob",
          "size": 0.8544921875,
          "content": "# These are supported funding model platforms\n\ngithub: xonsh # Replace with up to 4 GitHub Sponsors-enabled usernames e.g., [user1, user2]\n#patreon: # Replace with a single Patreon username\n#open_collective: # Replace with a single Open Collective username\n#ko_fi: # Replace with a single Ko-fi username\n#tidelift: # Replace with a single Tidelift platform-name/package-name e.g., npm/babel\n#community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry\n#liberapay: # Replace with a single Liberapay username\n#issuehunt: # Replace with a single IssueHunt username\n#otechie: # Replace with a single Otechie username\n#lfx_crowdfunding: # Replace with a single LFX Crowdfunding project-name e.g., cloud-foundry\ncustom: https://github.com/xonsh/xonsh#the-xonsh-shell-community # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.18359375,
          "content": "include logo.txt\ninclude scripts/*\ninclude license\ninclude CHANGELOG.rst\ninclude README.rst\ninclude run-tests.xsh\nrecursive-include tests *\nexclude tests/test_news.py\nglobal-exclude *.pyc\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 5.96875,
          "content": "xonsh\n=====\n\n.. class:: center\n\n    **xonsh** is a Python-powered shell. Full-featured and cross-platform. The language is a superset of Python 3.6+ with additional shell primitives.  Xonsh word was made from *conch* (🐚, *@*) and indicates belonging to the command shells world.\n\n\n.. list-table::\n   :widths: 1 1\n\n   *  -  **Xonsh is the Shell**\n      -  **Xonsh is Python**\n\n   *  -  .. code-block:: shell\n\n            cd $HOME\n\n            id $(whoami)\n\n            cat /etc/passwd | grep root > ~/root.txt\n\n            $PROMPT = '@ '\n\n\n      -  .. code-block:: python\n\n            2 + 2\n\n            var = \"hello\".upper()\n\n            import json; json.loads('{\"a\":1}')\n\n            [i for i in range(0,10)]\n\n   *  -  **Xonsh is the Shell in Python**\n      -  **Xonsh is Python in the Shell**\n\n   *  -  .. code-block:: python\n\n            len($(curl -L https://xon.sh))\n\n            $PATH.append('/tmp')\n\n            p'/etc/passwd'.read_text().find('root')\n\n            xontrib load dalias\n            id = $(@json docker ps --format json)['ID']\n\n      -  .. code-block:: python\n\n            name = 'foo' + 'bar'.upper()\n            echo @(name) > /tmp/@(name)\n\n            ls @(input('file: '))\n            touch @([f\"file{i}\" for i in range(0,10)])\n\n            aliases['e'] = 'echo @(2+2)'\n            aliases['a'] = lambda args: print(args)\n\n\nIf you like xonsh, :star: the repo, `write a tweet`_ and stay tuned by watching releases.\n\n.. class:: center\n\n    .. image:: https://img.shields.io/badge/Zulip%20Community-xonsh-green\n            :target: https://xonsh.zulipchat.com/join/hbvue5rimpdkwkdjuiqfs7tv/\n            :alt: Join to xonsh.zulipchat.com\n\n    .. image:: https://github.com/xonsh/xonsh/actions/workflows/test.yml/badge.svg\n            :target: https://github.com/xonsh/xonsh/actions/workflows/test.yml\n            :alt: GitHub Actions\n\n    .. image:: https://codecov.io/gh/xonsh/xonsh/branch/master/graphs/badge.svg?branch=main\n            :target: https://codecov.io/github/xonsh/xonsh?branch=main\n            :alt: codecov.io\n\n    .. image:: https://repology.org/badge/tiny-repos/xonsh.svg\n            :target: https://repology.org/project/xonsh/versions\n            :alt: repology.org\n\n\nFirst steps\n***********\n\nInstall xonsh from pip:\n\n.. code-block:: xonshcon\n\n    python -m pip install 'xonsh[full]'\n\nAnd visit https://xon.sh for more information:\n\n- `Installation <https://xon.sh/contents.html#installation>`_ - using packages, docker or AppImage.\n- `Tutorial <https://xon.sh/tutorial.html>`_ - step by step introduction in xonsh.\n\nExtensions\n**********\n\nXonsh has an extension/plugin system.  We call these additions ``xontribs``.\n\n- `Xontribs on Github <https://github.com/topics/xontrib>`_\n- `Awesome xontribs <https://github.com/xonsh/awesome-xontribs>`_\n- `Core xontribs <https://xon.sh/api/_autosummary/xontribs/xontrib.html>`_\n- `Create a xontrib step by step from template <https://github.com/xonsh/xontrib-template>`_\n\nProjects that use xonsh or compatible\n*************************************\n\n- `conda <https://conda.io/projects/conda/en/latest/>`_ and `mamba <https://mamba.readthedocs.io/en/latest/>`_: Modern package managers.\n- `Starship <https://starship.rs/>`_: Cross-shell prompt.\n- `zoxide <https://github.com/ajeetdsouza/zoxide>`_: A smarter cd command.\n- `gitsome <https://github.com/donnemartin/gitsome>`_: Supercharged Git/shell autocompleter with GitHub integration.\n- `xxh <https://github.com/xxh/xxh>`_: Using xonsh wherever you go through the SSH.\n- `any-nix-shell <https://github.com/haslersn/any-nix-shell>`_: xonsh support for the ``nix run`` and ``nix-shell`` environments of the Nix package manager.\n- `lix <https://github.com/lix-project/lix>`_: A modern, delicious implementation of the Nix package manager.\n- `x-cmd <https://www.x-cmd.com/>`_: x-cmd is a vast and interesting collection of tools guided by the Unix philosophy.\n- `rever <https://regro.github.io/rever-docs/>`_: Cross-platform software release tool.\n- `Regro autotick bot <https://github.com/regro/cf-scripts>`_: Regro Conda-Forge autoticker.\n\nJupyter-based interactive notebooks via `xontrib-jupyter <https://github.com/xonsh/xontrib-jupyter>`_:\n\n- `Jupyter and JupyterLab <https://jupyter.org/>`_: Interactive notebook platform.\n- `euporie <https://github.com/joouha/euporie>`_: Terminal based interactive computing environment.\n- `Jupytext <https://jupytext.readthedocs.io/>`_: Clear and meaningful diffs when doing Jupyter notebooks version control.\n\nThe xonsh shell community\n*************************\n\nThe xonsh shell is developed by a community of volunteers. There are a few ways to help out:\n\n- Solve a `popular issue <https://github.com/xonsh/xonsh/issues?q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc>`_ or `high priority issue <https://github.com/xonsh/xonsh/issues?q=is%3Aopen+is%3Aissue+label%3Apriority-high+sort%3Areactions-%2B1-desc>`_ or a `good first issue <https://github.com/xonsh/xonsh/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22+sort%3Areactions-%2B1-desc>`_. You can start with the `Developer guide <https://xon.sh/devguide.html>`_.\n- Take an `idea <https://github.com/xonsh/xontrib-template/issues?q=is%3Aopen+is%3Aissue+label%3Aidea+sort%3Areactions-%2B1-desc>`_ and `create a new xontrib <https://github.com/xonsh/xontrib-template#why-use-this-template>`_.\n- Contribute to `xonsh API <https://github.com/xonsh/xonsh/tree/main/xonsh/api>`_.\n- Become xonsh core developer by deep diving into xonsh internals. E.g. we feel a lack of Windows support.\n- `Become a sponsor to xonsh <https://github.com/sponsors/xonsh>`_.\n- `Write a tweet`_, post or an article to spread the good word about xonsh in the world.\n- Give a star to xonsh repository and to `xontribs <https://github.com/topics/xontrib>`_ you like.\n\nWe welcome new contributors!\n\n.. _write a tweet: https://twitter.com/intent/tweet?text=xonsh%20is%20a%20Python-powered,%20cross-platform,%20Unix-gazing%20shell%20language%20and%20command%20prompt.&url=https://github.com/xonsh/xonsh\n\nCredits\n*******\n\n- Thanks to `Zulip <https://zulip.com/>`_ for supporting the xonsh community!\n"
        },
        {
          "name": "appimage",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 0.1337890625,
          "content": "# empty file to trick pytest into adding the root folder to sys.path\n# see https://github.com/pytest-dev/pytest/issues/911 for more info\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "github_deploy_key.enc",
          "type": "blob",
          "size": 4.3046875,
          "content": "gAAAAABYCVeRMufeZzuB75i64JSZgVejwpGQJ6pEO4DwLwZidzRA2we3Xu02minO3Rt7mmQl5pKJOJJYQZ0zP6uCORSNTY27t8OX5NsZEueWgSwsBPg4tq8lzEcHyKqJjWKpThky5mm1La_Qjw4kBO407UwrGX7DuUIF9jbOphWRF9SbbG44mobT3LAttUE1t9jVRQ320fVE2hZvs-vONYFOu2HsMk29dJ08pIOxnqoTHuwylZn3YL-vEGi7XJFaXIDWCFbjvXzcdLbcUmhcYPkISKn9BZGzoID7uIEi4dJGq_ZoIdNVRp-XgyUxHjjYEA8EojvBOKJ4unMn5xt3IXajrlslGseQHnxO1hswIXNSMqr8IH_dzv1pUu4C7ssm8xGuyxWh9JEyTfpHkNGMau8urgVrdpyHypqENFQVDG4hU6f6CQeyoiOM1_hYBA7byN1FiP8ZhefHo5nIjcSF3rnKIOn7y_Wt2ye3soQXBP258yzB9WJvvpya-tW3QB48tXJHHg5US-F9hDHchJyzZS2nArBSYeKpB6yMWyC6vVQBY1BFqh4wrjTkEHrSx3qi5B-631418yI8rb2PalbAizWE2MGUgdo8nePMUa93RpSPELL_FkQsK9BRR8c8EpTvRcQJsmg7aKSzwkpNrTrO99v30DU94xIwNe4rFsq5ogZQiu4Rw-wFu7K6YBlNCfIbTSEgCAlcULAwxakvo1tNGTKbEpKZLLZ7jeeETyyKLb8YOEYxiMuID015iV9Ecbuk3AWHhsiFWU_qEltOzN6xkkX9CyvLeXVliFsGF6sEZOyYQUyXAoGwd_xkUMZafHy5L63WfnwX8FEl7SI4D7LlaRrKLh8du50HqR3s00_Zl7KzfIXBtu-BBgT1t8c3UEZpbhxPA8v6XaUlLSGyrQUhSe_GqVI9BVJ6toVRjNqT14j4Q_HHOElkPbzloh2Cas-mp9as3SyH15dTmLTvAPw4nuPv5g3vL04NyDBQQtMPhhcGS8pwQ-odVhfB5k7TJOzXmjBg8LOlC3znD8Grgen6wOJmHpxAfdwVwOLB6S-8d3a2gwsP34xbUS_5kPUTIOWg92AngaIFlShyk331wkXi9EdP8fp9rPlbdSrPa2oNrSvYfoHoL9yhpnBjKKg8TEKJ49gM9UrU4JCmoJOPJDIigI2LjvJMEXVFSvXBr8Lb7l3nidJdZO4wxhi32Rp87AGznsOZpLGAYbrGKCjEowrPIOCgJ-B5SMo0cYVcfS1v0uL3Qvea5nfATffwmdMr1nOtid4dQX5eqz4OL3QMVU9zOeNSRDvbqK1McBlaWaoMA4Cy4Q5lnm98d6pMdNhCD-5dd9_C5q-_rBa0SGrdm6frYvgSpitTVWmV2XSa-QjdzjMS-k_VDsAdl_hKYWGUdSaP5b24cY_la0GjRNHYbcwO5KrO1fOVR68nB4Y4UGwq4eMk6hxd-Nmpqyd9ebmpuI0l6zGhapiSBkNWDlVskM-9Qm_YgEqTNvXn5paGh-KwLAQOQVBjNPhbDmIpAU3m5jVRJpXoVBnf8u2-N6qMFmW4C7za5NbUJLF2nJWHGAjclxSJBKRap8yPb3ry3mMZADkDmDVM6gWDzRr5ZgX82RuLMSppe5EHGIcvnSjs6980S7IxqOGxWFWNJU30oL5QQterTurBEXv0U4bdjTAHa42slrtp8pUT-LsDY8pwKBtHlJ7tXj5y5gzQEqhfL7yceyugjkNlmqhamjENhcnBJlGOXamip6JYE6wDlf7ogIVs4vtwO_4vjHAxOtgyYZJhdyC0lklecXYyC_xl_lzVgZ7lJ22SdwIbFk3Lh4wMFxXIvzKWaHu1KPlt2MtlPfj5aLZTu4DIOy4tkwXUrpxhsOzD2ZY-Oz_ZTD7yXktTsreQm8mTldlVncO4fdeMHbGcXeFxGBX7pJsglT2jKYgTXPbhSO0FbsuHft2qRHgceIV8CnyoPiN5JayT0-tS7g4Pw_reBUN4xKUgpHlZOti_WMDtGPCkS38psKkg4d6bqtuKTN7ebtYJYabMCb45nGMLUA1oR0sLsSkL24-r215TAfV-SQK5JrSlg9EibLPcaXgUMxh6z0NH86g_hrQ9WBDaaqmPT2L1_jPFjudbmHYIL7DI9hJMmQ_BiQgSF-69iUOgMEt31jRSXzxAQVFaEaS2rjEAvxDJ_tOt3lJiIlRZBTEtt_E9zUBXJA8GXAdXckFlQpfXJbp8IHa69HI-lfKjTg4IDD9z03XQrd-yITSwAc5zhz4CRZ6atM9t23FMWQyqPBbue4Zk2ZouZIy98Ce6UVYySZr0zsdelmttN6wJZm8txncDmUMn8VhdEgxd26dNOJnzBRtjFcQQsg2bKCCXSM4TSt-fL8YYa1aRRo2qsIhwaceRvF_q1XgJVWKV4KXFZbn76klvaZIQadOJUNDk8CUX13DtNtRVfxzyHcTUEXHkQFqKI0HaflGVv5nqSvXOqP6bjQvJ2Rxp2ZGd_MqsLtMmQSLJeHNuNWCryu0tP9roZThPZKYSeiBTk6ZF07QD677Aqp1CIuZa0-BuQfVf2z_wejJfmM9fnMI5yParH7cVf23SwcItM5X_Thi6PRqzMivewrnGdNQtbwBEAeuVtSxs-V4RdoArOCoOu7LFpCdyE8pMD22JBJ9ojn6TPlfteCJSjJDcoUzcSVM_vo1tfvMGHMhhAJNr4aD_5DwSrBWczxtMXZ8aMZx3FO6GntQHjCXlciu3RwFFrABbLM5_TFntZb-REvNFXFgCieCYampKj6kImT7nUfQiGBrlIIj0h_kLsa_3ZC4avNpXEvRCOzL2vqrghWQxChDNoopb4SJCRBbQD8jpsNdiIwv3mweAcpRCB_hWhiX4MPgHLF7CAIvewLLTNidyjiimiGE27IdKieI4GC3COEwbWANuT1UK32FZc7KYrfrF8wfCXc5geutE6mIQHZn0ORiOUGyZUkV7Auecm9FMMvEQHOxUKVqA-JDhw9QlDe1hKtXmVNsJqyljhVMtDVgJyNs4UmmafqdAc2suehQTCCuw3rVexyf4PUZoa9d4cdBfhTHsrRx4Rf6HHs682S3F-tTI_FkQv9_VEqx6n8wJrwMjamobqp88-AMKjrnBl0DnQlPUABSBROdhiQnLGLLeNB6hP7v_it9v-eCPuUNVKcnDUKXBdJJPQKXVwOM9jC3tnQMX9FSflXhSCHzJvFsyRsGuy6a9i09ZjvzBYAPMQIu0IiQl9iWgSvcFdiF6xAih70vvvndyAy88GTXjH99UVUZcyevXX241xJMsMAbGYwdTyRdSx1WqcRMhvgNeB-Pk0NhptrKlbVELr3LTBVELCSvoJm3Teb_g9jBX0F89jNK0CQPmM0iMvGPiQf3fqZSqfCZ7ErD6RkDRFEYhMZMLSM3zdoOXXcj2dt53D1Of0UH96dnmbfEic0M2S5sEr3p9juYuYQuCt14310pNmyusd-EqU0k7uJTJWu0HKIH6TQaQth1rBmW1m_DvlzbMCB1NccKXeaZ-8-d7ubzaQdiXIWVlnsxTrgcyaFU2JFNDHdtfyVyyhzXhN-zVzBB1KQU-NmLsxSXCXS7xwsNxo_cdjn0UgcpJGhpxf_vNGz6dzk52ITXwImLIOjHLQ6eKSwgQn_86cVKshteWqkaVV3fV-ITtALWxVPSHdB4CHgsHgZAuFbGPWs_djdjtZthcko9nAdLyCa5vW-jntq7y3J75QKeC7fj1b0Au8E7JasWGfHwv7sYqVf1k8zqmSV_D_slea0-FG3TdglB297HqbHW7Ytjx205MMOS8rjSSpH-vw8cf2wdyL9r8DBQwaII_JtUbZLQE3HBlBMVjqUl9iTVoj30MkdEFXTHDiFUpRvb-Skk3gw15H_Dq8QGaYygtb20q9RYAqTG1IrL3WheCcoBGoZ4yfrYGGlREOG7zxEBntivLg12UUBVAazFXLbNj0P1CKMsUbHB6m9dHSljM31MGQKzDMcSpUSkvH2s1ekgIpN7kae3Dk3pyFEn-I0VkN-7jG5nrKSCwQGc9mM8PAXeCTt1FTjcmBiT3s8-FYj13jXixf4-zMIVRIN7aPSsLzyVad3qmdLb4lIGwqW_II9TmEgp6NnurS1nApKaDrUlQiTFXkzfTaQoI0mFlI61xT8uNaspDQssQdv71l-bbmflPp06R5xmYR59vz3RDfkYKZU5uwxNPByuFf7xsRuLybN64Kg2l-0kv3WoPBpXCctCIsJ0DM2MeZUJ5xS8deRvbl7co7YhgNEkrZPHils7zwBZ5GzhyW2EGGZ3x-yHstqhJmKi-gthACbdoUMrCVO1G1iWtkA5TLLCnMdqiJRetlCD53DkBy9ld3Ez5vUZ2Mi4Ppx5ha66NPPZa__MQEASCy06bHABJq86NMHRzG6Y2ENvij8k="
        },
        {
          "name": "license",
          "type": "blob",
          "size": 1.541015625,
          "content": "Copyright 2015-2016, the xonsh developers. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice, this list of\n      conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\n      of conditions and the following disclaimer in the documentation and/or other materials\n      provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE XONSH DEVELOPERS ``AS IS'' AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE XONSH DEVELOPERS OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those of the\nauthors and should not be interpreted as representing official policies, either expressed\nor implied, of the stakeholders of the xonsh project or the employers of xonsh developers.\n"
        },
        {
          "name": "logo.txt",
          "type": "blob",
          "size": 3.041015625,
          "content": "                           ╓██▄\n                          ╙██▀██╕\n                         ▐██4Φ█▀█▌\n                       ²██▄███▀██^██\n                     -███╩▀ \" ╒▄█████▀█\n                      ║██▀▀W╤▄▀ ▐║█╘ ╝█\n                 ▄m▀%Φ▀▀  ╝*\"    ,α█████▓▄,▄▀Γ\"▀╕\n                 \"▀██¼\"     ▄═╦█╟║█▀ ╓ `^`   ,▄ ╢╕\n                  ,▀╫M█▐j╓╟▀ ╔▓▄█▀  '║ ╔    ╣║▌  ▀▄\n               ▄m▀▀███╬█╝▀  █▀^      \"ÜM  j▐╟╫╨▒   ╙▀≡═╤═m▀╗\n               █æsæ╓  ╕, ,▄Ä   ▐'╕H   LU  ║║╠╫Å^2=⌐         █\n            ▄æ%Å███╠█ª╙▄█▀      @1╙       ║║╟╫╩*T▄           ▌\n           ╙╗%▄,╦██▌█▌█╢M         ╕      M║║║║█═⌐ⁿ\"^         ╫\n             ╙╣▀████@█░█    ▌╕╕   `      ▌║▐▐║█D═≈⌐¬ⁿ      s ║⌐\n               ╙╬███▓║█`     ▌╚     ╕   ╕▌║▐▐╣▌⌐*▒▒Dù`       ▐▌\n                ╙╬██╨U█      ╟      $ ▌ ▌▌▐▐▐M█▄═≤⌐%       ╓⌐ ▌\n                 ║║█▄▌║             ╟ ▌ ▌M▐▐▐M█▀▒▒▒22,       ▐▌\n                  ███╙^▌            ║ ▌ ⌐M▐▐▐M█≤⌐⌐¬──        ▐M\n                  ║██ ▌╙   ╓       H║ ▌╒ M║▐▐M█\"^^^^^\"ⁿ      ║\n                   ██╕╙@▓   ╕      ▌║ H'  ║▐▐▐█══=.,,,       █\n                   ╙█▓╔╚╚█     ╠   ▌└╒ ▌▐ ╚║║║▀****ⁿ -      ╓▌\n                    ╙█▌¼V╚▌   ▌  ╕ ▌ ║╒ ║ ▌▒╠█▀≤≤≤≤≤⌐       █\n                     ╙█▌╔█╚▌     ┘ M ▌║ ╫ UUM██J^^\"        ▐▌\n                      ╙██╙█╙▌  ╕$j  ▐⌐▌ ▌║╝╟█Å%%%≈═        █\n                       ╙╣█╣█^▌ ╠║▐  ║ ▌▐.DU██^[\"\"ⁿ       -╒▌\n                         ▀█▄█`▌ ░M▀ ▌▐ Å£╝╝█╜%≈═╓\"\"w   ⁿ⌐ █\n                          `▀▄▀`▌ ▌█▐⌐║▐UW╖██%≤═░*─    =z ▄Γ\n                            ╙██╙▄▌█  ▌Å╛╣██╨%╤ƒⁿ=    -` ▄┘\n                              █▌╢▓▌▌ W £6█╤,\"ⁿ `   ▄≡▀▀▀\n                               █\"█▌▌╟Å╓█╓█▀%`    ▄▀\n                               ╙▌██`▒U▓U█%╗*     █\n                                ▌╫║ ▌ÅÅ║▀╛¬`      `\"█\n                                ▌╫  ╫╟ █▄     ~╦%▒╥4^\n                                ▌▌  \"M█ `▀╕ X╕\"╗▄▀^\n                                █▌   ╓M   ╙▀e▀▀^\n                                ╙██▄▄▀\n                                  ^^\n"
        },
        {
          "name": "news",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 7.115234375,
          "content": "[build-system]\n# PEP 518 https://www.python.org/dev/peps/pep-0518/\n# https://discuss.python.org/t/help-testing-experimental-features-in-setuptools/13821\nrequires = [\"setuptools>=61\", \"wheel\"]\n# PEP 517 https://peps.python.org/pep-0517/\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\n# PEP 621 project metadata\n# See https://www.python.org/dev/peps/pep-0621/\nname = \"xonsh\"\ndynamic = [\"version\", \"readme\"]\ndescription = \"Python-powered shell. Full-featured and cross-platform.\"\nauthors = [{ name = \"Anthony Scopatz\" }, { email = \"scopatz@gmail.com\" }]\nmaintainers = [{ name = \"Xonsh Community\" }, { email = \"xonsh@gil.forsyth.dev\" }]\nlicense = { text = \"BSD 2-Clause License\" }\nrequires-python = \">=3.9\"\ndependencies = []\n\n[tool.setuptools.dynamic]\nversion = {attr = \"xonsh.__version__\"}\nreadme = {file = [\"README.rst\"]}\n\n[tool.setuptools]\npackages = [\n    \"xonsh\",\n    \"xonsh.api\",\n    \"xonsh.shells\",\n    \"xonsh.shells.ptk_shell\",\n    \"xonsh.parsers.ply\",\n    \"xonsh.procs\",\n    \"xonsh.platforms\",\n    \"xonsh.parsers\",\n    \"xonsh.xoreutils\",\n    \"xontrib\",\n    \"xonsh.completers\",\n    \"xonsh.history\",\n    \"xonsh.prompt\",\n    \"xonsh.pytest\",\n    \"xonsh.lib\",\n    \"xonsh.webconfig\",\n    \"xonsh.virtualenv\",\n    \"xompletions\",\n]\nplatforms = [\"Cross Platform\"]\ninclude-package-data = false\n\n[tool.setuptools.package-dir]\nxonsh = \"xonsh\"\nxontrib = \"xontrib\"\nxompletions = \"xompletions\"\n\"xonsh.lib\" = \"xonsh/lib\"\n\"xonsh.webconfig\" = \"xonsh/webconfig\"\n\n[tool.setuptools.package-data]\nxonsh = [\n    \"*.json\",\n    \"*.githash\",\n]\nxontrib = [\"*.xsh\"]\n\"xonsh.lib\" = [\"*.xsh\"]\n\"xonsh.virtualenv\" = [\"*.xsh\"]\n\"xonsh.webconfig\" = [\n    \"*.html\",\n    \"js/app.min.js\",\n    \"js/bootstrap.min.css\",\n    \"js/LICENSE-bootstrap\",\n    \"js/xonsh_sticker_mini.png\",\n]\n\n[project.entry-points]\npytest11 = { xonsh = \"xonsh.pytest.plugin\" }\n\n[project.entry-points.\"pygments.lexers\"]\nxonsh = \"xonsh.pyghooks:XonshLexer\"\nxonshcon = \"xonsh.pyghooks:XonshConsoleLexer\"\n\n[project.entry-points.\"virtualenv.activate\"]\nxonsh = \"xonsh.virtualenv:XonshActivator\"\n\n[project.urls]\nHomepage = \"https://xon.sh\"\ndocumentation = \"https://xon.sh/contents.html\"\nrepository = \"https://github.com/xonsh/xonsh\"\nchangelog = \"https://github.com/xonsh/xonsh/blob/main/CHANGELOG.rst\"\n\"Issue tracker\" = \"https://github.com/xonsh/xonsh/issues\"\n\n[project.optional-dependencies]\nptk = [\n    \"prompt-toolkit>=3.0.29\",\n    \"pyperclip\",\n]\npygments = [\"pygments>=2.2\"]\nmac = [\"gnureadline\"]\nlinux = [\"distro\"]\nproctitle = [\"setproctitle\"]\nfull = [\n    \"xonsh[ptk,pygments]\",\n    \"distro; platform_system=='Linux'\",\n    \"setproctitle; platform_system=='Windows'\",\n    \"gnureadline; platform_system=='Darwin'\",\n    \"ujson\",\n]\nbestshell = [\n    \"prompt-toolkit>=3.0.29\",\n    \"pygments>=2.2\",\n]\ntest = [\n    \"xonsh[bestshell]\",\n    \"pytest>=7\",\n    \"restructuredtext_lint\",\n    \"pytest-cov\",\n    \"pytest-mock\",\n    \"pytest-timeout\",\n    \"pytest-subprocess\",\n    \"pytest-rerunfailures\",\n    \"prompt-toolkit>=3.0.29\",\n    \"pygments>=2.2\",\n    \"coverage>=5.3.1\",\n    \"pyte>=0.8.0\",\n    \"virtualenv>=20.16.2\",\n    \"requests\",\n]\ndev = [\n    \"xonsh[test,doc]\",\n    \"pre-commit\",\n    \"re-ver\",\n    \"tomli\",\n]\ndoc = [\n    \"xonsh[bestshell]\",\n    \"furo\",\n    \"numpydoc\",\n    \"sphinx>=3.1\",\n    \"psutil\",\n    \"pyzmq\",\n    \"matplotlib\",\n    \"tornado\",\n    \"runthis-sphinxext\",\n    \"livereload\",\n    \"myst-parser\",\n]\n\n\n[project.scripts]\nxonsh = \"xonsh.main:main\"\nxonsh-cat = \"xonsh.xoreutils.cat:main\"\nxonsh-uname = \"xonsh.xoreutils.uname:main\"\nxonsh-uptime = \"xonsh.xoreutils.uptime:main\"\n\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"xonsh\", \"xontrib\", \"xompletions\", \"tests\"]\nknown-third-party = [\"ply\", \"pytest\"]\n\n[tool.ruff]\nsrc = [\n    \"xonsh\", \"xontrib\", \"xompletions\", \"tests\"\n]\nextend-exclude = [\n    \"docs/\",\n    \"*/ply/\",\n    \"parser*_table.py\",\n    \"completion_parser_table.py\",\n    \"build/\",\n    \"dist/\",\n    \"setup.py\",\n    \".vscode/\",\n    \"feedstock\",\n    \"rever\",\n    \".venv*/\",\n    \".local.out*/\",\n]\nline-length = 88\n\n[tool.ruff.lint]\nignore = [\n    \"D100\", # Missing docstring in public module\n    \"D101\", # Missing docstring in public class\n    \"D102\", # Missing docstring in public method\n    \"D103\", # Missing docstring in public function\n    \"D104\", # Missing docstring in public package\n    \"D105\", # Missing docstring in magic method\n    \"D200\", # One-line docstring should fit on one line with quotes\n    \"D202\", # No blank lines allowed after function docstring\n    \"D205\", # 1 blank line required between summary line and description\n    \"D207\", # Docstring is under-indented\n    \"D208\", # Docstring is over-indented\n    \"D209\", # Multi-line docstring closing quotes should be on a separate line\n    \"D210\", # No whitespaces allowed surrounding docstring text\n    \"D301\", # Use r\"\"\" if any backslashes in a docstring\n    \"D400\", # First line should end with a period\n    \"D401\", # First line should be in imperative mood\n    \"D403\", # First word of the first line should be properly capitalized\n    \"D404\", # First word of the docstring should not be This\n    \"D406\", # Section name should end with a newline\n    \"D407\", # Missing dashed underline after section\n    \"D409\", # Section underline should be in the line following the section’s name\n    \"D411\", # Missing blank line before section\n    \"D418\", # Function decorated with `@overload` shouldn't contain a docstring\n    \"E402\", # Module level import not at top of file\n    \"E501\", # line length\n    \"E731\", # Do not assign a lambda expression, use a def\n    \"UP031\", # Use format specifiers instead of percent format\n]\nselect = [\n    \"B\", # https://beta.ruff.rs/docs/rules/#flake8-bugbear-b\n    \"D\", # https://beta.ruff.rs/docs/rules/#pydocstyle-d\n    \"E\", # https://beta.ruff.rs/docs/rules/#pycodestyle-e-w\n    \"F\", # https://beta.ruff.rs/docs/rules/#pyflakes-f\n    \"I\", # https://beta.ruff.rs/docs/rules/#isort-i\n    \"T10\", # https://beta.ruff.rs/docs/rules/#flake8-debugger-t10\n    \"TID\", # https://docs.astral.sh/ruff/rules/#flake8-tidy-imports-tid\n    \"YTT\", # https://beta.ruff.rs/docs/rules/#flake8-2020-ytt\n    \"W\", # https://beta.ruff.rs/docs/rules/#pycodestyle-e-w\n    \"UP\", # https://beta.ruff.rs/docs/rules/#pyupgrade-up\n]\n\n[tool.ruff.lint.pydocstyle]\nconvention = \"numpy\"\n\n[tool.ruff.lint.per-file-ignores]\n\"xonsh/timings.py\" = [\"F401\"]\n\"xonsh/history.py\" = [\"F821\"]\n\"xonsh/parsers/lexer.py\" = [\"E741\"]\n\"xonsh/parsers/completion_context.py\" = [\"B018\"]\n\"xonsh/parsers/tokenize.py\" = [\n    \"F821\",\n    \"F841\",\n    \"B904\" # Within an `except` clause, raise exceptions with `raise ... from err`\n]\n\"xonsh/pyghooks.py\" = [\"F821\"]\n\"tests/test_builtins.py\" = [\n    \"F821\",\n    \"B011\",\n]\n\"xonsh/built_ins.py\" = [\n    \"F821\",\n    \"E721\",\n    \"E721\",\n]\n\"xonsh/style_tools.py\" = [\"F821\"]\n\"xonsh/xoreutils/*.py\" = [\"E722\"]\n\"xonsh/completers/python.py\" = [\"E722\"]\n\"xonsh/parsers/ast.py\" = [\"F401\"]\n\"xonsh/shells/ptk_shell/__init__.py\" = [\"E731\"]\n\"xonsh/shells/readline_shell.py\" = [\"F401\"]\n\"xonsh/commands_cache.py\" = [\"F841\"]\n\"xonsh/shells/ptk_shell/key_bindings.py\" = [\"F841\"]\n\"xonsh/tools.py\" = [\n    \"E731\",\n]\n\"xonsh/xonfig.py\" = [\"E731\"]\n\"xontrib/vox.py\" = [\"F821\"]\n\"xonsh/inspectors.py\" = [\"E722\"]\n\"xonsh/platform.py\" = [\"F401\"]\n\"xonsh/parsers/*.py\" = [\n    \"E741\", # E741 Ambiguous variable name\n]\n\"tests/test*.py\" = [\n    \"E741\", #  E741 Ambiguous variable name\n]\n"
        },
        {
          "name": "rever.xsh",
          "type": "blob",
          "size": 1.5732421875,
          "content": "from rever.activities.ghrelease import git_archive_asset\n\nfrom pkg_resources import parse_requirements\n\n$PROJECT = $GITHUB_ORG = $GITHUB_REPO = 'xonsh'\n$WEBSITE_URL = 'http://xon.sh'\n$ACTIVITIES = ['authors', 'version_bump', 'changelog', 'pytest', 'appimage',\n               'tag', 'push_tag',\n               'ghrelease',\n               'sphinx',\n               ]\n$PYPI_SIGN = False\n$PYPI_BUILD_COMMANDS = (\"sdist\")\n\n$AUTHORS_FILENAME = \"AUTHORS.rst\"\n$VERSION_BUMP_PATTERNS = [\n    ('xonsh/__init__.py', r'__version__\\s*=.*', '__version__ = \"$VERSION\"'),\n    ]\n$CHANGELOG_FILENAME = 'CHANGELOG.rst'\n$CHANGELOG_TEMPLATE = 'TEMPLATE.rst'\n\n$PYTEST_COMMAND = \"./run-tests.xsh test\"\n\n$TAG_REMOTE = 'git@github.com:xonsh/xonsh.git'\n$TAG_TARGET = 'main'\n\n$GHPAGES_REPO = 'git@github.com:xonsh/xonsh-docs.git'\n\n$DOCKER_APT_DEPS = ['man', 'bash-completion']\n\n\ndef get_requirement_args(*extras:str):\n    from tomli import loads\n    with open(\"pyproject.toml\") as f:\n        content = f.read()\n    deps = loads(content)['project']['optional-dependencies']\n    for ext in extras:\n        yield from deps[ext]\n\npip_deps = list(get_requirement_args('test', 'doc'))\nconda_deps = {'prompt_toolkit', 'pip', 'psutil', 'numpy', 'matplotlib'}\n$DOCKER_PIP_DEPS = pip_deps\n$DOCKER_CONDA_DEPS = sorted(conda_deps)\n$DOCKER_INSTALL_COMMAND = ('rm -rf .cache/ __pycache__/ */__pycache__ */*/__pycache__ build/ && '\n                           './setup.py install')\n$DOCKER_GIT_NAME = 'xonsh'\n$DOCKER_GIT_EMAIL = 'xonsh@googlegroups.com'\n\n$GHRELEASE_ASSETS = [git_archive_asset, 'xonsh-x86_64.AppImage']\n\n$APPIMAGE_PYTHON_VERSION = '3.11'\n"
        },
        {
          "name": "run-tests.xsh",
          "type": "blob",
          "size": 1.673828125,
          "content": "#!/usr/bin/env xonsh\nimport sys\nimport subprocess\nfrom typing import List\n\nimport xonsh.cli_utils as xcli\n\nfrom xonsh.tools import print_color\nimport itertools\n\n\n$RAISE_SUBPROC_ERROR = True\n# $XONSH_TRACE_SUBPROC = True\n\n\ndef colored_tracer(cmds, **_):\n    cmd = \" \".join(itertools.chain.from_iterable(cmds))\n    print_color(f\"{{GREEN}}$ {{BLUE}}{cmd}{{RESET}}\", file=sys.stderr)\n\n\ndef _replace_args(args: List[str], num: int) -> List[str]:\n    return [\n         (arg % num) if \"%d\" in arg else arg\n         for arg in args\n    ]\n\n\ndef test(\n        report_cov: xcli.Arg('--report-coverage', '-c', action=\"store_true\") = False,\n        pytest_args: xcli.Arg(nargs='*')=(),\n):\n    \"\"\"Run pytest.\n\n    Parameters\n    ----------\n    report_cov\n        Report coverage at the end of the test\n    pytest_args\n        arbitrary arguments that gets passed to pytest's invocation.\n        Use %%d to parameterize and prevent overwrite\n\n    Examples\n    --------\n    `xonsh run-tests.xsh -- --junitxml=junit/test-results.%%d.xml`\n    \"\"\"\n\n    if report_cov:\n        $COVERAGE_CORE=\"sysmon\"\n        ![pytest @(_replace_args(pytest_args, 0)) --cov --cov-report=xml --cov-report=term]\n    else:\n        # during CI run, some tests take longer to complete on windows\n        ![pytest @(_replace_args(pytest_args, 0)) --durations=5]\n\n\ndef validate_news_items(\n        pytest_args: xcli.Arg(nargs='*') = (),\n):\n    ![pytest -m news @(pytest_args)]\n\n\nif __name__ == '__main__':\n    parser = xcli.make_parser(\"test commands\")\n    parser.add_command(test)\n    parser.add_command(validate_news_items)\n\n    try:\n        xcli.dispatch(parser)\n    except subprocess.CalledProcessError as ex:\n        parser.exit(1, f\"Failed with {ex}\")\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.3515625,
          "content": "[mypy]\n# --- https://mypy.readthedocs.io/en/stable/config_file.html\n# try to keep all under .cache directory\ncache_dir = .cache/mypy/\n# warn_unused_ignores = True\nwarn_unused_configs = True\nwarn_no_return = False\n\npackages=xonsh,xontrib,xompletions\n\n; a regex to exclude certain directories\nexclude = ((xonsh/parsers/ply)|(xontrib/(mpl.*py|distributed.py|jedi.py)))\n\n;match dmypy semantics - https://github.com/python/mypy/issues/8046\nlocal_partial_types = True\n\n; since v0.991 implicit optional became True by default.\nno_implicit_optional=False\n\n\n# report\nshow_error_context = True\nshow_column_numbers = True\nshow_error_codes = True\npretty = True\n\n# the __init__ files have dynamic check - ignoring the attribute error. others are generated files\n# top level package name only ignores the __init__.py file.\n[mypy-xonsh.parser_table,xonsh.completion_parser_table,xonsh.parsers.parser_table.*,xonsh.parsers.completion_parser_table.*,xonsh,xonsh.prompt,xonsh.history,xonsh.completers,xonsh.procs]\nignore_errors = True\n\n# 3rd party libraries that we dont have control over\n[mypy-zmq.*,setproctitle,xonsh.parsers.ply.*,winreg.*,pygments.*,importlib_resources.*,nt.*,prompt_toolkit.*,distro.*,conda_suggest.*,_winreg.*]\nignore_missing_imports = True\nignore_errors = True\n\n[tool:pytest]\ncache_dir = .cache/pytest\nmarkers =\n    news: check changelog unit is valid rst\ntestpaths =\n    tests\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 7.8740234375,
          "content": "#!/usr/bin/env python3\n# Note: Do not embed any non-ASCII characters in this file until pip has been\n# fixed. See https://github.com/xonsh/xonsh/issues/487.\nimport os\nimport subprocess\nimport sys\n\nfrom setuptools import setup\nfrom setuptools.command.build_py import build_py\nfrom setuptools.command.develop import develop\nfrom setuptools.command.install import install\nfrom setuptools.command.install_scripts import install_scripts\nfrom setuptools.command.sdist import sdist\nfrom wheel.bdist_wheel import bdist_wheel\n\nTABLES = [\n    \"xonsh/lexer_table.py\",\n    \"xonsh/parser_table.py\",\n    \"xonsh/completion_parser_table.py\",\n]\n\n\ndef python_tag():\n    ver = sys.version_info\n    return f\"py{ver.major}{ver.minor}\"\n\n\ndef clean_tables():\n    \"\"\"Remove the lexer/parser modules that are dynamically created.\"\"\"\n    for f in TABLES:\n        if os.path.isfile(f):\n            os.remove(f)\n            print(\"Removed \" + f)\n\n\nos.environ[\"XONSH_DEBUG\"] = \"1\"\n\n\ndef build_tables():\n    \"\"\"Build the lexer/parser modules.\"\"\"\n    print(\"Building lexer and parser tables.\", file=sys.stderr)\n    root_dir = os.path.abspath(os.path.dirname(__file__))\n    sys.path.insert(0, root_dir)\n    from xonsh.parser import Parser\n    from xonsh.parsers.completion_context import CompletionContextParser\n\n    Parser(\n        yacc_table=\"parser_table\",\n        outputdir=os.path.join(root_dir, \"xonsh\"),\n        yacc_debug=True,\n    )\n    CompletionContextParser(\n        yacc_table=\"completion_parser_table\",\n        outputdir=os.path.join(root_dir, \"xonsh\"),\n        debug=True,\n    )\n    sys.path.pop(0)\n\n\ndef dirty_version():\n    \"\"\"\n    If install/sdist is run from a git directory (not a conda install), add\n    a devN suffix to reported version number and write a gitignored file\n    that holds the git hash of the current state of the repo to be queried\n    by ``xonfig``\n    \"\"\"\n    try:\n        _version = subprocess.check_output([\"git\", \"describe\", \"--tags\"])\n    except Exception:\n        print(\"failed to find git tags\", file=sys.stderr)\n        return False\n    _version = _version.decode(\"ascii\")\n    try:\n        _, N, sha = _version.strip().split(\"-\")\n    except ValueError:  # tag name may contain \"-\"\n        print(\"failed to parse git version\", file=sys.stderr)\n        return False\n    sha = sha.strip(\"g\")\n    replace_version(N)\n    _cmd = [\"git\", \"show\", \"-s\", \"--format=%cd\", \"--date=local\", sha]\n    try:\n        _date = subprocess.check_output(_cmd)\n        _date = _date.decode(\"ascii\")\n        # remove weekday name for a shorter string\n        _date = \" \".join(_date.split()[1:])\n    except:\n        _date = \"\"\n        print(\"failed to get commit date\", file=sys.stderr)\n    with open(\"xonsh/dev.githash\", \"w\") as f:\n        f.write(f\"{sha}|{_date}\")\n    print(\"wrote git version: \" + sha, file=sys.stderr)\n    return True\n\n\nORIGINAL_VERSION_LINE = None\n\n\ndef replace_version(N):\n    \"\"\"Replace version in `__init__.py` with devN suffix\"\"\"\n    global ORIGINAL_VERSION_LINE\n    with open(\"xonsh/__init__.py\") as f:\n        raw = f.read()\n    lines = raw.splitlines()\n    msg_assert = \"__version__ must be the first line of the __init__.py\"\n    assert \"__version__\" in lines[0], msg_assert\n    ORIGINAL_VERSION_LINE = lines[0]\n    lines[0] = lines[0].rstrip(' \"') + f'.dev{N}\"'\n    upd = \"\\n\".join(lines) + \"\\n\"\n    with open(\"xonsh/__init__.py\", \"w\") as f:\n        f.write(upd)\n\n\ndef restore_version():\n    \"\"\"If we touch the version in __init__.py discard changes after install.\"\"\"\n    if ORIGINAL_VERSION_LINE is None:\n        return\n    with open(\"xonsh/__init__.py\") as f:\n        raw = f.read()\n    lines = raw.splitlines()\n    lines[0] = ORIGINAL_VERSION_LINE\n    upd = \"\\n\".join(lines) + \"\\n\"\n    with open(\"xonsh/__init__.py\", \"w\") as f:\n        f.write(upd)\n\n\nclass xbuild_py(build_py):\n    \"\"\"Xonsh specialization of setuptools build_py class.\"\"\"\n\n    def run(self):\n        clean_tables()\n        build_tables()\n        # add dirty version number\n        dirty = dirty_version()\n        super().run()\n        if dirty:\n            restore_version()\n\n\nclass xbdist(bdist_wheel):\n    def initialize_options(self):\n        super().initialize_options()\n        # because XonshParser will be build for each minor python version, we need separate builds\n        self.python_tag = python_tag()\n\n\nclass xinstall(install):\n    \"\"\"Xonsh specialization of setuptools install class.\n    For production, let setuptools generate the\n    startup script, e.g: `pip installl .' rather than\n    relying on 'python setup.py install'.\"\"\"\n\n    def run(self):\n        clean_tables()\n        build_tables()\n        # add dirty version number\n        dirty = dirty_version()\n\n        super().run()\n        if dirty:\n            restore_version()\n\n\nclass xsdist(sdist):\n    \"\"\"Xonsh specialization of setuptools sdist class.\"\"\"\n\n    def make_release_tree(self, basedir, files):\n        clean_tables()\n        build_tables()\n        dirty = dirty_version()\n        files.extend(TABLES)\n        super().make_release_tree(basedir, files)\n        if dirty:\n            restore_version()\n\n\n# Hack to overcome pip/setuptools problem on Win 10.  See:\n#   https://github.com/tomduck/pandoc-eqnos/issues/6\n#   https://github.com/pypa/pip/issues/2783\n\n# Custom install_scripts command class for setup()\nclass install_scripts_quoted_shebang(install_scripts):\n    \"\"\"Ensure there are quotes around shebang paths with spaces.\"\"\"\n\n    def write_script(self, script_name, contents, mode=\"t\", *ignored):\n        shebang = str(contents.splitlines()[0])\n        if (\n            shebang.startswith(\"#!\")\n            and \" \" in shebang[2:].strip()\n            and '\"' not in shebang\n        ):\n            quoted_shebang = '#!\"%s\"' % shebang[2:].strip()\n            contents = contents.replace(shebang, quoted_shebang)\n        super().write_script(script_name, contents, mode, *ignored)\n\n\nclass install_scripts_rewrite(install_scripts):\n    \"\"\"Change default python3 to the concrete python binary used to install/develop inside xon.sh script\"\"\"\n\n    def run(self):\n        super().run()\n        if not self.dry_run:\n            for file in self.get_outputs():\n                if file.endswith(\"xon.sh\"):\n                    # this is the value distutils use on its shebang translation\n                    bs_cmd = self.get_finalized_command(\"build_scripts\")\n                    exec_param = getattr(bs_cmd, \"executable\", None)\n\n                    with open(file) as f:\n                        content = f.read()\n\n                    processed = content.replace(\" python3 \", f' \"{exec_param}\" ')\n\n                    with open(file, \"w\") as f:\n                        f.write(processed)\n\n\nclass xdevelop(develop):\n    \"\"\"Xonsh specialization of setuptools develop class.\"\"\"\n\n    def run(self):\n        clean_tables()\n        build_tables()\n        dirty = dirty_version()\n        develop.run(self)\n        if dirty:\n            restore_version()\n\n    def install_script(self, dist, script_name, script_text, dev_path=None):\n        if script_name == \"xon.sh\":\n            # change default python3 to the concrete python binary used to install/develop inside xon.sh script\n            script_text = script_text.replace(\" python3 \", f' \"{sys.executable}\" ')\n        super().install_script(dist, script_name, script_text, dev_path)\n\n\n# The custom install needs to be used on Windows machines\ncmdclass = {\n    \"install\": xinstall,\n    \"sdist\": xsdist,\n    \"build_py\": xbuild_py,\n    \"develop\": xdevelop,\n    \"bdist_wheel\": xbdist,\n}\nif os.name == \"nt\":\n    cmdclass[\"install_scripts\"] = install_scripts_quoted_shebang\nelse:\n    cmdclass[\"install_scripts\"] = install_scripts_rewrite\n\n\ndef main():\n    \"\"\"The main entry point.\"\"\"\n    try:\n        if \"--name\" not in sys.argv:\n            logo_fname = os.path.join(os.path.dirname(__file__), \"logo.txt\")\n            with open(logo_fname, \"rb\") as f:\n                logo = f.read().decode(\"utf-8\")\n            print(logo)\n    except UnicodeEncodeError:\n        pass\n    setup(\n        cmdclass=cmdclass,\n    )\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "xompletions",
          "type": "tree",
          "content": null
        },
        {
          "name": "xonsh-in-docker.py",
          "type": "blob",
          "size": 2.0205078125,
          "content": "#!/usr/bin/env python3\nimport argparse\nimport os\nimport subprocess\n\nprogram_description = \"\"\"Build and run Xonsh in a fresh, controlled\n    environment using docker \"\"\"\n\nparser = argparse.ArgumentParser(description=program_description)\n\nparser.add_argument(\"env\", nargs=\"*\", default=[], metavar=\"ENV=value\")\nparser.add_argument(\"--python\", \"-p\", default=\"3.11\", metavar=\"python_version\")\nparser.add_argument(\"--pypy\", default=None, metavar=\"pypy_version\")\nparser.add_argument(\"--ptk\", \"-t\", default=\"3.0.47\", metavar=\"ptk_version\")\nparser.add_argument(\"--keep\", action=\"store_true\")\nparser.add_argument(\"--build\", action=\"store_true\")\nparser.add_argument(\"--command\", \"-c\", default=\"xonsh\", metavar=\"command\")\nparser.add_argument(\"--pytest\", action=\"store_true\")\n\nargs = parser.parse_args()\n\ndocker_script = \"\"\"\nfrom python:{python_version}\nRUN pip install --upgrade pip && pip install \\\\\n  prompt-toolkit=={ptk_version} \\\\\n  {pytest} \\\\\n  pygments\nRUN mkdir /xonsh\nWORKDIR /xonsh\nADD ./ ./\nRUN python setup.py install\n\"\"\".format(\n    python_version=args.python,\n    ptk_version=args.ptk,\n    pytest=\"pytest\" if args.pytest else \"\",\n)\n\nif args.pypy:\n    docker_script = \"\"\"\nfrom pypy:{python_version}\nRUN pypy3 -m ensurepip\nRUN pip install --upgrade pip && pip install \\\\\n  prompt-toolkit=={ptk_version} \\\\\n  {pytest} \\\\\n  pygments\nRUN mkdir /xonsh\nWORKDIR /xonsh\nADD ./ ./\nRUN pypy3 setup.py install\n    \"\"\".format(\n        python_version=args.pypy,\n        ptk_version=args.ptk,\n        pytest=\"pytest\" if args.pytest else \"\",\n    )\n\nprint(\"Building and running Xonsh\")\nprint(\"Using python \", args.python)\nprint(\"Using prompt-toolkit \", args.ptk)\n\nwith open(\"./Dockerfile\", \"w+\") as f:\n    f.write(docker_script)\n\nenv_string = \" \".join(args.env)\n\nsubprocess.call([\"docker\", \"build\", \"-t\", \"xonsh\", \".\"])\nos.remove(\"./Dockerfile\")\n\nif not args.build:\n    run_args = [\"docker\", \"run\", \"-ti\"]\n    for e in args.env:\n        run_args += [\"-e\", e]\n    if not args.keep:\n        run_args.append(\"--rm\")\n    run_args += [\"xonsh\", args.command]\n    subprocess.call(run_args)\n"
        },
        {
          "name": "xonsh",
          "type": "tree",
          "content": null
        },
        {
          "name": "xontrib",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}