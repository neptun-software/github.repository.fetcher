{
  "metadata": {
    "timestamp": 1736560985269,
    "page": 735,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "EnableSecurity/wafw00f",
      "stars": 5425,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5830078125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*.swp\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbin/\nbuild/\ndevelop-eggs/\ndist/\neggs/\ninclude/\nlocal/\nlib64/\nman/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.cache\nnosetests.xml\ncoverage.xml\n\n# Translations\n*.mo\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n\n# Rope\n.ropeproject\n\n# Django stuff:\n*.log\n*.pot\n\n# Sphinx documentation\ndocs/_build/\n\n*.csv\n*.json\n.idea/*\n.vscode/*\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2763671875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at code@enablesecurity.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CREDITS.txt",
          "type": "blob",
          "size": 1.17578125,
          "content": "===================\nTHE WAFW00F PROJECT\n===================\n\n$ AUTHORS\n  =======\n\n* Current Maintainers :-\n    - Sandro Gauci <sandro [at] enablesecurity [dot] com>\n    - Pinaki Mondal <0xinfection [at] gmail [dot] com>\n\n* Original Code by :-\n    - Sandro Gauci <sandro [at] enablesecurity [dot] com>\n    - Wendel G. Henrique <whenrique [at] trustwave [dot] com>\n\n$ CONTRIBUTORS\n  ============\n\nA number of people contributed in the past (in no particular order):\n\n- Sebastien Gioria <https://github.com/SPoint42>\n- W3AF (or Andres Riancho) <https://github.com/andresriancho>\n- Charlie Campbell <https://github.com/sinnur>\n- @j0eMcCray <https://github.com/joemccray>\n- Mathieu Dessus\n- David S. Langlands\n- Nmap's http-waf-fingerprint.nse / Hani Benhabiles\n- Denis Kolegov <https://github.com/dnkolegov>\n- kun a <https://github.com/akun>\n- Louis-Philippe Huberdeau <https://github.com/lphuberdeau>\n- Brendan Coles <https://github.com/bcoles>\n- Matt Foster <https://github.com/mattfoster>\n- g0tmi1k (?) <https://github.com/g0tmi1k>\n- MyKings <https://github.com/MyKings>\n\nIf you did contribute and somehow I didn't put your name in there, please do\nlet me know at: <sandro [at] enablesecurity [dot] com>.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.1064453125,
          "content": "FROM python:3.11.9-alpine\nWORKDIR /usr/src/app\nCOPY . .\nRUN python setup.py install\nENTRYPOINT [ \"wafw00f\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4638671875,
          "content": "Copyright (c) 2009-2024, WAFW00F Developers\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the {organization} nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.126953125,
          "content": "include CREDITS.txt\ninclude LICENSE\ninclude MANIFEST.in\ninclude README.md\ninclude wafw00f/__init__.py\ninclude wafw00f/bin/wafw00f\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3310546875,
          "content": "SRC_DIR = wafw00f\nDOC_DIR = docs\nMAKE = make\n\nall:\n\tmake install\n\tmake test\n\tmake html\n\tmake clean\n\ninstall:\n\tpip install -q -e .[dev,docs]\n\nlint:\n\tprospector $(SRC_DIR) --strictness veryhigh\n\ntestall:\n\ttox\n\nhtml:\n\tcd $(DOC_DIR) && $(MAKE) html\n\nclean:\n\trm -rf *.egg-info build dist .coverage\n\tfind $(SRC_DIR) -name \"*.pyc\" | xargs rm -rf\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.0654296875,
          "content": "<h1 align=\"center\">\n  <a href=\"https://github.com/enablesecurity/wafw00f\"><img src=\"https://i.imgur.com/uAgp49o.png\" alt=\"wafw00f\"/></a>\n  <br>\n  WAFW00F\n</h1>\n<p align=\"center\">\n  <b>The Web Application Firewall Fingerprinting Tool.</b>\n  <br>\n  <b>\n    &mdash; From <a href=\"https://enablesecurity.com\">Enable Security</a>\n  </b>\n</p>\n<p align=\"center\">\n  <a href=\"https://docs.python.org/3/download.html\">\n    <img src=\"https://img.shields.io/badge/Python-3.x/2.x-green.svg\">\n  </a>\n  <a href=\"https://github.com/EnableSecurity/wafw00f/releases\">\n    <img src=\"https://img.shields.io/badge/Version-v2.3.1%20(stable)-blue.svg\">\n  </a>\n  <a href=\"https://github.com/EnableSecurity/wafw00f/blob/master/LICENSE\">\n    <img src=\"https://img.shields.io/badge/License-BSD%203%20Clause-orange.svg\">\n  </a>\n  <a href=\"https://app.travis-ci.com/github/EnableSecurity/wafw00f\">\n    <img src=\"https://app.travis-ci.com/EnableSecurity/wafw00f.svg\">\n  </a>\n</p>\n\n## How does it work?\n\nTo do its magic, WAFW00F does the following:\n\n- Sends a _normal_ HTTP request and analyses the response; this identifies a\n  number of WAF solutions.\n- If that is not successful, it sends a number of (potentially malicious) HTTP\n  requests and uses simple logic to deduce which WAF it is.\n- If that is also not successful, it analyses the responses previously\n  returned and uses another simple algorithm to guess if a WAF or security\n  solution is actively responding to our attacks.\n\nFor further details, check out the source code on our [main repository](https://github.com/EnableSecurity/wafw00f).\n\n## What does it detect?\n\nWAFW00F can detect a number of firewalls, a list of which is as below:\n\n```\n$ wafw00f -l\n\n\n                  ?              ,.   (   .      )        .      \"\n          __        ??          (\"     )  )'     ,'        )  . (`     '`\n    (___()'`;   ???          .; )  ' (( (\" )    ;(,     ((  (  ;)  \"  )\")\n    /,___ /`                 _\"., ,._'_.,)_(..,( . )_  _' )_') (. _..( ' )\n    \\\\   \\\\                 |____|____|____|____|____|____|____|____|____|\n\n                                ~ WAFW00F : v2.3.1 ~\n                  ~ Sniffing Web Application Firewalls since 2014 ~\n\n[+] Can test for these WAFs:\n\n  WAF Name                        Manufacturer\n  --------                        ------------\n\n  360WangZhanBao                   360 Technologies\n  ACE XML Gateway                  Cisco\n  ASP.NET Generic                  Microsoft\n  ASPA Firewall                    ASPA Engineering Co.\n  AWS Elastic Load Balancer        Amazon\n  AireeCDN                         Airee\n  Airlock                          Phion/Ergon\n  Alert Logic                      Alert Logic\n  AliYunDun                        Alibaba Cloud Computing\n  AnYu                             AnYu Technologies\n  Anquanbao                        Anquanbao\n  AppWall                          Radware\n  Approach                         Approach\n  Armor Defense                    Armor\n  ArvanCloud                       ArvanCloud\n  Astra                            Czar Securities\n  Azion Edge Firewall              Azion\n  Azure Application Gateway        Microsoft\n  Azure Front Door                 Microsoft\n  BIG-IP AP Manager                F5 Networks\n  BIG-IP AppSec Manager            F5 Networks\n  BIG-IP Local Traffic Manager     F5 Networks\n  Barikode                         Ethic Ninja\n  Barracuda                        Barracuda Networks\n  Bekchy                           Faydata Technologies Inc.\n  Beluga CDN                       Beluga\n  BinarySec                        BinarySec\n  BitNinja                         BitNinja\n  BlockDoS                         BlockDoS\n  Bluedon                          Bluedon IST\n  BulletProof Security Pro         AITpro Security\n  CacheFly CDN                     CacheFly\n  CacheWall                        Varnish\n  CdnNS Application Gateway        CdnNs/WdidcNet\n  ChinaCache Load Balancer         ChinaCache\n  Chuang Yu Shield                 Yunaq\n  Cloud Protector                  Rohde & Schwarz CyberSecurity\n  Cloudbric                        Penta Security\n  Cloudflare                       Cloudflare Inc.\n  Cloudfloor                       Cloudfloor DNS\n  Cloudfront                       Amazon\n  Comodo cWatch                    Comodo CyberSecurity\n  CrawlProtect                     Jean-Denis Brun\n  DDoS-GUARD                       DDOS-GUARD CORP.\n  DOSarrest                        DOSarrest Internet Security\n  DataPower                        IBM\n  DenyALL                          Rohde & Schwarz CyberSecurity\n  Distil                           Distil Networks\n  DotDefender                      Applicure Technologies\n  DynamicWeb Injection Check       DynamicWeb\n  Edgecast                         Verizon Digital Media\n  Eisoo Cloud Firewall             Eisoo\n  Envoy                            EnvoyProxy\n  Expression Engine                EllisLab\n  Fastly                           Fastly CDN\n  FirePass                         F5 Networks\n  FortiGate                        Fortinet\n  FortiGuard                       Fortinet\n  FortiWeb                         Fortinet\n  GoDaddy Website Protection       GoDaddy\n  Google Cloud App Armor           Google Cloud\n  Greywizard                       Grey Wizard\n  Huawei Cloud Firewall            Huawei\n  HyperGuard                       Art of Defense\n  ISA Server                       Microsoft\n  Imunify360                       CloudLinux\n  Incapsula                        Imperva Inc.\n  IndusGuard                       Indusface\n  Instart DX                       Instart Logic\n  Janusec Application Gateway      Janusec\n  Jiasule                          Jiasule\n  KS-WAF                           KnownSec\n  Kemp LoadMaster                  Progress Software\n  KeyCDN                           KeyCDN\n  Kona SiteDefender                Akamai\n  LimeLight CDN                    LimeLight\n  LiteSpeed                        LiteSpeed Technologies\n  Malcare                          Inactiv\n  MaxCDN                           MaxCDN\n  Mission Control Shield           Mission Control\n  ModSecurity                      SpiderLabs\n  NAXSI                            NBS Systems\n  NSFocus                          NSFocus Global Inc.\n  Nemesida                         PentestIt\n  NetContinuum                     Barracuda Networks\n  NetScaler AppFirewall            Citrix Systems\n  NevisProxy                       AdNovum\n  Newdefend                        NewDefend\n  NexusGuard Firewall              NexusGuard\n  NinjaFirewall                    NinTechNet\n  NullDDoS Protection              NullDDoS\n  OnMessage Shield                 BlackBaud\n  Open-Resty Lua Nginx             FLOSS\n  Oracle Cloud                     Oracle\n  PT Application Firewall          Positive Technologies\n  Palo Alto Next Gen Firewall      Palo Alto Networks\n  PentaWAF                         Global Network Services\n  PerimeterX                       PerimeterX\n  PowerCDN                         PowerCDN\n  Profense                         ArmorLogic\n  Puhui                            Puhui\n  Qcloud                           Tencent Cloud\n  Qiniu                            Qiniu CDN\n  Qrator                           Qrator\n  RSFirewall                       RSJoomla!\n  RayWAF                           WebRay Solutions\n  Reblaze                          Reblaze\n  RequestValidationMode            Microsoft\n  SEnginx                          Neusoft\n  Sabre Firewall                   Sabre\n  Safe3 Web Firewall               Safe3\n  Safedog                          SafeDog\n  Safeline                         Chaitin Tech.\n  SecKing                          SecKing\n  SecuPress WP Security            SecuPress\n  Secure Entry                     United Security Providers\n  SecureSphere                     Imperva Inc.\n  ServerDefender VP                Port80 Software\n  Shadow Daemon                    Zecure\n  Shield Security                  One Dollar Plugin\n  SiteGround                       SiteGround\n  SiteGuard                        Sakura Inc.\n  Sitelock                         TrueShield\n  SonicWall                        Dell\n  Squarespace                      Squarespace\n  SquidProxy IDS                   SquidProxy\n  StackPath                        StackPath\n  Sucuri CloudProxy                Sucuri Inc.\n  Tencent Cloud Firewall           Tencent Technologies\n  Teros                            Citrix Systems\n  Trafficshield                    F5 Networks\n  TransIP Web Firewall             TransIP\n  UEWaf                            UCloud\n  URLMaster SecurityCheck          iFinity/DotNetNuke\n  URLScan                          Microsoft\n  UTM Web Protection               Sophos\n  Variti                           Variti\n  Varnish                          OWASP\n  Viettel                          Cloudrity\n  VirusDie                         VirusDie LLC\n  WP Cerber Security               Cerber Tech\n  WTS-WAF                          WTS\n  Wallarm                          Wallarm Inc.\n  WatchGuard                       WatchGuard Technologies\n  WebARX                           WebARX Security Solutions\n  WebKnight                        AQTRONIX\n  WebLand                          WebLand\n  WebSEAL                          IBM\n  WebTotem                         WebTotem\n  West263 CDN                      West263CDN\n  Wordfence                        Defiant\n  XLabs Security WAF               XLabs\n  Xuanwudun                        Xuanwudun\n  YXLink                           YxLink Technologies\n  Yundun                           Yundun\n  Yunjiasu                         Baidu Cloud Computing\n  Yunsuo                           Yunsuo\n  ZScaler                          Accenture\n  Zenedge                          Zenedge\n  aeSecure                         aeSecure\n  eEye SecureIIS                   BeyondTrust\n  pkSecurity IDS                   pkSec\n  wpmudev WAF                      Incsub\n  Shieldon Firewall                Shieldon.io\n```\n\n## How do I use it?\n\nFirst, install the tools as described [here](#how-do-i-install-it).\n\nFor help you can make use of the `--help` option. The basic usage is to pass\nan URL as an argument. Example:\n```\n$   wafw00f https://example.org\n\n                   ______\n                  /      \\\n                 (  Woof! )\n                  \\  ____/                      )\n                  ,,                           ) (_\n             .-. -    _______                 ( |__|\n            ()``; |==|_______)                .)|__|\n            / ('        /|\\                  (  |__|\n        (  /  )        / | \\                  . |__|\n         \\(_)_))      /  |  \\                   |__|\n\n                    ~ WAFW00F : v2.3.1 ~\n    The Web Application Firewall Fingerprinting Toolkit\n\n[*] Checking https://example.org\n[+] The site https://example.org is behind Edgecast (Verizon Digital Media) WAF.\n[~] Number of requests: 2\n```\n\n## How do I install it?\n\n### Install from PyPI (recommended)\nRun:\n```\npython3 -m pip install wafw00f\n```\nor\n```\npip3 install wafw00f\n```\n\n### Via Docker\nIt is also possible to run it within a docker container. Clone this repository first and build the Docker image using:\n```\ndocker build . -t wafw00f\n```\nNow you can run:\n```\ndocker run --rm -it wafw00f https://example.com\n```\n\n### From source\n> NOTE: Be careful to not break your system packages while installing wafw00f. Use venv as and when required.\n\nClone the repository:\n```\ngit clone https://github.com/enablesecurity/wafw00f.git\n```\nThen:\n```\ncd wafw00f/\npython3 -m pip install .\n```\n\nOr, by using pipx directly:\n```\npipx install git+https://github.com/EnableSecurity/wafw00f.git\n```\n\n## Final Words\n\n__Questions?__ Pull up an [issue on GitHub Issue Tracker](https://github.com/enablesecurity/wafw00f/issues/new) or contact [me](mailto:sandro@enablesecurity.com).\n[Pull requests](https://github.com/enablesecurity/wafw00f/pulls), [ideas and issues](https://github.com/enablesecurity/wafw00f/issues) are highly welcome.\n\nSome useful links:\n\n- [Documentation/Wiki](https://github.com/enablesecurity/wafw00f/wiki/)\n- [Pypi Package Repository](https://pypi.org/project/wafw00f)\n\nPresently being developed and maintained by:\n\n- Sandro Gauci ([@SandroGauci](https://twitter.com/sandrogauci))\n- Pinaki Mondal ([@0xInfection](https://twitter.com/0xinfection))\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.720703125,
          "content": "#!/usr/bin/env python3\n'''\nCopyright (C) 2024, WAFW00F Developers.\nSee the LICENSE file for copying permission.\n'''\n\nimport io\nfrom setuptools import setup, find_packages\nfrom os import path\nthis_directory = path.abspath(path.dirname(__file__))\nwith io.open(path.join(this_directory, 'README.md'), encoding='utf-8') as f:\n    desc = f.read()\n\nsetup(\n    name='wafw00f',\n    version=__import__('wafw00f').__version__,\n    long_description=desc,\n    long_description_content_type='text/markdown',\n    author='Sandro Gauci',\n    author_email='sandro@enablesecurity.com',\n    license='BSD License',\n    url='https://github.com/enablesecurity/wafw00f',\n    project_urls={\n        \"Bug Tracker\": \"https://github.com/EnableSecurity/wafw00f/issues\",\n        \"Documentation\": \"https://github.com/EnableSecurity/wafw00f/wiki\",\n        \"Source Code\": \"https://github.com/EnableSecurity/wafw00f/tree/master\"\n    },\n    packages=find_packages(),\n    install_requires=[\n        'requests',\n        'requests[socks]',\n        'pluginbase'\n    ],\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Intended Audience :: System Administrators',\n        'Intended Audience :: Information Technology',\n        'Topic :: Internet',\n        'Topic :: Security',\n        'Topic :: System :: Networking :: Firewalls',\n        'License :: OSI Approved :: BSD License',\n        'Programming Language :: Python :: 3',\n        'Operating System :: OS Independent'\n    ],\n    keywords='waf firewall detector fingerprint',\n    extras_require={\n        'dev': [\n            'prospector'\n        ],\n        'docs': [\n            'Sphinx'\n        ]\n    },\n    entry_points={\n        'console_scripts': [\n            'wafw00f = wafw00f.main:main'\n        ]\n    }\n)\n"
        },
        {
          "name": "wafw00f",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}