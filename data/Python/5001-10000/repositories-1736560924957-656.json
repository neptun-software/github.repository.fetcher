{
  "metadata": {
    "timestamp": 1736560924957,
    "page": 656,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "frostming/legit",
      "stars": 5699,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.0537109375,
          "content": "[flake8]\nignore = E265,E266,E501\nmax-line-length = 100\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1767578125,
          "content": "*.pyc\n*.egg-info\n/.venv\n__pycache__/\n.cache\npipenv.egg-info/\n\nbuilders/pyinstaller-1.5.1\nbuilders/artifacts/*\ndist/\nbuild/\n\n.tox/\n.pytest_cache/\n.coverage\nhtmlcov/\n\n.vscode/\n*.spec\n"
        },
        {
          "name": ".replit",
          "type": "blob",
          "size": 0.0595703125,
          "content": "language = \"python3\"\nrun = \"python setup.py install ; legit\"\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.29296875,
          "content": "os: linux\narch:\n - amd64\n - ppc64le\nlanguage: python\ndist: xenial\ncache: pip\npython:\n  - 3.5\n  - 3.6\n  - 3.7\n  - 3.8\n\ninstall:\n  - git fetch --tags\n  - pip install coveralls tox-travis\n\n  # generate some reflog for tests\n  - ./init-tests-after-clone.sh\n\nscript:\n  - tox\n\nafter_success:\n  - coveralls\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.2919921875,
          "content": "Legit is written and maintained by Kenneth Reitz and\nvarious contributors:\n\nDevelopment Lead\n````````````````\n\n- Kenneth Reitz <me@kennethreitz.com>\n\n\nPatches and Suggestions\n```````````````````````\n\n- Mike Dalessio\n- Flavio Curella\n- Ryan James\n- Matt Hickford\n- Graham Ullrich\n- Hugo van Kemenade\n"
        },
        {
          "name": "HISTORY.rst",
          "type": "blob",
          "size": 2.599609375,
          "content": "History\n-------\n\n1.2.0\n+++++\n* Officially drop support for Python 3.4\n\n1.1.0\n+++++\n\n* Support a second parameter for ``branches`` command to restrict the results to matching branches.\n* ``legit --instal`` can install aliases from a venv-boxed legit.\n\n1.0.2\n+++++\n\n* Don't install ``switch`` on git>=2.23.0.\n* Update requirements\n* Fix Windows executable release\n* Improve tests\n\n1.0.1\n+++++\n\n* Fix obtaining repo remote\n* Update requirements\n\n1.0.0\n+++++\n\n* Refactor CLI using `click`\n* Add --verbose option\n* Add --fake option\n* Move \"install\" command to --install option\n* Add --uninstall option which unsets legit git aliases\n* Move \"settings\" command to --config option\n* Improve help output\n* Add tests!\n* Update CI configuration\n* Update README\n* Remove support for deprecated Python versions 2.6, 3.2, 3.3\n\n0.5.0\n+++++\n\n* Remove 'rsync' command.\n* Fix issues when using legit in repos without remotes.\n* Except for the smart merge, `sync` also supports\n  'never rebase', 'always rebase', and 'fast-forward only'.\n* Fix some compatibility issues with Python 3.5 and Git 2.15.0.\n* Refine some error & info messages.\n\n0.4.1\n+++++\n\n* Remove commands: 'graft', 'harvest', 'sprout'.\n\n0.3.1\n+++++\n\n* Added the new 'undo' command.\n* Refine some exit code.\n* Run `legit` without args prints help message.\n\n0.2.1\n+++++\n\n* Improve Python 3 support.\n* Support special expression for branch.\n* Improve completio\n* Better help message.\n* Add manpage.\n* off_branch becomes optional.\n* Use correct branch for unstaging in switch command.\n* Fetch and abort if unpublishing branch not found.\n* Fix remote name config with legit.remote.\n\n0.2.0\n+++++\n\n* Particial Python 3 support.\n* Add bash and zsh tab-completion.\n* Fuzzy branch name matching.\n* Default behavior to current branch on the command publish.\n* `git config legit.remote <remote name>`\n* Fix incorrect stash pop index and stash index with extra data.\n* Fix synchronization in git stash.\n* Handle failed smart_merge.\n* Use correct branch for unstaging in switch command.\n* Ensure parseability of git stash list output.\n* Set up a tracking branch on publish.\n* Handle detached head in legit branches.\n* Handle repo with no branches or remotes.\n* Fix exceptions of `get_repo`.\n* Fixed 'legit install' failed and other issues on Windows\n* Handle not git error.\n* Use git to find root directory.\n\n0.1.1\n+++++\n\n* Fix packaging.\n* Update doc.\n\n0.1.0\n++++++\n\n* Configuration System (new ``settings`` command)\n* New Git Transparency Mode\n    * Black Foreground Option\n    * Disable Colors Option\n* Update Available Alerts (via GitHub)\n* New Harvest command\n* New Install command\n\n\n0.0.9 (?)\n+++++++++\n\n* Initial Release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5166015625,
          "content": "Copyright (c) 2013, Kenneth Reitz\nAll rights reserved.\n\nCopyright (c) 2019, Frost Ming\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the <organization> nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.060546875,
          "content": "include reqs.txt README.rst LICENSE\nrecursive-include extra *\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.26171875,
          "content": "[[source]]\nname = \"pypi\"\nurl = \"https://pypi.org/simple\"\nverify_ssl = true\n\n[dev-packages]\nlegit = {editable = true,path = \".\"}\ncoverage = \"*\"\nflake8 = \"*\"\npytest = \"*\"\npytest-cov = \"*\"\npyinstaller = \"*\"\npypiwin32 = {version=\"*\", sys_platform=\"=='win32'\"}\n\n[packages]\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 14.68359375,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"77a5be3d06cada5dce498cdcadd0739b3c818c5a231124117b0e53ea77283193\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {},\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"https://pypi.org/simple\",\n                \"verify_ssl\": true\n            }\n        ]\n    },\n    \"default\": {},\n    \"develop\": {\n        \"altgraph\": {\n            \"hashes\": [\n                \"sha256:d6814989f242b2b43025cba7161fc1b8fb487a62cd49c49245d6fd01c18ac997\",\n                \"sha256:ddf5320017147ba7b810198e0b6619bd7b5563aa034da388cea8546b877f9b0c\"\n            ],\n            \"version\": \"==0.16.1\"\n        },\n        \"args\": {\n            \"hashes\": [\n                \"sha256:a785b8d837625e9b61c39108532d95b85274acd679693b71ebb5156848fcf814\"\n            ],\n            \"version\": \"==0.1.0\"\n        },\n        \"atomicwrites\": {\n            \"hashes\": [\n                \"sha256:03472c30eb2c5d1ba9227e4c2ca66ab8287fbfbbda3888aa93dc2e28fc6811b4\",\n                \"sha256:75a9445bac02d8d058d5e1fe689654ba5a6556a1dfd8ce6ec55a0ed79866cfa6\"\n            ],\n            \"version\": \"==1.3.0\"\n        },\n        \"attrs\": {\n            \"hashes\": [\n                \"sha256:69c0dbf2ed392de1cb5ec704444b08a5ef81680a61cb899dc08127123af36a79\",\n                \"sha256:f0b870f674851ecbfbbbd364d6b5cbdff9dcedbc7f3f5e18a6891057f21fe399\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==19.1.0\"\n        },\n        \"click\": {\n            \"hashes\": [\n                \"sha256:29f99fc6125fbc931b758dc053b3114e55c77a6e4c6c3a2674a2dc986016381d\",\n                \"sha256:f15516df478d5a56180fbf80e68f206010e6d160fc39fa508b65e035fd75130b\"\n            ],\n            \"version\": \"==6.7\"\n        },\n        \"clint\": {\n            \"hashes\": [\n                \"sha256:05224c32b1075563d0b16d0015faaf9da43aa214e4a2140e51f08789e7a4c5aa\"\n            ],\n            \"version\": \"==0.5.1\"\n        },\n        \"colorama\": {\n            \"hashes\": [\n                \"sha256:05eed71e2e327246ad6b38c540c4a3117230b19679b875190486ddd2d721422d\",\n                \"sha256:f8ac84de7840f5b9c4e3347b3c1eaa50f7e49c2b07596221daec5edaabbd7c48\"\n            ],\n            \"markers\": \"sys_platform == 'win32'\",\n            \"version\": \"==0.4.1\"\n        },\n        \"coverage\": {\n            \"hashes\": [\n                \"sha256:08907593569fe59baca0bf152c43f3863201efb6113ecb38ce7e97ce339805a6\",\n                \"sha256:0be0f1ed45fc0c185cfd4ecc19a1d6532d72f86a2bac9de7e24541febad72650\",\n                \"sha256:141f08ed3c4b1847015e2cd62ec06d35e67a3ac185c26f7635f4406b90afa9c5\",\n                \"sha256:19e4df788a0581238e9390c85a7a09af39c7b539b29f25c89209e6c3e371270d\",\n                \"sha256:23cc09ed395b03424d1ae30dcc292615c1372bfba7141eb85e11e50efaa6b351\",\n                \"sha256:245388cda02af78276b479f299bbf3783ef0a6a6273037d7c60dc73b8d8d7755\",\n                \"sha256:331cb5115673a20fb131dadd22f5bcaf7677ef758741312bee4937d71a14b2ef\",\n                \"sha256:386e2e4090f0bc5df274e720105c342263423e77ee8826002dcffe0c9533dbca\",\n                \"sha256:3a794ce50daee01c74a494919d5ebdc23d58873747fa0e288318728533a3e1ca\",\n                \"sha256:60851187677b24c6085248f0a0b9b98d49cba7ecc7ec60ba6b9d2e5574ac1ee9\",\n                \"sha256:63a9a5fc43b58735f65ed63d2cf43508f462dc49857da70b8980ad78d41d52fc\",\n                \"sha256:6b62544bb68106e3f00b21c8930e83e584fdca005d4fffd29bb39fb3ffa03cb5\",\n                \"sha256:6ba744056423ef8d450cf627289166da65903885272055fb4b5e113137cfa14f\",\n                \"sha256:7494b0b0274c5072bddbfd5b4a6c6f18fbbe1ab1d22a41e99cd2d00c8f96ecfe\",\n                \"sha256:826f32b9547c8091679ff292a82aca9c7b9650f9fda3e2ca6bf2ac905b7ce888\",\n                \"sha256:93715dffbcd0678057f947f496484e906bf9509f5c1c38fc9ba3922893cda5f5\",\n                \"sha256:9a334d6c83dfeadae576b4d633a71620d40d1c379129d587faa42ee3e2a85cce\",\n                \"sha256:af7ed8a8aa6957aac47b4268631fa1df984643f07ef00acd374e456364b373f5\",\n                \"sha256:bf0a7aed7f5521c7ca67febd57db473af4762b9622254291fbcbb8cd0ba5e33e\",\n                \"sha256:bf1ef9eb901113a9805287e090452c05547578eaab1b62e4ad456fcc049a9b7e\",\n                \"sha256:c0afd27bc0e307a1ffc04ca5ec010a290e49e3afbe841c5cafc5c5a80ecd81c9\",\n                \"sha256:dd579709a87092c6dbee09d1b7cfa81831040705ffa12a1b248935274aee0437\",\n                \"sha256:df6712284b2e44a065097846488f66840445eb987eb81b3cc6e4149e7b6982e1\",\n                \"sha256:e07d9f1a23e9e93ab5c62902833bf3e4b1f65502927379148b6622686223125c\",\n                \"sha256:e2ede7c1d45e65e209d6093b762e98e8318ddeff95317d07a27a2140b80cfd24\",\n                \"sha256:e4ef9c164eb55123c62411f5936b5c2e521b12356037b6e1c2617cef45523d47\",\n                \"sha256:eca2b7343524e7ba246cab8ff00cab47a2d6d54ada3b02772e908a45675722e2\",\n                \"sha256:eee64c616adeff7db37cc37da4180a3a5b6177f5c46b187894e633f088fb5b28\",\n                \"sha256:ef824cad1f980d27f26166f86856efe11eff9912c4fed97d3804820d43fa550c\",\n                \"sha256:efc89291bd5a08855829a3c522df16d856455297cf35ae827a37edac45f466a7\",\n                \"sha256:fa964bae817babece5aa2e8c1af841bebb6d0b9add8e637548809d040443fee0\",\n                \"sha256:ff37757e068ae606659c28c3bd0d923f9d29a85de79bf25b2b34b148473b5025\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==4.5.4\"\n        },\n        \"crayons\": {\n            \"hashes\": [\n                \"sha256:5e17691605e564d63482067eb6327d01a584bbaf870beffd4456a3391bd8809d\",\n                \"sha256:6f51241d0c4faec1c04c1c0ac6a68f1d66a4655476ce1570b3f37e5166a599cc\"\n            ],\n            \"version\": \"==0.1.2\"\n        },\n        \"entrypoints\": {\n            \"hashes\": [\n                \"sha256:589f874b313739ad35be6e0cd7efde2a4e9b6fea91edcc34e58ecbb8dbe56d19\",\n                \"sha256:c70dd71abe5a8c85e55e12c19bd91ccfeec11a6e99044204511f9ed547d48451\"\n            ],\n            \"markers\": \"python_version >= '2.7'\",\n            \"version\": \"==0.3\"\n        },\n        \"flake8\": {\n            \"hashes\": [\n                \"sha256:19241c1cbc971b9962473e4438a2ca19749a7dd002dd1a946eaba171b4114548\",\n                \"sha256:8e9dfa3cecb2400b3738a42c54c3043e821682b9c840b0448c0503f781130696\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==3.7.8\"\n        },\n        \"future\": {\n            \"hashes\": [\n                \"sha256:67045236dcfd6816dc439556d009594abf643e5eb48992e36beac09c2ca659b8\"\n            ],\n            \"markers\": \"python_version >= '2.6' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==0.17.1\"\n        },\n        \"gitdb2\": {\n            \"hashes\": [\n                \"sha256:83361131a1836661a155172932a13c08bda2db3674e4caa32368aa6eb02f38c2\",\n                \"sha256:e3a0141c5f2a3f635c7209d56c496ebe1ad35da82fe4d3ec4aaa36278d70648a\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==2.0.5\"\n        },\n        \"gitpython\": {\n            \"hashes\": [\n                \"sha256:ad61bc25deadb535b047684d06f3654c001d9415e1971e51c9c20f5b510076e9\",\n                \"sha256:b8367c432de995dc330b5b146c5bfdc0926b8496e100fda6692134e00c0dcdc5\"\n            ],\n            \"markers\": \"python_version >= '2.6' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==2.1.8\"\n        },\n        \"importlib-metadata\": {\n            \"hashes\": [\n                \"sha256:aa18d7378b00b40847790e7c27e11673d7fed219354109d0e7b9e5b25dc3ad26\",\n                \"sha256:d5f18a79777f3aa179c145737780282e27b508fc8fd688cb17c7a813e8bd39af\"\n            ],\n            \"markers\": \"python_version < '3.8'\",\n            \"version\": \"==0.23\"\n        },\n        \"legit\": {\n            \"editable\": true,\n            \"path\": \".\"\n        },\n        \"mccabe\": {\n            \"hashes\": [\n                \"sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42\",\n                \"sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f\"\n            ],\n            \"version\": \"==0.6.1\"\n        },\n        \"more-itertools\": {\n            \"hashes\": [\n                \"sha256:409cd48d4db7052af495b09dec721011634af3753ae1ef92d2b32f73a745f832\",\n                \"sha256:92b8c4b06dac4f0611c0729b2f2ede52b2e1bac1ab48f089c7ddc12e26bb60c4\"\n            ],\n            \"markers\": \"python_version >= '3.4'\",\n            \"version\": \"==7.2.0\"\n        },\n        \"packaging\": {\n            \"hashes\": [\n                \"sha256:28b924174df7a2fa32c1953825ff29c61e2f5e082343165438812f00d3a7fc47\",\n                \"sha256:d9551545c6d761f3def1677baf08ab2a3ca17c56879e70fecba2fc4dde4ed108\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==19.2\"\n        },\n        \"pefile\": {\n            \"hashes\": [\n                \"sha256:a5d6e8305c6b210849b47a6174ddf9c452b2888340b8177874b862ba6c207645\"\n            ],\n            \"version\": \"==2019.4.18\"\n        },\n        \"pluggy\": {\n            \"hashes\": [\n                \"sha256:0db4b7601aae1d35b4a033282da476845aa19185c1e6964b25cf324b5e4ec3e6\",\n                \"sha256:fa5fa1622fa6dd5c030e9cad086fa19ef6a0cf6d7a2d12318e10cb49d6d68f34\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==0.13.0\"\n        },\n        \"py\": {\n            \"hashes\": [\n                \"sha256:64f65755aee5b381cea27766a3a147c3f15b9b6b9ac88676de66ba2ae36793fa\",\n                \"sha256:dc639b046a6e2cff5bbe40194ad65936d6ba360b52b3c3fe1d08a82dd50b5e53\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==1.8.0\"\n        },\n        \"pycodestyle\": {\n            \"hashes\": [\n                \"sha256:95a2219d12372f05704562a14ec30bc76b05a5b297b21a5dfe3f6fac3491ae56\",\n                \"sha256:e40a936c9a450ad81df37f549d676d127b1b66000a6c500caa2b085bc0ca976c\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==2.5.0\"\n        },\n        \"pyflakes\": {\n            \"hashes\": [\n                \"sha256:17dbeb2e3f4d772725c777fabc446d5634d1038f234e77343108ce445ea69ce0\",\n                \"sha256:d976835886f8c5b31d47970ed689944a0262b5f3afa00a5a7b4dc81e5449f8a2\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==2.1.1\"\n        },\n        \"pyinstaller\": {\n            \"hashes\": [\n                \"sha256:ee7504022d1332a3324250faf2135ea56ac71fdb6309cff8cd235de26b1d0a96\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==3.5\"\n        },\n        \"pyparsing\": {\n            \"hashes\": [\n                \"sha256:6f98a7b9397e206d78cc01df10131398f1c8b8510a2f4d97d9abd82e1aacdd80\",\n                \"sha256:d9338df12903bbf5d65a0e4e87c2161968b10d2e489652bb47001d82a9b028b4\"\n            ],\n            \"markers\": \"python_version >= '2.6' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==2.4.2\"\n        },\n        \"pypiwin32\": {\n            \"hashes\": [\n                \"sha256:67adf399debc1d5d14dffc1ab5acacb800da569754fafdc576b2a039485aa775\",\n                \"sha256:71be40c1fbd28594214ecaecb58e7aa8b708eabfa0125c8a109ebd51edbd776a\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"sys_platform == 'win32'\",\n            \"version\": \"==223\"\n        },\n        \"pytest\": {\n            \"hashes\": [\n                \"sha256:95d13143cc14174ca1a01ec68e84d76ba5d9d493ac02716fd9706c949a505210\",\n                \"sha256:b78fe2881323bd44fd9bd76e5317173d4316577e7b1cddebae9136a4495ec865\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==5.1.2\"\n        },\n        \"pytest-cov\": {\n            \"hashes\": [\n                \"sha256:2b097cde81a302e1047331b48cadacf23577e431b61e9c6f49a1170bbe3d3da6\",\n                \"sha256:e00ea4fdde970725482f1f35630d12f074e121a23801aabf2ae154ec6bdd343a\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==2.7.1\"\n        },\n        \"pywin32\": {\n            \"hashes\": [\n                \"sha256:0443e9bb196e72480f50cbddc2cf98fbb858a77d02e281ba79489ea3287b36e9\",\n                \"sha256:09bbe7cdb29eb40ab2e83f7a232eeeedde864be7a0622b70a90f456aad07a234\",\n                \"sha256:0d8e0f47808798d320c983574c36c49db642678902933a210edd40157d206fd0\",\n                \"sha256:0db7c9f4b93528afd080d35912a60be2f86a1d6c49c0a9cf9cedd106eed81ea3\",\n                \"sha256:749e590875051661ecefbd9dfa957a485016de0f25e43f5e70f888ef1e29587b\",\n                \"sha256:779d3e9d4b934f2445d2920c3941416d99af72eb7f7fd57a63576cc8aa540ad6\",\n                \"sha256:7c89d2c11a31c7aaa16dc4d25054d7e0e99d6f6b24193cf62c83850484658c87\",\n                \"sha256:81f7732b662c46274d7d8c411c905d53e71999cba95457a0686467c3ebc745ca\",\n                \"sha256:9db1fb8830bfa99c5bfd335d4482c14db5c6f5028db3b006787ef4200206242b\",\n                \"sha256:bd8d04835db28646d9e07fd0ab7c7b18bd90e89dfdc559e60389179495ef30da\",\n                \"sha256:fc6822a68afd79e97b015985dd455767c72009b81bcd18957068626c43f11e75\",\n                \"sha256:fe6cfc2045931866417740b575231c7e12d69d481643be1493487ad53b089959\"\n            ],\n            \"version\": \"==225\",\n            \"markers\": \"sys_platform == 'win32'\"\n        },\n        \"pywin32-ctypes\": {\n            \"hashes\": [\n                \"sha256:24ffc3b341d457d48e8922352130cf2644024a4ff09762a2261fd34c36ee5942\",\n                \"sha256:9dc2d991b3479cc2df15930958b674a48a227d5361d413827a4cfd0b5876fc98\"\n            ],\n            \"version\": \"==0.2.0\",\n            \"markers\": \"sys_platform == 'win32'\"\n        },\n        \"six\": {\n            \"hashes\": [\n                \"sha256:70e8a77beed4562e7f14fe23a786b54f6296e34344c23bc42f07b15018ff98e9\",\n                \"sha256:832dc0e10feb1aa2c68dcc57dbb658f1c7e65b9b61af69048abc87a2db00a0eb\"\n            ],\n            \"version\": \"==1.11.0\"\n        },\n        \"smmap2\": {\n            \"hashes\": [\n                \"sha256:0555a7bf4df71d1ef4218e4807bbf9b201f910174e6e08af2e138d4e517b4dde\",\n                \"sha256:29a9ffa0497e7f2be94ca0ed1ca1aa3cd4cf25a1f6b4f5f87f74b46ed91d609a\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==2.0.5\"\n        },\n        \"wcwidth\": {\n            \"hashes\": [\n                \"sha256:3df37372226d6e63e1b1e1eda15c594bca98a22d33a23832a90998faa96bc65e\",\n                \"sha256:f4ebe71925af7b40a864553f761ed559b43544f8f71746c2d756c7fe788ade7c\"\n            ],\n            \"version\": \"==0.1.7\"\n        },\n        \"zipp\": {\n            \"hashes\": [\n                \"sha256:3718b1cbcd963c7d4c5511a8240812904164b7f381b647143a89d3b98f9bcd8e\",\n                \"sha256:f06903e9f1f43b12d371004b4ac7b06ab39a44adc747266928ae6debfa7b3335\"\n            ],\n            \"markers\": \"python_version >= '2.7'\",\n            \"version\": \"==0.6.0\"\n        }\n    }\n}\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 4.1416015625,
          "content": ".. -*-restructuredtext-*-\n\nLegit: Git for Humans\n=====================\n\nInspired by GitHub for Mac.\n\n\nThe Concept\n-----------\n\n`GitHub for Mac <http://mac.github.com>`_ is not just a Git client.\n\nThis `comment <https://news.ycombinator.com/item?id=2684483>`_ on Hacker News\nsays it best:\n\n    They haven't re-created the git CLI tool in a GUI, they've created something different. They've created a tool that makes Git more accessible. Little things like auto-stashing when you switch branches will confuse git veterans, but it will make Git much easier to grok for newcomers because of the assumptions it makes about your Git workflow.\n\nWhy not bring this innovation back to the command line?\n\n\nThe Interface\n-------------\n\n``sw <branch>``\n    Switches to specified branch.\n    Defaults to current branch.\n    Automatically stashes and unstashes any changes. (alias: ``switch`` for git < 2.23)\n\n``sync [<branch>]``\n    Synchronizes the given branch. Defaults to current branch.\n    Stash, Fetch, Auto-Merge/Rebase, Push, and Unstash.\n    You can only sync published branches. (alias: ``sy``)\n\n``publish [<branch>]``\n    Publishes specified branch to the remote. (alias: ``pub``)\n\n``unpublish <branch>``\n    Removes specified branch from the remote. (alias: ``unp``)\n\n``undo``\n    Un-does the last commit in git history.  (alias: ``un``)\n\n``branches [<wildcard pattern>]``\n    Display a list of available branches.\n    Allows wildcard pattern matching of branch name.\n\n\nThe Installation\n----------------\n\n.. image:: https://img.shields.io/pypi/v/legit.svg\n    :target: https://pypi.python.org/pypi/legit/\n\n.. image:: https://img.shields.io/travis/frostming/legit/master.svg\n    :target: https://travis-ci.org/frostming/legit/\n\n.. image:: https://img.shields.io/coveralls/github/frostming/legit.svg\n    :target: https://coveralls.io/r/frostming/legit/\n\n.. image:: https://repl.it/badge/github/frostming/legit\n    :target: https://repl.it/github/frostming/legit\n\n\nFrom `PyPI <https://pypi.python.org/pypi/legit/>`_ with the Python package manager::\n\n    pip install legit\n\nOr download a standalone Windows executable from `GitHub Releases <https://github.com/frostming/legit/releases>`_.\n\nAlternatively, legit can be installed via Homebrew under macOS and Linux:\n\n    brew install legit\n\nSeveral system package distributions also include legit.\nAvailable legit version information can be found at the end of this README.\n\nTo install the cutting edge version from the git repository::\n\n    git clone https://github.com/frostming/legit.git\n    cd legit\n    python setup.py install\n\nNote: if you encountered `Permission denied`,\nprepend `sudo` before the `pip` or `python setup.py` command.\n\nYou'll then have the wonderful ``legit`` command available. Run it within\na repository.\n\nTo view usage and examples, run ``legit`` with no commands or options::\n\n    legit\n\nTo install the git aliases, run the following command::\n\n    legit --install\n\nTo uninstall the git aliases, run the following command::\n\n    legit --uninstall\n\n\nCommand Options\n---------------\n\nAll legit commands support ``--verbose`` and ``--fake`` options.\n\nIn order to view the git commands invoked by legit, use the ``--verbose`` option::\n\n    legit sync --verbose\n\nIf you want to see the git commands used by legit but don't want them invoked, use the ``--fake`` option::\n\n    legit publish --fake\n\nLegit Options\n-------------\n\nBy default, ``legit sync`` avoids a true merge.\nIf the merge is not fast-forward, legit will rebase.\n\nIn gitconfig, if ``legit.smartMerge`` is set to false,\nand ``pull.rebase`` is set to false or unset,\nthen legit will not rebase but merge.\n\nIf ``legit.smartMerge`` is set to false, and ``pull.ff`` is set to ``only``,\nthen if the merge is not fast-forward, legit will abort.\n\nCaveats\n-------\n\n- All remote operations are carried out by the remote identified in ``$ git config legit.remote remotename``\n- If a ``stash pop`` merge fails, Legit stops. I'd like to add checking for a failed merge, and undo the command with friendly error reporting.\n\nPackaging Status\n----------------\n\n.. image:: https://repology.org/badge/vertical-allrepos/legit-git-cli.svg\n    :alt: packaing status\n    :target: https://repology.org/project/legit-git-cli/versions\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "init-tests-after-clone.sh",
          "type": "blob",
          "size": 0.1611328125,
          "content": "#!/bin/bash -e\n\nif [ -d test_repo ]; then\n    echo \"test_repo already exists, do nothing.\"\n    exit 0\nfi\n\ngit clone https://github.com/frostming/marko.git test_repo\n"
        },
        {
          "name": "legit",
          "type": "tree",
          "content": null
        },
        {
          "name": "legit_r",
          "type": "blob",
          "size": 0.4208984375,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport legit.cli\n\nif __name__ == '__main__':\n    legit.cli.cli()\n\n# Packaging legit on Windows\n#\n# - Install git and Python 2.7\n# - Append python to PATH, e.g. `C:\\Python27` and `C:\\Python27\\Scripts`\n# - Install pyinstaller via pip\n# - run `python setup.py build`\n# - Rename dist/legit_r.exe to dist/legit.exe\n# - Test it with `legit branches`\n# - Upload legit.exe to GitHub releases\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.349609375,
          "content": "[bdist_wheel]\n# This flag says that the code is written to work on both Python 2 and Python\n# 3. If at all possible, it is good practice to do this. If you cannot, you\n# will need to generate wheels for each Python version that you support.\nuniversal=1\n\n[tool:pytest]\naddopts = -v -x --ignore=setup.py --cov=legit\nmarkers = \n  cli: Cli command related tests\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.576171875,
          "content": "#!/usr/bin/env python\n\nimport os\nimport sys\nimport re\nfrom codecs import open  # To use a consistent encoding\nfrom shutil import rmtree\n\nfrom setuptools import setup, Command  # Always prefer setuptools over distutils\n\nAPP_NAME = \"legit\"\n\nwith open(\"legit/core.py\") as f:\n    VERSION = re.findall(r'^__version__ *= *[\\'\"](.+?)[\\'\"]', f.read(), flags=re.M)[0]\n\nsettings = dict()\n\n\nclass UploadCommand(Command):\n    \"\"\"Support setup.py upload.\"\"\"\n\n    description = 'Build and publish the package.'\n    user_options = []\n\n    @staticmethod\n    def status(s):\n        \"\"\"Prints things in bold.\"\"\"\n        print('\\033[1m{}\\033[0m'.format(s))\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        try:\n            self.status('Removing previous builds...')\n            rmtree('dist')\n        except OSError:\n            pass\n\n        self.status('Building Source and Wheel (universal) distribution...')\n        os.system('{} setup.py sdist bdist_wheel --universal'.format(sys.executable))\n\n        self.status('Uploading the package to PyPI via Twine...')\n        os.system('twine upload dist/*')\n\n        self.status('Pushing git tags...')\n        os.system('git tag -a {0} -m \"v{0}\"'.format(VERSION))\n        os.system('git push --tags')\n\n        sys.exit()\n\n\nif sys.argv[-1] == \"build_manpage\":\n    os.system(\"rst2man.py README.rst > extra/man/legit.1\")\n    sys.exit()\n\n\n# Build Helper.\nif sys.argv[-1] == \"build\":\n    os.system(\"pyinstaller --onefile legit_r\")\n\nsettings.update(\n    name=APP_NAME,\n    version=VERSION,\n    description=\"Git for Humans.\",\n    long_description=open(\"README.rst\").read(),\n    author=\"Kenneth Reitz\",\n    author_email=\"me@kennethreitz.com\",\n    url=\"https://github.com/frostming/legit\",\n    packages=[\"legit\"],\n    install_requires=[\n        'click',\n        'clint',\n        'crayons',\n        'GitPython',\n    ],\n    license=\"BSD\",\n    python_requires=\">=3.5\",\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Intended Audience :: Developers\",\n        \"Natural Language :: English\",\n        \"License :: OSI Approved :: BSD License\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3 :: Only\",\n    ],\n    entry_points={\"console_scripts\": [\"legit = legit.cli:cli\"]},\n    cmdclass={\"publish\": UploadCommand}\n)\n\n\nsetup(**settings)\n"
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.3955078125,
          "content": "[tox]\nenvlist =\n    checkqa\n    py35\n    py36\n    py37\n    py38\n\n[coverage:run]\nsource = legit\nomit = **/*/tests/*\nbranch = true\ndata_file = .coverage\n\n[coverage:report]\nomit = **/*/tests/*\nexclude_lines =\n    coverage: omit\nshow_missing = True\n\n[testenv]\ncommands =\n    python -m pytest legit\ndeps =\n    coverage\n    pytest\n    pytest-cov\n\n[testenv:checkqa]\ncommands =\n    flake8 legit\ndeps =\n    flake8\n"
        }
      ]
    }
  ]
}