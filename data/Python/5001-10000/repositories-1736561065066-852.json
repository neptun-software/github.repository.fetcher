{
  "metadata": {
    "timestamp": 1736561065066,
    "page": 852,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "PaddlePaddle/PaddleX",
      "stars": 5038,
      "defaultBranch": "release/3.0-beta2",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.1630859375,
          "content": "# Paddle套件仓库\npaddlex/repo_manager/repos/*\n\n# paddlemodel\n*.log\n*.pdparams\n.pdopt\ndistributed_train_logs\n\n# IDE \n.vscode\n\n# Mac\n*.DS_Store\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\n./test_output\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.3935546875,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.6.0\n    hooks:\n    -   id: check-added-large-files\n        args: ['--maxkb=512']\n    -   id: check-case-conflict\n    -   id: check-merge-conflict\n    -   id: check-symlinks\n    -   id: detect-private-key\n    -   id: end-of-file-fixer\n    -   id: trailing-whitespace\n        files: \\.(md|c|cc|cxx|cpp|cu|h|hpp|hxx|py)$\n-   repo: https://github.com/Lucas-C/pre-commit-hooks\n    rev: v1.5.1\n    hooks:\n    -   id: remove-crlf\n    -   id: remove-tabs\n        files: \\.(md|c|cc|cxx|cpp|cu|h|hpp|hxx|py)$\n-   repo: local\n    hooks:\n    -   id: clang-format\n        name: clang-format\n        description: Format files with ClangFormat\n        entry: bash .precommit/clang_format.hook -i\n        language: system\n        files: \\.(c|cc|cxx|cpp|cu|h|hpp|hxx|cuh|proto)$\n# For Python files\n-   repo: https://github.com/psf/black.git\n    rev: 24.4.2\n    hooks:\n    -   id: black\n        files: (.*\\.(py|pyi|bzl)|BUILD|.*\\.BUILD|WORKSPACE)$\n\n# Flake8\n-   repo: https://github.com/pycqa/flake8\n    rev: 7.0.0\n    hooks:\n    -   id: flake8\n        args:\n            - --count\n            - --select=E9,F63,F7,F82,E721\n            - --show-source\n            - --statistics\n\n# check license\n-   repo: local\n    hooks:\n    -   id: check-custom\n        name: Check Custom\n        entry: python .precommit/check_custom.py\n        language: python\n        files: \\.py$\n"
        },
        {
          "name": ".precommit",
          "type": "tree",
          "content": null
        },
        {
          "name": ".style.yapf",
          "type": "blob",
          "size": 0.046875,
          "content": "[style]\nbased_on_style = pep8\ncolumn_limit = 80\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n   1. Definitions.\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n   Copyright [yyyy] [name of copyright owner]\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 49.5458984375,
          "content": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cuicheng01/PaddleX_doc_images/main/images/logo.png\" width=\"735\" height =\"200\" alt=\"PaddleX\" align=\"middle\" />\n</p>\n\n<p align=\"center\">\n    <a href=\"./LICENSE\"><img src=\"https://img.shields.io/badge/License-Apache%202-red.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/Python-3.8%2C%203.9%2C%203.10-blue.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/OS-Linux%2C%20Windows%2C%20Mac-orange.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/Hardware-CPU%2C%20GPU%2C%20XPU%2C%20NPU%2C%20MLU%2C%20DCU-yellow.svg\"></a>\n</p>\n\n<h4 align=\"center\">\n  <a href=#-特性>🌟 特性</a> | <a href=https://aistudio.baidu.com/pipeline/mine>🌐 在线体验</a>｜<a href=#️-快速开始>🚀 快速开始</a> | <a href=https://paddlepaddle.github.io/PaddleX/latest/index.html> 📖 文档</a> | <a href=#-能力支持> 🔥能力支持</a> | <a href=https://paddlepaddle.github.io/PaddleX/latest/support_list/models_list.html> 📋 模型列表</a>\n\n</h4>\n\n<h5 align=\"center\">\n  <a href=\"README.md\">🇨🇳 简体中文</a> | <a href=\"README_en.md\">🇬🇧 English</a></a>\n</h5>\n\n## 🔍 简介\n\nPaddleX 3.0 是基于飞桨框架构建的低代码开发工具，它集成了众多**开箱即用的预训练模型**，可以实现模型从训练到推理的**全流程开发**，支持国内外**多款主流硬件**，助力AI 开发者进行产业实践。\n\n|                                                            [**通用图像分类**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_classification.html)                                                            |                                                            [**图像多标签分类**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.html)                                                            |                                                            [**通用目标检测**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/object_detection.html)                                                            |                                                            [**通用实例分割**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/instance_segmentation.html)                                                            |\n|:--------------------------------------------------------------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------------------------:|\n| <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/b302cd7e-e027-4ea6-86d0-8a4dd6d61f39\" height=\"126px\" width=\"180px\"> | <img src=\"https://raw.githubusercontent.com/cuicheng01/PaddleX_doc_images/main/images/multilabel_cls.png\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/099e2b00-0bbe-4b20-9c5a-96b69e473bd2\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/09f683b4-27df-4c24-b8a7-84da20fdd182\" height=\"126px\" width=\"180px\"> |\n|                                                              [**通用语义分割**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.html)                                                               |                                                            [**图像异常检测**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.html)                                                            |                                                         [ **通用OCR**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/OCR.html)                                                          |                                                          [**通用表格识别**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/table_recognition.html)                                                          |\n| <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/02637f8c-f248-415b-89ab-1276505f198c\" height=\"126px\" width=\"180px\"> | <img src=\"https://raw.githubusercontent.com/cuicheng01/PaddleX_doc_images/main/images/image_anomaly_detection.png\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/1ef48536-48d4-484b-a6fb-0d6631ba2386\" height=\"126px\" width=\"180px\"> |  <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/1e798e05-dee7-4b41-9cc4-6708b6014efa\" height=\"126px\" width=\"180px\"> |\n|                                                              [**文本图像智能分析**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.html)                                                              |                                                            [**时序预测**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.html)                                                            |                                                              [**时序异常检测**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.html)                                                              |                                                         [**时序分类**](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_classification.html)                                                         |\n| <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/e3d97f4e-ab46-411c-8155-494c61492b0a\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/6e897bf6-35fe-45e6-a040-e9a1a20cfdf2\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/c54c66cc-da4f-4631-877b-43b0fbb192a6\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/0ce925b2-3776-4dde-8ce0-5156d5a2476e\" height=\"126px\" width=\"180px\"> |\n\n## 🌟 特性\n  🎨 **模型丰富一键调用**：将覆盖文本图像智能分析、OCR、目标检测、时序预测等多个关键领域的 **200+ 飞桨模型**整合为 **20 条模型产线**，通过极简的 Python API 一键调用，快速体验模型效果。同时支持 **20+ 单功能模块**，方便开发者进行模型组合使用。\n\n  🚀 **提高效率降低门槛**：实现基于统一命令和图形界面的模型**全流程开发**，打造大小模型结合、大模型半监督学习和多模型融合的[**8 条特色模型产线**](https://aistudio.baidu.com/intro/paddlex)，大幅度降低迭代模型的成本。\n\n  🌐 **多种场景灵活部署**：支持**高性能部署**、**服务化部署**和**端侧部署**等多种部署方式，确保不同应用场景下模型的高效运行和快速响应。\n\n  🔧 **主流硬件高效支持**：支持英伟达 GPU、昆仑芯、昇腾和寒武纪等**多种主流硬件**的无缝切换，确保高效运行。\n\n## 📣 近期更新\n\n🔥🔥《 PaddleX小目标检测全流程解决方案 》，支持遥感分析、智能监控、智慧交通多领域高效应用。自研特色模型 PP-YOLOE-SOD 基于 PP-YOLOE 引入 Transformer encoder 模块，兼顾推理耗时与精度平衡。针对 SOD 重构 DFL 回归算法，允许回归头预测负值，GT Box 匹配正样本预测点范围更宽。创新性提出基于数据集 GT Box 分布设置 DFL 超参数 reg_max，避免训练时引入过多噪音。**12月19日（周四）19：00**直播为您深度解析小目标检测产线在精准检测与定位微小物体上的强大优势与低代码开发范式。 [报名链接](https://www.wjx.top/vm/OGldg4K.aspx?udsid=930059)\n\n🔥🔥 **2024.11.15**，PaddleX 3.0 Beta2 开源版正式发布，全面适配 PaddlePaddle 3.0b2 版本。**新增通用图像识别、人脸识别、车辆属性识别和行人属性识别产线，同时新增 42 个模型开发全流程适配昇腾 910B，并全面支持[GitHub 站点文档](https://paddlepaddle.github.io/PaddleX/latest/index.html)。**\n\n🔥🔥 **2024.9.30**，PaddleX 3.0 Beta1 开源版正式发布，提供 **200+ 模型** 通过极简的 Python API 一键调用；实现基于统一命令的模型全流程开发，并开源 **PP-ChatOCRv3** 特色模型产线基础能力；支持 **100+ 模型高性能推理和服务化部署**（持续迭代中），**4条模型产线8个重点视觉模型端侧部署**；**100+ 模型开发全流程适配昇腾 910B**，**39+ 模型开发全流程适配昆仑芯和寒武纪**。\n\n🔥 **2024.6.27**，PaddleX 3.0 Beta 开源版正式发布，支持以低代码的方式在本地端使用多种主流硬件进行产线和模型开发。\n\n🔥 **2024.3.25**，PaddleX 3.0 云端发布，支持在 AI Studio 星河社区 以零代码的方式【创建产线】使用。\n\n\n ## 🔠 模型产线说明\n\n **PaddleX 致力于实现产线级别的模型训练、推理与部署。模型产线是指一系列预定义好的、针对特定AI任务的开发流程，其中包含能够独立完成某类任务的单模型（单功能模块）组合。**\n\n\n ## 📊 能力支持\n\n\nPaddleX的各个产线均支持本地**快速推理**，部分模型支持在[AI Studio星河社区](https://aistudio.baidu.com/overview)上进行**在线体验**，您可以快速体验各个产线的预训练模型效果，如果您对产线的预训练模型效果满意，可以直接对产线进行[高性能推理](https://paddlepaddle.github.io/PaddleX/latest/pipeline_deploy/high_performance_inference.html)/[服务化部署](https://paddlepaddle.github.io/PaddleX/latest/pipeline_deploy/service_deploy.html)/[端侧部署](https://paddlepaddle.github.io/PaddleX/latest/pipeline_deploy/edge_deploy.html)，如果不满意，您也可以使用产线的**二次开发**能力，提升效果。完整的产线开发流程请参考[PaddleX产线使用概览](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/pipeline_develop_guide.html)或各产线使用[教程](#-文档)。\n\n\n此外，PaddleX在[AI Studio星河社区](https://aistudio.baidu.com/overview)为开发者提供了基于[云端图形化开发界面](https://aistudio.baidu.com/pipeline/mine)的全流程开发工具, 点击【创建产线】，选择对应的任务场景和模型产线，就可以开启全流程开发。详细请参考[教程《零门槛开发产业级AI模型》](https://aistudio.baidu.com/practical/introduce/546656605663301)\n\n<table >\n    <tr>\n        <th>模型产线</th>\n        <th>在线体验</th>\n        <th>快速推理</th>\n        <th>高性能推理</th>\n        <th>服务化部署</th>\n        <th>端侧部署</th>\n        <th>二次开发</th>\n        <th><a href = \"https://aistudio.baidu.com/pipeline/mine\">星河零代码产线</a></td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/OCR.html\">通用OCR</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/91660/webUI?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.html\">文档场景信息抽取v3</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/182491/webUI?source=appCenter\">链接</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/table_recognition.html\">通用表格识别</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/91661?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/object_detection.html\">通用目标检测</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/70230/webUI?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/instance_segmentation.html\">通用实例分割</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/100063/webUI?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_classification.html\">通用图像分类</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/100061/webUI?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.html\">通用语义分割</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/100062/webUI?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.html\">时序预测</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/105706/webUI?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.html\">时序异常检测</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/105708/webUI?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_classification.html\">时序分类</a></td>\n        <td><a href = \"https://aistudio.baidu.com/community/app/105707/webUI?source=appMineRecent\">链接</a></td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n        <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/small_object_detection.html\">小目标检测</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n        <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.html\">图像多标签分类</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.html\">图像异常检测</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/layout_parsing.html\">通用版面解析</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/formula_recognition.html\">公式识别</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/seal_recognition.html\">印章文本识别</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/general_image_recognition.html\">通用图像识别</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/pedestrian_attribute_recognition.html\">行人属性识别</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/vehicle_attribute_recognition.html\">车辆属性识别</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/face_recognition.html\">人脸识别</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n\n\n</table>\n\n> ❗注：以上功能均基于 GPU/CPU 实现。PaddleX 还可在昆仑芯、昇腾、寒武纪和海光等主流硬件上进行快速推理和二次开发。下表详细列出了模型产线的支持情况，具体支持的模型列表请参阅[模型列表(昆仑芯XPU)](https://paddlepaddle.github.io/PaddleX/latest/support_list/model_list_xpu.html)/[模型列表(昇腾NPU)](https://paddlepaddle.github.io/PaddleX/latest/support_list/model_list_npu.html)/[模型列表(寒武纪MLU)](https://paddlepaddle.github.io/PaddleX/latest/support_list/model_list_mlu.html)/[模型列表(海光DCU)](https://paddlepaddle.github.io/PaddleX/latest/support_list/model_list_dcu.html)。我们正在适配更多的模型，并在主流硬件上推动高性能和服务化部署的实施。\n\n🔥🔥 **国产化硬件能力支持**\n\n<table>\n  <tr>\n    <th>模型产线</th>\n    <th>昇腾 910B</th>\n    <th>昆仑芯 R200/R300</th>\n    <th>寒武纪 MLU370X8</th>\n    <th>海光 Z100</th>\n  </tr>\n  <tr>\n    <td>通用OCR</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>通用表格识别</td>\n    <td>✅</td>\n    <td>🚧</td>\n    <td>🚧</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>通用目标检测</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>通用实例分割</td>\n    <td>✅</td>\n    <td>🚧</td>\n    <td>✅</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>通用图像分类</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n  </tr>\n  <tr>\n    <td>通用语义分割</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n  </tr>\n  <tr>\n    <td>时序预测</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>时序异常检测</td>\n    <td>✅</td>\n    <td>🚧</td>\n    <td>🚧</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>时序分类</td>\n    <td>✅</td>\n    <td>🚧</td>\n    <td>🚧</td>\n    <td>🚧</td>\n  </tr>\n</table>\n\n## ⏭️ 快速开始\n\n### 🛠️ 安装\n\n> ❗安装 PaddleX 前请先确保您有基础的 **Python 运行环境**（注：当前支持Python 3.8 ～ Python 3.10下运行，更多Python版本适配中）。PaddleX 3.0-beta2 版本依赖的 PaddlePaddle 版本为 3.0.0b2。\n\n* **安装 PaddlePaddle**\n```bash\n# cpu\npython -m pip install paddlepaddle==3.0.0b2 -i https://www.paddlepaddle.org.cn/packages/stable/cpu/\n\n# gpu，该命令仅适用于 CUDA 版本为 11.8 的机器环境\npython -m pip install paddlepaddle-gpu==3.0.0b2 -i https://www.paddlepaddle.org.cn/packages/stable/cu118/\n\n# gpu，该命令仅适用于 CUDA 版本为 12.3 的机器环境\npython -m pip install paddlepaddle-gpu==3.0.0b2 -i https://www.paddlepaddle.org.cn/packages/stable/cu123/\n```\n> ❗ 更多飞桨 Wheel 版本请参考[飞桨官网](https://www.paddlepaddle.org.cn/install/quick?docurl=/documentation./docs/zh/install/pip/linux-pip.html)。\n\n\n* **安装PaddleX**\n\n```bash\npip install paddlex==3.0.0b2\n```\n\n> ❗ 更多安装方式参考 [PaddleX 安装教程](https://paddlepaddle.github.io/PaddleX/latest/installation/installation.html)\n\n### 💻 命令行使用\n\n一行命令即可快速体验产线效果，统一的命令行格式为：\n\n```bash\npaddlex --pipeline [产线名称] --input [输入图片] --device [运行设备]\n```\n\n只需指定三个参数：\n* `pipeline`：产线名称\n* `input`：待处理的输入文件（如图片）的本地路径或 URL\n* `device`: 使用的 GPU 序号（例如`gpu:0`表示使用第 0 块 GPU），也可选择使用 CPU（`cpu`）\n\n\n以通用 OCR 产线为例：\n```bash\npaddlex --pipeline OCR --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_ocr_002.png --device gpu:0\n```\n<details>\n  <summary><b>👉 点击查看运行结果 </b></summary>\n\n```bash\n{\n'input_path': '/root/.paddlex/predict_input/general_ocr_002.png',\n'dt_polys': [array([[161,  27],\n       [353,  22],\n       [354,  69],\n       [162,  74]], dtype=int16), array([[426,  26],\n       [657,  21],\n       [657,  58],\n       [426,  62]], dtype=int16), array([[702,  18],\n       [822,  13],\n       [824,  57],\n       [704,  62]], dtype=int16), array([[341, 106],\n       [405, 106],\n       [405, 128],\n       [341, 128]], dtype=int16)\n       ...],\n'dt_scores': [0.758478200014338, 0.7021546472698513, 0.8536622648391111, 0.8619181462164781, 0.8321051217096188, 0.8868756173427551, 0.7982964727675609, 0.8289939036796322, 0.8289428877522524, 0.8587063317632897, 0.7786755892491615, 0.8502032769081344, 0.8703346500042997, 0.834490931790065, 0.908291103353393, 0.7614978661708064, 0.8325774055997542, 0.7843421347676149, 0.8680889482955594, 0.8788859304537682, 0.8963341277518075, 0.9364654810069546, 0.8092413027028257, 0.8503743089091863, 0.7920740420391101, 0.7592224394793805, 0.7920547400069311, 0.6641757962457888, 0.8650289477605955, 0.8079483304467047, 0.8532207681055275, 0.8913377034754717],\n'rec_text': ['登机牌', 'BOARDING', 'PASS', '舱位', 'CLASS', '序号 SERIALNO.', '座位号', '日期 DATE', 'SEAT NO', '航班 FLIGHW', '035', 'MU2379', '始发地', 'FROM', '登机口', 'GATE', '登机时间BDT', '目的地TO', '福州', 'TAIYUAN', 'G11', 'FUZHOU', '身份识别IDNO', '姓名NAME', 'ZHANGQIWEI', 票号TKTNO', '张祺伟', '票价FARE', 'ETKT7813699238489/1', '登机口于起飞前10分钟关闭GATESCLOSE10MINUTESBEFOREDEPARTURETIME'],\n'rec_score': [0.9985831379890442, 0.999696917533874512, 0.9985735416412354, 0.9842517971992493, 0.9383274912834167, 0.9943678975105286, 0.9419361352920532, 0.9221674799919128, 0.9555020928382874, 0.9870321154594421, 0.9664073586463928, 0.9988052248954773, 0.9979352355003357, 0.9985110759735107, 0.9943482875823975, 0.9991195797920227, 0.9936401844024658, 0.9974591135978699, 0.9743705987930298, 0.9980487823486328, 0.9874696135520935, 0.9900962710380554, 0.9952947497367859, 0.9950481653213501, 0.989926815032959, 0.9915552139282227, 0.9938777685165405, 0.997239887714386, 0.9963340759277344, 0.9936134815216064, 0.97223961353302]}\n```\n\n可视化结果如下：\n\n![alt text](https://raw.githubusercontent.com/cuicheng01/PaddleX_doc_images/main/images/boardingpass.png)\n\n</details>\n\n其他产线的命令行使用，只需将 `pipeline` 参数调整为相应产线的名称。下面列出了每个产线对应的命令：\n\n<details>\n  <summary><b>👉 更多产线的命令行使用</b></summary>\n\n| 产线名称           | 使用命令                                                                                                                                                                                    |\n|--------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 通用图像分类       | `paddlex --pipeline image_classification --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_image_classification_001.jpg --device gpu:0`                    |\n| 通用目标检测       | `paddlex --pipeline object_detection --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_object_detection_002.png --device gpu:0`                            |\n| 通用实例分割       | `paddlex --pipeline instance_segmentation --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_instance_segmentation_004.png --device gpu:0`                  |\n| 通用语义分割       | `paddlex --pipeline semantic_segmentation --input https://paddle-model-ecology.bj.bcebos.com/paddlex/PaddleX3.0/application/semantic_segmentation/makassaridn-road_demo.png --device gpu:0` |\n| 图像多标签分类 | `paddlex --pipeline multi_label_image_classification --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_image_classification_001.jpg --device gpu:0`        |\n| 小目标检测         | `paddlex --pipeline small_object_detection --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/small_object_detection.jpg --device gpu:0`                            |\n| 图像异常检测       | `paddlex --pipeline anomaly_detection --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/uad_grid.png --device gpu:0`                                              |\n| 行人属性识别       | `paddlex --pipeline pedestrian_attribute_recognition --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/pedestrian_attribute_002.jpg --device gpu:0`                                              |\n| 车辆属性识别       | `paddlex --pipeline vehicle_attribute_recognition --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/vehicle_attribute_002.jpg --device gpu:0`                                              |\n| 通用OCR            | `paddlex --pipeline OCR --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_ocr_002.png --device gpu:0`                                                      |\n| 通用表格识别       | `paddlex --pipeline table_recognition --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/table_recognition.jpg --device gpu:0`                                      |\n| 通用版面解析       | `paddlex --pipeline layout_parsing --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/demo_paper.png --device gpu:0`                                      |\n| 公式识别       | `paddlex --pipeline formula_recognition --input https://paddle-model-ecology.bj.bcebos.com/paddlex/demo_image/general_formula_recognition.png --device gpu:0`                                      |\n| 印章文本识别       | `paddlex --pipeline seal_recognition --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/seal_text_det.png --device gpu:0`                                      |\n| 时序预测       | `paddlex --pipeline ts_fc --input https://paddle-model-ecology.bj.bcebos.com/paddlex/ts/demo_ts/ts_fc.csv --device gpu:0`                                                                   |\n| 时序异常检测   | `paddlex --pipeline ts_ad --input https://paddle-model-ecology.bj.bcebos.com/paddlex/ts/demo_ts/ts_ad.csv --device gpu:0`                                                                    |\n| 时序分类       | `paddlex --pipeline ts_cls --input https://paddle-model-ecology.bj.bcebos.com/paddlex/ts/demo_ts/ts_cls.csv --device gpu:0`                                                                 |\n\n\n</details>\n\n### 📝 Python 脚本使用\n\n几行代码即可完成产线的快速推理，统一的 Python 脚本格式如下：\n```python\nfrom paddlex import create_pipeline\n\npipeline = create_pipeline(pipeline=[产线名称])\noutput = pipeline.predict([输入图片名称])\nfor res in output:\n    res.print()\n    res.save_to_img(\"./output/\")\n    res.save_to_json(\"./output/\")\n```\n执行了如下几个步骤：\n\n* `create_pipeline()` 实例化产线对象\n* 传入图片并调用产线对象的 `predict` 方法进行推理预测\n* 对预测结果进行处理\n\n其他产线的 Python 脚本使用，只需将 `create_pipeline()` 方法的 `pipeline` 参数调整为相应产线的名称。下面列出了每个产线对应的参数名称及详细的使用解释：\n<details>\n  <summary><b>👉 更多产线的Python脚本使用</b></summary>\n\n| 产线名称           | 对应参数                           | 详细说明                                                                                                                                                         |\n|--------------------|------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 文档场景信息抽取v3   | `PP-ChatOCRv3-doc`                 | [文档场景信息抽取v3产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.html#22-本地体验) |\n| 通用图像分类       | `image_classification`             | [通用图像分类产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_classification.html#222-python脚本方式集成)                                |\n| 通用目标检测       | `object_detection`                 | [通用目标检测产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/object_detection.html#222-python脚本方式集成)                                    |\n| 通用实例分割       | `instance_segmentation`            | [通用实例分割产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/instance_segmentation.html#222-python脚本方式集成)                               |\n| 通用语义分割       | `semantic_segmentation`            | [通用语义分割产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.html#222-python脚本方式集成)                               |\n| 图像多标签分类 | `multi_label_image_classification` | [图像多标签分类产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.html#22-python脚本方式集成)               |\n| 小目标检测         | `small_object_detection`           | [小目标检测产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/small_object_detection.html#22-python脚本方式集成)                                 |\n| 图像异常检测       | `anomaly_detection`                | [图像异常检测产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.html#22-python脚本方式集成)                              |\n| 通用图像识别       | `PP-ShiTuV2`                | [通用图像识别Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/general_image_recognition.html#22-python脚本方式集成)                              |\n| 人脸识别       | `face_recognition`                | [人脸识别Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/face_recognition.html#22-python脚本方式集成)                              |\n| 车辆属性识别       | `vehicle_attribute_recognition`                | [车辆属性识别产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/vehicle_attribute_recognition.html#22-python脚本方式集成)                              |\n| 行人属性识别       | `pedestrian_attribute_recognition`                | [行人属性识别产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/pedestrian_attribute_recognition.html#22-python脚本方式集成)                              |\n| 通用OCR            | `OCR`                              | [通用OCR产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/OCR.html#222-python脚本方式集成)                                                     |\n| 通用表格识别       | `table_recognition`                | [通用表格识别产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/table_recognition.html#22-python脚本方式集成)                                   |\n| 通用版面解析       | `layout_parsing`                | [通用版面解析产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/layout_parsing.html#22-python脚本方式集成)                                   |\n| 公式识别       | `formula_recognition`                | [公式识别产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/formula_recognition.html#22-python脚本方式集成)                                   |\n| 印章文本识别       | `seal_recognition`                | [印章文本识别产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/seal_recognition.html#22-python脚本方式集成)                                   |\n| 时序预测       | `ts_fc`                            | [时序预测产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.html#222-python脚本方式集成)                    |\n| 时序异常检测   | `ts_ad`                            | [时序异常检测产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.html#222-python脚本方式集成)          |\n| 时序分类       | `ts_cls`                           | [时序分类产线Python脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_classification.html#222-python脚本方式集成)                 |\n\n</details>\n\n\n## 📖 文档\n<details>\n  <summary> <b> ⬇️ 安装 </b></summary>\n\n  * [📦 PaddlePaddle 安装教程](https://paddlepaddle.github.io/PaddleX/latest/installation/paddlepaddle_install.html)\n  * [📦 PaddleX 安装教程](https://paddlepaddle.github.io/PaddleX/latest/installation/installation.html)\n\n\n</details>\n\n<details open>\n<summary> <b> 🔥 产线使用 </b></summary>\n\n* [📑 PaddleX 产线使用概览](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/pipeline_develop_guide.html)\n\n* <details open>\n    <summary> <b> 📝 文本图像智能分析 </b></summary>\n\n   * [📄 文档场景信息抽取v3产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.html)\n  </details>\n\n* <details open>\n    <summary> <b> 🔍 OCR </b></summary>\n\n    * [📜 通用 OCR 产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/OCR.html)\n    * [📊 通用表格识别产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/table_recognition.html)\n    * [📄 通用版面解析产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/layout_parsing.html)\n    * [📐 公式识别产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/formula_recognition.html)\n    * [📝 印章文本识别产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/ocr_pipelines/seal_recognition.html)\n  </details>\n\n* <details open>\n    <summary> <b> 🎥 计算机视觉 </b></summary>\n\n   * [🖼️ 通用图像分类产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_classification.html)\n   * [🎯 通用目标检测产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/object_detection.html)\n   * [📋 通用实例分割产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/instance_segmentation.html)\n   * [🗣️ 通用语义分割产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.html)\n   * [🏷️ 图像多标签分类产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.html)\n   * [🔍 小目标检测产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/small_object_detection.html)\n   * [🖼️ 图像异常检测产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.html)\n   * [🖼️ 通用图像识别产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/general_image_recognition.html)\n   * [🆔人脸识别产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/face_recognition.html)\n   * [🚗 车辆属性识别产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/vehicle_attribute_recognition.html)\n   * [🚶‍♀️ 行人属性识别产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/cv_pipelines/pedestrian_attribute_recognition.html)\n\n\n* <details open>\n    <summary> <b> ⏱️ 时序分析</b> </summary>\n\n   * [📈 时序预测产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.html)\n   * [📉 时序异常检测产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.html)\n   * [🕒 时序分类产线使用教程](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/tutorials/time_series_pipelines/time_series_classification.html)\n  </details>\n\n\n\n* <details>\n    <summary> <b>🔧 相关说明文件</b> </summary>\n\n   * [🖥️ PaddleX 产线命令行使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/instructions/pipeline_CLI_usage.html)\n   * [📝 PaddleX 产线 Python 脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/pipeline_usage/instructions/pipeline_python_API.html)\n  </details>\n\n</details>\n\n<details open>\n<summary> <b> ⚙️ 单功能模块使用 </b></summary>\n\n* <details open>\n  <summary> <b> 🔍 OCR </b></summary>\n\n  * [📝 文本检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/ocr_modules/text_detection.html)\n  * [🔖 印章文本检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/ocr_modules/seal_text_detection.html)\n  * [🔠 文本识别模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/ocr_modules/text_recognition.html)\n  * [🗺️ 版面区域检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/ocr_modules/layout_detection.html)\n  * [📊 表格结构识别模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/ocr_modules/table_structure_recognition.html)\n  * [📄 文档图像方向分类使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/ocr_modules/doc_img_orientation_classification.html)\n  * [🔧 文本图像矫正模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/ocr_modules/text_image_unwarping.html)\n  * [📐 公式识别模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/ocr_modules/formula_recognition.html)\n\n  </details>\n\n* <details open>\n  <summary> <b> 🖼️ 图像分类 </b></summary>\n\n  * [📂 图像分类模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/image_classification.html)\n  * [🏷️ 图像多标签分类模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/image_multilabel_classification.html)\n  * [👤 行人属性识别模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/pedestrian_attribute_recognition.html)\n  * [🚗 车辆属性识别模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/vehicle_attribute_recognition.html)\n\n  </details>\n\n* <details open>\n  <summary> <b> 🏞️ 图像特征 </b></summary>\n\n    * [🔗 图像特征模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/image_feature.html)\n    * [😁 人脸特征模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/face_feature.html)\n  </details>\n\n* <details open>\n  <summary> <b> 🎯 目标检测 </b></summary>\n\n  * [🎯 目标检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/object_detection.html)\n  * [📏 小目标检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/small_object_detection.html)\n  * [🧑‍🤝‍🧑 人脸检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/face_detection.html)\n  * [🔍 主体检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/mainbody_detection.html)\n  * [🚶 行人检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/human_detection.html)\n  * [🚗 车辆检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/vehicle_detection.html)\n\n  </details>\n\n* <details open>\n  <summary> <b> 🖼️ 图像分割 </b></summary>\n\n  * [🗺️ 语义分割模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/semantic_segmentation.html)\n  * [🔍 实例分割模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/instance_segmentation.html)\n  * [🚨 图像异常检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/cv_modules/anomaly_detection.html)\n  </details>\n\n* <details open>\n  <summary> <b> ⏱️ 时序分析 </b></summary>\n\n  * [📈 时序预测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/time_series_modules/time_series_forecasting.html)\n  * [🚨 时序异常检测模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/time_series_modules/time_series_anomaly_detection.html)\n  * [🕒 时序分类模块使用教程](https://paddlepaddle.github.io/PaddleX/latest/module_usage/tutorials/time_series_modules/time_series_classification.html)\n  </details>\n\n* <details>\n  <summary> <b> 📄 相关说明文件 </b></summary>\n\n  * [📝 PaddleX 单模型 Python 脚本使用说明](https://paddlepaddle.github.io/PaddleX/latest/module_usage/instructions/model_python_API.html)\n  * [📝 PaddleX 通用模型配置文件参数说明](https://paddlepaddle.github.io/PaddleX/latest/module_usage/instructions/config_parameters_common.html)\n  * [📝 PaddleX 时序任务模型配置文件参数说明](https://paddlepaddle.github.io/PaddleX/latest/module_usage/instructions/config_parameters_time_series.html)\n  </details>\n\n</details>\n\n<details open>\n  <summary> <b> 🏗️ 模型产线部署 </b></summary>\n\n  * [🚀 PaddleX 高性能推理指南](https://paddlepaddle.github.io/PaddleX/latest/pipeline_deploy/high_performance_inference.html)\n  * [🖥️ PaddleX 服务化部署指南](https://paddlepaddle.github.io/PaddleX/latest/pipeline_deploy/service_deploy.html)\n  * [📱 PaddleX 端侧部署指南](https://paddlepaddle.github.io/PaddleX/latest/pipeline_deploy/edge_deploy.html)\n\n</details>\n<details open>\n  <summary> <b> 🖥️ 多硬件使用 </b></summary>\n\n  * [🔧 多硬件使用指南](https://paddlepaddle.github.io/PaddleX/latest/other_devices_support/multi_devices_use_guide.html)\n  * [🖲️ 海光 DCU 飞桨安装教程](https://paddlepaddle.github.io/PaddleX/latest/other_devices_support/paddlepaddle_install_DCU.html)\n  * [🔲 寒武纪 MLU 飞桨安装教程](https://paddlepaddle.github.io/PaddleX/latest/other_devices_support/paddlepaddle_install_MLU.html)\n  * [💻 昇腾 NPU 飞桨安装教程](https://paddlepaddle.github.io/PaddleX/latest/other_devices_support/paddlepaddle_install_NPU.html)\n  * [🔌 昆仑 XPU 飞桨安装教程](https://paddlepaddle.github.io/PaddleX/latest/other_devices_support/paddlepaddle_install_XPU.html)\n\n</details>\n\n<details>\n  <summary> <b> 📝 产业实践教程&范例 </b></summary>\n\n* [📑 文档场景信息抽取v3模型产线———论文文献信息抽取应用教程](./docs/practical_tutorials/document_scene_information_extraction(layout_detection)_tutorial.md)\n* [📑 文档场景信息抽取v3模型产线———印章信息抽取应用教程](./docs/practical_tutorials/document_scene_information_extraction(seal_recognition)_tutorial.md)\n* [🖼️ 通用图像分类模型产线———垃圾分类教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/image_classification_garbage_tutorial.html)\n* [🧩 通用实例分割模型产线———遥感图像实例分割教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/instance_segmentation_remote_sensing_tutorial.html)\n* [👥 通用目标检测模型产线———行人跌倒检测教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/object_detection_fall_tutorial.html)\n* [👗 通用目标检测模型产线———服装时尚元素检测教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/object_detection_fashion_pedia_tutorial.html)\n* [🚗 通用 OCR 模型产线———车牌识别教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/ocr_det_license_tutorial.html)\n* [✍️ 通用 OCR 模型产线———手写中文识别教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/ocr_rec_chinese_tutorial.html)\n* [🗣️ 通用语义分割模型产线———车道线分割教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/semantic_segmentation_road_tutorial.html)\n* [🛠️ 时序异常检测模型产线———设备异常检测应用教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/ts_anomaly_detection.html)\n* [🎢 时序分类模型产线———心跳监测时序数据分类应用教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/ts_classification.html)\n* [🔋 时序预测模型产线———用电量长期预测应用教程](https://paddlepaddle.github.io/PaddleX/latest/practical_tutorials/ts_forecast.html)\n\n  </details>\n\n## 🤔 FAQ\n\n关于我们项目的一些常见问题解答，请参考[FAQ](https://paddlepaddle.github.io/PaddleX/latest/FAQ.html)。如果您的问题没有得到解答，请随时在 [Issues](https://github.com/PaddlePaddle/PaddleX/issues) 中提出\n## 💬 Discussion\n\n我们非常欢迎并鼓励社区成员在 [Discussions](https://github.com/PaddlePaddle/PaddleX/discussions) 板块中提出问题、分享想法和反馈。无论您是想要报告一个 bug、讨论一个功能请求、寻求帮助还是仅仅想要了解项目的最新动态，这里都是一个绝佳的平台。\n\n\n## 📄 许可证书\n\n本项目的发布受 [Apache 2.0 license](./LICENSE) 许可认证。\n"
        },
        {
          "name": "README_en.md",
          "type": "blob",
          "size": 51.52734375,
          "content": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cuicheng01/PaddleX_doc_images/main/images/logo.png\" width=\"735\" height =\"200\" alt=\"PaddleX\" align=\"middle\" />\n</p>\n\n<p align=\"center\">\n    <a href=\"./LICENSE\"><img src=\"https://img.shields.io/badge/License-Apache%202-red.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/Python-3.8%2C%203.9%2C%203.10-blue.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/OS-Linux%2C%20Windows%2C%20Mac-orange.svg\"></a>\n    <a href=\"\"><img src=\"https://img.shields.io/badge/hardware-CPU%2C%20GPU%2C%20XPU%2C%20NPU%2C%20MLU%2C%20DCU-yellow.svg\"></a>\n</p>\n\n<h4 align=\"center\">\n  <a href=#-why-paddlex->🌟 Features</a> | <a href=https://aistudio.baidu.com/pipeline/mine>🌐  Online Experience</a>｜<a href=#️-quick-start>🚀  Quick Start</a> | <a href=https://addlepaddle.github.io/PaddleX/latest/en/index.html> 📖 Documentation</a> | <a href=#-what-can-paddlex-do> 🔥Capabilities</a> | <a href=https://paddlepaddle.github.io/PaddleX/latest/en/support_list/models_list.html> 📋 Models</a>\n</h4>\n\n<h5 align=\"center\">\n  <a href=\"README.md\">🇨🇳 Simplified Chinese</a> | <a href=\"README_en.md\">🇬🇧 English</a></a>\n</h5>\n\n## 🔍 Introduction\n\nPaddleX 3.0 is a low-code development tool for AI models built on the PaddlePaddle framework. It integrates numerous **ready-to-use pre-trained models**, enabling **full-process development** from model training to inference, supporting **a variety of mainstream hardware** both domestic and international, and aiding AI developers in industrial practice.\n\n\n|                                                            [**Image Classification**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_classification.html)                                                            |                                                            [**Multi-label Image Classification**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.html)                                                            |                                                            [**Object Detection**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/object_detection.html)                                                            |                                                            [**Instance Segmentation**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/instance_segmentation.html)                                                            |\n|:--------------------------------------------------------------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------------------------:|:--------------------------------------------------------------------------------------------------------------------------------------:|\n| <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/b302cd7e-e027-4ea6-86d0-8a4dd6d61f39\" height=\"126px\" width=\"180px\"> | <img src=\"https://raw.githubusercontent.com/cuicheng01/PaddleX_doc_images/main/images/multilabel_cls.png\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/099e2b00-0bbe-4b20-9c5a-96b69e473bd2\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/09f683b4-27df-4c24-b8a7-84da20fdd182\" height=\"126px\" width=\"180px\"> |\n|                                                              [**Semantic Segmentation**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.html)                                                               |                                                            [**Image Anomaly Detection**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.html)                                                            |                                                          [**OCR**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/OCR.html)                                                          |                                                          [**Table Recognition**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/table_recognition.html)                                                          |\n| <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/02637f8c-f248-415b-89ab-1276505f198c\" height=\"126px\" width=\"180px\"> | <img src=\"https://raw.githubusercontent.com/cuicheng01/PaddleX_doc_images/main/images/image_anomaly_detection.png\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/1ef48536-48d4-484b-a6fb-0d6631ba2386\" height=\"126px\" width=\"180px\"> |  <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/1e798e05-dee7-4b41-9cc4-6708b6014efa\" height=\"126px\" width=\"180px\"> |\n|                                                              [**PP-ChatOCRv3-doc**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.html)                                                              |                                                            [**Time Series Forecasting**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.html)                                                            |                                                              [**Time Series Anomaly Detection**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.html)                                                              |                                                         [**Time Series Classification**](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_classification.html)                                                         |\n| <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/e3d97f4e-ab46-411c-8155-494c61492b0a\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/6e897bf6-35fe-45e6-a040-e9a1a20cfdf2\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/c54c66cc-da4f-4631-877b-43b0fbb192a6\" height=\"126px\" width=\"180px\"> | <img src=\"https://github.com/PaddlePaddle/PaddleX/assets/142379845/0ce925b2-3776-4dde-8ce0-5156d5a2476e\" height=\"126px\" width=\"180px\"> |\n\n\n\n## 🌟 Why PaddleX ?\n\n  🎨 **Rich Models One-click Call**: Integrate over **200 PaddlePaddle models** covering multiple key areas such as OCR, object detection, and time series forecasting into **19 pipelines**. Experience the model effects quickly through easy Python API calls. Also supports **more than 20 modules** for easy model combination use by developers.\n\n  🚀 **High Efficiency and Low barrier of entry**: Achieve model **full-process development** based on graphical interfaces and unified commands, creating **8 featured model pipelines** that combine large and small models, semi-supervised learning of large models, and multi-model fusion, greatly reducing the cost of iterating models.\n\n  🌐 **Flexible Deployment in Various Scenarios**: Support various deployment methods such as **high-performance inference**, **service deployment**, and **lite deployment** to ensure efficient operation and rapid response of models in different application scenarios.\n\n  🔧 **Efficient Support for Mainstream Hardware**: Support seamless switching of various mainstream hardware such as NVIDIA GPUs, Kunlun XPU, Ascend NPU, and Cambricon MLU to ensure efficient operation.\n\n## 📣 Recent Updates\n\n🔥🔥 **\"PaddleX Document Information Personalized Extraction Upgrade\"**, PP-ChatOCRv3 innovatively provides custom development functions for OCR models based on data fusion technology, offering stronger model fine-tuning capabilities. Millions of high-quality general OCR text recognition data are automatically integrated into vertical model training data at a specific ratio, solving the problem of weakened general text recognition capabilities caused by vertical model training in the industry. Suitable for practical scenarios in industries such as automated office, financial risk control, healthcare, education and publishing, and legal and government sectors. **October 24th (Thursday) 19:00** Join our live session for an in-depth analysis of the open-source version of PP-ChatOCRv3 and the outstanding advantages of PaddleX 3.0 Beta1 in terms of accuracy and speed. [Registration Link](https://www.wjx.top/vm/wpPu8HL.aspx?udsid=994465)\n\n> [❗ Get more courses for free](https://aistudio.baidu.com/education/group/info/32160)\n\n🔥🔥 **11.15, 2024**, PaddleX 3.0 Beta2 open source version is officially released, PaddleX 3.0 Beta2 is fully compatible with the PaddlePaddle 3.0b2 version. <b>This update introduces new pipelines for general image recognition, face recognition, vehicle attribute recognition, and pedestrian attribute recognition. We have also developed 42 new models to fully support the Ascend 910B, with extensive documentation available on [GitHub Pages](https://paddlepaddle.github.io/PaddleX/latest/en/index.html).</b>\n\n🔥🔥 **9.30, 2024**, PaddleX 3.0 Beta1 open source version is officially released, providing **more than 200 models** that can be called with a simple Python API; achieve model full-process development based on unified commands, and open source the basic capabilities of the **PP-ChatOCRv3** pipeline; support **more than 100 models for high-performance inference and service-oriented deployment** (iterating continuously), **more than 7 key visual models for edge-deployment**; **more than 70 models have been adapted for the full development process of Ascend 910B**, **more than 15 models have been adapted for the full development process of Kunlun chips and Cambricon**\n\n🔥 **6.27, 2024**, PaddleX 3.0 Beta open source version is officially released, supporting the use of various mainstream hardware for pipeline and model development in a low-code manner on the local side.\n\n🔥 **3.25, 2024**, PaddleX 3.0 cloud release, supporting the creation of pipelines in the AI Studio Galaxy Community in a zero-code manner.\n\n## 🔠 Explanation of Pipeline\nPaddleX is dedicated to achieving pipeline-level model training, inference, and deployment. A pipeline refers to a series of predefined development processes for specific AI tasks, which includes a combination of single models (single-function modules) capable of independently completing a certain type of task.\n\n## 📊 What can PaddleX do？\n\n\nAll pipelines of PaddleX support **online experience** on [AI Studio]((https://aistudio.baidu.com/overview)) and local **fast inference**. You can quickly experience the effects of each pre-trained pipeline. If you are satisfied with the effects of the pre-trained pipeline, you can directly perform [high-performance inference](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_deploy/high_performance_inference.html) / [serving deployment](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_deploy/service_deploy.html) / [edge deployment](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_deploy/edge_deploy.html) on the pipeline. If not satisfied, you can also **Custom Development** to improve the pipeline effect. For the complete pipeline development process, please refer to the [PaddleX pipeline Development Tool Local Use Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/pipeline_develop_guide.html).\n\nIn addition, PaddleX provides developers with a full-process efficient model training and deployment tool based on a [cloud-based GUI](https://aistudio.baidu.com/pipeline/mine). Developers **do not need code development**, just need to prepare a dataset that meets the pipeline requirements to **quickly start model training**. For details, please refer to the tutorial [\"Developing Industrial-level AI Models with Zero Barrier\"](https://aistudio.baidu.com/practical/introduce/546656605663301).\n\n<table>\n    <tr>\n        <th>Pipeline</th>\n        <th>Online Experience</th>\n        <th>Local Inference</th>\n        <th>High-Performance Inference</th>\n        <th>Service-Oriented Deployment</th>\n        <th>Edge Deployment</th>\n        <th>Custom Development</th>\n        <th><a href=\"https://aistudio.baidu.com/pipeline/mine\">Zero-Code Development On AI Studio</a></td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/OCR.html\">OCR</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/91660/webUI?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.html\">PP-ChatOCRv3</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/182491/webUI?source=appCenter\">Link</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/table_recognition.html\">Table Recognition</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/91661?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/object_detection.html\">Object Detection</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/70230/webUI?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/instance_segmentation.html\">Instance Segmentation</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/100063/webUI?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_classification.html\">Image Classification</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/100061/webUI?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.html\">Semantic Segmentation</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/100062/webUI?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.html\">Time Series Forecasting</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/105706/webUI?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.html\">Time Series Anomaly Detection</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/105708/webUI?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_classification.html\">Time Series Classification</a></td>\n        <td><a href=\"https://aistudio.baidu.com/community/app/105707/webUI?source=appMineRecent\">Link</a></td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n    </tr>\n        <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/small_object_detection.html\">Small Object Detection</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n        <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.html\">Multi-label Image Classification</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.html\">Image Anomaly Detection</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/layout_parsing.html\">Layout Parsing</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/formula_recognition.html\">Formula Recognition</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/seal_recognition.html\">Seal Recognition</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/general_image_recognition.html>Image Recognition</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/pedestrian_attribute.html\">Pedestrian Attribute Recognition</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/vehicle_attribute.html\">Vehicle Attribute Recognition</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n    <tr>\n        <td><a href=\"https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/face_recognition.html\">Face Recognition</a></td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>✅</td>\n        <td>🚧</td>\n        <td>✅</td>\n        <td>🚧</td>\n    </tr>\n</table>\n\n> ❗Note: The above capabilities are implemented based on GPU/CPU. PaddleX can also perform local inference and custom development on mainstream hardware such as Kunlunxin, Ascend, Cambricon, and Haiguang. The table below details the support status of the pipelines. For specific supported model lists, please refer to the [Model List (Kunlunxin XPU)](https://paddlepaddle.github.io/PaddleX/latest/en/support_list/model_list_xpu.html)/[Model List (Ascend NPU)](https://paddlepaddle.github.io/PaddleX/latest/en/support_list/model_list_npu.html)/[Model List (Cambricon MLU)](https://paddlepaddle.github.io/PaddleX/latest/en/support_list/model_list_mlu.html)/[Model List (Haiguang DCU)](https://paddlepaddle.github.io/PaddleX/latest/en/support_list/model_list_dcu.html). We are continuously adapting more models and promoting the implementation of high-performance and service-oriented deployment on mainstream hardware.\n\n🔥🔥 **Support for Domestic Hardware Capabilities**\n\n<table>\n  <tr>\n    <th>Pipeline</th>\n    <th>Ascend 910B</th>\n    <th>Kunlunxin R200/R300</th>\n    <th>Cambricon MLU370X8</th>\n    <th>Haiguang Z100</th>\n  </tr>\n  <tr>\n    <td>OCR</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>Table Recognition</td>\n    <td>✅</td>\n    <td>🚧</td>\n    <td>🚧</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>Object Detection</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>Instance Segmentation</td>\n    <td>✅</td>\n    <td>🚧</td>\n    <td>✅</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>Image Classification</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n  </tr>\n  <tr>\n    <td>Semantic Segmentation</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n  </tr>\n  <tr>\n    <td>Time Series Forecasting</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>✅</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>Time Series Anomaly Detection</td>\n    <td>✅</td>\n    <td>🚧</td>\n    <td>🚧</td>\n    <td>🚧</td>\n  </tr>\n  <tr>\n    <td>Time Series Classification</td>\n    <td>✅</td>\n    <td>🚧</td>\n    <td>🚧</td>\n    <td>🚧</td>\n  </tr>\n</table>\n\n\n## ⏭️ Quick Start\n\n### 🛠️ Installation\n\n> ❗Before installing PaddleX, please ensure you have a basic **Python environment** (Note: Currently supports Python 3.8 to Python 3.10, with more Python versions being adapted). The PaddleX 3.0-beta2 version depends on PaddlePaddle version 3.0.0b2.\n\n* **Installing PaddlePaddle**\n\n```bash\n# cpu\npython -m pip install paddlepaddle==3.0.0b2 -i https://www.paddlepaddle.org.cn/packages/stable/cpu/\n\n# gpu，该命令仅适用于 CUDA 版本为 11.8 的机器环境\npython -m pip install paddlepaddle-gpu==3.0.0b2 -i https://www.paddlepaddle.org.cn/packages/stable/cu118/\n\n# gpu，该命令仅适用于 CUDA 版本为 12.3 的机器环境\npython -m pip install paddlepaddle-gpu==3.0.0b2 -i https://www.paddlepaddle.org.cn/packages/stable/cu123/\n```\n> ❗For more PaddlePaddle versions, please refer to the [PaddlePaddle official website](https://www.paddlepaddle.org.cn/install/quick?docurl=/documentation./docs/zh/install/pip/linux-pip.html).\n\n* **Installing PaddleX**\n\n```bash\npip install paddlex==3.0.0b2\n```\n\n> ❗For more installation methods, refer to the [PaddleX Installation Guide](https://paddlepaddle.github.io/PaddleX/latest/en/installation/installation.html).\n\n\n### 💻 CLI Usage\n\nOne command can quickly experience the pipeline effect, the unified CLI format is:\n\n```bash\npaddlex --pipeline [Pipeline Name] --input [Input Image] --device [Running Device]\n```\n\nYou only need to specify three parameters:\n* `pipeline`: The name of the pipeline\n* `input`: The local path or URL of the input image to be processed\n* `device`: The GPU number used (for example, `gpu:0` means using the 0th GPU), you can also choose to use the CPU (`cpu`)\n\nFor example, using the  OCR pipeline:\n```bash\npaddlex --pipeline OCR --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_ocr_002.png  --device gpu:0\n```\n<details>\n  <summary><b>👉 Click to view the running result</b></summary>\n\n```bash\n{\n'input_path': '/root/.paddlex/predict_input/general_ocr_002.png',\n'dt_polys': [array([[161,  27],\n       [353,  22],\n       [354,  69],\n       [162,  74]], dtype=int16), array([[426,  26],\n       [657,  21],\n       [657,  58],\n       [426,  62]], dtype=int16), array([[702,  18],\n       [822,  13],\n       [824,  57],\n       [704,  62]], dtype=int16), array([[341, 106],\n       [405, 106],\n       [405, 128],\n       [341, 128]], dtype=int16)\n       ...],\n'dt_scores': [0.758478200014338, 0.7021546472698513, 0.8536622648391111, 0.8619181462164781, 0.8321051217096188, 0.8868756173427551, 0.7982964727675609, 0.8289939036796322, 0.8289428877522524, 0.8587063317632897, 0.7786755892491615, 0.8502032769081344, 0.8703346500042997, 0.834490931790065, 0.908291103353393, 0.7614978661708064, 0.8325774055997542, 0.7843421347676149, 0.8680889482955594, 0.8788859304537682, 0.8963341277518075, 0.9364654810069546, 0.8092413027028257, 0.8503743089091863, 0.7920740420391101, 0.7592224394793805, 0.7920547400069311, 0.6641757962457888, 0.8650289477605955, 0.8079483304467047, 0.8532207681055275, 0.8913377034754717],\n'rec_text': ['登机牌', 'BOARDING', 'PASS', '舱位', 'CLASS', '序号 SERIALNO.', '座位号', '日期 DATE', 'SEAT NO', '航班 FLIGHW', '035', 'MU2379', '始发地', 'FROM', '登机口', 'GATE', '登机时间BDT', '目的地TO', '福州', 'TAIYUAN', 'G11', 'FUZHOU', '身份识别IDNO', '姓名NAME', 'ZHANGQIWEI', 票号TKTNO', '张祺伟', '票价FARE', 'ETKT7813699238489/1', '登机口于起飞前10分钟关闭GATESCLOSE10MINUTESBEFOREDEPARTURETIME'],\n'rec_score': [0.9985831379890442, 0.999696917533874512, 0.9985735416412354, 0.9842517971992493, 0.9383274912834167, 0.9943678975105286, 0.9419361352920532, 0.9221674799919128, 0.9555020928382874, 0.9870321154594421, 0.9664073586463928, 0.9988052248954773, 0.9979352355003357, 0.9985110759735107, 0.9943482875823975, 0.9991195797920227, 0.9936401844024658, 0.9974591135978699, 0.9743705987930298, 0.9980487823486328, 0.9874696135520935, 0.9900962710380554, 0.9952947497367859, 0.9950481653213501, 0.989926815032959, 0.9915552139282227, 0.9938777685165405, 0.997239887714386, 0.9963340759277344, 0.9936134815216064, 0.97223961353302]}\n```\n\nThe visualization result is as follows:\n\n![alt text](https://raw.githubusercontent.com/cuicheng01/PaddleX_doc_images/main/images/boardingpass.png)\n\n</details>\n\nTo use the command line for other pipelines, simply adjust the `pipeline` parameter to the name of the corresponding pipeline. Below are the commands for each pipeline:\n\n<details>\n  <summary><b>👉 More CLI usage for pipelines</b></summary>\n\n| Pipeline Name                | Command                                                                                                                                                                                    |\n|------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Image Classification | `paddlex --pipeline image_classification --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_image_classification_001.jpg --device gpu:0`                    |\n| Object Detection     | `paddlex --pipeline object_detection --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_object_detection_002.png --device gpu:0`                            |\n| Instance Segmentation| `paddlex --pipeline instance_segmentation --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_instance_segmentation_004.png --device gpu:0`                  |\n| Semantic Segmentation| `paddlex --pipeline semantic_segmentation --input https://paddle-model-ecology.bj.bcebos.com/paddlex/PaddleX3.0/application/semantic_segmentation/makassaridn-road_demo.png --device gpu:0` |\n| Image Multi-label Classification | `paddlex --pipeline multi_label_image_classification --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_image_classification_001.jpg --device gpu:0`        |\n| Small Object Detection       | `paddlex --pipeline small_object_detection --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/small_object_detection.jpg --device gpu:0`                            |\n| Image Anomaly Detection       | `paddlex --pipeline anomaly_detection --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/uad_grid.png --device gpu:0`                                              |\n| Pedestrian Attribute Recognition       | `paddlex --pipeline pedestrian_attribute --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/pedestrian_attribute_002.jpg --device gpu:0`                                              |\n| Vehicle Attribute Recognition       | `paddlex --pipeline vehicle_attribute --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/vehicle_attribute_002.jpg --device gpu:0`                                              |\n| OCR                  | `paddlex --pipeline OCR --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/general_ocr_002.png --device gpu:0`                                                      |\n| Table Recognition    | `paddlex --pipeline table_recognition --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/table_recognition.jpg --device gpu:0`                                      |\n| Layout Parsing       | `paddlex --pipeline layout_parsing --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/demo_paper.png --device gpu:0`                                      |\n| Formula Recognition       | `paddlex --pipeline formula_recognition --input https://paddle-model-ecology.bj.bcebos.com/paddlex/demo_image/general_formula_recognition.png --device gpu:0`                                      |\n| Seal Recognition       | `paddlex --pipeline seal_recognition --input https://paddle-model-ecology.bj.bcebos.com/paddlex/imgs/demo_image/seal_text_det.png --device gpu:0`                                      |\n| Time Series Forecasting | `paddlex --pipeline ts_fc --input https://paddle-model-ecology.bj.bcebos.com/paddlex/ts/demo_ts/ts_fc.csv --device gpu:0`                                                                   |\n| Time Series Anomaly Detection | `paddlex --pipeline ts_ad --input https://paddle-model-ecology.bj.bcebos.com/paddlex/ts/demo_ts/ts_ad.csv --device gpu:0`                                                                    |\n| Time Series Classification | `paddlex --pipeline ts_cls --input https://paddle-model-ecology.bj.bcebos.com/paddlex/ts/demo_ts/ts_cls.csv --device gpu:0`                                                                 |\n\n</details>\n\n### 📝 Python Script Usage\n\nA few lines of code can complete the quick inference of the pipeline, the unified Python script format is as follows:\n```python\nfrom paddlex import create_pipeline\n\npipeline = create_pipeline(pipeline=[Pipeline Name])\noutput = pipeline.predict([Input Image Name])\nfor res in output:\n    res.print()\n    res.save_to_img(\"./output/\")\n    res.save_to_json(\"./output/\")\n```\nThe following steps are executed:\n\n* `create_pipeline()` instantiates the pipeline object\n* Passes the image and calls the `predict` method of the pipeline object for inference prediction\n* Processes the prediction results\n\nFor other pipelines in Python scripts, just adjust the `pipeline` parameter of the `create_pipeline()` method to the corresponding name of the pipeline. Below is a list of each pipeline's corresponding parameter name and detailed usage explanation:\n\n<details>\n  <summary>👉 More Python script usage for pipelines</summary>\n\n| pipeline Name           | Corresponding Parameter               | Detailed Explanation                                                                                                      |\n|-------------------------------|-------------------------------------|---------------------------------------------------------------------------------------------------------------|\n| PP-ChatOCRv3-doc   | `PP-ChatOCRv3-doc` | [PP-ChatOCRv3-doc Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.html) |\n|  Image Classification       | `image_classification` | [ Image Classification Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_classification.html) |\n|  Object Detection       | `object_detection` | [ Object Detection Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/object_detection.html) |\n|  Instance Segmentation       | `instance_segmentation` | [ Instance Segmentation Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/instance_segmentation.html) |\n|  Semantic Segmentation       | `semantic_segmentation` | [ Semantic Segmentation Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.html) |\n|  Image Multi-Label Classification | `multilabel_classification` | [ Image Multi-Label Classification Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.html) |\n| Small Object Detection         | `small_object_detection` | [Small Object Detection Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/small_object_detection.html) |\n| Image Anomaly Detection       | `image_classification` | [Image Anomaly Detection Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.html) |\n| Image Recognition       | `PP-ShiTuV2`                | [Image Recognition Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/general_image_recognition.html)                              |\n| Face Recognition       | `face_recognition`                | [Face Recognition Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/face_recognition.html)                              |\n| Pedestrian Attribute Recognition       | `pedestrian_attribute`                | [Pedestrian Attribute Recognition Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/pedestrian_attribute.html)                              |\n|Vehicle Attribute Recognition       | `vehicle_attribute`                | [Vehicle Attribute Recognition Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/vehicle_attribute.html)                              |\n|  OCR            | `OCR` | [ OCR Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/OCR.html) |\n|  Table Recognition       | `table_recognition` | [Table Recognition Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/table_recognition.html) |\n| Layout Parsing       | `layout_parsing`                | [Layout Parsing Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/layout_parsing.html)                                   |\n| Formula Recognition       | `formula_recognition`                | [Formula Recognition Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/formula_recognition.html)                                   |\n| Seal Recognition       | `seal_recognition`                | [Seal Recognition Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/seal_recognition.html)                 |\n|  Time Series Forecast       | `ts_forecast` | [ Time Series Forecast Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.html) |\n|  Time Series Anomaly Detection   | `ts_anomaly_detection` | [ Time Series Anomaly Detection Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.html) |\n|  Time Series Classification       | `ts_cls` | [ Time Series Classification Pipeline Python Script Usage Instructions](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_classification.html) |\n</details>\n\n## 📖 Documentation\n<details>\n  <summary> <b> ⬇️ Installation </b></summary>\n\n  * [📦 PaddlePaddle Installation](https://paddlepaddle.github.io/PaddleX/latest/en/installation/paddlepaddle_install.html)\n  * [📦 PaddleX Installation](https://paddlepaddle.github.io/PaddleX/latest/en/installation/installation.html)\n\n</details>\n\n<details open>\n<summary> <b> 🔥 Pipeline Usage </b></summary>\n\n* [📑 PaddleX Pipeline Usage Overview](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/pipeline_develop_guide.html)\n\n* <details open>\n    <summary> <b> 📝 Information Extracion</b></summary>\n\n   * [📄 PP-ChatOCRv3 Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.html)\n  </details>\n\n* <details open>\n    <summary> <b> 🔍 OCR </b></summary>\n\n    * [📜 OCR Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/OCR.html)\n    * [📊 Table Recognition Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/table_recognition.html)\n    * [📄 Layout Parsing Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/layout_parsing.html)\n    * [📐 Formula Recognition Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/formula_recognition.html)\n    * [📝 Seal Recognition Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/ocr_pipelines/seal_recognition.html)\n  </details>\n\n* <details open>\n    <summary> <b> 🎥 Computer Vision </b></summary>\n\n   * [🖼️ Image Classification Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_classification.html)\n   * [🎯 Object Detection Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/object_detection.html)\n   * [📋 Instance Segmentation Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/instance_segmentation.html)\n   * [🗣️ Semantic Segmentation Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.html)\n   * [🏷️ Multi-label Image Classification Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.html)\n   * [🔍 Small Object Detection Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/small_object_detection.html)\n   * [🖼️ Image Anomaly Detection Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.html)\n   * [🖼️ Image Recognition Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/general_image_recognition.html)\n   * [🆔 Face Recognition Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/face_recognition.html)\n   * [🚗 Vehicle Attribute Recognition Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/vehicle_attribute.html)\n   * [🚶‍♀️ Pedestrian Attribute Recognition Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/cv_pipelines/pedestrian_attribute.html)\n  </details>\n\n* <details open>\n    <summary> <b> ⏱️ Time Series Analysis</b> </summary>\n\n   * [📈 Time Series Forecasting Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.html)\n   * [📉 Time Series Anomaly Detection Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.html)\n   * [🕒 Time Series Classification Pipeline Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/tutorials/time_series_pipelines/time_series_classification.html)\n  </details>\n\n* <details open>\n    <summary> <b>🔧 Related Instructions</b> </summary>\n\n   * [🖥️ PaddleX pipeline Command Line Instruction](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/instructions/pipeline_CLI_usage.html)\n   * [📝 PaddleX pipeline Python Script Instruction](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_usage/instructions/pipeline_python_API.html)\n  </details>\n\n</details>\n\n<details open>\n<summary> <b> ⚙️ Module Usage </b></summary>\n\n* <details open>\n  <summary> <b> 🔍 OCR </b></summary>\n\n  * [📝 Text Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/ocr_modules/text_detection.html)\n  * [🔖 Seal Text Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/ocr_modules/seal_text_detection.html)\n  * [🔠 Text Recognition Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/ocr_modules/text_recognition.html)\n  * [🗺️ Layout Parsing Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/ocr_modules/layout_detection.html)\n  * [📊 Table Structure Recognition Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/ocr_modules/table_structure_recognition.html)\n  * [📄 Document Image Orientation Classification Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/ocr_modules/doc_img_orientation_classification.html)\n  * [🔧 Document Image Unwarp Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/ocr_modules/text_image_unwarping.html)\n  * [📐 Formula Recognition Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/ocr_modules/formula_recognition.html)\n  </details>\n\n* <details open>\n  <summary> <b> 🖼️ Image Classification </b></summary>\n\n  * [📂 Image Classification Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/image_classification.html)\n  * [🏷️ Multi-label Image Classification Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/image_multilabel_classification.html)\n\n  * [👤 Pedestrian Attribute Recognition Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/pedestrian_attribute_recognition.html)\n  * [🚗 Vehicle Attribute Recognition Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/vehicle_attribute_recognition.html)\n\n  </details>\n\n* <details open>\n  <summary> <b> 🏞️ Image Features </b></summary>\n\n    * [🔗 Image Feature Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/image_feature.html)\n    * [😁 Face_Feature Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/face_feature.html)\n  </details>\n\n* <details open>\n  <summary> <b> 🎯 Object Detection </b></summary>\n\n  * [🎯 Object Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/object_detection.html)\n  * [📏 Small Object Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/small_object_detection.html)\n  * [🧑‍🤝‍🧑 Face Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/face_detection.html)\n  * [🔍 Mainbody Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/mainbody_detection.html)\n  * [🚶 Pedestrian Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/human_detection.html)\n  * [🚗 Vehicle Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/vehicle_detection.html)\n\n  </details>\n\n* <details open>\n  <summary> <b> 🖼️ Image Segmentation </b></summary>\n\n  * [🗺️ Semantic Segmentation Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/semantic_segmentation.html)\n  * [🔍 Instance Segmentation Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/instance_segmentation.html)\n  * [🚨 Image Anomaly Detection Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/cv_modules/anomaly_detection.html)\n  </details>\n\n* <details open>\n  <summary> <b> ⏱️ Time Series Analysis </b></summary>\n\n  * [📈 Time Series Forecasting Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/time_series_modules/time_series_forecasting.html)\n  * [🚨 Time Series Anomaly Detection Module Tutorial](./docs/module_usage/tutorials/time_series_modules/time_series_anomaly_detection.md)\n  * [🕒 Time Series Classification Module Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/tutorials/time_series_modules/time_series_classification.html)\n  </details>\n\n* <details open>\n  <summary> <b> 📄 Related Instructions </b></summary>\n\n  * [📝 PaddleX Single Model Python Script Instruction](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/instructions/model_python_API.html)\n  * [📝 PaddleX General Model Configuration File Parameter Instruction](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/instructions/config_parameters_common.html)\n  * [📝 PaddleX Time Series Task Model Configuration File Parameter Instruction](https://paddlepaddle.github.io/PaddleX/latest/en/module_usage/instructions/config_parameters_time_series.html)\n  </details>\n\n</details>\n\n<details open>\n  <summary> <b> 🏗️ Pipeline Deployment </b></summary>\n\n  * [🚀 PaddleX High-Performance Inference Guide](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_deploy/high_performance_inference.html)\n  * [🖥️ PaddleX Service Deployment Guide](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_deploy/service_deploy.html)\n  * [📱 PaddleX Edge Deployment Guide](https://paddlepaddle.github.io/PaddleX/latest/en/pipeline_deploy/edge_deploy.html)\n\n</details>\n<details open>\n  <summary> <b> 🖥️ Multi-Hardware Usage </b></summary>\n\n  * [⚙️ Multi-Hardware Usage Guide](https://paddlepaddle.github.io/PaddleX/latest/en/other_devices_support/multi_devices_use_guide.html)\n  * [⚙️ DCU Paddle Installation](https://paddlepaddle.github.io/PaddleX/latest/en/other_devices_support/paddlepaddle_install_DCU.html)\n  * [⚙️ MLU Paddle Installation](https://paddlepaddle.github.io/PaddleX/latest/en/other_devices_support/paddlepaddle_install_MLU.html)\n  * [⚙️ NPU Paddle Installation](https://paddlepaddle.github.io/PaddleX/latest/en/other_devices_support/paddlepaddle_install_NPU.html)\n  * [⚙️ XPU Paddle Installation](https://paddlepaddle.github.io/PaddleX/latest/en/other_devices_support/paddlepaddle_install_XPU.html)\n\n</details>\n\n<details>\n  <summary> <b> 📝 Tutorials & Examples </b></summary>\n\n* [📑 PP-ChatOCRv3 Model Line —— Paper Document Information Extract Tutorial](./docs/practical_tutorials/document_scene_information_extraction(layout_detection)_tutorial_en.md)\n* [📑 PP-ChatOCRv3 Model Line —— Seal Information Extract Tutorial](./docs/practical_tutorials/document_scene_information_extraction(seal_recognition)_tutorial_en.md)\n* [🖼️ General Image Classification Model Line —— Garbage Classification Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/image_classification_garbage_tutorial.html)\n* [🧩 General Instance Segmentation Model Line —— Remote Sensing Image Instance Segmentation Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/instance_segmentation_remote_sensing_tutorial.html)\n* [👥 General Object Detection Model Line —— Pedestrian Fall Detection Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/object_detection_fall_tutorial.html)\n* [👗 General Object Detection Model Line —— Fashion Element Detection Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/object_detection_fashion_pedia_tutorial.html)\n* [🚗 General OCR Model Line —— License Plate Recognition Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/ocr_det_license_tutorial.html)\n* [✍️ General OCR Model Line —— Handwritten Chinese Character Recognition Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/ocr_rec_chinese_tutorial.html)\n* [🗣️ General Semantic Segmentation Model Line —— Road Line Segmentation Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/semantic_segmentation_road_tutorial.html)\n* [🛠️ Time Series Anomaly Detection Model Line —— Equipment Anomaly Detection Application Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/ts_anomaly_detection.html)\n* [🎢 Time Series Classification Model Line —— Heartbeat Monitoring Time Series Data Classification Application Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/ts_classification.html)\n* [🔋 Time Series Forecasting Model Line —— Long-term Electricity Consumption Forecasting Application Tutorial](https://paddlepaddle.github.io/PaddleX/latest/en/practical_tutorials/ts_forecast.html)\n\n  </details>\n\n\n\n\n## 🤔 FAQ\n\nFor answers to some common questions about our project, please refer to the [FAQ](https://paddlepaddle.github.io/PaddleX/latest/en/FAQ.html). If your question has not been answered, please feel free to raise it in [Issues](https://github.com/PaddlePaddle/PaddleX/issues).\n\n## 💬 Discussion\n\nWe warmly welcome and encourage community members to raise questions, share ideas, and feedback in the [Discussions](https://github.com/PaddlePaddle/PaddleX/discussions) section. Whether you want to report a bug, discuss a feature request, seek help, or just want to keep up with the latest project news, this is a great platform.\n\n## 📄 License\n\nThe release of this project is licensed under the [Apache 2.0 license](https://github.com/PaddlePaddle/PaddleX/blob/release/3.0-beta/LICENSE).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "install_pdx.py",
          "type": "blob",
          "size": 1.638671875,
          "content": "# copyright (c) 2024 PaddlePaddle Authors. All Rights Reserve.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\nimport os\nimport argparse\nfrom paddlex.repo_manager import setup, get_all_supported_repo_names\n\nif __name__ == \"__main__\":\n    # Enable debug info\n    os.environ[\"PADDLE_PDX_DEBUG\"] = \"True\"\n    # Disable eager initialization\n    os.environ[\"PADDLE_PDX_EAGER_INIT\"] = \"False\"\n\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"devkits\", nargs=\"*\", default=[])\n    parser.add_argument(\"--no_deps\", action=\"store_true\")\n    parser.add_argument(\"--platform\", type=str, default=\"github.com\")\n    parser.add_argument(\"--update_repos\", action=\"store_true\")\n    parser.add_argument(\n        \"-y\",\n        \"--yes\",\n        dest=\"reinstall\",\n        action=\"store_true\",\n        help=\"Whether to reinstall all packages.\",\n    )\n    args = parser.parse_args()\n\n    repo_names = args.devkits\n    if len(repo_names) == 0:\n        repo_names = get_all_supported_repo_names()\n    setup(\n        repo_names=repo_names,\n        reinstall=args.reinstall or None,\n        no_deps=args.no_deps,\n        platform=args.platform,\n        update_repos=args.update_repos,\n    )\n"
        },
        {
          "name": "main.py",
          "type": "blob",
          "size": 0.6748046875,
          "content": "# copyright (c) 2024 PaddlePaddle Authors. All Rights Reserve.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\nfrom paddlex.engine import Engine\n\nif __name__ == \"__main__\":\n    Engine().run()\n"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 20.3984375,
          "content": "site_name: PaddleX 文档 #站点名称\nsite_url: https://paddlepaddle.github.io/PaddleX/\ndocs_dir: docs # 文档路径\n\nrepo_url: https://github.com/PaddlePaddle/PaddleX #仓库地址\n\nedit_uri: edit/develop/docs/ #修改文件的路径\ntheme:\n  name: material\n  # logo: ./static/images/logo.jpg #设置左上角logo\n  # favicon: ./static/images/logo.jpg\n  custom_dir: overrides #用于自定义站点效果\n  features:\n    - announce.dismiss\n    - content.action.edit #可以编辑页面源码\n    - content.action.view #可以查看页面源码\n    - content.code.annotate\n    - content.code.copy\n    # - content.code.select\n    # - content.footnote.tooltips\n    # - content.tabs.link\n    - content.tooltips\n    # - header.autohide\n    # - navigation.expand\n    - navigation.footer\n    - navigation.indexes\n    # - navigation.instant\n    # - navigation.instant.prefetch\n    # - navigation.instant.progress\n    # - navigation.prune\n    - navigation.sections\n    - navigation.tabs\n    - navigation.tabs.sticky\n    - navigation.top\n    - navigation.tracking\n    - navigation.expand  # 默认打开所有的字节\n    - navigation.path\n    - search.highlight\n    - search.share\n    - search.suggest\n    - toc.follow\n    # - toc.integrate\n  palette: #设置切换light和dark模式\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: indigo\n      accent: indigo\n      toggle:\n        icon: material/weather-sunny\n        name: Switch to dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: black\n      accent: indigo\n      toggle:\n        icon: material/weather-night\n        name: Switch to system preference\n  font:\n    text: Roboto\n    code: Roboto Mono\n  favicon: assets/favicon.png\n  icon:\n    logo: logo\n    edit: material/pencil\n    view: material/eye\n    repo: fontawesome/brands/github\n\n\n# Plugins\nplugins:\n  - git-authors\n  - tags\n  - offline\n  - blog\n  - search:\n      separator: '[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])'\n  - i18n: #设置中英文转换\n      docs_structure: suffix\n      fallback_to_default: true\n      reconfigure_material: true\n      reconfigure_search: true\n      languages:\n        - locale: zh\n          name: 简体中文\n          default: true\n          build: true\n        - locale: en\n          name: English\n          site_name: PaddleX Documentation\n          link: /en/\n          nav_translations:\n            Home: Home\n            快速开始: Quick Start\n            安装: Installation\n            安装PaddlePaddle: PaddlePaddle Install\n            安装PaddleX: PaddleX Install\n            产线使用教程: Pipeline Tutorials\n            概述: Overview\n            文本图像智能分析: Informatio Extraction\n            文档场景信息抽取v3产线: PP-ChatOCRv3-doc\n            OCR: OCR\n            通用OCR产线: OCR\n            通用表格识别产线: General Table Recognition\n            通用版面解析产线: General Layout Parsing\n            公式识别产线: Formula Recognition\n            印章文本识别产线: Seal Recognition\n            计算机视觉: Computer Vision\n            通用图像分类: General Image Classification\n            通用目标检测: General Object Detection\n            通用实例分割: General Instance Segmentation\n            通用语义分割: General Semantic Segmentation\n            图像多标签分类: Image Multi-label Classification\n            小目标检测: Small Object Detection\n            图像异常检测: Image Anomaly Detection\n            通用图像识别: Image Feature\n            行人属性识别: Pedestrian Attribute Recognition\n            车辆属性识别: Vehicle Attribute Recognition\n            人脸识别: Face Feature\n            时序分析: Time Series Analysis\n            时序预测产线: Time Series Forecasting\n            时序异常检测产线: Time Series Anomaly Detection\n            时序分类产线: Time Series Classification\n            说明文件: Instructions\n            PaddleX产线命令行使用说明: PaddleX Pipeline CLI Usage\n            PaddleX产线Python脚本使用说明: PaddleX Pipeline Python API Usage\n            单功能模块使用教程: Module Tutorials\n            OCR: OCR\n            文本检测模块: Text Detection\n            印章文本检测模块: Seal Detection\n            文本识别模块: Text Recognition\n            版面区域检测模块: Layout Parsing\n            表格结构识别模块: Table Structure Recognition\n            文档图像方向分类: Document Image Orientation Classification\n            文本图像矫正模块: Text Image Unwarping\n            公式识别模块: Formula Recognition\n            图像分类: Image Classification\n            图像分类模块: Image Classification\n            图像多标签分类模块: Image Multi-label Classification\n            行人属性识别模块: Pedestrian Attribute Recognition\n            车辆属性识别模块: Vehicle Attribute Recognition\n            图像特征: Image Features\n            图像特征模块: Image Feature\n            目标检测: Object Detection\n            目标检测模块: Object Detection\n            小目标检测模块: Small Object Detection\n            人脸检测模块: Face Detection\n            主体检测模块: Main Body Detection\n            行人检测模块: Human Detection\n            车辆检测模块: Vehicle Detection\n            图像分割: Image Segmentation\n            语义分割模块: Semantic Segmentation\n            实例分割模块: Instance Segmentation\n            图像异常检测模块: Image Anomaly Detection\n            时序分析: Time Series Analysis\n            时序预测模块: Time Series Forecasting\n            时序异常检测模块: Time Series Anomaly Detection\n            时序分类模块: Time Series Classification\n            说明文件: Instructions\n            PaddleX单模型Python脚本使用说明: PaddleX Module Python API Usage\n            PaddleX通用模型配置文件参数说明: PaddleX Common Module Config Parameters\n            PaddleX时序任务模型配置文件参数说明: PaddleX Time Series Module Config Parameters\n            模型产线部署: Pipeline Deploy\n            高性能推理: High Performance Inference\n            服务化部署: Service Deploy\n            端侧部署: Edge Deploy\n            多硬件使用: Multi-Device Usage\n            多硬件使用指南: Multi-Device Usage Guide\n            飞桨多硬件安装: PaddlePaddle Installation on Multiple Devices\n            海光 DCU 飞桨安装教程: Haiguang DCU PaddlePaddle Installation Guide\n            寒武纪 MLU 飞桨安装教程: Cambricon MLU PaddlePaddle Installation Guide\n            昇腾 NPU 飞桨安装教程: Ascend NPU PaddlePaddle Installation Guide\n            昆仑 XPU 飞桨安装教程: Kunlun XPU PaddlePaddle Installation Guide\n            数据标注教程: Data Annotation Tutorials\n            计算机视觉: Computer Vision\n            图像分类任务模块: Image Classification Task\n            图像特征任务模块: Image Feature Task\n            实例分割任务模块: Instance Segmentation Task\n            图像多标签分类: Image Multi-label Classification\n            目标检测任务模块: Object Detection Task\n            语义分割任务模块: Semantic Segmentation Task\n            OCR: OCR\n            表格识别任务模块: Table Recognition Task\n            文本检测/识别任务模块: Text Detection/Recognition Task\n            时序分析: Time Series Analysis\n            时序异常检测任务模块: Time Series Anomaly Detection Task\n            时序分类任务模块: Time Series Classification Task\n            时序预测任务模块: Time Series Forecasting Task                 \n            产线列表: Pipeline List\n            PaddleX产线列表(CPU/GPU): PaddleX Pipeline List (CPU/GPU)\n            PaddleX产线列表(DCU): PaddleX Pipeline List (DCU)\n            PaddleX产线列表(MLU): PaddleX Pipeline List (MLU)\n            PaddleX产线列表(NPU): PaddleX Pipeline List (NPU)\n            PaddleX产线列表(XPU): PaddleX Pipeline List (XPU)\n            模型列表: Model List\n            PaddleX模型列表(CPU/GPU): PaddleX Model List (CPU/GPU)\n            PaddleX模型列表(DCU): PaddleX Model List (DCU)\n            PaddleX模型列表(MLU): PaddleX Model List (MLU)\n            PaddleX模型列表(NPU): PaddleX Model List (NPU)\n            PaddleX模型列表(XPU): PaddleX Model List (XPU)\n            产业实践教程&范例: Practical Tutorials & Examples\n            论文文献信息抽取教程: Document Scene Information Extraction Tutorial\n            垃圾分类教程: Garbage Classification Tutorial\n            遥感图像实例分割教程: Remote Sensing Image Instance Segmentation Tutorial\n            行人跌倒检测教程: Pedestrian Fall Detection Tutorial\n            服装时尚元素检测教程: Fashion Element Detection Tutorial\n            车牌识别教程: License Plate Recognition Tutorial\n            手写中文识别教程: Handwritten Chinese Recognition Tutorial\n            车道线分割教程: Lane Line Segmentation Tutorial\n            设备异常检测应用教程: Equipment Anomaly Detection Application Tutorial\n            心跳监测时序数据分类应用教程: Heartbeat Monitoring Time Series Data Classification Application Tutorial\n            用电量长期预测应用教程: Long-term Electricity Consumption Forecasting Application Tutorial\n            FAQ: FAQ\n            近期更新: Recently Update\n      repository: PaddlePaddle/PaddleX #仓库名称\n      branch: release/3.0-beta2 #仓库分支\n  - git-revision-date-localized: #显示更新时间\n      enable_creation_date: true\n\n# Additional configuration\nextra:\n  version:\n    provider: mike #显示版本\n  status:\n    new: Recently added\n    deprecated: Deprecated\n  analytics:\n    provider: google\n    property: !ENV GOOGLE_ANALYTICS_KEY\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/PaddlePaddle/PaddleX\n\nextra_javascript:\n  - javascripts/katex.min.js\n  - https://unpkg.com/katex@0/dist/katex.min.js\n  - https://unpkg.com/katex@0/dist/contrib/auto-render.min.js\n\nextra_css:\n  - https://unpkg.com/katex@0/dist/katex.min.css\n\n# Extensions\nmarkdown_extensions:\n  - abbr\n  - admonition\n  - attr_list\n  - def_list\n  - footnotes\n  - md_in_html\n  - toc:\n      permalink: true\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.betterem:\n      smart_enable: all\n  - pymdownx.caret\n  - pymdownx.details\n  - pymdownx.emoji:\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - pymdownx.inlinehilite\n  - pymdownx.keys\n  - pymdownx.magiclink:\n      normalize_issue_symbols: true\n      repo_url_shorthand: true\n      user: squidfunk\n      repo: mkdocs-material\n  - pymdownx.mark\n  - pymdownx.smartsymbols\n  - pymdownx.snippets:\n      auto_append:\n        - includes/mkdocs.md\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - pymdownx.tabbed:\n      alternate_style: true\n      combine_header_slug: true\n      slugify: !!python/object/apply:pymdownx.slugs.slugify\n        kwds:\n          case: lower\n  - pymdownx.tasklist:\n      custom_checkbox: true\n  - pymdownx.tilde\n\n# 页面结构\nnav:\n  - Home: index.md\n  - 安装:\n       - 安装PaddlePaddle: installation/paddlepaddle_install.md\n       - 安装PaddleX: installation/installation.md\n  - 产线使用教程:\n       - 概述: pipeline_usage/pipeline_develop_guide.md\n       - 文本图像智能分析:\n         - 文档场景信息抽取v3产线: pipeline_usage/tutorials/information_extraction_pipelines/document_scene_information_extraction.md\n       - OCR:\n         - 通用OCR产线: pipeline_usage/tutorials/ocr_pipelines/OCR.md\n         - 通用表格识别产线: pipeline_usage/tutorials/ocr_pipelines/table_recognition.md\n         - 通用版面解析产线: pipeline_usage/tutorials/ocr_pipelines/layout_parsing.md\n         - 公式识别产线: pipeline_usage/tutorials/ocr_pipelines/formula_recognition.md\n         - 印章文本识别产线: pipeline_usage/tutorials/ocr_pipelines/seal_recognition.md\n       - 计算机视觉:\n         - 通用图像分类: pipeline_usage/tutorials/cv_pipelines/image_classification.md\n         - 通用目标检测: pipeline_usage/tutorials/cv_pipelines/object_detection.md\n         - 通用实例分割: pipeline_usage/tutorials/cv_pipelines/instance_segmentation.md\n         - 通用语义分割: pipeline_usage/tutorials/cv_pipelines/semantic_segmentation.md\n         - 图像多标签分类: pipeline_usage/tutorials/cv_pipelines/image_multi_label_classification.md\n         - 小目标检测: pipeline_usage/tutorials/cv_pipelines/small_object_detection.md\n         - 图像异常检测: pipeline_usage/tutorials/cv_pipelines/image_anomaly_detection.md\n         - 通用图像识别: pipeline_usage/tutorials/cv_pipelines/general_image_recognition.md\n         - 行人属性识别: pipeline_usage/tutorials/cv_pipelines/pedestrian_attribute_recognition.md\n         - 车辆属性识别: pipeline_usage/tutorials/cv_pipelines/vehicle_attribute_recognition.md\n         - 人脸识别: pipeline_usage/tutorials/cv_pipelines/face_recognition.md\n       - 时序分析: \n         - 时序预测产线: pipeline_usage/tutorials/time_series_pipelines/time_series_forecasting.md\n         - 时序异常检测产线: pipeline_usage/tutorials/time_series_pipelines/time_series_anomaly_detection.md\n         - 时序分类产线: pipeline_usage/tutorials/time_series_pipelines/time_series_classification.md \n       - 说明文件: \n         - PaddleX产线命令行使用说明: pipeline_usage/instructions/pipeline_CLI_usage.md\n         - PaddleX产线Python脚本使用说明: pipeline_usage/instructions/pipeline_python_API.md\n  - 单功能模块使用教程:\n       - OCR:\n         - 文本检测模块: module_usage/tutorials/ocr_modules/text_detection.md\n         - 印章文本检测模块: module_usage/tutorials/ocr_modules/seal_text_detection.md\n         - 文本识别模块: module_usage/tutorials/ocr_modules/text_recognition.md\n         - 版面区域检测模块: module_usage/tutorials/ocr_modules/layout_detection.md\n         - 表格结构识别模块: module_usage/tutorials/ocr_modules/table_structure_recognition.md\n         - 文档图像方向分类: module_usage/tutorials/ocr_modules/doc_img_orientation_classification.md\n         - 文本图像矫正模块: module_usage/tutorials/ocr_modules/text_image_unwarping.md\n         - 公式识别模块: module_usage/tutorials/ocr_modules/formula_recognition.md\n       - 图像分类:\n         - 图像分类模块: module_usage/tutorials/cv_modules/image_classification.md\n         - 图像多标签分类模块: module_usage/tutorials/cv_modules/image_multilabel_classification.md\n         - 行人属性识别模块: module_usage/tutorials/cv_modules/pedestrian_attribute_recognition.md\n         - 车辆属性识别模块: module_usage/tutorials/cv_modules/vehicle_attribute_recognition.md\n       - 图像特征:\n         - 图像特征模块: module_usage/tutorials/cv_modules/image_feature.md\n         - 人脸特征模块: module_usage/tutorials/cv_modules/face_feature.md\n       - 目标检测:\n         - 目标检测模块: module_usage/tutorials/cv_modules/object_detection.md\n         - 小目标检测模块: module_usage/tutorials/cv_modules/small_object_detection.md\n         - 人脸检测模块: module_usage/tutorials/cv_modules/face_detection.md\n         - 主体检测模块: module_usage/tutorials/cv_modules/mainbody_detection.md\n         - 行人检测模块: module_usage/tutorials/cv_modules/human_detection.md\n         - 车辆检测模块: module_usage/tutorials/cv_modules/vehicle_detection.md\n       - 图像分割:\n         - 语义分割模块: module_usage/tutorials/cv_modules/semantic_segmentation.md\n         - 实例分割模块: module_usage/tutorials/cv_modules/instance_segmentation.md\n         - 图像异常检测模块: module_usage/tutorials/cv_modules/anomaly_detection.md  \n       - 时序分析:\n         - 时序预测模块: module_usage/tutorials/time_series_modules/time_series_forecasting.md\n         - 时序异常检测模块: module_usage/tutorials/time_series_modules/time_series_anomaly_detection.md\n         - 时序分类模块: module_usage/tutorials/time_series_modules/time_series_classification.md  \n       - 说明文件:\n         - PaddleX单模型Python脚本使用说明: module_usage/instructions/model_python_API.md\n         - PaddleX通用模型配置文件参数说明: module_usage/instructions/config_parameters_common.md\n         - PaddleX时序任务模型配置文件参数说明: module_usage/instructions/config_parameters_time_series.md\n  - 模型产线部署:\n       - 高性能推理: pipeline_deploy/high_performance_inference.md\n       - 服务化部署: pipeline_deploy/service_deploy.md\n       - 端侧部署: pipeline_deploy/edge_deploy.md\n  - 多硬件使用:\n       - 多硬件使用指南: other_devices_support/multi_devices_use_guide.md\n       - 飞桨多硬件安装:\n         - 海光 DCU 飞桨安装教程: other_devices_support/paddlepaddle_install_DCU.md\n         - 寒武纪 MLU 飞桨安装教程: other_devices_support/paddlepaddle_install_MLU.md\n         - 昇腾 NPU 飞桨安装教程: other_devices_support/paddlepaddle_install_NPU.md\n         - 昆仑 XPU 飞桨安装教程: other_devices_support/paddlepaddle_install_XPU.md\n  - 数据标注教程:\n       - 计算机视觉:\n         - 图像分类任务模块: data_annotations/cv_modules/image_classification.md\n         - 图像特征任务模块: data_annotations/cv_modules/image_feature.md\n         - 实例分割任务模块: data_annotations/cv_modules/instance_segmentation.md\n         - 图像多标签分类: data_annotations/cv_modules/ml_classification.md\n         - 目标检测任务模块: data_annotations/cv_modules/object_detection.md\n         - 语义分割任务模块: data_annotations/cv_modules/semantic_segmentation.md\n       - OCR:\n         - 表格识别任务模块: data_annotations/ocr_modules/table_recognition.md\n         - 文本检测/识别任务模块: data_annotations/ocr_modules/text_detection_recognition.md\n       - 时序分析:\n         - 时序异常检测任务模块: data_annotations/time_series_modules/time_series_anomaly_detection.md\n         - 时序分类任务模块: data_annotations/time_series_modules/time_series_classification.md\n         - 时序预测任务模块: data_annotations/time_series_modules/time_series_forecasting.md\n  - 产线列表:\n       - PaddleX产线列表(CPU/GPU): support_list/pipelines_list.md\n       - PaddleX产线列表(DCU): support_list/pipelines_list_dcu.md\n       - PaddleX产线列表(MLU): support_list/pipelines_list_mlu.md\n       - PaddleX产线列表(NPU): support_list/pipelines_list_npu.md\n       - PaddleX产线列表(XPU): support_list/pipelines_list_xpu.md\n  - 模型列表:\n       - PaddleX模型列表(CPU/GPU): support_list/models_list.md\n       - PaddleX模型列表(DCU): support_list/model_list_dcu.md\n       - PaddleX模型列表(MLU): support_list/model_list_mlu.md\n       - PaddleX模型列表(NPU): support_list/model_list_npu.md\n       - PaddleX模型列表(XPU): support_list/model_list_xpu.md\n  - 产业实践教程&范例:\n       - 论文文献信息抽取教程: practical_tutorials/document_scene_information_extraction(layout_detection)_tutorial.md\n       - 垃圾分类教程: practical_tutorials/image_classification_garbage_tutorial.md\n       - 遥感图像实例分割教程: practical_tutorials/instance_segmentation_remote_sensing_tutorial.md\n       - 行人跌倒检测教程: practical_tutorials/object_detection_fall_tutorial.md\n       - 服装时尚元素检测教程: practical_tutorials/object_detection_fashion_pedia_tutorial.md\n       - 车牌识别教程: practical_tutorials/ocr_det_license_tutorial.md\n       - 手写中文识别教程: practical_tutorials/ocr_rec_chinese_tutorial.md\n       - 车道线分割教程: practical_tutorials/semantic_segmentation_road_tutorial.md\n       - 设备异常检测应用教程: practical_tutorials/ts_anomaly_detection.md\n       - 心跳监测时序数据分类应用教程: practical_tutorials/ts_classification.md\n       - 用电量长期预测应用教程: practical_tutorials/ts_forecast.md\n  - FAQ: FAQ.md\n  - 近期更新: CHANGLOG.md\n"
        },
        {
          "name": "overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "paddlex",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.4775390625,
          "content": "prettytable # only for benchmark\nimagesize\ncolorlog\nPyYAML\nfilelock\nruamel.yaml\nchardet\nnumpy==1.24.4\nmatplotlib==3.5.2\nopencv-python==4.5.5.64\nchinese_calendar\nscikit-learn\npycocotools\ntqdm\npyclipper\nshapely\npandas\nparsley\nrequests\ntokenizers==0.19.1\nGPUtil>=1.4.0\nscikit-image\nlxml\nopenpyxl\npremailer\nPyMuPDF\nujson\nPillow\n######## For Chatocrv3 #######\nqianfan==0.0.3\nlangchain==0.1.5\nlangchain-community==0.0.17\nerniebot == 0.5.0\nerniebot-agent == 0.5.0\nunstructured\nnetworkx\nfaiss-cpu\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.7470703125,
          "content": "# copyright (c) 2024 PaddlePaddle Authors. All Rights Reserve.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n\nimport os\nimport glob\nimport itertools\nfrom pathlib import Path\n\nfrom setuptools import find_packages\nfrom setuptools import setup\n\n\ndef readme():\n    \"\"\"get readme\"\"\"\n    with open(\"README.md\", \"r\", encoding=\"utf-8\") as file:\n        return file.read()\n\n\ndef dependencies():\n    \"\"\"get dependencies\"\"\"\n    with open(\"requirements.txt\", \"r\") as file:\n        return file.read()\n\n\ndef version():\n    \"\"\"get version\"\"\"\n    with open(os.path.join(\"paddlex\", \".version\"), \"r\") as file:\n        return file.read().rstrip()\n\n\ndef packages_and_package_data():\n    \"\"\"get packages and package_data\"\"\"\n\n    def _recursively_find(pattern, exts=None):\n        for dir_ in glob.iglob(pattern):\n            for root, _, files in os.walk(dir_):\n                for f in files:\n                    if exts is not None:\n                        ext = os.path.splitext(f)[1]\n                        if ext not in exts:\n                            continue\n                    yield os.path.join(root, f)\n\n    pkgs = find_packages(exclude=[\"tests\", \"*.tests\", \"*.tests.*\", \"tests.*\"])\n    pkg_data = []\n    for p in itertools.chain(\n        _recursively_find(\"paddlex/configs/*\", exts=[\".yml\", \".yaml\"]),\n    ):\n        if Path(p).suffix in (\".pyc\", \".pyo\"):\n            continue\n        pkg_data.append(Path(p).relative_to(\"paddlex\").as_posix())\n    pipeline_config = [\n        Path(p).relative_to(\"paddlex\").as_posix()\n        for p in glob.glob(\"paddlex/pipelines/*.yaml\")\n    ]\n    pkg_data.append(\"inference/pipelines/ppchatocrv3/ch_prompt.yaml\")\n    pkg_data.extend(pipeline_config)\n    pkg_data.append(\".version\")\n    pkg_data.append(\"utils/fonts/PingFang-SC-Regular.ttf\")\n    pkg_data.append(\"repo_manager/requirements.txt\")\n    return pkgs, {\"paddlex\": pkg_data}\n\n\nif __name__ == \"__main__\":\n    pkgs, pkg_data = packages_and_package_data()\n\n    s = setup(\n        name=\"paddlex\",\n        version=version(),\n        description=(\"Low-code development tool based on PaddlePaddle.\"),\n        long_description=readme(),\n        author=\"PaddlePaddle Authors\",\n        author_email=\"\",\n        install_requires=dependencies(),\n        packages=pkgs,\n        package_data=pkg_data,\n        entry_points={\n            \"console_scripts\": [\n                \"paddlex = paddlex.__main__:console_entry\",\n            ],\n        },\n        # PyPI package information\n        classifiers=[\n            \"Development Status :: 4 - Beta\",\n            \"Intended Audience :: Developers\",\n            \"Intended Audience :: Education\",\n            \"Intended Audience :: Science/Research\",\n            \"License :: OSI Approved :: Apache Software License\",\n            \"Programming Language :: Python :: 3.8\",\n            \"Programming Language :: Python :: 3.9\",\n            \"Programming Language :: Python :: 3.10\",\n            \"Topic :: Scientific/Engineering\",\n            \"Topic :: Scientific/Engineering :: Mathematics\",\n            \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n            \"Topic :: Software Development\",\n            \"Topic :: Software Development :: Libraries\",\n            \"Topic :: Software Development :: Libraries :: Python Modules\",\n        ],\n        license=\"Apache 2.0\",\n        keywords=[\"paddlepaddle\"],\n    )\n"
        }
      ]
    }
  ]
}