{
  "metadata": {
    "timestamp": 1736560831979,
    "page": 526,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tensorpack/tensorpack",
      "stars": 6301,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9482421875,
          "content": "# tensorpack-specific stuff\ntrain_log\ntrain_log_*\nlogs\n*.npy\n*.npz\n*.caffemodel\n*.tfmodel\n*.meta\n*.log*\n*.bin\n*.png\n*.jpg\ncheckpoint\n*.json\n*.prototxt\n*.txt\n*.tgz\n*.gz\n\n# my personal stuff\nsnippet\nexamples/private\nTODO.md\n.gitignore\n.vimrc.local\n\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n*.dat\n\n.idea/\n*.diff\n"
        },
        {
          "name": ".lgtm.yml",
          "type": "blob",
          "size": 0.490234375,
          "content": "queries:\n  - exclude: py/unguarded-next-in-generator\n  - exclude: py/explicit-call-to-delete\n  - exclude: py/polluting-import\n  - exclude: py/import-and-import-from\n  - exclude: py/similar-function\n  - exclude: py/unused-local-variable\n  # buggy: https://discuss.lgtm.com/t/python-false-positive-about-super/1330/3\n  - exclude: py/super-not-enclosing-class\n  - exclude: py/unreachable-statement\nextraction:\n  python:\n    prepare:\n      packages:\n        - libcap-dev\n    python_setup:\n      version: 3\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.400390625,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Optionally set the version of Python and requirements required to build your docs\npython:\n  version: 3.6\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 5.970703125,
          "content": "\n## Breaking API changes.\n\nTensorpack is in development, and API changes can happen.\nThe backward compatibilty will be __preserved for at least several months__, with a deprecation warning,\nso you don't need to look at here very often.\n\nHere are a list of things that were changed, starting from an early version.\nTensorFlow itself also changes API and those are not listed here.\n\n+ 2019/11/10. Drop Python 2 support.\n+ [2019/03/20](https://github.com/tensorpack/tensorpack/commit/b8a50d72a7c655b6dc6facb17efd74069ba7f86c).\n  The concept of `InputDesc` was replaced by its equivalent in TF:\n  `tf.TensorSpec`. This may be a breaking change if you have customized\n  code that relies on internals of `InputDesc`.\n\tTo use `tf.TensorSpec` in your `ModelDesc`:\n```python\n    def inputs(self):\n        return [tf.TensorSpec((None, 28, 28, 1), tf.float32, 'image'),\n                tf.TensorSpec((None,), tf.int32, 'label')]\n```\n+ [2018/03/20] `ModelDesc` starts to use simplified interfaces:\n\t+ `_get_inputs()` renamed to `inputs()` and returns `tf.TensorSpec`.\n\t+ `build_graph(self, tensor1, tensor2)` returns the cost tensor directly.\n\t+ `_get_optimizer()` renamed to `optimizer()`.\n\tOld interface will still be available for a while, but new ones are recommended.\n+ [2018/03/12] `JSONWriter` use a different file name, and will not automatically restore epoch number.\n\t`AutoResumeTrainConfig` was added to support resuming.\n+ [2017/10/21]\n\ttensorpack is gradually switching to a new Trainer API.\n\tThe old API will keep working for a while. See [issue](https://github.com/tensorpack/tensorpack/issues/458)\n\tfor details.\n+ [2017/10/18]\n\t`TrainConfig(predict_tower)` was deprecated. You can set the inference device directly when creating the `InferenceRunner` callback.\n+ [2017/10/12](https://github.com/tensorpack/tensorpack/commit/7e963996f615b85f7459455596b4ee9bbd0bce8e).\n\t`tensorpack.RL` was deprecated. The RL examples are rewritten with OpenAI gym interface instead.\n+ [2017/10/10](https://github.com/tensorpack/tensorpack/commit/7d40e049691d92018f50dc7d45bba5e8b140becc).\n\t`tfutils.distributions` was deprecated in favor of `tf.distributions` introduced in TF 1.3.\n+ [2017/08/02](https://github.com/tensorpack/tensorpack/commit/875f4d7dbb5675f54eae5675fa3a0948309a8465).\n\t`Trainer.get_predictor` now takes GPU id. And `Trainer.get_predictors` was deprecated.\n+ 2017/06/07. Now the library explicitly depends on msgpack-numpy>=0.3.9. The serialization protocol\n\tbecomes incompatible if you've been using <0.3.9.\n+ [2017/05/06](https://github.com/tensorpack/tensorpack/commit/0774ec66e66075486f6a36aba63cc2a151b9fec8).\n\t`replace_get_variable` was deprecated in favor of the official `custom_getter` interface.\n\t`{freeze,remap}_get_variable` was renamed to `{freeze,remap}_variables`.\n+ [2017/04/09](https://github.com/tensorpack/tensorpack/commit/5beab907895aec36bdcaed62e25b976aad7979b8).\n\t`ParamRestore` was renamed to `DictRestore`.\n+ [2017/03/16](https://github.com/tensorpack/tensorpack/commit/ccae46f4a3ca89dc3df901a338eef8447d19a730).\n\t`session_config` option in `PredictConfig` is deprecated. Use `session_creator` to define how to create session instead.\n+ 2017/02/20. The interface of step callbacks are changed to be the same as `tf.train.SessionRunHook`.\n\tIf you haven't written any custom step callbacks, there is nothing to do. Otherwise please refer\n\tto the [existing callbacks](https://github.com/tensorpack/tensorpack/blob/master/tensorpack/callbacks/steps.py).\n+ [2017/02/12](https://github.com/tensorpack/tensorpack/commit/d1041a77a9c59d8c9abf64f389f3b605d65b483e).\n\t`TrainConfig(optimizer=)` was deprecated. Now optimizer is set in `ModelDesc`. And gradient processors become part of an optimizer.\n* [2017/02/11](https://github.com/tensorpack/tensorpack/commit/5b29bda9f17d7b587259e13963c4c8093e8387f8).\n\t`_get_input_vars()` in `ModelDesc` was renamed to `_get_inputs`. `InputVar` was renamed to `InputDesc`.\n* [2017/01/27](https://github.com/tensorpack/tensorpack/commit/a9dd0b8ec34209ab86a92875589dbbc4716e73ef).\n\t`TrainConfig(step_per_epoch)` was renamed to `steps_per_epoch`.\n* [2017/01/25](https://github.com/tensorpack/tensorpack/commit/2df3dcf401a99fe61c699ad719e95528872d3abe).\n\tArgument order of `models.ConcatWith` is changed to follow the API change in TensorFlow upstream.\n* [2017/01/25](https://github.com/tensorpack/tensorpack/commit/243e957fe6d62a0cfb5728bd77fb3e005d6603e4).\n\t`TrainConfig(callbacks=)` now takes a list of `Callback` instances.\n* [2017/01/06](https://github.com/tensorpack/tensorpack/commit/bbf41d9e58053f843d0471e6d2d87ff714a79a90).\n\t`summary.add_moving_summary` now takes any number of positional arguments instead of a list.\n* [2017/01/05](https://github.com/tensorpack/tensorpack/commit/651a5aea8f9aacad7147542021dcf106fc824bc2).\n\tThe argument `TrainConfig(dataset=)` is renamed to `TrainConfig(dataflow=)`.\n* [2016/12/15](https://github.com/tensorpack/tensorpack/commit/99c70935a7f72050f45891fbbcc49c4ce43aedce).\n\tThe `predict_tower` option is in `TrainConfig` now instead of `Trainer`.\n* [2016/11/10](https://github.com/tensorpack/tensorpack/commit/77bcc8b1afc984a569f6ec3eda0a3c47b4e2923a).\n\tThe `{input,output}_var_names` argument in `PredictConfig` is renamed to `{input,output}_names`.\n* [2016/11/06](https://github.com/tensorpack/tensorpack/commit/740e9d8ca146af5a911f68a369dd7348243a2253).\n\tThe inferencer `ClassificationError` now expects the vector tensor returned by `prediction_incorrect` instead of the \"wrong\" tensor.\n* [2016/10/17](https://github.com/tensorpack/tensorpack/commit/6eb0bebe60d6f38bcad9ddb3e6091b0b154a09cf).\n\t`Conv2D` and `FullyConnect` use `tf.identity` by default instead of `tf.nn.relu`.\n* [2016/09/01](https://github.com/tensorpack/tensorpack/commit/fc9e45b0208ff09daf454d3bd910c540735b7f83).\n\tThe method `_build_graph` of `ModelDesc` doesn't take `is_training` argument anymore.\n\tThe `is_training` attribute can be obtained from tower context.\n* [2016/05/15](https://github.com/tensorpack/tensorpack/commit/e69034b5c9b588db9fb52295b1e63c89e8b42654).\n\tThe method `_get_cost` of `ModelDesc` is replaced by `_build_graph`.\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0869140625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (c) Tensorpack Contributors\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.015625,
          "content": "include LICENSE\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.6845703125,
          "content": "![Tensorpack](https://github.com/tensorpack/tensorpack/raw/master/.github/tensorpack.png)\n\nTensorpack is a neural network training interface based on graph-mode TensorFlow.\n\n[![ReadTheDoc](https://readthedocs.org/projects/tensorpack/badge/?version=latest)](http://tensorpack.readthedocs.io)\n[![Gitter chat](https://img.shields.io/badge/chat-on%20gitter-46bc99.svg)](https://gitter.im/tensorpack/users)\n[![model-zoo](https://img.shields.io/badge/model-zoo-brightgreen.svg)](http://models.tensorpack.com)\n## Features:\n\nIt's Yet Another TF high-level API, with the following highlights:\n\n1. Focus on __training speed__.\n  + Speed comes for free with Tensorpack -- it uses TensorFlow in the __efficient way__ with no extra overhead.\n    On common CNNs, it runs training [1.2~5x faster](https://github.com/tensorpack/benchmarks/tree/master/other-wrappers) than the equivalent Keras code.\n    Your training can probably gets faster if written with Tensorpack.\n\n  + Scalable data-parallel multi-GPU / distributed training strategy is off-the-shelf to use.\n    See [tensorpack/benchmarks](https://github.com/tensorpack/benchmarks) for more benchmarks.\n\n2. Squeeze the best data loading performance of Python with [`tensorpack.dataflow`](https://github.com/tensorpack/dataflow).\n  + Symbolic programming (e.g. `tf.data`) [does not](https://tensorpack.readthedocs.io/tutorial/philosophy/dataflow.html#alternative-data-loading-solutions)\n    offer the data processing flexibility needed in research.\n    Tensorpack squeezes the most performance out of __pure Python__ with various autoparallelization strategies.\n\n3. Focus on reproducible and flexible research:\n  + Built and used by researchers, we provide high-quality [reproducible implementation of papers](https://github.com/tensorpack/tensorpack#examples).\n\n4. It's not a model wrapper.\n  + There are too many symbolic function wrappers already. Tensorpack includes only a few common layers.\n    You can use any TF symbolic functions inside Tensorpack, including tf.layers/Keras/slim/tflearn/tensorlayer/....\n\nSee [tutorials and documentations](http://tensorpack.readthedocs.io/tutorial/index.html#user-tutorials) to know more about these features.\n\n## Examples:\n\nWe refuse toy examples.\nInstead of showing tiny CNNs trained on MNIST/Cifar10,\nwe provide training scripts that reproduce well-known papers.\n\nWe refuse low-quality implementations.\nUnlike most open source repos which only __implement__ papers,\n[Tensorpack examples](examples) faithfully __reproduce__ papers,\ndemonstrating its __flexibility__ for actual research.\n\n### Vision:\n+ [Train ResNet](examples/ResNet) and [other models](examples/ImageNetModels) on ImageNet\n+ [Train Mask/Faster R-CNN on COCO object detection](examples/FasterRCNN)\n+ [Unsupervised learning with Momentum Contrast](https://github.com/ppwwyyxx/moco.tensorflow) (MoCo)\n+ [Adversarial training with state-of-the-art robustness](https://github.com/facebookresearch/ImageNet-Adversarial-Training)\n+ [Generative Adversarial Network(GAN) variants](examples/GAN), including DCGAN, InfoGAN, Conditional GAN, WGAN, BEGAN, DiscoGAN, Image to Image, CycleGAN\n+ [DoReFa-Net: train binary / low-bitwidth CNN on ImageNet](examples/DoReFa-Net)\n+ [Fully-convolutional Network for Holistically-Nested Edge Detection(HED)](examples/HED)\n+ [Spatial Transformer Networks on MNIST addition](examples/SpatialTransformer)\n+ [Visualize CNN saliency maps](examples/Saliency)\n\n### Reinforcement Learning:\n+ [Deep Q-Network(DQN) variants on Atari games](examples/DeepQNetwork), including DQN, DoubleDQN, DuelingDQN.\n+ [Asynchronous Advantage Actor-Critic(A3C) with demos on OpenAI Gym](examples/A3C-Gym)\n\n### Speech / NLP:\n+ [LSTM-CTC for speech recognition](examples/CTC-TIMIT)\n+ [char-rnn for fun](examples/Char-RNN)\n+ [LSTM language model on PennTreebank](examples/PennTreebank)\n\n## Install:\n\nDependencies:\n\n+ Python 3.3+.\n+ Python bindings for OpenCV. (Optional, but required by a lot of features)\n+ TensorFlow ≥ 1.5\n  * TF is not not required if you only want to use `tensorpack.dataflow` alone as a data processing library\n  * When using TF2, tensorpack uses its TF1 compatibility mode. Note that a few examples in the repo are not yet migrated to support TF2.\n```\npip install --upgrade git+https://github.com/tensorpack/tensorpack.git\n# or add `--user` to install to user's local directories\n```\n\nPlease note that tensorpack is not yet stable.\nIf you use tensorpack in your code, remember to mark the exact version of tensorpack you use as your dependencies.\n\n## Citing Tensorpack:\n\nIf you use Tensorpack in your research or wish to refer to the examples, please cite with:\n```\n@misc{wu2016tensorpack,\n  title={Tensorpack},\n  author={Wu, Yuxin and others},\n  howpublished={\\url{https://github.com/tensorpack/}},\n  year={2016}\n}\n```\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.033203125,
          "content": "[metadata]\nlicense_file = LICENSE\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.3056640625,
          "content": "from os import path\nimport setuptools\nfrom setuptools import setup, find_packages\n\nversion = int(setuptools.__version__.split('.')[0])\nassert version > 30, \"Tensorpack installation requires setuptools > 30\"\n\nthis_directory = path.abspath(path.dirname(__file__))\n\n# setup metainfo\nlibinfo_py = path.join(this_directory, 'tensorpack', 'libinfo.py')\nlibinfo_content = open(libinfo_py, \"r\").readlines()\nversion_line = [l.strip() for l in libinfo_content if l.startswith('__version__')][0]\nexec(version_line)  # produce __version__\n\nwith open(path.join(this_directory, 'README.md'), 'rb') as f:\n    long_description = f.read().decode('utf-8')\n\n\ndef add_git_version():\n\n    def get_git_version():\n        from subprocess import check_output\n        try:\n            return check_output(\"git describe --tags --long --dirty\".split()).decode('utf-8').strip()\n        except Exception:\n            return __version__  # noqa\n\n    newlibinfo_content = [l for l in libinfo_content if not l.startswith('__git_version__')]\n    newlibinfo_content.append('__git_version__ = \"{}\"'.format(get_git_version()))\n    with open(libinfo_py, \"w\") as f:\n        f.write(\"\".join(newlibinfo_content))\n\n\nadd_git_version()\n\n\nsetup(\n    name='tensorpack',\n    author=\"TensorPack contributors\",\n    author_email=\"ppwwyyxxc@gmail.com\",\n    url=\"https://github.com/tensorpack/tensorpack\",\n    keywords=\"tensorflow, deep learning, neural network\",\n    license=\"Apache\",\n\n    version=__version__,   # noqa\n    description='A Neural Network Training Interface on TensorFlow',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n\n    packages=find_packages(exclude=[\"examples\", \"tests\"]),\n    zip_safe=False,  \t\t    # dataset and __init__ use file\n\n    install_requires=[\n        \"numpy>=1.14\",\n        \"six\",\n        \"termcolor>=1.1\",\n        \"tabulate>=0.7.7\",\n        \"tqdm>4.29.0\",\n        \"msgpack>=0.5.2\",\n        \"msgpack-numpy>=0.4.4.2\",\n        \"pyzmq>=16\",\n        \"psutil>=5\",\n    ],\n    tests_require=['flake8', 'scikit-image'],\n    extras_require={\n        'all': ['scipy', 'h5py>=2.1', 'lmdb>=0.92', 'matplotlib', 'scikit-learn'],\n        'all: \"linux\" in sys_platform': ['python-prctl'],\n    },\n\n    # https://packaging.python.org/guides/distributing-packages-using-setuptools/#universal-wheels\n    options={'bdist_wheel': {'universal': '1'}},\n)\n"
        },
        {
          "name": "sotabench",
          "type": "tree",
          "content": null
        },
        {
          "name": "tensorpack",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.630859375,
          "content": "[flake8]\nmax-line-length = 120\n# See https://pep8.readthedocs.io/en/latest/intro.html#error-codes\nignore = E265,E741,E742,E743,W504,W605,C408,B007,B008,B020\nexclude = .git,\n          __init__.py,\n          setup.py,\n          tensorpack/compat/*,\n          docs,\n          examples,\n          docs/conf.py\n          snippet,\n          examples_v2,\n          _test.py,\nshow-source = true\n\n[isort]\nline_length=100\nskip=docs/conf.py\nmulti_line_output=4\nknown_tensorpack=tensorpack\nknown_standard_library=numpy\nknown_third_party=bob,gym,matplotlib\nno_lines_before=STDLIB,THIRDPARTY\nsections=FUTURE,STDLIB,THIRDPARTY,tensorpack,FIRSTPARTY,LOCALFOLDER\n"
        }
      ]
    }
  ]
}