{
  "metadata": {
    "timestamp": 1736561006862,
    "page": 764,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cowrie/cowrie",
      "stars": 5300,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.03125,
          "content": ".direnv\n.tox\n.git\n.github\n.eggs\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.02734375,
          "content": "data/fs.pickle -diff binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.326171875,
          "content": "cowrie.cfg\ncowrie.pid\netc/ssh_host_dsa_key\netc/ssh_host_dsa_key.pub\netc/ssh_host_rsa_key\netc/ssh_host_rsa_key.pub\nvar/log/cowrie/*\n*.egg-info\ndl/\ndist/\ndocs/_build\nbuild/\nlog/\n.eggs/\n.envrc\n.direnv/\n.pyre/\n.pytype/\n__pycache__/\n*.py[cod]\n*env/\nsrc/twisted/plugins/dropin.cache\n.DS_Store\n_trial_temp\n.project\n.pydevproject\n.idea/\n.tox\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.1171875,
          "content": "---\nrepos:\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v3.3.1\n    hooks:\n      - id: pyupgrade\n        args: [\"--py38-plus\"]\n\n  - repo: https://github.com/psf/black\n    rev: 22.12.0\n    hooks:\n      - id: black\n\n  - repo: https://github.com/asottile/yesqa\n    rev: v1.4.0\n    hooks:\n      - id: yesqa\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.4.0\n    hooks:\n      - id: check-added-large-files\n      - id: check-ast\n      - id: check-byte-order-marker\n      - id: check-case-conflict\n      - id: check-docstring-first\n      - id: check-executables-have-shebangs\n      - id: check-json\n      - id: check-merge-conflict\n      - id: check-toml\n      - id: check-yaml\n      - id: debug-statements\n      - id: detect-private-key\n      - id: end-of-file-fixer\n      - id: mixed-line-ending\n      - id: requirements-txt-fixer\n      - id: trailing-whitespace\n\n  - repo: https://github.com/pycqa/isort\n    rev: 5.11.4\n    hooks:\n      - id: isort\n        name: isort (python)\n      - id: isort\n        name: isort (cython)\n        types: [cython]\n      - id: isort\n        name: isort (pyi)\n        types: [pyi]\n"
        },
        {
          "name": ".pyre_configuration",
          "type": "blob",
          "size": 0.32421875,
          "content": "{\n  \"source_directories\": [\n    \"src\"\n  ],\n  \"search_path\": [\n    {\"site-package\": \"cryptography\"},\n    {\"site-package\": \"incremental\"},\n    {\"site-package\": \"tftpy\"},\n    {\"site-package\": \"twisted\"},\n    {\"site-package\": \"treq\"},\n    {\"site-package\": \"zope\"}\n  ],\n  \"exclude\": [\n    \".*/src/cowrie/output/.*\"\n  ],\n  \"workers\": 4\n}\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.5087890625,
          "content": "---\n# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Build PDF & ePub\nformats:\n  - epub\n  - pdf\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Optionally Python version and requirements required to build your docs\npython:\n  install:\n    - requirements: docs/requirements.txt\n    - method: pip\n      path: .\n"
        },
        {
          "name": ".yamllint.yml",
          "type": "blob",
          "size": 0.087890625,
          "content": "---\nextends:\n    default\n\nrules:\n    line-length: disable\n\nignore: |\n    .direnv\n    .tox\n"
        },
        {
          "name": "CHANGELOG.rst",
          "type": "blob",
          "size": 10.7529296875,
          "content": "Release Notes\n#############\n\nRelease 2.6.0\n*************\n* Breaking change: default location of static files has moved from share/cowrie to src/cowrie/data\n* In the configuration file the `share_path` is now `data_path`\n* Python 3.12 support\n* Python 3.13 support\n* Pypy 3.10 support\n* Python 3.8 no longer supported\n* Twisted 24.10 support\n* Docker builds now use Debian 12 Bookworm\n* New output plugins: Oracle, Remote Syslog, Axiom\n* New commands: finger, groups, locate, lspci\n* Cowrie can now be installed with `pip install -e`\n\nRelease 2.5.0\n*************\n\n* Datadog output module (Fred Baguelin <frederic.baguelin@datadoghq.com>)\n* General improvements to shell expansion handling\n* New version of Twisted supported\n* Python 3.11 support\n* Pypy 3.9 support\n* Add session type to Telegram output\n\nRelease 2.4.0\n*************\n\n* Deprecate Python 3.7\n* Early support for Python 3.11\n* ThreatJammer output plugin (@diegoparrilla)\n* Telegram output plugin (@Louren)\n* Discord output plugin (@CyberSparkNL)\n* Updated mongodb output plugin\n* Dependency upgrades\n* Docker repo merged with this one\n* `wget` and `curl` rewritten using `treq`.\n* Migrate test framework from trial to unittest (@lazycrazyowl)\n\nRelease 2.3.0\n*************\n\n* Deprecate Python 3.6\n* Support Python 3.10\n* Dependency updates\n* MISP Output plugin extension\n* add new public keys ECDSAKeys and ed25519 (#1627)\n* fix userdb.example (#1619)\n* cache url submission to virustotal\n* MySQL connector (#1575) - needs new external dependency mysql-connector-python\n* Fix mysql string expansion (#1565)\n* Rewrite CSIRTG output plugin to use new library version\n* Fixed the Slack output to work with the versions 2.x of slackclient\n* fix MySQL error handling\n* fix tar command\n* limit connections to private address ranges\n* Update GreyNoise Output Script to Use Community API (#1524)\n* Implement getopt-style parsing for uname (#1516)\n* Allow SSLv3 connections for wget and curl\n* Support for 301 redirects in wget\n* Malshare update API (#1472)\n* Remove hpfeeds.py infavour of hpfeeds3.py\n\nRelease 2.2.0\n*************\n\n* Deprecate Python 2.7 and 3.5\n* Command substitution with backticks\n* Better ``chmod`` command line parsing\n* Add ``uniq`` command.\n* Enhanced command substitution functionality.\n* Fix nc hang\n* Rename built-in user ``richard`` to ``phil``, it's used as detection mechanism.\n* Binary suppport for ``cat``, ``grep`` and other commands\n* Azure Sentinel output plugin\n\nRelease 2.1.0\n*************\n\n* Deprecate Python 2.7. Still works but removed from testing suite and fixing 2.7 problems will no longer have priority.\n* Disable crashreporter\n* Updated ELK documentation and output plugin\n* ``tee`` command added. Updates to ``cat``, ``dd`` and ``wc``.\n* Fixed SSH compression issue with AsyncSSH client\n* AbuseIP output plugin.\n\nRelease 2.0.1\n*************\n\n* 2019-10-31 Fix for exec commands when tty logging is disabled\n* 2019-10-31 Fix for print output to stdout for curl/wget\n* 2019-10-31 Fix for SQL to store full hostname (don't forget to update the database schema)\n* 2019-10-15 Slack link now at https://cowrie.org/slack\n* 2019-10-04 Subshell ((echo test)) evaluation now working\n\nRelease 2.0.0\n*************\n\n* 2019-09-06 Crash reporter is enabled by default and will upload data on crashes to api.cowrie.org. This can be disabled in by setting ``enabled=false`` in ``[output_crashreporter]``\n* 2019-09-05 Proxy functionality now active by @sgtpepperpt and GSoC2019\n* 2019-06-20 Move `auth_none` and `auth_keyboard_interactive_enabled` to [ssh] config section\n\nRelease 1.6.0\n*************\n\n* 2019-03-31 New documentation theme\n* 2019-03-23 Greynoise output plugin (@mzfr)\n* 2019-03-19 direct-tcp forwarding now written to databases (@gborges)\n* 2019-03-19 Reverse DNS output plugin (@mzfr)\n* 2019-03-17 Shell emulation pipe upgrade (@nunonovais)\n* 2019-03-14 Shell emulation environment variables improved (@nunonovais)\n* 2019-03-14 SSH crypto parameters now configurable in config file (@msharma)\n* 2019-03-13 Disable keyboard-interactive authentication by default with option to enable\n* 2019-03-13 Added `wc`, `crontab`, `chpasswd` command (@nunonovais)\n* 2019-\n* 2019-03-07 Output of `ssh -V` now configurable in cowrie.cfg with ssh_version setting\n* 2019-03-07 Multiple timezone support in cowrie.cfg timezone directive. Default timezone is now UTC for both cowrie.log and cowrie.json\n* 2019-03-12 Handle multiple password prompt. Option to enable or disable keyboard interactive prompt.\n\nRelease 1.5.3\n*************\n\n* 2019-01-27 Telnet NAWS negotation removed to stop NMAP cowrie detection\n* 2019-01-27 Various fixes for Python2/3 compatibility\n* 2019-01-09 Documentation converted to ReStructuredText\n* 2018-12-04 Fixes for VT outut plugin to only submit new files\n\nRelease 1.5.2\n*************\n\n* 2018-11-19 Fix tftp exception and tftp test\n* 2018-11-14 Remove `dblog` mechanism and `splunk` legacy output plugin.\n* 2018-11-01 Add Python3 support for Splunk output plugin\n* 2018-10-23 Improved free command\n* 2018-10-20 Improved uname command\n* 2018-10-16 Save VT results to JSON log\n\nRelease 1.5.1\n*************\n\n* 2018-10-13 Fixes VT uploads, tab completion on Python3, Hassh support, setuptools functional. userdb migration\n* 2018-09-07 NOTE! data/userdb.txt has moved to etc/userdb.txt and a default config is no longer provided!\n* 2018-08-25 Downloads and TTY logs have moved to the var/ directory\n* 2018-08-11 SSH keys now stored in var/lib/cowrie\n* 2018-07-21 source code has move to the src/ directory. Delete old directories twisted/cowrie with compiled code\n* 2018-06-29 txtcmds have been moved to share/cowrie/txtcmds\n* 2018-06-28 filesystem config entry has changed. please verify if you have custom entry or pickle file\n* 2018-06-23 fingerprint log message now holds KEX attributes and a unique fingerprint for the client\n* 2018-04-27 Output plugins now require the mandatory config entry 'enabled'.\n* 2018-02-06 cowrie.log now uses same rotation mechanism as cowrie.json. One file per day, rather than the default 1MB per file.\n* 2017-12-13 Default umask for logs is now 0007. This means group members can access.\n* 2017-10-24 Can store uploaded and downloaded artifacts to S3\n* 2017-09-23 First proxy implementation for exec commands only\n* 2017-07-03 Cuckoo v2 integration\n* 2017-05-16 now combines config files: cowrie.cfg.dist and cowrie.cfg in this order\n* 2017-05-09 start.sh and stop.sh have been replace by bin/cowrie start|stop\n* 2017-04-27 New syntax \"listen_endpoints\" for configuring listening IP addresses/portnumbers\n* 2017-03-15 SSH Forwarding/SFTP/keys/version config have been moved to [ssh]. Change your config file!\n* 2017-02-12 Implemented toggle for SSH forwarding\n* 2016-08-22 Merged Telnet support by @obilodeau!\n* 2016-08-20 Update your libraries! 'configparser' now required: \"pip install configparser\"\n* 2016-05-06 Load pickle once at startup for improved speed\n* 2016-04-28 files in utils/ have been moved to bin/\n* 2016-01-19 Support openssh style delayed compression\n* 2016-01-13 Correct '.' support and +s and +t bits in ls\n* 2016-01-13 Full username/group in SFTP ls\n* 2016-01-05 Basic VirusTotal support has been added\n* 2016-01-04 No longer crash when client tries ecdsa\n* 2015-12-28 Interact port (default 5123) only listens on loopback interface now (127.0.0.1)\n* 2015-12-24 Redirect to file (>) now works for most commands and is logged in dl/ directory\n* 2015-12-06 UID information is now retrieved from honeyfs/etc/passwd. If you added additional users\n             you will need to add these to the passwd file as well\n* 2015-12-04 New 'free' command with '-h' and '-m' options\n* 2015-12-03 New 'env' command that prints environment variables\n* 2015-02-02 Now use honeyfs/etc/passwd and group to get uid/gid info\n* 2015-11-29 Size limit now enforced for SFTP uploads\n* 2015-11-25 New 'sudo' command added\n* 2015-11-19 Queued input during commands is now sent to shell to be executed\n             when command is finished\n* 2015-11-18 Added SANS DShield output (Thanks @UnrealAkama)\n* 2015-11-17 Added ElasticSearch output (Thanks @UnrealAkama)\n* 2015-11-17 Standard input is now saved with SHA256 checksum. Duplicate data is not saved\n* 2015-11-12 New 'busybox' command added (Thanks @mak)\n* 2015-09-26 keyboard-interactive is back as authentication method, after\n             Twisted removed support initially\n* 2015-07-30 Local syslog output module\n* 2015-06-15 Cowrie now has a '-c' startup switch to specify the configuration file\n* 2015-06-15 Removed exec_enabled option. This feature is now always enabled\n* 2015-06-03 Cowrie now uses twisted plugins and has gained the '-p' commandline option\n* 2015-06-01 Cowrie no longer search for config files in /etc and /etc/cowrie\n* 2015-04-12 JSON output is now default via 'output' plugin mechanism. Rotates daily\n* 2015-04-10 Fix for downloading files via SFTP\n* 2015-03-31 Small tweaks on session close, closing session does not close ssh transport\n* 2015-03-18 Merged 'AuthRandom' login class by Honigbij\n* 2015-02-25 Internals for dblog/ modules changed completely.\n             Now accepts structured logging arguments, and uses eventids instead of regex parsing\n* 2015-02-20 Removed screen clear/reset on logout\n* 2015-02-19 Configuration directives have changed! ssh_addr has become listen_addr and ssh_port has become listen_port. The old keywords are still accepted for backwards compatibility\n\n* default behaviour is changed to disable the exit jail\n* sftp support\n* exec support\n* stdin is saved as a file in dl/ when using exec commands\n    to support commands like 'cat >file; ./file'\n* allow wget download over non-80 port\n* simple JSON logging added\n* accept log and deny publickey authentication\n* add uname -r, -m flags\n* add working sleep command\n* enabled ssh diffie-hellman-group-exchange-sha1 algorithm\n* add 'bash -c' support (no effect option)\n* enable support for && multiple commands\n* create uuid to uniquely identify each session\n* log and deny direct-tcpip attempts\n* add \"chattr\" command\n* support emacs keybindings (c-a, c-b, c-f, c-p, c-n, c-e)\n* add \"sync\" command\n* accept, log and deny public key authentication\n* add \"uname -r\" support\n* logstash and kibana config files added, based on JSON log\n* fix for honeypot detection (pre-auth differences with openssh)\n* added verbose logging of client requested key exchange parameters (for client fingerprinting)\n* fixes for behavior with non-existent files (cd /test, cat /test/nonexistent, etc)\n* fix for ability to ping/ssh non-existent IP address\n* always send ssh exit-status 0 on exec and shell\n* ls output is now alphabetically sorted\n* banner_file is deprecated. honeyfs/etc/issue.net is default\n* add 'dir' alias for 'ls'\n* add 'help' bash builtin\n* add 'users' aliased to 'whoami'\n* add 'killall' and 'killall5' aliased to nop\n* add 'poweroff' 'halt' and 'reboot' aliases for shutdown\n* add environment passing to commands\n* added 'which', 'netstat' and 'gcc' from kippo-extra\n* logging framework allows for keyword use\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 2.8544921875,
          "content": "Contributing Guidelines\n#######################\n\nThank you for your interest in contributing to our project. Whether it's a bug report, new feature, correction, or additional\ndocumentation, we greatly value feedback and contributions from our community.\n\nPlease read through this document before submitting any issues or pull requests to ensure we have all the necessary\ninformation to effectively respond to your bug report or contribution.\n\nReporting Bugs/Feature Requests\n*******************************\n\nWe welcome you to use the GitHub issue tracker to report bugs or suggest features.\n\nWhen filing an issue, please check `existing open <https://github.com/cowrie/cowrie>`_, or `recently closed <https://github.com/cowrie/cowrie/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20>`_, issues to make sure somebody else hasn't already\nreported the issue. Please try to include as much information as you can. Details like these are incredibly useful:\n\n* A reproducible test case or series of steps\n* The version of our code being used\n* Any modifications you've made relevant to the bug\n* Anything unusual about your environment or deployment\n\n\nContributing via Pull Requests\n******************************\n\nContributions via pull requests are much appreciated. Before sending us a pull request, please ensure that:\n\n1. You are working against the latest source on the *master* branch.\n2. You check existing open, and recently merged, pull requests to make sure someone else hasn't addressed the problem already.\n3. You open an issue to discuss any significant work - we would hate for your time to be wasted.\n\nTo send us a pull request, please:\n\n1. Fork the repository.\n2. Modify the source; please focus on the specific change you are contributing. If you also reformat all the code, it will be hard for us to focus on your change.\n3. Ensure local tests pass.\n4. Commit to your fork using clear commit messages.\n5. Send us a pull request, answering any default questions in the pull request interface.\n6. Pay attention to any automated CI failures reported in the pull request, and stay involved in the conversation.\n\nGitHub provides additional document on `forking a repository <https://help.github.com/articles/fork-a-repo/>`_ and\n`creating a pull request <https://help.github.com/articles/creating-a-pull-request/>`_.\n\nFinding contributions to work on\n********************************\n\nLooking at the existing issues is a great way to find something to contribute on. As our projects, by default, use the default GitHub issue labels ((enhancement/bug/duplicate/help wanted/invalid/question/wontfix), looking at any `help wanted <https://github.com/cowrie/cowrie/labels/help%20wanted>`_ issues is a great place to start.\n\nLicensing\n*********\n\nSee the `LICENSE <https://github.com/cowrie/cowrie/blob/master/LICENSE.rst>`_ file for our project's licensing. We will ask you confirm the licensing of your contribution.\n"
        },
        {
          "name": "INSTALL.rst",
          "type": "blob",
          "size": 9.384765625,
          "content": "Installing Cowrie in seven steps\n################################\n\nThis guide describes how to install Cowrie in ``shell`` mode. For ``proxy`` mode\nread `PROXY.rst`.\n\n* :ref:`Step 1: Install system dependencies<Step 1: Install system dependencies>`\n* :ref:`Step 2: Create a user account<Step 2: Create a user account>`\n* :ref:`Step 3: Checkout the code<Step 3: Checkout the code>`\n* :ref:`Step 4: Setup Virtual Environment<Step 4: Setup Virtual Environment>`\n* :ref:`Step 5: Install configuration file<Step 5: Install configuration file>`\n* :ref:`Step 6: Starting Cowrie<Step 6: Starting Cowrie>`\n* :ref:`Step 7: Listening on port 22 (OPTIONAL)<Step 7: Listening on port 22 (OPTIONAL)>`\n* :ref:`Installing Backend Pool dependencies (OPTIONAL)<Installing Backend Pool dependencies (OPTIONAL)>`\n* :ref:`Running using supervisord (OPTIONAL)<Running using supervisord (OPTIONAL)>`\n* :ref:`Configure Additional Output Plugins (OPTIONAL)<Configure Additional Output Plugins (OPTIONAL)>`\n* :ref:`Troubleshooting<Troubleshooting>`\n* :ref:`Updating Cowrie<Updating Cowrie>`\n* :ref:`Modifying Cowrie<Modifying Cowrie>`\n\nStep 1: Install system dependencies\n***********************************\n\nFirst we install system-wide support for Python virtual environments and other dependencies.\nActual Python packages are installed later.\n\nOn Debian based systems (last verified on Debian Bookworm)::\n\n    $ sudo apt-get install git python3-venv libssl-dev libffi-dev build-essential libpython3-dev python3-minimal authbind\n\nStep 2: Create a user account\n*****************************\n\nIt's strongly recommended to run with a dedicated non-root user id::\n\n    $ sudo adduser --disabled-password cowrie\n    Adding user 'cowrie' ...\n    Adding new group 'cowrie' (1002) ...\n    Adding new user 'cowrie' (1002) with group 'cowrie' ...\n    Changing the user information for cowrie\n    Enter the new value, or press ENTER for the default\n    Full Name []:\n    Room Number []:\n    Work Phone []:\n    Home Phone []:\n    Other []:\n    Is the information correct? [Y/n]\n\n    $ sudo su - cowrie\n\nStep 3: Checkout the code\n*************************\n\nCheck out the code::\n\n    $ git clone http://github.com/cowrie/cowrie\n    Cloning into 'cowrie'...\n    remote: Counting objects: 2965, done.\n    remote: Compressing objects: 100% (1025/1025), done.\n    remote: Total 2965 (delta 1908), reused 2962 (delta 1905), pack-reused 0\n    Receiving objects: 100% (2965/2965), 3.41 MiB | 2.57 MiB/s, done.\n    Resolving deltas: 100% (1908/1908), done.\n    Checking connectivity... done.\n\n    $ cd cowrie\n\nStep 4: Setup Virtual Environment\n*********************************\n\nNext you need to create your virtual environment::\n\n    $ pwd\n    /home/cowrie/cowrie\n    $ python -m venv cowrie-env\n    New python executable in ./cowrie/cowrie-env/bin/python\n    Installing setuptools, pip, wheel...done.\n\nActivate the virtual environment and install packages::\n\n    $ source cowrie-env/bin/activate\n    (cowrie-env) $ python -m pip install --upgrade pip\n    (cowrie-env) $ python -m pip install --upgrade -r requirements.txt\n\nStep 5: Install configuration file\n**********************************\n\nThe configuration for Cowrie is stored in cowrie.cfg.dist and\ncowrie.cfg (Located in cowrie/etc). Both files are read on startup, where entries from\ncowrie.cfg take precedence. The .dist file can be overwritten by\nupgrades, cowrie.cfg will not be touched. To run with a standard\nconfiguration, there is no need to change anything. To enable telnet,\nfor example, create cowrie.cfg and input only the following::\n\n    [telnet]\n    enabled = true\n\nStep 6: Starting Cowrie\n***********************\n\nStart Cowrie with the cowrie command. You can add the cowrie/bin\ndirectory to your path if desired. An existing virtual environment\nis preserved if activated, otherwise Cowrie will attempt to load\nthe environment called \"cowrie-env\"::\n\n\n    $ bin/cowrie start\n    Activating virtualenv \"cowrie-env\"\n    Starting cowrie with extra arguments [] ...\n\nStep 7: Listening on port 22 (OPTIONAL)\n***************************************\n\nThere are three methods to make Cowrie accessible on the default SSH port (22): `iptables`, `authbind` and `setcap`.\n\nIptables\n========\n\nPort redirection commands are system-wide and need to be executed as root.\nA firewall redirect can make your existing SSH server unreachable, remember to move the existing\nserver to a different port number first.\n\nThe following firewall rule will forward incoming traffic on port 22 to port 2222 on Linux::\n\n    $ sudo iptables -t nat -A PREROUTING -p tcp --dport 22 -j REDIRECT --to-port 2222\n\nOr for telnet::\n\n    $ sudo iptables -t nat -A PREROUTING -p tcp --dport 23 -j REDIRECT --to-port 2223\n\nNote that you should test this rule only from another host; it doesn't apply to loopback connections.\n\nOn MacOS run::\n\n    $ echo \"rdr pass inet proto tcp from any to any port 22 -> 127.0.0.1 port 2222\" | sudo pfctl -ef -\n\nAuthbind\n========\n\nAlternatively you can run authbind to listen as non-root on port 22 directly::\n\n    $ sudo apt-get install authbind\n    $ sudo touch /etc/authbind/byport/22\n    $ sudo chown cowrie:cowrie /etc/authbind/byport/22\n    $ sudo chmod 770 /etc/authbind/byport/22\n\nEdit bin/cowrie and modify the AUTHBIND_ENABLED setting\n\nChange the listening port to 22 in cowrie.cfg::\n\n    [ssh]\n    listen_endpoints = tcp:22:interface=0.0.0.0\n\nOr for telnet::\n\n    $ apt-get install authbind\n    $ sudo touch /etc/authbind/byport/23\n    $ sudo chown cowrie:cowrie /etc/authbind/byport/23\n    $ sudo chmod 770 /etc/authbind/byport/23\n\nChange the listening port to 23 in cowrie.cfg::\n\n    [telnet]\n    listen_endpoints = tcp:2223:interface=0.0.0.0\n\nSetcap\n======\n\nOr use setcap to give permissions to Python to listen on ports<1024::\n\n    $ setcap cap_net_bind_service=+ep /usr/bin/python3\n\nAnd change the listening ports in ``cowrie.cfg`` as above.\n\n\nInstalling Backend Pool dependencies (OPTIONAL)\n***********************************************\n\nIf you want to use the proxy functionality combined with the automatic\nbackend pool, you need to install some dependencies, namely QEMU, libvirt,\nand their Python interface. In Debian/Ubuntu::\n\n    $ sudo apt-get install qemu qemu-system-arm qemu-system-x86 libvirt-dev libvirt-daemon libvirt-daemon-system libvirt-clients nmap\n\nThen install the Python API to run the backend pool::\n\n    (cowrie-env) $ python -m pip install libvirt-python==6.4.0\n\nTo allow QEMU to use disk images and snapshots, set it to run with the user and group of the user running the pool\n(usually called 'cowrie' too::\n\n    $ sudo vim /etc/libvirt/qemu.conf\n\nSearch and set both `user` and `group` to `\"cowrie\"`, or the username/group you'll be running the backend pool with.\n\nRunning using Supervisord (OPTIONAL)\n************************************\n\nOn Debian, put the below in /etc/supervisor/conf.d/cowrie.conf::\n\n    [program:cowrie]\n    command=/home/cowrie/cowrie/bin/cowrie start -n\n    directory=/home/cowrie/cowrie/\n    user=cowrie\n    autorestart=true\n    redirect_stderr=true\n\nConfigure Additional Output Plugins (OPTIONAL)\n**********************************************\n\nCowrie automatically outputs event data to text and JSON log files\nin ``var/log/cowrie``.  Additional output plugins can be configured to\nrecord the data other ways.  Supported output plugins include:\n\n* Cuckoo\n* ELK (Elastic) Stack\n* Graylog\n* Kippo-Graph\n* Splunk\n* SQL (MySQL, SQLite3, RethinkDB)\n\nSee ~/cowrie/docs/[Output Plugin]/README.rst for details.\n\n\nTroubleshooting\n***************\n\nCryptographyDeprecationWarning: Blowfish has been deprecated\n============================================================\n\nThe following warnings may occur, these can be safely ignored, and\nare not the reason your Cowrie installation is not working::\n\n    CryptographyDeprecationWarning: Blowfish has been deprecated b\"blowfish-cbc\": (algorithms.Blowfish, 16, modes.CBC),\n    CryptographyDeprecationWarning: CAST5 has been deprecated b\"cast128-cbc\": (algorithms.CAST5, 16, modes.CBC),\n    CryptographyDeprecationWarning: Blowfish has been deprecated b\"blowfish-ctr\": (algorithms.Blowfish, 16, modes.CTR),\n    CryptographyDeprecationWarning: CAST5 has been deprecated b\"cast128-ctr\": (algorithms.CAST5, 16, modes.CTR),\n\nThe algorithms are used in Cowrie to support old attackers that use\nthese deprecated algorithms.\n\ntwistd: unknown command: cowrie\n===============================\n\nIf you see ``twistd: Unknown command: cowrie`` there are two\npossibilities. If there's a Python stack trace, it probably means\nthere's a missing or broken dependency. If there's no stack trace,\ndouble check that your PYTHONPATH is set to the source code directory.\n\nDefault file permissions\n========================\n\nTo make Cowrie logfiles public readable, change the ``--umask 0077``\noption in ``bin/cowrie`` into ``--umask 0022``\n\nGeneral approach\n================\n\nCheck the log file in ``var/log/cowrie/cowrie.log``.\n\nUpdating Cowrie\n***************\n\nFirst stop your honeypot. Then pull updates from GitHub, and upgrade your Python dependencies::\n\n    $ bin/cowrie stop\n    $ git pull\n    $ python -m pip install --upgrade -r requirements.txt\n\nIf you use output plugins like SQL, Splunk, or ELK, remember to also upgrade your dependencies for these too::\n\n    $ python -m pip install --upgrade -r requirements-output.txt\n\nAnd finally, restart Cowrie after finishing all updates::\n\n    $ bin/cowrie start\n\nModifying Cowrie\n****************\n\nThe pre-login banner can be set by creating the file ``honeyfs/etc/issue.net``.\nThe post-login banner can be customized by editing ``honeyfs/etc/motd``.\n"
        },
        {
          "name": "LICENSE.rst",
          "type": "blob",
          "size": 1.400390625,
          "content": "LICENSE\n#######\n\nCopyright (c) 2009-2024 Upi Tamminen, Michel Oosterhof\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in the\n  documentation and/or other materials provided with the distribution.\n* The names of the author(s) may not be used to endorse or promote\n  products derived from this software without specific prior written\n  permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHORS ''AS IS'' AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED\nAND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\nOUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.17578125,
          "content": "include *.rst\ninclude etc/cowrie.cfg.dist\nrecursive-include src/cowrie/data *\nrecursive-include src/twisted *.py\nrecursive-include src/cowrie *.py\ngraft honeyfs\ngraft share/cowrie\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.400390625,
          "content": "# This `Makefile` is intended for Cowrie developers.\n\n# Set default docker binary to docker in path if not specified.\n# This allows you to use other container runtimes (such as podman)\n# For example, to build with podman: DOCKER=podman make docker-build\nDOCKER?=docker\n\n# Dummy target `all`\n.DEFAULT_GOAL := help\n.PHONY: all\nall: help\n\t@echo $(COMMIT)--\n\nhelp:\n\t@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[36m%-30s\\033[0m %s\\n\", $$1, $$2}'\n\n.PHONY: test\ntest:\n\ttox\n\n.PHONY: build\nbuild:\n\tpython -m build\n\n.PHONY: docs\ndocs: ## Create documentation\n\tmake -C docs html\n\n.PHONY: lint\nlint: ## Run lint checks\n\ttox -e lint\n\thadolint docker/Dockerfile\n\n.PHONY: clean\nclean: ## Clean temporary files\n\trm -rf _trial_temp build dist src/_trial_temp src/Cowrie.egg-info\n\tmake -C docs clean\n\n.PHONY: pre-commit\npre-commit: ## Run pre-commit checks\n\tpre-commit run --all-files\n\n.PHONY: pip-upgrade\npip-upgrade: ## Upgrade environment from requirements.txt\n\tpython -m pip install --upgrade -r requirements.txt\n\n.PHONY: pip-check\npip-check: ## Verify python packages\n\tpython -m pip check\n\n# This assumes two remotes, one is `origin`, your fork. The second is `cowrie` the main project\n.PHONY: git-remote\ngit-remote: ## Add remote git configuration\n\tgit remote add cowrie https://github.com/cowrie/cowrie\n\n.PHONY: pur\npip-pur: ## Upgrade dependencies based on latest packages\n\tgit checkout master\n\t-git branch -D \"dependency-upgrade-`date -u +%Y-%m-%d`\"\n\tgit checkout -b \"dependency-upgrade-`date -u +%Y-%m-%d`\"\n\tpur -r requirements.txt\n\tpur -r requirements-dev.txt\n\tpur -r requirements-output.txt\n\tgit commit -m \"dependency upgrade `date -u`\" requirements*.txt\n# This Makefile is for developers and is not required to run Cowrie\n\n# The binary to build (just the basename).\nMODULE := cowrie\n\n# Where to push the docker image.\n#REGISTRY ?= docker.pkg.github.com/cowrie/cowrie\nREGISTRY ?= cowrie\n\nIMAGE := $(REGISTRY)/$(MODULE)\n\nCONTAINERNAME := cowrie\nPLATFORM := linux/amd64,linux/arm64\n\nBUILD_DATE = $(shell date -u +'%Y-%m-%dT%H:%M:%SZ')\nTAG=$(shell git rev-parse --short=8 HEAD)\n\n\n.PHONY: docker-build\ndocker-build: docker/Dockerfile ## Build Docker image\n\t-$(DOCKER) buildx create --name cowrie-builder\n\t$(DOCKER) buildx use cowrie-builder\n\t$(DOCKER) buildx build --sbom=true --provenance=true --platform ${PLATFORM} -t ${IMAGE}:${TAG} -t ${IMAGE}:latest --build-arg BUILD_DATE=${BUILD_DATE} -f docker/Dockerfile .\n\n.PHONY: docker-load\ndocker-load: docker-build ## Load Docker image\n\t-$(DOCKER) buildx create --name cowrie-builder\n\t$(DOCKER) buildx use cowrie-builder\n\t$(DOCKER) buildx build --load -t ${IMAGE}:${TAG} -t ${IMAGE}:latest --build-arg BUILD_DATE=${BUILD_DATE} -f docker/Dockerfile .\n\n.PHONY: docker-build ## Push Docker image\ndocker-push:  ## Push Docker image to Docker Hub\n\t-$(DOCKER) buildx create --name cowrie-builder\n\t@echo \"Pushing image to GitHub Docker Registry...\\n\"\n\t$(DOCKER) buildx use cowrie-builder\n\t$(DOCKER) buildx build --sbom=true --provenance=true --platform ${PLATFORM} -t ${IMAGE}:${TAG} -t ${IMAGE}:latest --build-arg BUILD_DATE=${BUILD_DATE} -f docker/Dockerfile --push .\n\n.PHONY: docker-run\ndocker-run: docker-start ## Run Docker container\n\n.PHONY: docker-start\ndocker-start: docker-create-volumes ## Start Docker container\n\t$(DOCKER) run -p 2222:2222/tcp \\\n\t\t   -p 2223:2223/tcp \\\n\t\t   -v cowrie-etc:/cowrie/cowrie-git/etc \\\n\t\t   -v cowrie-var:/cowrie/cowrie-git/var \\\n\t\t   -d \\\n\t\t   --cap-drop=ALL \\\n\t\t   --read-only \\\n\t           --name ${CONTAINERNAME} ${IMAGE}:${TAG}\n\n.PHONY: docker-stop\ndocker-stop: ## Stop Docker Container\n\t$(DOCKER) stop ${CONTAINERNAME}\n\n.PHONY: docker-rm\ndocker-rm: docker-stop ## Delete Docker Container\n\t$(DOCKER) rm ${CONTAINERNAME}\n\n.PHONY: docker-clean\ndocker-clean: docker-rm ## Clean\n\t$(DOCKER) rmi ${IMAGE}:${TAG}\n\n.PHONY: docker-shell\ndocker-shell: ## Start shell in running Docker container\n\t@$(DOCKER) exec -it ${CONTAINERNAME} bash\n\n.PHONY: docker-logs\ndocker-logs: ## Show Docker container logs\n\t@$(DOCKER) logs ${CONTAINERNAME}\n\n.PHONY: docker-ps\ndocker-ps:\n\t@$(DOCKER) ps -f name=${CONTAINERNAME}\n\n.PHONY: docker-status\ndocker-status: docker-ps ## List running Docker containers\n\n.PHONY: docker-ip\ndocker-ip: ## List IP of running Docker container\n\t@$(DOCKER) inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${CONTAINERNAME}\n\n.PHONY: docker-create-volumes\ndocker-create-volumes:\n\t$(DOCKER) volume create cowrie-var\n\t$(DOCKER) volume create cowrie-etc\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 4.255859375,
          "content": "Cowrie\n######\n\nWelcome to the Cowrie GitHub repository\n*****************************************\n\nThis is the official repository for the Cowrie SSH and Telnet\nHoneypot effort.\n\nWhat is Cowrie\n*****************************************\n\nCowrie is a medium to high interaction SSH and Telnet honeypot\ndesigned to log brute force attacks and the shell interaction\nperformed by the attacker. In medium interaction mode (shell) it\nemulates a UNIX system in Python, in high interaction mode (proxy)\nit functions as an SSH and telnet proxy to observe attacker behavior\nto another system.\n\n`Cowrie <http://github.com/cowrie/cowrie/>`_ is maintained by Michel Oosterhof.\n\nDocumentation\n****************************************\n\nThe Documentation can be found `here <https://docs.cowrie.org/en/latest/index.html>`_.\n\nSlack\n*****************************************\n\nYou can join the Cowrie community at the following `Slack workspace <https://www.cowrie.org/slack/>`_.\n\nFeatures\n*****************************************\n\n* Choose to run as an emulated shell (default):\n   * Fake filesystem with the ability to add/remove files. A full fake filesystem resembling a Debian 5.0 installation is included\n   * Possibility of adding fake file contents so the attacker can `cat` files such as `/etc/passwd`. Only minimal file contents are included\n   * Cowrie saves files downloaded with wget/curl or uploaded with SFTP and scp for later inspection\n\n* Or proxy SSH and telnet to another system\n   * Run as a pure telnet and ssh proxy with monitoring\n   * Or let Cowrie manage a pool of QEMU emulated servers to provide the systems to login to\n\nFor both settings:\n\n* Session logs are stored in an `UML Compatible <http://user-mode-linux.sourceforge.net/>`_  format for easy replay with the `bin/playlog` utility.\n* SFTP and SCP support for file upload\n* Support for SSH exec commands\n* Logging of direct-tcp connection attempts (ssh proxying)\n* Forward SMTP connections to SMTP Honeypot (e.g. `mailoney <https://github.com/awhitehatter/mailoney>`_)\n* JSON logging for easy processing in log management solutions\n\nDocker\n*****************************************\n\nDocker images are available on Docker Hub.\n\n* To get started quickly and give Cowrie a try, run::\n\n    $ docker run -p 2222:2222 cowrie/cowrie:latest\n    $ ssh -p 2222 root@localhost\n\nFor more detailed instructions on using Docker in Cowrie, check\n:ref:`Building Docker Images<Building Docker Images>`\n\nRequirements\n*****************************************\n\nSoftware required to run locally:\n\n* Python 3.9+\n* python-virtualenv\n\nFor Python dependencies, see `requirements.txt <https://github.com/cowrie/cowrie/blob/master/requirements.txt>`_.\n\nFiles of interest:\n*****************************************\n\n* `etc/cowrie.cfg` - Cowrie's configuration file.\n* `etc/cowrie.cfg.dist <https://github.com/cowrie/cowrie/blob/master/etc/cowrie.cfg.dist>`_ - default settings, don't change this file\n* `etc/userdb.txt` - credentials to access the honeypot\n* `src/cowrie/data/fs.pickle` - fake filesystem, this only contains metadata (path, uid, gid, size)\n* `honeyfs/ <https://github.com/cowrie/cowrie/tree/master/honeyfs>`_ - contents for the fake filesystem\n* `honeyfs/etc/issue.net` - pre-login banner\n* `honeyfs/etc/motd <https://github.com/cowrie/cowrie/blob/master/honeyfs/etc/issue>`_ - post-login banner\n* `src/cowrie/data/txtcmds/` - output for simple fake commands\n* `var/log/cowrie/cowrie.json` - audit output in JSON format\n* `var/log/cowrie/cowrie.log` - log/debug output\n* `var/lib/cowrie/tty/` - session logs, replayable with the `bin/playlog` utility.\n* `var/lib/cowrie/downloads/` - files transferred from the attacker to the honeypot are stored here\n* `bin/createfs` - create your own fake filesystem\n* `bin/playlog` - utility to replay session logs\n\nContributors\n***************\n\nMany people have contributed to Cowrie over the years. Special thanks to:\n\n* Upi Tamminen (desaster) for all his work developing Kippo on which Cowrie was based\n* Dave Germiquet (davegermiquet) for TFTP support, unit tests, new process handling\n* Olivier Bilodeau (obilodeau) for Telnet support\n* Ivan Korolev (fe7ch) for many improvements over the years.\n* Florian Pelgrim (craneworks) for his work on code cleanup and Docker.\n* Guilherme Borges (sgtpepperpt) for SSH and telnet proxy (GSoC 2019)\n* And many many others.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "honeyfs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 5.484375,
          "content": "[build-system]\nrequires = [\"setuptools >= 65.63\"]\n\n[project]\nname = \"cowrie\"\ndynamic = [\"version\"]\ndescription=\"Cowrie SSH/Telnet Honeypot.\"\nlicense.text=\"BSD-3-Clause\"\nauthors = [ {name = \"Michel Oosterhof\", email=\"michel@oosterhof.net\"}, ]\nmaintainers = [ {name = \"Michel Oosterhof\", email=\"michel@oosterhof.net\"}, ]\nkeywords=[\"ssh\", \"telnet\", \"honeypot\"]\nrequires-python = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*, !=3.6.*, !=3.7.*, !=3.8.*, <4\"\nreadme=\"README.rst\"\nclassifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: No Input/Output (Daemon)\",\n        \"Framework :: Twisted\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: System Administrators\",\n        \"License :: OSI Approved :: BSD License\",\n        \"Operating System :: MacOS :: MacOS X\",\n        \"Operating System :: POSIX :: Linux\",\n        \"Operating System :: POSIX\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3 :: Only\",\n        \"Topic :: Security\"\n]\n\ndependencies = [\n        \"attrs==24.3.0\",\n        \"bcrypt==4.2.1\",\n        \"cryptography==44.0.0\",\n        \"hyperlink==21.0.0\",\n        \"idna==3.10\",\n        \"packaging==24.2\",\n        \"pyasn1_modules==0.4.1\",\n        \"requests==2.32.3\",\n        \"service_identity==24.2.0\",\n        \"tftpy==0.8.2\",\n        \"treq==24.9.1\",\n        \"twisted==24.11.0\",\n]\n\n[project.urls]\nhomepage = \"https://www.cowrie.org/\"\ndocumentation = \"https://docs.cowrie.org/\"\nrepository = \"https://github.com/cowrie/cowrie\"\n\n[project.scripts]\nfsctl = \"cowrie.scripts.fsctl:run\"\nasciinema = \"cowrie.scripts.asciinema:run\"\ncreatfs = \"cowrie.scripts.createfs:run\"\nplaylog = \"cowrie.scripts.playlog:run\"\n\n[project.optional-dependencies]\ncsirtg = [\"csirtgsdk==1.1.5\"]\ndshield = [\"requests\"]\nelasticsearch = [\"pyes\"]\nmysql = [\"mysqlclient\"]\nmongodb = [\"pymongo\"]\nrethinkdblog = [\"rethinkdb\"]\ns3 = [\"botocore\"]\nslack = [\"slackclient\"]\ninfluxdb = [\"influxdb\"]\ndev = [\n\"build==1.2.2.post1\",\n\"coverage==7.6.10\",\n\"mypy-extensions==1.0.0; platform_python_implementation=='CPython'\",\n\"mypy-zope==1.0.10; platform_python_implementation=='CPython'\",\n\"mypy==1.13.0; platform_python_implementation=='CPython'\",\n\"pathspec==0.12.1\",\n\"pipdeptree==2.24.0\",\n\"pre-commit==4.0.1\",\n\"pylint==3.3.3\",\n\"pyre-check==0.9.23\",\n\"pyright==1.1.391\",\n\"pytype==2024.1.24; platform_python_implementation=='CPython' and python_version<='3.9'\",\n\"pytype==2024.10.11; platform_python_implementation=='CPython' and python_version>='3.10'\",\n\"pyupgrade==3.19.1\",\n\"pyyaml==6.0.2\",\n\"readthedocs-sphinx-search==0.3.2\",\n\"ruff==0.8.2\",\n\"setuptools==75.6.0\",\n\"sphinx-copybutton==0.5.2\",\n\"sphinx_rtd_theme==3.0.2\",\n\"tox==4.23.2\",\n\"types-python-dateutil==2.9.0.20241206\",\n\"types-redis==4.6.0.20241004\",\n\"types-requests==2.32.0.20241016\",\n\"yamllint==1.35.1\",\n]\n\n[tool.isort]\nprofile = \"black\"\nknown_zope = \"zope\"\nknown_twisted = \"twisted\"\nknown_first_party = [\"cowrie\",\"backend_pool\"]\nsections=[\"FUTURE\",\"STDLIB\",\"THIRDPARTY\",\"ZOPE\",\"TWISTED\",\"FIRSTPARTY\",\"LOCALFOLDER\"]\n\n\n[tool.mypy]\nnamespace_packages = true\nplugins = [ \"mypy_zope:plugin\" ]\ndisable_error_code = [ \"annotation-unchecked\" ]\n\nignore_missing_imports      = true\nwarn_unused_configs         = true\nno_implicit_optional        = true\nshow_column_numbers         = true\nshow_error_codes            = true\nstrict_optional             = true\nwarn_no_return              = true\nwarn_redundant_casts        = true\nwarn_return_any             = true\nwarn_unreachable            = true\ndisallow_incomplete_defs    = true\ndisallow_any_unimported     = true\nstrict_equality             = true\ndisallow_untyped_decorators = true\ndisallow_subclassing_any    = true\nwarn_unused_ignores         = true\nlocal_partial_types         = true\nno_implicit_reexport        = true\n\n# Getting these passing should be easy\n# strict_concatenate          = true\n\n# These are too strict for us at the moment\n\ncheck_untyped_defs          = false\ndisallow_untyped_defs       = false\ndisallow_any_decorated      = false\ndisallow_any_explicit       = false\ndisallow_any_expr           = false\ndisallow_any_generics       = false\ndisallow_untyped_calls      = false\n\n\n[tool.pylint.\"MESSAGES CONTROL\"]\ndisable = [\"R0801\", \"R0901\", \"R0902\", \"R0903\", \"R0904\", \"R0912\", \"R0913\", \"R0914\", \"R0915\", \"C0103\", \"C0114\", \"C0115\", \"C0116\", \"C0301\", \"W0201\"]\nignored-classes = [\"twisted.internet.reactor\"]\n\n\n[tool.pyright]\ninclude = [\"src\"]\ntypeCheckingMode = \"strict\"\nreportArgumentType = \"none\"\nreportAssignmentType = \"none\"\nreportAttributeAccessIssue = \"none\"\nreportCallIssue = \"information\"\nreportGeneralTypeIssues = \"information\"\nreportIncompatibleMethodOverride = \"information\"\nreportIncompatibleVariableOverride = \"none\"\nreportMissingImports = \"none\"\nreportMissingModuleSource = \"none\"\nreportOperatorIssue = \"information\"\nreportOptionalCall = \"information\"\nreportOptionalMemberAccess = \"none\"\nreportOptionalOperand = \"information\"\nreportPossiblyUnboundVariable = \"information\"\nreportUnsupportedDunderAll = \"information\"\n\n[tool.pytype]\ninputs = [\"src\"]\njobs = \"auto\"\nkeep-going = true\n\n[tool.ruff]\nline-length = 88\n\n# Enable Pyflakes `E` and `F` codes by default.\nlint.select = [\"A\", \"B\", \"E\", \"F\", \"UP\", \"YTT\", \"B\", \"T20\", \"Q\", \"RUF\", \"TC\", \"TRY\", \"PYI\", \"FAST\"]\nlint.ignore = [\"E501\", \"UP007\", \"B019\", \"RUF001\", \"UP038\"]\n\n# Assume Python 3.10.\ntarget-version = \"py310\"\n\n\n# Ignore `T201` (print) in all scripts\n[tool.ruff.lint.per-file-ignores]\n\"src/cowrie/scripts/*\" = [\"T201\"]\n\n\n[tool.setuptools]\npackage-dir = {\"\" = \"src\"}\n\n\n[tool.setuptools.packages.find]\nwhere = [\"src\"]\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.8134765625,
          "content": "# Include base requirements\n-r requirements.txt\n\nbuild==1.2.2.post1\ncoverage==7.6.10\nmypy-extensions==1.0.0; platform_python_implementation=='CPython'\nmypy-zope==1.0.10; platform_python_implementation=='CPython'\nmypy==1.13.0; platform_python_implementation=='CPython'\npathspec==0.12.1\npipdeptree==2.24.0\npre-commit==4.0.1\npylint==3.3.3\npyre-check==0.9.23\npyright==1.1.391\npytype==2024.1.24; platform_python_implementation=='CPython' and python_version<='3.9'\npytype==2024.10.11; platform_python_implementation=='CPython' and python_version>='3.10'\npyupgrade==3.19.1\npyyaml==6.0.2\nreadthedocs-sphinx-search==0.3.2\nruff==0.8.2\nsetuptools==75.6.0\nsphinx-copybutton==0.5.2\nsphinx_rtd_theme==3.0.2\ntox==4.23.2\ntwine==6.0.1\ntypes-python-dateutil==2.9.0.20241206\ntypes-redis==4.6.0.20241004\ntypes-requests==2.32.0.20241016\nyamllint==1.35.1\n"
        },
        {
          "name": "requirements-output.txt",
          "type": "blob",
          "size": 0.78125,
          "content": "# Include base requirements\n-r requirements.txt\n\n# csirtg. it has an implicit dependency on geoip2\ncsirtgsdk==1.1.5\ngeoip2\n\n# dshield\nrequests==2.32.3\npython-dateutil==2.9.0.post0\n\n# elasticsearch\nelasticsearch==8.17.0\n\n# hpfeeds\nhpfeeds==3.1.0\n\n# mysql\nmysql-connector-python==9.1.0\n\n# mongodb\npymongo==4.10.1\n\n# rethinkdblog\nrethinkdb==2.4.10.post1\n\n# s3\n# Disabled 2024-12-23 because too large\n# botocore==1.35.76\n\n# slack\nslackclient==2.9.4\n\n# influxdb\ninfluxdb==5.3.2\n\n# dblog_xmpp\n# Disabled 2024-12-23 because unmaintained upstream dependency: https://github.com/cowrie/cowrie/issues/1639\n# wokkel==18.0.0\n\n# misp\npymisp==2.5.4\n\n# redis\nredis==5.2.1\n\n# Oracle Cloud\n# Disabled 2024-10-31 because downgrades our cryptography package to vulnerable version\n# oci==2.129.2\n\n# rabbitmq\npika==1.3.2\n"
        },
        {
          "name": "requirements-pool.txt",
          "type": "blob",
          "size": 0.021484375,
          "content": "libvirt-python==9.8.0\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.2099609375,
          "content": "attrs==24.3.0\nbcrypt==4.2.1\ncryptography==44.0.0\nhyperlink==21.0.0\nidna==3.10\npackaging==24.2\npyasn1_modules==0.4.1\nrequests==2.32.3\nservice_identity==24.2.0\ntftpy==0.8.2\ntreq==24.9.1\ntwisted==24.11.0\nurllib3==2.3.0"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0458984375,
          "content": "[pytype]\ninputs = src/cowrie\nkeep_going = True\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.462890625,
          "content": "#!/usr/bin/env python\n\nfrom setuptools import setup\n\nsetup(\n    packages=[\"cowrie\", \"twisted\"],\n    include_package_data=True,\n    package_dir={\"\": \"src\"},\n    package_data={\"\": [\"*.md\"]},\n    use_incremental=True,\n    scripts=[\"bin/fsctl\", \"bin/asciinema\", \"bin/cowrie\", \"bin/createfs\", \"bin/playlog\"],\n    setup_requires=[\"incremental\", \"click\"],\n)\n\nimport sys\n\n\ndef refresh_plugin_cache():\n    from twisted.plugin import IPlugin, getPlugins\n    list(getPlugins(IPlugin))\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 2.2080078125,
          "content": "[tox]\nskipsdist = True\nenvlist = lint,docs,typing,py39,py310,py311,py312,py313,pypy39,pypy310\ndeps = -r{toxinidir}/requirements.txt\nskip_missing_interpreters = True\n\n[gh-actions]\npython =\n    3.9: py39\n    3.10: py310, lint, docs, typing, pypi\n    3.11: py311\n    3.12: py312\n    3.13: py313\n    pypy-3.9: pypy39\n    pypy-3.10: pypy310\n\n[testenv]\nsetenv =\n    PYTHONPATH = {toxinidir}/src\ndeps =\n    -r{toxinidir}/requirements.txt\n#    libvirt-python==5.5.0\n\ncommands =\n    python -m unittest discover src --verbose\n\n\n[testenv:pypi]\ndeps =\n    -r{toxinidir}/requirements.txt\n    -r{toxinidir}/requirements-dev.txt\nallowlist_externals =\n    twine\ncommands =\n    python -m build\n    twine check dist/*\n    # - twine upload --verbose --repository testpypi dist/*\\n\n    # python -m pip install -i https://test.pypi.org/simple/ cowrie\n\n\n[testenv:lint]\ndeps =\n    -r{toxinidir}/requirements.txt\n    -r{toxinidir}/requirements-dev.txt\nallowlist_externals =\n    yamllint\ncommands =\n    ruff check {toxinidir}/src\n    - yamllint {toxinidir}\n    - pyright\n    - pylint {toxinidir}/src\nbasepython = python3.10\n\n\n[testenv:docs]\nsetenv =\n    PYTHONPATH = {toxinidir}/src\nchangedir = docs\ndeps =\n    -r{toxinidir}/requirements.txt\n    -r{toxinidir}/requirements-dev.txt\ncommands =\n    sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html\nbasepython = python3.10\n\n\n[testenv:typing]\ndescription = run static type checkers\n\ndeps =\n    -r{toxinidir}/requirements.txt\n    -r{toxinidir}/requirements-dev.txt\n\ncommands =\n    mypy                                       \\\n        --cache-dir=\"{toxworkdir}/mypy_cache\"  \\\n        --config-file=\"{toxinidir}/pyproject.toml\" \\\n        {tty:--pretty:}                        \\\n        {posargs:src}\n    - mypyc \\\n        --cache-dir=\"{toxworkdir}/mypyc_cache\"  \\\n        --config-file=\"{toxinidir}/pyproject.toml\" \\\n        {tty:--pretty:}                        \\\n        {posargs:src}\n    - pytype -d import-error --keep-going --jobs auto {posargs:src}\n    - pyre --noninteractive analyze\n    - pyright {posargs:src}\nbasepython = python3.10\n\n[testenv:coverage-report]\ndeps = coverage\nskip_install = true\ncommands =\n    coverage combine\n    coverage report\n\n[coverage:run]\nrelative_files = True\nsource = src/\nbranch = True\n"
        },
        {
          "name": "var",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}