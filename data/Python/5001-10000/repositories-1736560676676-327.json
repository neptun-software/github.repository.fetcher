{
  "metadata": {
    "timestamp": 1736560676676,
    "page": 327,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "librosa/librosa",
      "stars": 7296,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.244140625,
          "content": "[run]\nrelative_files = True\n\n[report]\nomit =\n    */python?.?/*\n    */site-packages/nose/*\nexclude_lines =\n    @numba.jit\n    @jit\n    @numba.stencil\n    @numba.guvectorize\n    @numba.vectorize\n    pragma: no cover\n    if TYPE_CHECKING:\n    @overload\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0302734375,
          "content": "tests/data/*.mat export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5537109375,
          "content": "*.py[co]\n__pycache__\n\n__pycache__\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\ntests/result_images/\n\n#Translations\n*.mo\n\n#Mr Developer\n.mr.developer.cfg\n\n# Data files\n*/data/*\n*.mat\n\n# Mac OS X cruft\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nehthumbs.db\nThumbs.db\n\n# Sphinx stuff\ndocs/generated/\ndocs/_build/\ndocs/auto_examples/\n\n# Vim\n*.swp\n\n# Testing and checkpoints\n.ipynb_checkpoints\n.coverage.*\ncoverage.xml\n\n#IDE\n.idea/\n.vscode\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.09765625,
          "content": "[submodule \"tests/data\"]\n\tpath = tests/data\n\turl = https://github.com/librosa/librosa-test-data.git\n"
        },
        {
          "name": ".zenodo.json",
          "type": "blob",
          "size": 5.572265625,
          "content": "{\n    \"license\": \"ISC\",\n    \"creators\": [\n        {\n            \"orcid\": \"0000-0001-6261-9747\",\n            \"affiliation\": \"New York University\",\n            \"name\": \"McFee, Brian\"\n        },\n        {\n            \"name\":\"Matt McVicar\"\n        },\n        {\n            \"name\":\"Daniel Faronbi\"\n        },\n        {\n            \"orcid\": \"0000-0003-3781-7244\",\n            \"name\":\"Iran Roman\"\n        },\n        {\n            \"name\":\"Matan Gover\"\n        },\n        {\n            \"orcid\": \"0000-0003-1306-3548\",\n            \"name\":\"Stefan Balke\"\n        },\n        {\n            \"name\":\"Scott Seyfarth\"\n        },\n        {\n            \"orcid\": \"0000-0002-9008-7562\",\n            \"name\":\"Ayoub Malek\"\n        },\n        {\n            \"orcid\": \"0000-0002-5009-8048\",\n            \"name\":\"Colin Raffel\"\n        },\n        {\n            \"orcid\": \"0000-0003-0580-1651\",\n            \"name\":\"Vincent Lostanlen\"\n        },\n        {\n            \"name\":\"Benjamin van Niekirk\"\n        },\n        {\n            \"name\":\"Dana Lee\"\n        },\n        {\n            \"name\":\"Frank Cwitkowitz\"\n        },\n        {\n            \"orcid\": \"0000-0003-1383-4541\",\n            \"name\":\"Frank Zalkow\"\n        },\n        {\n            \"orcid\": \"0000-0001-6459-7609\",\n            \"name\":\"Oriol Nieto\"\n        },\n        {\n            \"name\":\"Dan Ellis\"\n        },\n        {\n            \"name\":\"Jack Mason\"\n        },\n        {\n            \"name\":\"Kyungyun Lee\"\n        },\n        {\n            \"name\":\"Bea Steers\"\n        },\n        {\n            \"name\":\"Emily Halvachs\"\n        },\n        {\n            \"orcid\": \"0000-0002-8225-5191\",\n            \"name\":\"Carl Thomé\"\n        },\n        {\n            \"orcid\": \"0000-0002-2534-1165\",\n            \"name\":\"Fabian Robert-Stöter\"\n        },\n        {\n            \"name\":\"Rachel Bittner\"\n        },\n        {\n            \"name\":\"Ziyao Wei\"\n        },\n        {\n            \"name\":\"Adam Weiss\"\n        },\n        {\n            \"name\":\"Eric Battenberg\"\n        },\n        {\n            \"name\":\"Keunwoo Choi\"\n        },\n        {\n            \"orcid\": \"0000-0002-0720-0967\",\n            \"name\":\"Ryuichi Yamamoto\"\n        },\n        {\n            \"name\":\"CJ Carr\"\n        },\n        {\n            \"name\":\"Alex Metsai\"\n        },\n        {\n            \"name\":\"Stefan Sullivan\"\n        },\n        {\n            \"name\":\"Pius Friesch\"\n        },\n        {\n            \"name\":\"Asmitha Krishnakumar\"\n        },\n        {\n            \"orcid\": \"0000-0003-1001-4564\",\n            \"name\":\"Shunsuke Hidaka\"\n        },\n        {\n            \"name\":\"Steve Kowalik\"\n        },\n        {\n            \"name\":\"Fabian Keller\"\n        },\n        {\n            \"name\":\"Dan Mazur\"\n        },\n        {\n            \"orcid\": \"0000-0001-6609-6023\",\n            \"name\":\"Alexandre Chabot-Leclerc\"\n        },\n        {\n            \"name\":\"Curtis Hawthorne\"\n        },\n        {\n            \"name\":\"Chandrashekhar Ramaprasad\"\n        },\n        {\n            \"name\":\"Myungchul Keum\"\n        },\n        {\n            \"name\":\"Juanita Gomez\"\n        },\n        {\n            \"name\":\"Will Monroe\"\n        },\n        {\n            \"name\":\"Viktor Andreevitch Morozov\"\n        },\n        {\n            \"name\":\"Kian Eliasi\"\n        },\n        {\n            \"name\":\"nullmightybofo\"\n        },\n        {\n            \"name\":\"Paul Biberstein\"\n        },\n        {\n            \"name\":\"N. Dorukhan Sergin\"\n        },\n        {\n            \"orcid\": \"0000-0001-8158-5562\",\n            \"name\":\"Romain Hennequin\"\n        },\n        {\n            \"name\":\"Rimvydas Naktinis\"\n        },\n        {\n            \"name\":\"beantowel\"\n        },\n        {\n            \"orcid\": \"0000-0003-2892-0194\",\n            \"name\":\"Taewoon Kim\"\n        },\n        {\n            \"name\":\"Jon Petter \\u00c5sen\"\n        },\n        {\n            \"name\":\"Joon Lim\"\n        },\n        {\n            \"name\":\"Alex Malins\"\n        },\n        {\n            \"name\":\"Dar\\u00edo Here\\u00f1\\u00fa\"\n        },\n        {\n            \"name\":\"Stef van der Struijk\"\n        },\n        {\n            \"name\":\"Lorenz Nickel\"\n        },\n        {\n            \"name\":\"Jackie Wu\"\n        },\n        {\n            \"name\":\"Zhen Wang\"\n        },\n        {\n            \"name\":\"Tim Gates\"\n        },\n        {\n            \"name\":\"Matt Vollrath\"\n        },\n        {\n            \"orcid\": \"0000-0001-9813-221X\",\n            \"name\":\"Andy Sarroff\"\n        },\n        {\n            \"name\":\"Xiao-Ming\"\n        },\n        {\n            \"orcid\": \"0000-0001-8259-6028\",\n            \"name\":\"Alastair Porter\"\n        },\n        {\n            \"name\":\"Seth Kranzler\"\n        },\n        {\n            \"name\":\"Voodoohop\"\n        },\n        {\n            \"orcid\": \"0000-0003-4491-0025\",\n            \"name\":\"Mattia Di Gangi\"\n        },\n        {\n            \"name\":\"Helmi Jinoz\"\n        },\n        {\n            \"name\":\"Connor Guerrero\"\n        },\n        {\n            \"name\":\"Abduttayyeb Mazhar\"\n        },\n        {\n            \"name\":\"toddrme2178\"\n        },\n        {\n            \"orcid\": \"0000-0001-7159-1387\",\n            \"name\":\"Zvi Baratz\"\n        },\n        {\n            \"name\":\"Anton Kostin\"\n        },\n        {\n            \"name\":\"Xinlu Zhuang\"\n        },\n        {\n            \"name\":\"Cash TingHin Lo\"\n        },\n        {\n            \"name\":\"Pavel Campr\"\n        },\n        {\n            \"name\":\"Eric Semeniuc\"\n        },\n        {\n            \"orcid\": \"0000-0002-9590-7179\",\n            \"name\":\"Monsij Biswal\"\n        },\n        {\n            \"name\":\"Shayenne Moura\"\n        },\n        {\n            \"name\":\"Paul Brossier\"\n        },\n        {\n            \"name\":\"Hojin Lee\"\n        },\n        {\n            \"orcid\": \"0000-0001-9916-2285\",\n            \"name\":\"Waldir Pimenta\"\n        }\n    ]\n}\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 5.3505859375,
          "content": "Contributors\n============\n\n* Brian McFee <https://github.com/bmcfee>\n* Matt McVicar <https://github.com/mattmcvicar>\n* Dawen Liang <https://github.com/dawenl>\n* Colin Raffel <https://github.com/craffel>\n* Douglas Repetto <https://github.com/drepetto>\n* Dan Ellis <https://github.com/dpwe>\n* Eric Battenberg <https://github.com/ebattenberg>\n* Bryce Walburn <https://github.com/BWalburn>\n* Oriol Nieto <https://github.com/urinieto>\n* Romain Hennequin <https://github.com/romi1502>\n* Ryuichi Yamamoto <https://github.com/r9y9>\n* Rachel Bittner <https://github.com/rabitt>\n* Stefan Balke <https://github.com/stefan-balke>\n* CJ Carr <https://github.com/Cortexelus>\n* Fabian Robert-Stöter <https://github.com/faroit>\n* Keunwoo Choi <https://github.com/keunwoochoi>\n* Eric Humphrey <https://github.com/ejhumphrey>\n* Carl Thomé <https://github.com/carlthome>\n* Seth Kranzler <https://github.com/polyrhythmatic>\n* Waldir Pimenta <https://github.com/waldyrious>\n* Hojin Lee <https://github.com/hojinlee>\n* Paul Brossier <https://github.com/piem>\n* Rimvydas Naktinis <https://github.com/naktinis>\n* Jackie Wu <https://github.com/wkcn>\n* Erik Peterson <https://github.com/EMCP>\n* Siddhartha Kumar <https://github.com/siddhugolu>\n* Julia Wilkins <https://github.com/jlw365>\n* Curtis Hawthorne <https://github.com/cghawthorne>\n* Dana Lee <https://github.com/danagilliann>\n* Pius Friesch <https://github.com/pfriesch>\n* Ziyao Wei <https://github.com/ZiyaoWei>\n* Vincent Lostanlen <https://github.com/lostanlen>\n* Steve Tjoa <https://github.com/stevetjoa>\n* Matt Vollrath <https://github.com/mvollrath>\n* Zhen Wang <https://github.com/nehz>\n* Kyungyun Lee <https://github.com/kyungyunlee>\n* Frank Zalkow <https://github.com/fzalkow>\n* Shayenne Moura <https://github.com/shayenne>\n* nullmightybofo <https://github.com/nullmightybofo>\n* toddrme2178 <https://github.com/toddrme2178>\n* Andy Sarroff <https://github.com/woodshop>\n* Monsij Biswal <https://github.com/monsij>\n* Taewoon Kim <https://github.com/tae898>\n* Adam Weiss <https://github.com/ajweiss>\n* Viktor Andreevitch Morozov <https://github.com/viktorAndreevichMorozov>\n* Jan Schlüter <https://github.com/f0k>\n* Darío Hereñú <https://github.com/kant>\n* Alex Metsai <https://github.com/AlexMetsai>\n* Jack Mason <https://github.com/jack-alexander-ie>\n* Scott Seyfarth <https://github.com/scjs>\n* Voodoohop <https://github.com/voodoohop>\n* Alastair Porter <https://github.com/alastair>\n* Fabian Keller <https://github.com/bluenote10>\n* Ayoub Malek <https://github.com/SuperKogito>\n* Stef van der Struijk <https://github.com/NumesSanguis>\n* Shunsuke Hidaka <https://github.com/onkyo14taro>\n* Eric Semeniuc <https://github.com/esemeniuc>\n* Frank Cwitkowitz <https://github.com/cwitkowitz>\n* Bea Steers <https://github.com/beasteers>\n* beantowel <https://github.com/beantowel>\n* Thor Whalen <https://github.com/thorwhalen>\n* Stefan Sullivan <https://github.com/stefansjs>\n* Benjamin van Niekirk <https://github.com/bshall>\n* Kaushik Sripathi Hatti <https://github.com/hskaushik>\n* Kaustuv Kanti Ganguli <https://github.com/kaustuvkanti>\n* Dan Mazur <https://github.com/QEDan>\n* Joon Lim <https://github.com/joonlim9>\n* Pavel Campr <https://github.com/pcampr>\n* Tim Gates <https://github.com/timgates42>\n* Abduttayyeb Mazhar <https://github.com/Abduttayyeb>\n* Cash TingHin Lo <https://github.com/cashlo>\n* Xinlu Zhuang <https://github.com/zhuangzi926>\n* Connor Guerrero <https://github.com/c-jg>\n* N. Dorukhan Sergin <https://github.com/dorukhansergin>\n* Paul Biberstein <https://github.com/P-bibs>\n* Myungchul Keum <https://github.com/dofuuz>\n* Daniel Faronbi <https://github.com/dafaronbi>\n* Iran Roman <https://github.com/iranroman>\n* philstem <https://github.com/philstem>\n* Alex Malins <https://github.com/alexmalins>\n* i-aky-y <https://github.com/i-aky-y>\n* Asmitha Krishnakumar <https://github.com/Asmitha-K>\n* Chandrashekhar Ramaprasad <https://github.com/cr2007>\n* Xiao-Ming <https://github.com/Xiao-Ming>\n* Will Monroe <https://github.com/futurulus>\n* Lorenz Nickel <https://github.com/LorenzNickel>\n* Mattia Di Gangi <https://github.com/mattiadg>\n* Kian Eliasi <https://github.com/kianelbo>\n* Anton Kostin <https://github.com/masguit42>\n* Emily Halvachs <https://github.com/Embot2000>\n* Juanita Gomez <https://github.com/juanis2112>\n* Helmi Jinoz <https://github.com/helminzo>\n* Zvi Baratz <https://github.com/ZviBaratz>\n* Alexandre Chabot-Leclerc <https://github.com/achabotl>\n* Steve Kowalik <https://github.com/s-t-e-v-e-n-k>\n* Tom Xi <https://github.com/tomxi>\n* Matan Gover <https://github.com/matangover>\n* Fabian Keller <https://github.com/bluenote10>\n* BdeGraff <https://github.com/BdeGraff>\n* Jon Petter Åsen <https://github.com/jpaasen>\n* Shin Hyun <https://github.com/kyaryunha>\n* Iliya S <https://github.com/zenitismus>\n* Eugene Rabinovich <https://github.com/erabinov>\n* Gao Lei <https://github.com/alvingao>\n* Jize Guo <https://github.com/alumkal>\n* Phillip S.M. Skelton <https://github.com/psmskelton>\n* Matt Pitkin <https://github.com/mattpitkin>\n\nSome feature extraction code was based on <https://github.com/ronw/frontend> by Ron Weiss.\n\nLarge portions of librosa were ported from MATLAB code by Dan Ellis <http://www.ee.columbia.edu/~dpwe/resources/matlab/>.\n\nSome spectral features were ported from original MATLAB implementations by Erik Schmidt and Jeff Scott\nat the Drexel METlab <http://music.ece.drexel.edu/>\n\nAdditional thanks to Emanuele Coviello and Erik Schmidt for testing, bug reports and fixes.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.140625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at brian.mcfee@nyu.edu. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.1474609375,
          "content": "\nContributing code\n=================\n\nHow to contribute\n-----------------\n\nThe preferred way to contribute to librosa is to fork the \n[main repository](http://github.com/librosa/librosa/) on\nGitHub:\n\n1. Fork the [project repository](http://github.com/librosa/librosa):\n   click on the 'Fork' button near the top of the page. This creates\n   a copy of the code under your account on the GitHub server.\n\n2. Clone this copy to your local disk:\n\n          $ git clone --recursive git@github.com:YourLogin/librosa.git\n          $ cd librosa \n          $ git pull --recurse-submodules\n\n    These commands will clone the main librosa repository, as well as the submodule\n    that contains testing data.  This should work automatically, but you may also\n    want to read [Working with Submodules](https://github.blog/2016-02-01-working-with-submodules/)\n    for a better understanding of how this works.\n\n3. Set the upstream remote to the Librosa's repo:\n\n          $ git remote add upstream git@github.com:librosa/librosa.git \n\n4. Create a new conda environment in order to install dependencies:\n\n          $ conda create -n librosa-dev python=3.9\n\n          $ conda env update -n librosa-dev --file .github/environment-ci.yml\n\n          $ conda activate librosa-dev\n\n          $ python -m pip install -e '.[tests]'\n\n5. Create a branch to hold your changes:\n\n          $ git switch -c <NAME-NEW-BRANCH>\n\n   and start making changes. Never work in the ``main`` branch!\n\n6. Work on this copy on your computer using Git to do the version\n   control. You can check your modified files using:\n\n          $ git status \n\n7. When you're done editing, do:\n\n          $ git add <PATH-TO-MODIFIED-FILES>\n\n          $ git commit -m \"<COMMIT-MESSAGE>\"\n\n   to record your changes in Git, then push them to GitHub with:\n\n          $ git push --set-upstream origin <NAME-NEW-BRANCH>\n\n8. Go to the web page of your fork of the librosa repo,\n   and click 'Pull request' to review your changes and add a description\n   of what you did.\n\nFinally, click 'Create pull request' to send your changes to the\nmaintainers for review. This will send an email to the committers.\n\n(If any of the above seems like magic to you, then look up the \n[Git documentation](http://git-scm.com/documentation) on the web.)\n\nIt is recommended to check that your contribution complies with the\nfollowing rules before submitting a pull request:\n\n-  All functions should have informative [docstrings](https://numpydoc.readthedocs.io/en/latest/format.html) with sample usage presented.\n\nYou can also check for common programming errors with the following\ntools:\n\n-  Code with good test coverage, check with:\n\n          $ pytest\n\n-  No pyflakes warnings, check with:\n\n           $ python -m pip install flake8\n           $ flake8 librosa\n\n\nSome tests in tests/test_display.py use baseline images for output comparison.\nIf existing images need to be updated or new ones should be added:\n1. Ensure that the environment is properly setup for testing (pytest with addons)\n2. Run:\n\n           $ pytest --mpl-generate-path=tmp tests/test_display.py [-k ANY_TESTS_THAT_CHANGED]\n\n3. Inspect the new baseline images under tmp/\n4. If (3) looks good, copy into `tests/baseline_images/test_display/` and add to the PR.\n\nFinally, once your pull request has been created and reviewed, please update the file `docs/changelog.rst`\nto briefly summarize your contribution in the section for the next release.\nIf you are a first-time contributor, please add yourself to `AUTHORS.md` as well.\n\nFiling bugs\n-----------\nWe use Github issues to track all bugs and feature requests; feel free to\nopen an issue if you have found a bug or wish to see a feature implemented.\n\nIt is recommended to check that your issue complies with the\nfollowing rules before submitting:\n\n-  Verify that your issue is not being currently addressed by other\n   [issues](https://github.com/librosa/librosa/issues?q=)\n   or [pull requests](https://github.com/librosa/librosa/pulls?q=).\n\n-  Please ensure all code snippets and error messages are formatted in\n   appropriate code blocks.\n   See [Creating and highlighting code blocks](https://help.github.com/articles/creating-and-highlighting-code-blocks).\n\n-  Please include your operating system type and version number, as well\n   as your Python, librosa, numpy, and scipy versions. This information\n   can be found by running the following code snippet:\n\n  ```python\n  import platform; print(platform.platform())\n  import sys; print(\"Python\", sys.version)\n  import numpy; print(\"NumPy\", numpy.__version__)\n  import scipy; print(\"SciPy\", scipy.__version__)\n  import librosa; print(\"librosa\", librosa.__version__)\n  ```\n\nDocumentation\n-------------\n\nYou can edit the documentation using any text editor and then generate\nthe HTML output by typing ``make html`` from the docs/ directory.\nThe resulting HTML files will be placed in _build/html/ and are viewable \nin a web browser. See the README file in the doc/ directory for more information.\n\nFor building the documentation, you will need some additional dependencies.\nThese can be installed by executing the following command:\n\n    $ python -m pip install -e '.[docs]'\n    \nNote\n----\nThis document was gleefully borrowed from [scikit-learn](http://scikit-learn.org/).\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.748046875,
          "content": "## ISC License\n\nCopyright (c) 2013--2023, librosa development team.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.166015625,
          "content": "include AUTHORS.md\ninclude CONTRIBUTING.md\ninclude LICENSE.md\ninclude CODE_OF_CONDUCT.md\ninclude librosa/util/example_data/*\nglobal-include *.pyi\nglobal-include py.typed\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.59375,
          "content": "[![librosa logo](docs/img/librosa_logo_text.svg)](https://librosa.org/)\n\n# librosa\n\n\nA python package for music and audio analysis.  \n\n[![PyPI](https://img.shields.io/pypi/v/librosa.svg)](https://pypi.python.org/pypi/librosa)\n[![Anaconda-Server Badge](https://anaconda.org/conda-forge/librosa/badges/version.svg)](https://anaconda.org/conda-forge/librosa)\n[![License](https://img.shields.io/pypi/l/librosa.svg)](https://github.com/librosa/librosa/blob/main/LICENSE.md)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.591533.svg)](https://doi.org/10.5281/zenodo.591533)\n\n[![CI](https://github.com/librosa/librosa/actions/workflows/ci.yml/badge.svg)](https://github.com/librosa/librosa/actions/workflows/ci.yml)\n[![codecov](https://codecov.io/gh/librosa/librosa/branch/main/graph/badge.svg?token=ULWnUHaIJC)](https://codecov.io/gh/librosa/librosa)\n[![Docs](https://github.com/librosa/librosa/actions/workflows/docs.yml/badge.svg)](https://librosa.org/doc/latest/index.html)\n\n#  Table of Contents\n\n- [Documentation](#Documentation)\n- [Installation](#Installation)\n  - [Using PyPI](#using-pypi)\n  - [Using Anaconda](#using-anaconda)\n  - [Building From Source](#building-from-source)\n  - [Hints for Installation](#hints-for-the-installation)\n    - [`soundfile`](#soundfile)\n    - [`audioread`](#audioread-and-mp3-support)\n      - [Linux (`apt get`)](#linux-apt-get)\n      - [Linux (`yum`)](#linux-yum)\n      - [Mac](#mac)\n      - [Windows](#windows)\n- [Discussion](#discussion)\n- [Citing](#citing)\n\n---\n\n## Documentation\n\n\nSee https://librosa.org/doc/ for a complete reference manual and introductory tutorials.\n\nThe [advanced example gallery](https://librosa.org/doc/latest/advanced.html) should give you a quick sense of the kinds\nof things that librosa can do.\n\n---\n\n[Back To Top ↥](#librosa)\n\n\n## Installation\n\n\n### Using PyPI\n\nThe latest stable release is available on PyPI, and you can install it by saying\n```\npython -m pip install librosa\n```\n\n### Using Anaconda\n\nAnaconda users can install using ```conda-forge```:\n```\nconda install -c conda-forge librosa\n```\n\n### Building from source\n\nTo build librosa from source, say \n```\npython setup.py build\n```\nThen, to install librosa, say \n```\npython setup.py install\n```\nIf all went well, you should be able to execute the following commands from a python console:\n```\nimport librosa\nlibrosa.show_versions()\n```\nThis should print out a description of your software environment, along with the installed versions of other packages used by librosa.\n\n📝 OS X users should follow the installation guide given below.\n\nAlternatively, you can download or clone the repository and use `pip` to handle dependencies:\n\n```\nunzip librosa.zip\npython -m pip install -e librosa\n```\nor\n\n```\ngit clone https://github.com/librosa/librosa.git\npython -m pip install -e librosa\n```\n\nBy calling `pip list` you should see `librosa` now as an installed package:\n```\nlibrosa (0.x.x, /path/to/librosa)\n```\n\n---\n\n[Back To Top ↥](#librosa)\n\n### Hints for the Installation\n\n`librosa` uses `soundfile` and `audioread` to load audio files.\n\n📝 Note that older releases of `soundfile` (prior to 0.11) do not support MP3, which will cause librosa to fall back on the `audioread` library.\n\n### `soundfile`\n\nIf you're using `conda` to install librosa, then audio encoding dependencies will be handled automatically.\n\nIf you're using `pip` on a Linux environment, you may need to install `libsndfile`\nmanually.  Please refer to the [SoundFile installation documentation](https://python-soundfile.readthedocs.io/#installation) for details.\n\n### `audioread` and MP3 support\n\nTo fuel `audioread` with more audio-decoding power (e.g., for reading MP3 files),\nyou may need to install either *ffmpeg* or *GStreamer*.\n\n📝*Note that on some platforms, `audioread` needs at least one of the programs to work properly.*\n\nIf you are using Anaconda, install *ffmpeg* by calling\n\n```\nconda install -c conda-forge ffmpeg\n```\n\nIf you are not using Anaconda, here are some common commands for different operating systems:\n\n- ####  Linux (`apt-get`): \n\n```\napt-get install ffmpeg\n```\nor\n \n```\napt-get install gstreamer1.0-plugins-base gstreamer1.0-plugins-ugly\n```\n- #### Linux (`yum`):\n```\nyum install ffmpeg\n```\nor\n\n\n```\nyum install gstreamer1.0-plugins-base gstreamer1.0-plugins-ugly\n```\n\n- #### Mac: \n```\nbrew install ffmpeg\n```\nor\n\n```\nbrew install gstreamer\n```\n\n- #### Windows: \n\ndownload ffmpeg binaries from this [website](https://www.gyan.dev/ffmpeg/builds/) or gstreamer binaries from this [website](https://gstreamer.freedesktop.org/)\n\nFor GStreamer, you also need to install the Python bindings with \n\n```\npython -m pip install pygobject\n```\n\n---\n\n[Back To Top ↥](#librosa)\n\n## Discussion\n\n\nPlease direct non-development questions and discussion topics to our web forum at\nhttps://groups.google.com/forum/#!forum/librosa\n\n---\n\n[Back To Top ↥](#librosa)\n\n## Citing\n\n\nIf you want to cite librosa in a scholarly work, there are two ways to do it.\n\n- If you are using the library for your work, for the sake of reproducibility, please cite\n  the version you used as indexed at Zenodo:\n\n    [![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.591533.svg)](https://doi.org/10.5281/zenodo.591533)\n\n  From librosa version 0.10.2 or later, you can also use `librosa.cite()`\n  to get the DOI link for any version of librosa.\n\n- If you wish to cite librosa for its design, motivation, etc., please cite the paper\n  published at SciPy 2015:\n\n    McFee, Brian, Colin Raffel, Dawen Liang, Daniel PW Ellis, Matt McVicar, Eric Battenberg, and Oriol Nieto. \"librosa: Audio and music signal analysis in python.\" In Proceedings of the 14th python in science conference, pp. 18-25. 2015.\n\n---\n\n[Back To Top ↥](#librosa)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "librosa",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.1142578125,
          "content": "[build-system]\nrequires = [\n    \"setuptools >= 48\",\n    \"wheel >= 0.29.0\",\n]\nbuild-backend = 'setuptools.build_meta'\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 3.826171875,
          "content": "[pycodestyle]\nmax-line-length=119\nignore = E203,W503\n\n[pydocstyle]\n# convention = numpy\n# Below is equivalent to numpy convention + D400 and D205\nignore = D107,D203,D205,D212,D213,D400,D402,D413,D415,D416,D417\n\n[tool:pytest]\nxfail_strict = true\naddopts = --cov-report term-missing --cov librosa --cov-report=xml --mpl --mpl-baseline-path=tests/baseline_images/test_display\n# ignoring deprecation warnings from packages that we're phasing out anyway\nfilterwarnings =\n    ignore::DeprecationWarning:audioread.*\n    ignore::DeprecationWarning:resampy.*\n\n[flake8]\ncount = True\nstatistics = True\nshow_source = True\nselect =\n    E9,\n    F63,\n    F7,\n    F82\n\n[metadata]\nname = librosa\nversion = attr: librosa.version.version\ndescription = Python module for audio and music processing\nlong_description = file: README.md\nlong_description_content_type = text/markdown; charset=UTF-8\nurl = https://librosa.org\nauthor = Brian McFee, librosa development team\nauthor_email = brian.mcfee@nyu.edu\nlicense = ISC\nlicense_file = LICENSE.md\nlicense_file_content_type = text/markdown; charset=UTF-8\nproject_urls =\n    Documentation = https://librosa.org/doc\n    Download = https://github.com/librosa/librosa/releases\n    Source = https://github.com/librosa/librosa\n    Tracker = https://github.com/librosa/librosa/issues\n    Discussion forum = https://groups.google.com/g/librosa\nclassifiers =\n    License :: OSI Approved :: ISC License (ISCL)\n    Programming Language :: Python\n    Development Status :: 3 - Alpha\n    Intended Audience :: Developers\n    Topic :: Multimedia :: Sound/Audio :: Analysis\n    Framework :: Matplotlib\n    Programming Language :: Python :: 3\n    Programming Language :: Python :: 3.7\n    Programming Language :: Python :: 3.8\n    Programming Language :: Python :: 3.9\n    Programming Language :: Python :: 3.10\n    Programming Language :: Python :: 3.11\n    Programming Language :: Python :: 3.12\n\n[options]\npackages = find:\ninclude_package_data = True\ninstall_requires =\n    audioread >= 2.1.9\n    numpy >= 1.20.3, != 1.22.0, != 1.22.1, != 1.22.2\n    scipy >= 1.2.0\n    scikit-learn >= 0.20.0\n    joblib >= 0.14\n    decorator >= 4.3.0\n    numba >= 0.51.0\n    soundfile >= 0.12.1\n    pooch >= 1.1\n    soxr >= 0.3.2\n    typing_extensions >= 4.1.1\n    lazy_loader >= 0.1\n    msgpack >= 1.0\n\npython_requires = >=3.7\nzip_safe = False\n\n[options.package_data]\nlibrosa =\n    util/example_data/*\n    py.typed\n    core/intervals.msgpack\n\n[options.extras_require]\ndocs =\n    numpydoc\n    sphinx != 1.3.1\n    sphinx_rtd_theme>=1.2.0\n    numba >= 0.51\n    matplotlib >= 3.5.0\n    sphinx-multiversion >= 0.2.3\n    sphinx-gallery >= 0.7\n    mir_eval >= 0.5\n    ipython >= 7.0\n    sphinxcontrib-svg2pdfconverter\n    presets\n    sphinx-copybutton >= 0.5.2\ntests =\n    matplotlib >= 3.5.0\n    packaging >= 20.0\n    pytest-mpl\n    pytest-cov\n    pytest\n    samplerate\n    resampy >= 0.2.2\n    types-decorator\ndisplay =\n    matplotlib >= 3.5.0\n\n\n[mypy]\ncheck_untyped_defs = True\nallow_redefinition = True\nfollow_imports = silent\nstrict = True\ndisallow_untyped_defs = False\ndisallow_incomplete_defs = False\ndisallow_untyped_calls = False\ndisallow_any_generics = False\ndisallow_subclassing_any = False\nplugins = numpy.typing.mypy_plugin\n\n; Ignore libraries for which no type annotations are available.\n[mypy-scipy.*]\nignore_missing_imports = True\n\n[mypy-soundfile.*]\nignore_missing_imports = True\n\n[mypy-audioread.*]\nignore_missing_imports = True\n\n[mypy-sklearn.*]\nignore_missing_imports = True\n\n[mypy-matplotlib.*]\nignore_missing_imports = True\n\n[mypy-numba.*]\nignore_missing_imports = True\n\n[mypy-decorator.*]\nignore_missing_imports = True\n\n[mypy-joblib.*]\nignore_missing_imports = True\n\n[mypy-pooch.*]\nignore_missing_imports = True\n\n[mypy-lazy_loader.*]\nignore_missing_imports = True\n\n[mypy-soxr.*]\nignore_missing_imports = True\n\n[mypy-msgpack.*]\nignore_missing_imports = True\n\n[mypy-packaging.*]\nignore_missing_imports = True\n\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.0673828125,
          "content": "from setuptools import setup\n\nif __name__ == '__main__':\n    setup()\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}