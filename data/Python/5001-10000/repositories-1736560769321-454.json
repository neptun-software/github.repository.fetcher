{
  "metadata": {
    "timestamp": 1736560769321,
    "page": 454,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "django-extensions/django-extensions",
      "stars": 6608,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.275390625,
          "content": "# https://editorconfig.org\n# Source: pydanny cookiecutter-django repo\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{py,rst,ini}]\nindent_style = space\nindent_size = 4\n\n[*.yml]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.19921875,
          "content": "*.py[cod]\n*.egg-info\nMANIFEST\nbuild\ndist\ndocs/_build\ndocs/_static\nvenv*\n.tox\n*.bak\n.DS_Store\n.eggs/\n.idea/\nhtmlcov/\n.coverage\n.cache/\n.mypy_cache/\n.pytest_cache/\ndjango-sample-app*/\n*.swp\n*.swo\n*.sqlite3\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.998046875,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.3.0\n    hooks:\n    -   id: trailing-whitespace\n    -   id: check-added-large-files\n        args:\n        - --maxkb=128\n    -   id: check-ast\n    -   id: check-case-conflict\n    -   id: check-docstring-first\n    -   id: check-json\n    -   id: check-merge-conflict\n    -   id: check-xml\n    -   id: check-yaml\n    -   id: detect-private-key\n    -   id: end-of-file-fixer\n    -   id: mixed-line-ending\n        args: [ '--fix=lf' ]\n        description: Forces to replace line ending by the UNIX 'lf' character.\n    -   id: fix-encoding-pragma\n    -   id: name-tests-test\n        args:\n        - --django\n        exclude: ^tests/testapp|^tests/management/|^tests/collisions/|^tests/pythonrc.py|^tests/runner.py\n-   repo: https://github.com/pycqa/flake8\n    rev: 4.0.1\n    hooks:\n    -   id: flake8\n-   repo: https://github.com/trbs/pre-commit-hooks-trbs.git\n    rev: 1.2.4\n    hooks:\n    -   id: forbid-executables\n        exclude: manage.py|setup.py\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 43.88671875,
          "content": "Changelog\n=========\n\nSee https://github.com/django-extensions/django-extensions/releases\n\n3.2.2\n-----\n\nChanges:\n\n- Improvement: Add support for psycopg3 (#1814)\n- Improvement: runserver_plus, autoreload on template change (#1796)\n- Improvement: highlighting, test_should_highlight_bash_syntax_without_name to include whitespace spans (#1797)\n- Improvement: tests, add Python 3.11 to tox and actions to formally support python 3.11 (#1786)\n- Improvement: runserver_plus, Send the file_changed event when a reload is triggered (#1775)\n- Improvement: runserver_plus, Add REMOTE_USER to werkzeug environment (#1708)\n- Improvement: pipchecker, force pip to use pkg_resources as backend for resolving distributions (#1782)\n- Fix: Fix error with lack of PosixPath support (#1785)\n- Fix: Cleanup http: links (#1798)\n\n3.2.1\n-----\n\nChanges:\n\n- Improvement: fix translation interpolation in prospective arabic translations (#1740)\n- Improvement: runserver_plus, Add option to ignore files on runserver_plus reload (#1762)\n- Improvement: docs: Fix a few typos (#1764) (#1751)\n- Improvement: drop python 3.5 as it is EOL (#1735)\n- Improvement: sqldiff, Added support for meta indexes and constraints in sqldiff. (#1726)\n- Improvement: show_urls, Ensure consistent output in show_urls for django 4.0+ (#1759)\n- Fix: dumpscript, make_aware should not be called if aware already (#1745)\n- Fix: Use list values for requires_system_checks (#1736)\n\n3.2.0\n-----\n\nChanges:\n\n- Improvement: Django 4 support\n- Improvement: Accept both --no-input and --noinput\n- Improvement: sqldsn, Added more styles to the sqldsn management command\n- Improvement: graph_models, Flag for to color code relations based on on_delete\n- Improvement: graph_models, Add --relation-fields-only flag\n- Improvement: RandomCharField, allow keeping default values\n- Fix: HexValidator, Max length validation\n- Fix: runserver_plus, Fix KeyError: 'werkzeug.server.shutdown'\n- New: managestate, Saves current applied migrations to a file or applies migrations from file\n\n3.1.5\n-----\n\nChanges:\n\n- Fix: pipchecker, crude way slow down to avoid HTTPTooManyRequests\n- Fix: pipchecker, fix for removed get_installed_distributions function\n\n3.1.4\n-----\n\nChanges:\n\n- Fix: set_default_site, improve django.contrib.sites application detection\n- Improvement: documentation, Fix name of mixin in docs\n- Improvement: mypy, type ignore backwards compatible imports\n- Improvement: graph_models, add --rankdir to change graph direction\n- Improvement: runserver_plus, Add --sql-truncate cli modifier\n- Improvement: shell_plus, Add --sql-truncate cli modifier\n\n3.1.3\n-----\n\nChanges:\n\n- Fix: Django 3.2, Run tests against Django 3.2\n- Fix: Django 3.2, Handle warnings for default_app_config (#1654)\n- Fix: sqldiff, Fix for missing field/index in model case\n\n3.1.2\n-----\n\nChanges:\n\n- Improvement: shell_plus, not save ipython history when using Jupyter\n- Improvement: docs, fix spelling mistakes\n- Improvement: tests, move to Github Actions instead of Travis\n- Improvement: drop_test_database, delete all cloned test databases (#1637)\n- Improvement: setup.py, Added minimum Django>=2.2 version to PyPI package\n- Improvement: shell_plus, fix --command globals / locals error\n\n3.1.1.post1\n-----------\n\nChanges:\n\n- Improvement: setup.py, Added minimum Django>=2.2 version to PyPI package\n\n3.1.1\n-----\n\nChanges:\n\n- Improvement: graph_models, add option --app-labels\n- Improvement: shell_plus, update shell_plus for jupyterlab 3\n- Improvement: tests, add Python 3.9\n\n3.1.0\n-----\n\nChanges:\n\n- Improvement: pipchecker, sleep 60s if pypi raises a fault\n- Improvement: add django_zero_downtime_migrations to list of supported postgresql engines\n- Improvement: use list of supported database engines from settings for all database commands\n- Improvement: reset_db, documentation\n- Fix: tests, Python 3.9 fixes for some tests\n- Fix: runserver_plus, parsing of RUNSERVER_PLUS_EXTRA_FILES\n\n3.0.9\n-----\n\nChanges:\n\n- Improvement: runserver_plus, survive syntax and configuration errors part II\n- Improvement: tests, refactor test runner\n- Improvement: sqlcreate, support postgresql unix domain socket\n\n3.0.8\n-----\n\nChanges:\n\n- Improvement: setup.cfg, remove universal flag from wheel, we only support Python 3 and up\n- Improvement: sqlcreate, fixed mentioned of old syncdb\n- Fix: runserver_plus, stop catching SyntaxError since reload for it was not working properly\n\n3.0.7\n-----\n\nChanges:\n\n- Improvement: runserver_plus, gh #1575 survive syntax and configuration errors\n- Improvement: runscript, use exit-code 1 if script is not found\n\n3.0.6\n-----\n\nChanges:\n\n- Improvement: runscript, add --continue-on-error unless set runscript will exit on errors\n- Improvement: runscript, allow to return exit-code\n- Improvement: runscript, support raise CommandError(... returncode=...)\n- Improvement: runscript, run Django checks() and check_migrations() before executing scripts\n- Improvement: shell_plus, set application name on all postgresql backends\n\n3.0.5\n-----\n\nChanges:\n\n- Fix: runserver_plus, exceptions must derive from BaseException error\n\n3.0.4\n-----\n\nChanges:\n\n- Various cleanups\n- Deprecated using `--router` instead use `--database`\n- Locales: Indonesian and Polish, updated\n- Improvement: show_dsn, fix crash with django-postgres-extra\n- Improvement: print_settings, added wildcard support\n- Improvement: print_settings, added --fail option\n- Improvement: delete_squashed_migrations, add --database option\n- Improvement: runserver_plus, added RUNSERVER_PLUS_EXTRA_FILES setting\n- Improvement: runserver_plus, added runserver_plus_started signal\n\n3.0.3\n-----\n\nChanges:\n\n- New: InternalIPS, allows to specify CIDRs for INTERNAL_IPS\n- Docs: restructure toctree\n\n3.0.2\n-----\n\nChanges:\n\n- Fix: shell_plus, fix honouring SHELL_PLUS in settings.py\n\n3.0.1\n-----\n\nChanges:\n\n- Fix: setup.py, add python_requires and remove legacy trove classifiers\n\n3.0.0\n-----\n\nThis is the first Django Extensions release which only targets Django 2.2 and above.\nIt drops official support for Python 2.7.\n\nChanges:\n\n- Removal of Python 2 support\n- Removal of deprecated keyczar encrypted fields EncryptedTextField and EncryptedCharField\n- Removal of deprecated passwd command\n- Removal of truncate_letters filter\n- Change: TimeStampedModel; Removed default ordering on abstract model\n- New: DjangoExtensionsConfig AppConfig\n- New: shell_plus, JupyterLab support\n- New: list_signals, List all signals by model and signal type\n- Improvement: shell_plus, use -- to directly pass additional arguments to Jupyter\n- Improvement: shell_plus, improvements to MySQL support\n- Improvement: jobs, use logging to record errors\n- Improvement: syncdata, added --remove-before flag\n- Improvement: graph_models, add field and model to template context\n- Fix: syncdata, fix non existent field in fixture data\n- Fix: pipchecker, compatibility with pip 20.1\n\n2.2.9\n-----\n\nChanges:\n\n- Fix: shell_plus, move notebook down the list of preferred shells\n- Fix: sqldiff, fix KeyError when detecting missing (unique) indexes\n- Improvement: encrypted fields, make it harder to use deprecated keyczar fields\n- Locale: Removed empty localizations\n\n2.2.8\n-----\n\nChanges:\n\n- Locale: zh_Hans, removed as it generated UnicodeDecodeError errors (#1478)\n\n2.2.7\n-----\n\nChanges:\n\n- Improvement: shell_plus, #865 always add manage.py basedir to path for notebook kernel\n- Improvement: docs, add zh-Hans locale\n- Improvement: runserver_plus, fix broken import for werkzeug v1.0.0\n- Improvement: runserver_plus, #1461 fix always trying to load StaticFilesHandler\n- Improvement: pipchecker, #1471 fix import of PipSession\n\n2.2.6\n-----\n\nChanges:\n\n- Improvement: travis, update pypy and pypy3 versions\n- Improvement: shell_plus, ability to print location/traceback besides sql\n- Improvement: runserver_plus, ability to print location/traceback besides sql\n- Improvement: UniqueFieldMixin, Support Django 2.2 UniqueConstraint.condition\n- Improvement: DEFAULT_MYSQL_ENGINES, add mysql.connector.django\n- Improvement: shell_plus, allow setting SHELL_PLUS=\"notebook\"\n- Improvement: shell_plus, add -c/--command to shell_plus mirroring django's shell command\n- Fix: shell_plus, fix postgresql debug wrapper on django 3.0 or higher\n- Fix: runserver_plus, fix postgresql debug wrapper on django 3.0 or higher\n\n2.2.5\n-----\n\nChanges:\n\n- Improvement: travis, add Python 3.8\n- Improvement: setup.py, update classifiers\n\n2.2.4\n-----\n\nChanges:\n\n- Improvement: RandomCharField, Support unique_together\n- Improvement: export_emails, add settings for overriding queryset fields, order_by and the full_name function\n\n2.2.3\n-----\n\nChanges:\n\n- Fix: admin widgets, fix import of static template tag (part 2)\n\n2.2.2\n-----\n\nChanges:\n\n- Fix: autoslugfield, find unique method overrideable\n- Fix: notes, do not replace dot in template dirs\n- Fix: admin widgets, fix import of static template tag\n- Improvement: print_user_for_session, use session backend\n- Improvement: sqlcreate, postgis support\n- Improvement: graph_models, permit combination of includes and excludes\n- Improvement: Adds missing GIS engine to DEFAULT_MYSQL_ENGINES\n- Improvement: sqldiff, use lowercase field names in MySQL\n- Improvement: sqldiff, mysql code could duplicate AUTO_INCREMENT and UNSIGNED statements\n\n2.2.1\n-----\n\nChanges:\n\n- Fix: tests, support for newer versions of pytest\n- Fix: tests, disable test with drf dependency for older python versions\n\n2.2.0\n-----\n\nChanges:\n\n- Fix: removing wrongly released text_tags template\n- Fix: graph_models, support for Python <3.6\n- Improvement: ForeignKeySearchInput, wrap media files in static()\n- Improvement: UniqField, added tests\n- Improvement: dumpscript, fix orm_item_locator to use dateutil\n- Improvement: graph_models, added argument to change arrow_shape\n\n2.1.9\n-----\n\nChanges:\n\n- Fix: show_urls, fix for traceback on multi language sites\n- Improvement: reset_db, fix typo's in help test\n\n2.1.8\n-----\n\nChanges:\n\n- New: HexValidator, validate hex strings\n- Improvement: reset_db, move settings to `django_settings.settings` which makes it easier to override.\n- Improvement: AutoSlugField, extend support for custom slugify function\n- Fix: runprofileserver, fix autoreloader for newer Django versions\n\n2.1.7\n-----\n\nChanges:\n\n- New: test, many many more tests :-) thanks everybody\n- New: docs, many documentation updates\n- New: graph_model, add simple theming support and django2018 theme\n- Improvement: ModificationDateTimeField, make modificationfield name modifiable\n- Improvement: graph_model, option to not showrelations labels in the graph\n- Improvement: reset_db, allow to override list of backends for database engines\n- Improvement: reset_db, add psqlextra backend\n- Improvement: runserver_plus, idle support\n- Improvement: generate_secret_key, removed get_random_string in favour of get_random_secret_key\n- Improvement: update_permissions, add create-only and update-only flags\n- Improvement: update_permissions, update changed names of permission to match correct permission name\n- Improvement: syncdata, add --database option\n- Improvement: runscript, allow to override RUNSCRIPT_SCRIPT_DIR\n- Fix: create_command, fix mknod error on macos\n- Fix: runserver_plus, fix in resolving ssl certificate path\n- Fix: sqldiff, fix hstorefield\n- Deprecate: truncate_letters, use Django's truncatechars\n- Deprecate: passwd, use Django's changepassword\n- Deprecate: Keyczar encrypted fields, Keyczar is abandoned / deprecated\n\n2.1.6\n-----\n\nChanges:\n\n- Fix: runserver_plus, auto_reloader fix for compatibility with Django 2.2\n- New: test, many many more tests :-) thanks @kuter\n\n2.1.5\n-----\n\nChanges:\n\n- New: ipdb, pdb and wdb filters\n- Fix: ForeignKeySearchInput, error with widget render(...) parameters on Django 2.1\n- Fix: pipchecker, unsupported format string passed to NoneType.format error\n- Tests: bunch of new test cases\n\n2.1.4\n-----\n\nChanges:\n\n- Fix: null_technical_500_response, handle function-based middleware\n- Fix: shell_plus, fix #1261 check for --notebook-dir=... argument style\n- Fix: graph_models, Excluded models displayed as an underscore\n- Fix: set_fake_password, requires_model_validation has been replaced with requires_system_checks since 1.9\n- Docs: admin_generator, new documentation and examples\n- Improvement: JSONField, use new from_db_value syntax on Django 2 and up\n- Improvement: EncryptedTextField, use new from_db_value syntax on Django 2 and up\n- Improvement: graph_models, add --dot option\n- Improvement: graph_models, allow to redirect (text) output to file\n- Improvement: sqldiff, better support for indexes, index_together and unique_together\n\n2.1.3\n-----\n\nChanges:\n\n- Fix: Readme, add direct link to screencast video\n- Fix: graph_models, regression under Python 2\n- Fix: ForeignKeyAutocompleteAdmin, 2.0.8 breaks ForeignKeyAutocompleteAdmin\n- Fix: AutoSlugField, fix regression when copying an autoslug model require the explicit clearing of the slug if it needs to be recalculated\n- Fix: technical_response, check for AttributeError\n- Improvement: graph_models, Add feature disable_abstract_fields\n- Improvement: AutoSlugField, Add overwrite_on_add\n- Improvement: runscript, Improve module existence test in runscript\n\n2.1.2\n-----\n\nChanges:\n\n- Fix: AutoSlugField, fix check on list or tuple type\n\n2.1.1\n-----\n\nRemoved support for Django versions before 1.11\n\nChanges:\n\n- Fix: foreignkey_searchinput, remove unnecessary img tag\n- Fix: sqldiff, fix deprecated get_indexes call\n- Fix: AutoSlugField, check that any non-callable value passed to populate_from is a string type\n- Fix: tests, fix ChangingDirectoryTests: cd back in tearDown\n- Fix: show_template_tags, should handle AppConfig class in INSTALLED applications\n- Improvement: runserver_plus, reduce reraise pollution in traceback page\n- Improvement: dumpscript, prevent many2many field with custom intermediate models to be added directly on the parent model\n- Docs: fix typos\n\n2.1.0\n-----\n\nChanges:\n\n- Fix: travis\n\n2.0.9\n-----\n\nChanges:\n\n- Improvement: use README as project description on PyPI\n\n2.0.8\n-----\n\nPlease stop using ForeignKeyAutocompleteAdmin edition :-)\n\nChanges:\n\n- Fix: special markers in runserver_plus.rst\n- Fix: shell_plus, refactor reading pythonrc file outside of exec(compile(...))\n- Fix: reset_db, fix default utf8 support\n- Fix: autoslugfield, Fix autoslug generation when existing model is copied\n- Improvement: Cleanup management commands options after argparse migration #916\n- Improvement: sqldiff, add more tests\n- Improvement: sqldiff, add DurationField and SearchVectorField\n- Improvement: shell_plus, add more tests\n- Improvement: shell_plus, backport macos fix for tab completion\n- Improvement: clear_cache, add --all option\n- Improvement: pipchecker, treat dev versions as unstable\n- Deprecation: ForeignKeyAutocompleteAdmin, Django 2.0 has similar capabilities, which are much better supported.\n\n2.0.7\n-----\n\nChanges:\n\n- Fix: pipchecker, pip 10.0.0 compatibility\n- Fix: sqldiff, improve support of GIS fields by using Django introspection\n- Fix: shell_plus, fix bug in windows when PYTHONPATH is defined\n- Fix: shell_plus, Call execute on CursorWrapper instead of directly on cursor to ensure wrappers are run\n- Fix: runserver_plus, Call execute on CursorWrapper instead of directly on cursor to ensure wrappers are run\n- Improvement: sqldiff, drop old compatibility code\n- Improvement: ForeignKeyAutocompleteAdminMixin, improvements for Django >1.9\n\n2.0.6\n-----\n\nChanges:\n\n- Fix: shell_plus, Fix of deprecation warning in collision resolvers\n\n2.0.5\n-----\n\nChanges:\n\n- Improvement: setup.py, Use PEP 508 when setuptools is version 36 or higher should fix issues with pipenv\n- Fix: docs, Docs should show that django 2.0 is supported\n\n2.0.4\n-----\n\nChanges:\n\n- Fix: setup.py, fix installation of typing in python < 3.5\n\n2.0.3\n-----\n\nChanges:\n\n- Fix: shell_plus, python 2.7 support broken due to use of Python3 super()\n\n2.0.2\n-----\n\nChanges:\n\n- Improvement: sqldiff, add --include-defaults to include default value in missing field for sqldiff #1064\n\n2.0.1\n-----\n\nChanges:\n\n- Fix: setup.py, do not include `typing` requirement in recent versions of Python\n- Improvement: shell_plus, add support for using -- to pass cli argument directly to underlying python shell implementation\n- New: generate_password, Generates a new password based on `BaseUserManager.make_random_password`\n\n2.0.0\n-----\n\nChanges:\n\n- Fix: runserver_plus, for 1.11 still using MIDDLEWARE_CLASSES\n- Fix: show_urls, Fix display in Django 2.0\n- Fix: validate_templates, remove realpath in validate_templates\n- Fix: sqldiff, bug with including proxy models in sqldiff output\n- Improvement: shell_plus, allow configurating of sqlparse formatting and pygments formatting\n- Improvement: shell_plus, add collision resolvers based on app label\n- Improvement: shell_plus, automatic importing of subclasses defined in SHELL_PLUS_SUBCLASSES_IMPORT\n- New: reset_schema, simple command to recreate public schema in PostgreSQL\n- Docs: fix links to Werkzeug documentation\n\n1.9.9\n-----\n\nChanges:\n\n- Fix: runserver_plus, fix for Django 2.0 middleware handling\n- Fix: shell_plus, fixed app_name resolving\n- Fix: AutoSlugField, deconstruct did not match construction values\n- Fix: runjob, not compatible with apps that use AppConfig in INSTALLED_APPS\n- Improvement: runserver_plus, added configuring paths to certificates\n- Improvement: sample.py template, add newline to avoid linter warnings\n- Improvement: jobs, add integration tests for runjob and runjobs management commands\n- New: merge_model_instances, new management command for de-duplicating model instances\n\n1.9.8\n-----\n\nChanges:\n\n- Fix: show_urls, fix for Django 2.0 (Locale URL Resolvers are still broken)\n- Fix: runserver_plus, fix rendering of ipv6 link\n- Improvement: validate_templates, allow relative paths\n- Improvement: validate_templates, automatically include app templates\n- Improvement: pip_checker, could not find some packages\n- Docs: shell_plus, `--print-sql` usage clearification\n\n1.9.7\n-----\n\nThis release add checking types with MyPy to the test suite. At this point\nonly a few lines of code are explicitly typed.\n\nChanges:\n\n- Improvement: shell_plus, Collision resolver implemented.\n- Improvement: shell_plus, Skipping all models importing feature added.\n- Improvement: runscript, Script execution directory policy feature added.\n- django-extensions now requires the [typing](https://pypi.python.org/pypi/typing) package.\n\n1.9.6\n-----\n\nFix boo-boo with release version in django_extensions/__init__.py\n\n1.9.4\n-----\n\nChanges:\n\n- Fix missing test case\n\n1.9.3\n-----\n\nChanges:\n\n- Tests: shell_plus, simple test for get_imported_objects\n\n1.9.2\n-----\n\nChanges:\n\n- Fix: mail_debug, regression in mail_debug for older Pythons\n- Fix: shell_plus, SyntaxError on exec(), python compatibility\n- Fix: ForeignKeyAutocompleteAdminMixin, use text/plain\n\n1.9.1\n-----\n\nChanges:\n\n- Fix: graph_models, fix json option\n- Fix: runserver_plus, avoid duplicate messages logged to console\n- Fix: mail_debug, python3 fix\n- Improvement: sqldiff, basic support for array types in postgresql\n- Improvement: runscript, handle import errors better\n- Docs: updated documentation for model extensions\n\n1.9.0\n-----\n\nThe change to --no-startup/--use-pythonrc in `shell_plus` changes the\ndefault behaviour to automatically load PYTHONSTARTUP and ~/.pythonrc.py\nunless --no-startup is set.\n\nChanges:\n\n- Fix: pipchecker, fix up-to-date check for Github sha commits\n- Fix: JSONField, fix handling to_python() for strings with tests\n- Fix: print_settings, fix print_settings to receive positional args\n- Improvement: shell_plus, update PYTHONSTARTUP / pythonrc handling to match Django\n- Improvement: shell_plus, added new 1.11 features from django.db.models to shell_plus import list\n- Improvement: runserver_plus, startup message now accounts for https\n- Docs: jobs, improve documentation about jobs scheduling\n- Docs: admin, add documentation for ForeignKeyAutocompleteStackedInline and ForeignKeyAutocompleteTabularInline\n- Docs: fix typos\n\n1.8.1\n-----\n\nChanges:\n\n- Build: use tox's 'TOXENV' environment variable\n- Fix: resetdb, fix problem that 'utf8_support' option is ignored\n- Improvement: export_emails, moved custom csv UnicodeWriter (for py2) into compat.py\n- Translations: pt, removed since it was causing issues with the builds\n                    if anybody wants to update and fix it that would be\n                    much appreciated !\n\n1.8.0\n-----\n\nUUIDField has been removed after being deprecated.\n\nDeprecation schedule for JSONField has been removed after requests from the\ncommunity.\n\nChanges:\n\n- Fix: runserver_plus, fixed Python 3 print syntax\n- Fix: sqldiff, Use 'display_size', not 'precision' to identify MySQL bool field\n- Fix: export_emails, fix and refactor the command and all its output options\n- Improvement: tests, added Python 3.6 and PyPy3.5-5.8.0\n- Improvement: clear_cache, add --cache option to support multiple caches\n- Improvement: runserver_plus, limit printing SQL queries to avoid flooding the terminal\n- Improvement: shell_plus, limit printing SQL queries to avoid flooding the terminal\n- Docs: graph_models, document including/excluding specific models\n- Docs: shell_plus, added PTPython\n\n1.7.9\n-----\n\nChanges:\n\n- Fix: AutoSlugField, foreignkey relationships\n- Fix: shell_plus, supported backends 'postgresql' for set_application_name\n- Improvement: various commands, Add syntax highlighting when printing SQL\n- Improvement: pipchecker, treat rc versions as unstable\n- Improvement: shell_plus, allow to subclass and overwrite import_objects\n- Improvement: shell_plus, fix SHELL_PLUS_PRE_IMPORTS example\n- Improvement: setup.py, fix and unify running tests\n- Improvement: runserver_plus, add RUNSERVERPLUS_POLLER_RELOADER_TYPE setting\n- Improvement: generate_secret_key, use algorithm from django\n- Docs: fix grammar and spelling mistakes\n\n1.7.8\n-----\n\nChanges:\n\n- Improvement: django 1.11, add testing for Django 1.11\n- Improvement: pipchecker, make it possible to parse https github urls\n- Improvement: unreferenced_files, make command much faster by using set()\n- Docs: add undocumented commands\n- Docs: shell_plus, additional documentation for referencing nested modules\n- Fix: sync_s3, fix exclusion of directories\n- Fix: runprofileserver, fix ip:port specification\n- Fix: runprofileserver, support --nothreading\n\n1.7.7\n-----\n\nChanges:\n\n- Improvement: admin_generator, use decorator style for registering ModelAdmins.\n- Improvement: sqldiff, quote tablename for PRAGMA in sqlite\n- Fix: graph_models, Fix `attributes` referenced before assignment\n- Fix: pipchecker, Fix AttributeError caused by missing method\n\n1.7.6\n-----\n\nChanges:\n\n- Improvement: sqldiff, ignore proxy models in diff (with cli option to include them if wanted)\n\n1.7.5\n-----\n\nChanges:\n\n- New: ForeignKeyAutocompleteAdmin, Add autocomplete for inline model admins\n- Improvement: graph_models, Rewrite modelviz module from method to class based processor\n- Improvement: db fields, make MAX_UNIQUE_QUERY_ATTEMPTS configurable per field and via settings\n- Improvement: runserver_plus, Added nopin option to disable pin\n- Fix: graph_models, Support PyDot 1.2.0 and higher\n- Fix: shell_plus, Fix that aliases from SHELL_PLUS_MODEL_ALIASES were not applied\n- Removed: validate_templatetags, remove support for pre django-1.5 style {% url %} tags\n- Cleanup: removing support for end-of-life Python 3.2\n- Docs: simplify installation instructions\n- Docs: fix example for NOTEBOOK_ARGUMENTS\n- Docs: Remove extraneous '}' characters from shell_plus docs\n\n1.7.4\n-----\n\nChanges:\n\n- Improvement: show_urls, support --no-color option\n- Fix: notes, Fix reading templates setting after django 1.8\n- Fix: create_app, Fixed typo in deprecation warning\n- Fix: shell_plus, Use new location for url reverse import\n- Docs: some commands where missing from the docs\n- Docs: runscript, added documentation for --traceback\n\n1.7.3\n-----\n\nChanges:\n\n- Fix: ForeignKeySearchInput, fix bug with constructing search_path urls\n- Docs: runscript, fix runscript example\n- Deprecation: JSONField, Django now includes JSONField our field is now deprecated\n\n1.7.2\n-----\n\nChanges:\n\n- Fix: passwd, Update passwd command up to Django>=1.8\n- Improvement: shell_plus, add settings.SHELL_PLUS_PRINT_SQL config option\n- Improvement: shell_plus, allow to specifies the connection file to use if using the --kernel option\n\n1.7.1\n-----\n\nChanges:\n\n- Fix: sqldiff, fix optional app_label arguments\n- Fix: runscript, remove args from command class\n- Doc: runscript, remove = from --script-args example\n\n1.7.0\n-----\n\nThe \"Letting go of the past\" release.\n\nFrom this moment on Django Extensions requires version 1.8 or higher.\nA lot of work has been done to remove old backwards compatibility code and\nmake sure that Django Extensions uses the current Django API's. This should\nresult in better and easier to maintain code (and hopefully less bugs :).\n\nThis release touches a lot of code if you have any issues please report them\nat [https://github.com/django-extensions/django-extensions/issues]\n\nWe still need more tests to make sure we don't break people's projects when\nrefactoring. If you have some spare time please contribute tests !\n\nChanges:\n\n- Cleanup: removing backwards compatibility hacks for (now) unsupported versions of Django\n- Cleanup: use six instead of home grown functions\n- Fix: AutoSlugField, allow_duplicates didn't set slug value to model instance\n- Fix: MongoDB fields, verbose_name on mongoengine fields does not seem to be supported\n- Fix: MongoDB fields, fix relative import problem with json.py\n- Improvement: Start using pre-commit\n- Improvement: syncdata, Replace custom transaction logic with transaction.atomic\n- Improvement: Django 1.10, use from_db_value instead of models.SubfieldBase\n- Improvement: print_user_session, support for non standard user model\n- Improvement: widont, tests to work with py2 and py3\n- Improvement: runserver_plus, prevent 2nd reload of debugger on runserver_plus\n- Improvement: runserver_plus, prevent killing the server when request.META values are evaluated\n- Improvement: reset_db, add argument to make closing sessions optional\n- Improvement: print_settings, Fix positional arguments\n- Improvement: runscript, migrate to argparse and add_arguments\n- Improvement: graph_models, do not rely on .models_module for inclusion in output\n- Improvement: jsonfield, fix issues with mutable default\n- Docs: Convert readthedocs links for their .org -> .io migration\n\n1.6.7\n-----\n\nChanges:\n\n- Fix: describe_form, fix No module named 'django.db.models.loading' error\n- Improvement: shell_plus,  Add a setting to prefix all models in an application #887\n- Improvement: pipchecker, check for requirements-{dev,prod}.txt as well\n- Docs: pipchecker, update documentation\n\n1.6.6\n-----\n\nChanges:\n\n- Fix: admin_generator, fix for using all apps in Django <1.7\n- Fix: dump_script, fix for using all apps in Django <1.7\n- Fix: UniqueFieldMixin, resolve get_fields_with_model deprecation Django 1.10\n- Fix: runprofileserver, Fix call grind format to enable source code navigation in qcachegrind.\n- Docs: runserver_plus, add a little note about the debugger PIN.\n\n1.6.5\n-----\n\nBumped version number since PyPi returns 500 errors while uploading packages :(\n\n1.6.4\n-----\n\nChanges:\n\n- Fix: jobs cache_cleanup, use `caches` instead of deprecated `get_cache`\n- Fix: ModificationDateTimeField, missing default value for `update_modified`\n- Fix: modelviz, use get_model_compat and look up missing app_label\n- Fix: modelviz, use get_models_for_app instead of get_models_compat\n- Fix: dumpscript, use `list_app_labels` instead of `get_apps` when no app_labels are given\n- Improvement: compat.py, move code from try to else block for Django 1.7+\n- Docstring: get_models_for_app, clearify argument\n\n1.6.3\n-----\n\nBumped version number for incomplete PyPi upload\n\n1.6.2\n-----\n\nThe long over due release :-)\n\nChanges:\n\n- Fix: JsonFields, do not parse floats as decimals. This fixes bugs that causes\n      them to be returned as strings after multiple saves. Note that this can\n      be backwards incompatible !\n- Fix: use add_arguments() instead of option_list (Django 1.10)\n- Fix: create_command, Django 1.9 fixes\n- Fix: create_jobs, Django 1.9 fixes\n- Fix: RandomCharField, when not unique get the first value from the generator\n- Fix: graph_models, render() must be called with a dict\n- Fix: graph_models, use force_bytes fixes command for Python 3\n- Fix: graph_models, fix django 1.6 compatibility for strings defined relation\n- Fix: graph_models, fix settings.GRAPH_MODELS breaking the command\n- Fix: graph_models, add support for lazy relationships\n- Fix: ForeignKeyAutocompleteAdmin, url_patterns is just a list (Django 1.9+)\n- Fix: ForeignKeySearchInput, use url reversing instead of hardcoded paths\n- Fix: find_template, Fix for Django 1.8+\n- Fix: admin_generator, incompatible \"default\" identifier raising TypeError\n- Improvement: show_urls, add json and pretty-json formatting\n- Improvement: runserver_plus, add support for whitenoise\n- Improvement: ModificationDateTimeField, add parameter to preserve timestamps on save\n- Improvement: runprofileserver, raise command error when hotspot is not available\n- Improvement: reset_db, better parsing of mysql cnf file\n- Improvement: restored coverage for Python 3.2\n- Improvement: pep8 fixes, remove unused shims & imports & commented code\n- Improvement: graph_models, JSON output\n- Improvement: graph_models, add wildcard filters\n- Docs: removed text on donations, the hope was that we could generate some\n        funds to have more consistent development and outreach.\n- Docs: runserver_plus, added some documentation about LOGGING\n- Docs: runscript, update documentation to match Django tutorial for Django 1.8+\n- Docs: runprofileserver, add documentation on profiler choices\n- Docs: update_permissions, add basic documentation for command\n\n1.6.1\n-----\n\nChanges:\n\n- Revert: JSONField, revert Django 1.9 fix as it breaks the field (ticket #781)\n\n1.6.0\n-----\n\nChanges:\n\n- Fix: Django 1.9 compatibility\n- New: runserver_plus, add --startup-messages to control when to show them\n- New: added support for Python 3.5\n- Improvement: show_template_tags, renamed from show_templatetags for consistency\n- Removed: jquery library (after dropping support for Django 1.5)\n\n1.5.9\n-----\n\nChanges:\n\n- Fix: wheel still had the old migrations directory in the package\n\n1.5.8\n-----\n\nChanges:\n\n- Fix: migrations, fix BadMigrationError with Django 1.8+\n- Fix: reset_db, Django 1.8+ compatibility fix\n- Fix: runserver_plus, fix signature of null_technical_500_response for Django 1.8+\n- Fix: graph_models, use force_bytes instead of .decode('utf8')\n- Improvement: print_settings, add format option to only print values\n- Improvement: print_settings, add format option for simple key = value text output\n- Improvement: email_export, documentation updates\n- Improvement: shell_plus, auto load conditional db expressions Case and When\n\n1.5.7\n-----\n\nChanges:\n\n- Fix: CreationDateTimeField, migration error\n- Fix: ModificationDateTimeField, migration error\n- Fix: shell_plus, options is not always in db config dictionary\n- Fix: admin filters, contrib.admin.util fallback code\n- Fix: graph_models, correctly support parsing lists for cli options\n- Improvement: sqldsn, support postfix\n- Improvement: utils, remove get_project_root function\n\n1.5.6\n-----\n\nChanges:\n\n- New: RandomCharField, prepopulates random character string\n- New: (Not)NullFieldListFilter, filters for admin\n- New: runserver_plus, integrate with django-pdb\n- New: runserver_plus, add check_migrations from Django\n- Improvement: show_urls, nested namespace support\n- Improvement: show_urls, allow to specify alternative urlconf\n- Improvement: show_urls, support i18n_patterns\n- Improvement: show_urls, use --language to filter on a particular language\n- Improvement: admin_generator, added docstrings to module\n- Improvement: shell_plus, allow cli arguments to be passed to ipython\n- Improvement: shell_plus, fixed PYTHONPATH bug when using django-admin shell_plus --notebook\n- Improvement: shell_plus, set application_name on PostgreSQL databases\n- Improvement: shell_plus, load user pypython config file\n- Improvement: CreationDateTimeField, use auto_now_add instead of default ModificationDateTimeField\n- Improvement: ModificationDateTimeField, use auto_now instead of pre_save method\n- Improvement: ForeignKeyAutocompleteAdmin, added ability to filter autocomplete query\n- Fix: shell_plus, support for pypython>=0.27\n- Fix: shell_plus, load apps and models directly through the apps interface when available\n- Fix: shell_plus, use ipython start_ipython instead of embed\n- Fix: shell_plus, fix swalling ImportErrors with IPython 3 and higher\n- Fix: dumpscript, fix missing imports in dumped script\n- Fix: admin_generator, fix issues with Django 1.9\n- Fix: template tags, move exception for import failure to inside of the template tags\n- Fix: reset_db, fix for Django 1.9\n- Fix: runserver_plus, fix for Django 1.9\n\n1.5.5\n-----\n\nChanges:\n\n- Fix: sqldiff, previous Django 1.8 fix was slightly broken\n\n1.5.4\n-----\n\nChanges:\n\n- Improvement: syncdata, add skip-remove option\n- Improvement: logging, report how often mail was ratelimited\n- Fix: admin, Django 1.8 compatibility module_name is now called model_name\n- Fix: notes, Python 3.x fix force output of filter into list\n- Fix: sqldiff, fix for Django 1.8\n\n1.5.3\n-----\n\nChanges:\n\n- New: ratelimiter, a simple ratelimiter filter for Python logging\n- Fix: various improvements for Django 1.8\n- Fix: sync_s3, use os.walk instead of os.path.walk (py3 fix)\n- Improvement: pipchecker, use name instead of url_name to fix casing mismatches\n- Improvement: pipchecker, use https\n- Improvement: pipchecker, fix issues with new(er) pip versions\n- Docs: fixed a few typos\n- Docs: added documentation about NOTEBOOK_ARGUMENTS settings\n\n1.5.2\n-----\n\nChanges:\n\n- New: sqldsn, prints Data Source Name for defined database(s)\n- Fix: graph_models, Django 1.8 support\n- Fix: highlighting tag, fix usage of is_safe\n- Fix: runscript, fix for runscript with AppConfig apps\n- Fix: sqldiff, KeyError when index is missing in database\n- Fix: sqldiff, multi column indexes was also counted as a single colomn index\n- Improvements: JSONField, Added try/catch for importing json/simplejson for Django 1.7\n\n1.5.1\n-----\n\nChanges:\n\n- New: runserver_plus, add support for --extra-files parameter\n- Fix: Django 1.7 defined MIDDLEWARE_CLASSES for tests\n- Fix: shell_plus, problem when auto-loading modules with empty '__module__' property\n- Improvement: shell_plus, IPython 3.x support for notebooks\n- Improvement: tests, move to py.test and lots of other improvements\n- Improvement: create_app, add migrations folder\n- Improvement: tox.ini, refactored to be more DRY\n- Improvement: runserver_plus, also reload on changes to translation files\n- Improvement: runserver_plus, add reloader_interval support\n- Improvement: create_template_tags, removed unused command line option\n- Docs: print_user_for_session, add note about SESSION_ENGINE\n- Docs: runserver_plus, added section about IO calls and CPU usage\n\n1.5.0\n-----\n\nChanges:\n\n- Fix: various fixes for Django 1.8\n- Improvement: shell_plus, autodetect vi mode by looking at $EDITOR shell env setting\n- Improvement: shell_plus, print which shell is being used at verbosity > 1\n- Improvement: shell_plus, added --no-browser option for IPython notebooks\n- Improvement: tox.ini, updated to latest Django versions\n- Docs: add reference to JSONField in documentation\n- Docs: fixed various typo's and links in docs and changelog\n- Docs: added some basic use cases to README\n- Docs: added information for companies or people wanting to donate towards the project\n- Fix: graphmodels, fix for python3\n- Fix: dumpscript, fix check for missing import_helper module in Python 3\n- Fix: runprofileserver, explicitly close file to avoid error on windows\n- Fix: json field, migration issues when adding new JSONField to existing model\n- Fix: runjobs, fix python3 issues\n\n1.4.9\n-----\n\nChanges:\n\n- New: drop_test_database, drops the test database\n- New: command_signals, git commit -a -m 'bumped version number' (see docs)\n- Bugfix: runserver_plus, removed empty lines when logging on Python 3\n\n1.4.8\n-----\n\nChanges:\n\n- Bugfix: validators, fix NoWhitespaceValidator __eq__ check\n\n1.4.7\n-----\n\nChanges:\n\n- New: validators.py, NoControlCharactersValidator and NoWhitespaceValidator\n- New: EmailNotificationCommand class, email exceptions from Django Commands\n- Improvement: runserver_plus, enable threading by default and added --nothreading\n- Improvement: runscript, better detection when import error occured in script\n- Improvement: runscript, use EmailNotificationCommand class\n- Deprecation: deprecated UUIDField since Django 1.8 will have a native version.\n- Removed: completely remove support for automatically finding project root.\n\n1.4.6\n-----\n\nChanges:\n\n- Improvement: sqldiff, fix for dbcolumn not used in few places when generating the sqldiff\n- Fix: sqldiff, backwards compatibility fix for Django 1.4\n- Fix: ForeignKey Field, handling of __str__ instead of __unicode__ in python3\n\n1.4.5\n-----\n\nChanges:\n\n- New: clear_cache, Clear django cache, useful when testing or deploying\n- Improvement: AutoSlugField, add the possibility to define a custom slugify function\n- Improvement: shell_plus --notebook, add a big warning when the notebook extension is not going to be loaded\n- Improvement: setup.py, add pypy classifier\n- Improvement: readme, add pypy badges\n- Fix: admin_generator, Fixed Python 3 __unicode__/__str__ compatibility\n\n1.4.4\n-----\n\nChanges:\n\n- Fix: admin_generator, fix ImproperlyConfigured exception on Django 1.7\n- Improvement: Remove \"requires_model_validation\" and \"requires_system_checks\" in commands which set the default value\n\n1.4.1\n-----\n\nChanges:\n\n- New: shell_plus, Added python-prompt-toolkit integration for shell_plus\n- New: shell_plus, Added --ptipython (PYPython + IPython)\n- Improvement: reset_db, output traceback to easy debugging in case of error\n- Improvement: dumpscript, add --autofield to dumpscript to include autofields in export\n- Improvement: show_urls, Include namespace in URL name\n- Improvement: show_urls, Allow multiple decorators on the show_urls command\n- Improvement: runscript, show script errors with verbosity > 1\n- Fix: jobs, daily_cleanup job use clearsessions for Django 1.5 and later\n- Fix: shell_plus, refactored importing and selecting shells to avoid polluted exception\n- Fix: shell_plus, Fix model loading for sentry\n\n1.4.0\n-----\n\nChanges:\n\n- New admin_generator, can generate a admin.py file from models\n- Improvement: sqldiff, use the same exit codes as diff uses\n- Improvement: sqldiff, add support for unsigned numeric fields\n- Improvement: sqldiff, add NOT NULL support for MySQL\n- Improvement: sqldiff, add proper AUTO_INCREMENT support for MySQL\n- Improvement: sqldiff, detect tables for which no model exists\n- Improvement: travis.yml, add pypy to tests\n- Fix: sqldiff, fix for mysql misreported field lengths\n- Fix: sqldiff, in PG custom int primary keys would be mistaking for serial\n- Fix: sqldiff, use Django 1.7 db_parameters() for detect check constraints\n- Fix: update_permissions, Django 1.7 support\n- Fix: encrypted fields, fix for Django 1.7 migrations\n\n1.3.11\n------\n\nChanges:\n\n- Improvement: sqldiff, show differences for not managed tables\n- Improvement: show_urls -f aligned, 3 spaces between columns\n- Improvement: reset_db, support mysql options files in reset_db\n- Fix: sqldiff, Fixed bug with --output_text option and notnull-differ text\n- Fix: reset_db, Fix for PostgreSQL databases with dashes, dots, etc in the name\n- Fix: dumpscript, AttributeError for datefields that are None\n- Docs: Adding RUNSERVERPLUS_SERVER_ADDRESS_PORT to docs\n\n1.3.10\n------\n\nChanges:\n\n- Fix: show_urls, fix bug in new formatter when column is empty\n\n1.3.9\n-----\n\nChanges:\n\n- Feature: shell_plus, add --kernel option to start as standalone IPython kernel\n- Feature: reset_db, Programmatically determine PostGIS template\n- Feature: sqldiff, add support for PointField and MultiPolygonField\n- Test: renamed test app\n- Fix: runserver_plus, --print-sql for Django 1.7\n- Fix: shell_plus, --print-sql for Django 1.7\n- Fix: show_urls, add support for functions that use functools.partial\n- Fix: show_urls, add formatter for aligned output (will most likely become future default)\n- Fix: shell_plus / notebook, support for Django 1.7\n- Docs: various fixes and improvements\n- Cleanup: Remove work arounds for Django 0.96 and earlier\n\n1.3.8\n-----\n\nChanges:\n\n- Feature: show_urls, add option to specify dense or verbose output format\n- Improvement: better support for django 1.7 migrations\n- Improvement: better support for django's admin docs\n- BugFix: runjob, job_name and app_name was swapped in error message\n- Docs: Update link to chinese docs\n- Python3: unreferenced_files, fix python3 compatibility\n- Python3: pipchecker, fix python3 compatibility\n\n1.3.7\n-----\n\nChanges:\n\n- Reinstated: clean_pyc and compile_pyc commands, these now depends on BASE_DIR\n              in settings.py as per Django 1.6. We urge everybody to include a\n              BASE_DIR settings in their project file! auto-detecting the\n              project-root is now deprecated and will be removed in 1.4.0.\n- I18N: Added russian locale\n- Docs: runscript, Add section about passing arguments to scripts\n- Python3: show_url, Fixed to AttributeError 'func_globals'\n- Deprecated: clean_pyc, compile_pyc, Auto-detecting project root\n\n1.3.6\n-----\n\nChanges:\n\n- Additional version bump because we mistakenly already uploaded\n  version 1.3.5 of the wheel package with the code of 1.3.4\n\n1.3.5\n-----\n\nChanges:\n\n- Feature: Django-Extensions is now also distributed as a Wheel package\n- Improvement: dumpscript, improved the readability of comments in generated script\n- Improvement: sqldiff, backported get_constraints() for PostgreSQL\n- Improvement: shell_plus, consistent colorization\n- BugFix: encrypted fields, there is no decoding to unicode in Python 3\n- BugFix: shell_plus, importing modules failed in some edge cases\n- Django 1.7: included Django 1.7 in test suite\n- Python 3.4: included Python 3.4 in test suite\n\n1.3.4\n-----\n\nChanges:\n\n- Feature: Start maintaining a CHANGELOG file in the repository\n- Feature: ActivatorModelManager now has an ActivatorQuerySet\n- Feature: Add a deconstruct() method for future Django 1.7 migration compatibility\n- Feature: show_urls, now support --language for i18n_patterns\n- Feature: show_urls, now shows the decoraters set on a view function\n- Feature: graph_models, now support --include-models to restrict the graph to specified models\n- Feature: print_settings, allow to specify the settings you want to see\n- Improvement: graph_models, use '//' instead of '#' as comment character in dot files\n- Improvement: graph_models, added error message for abstract models without explicit relations\n- Improvement: JSONField, use python's built-in json support by default with fallback on django.utils.simplejson\n- Improvement: PostgreSQLUUIDField, parse value into UUID type before sending it to the database\n- Improvement: Use django.JQuery in autocomplete.js if available\n- Improvement: use \"a not in b\" instead of \"not a in b\" in the entire codebase\n- Removed: clean_pyc command since it does not work correctly in many cases\n- Removed: sync_media_s3 command in favor of sync_s3\n- BugFix: syncdata, use pk instead of id for identifying primary key of objects\n- BugFix: sync_s3, use safer content type per default\n- BugFix: export_emails, filtering on groups\n- BugFix: print_user_for_session, use USERNAME_FIELD if defined\n- BugFix: update_permission, fixed TypeError issue\n- BugFix: JSONField, do not coerse a json string into a python list\n- BugFix: import json issue by using absolute imports\n- BugFix: add minimal version number to six (>=1.2)\n- Docs: graph_models, Added some documentation about using dot templates\n- Docs: reset_db, short description on SQL DDL used\n- Docs: Added specific list of supported Python and Django versions\n- Docs: Add link to GoDjango screencast\n- Docs: Add ShortUUIDField to docs\n- Python3: fixes to graph_models and export_emails for Python3 compatibility\n\n1.3.3\n-----\n\nChanges:\n\n- Docs: Made it clearer that Django Extensions requires Django 1.4 or higher\n- Translations: FR Updated\n- Python3: Fix for shell_plus\n\n1.3.0\n-----\n\nChanges:\n\n- Feature: SQLDiff much better notnull detection\n- Feature: reset_db add option to explicit set the PostGreSQL owner of the newly created DB\n- Feature: shell_plus added support for MongoEngine\n- Feature: sync_s3 enable syncing to other cloud providers compatible with s3\n- Improvement: ForeignKeyAutocompleteAdmin add option to limit queryset\n- BugFix: graph_models fix issue with models without primary key\n- BugFix: graph_models fix UnicodeDecodeError using --verbose-names\n- BugFix: dumpscript fix problems with date/datetimes by saving them now as ISO8601\n- Docs: many improvements\n- Docs: Chinese translation !!!\n- Python3: various improvements\n- Tests: add Django 1.6\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.3251953125,
          "content": "# Contributing to Django Extensions\n\nThere are many ways to contribute to the project. You may improve the documentation, address a bug, add some feature to the code or do something else. All sort of contributions are welcome.\n\n## Development\n\nTo start development on this project, fork this repository and follow the following instructions.\n\n```bash\n# clone the forked repository\n$ git clone YOUR_FORKED_REPO_URL\n\n# create a virtual environment\n$ python3 -m venv venv\n# activate the virtual environment\n$ source venv/bin/activate\n# install django-extensions in development mode\n(venv) $ pip install -e .\n# install dependencies\n(venv) $ pip install Django -r requirements-dev.txt\n\n# for accessing the GUI portion of the test application\n(venv) $ export DJANGO_EXTENSIONS_DATABASE_NAME=\"db.sqlite3\"    # you may change if you want to use any other database\n# run migrations\n(venv) $ python manage.py migrate\n# start the development server\n(venv) $ python manage.py runserver\n```\n\n## Testing\n\nTo run tests against a particular `python` and `django` version installed inside your virtual environment, you may use:\n\n```bash\n(venv) $ pytest # `python manage.py test` or `make test` also work\n\n```\n\nTo run tests against all supported `python` and `django` versions, you may run:\n\n```bash\n# install dependency\n(venv) $ pip install tox\n# run tests\n(venv) $ tox\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0322265625,
          "content": "Copyright (c) 2007 Michael Trier\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.341796875,
          "content": "recursive-include django_extensions/conf *.tmpl\nrecursive-include django_extensions/templates *.dot *.html\nrecursive-include django_extensions/static *\nrecursive-include django_extensions/locale *.po *.mo\nrecursive-include docs *\ninclude LICENSE\ninclude README.rst\ninclude CHANGELOG.md\ninclude tox.ini manage.py Makefile\nrecursive-include tests *.py\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.2275390625,
          "content": "help:\n\t@echo \"clean - remove all build, test, coverage and Python artifacts\"\n\t@echo \"clean-build - remove build artifacts\"\n\t@echo \"clean-pyc - remove Python file artifacts\"\n\t@echo \"clean-test - remove test and coverage artifacts\"\n\t@echo \"compile-catalog - compile translation catalogs\"\n\t@echo \"test - run tests quickly with the default Python\"\n\t@echo \"coverage - check code coverage quickly with the default Python\"\n\t@echo \"install - install the package to the active Python's site-packages\"\n\nclean: clean-test clean-build clean-pyc\n\nclean-build:\n\trm -fr build/\n\trm -fr dist/\n\trm -fr .eggs/\n\tfind . -name '*.egg-info' -exec rm -fr {} +\n\tfind . -name '*.egg' -exec rm -fr {} +\n\nclean-pyc:\n\tfind . -name '*.pyc' -exec rm -f {} +\n\tfind . -name '*.pyo' -exec rm -f {} +\n\tfind . -name '*~' -exec rm -f {} +\n\tfind . -name '__pycache__' -exec rm -fr {} +\n\nclean-test:\n\trm -fr .cache/\n\trm -fr .tox/\n\trm -f .coverage\n\trm -fr htmlcov/\n\ncompile-catalog:\n\tfor loc in django_extensions/locale/*; do \\\n\t\tpython setup.py compile_catalog --directory django_extensions/locale/ --locale $$(basename $$loc) --domain django || exit 1; \\\n\tdone\n\ntest:\n\tpytest django_extensions tests\n\ncoverage: test\n\tcoverage report -i -m\n\tcoverage html\n\ninstall: clean\n\tpython setup.py install\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 4.423828125,
          "content": "===================\n Django Extensions\n===================\n\n.. image:: https://img.shields.io/pypi/l/django-extensions.svg\n   :target: https://raw.githubusercontent.com/django-extensions/django-extensions/master/LICENSE\n\n.. image:: https://github.com/django-extensions/django-extensions/actions/workflows/compile_catalog.yml/badge.svg\n    :target: https://github.com/django-extensions/django-extensions/actions\n\n.. image:: https://github.com/django-extensions/django-extensions/actions/workflows/linters.yml/badge.svg\n    :target: https://github.com/django-extensions/django-extensions/actions\n\n.. image:: https://github.com/django-extensions/django-extensions/actions/workflows/precommit.yml/badge.svg\n    :target: https://github.com/django-extensions/django-extensions/actions\n\n.. image:: https://github.com/django-extensions/django-extensions/actions/workflows/pytest.yml/badge.svg\n    :target: https://github.com/django-extensions/django-extensions/actions\n\n.. image:: https://github.com/django-extensions/django-extensions/actions/workflows/security.yml/badge.svg\n    :target: https://github.com/django-extensions/django-extensions/actions\n\n.. image:: https://img.shields.io/pypi/v/django-extensions.svg\n    :target: https://pypi.python.org/pypi/django-extensions/\n    :alt: Latest PyPI version\n\n.. image:: https://img.shields.io/pypi/wheel/django-extensions.svg\n    :target: https://pypi.python.org/pypi/django-extensions/\n    :alt: Supports Wheel format\n\n.. image:: https://coveralls.io/repos/django-extensions/django-extensions/badge.svg?branch=master\n   :target: https://coveralls.io/r/django-extensions/django-extensions?branch=master\n   :alt: Coverage\n\nDjango Extensions is a collection of custom extensions for the Django Framework.\n\n\nGetting Started\n===============\n\nThe easiest way to figure out what Django Extensions are all about is to watch the\n`excellent screencast by Eric Holscher`__ (`watch the video on vimeo`__). In a couple\nminutes Eric walks you through a half a dozen command extensions. There is also a\n`short screencast on GoDjango's Youtube Channel`__ to help show you even more.\n\n\nRequirements\n============\n\nDjango Extensions requires Django 3.2 or later.\n\n\nGetting It\n==========\n\nYou can get Django Extensions by using pip::\n\n    $ pip install django-extensions\n\nIf you want to install it from source, grab the git repository from GitHub and run setup.py::\n\n    $ git clone git://github.com/django-extensions/django-extensions.git\n    $ cd django-extensions\n    $ python setup.py install\n\n\nInstalling It\n=============\n\nTo enable `django_extensions` in your project you need to add it to `INSTALLED_APPS` in your projects\n`settings.py` file:\n\n.. code-block:: python\n\n    INSTALLED_APPS = (\n        ...\n        'django_extensions',\n        ...\n    )\n\n\nUsing It\n========\n\nGenerate (and view) a graphviz graph of app models::\n\n    $ python manage.py graph_models -a -o myapp_models.png\n\nProduce a tab-separated list of `(url_pattern, view_function, name)` tuples for a project::\n\n    $ python manage.py show_urls\n\nCheck templates for rendering errors::\n\n    $ python manage.py validate_templates\n\nRun the enhanced django shell::\n\n    $ python manage.py shell_plus\n\nRun the enhanced django runserver, (requires Werkzeug install)::\n\n    $ python manage.py runserver_plus\n\n\nGetting Involved\n================\n\nOpen Source projects can always use more help. Fixing a problem, documenting a feature, adding\ntranslation in your language. If you have some time to spare and like to help us, here are the places to do so:\n\n- GitHub: https://github.com/django-extensions/django-extensions\n- Mailing list: https://groups.google.com/group/django-extensions\n- Translations: https://www.transifex.com/projects/p/django-extensions/\n\n\nDocumentation\n=============\n\nYou can view documentation online at:\n\n- https://django-extensions.readthedocs.io\n\nOr you can look at the docs/ directory in the repository.\n\n\nSupport\n=======\n\nDjango Extensions is free and always will be. It is developed and maintained by developers in an Open Source manner.\nAny support is welcome. You could help by writing documentation, pull-requests, report issues and/or translations.\n\nPlease remember that nobody is paid directly to develop or maintain Django Extensions so we do have to divide our time\nbetween putting food on the table, family, this project and the rest of life :-)\n\n\n__ https://ericholscher.com/blog/2008/sep/12/screencast-django-command-extensions/\n__ https://vimeo.com/1720508\n__ https://www.youtube.com/watch?v=1F6G3ONhr4k\n"
        },
        {
          "name": "django_extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "manage.py",
          "type": "blob",
          "size": 0.275390625,
          "content": "#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n\nimport os\nimport sys\n\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"tests.testapp.settings\")\n\n    from django.core.management import execute_from_command_line\n\n    execute_from_command_line(sys.argv)\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.1728515625,
          "content": "shortuuid\nwerkzeug\ndjango_pdb\npython-dateutil\npytest-django\npytest-cov\nfactory-boy\nrequests\npygments\nvobject\n\ntypes-pyOpenSSL\ntypes-PyYAML\ntypes-boto\ntypes-requests\n\nsetuptools\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.7119140625,
          "content": "[flake8]\nignore = E128,E731,W503,W504\nmax-line-length = 512\nexclude=venv/\n\n[tool:pytest]\nDJANGO_SETTINGS_MODULE=tests.testapp.settings\nnorecursedirs=venv* .tox .eggs build dist django_extensions.egg-info django_extensions/mongodb\naddopts = --doctest-modules --doctest-ignore-import-errors --nomigrations --cov=django_extensions --cov-report html --cov-report term\n\n[isort]\ncombine_as_imports = true\ndefault_section = THIRDPARTY\ninclude_trailing_comma = true\nknown_third_party = django\nknown_first_party = django_extensions\nmulti_line_output = 5\nline_length=128\n\n[pycodestyle]\ncount = False\nmax-line-length = 512\nstatistics = True\nignore = D100,D101,D102,D103,D104,D105,D106,D107,D202,D203,D205,D210,D212,D400,D406,D407,D412,D413\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 5.234375,
          "content": "# -*- coding: utf-8 -*-\n\"\"\"\nBased entirely on Django's own ``setup.py``.\n\"\"\"\nimport os\nimport sys\nimport setuptools\nfrom distutils.command.install import INSTALL_SCHEMES\nfrom distutils.command.install_data import install_data\nfrom setuptools import setup\n\n\nclass osx_install_data(install_data):\n    # On MacOS, the platform-specific lib dir is at:\n    #   /System/Library/Framework/Python/.../\n    # which is wrong. Python 2.5 supplied with MacOS 10.5 has an Apple-specific\n    # fix for this in distutils.command.install_data#306. It fixes install_lib\n    # but not install_data, which is why we roll our own install_data class.\n\n    def finalize_options(self):\n        # By the time finalize_options is called, install.install_lib is set to\n        # the fixed directory, so we set the installdir to install_lib. The\n        # install_data class uses ('install_data', 'install_dir') instead.\n        self.set_undefined_options('install', ('install_lib', 'install_dir'))\n        install_data.finalize_options(self)\n\n\nif sys.platform == \"darwin\":\n    cmdclasses = {'install_data': osx_install_data}\nelse:\n    cmdclasses = {'install_data': install_data}\n\n\ndef fullsplit(path, result=None):\n    \"\"\"\n    Split a pathname into components (the opposite of os.path.join) in a\n    platform-neutral way.\n    \"\"\"\n    if result is None:\n        result = []\n    head, tail = os.path.split(path)\n    if head == '':\n        return [tail] + result\n    if head == path:\n        return result\n    return fullsplit(head, [tail] + result)\n\n\n# Tell distutils to put the data_files in platform-specific installation\n# locations. See here for an explanation:\n# https://groups.google.com/group/comp.lang.python/browse_thread/thread/35ec7b2fed36eaec/2105ee4d9e8042cb\nfor scheme in INSTALL_SCHEMES.values():\n    scheme['data'] = scheme['purelib']\n\n\n# Compile the list of packages available, because distutils doesn't have\n# an easy way to do this.\npackages, package_data = [], {}\n\nroot_dir = os.path.dirname(__file__)\nif root_dir != '':\n    os.chdir(root_dir)\nextensions_dir = 'django_extensions'\n\nfor dirpath, dirnames, filenames in os.walk(extensions_dir):\n    # Ignore PEP 3147 cache dirs and those whose names start with '.'\n    dirnames[:] = [d for d in dirnames if not d.startswith('.') and d != '__pycache__']\n    parts = fullsplit(dirpath)\n    package_name = '.'.join(parts)\n    if '__init__.py' in filenames:\n        packages.append(package_name)\n    elif filenames:\n        relative_path = []\n        while '.'.join(parts) not in packages:\n            relative_path.append(parts.pop())\n        relative_path.reverse()\n        path = os.path.join(*relative_path)\n        package_files = package_data.setdefault('.'.join(parts), [])\n        package_files.extend([os.path.join(path, f) for f in filenames])\n\n\nversion = __import__('django_extensions').__version__\n\nif int(setuptools.__version__.split(\".\", 1)[0]) < 18:\n    assert \"bdist_wheel\" not in sys.argv, \"setuptools 18 or later is required for wheels.\"\n\nlong_description = \"\"\"django-extensions bundles several useful\nadditions for Django projects. See the project page for more information:\n  https://github.com/django-extensions/django-extensions\"\"\"\nif os.path.isfile(\"README.rst\"):\n    with open(\"README.rst\") as f:\n        long_description = f.read()\n\nsetup(\n    name='django-extensions',\n    version=version,\n    description=\"Extensions for Django\",\n    long_description=long_description,\n    author='Michael Trier',\n    author_email='mtrier@gmail.com',\n    maintainer='Bas van Oostveen',\n    maintainer_email='v.oostveen@gmail.com',\n    url='https://github.com/django-extensions/django-extensions',\n    license='MIT License',\n    platforms=['any'],\n    packages=packages,\n    cmdclass=cmdclasses,\n    package_data=package_data,\n    python_requires=\">=3.6\",\n    setup_requires=[\"setuptools\"],\n    install_requires=[\"Django>=3.2\"],\n    extras_require={},\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Environment :: Web Environment',\n        'Framework :: Django',\n        'Framework :: Django :: 3.2',\n        'Framework :: Django :: 4.0',\n        'Framework :: Django :: 4.1',\n        'Framework :: Django :: 4.2',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: MIT License',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3 :: Only',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n        'Programming Language :: Python :: 3.12',\n        'Programming Language :: Python :: Implementation :: CPython',\n        'Programming Language :: Python :: Implementation :: PyPy',\n        'Topic :: Utilities',\n    ],\n    project_urls={\n        \"Documentation\": \"https://django-extensions.readthedocs.io/\",\n        \"Changelog\": \"https://github.com/django-extensions/django-extensions/blob/main/CHANGELOG.md\",\n        \"Source\": \"https://github.com/django-extensions/django-extensions\",\n        \"Tracker\": \"https://github.com/django-extensions/django-extensions/issues\",\n    },\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 3.06640625,
          "content": "# Tox (https://tox.wiki/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n[tox]\nenvlist =\n    precommit\n    safety\n    mypy\n    {py37,py38,py39,py310,py311}-flake8\n    {py36,py37,py38,py39,py310,pypy}-dj32\n    {py38,py39,py310,pypy}-dj40\n    {py38,py39,py310,py311,pypy}-dj41\n    {py38,py39,py310,py311,py312,pypy}-dj42\n    {py38,py39,py310,pypy}-djmaster\n    py310-dj32-postgres\n    py310-dj40-postgres\n    py310-dj41-postgres\n    py310-dj42-postgres\n    py310-dj42-postgres3\n    py310-dj32-mysql\n    py310-dj40-mysql\n    py310-dj41-mysql\n    py310-dj42-mysql\n    py310-djmaster-postgres\n    py310-djmaster-postgres3\n\n[testenv]\ncommands = make test\nallowlist_externals = make\npassenv =\n    DJANGO_EXTENSIONS_DATABASE_ENGINE\n    DJANGO_EXTENSIONS_DATABASE_NAME\n    DJANGO_EXTENSIONS_DATABASE_USER\n    DJANGO_EXTENSIONS_DATABASE_PASSWORD\n    DJANGO_EXTENSIONS_DATABASE_HOST\n    DJANGO_EXTENSIONS_DATABASE_PORT\n\nsetenv =\n    postgres: DJANGO_EXTENSIONS_DATABASE_ENGINE = {env:DJANGO_EXTENSIONS_DATABASE_ENGINE:django.db.backends.postgresql}\n    postgres: DJANGO_EXTENSIONS_DATABASE_NAME = {env:DJANGO_EXTENSIONS_DATABASE_NAME:django_extensions_test}\n    postgres3: DJANGO_EXTENSIONS_DATABASE_ENGINE = {env:DJANGO_EXTENSIONS_DATABASE_ENGINE:django.db.backends.postgresql}\n    postgres3: DJANGO_EXTENSIONS_DATABASE_NAME = {env:DJANGO_EXTENSIONS_DATABASE_NAME:django_extensions_test}\n    mysql: DJANGO_EXTENSIONS_DATABASE_ENGINE = {env:DJANGO_EXTENSIONS_DATABASE_ENGINE:django.db.backends.mysql}\n    mysql: DJANGO_EXTENSIONS_DATABASE_NAME = {env:DJANGO_EXTENSIONS_DATABASE_NAME:django_extensions_test}\n\ndeps =\n    pip >= 21.1\n    -rrequirements-dev.txt\n    dj32: Django>=3.2,<4.0\n    dj40: Django>=4.0,<4.1\n    dj41: Django>=4.1,<4.2\n    dj42: Django>=4.2,<5.0\n    djmaster: https://github.com/django/django/archive/refs/heads/main.zip\n    postgres: psycopg2-binary\n    postgres3: psycopg[binary,pool]\n    mysql: mysqlclient\n\n[testenv:precommit]\ndeps =\n    pip >= 21.1\n    pre-commit\ncommands = pre-commit run -a\n\n[testenv:safety]\ndeps =\n    pip >= 21.1\n    safety\n# https://github.com/pyupio/safety/issues/539\n# Ignore 70612 / CVE-2019-8341\ncommands = safety --disable-optional-telemetry check --full-report --ignore 70612\n\n[testenv:mypy]\nallowlist_externals=\n    echo\ndeps =\n    pip >= 21.1\n    mypy\n    types-requests\n    types-boto\n    types-PyYAML\n    types-Werkzeug\n    -rrequirements-dev.txt\ncommands = mypy --ignore-missing-imports django_extensions\n\n[testenv:compile-catalog]\nallowlist_externals =\n    make\ndeps =\n    pip >= 21.1\n    Babel\ncommands =\n    make compile-catalog\n\n[testenv:py37-flake8]\ndeps =\n    pip >= 21.1\n    flake8\ncommands = flake8 django_extensions tests\n\n[testenv:py38-flake8]\ndeps =\n    pip >= 21.1\n    flake8\ncommands = flake8 django_extensions tests\n\n[testenv:py39-flake8]\ndeps =\n    pip >= 21.1\n    flake8\ncommands = flake8 django_extensions tests\n\n[testenv:py310-flake8]\ndeps =\n    pip >= 21.1\n    flake8\ncommands = flake8 django_extensions tests\n"
        }
      ]
    }
  ]
}