{
  "metadata": {
    "timestamp": 1736560743025,
    "page": 422,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "liangliangyy/DjangoBlog",
      "stars": 6777,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.12890625,
          "content": "[run]\nsource = .\ninclude = *.py\nomit =\n    *migrations*\n    *tests*\n    *.html\n    *whoosh_cn_backend*\n    *settings.py*\n    *venv*\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1337890625,
          "content": "bin/data/\r\n# virtualenv\r\nvenv/\r\ncollectedstatic/\r\ndjangoblog/whoosh_index/\r\nuploads/\r\nsettings_production.py\r\n*.md\r\ndocs/\r\nlogs/\r\nstatic/"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.123046875,
          "content": "blog/static/* linguist-vendored\n*.js linguist-vendored\n*.css linguist-vendored\n* text=auto\n*.sh text eol=lf\n*.conf text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0400390625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n\n# Translations\n*.pot\n\n# Django stuff:\n*.log\nlogs/\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n\n# PyCharm\n# http://www.jetbrains.com/pycharm/webhelp/project.html\n.idea\n.iml\nstatic/\n# virtualenv\nvenv/\n\ncollectedstatic/\ndjangoblog/whoosh_index/\ngoogle93fd32dbd906620a.html\nbaidu_verify_FlHL7cUyC9.html\nBingSiteAuth.xml\ncb9339dbe2ff86a5aa169d28dba5f615.txt\nwerobot_session.*\ndjango.jpg\nuploads/\nsettings_production.py\nwerobot_session.db\nbin/datas/\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.5126953125,
          "content": "FROM python:3.11\nENV PYTHONUNBUFFERED 1\nWORKDIR /code/djangoblog/\nRUN  apt-get update && \\\n     apt-get install  default-libmysqlclient-dev gettext -y && \\\n      rm -rf /var/lib/apt/lists/*\nADD requirements.txt requirements.txt\nRUN pip install --upgrade pip  && \\\n        pip install --no-cache-dir -r requirements.txt  && \\\n        pip install --no-cache-dir gunicorn[gevent] && \\\n        pip cache purge\n        \nADD . .\nRUN chmod +x /code/djangoblog/bin/docker_start.sh\nENTRYPOINT [\"/code/djangoblog/bin/docker_start.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2025 车亮亮\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.3994140625,
          "content": "# DjangoBlog\n\n🌍\n*[English](/docs/README-en.md) ∙ [简体中文](README.md)*\n\n基于`python3.10`和`Django4.0`的博客。   \n\n[![Django CI](https://github.com/liangliangyy/DjangoBlog/actions/workflows/django.yml/badge.svg)](https://github.com/liangliangyy/DjangoBlog/actions/workflows/django.yml) [![CodeQL](https://github.com/liangliangyy/DjangoBlog/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/liangliangyy/DjangoBlog/actions/workflows/codeql-analysis.yml) [![codecov](https://codecov.io/gh/liangliangyy/DjangoBlog/branch/master/graph/badge.svg)](https://codecov.io/gh/liangliangyy/DjangoBlog)  [![license](https://img.shields.io/github/license/liangliangyy/djangoblog.svg)]()  \n\n## 主要功能：\n- 文章，页面，分类目录，标签的添加，删除，编辑等。文章、评论及页面支持`Markdown`，支持代码高亮。\n- 支持文章全文搜索。\n- 完整的评论功能，包括发表回复评论，以及评论的邮件提醒，支持`Markdown`。\n- 侧边栏功能，最新文章，最多阅读，标签云等。\n- 支持Oauth登陆，现已有Google,GitHub,facebook,微博,QQ登录。\n- 支持`Redis`缓存，支持缓存自动刷新。\n- 简单的SEO功能，新建文章等会自动通知Google和百度。\n- 集成了简单的图床功能。\n- 集成`django-compressor`，自动压缩`css`，`js`。\n- 网站异常邮件提醒，若有未捕捉到的异常会自动发送提醒邮件。\n- 集成了微信公众号功能，现在可以使用微信公众号来管理你的vps了。\n\n\n## 安装\nmysql客户端从`pymysql`修改成了`mysqlclient`，具体请参考 [pypi](https://pypi.org/project/mysqlclient/) 查看安装前的准备。\n\n使用pip安装： `pip install -Ur requirements.txt`\n\n如果你没有pip，使用如下方式安装：\n- OS X / Linux 电脑，终端下执行: \n\n    ```\n    curl http://peak.telecommunity.com/dist/ez_setup.py | python\n    curl https://bootstrap.pypa.io/get-pip.py | python\n    ```\n\n- Windows电脑：\n\n    下载 http://peak.telecommunity.com/dist/ez_setup.py 和 https://raw.github.com/pypa/pip/master/contrib/get-pip.py 这两个文件，双击运行。 \n\n\n## 运行\n\n 修改`djangoblog/setting.py` 修改数据库配置，如下所示：\n\n```python\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'djangoblog',\n        'USER': 'root',\n        'PASSWORD': 'password',\n        'HOST': 'host',\n        'PORT': 3306,\n    }\n}\n```\n\n### 创建数据库\nmysql数据库中执行:\n```sql\nCREATE DATABASE `djangoblog` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci */;\n```\n\n然后终端下执行:\n```bash\npython manage.py makemigrations\npython manage.py migrate\n```\n\n### 创建超级用户\n\n 终端下执行:\n```bash\npython manage.py createsuperuser\n```\n\n### 创建测试数据\n终端下执行:\n```bash\npython manage.py create_testdata\n```\n\n### 收集静态文件\n终端下执行:  \n```bash\npython manage.py collectstatic --noinput\npython manage.py compress --force\n```\n\n### 开始运行：\n执行： `python manage.py runserver`\n\n\n浏览器打开: http://127.0.0.1:8000/  就可以看到效果了。  \n\n## 服务器部署\n\n本地安装部署请参考 [DjangoBlog部署教程](https://www.lylinux.net/article/2019/8/5/58.html)\n有详细的部署介绍.    \n\n本项目已经支持使用docker来部署，如果你有docker环境那么可以使用docker来部署，具体请参考:[docker部署](/docs/docker.md)\n\n\n\n## 更多配置:\n[更多配置介绍](/docs/config.md)  \n[集成elasticsearch](/docs/es.md)\n\n## 问题相关\n\n有任何问题欢迎提Issue,或者将问题描述发送至我邮箱 `liangliangyy#gmail.com`.我会尽快解答.推荐提交Issue方式.  \n\n---\n ## 致大家🙋‍♀️🙋‍♂️\n 如果本项目帮助到了你，请在[这里](https://github.com/liangliangyy/DjangoBlog/issues/214)留下你的网址，让更多的人看到。\n您的回复将会是我继续更新维护下去的动力。 \n\n\n## 捐赠\n如果您觉得本项目对您有所帮助，欢迎您请我喝杯咖啡，您的支持是我最大的动力，您可以扫描下方二维码为我付款，谢谢。\n### 支付宝：\n<div>    \n<img src=\"/docs/imgs/alipay.jpg\" width=\"150\" height=\"150\" />\n</div>  \n\n### 微信：\n<div>    \n<img src=\"/docs/imgs/wechat.jpg\" width=\"150\" height=\"150\" />\n</div>\n\n---\n\n感谢jetbrains\n<div>    \n<a href=\"https://www.jetbrains.com/?from=DjangoBlog\"><img src=\"/docs/imgs/pycharm_logo.png\" width=\"150\" height=\"150\"></a>\n</div>\n"
        },
        {
          "name": "accounts",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "blog",
          "type": "tree",
          "content": null
        },
        {
          "name": "comments",
          "type": "tree",
          "content": null
        },
        {
          "name": "djangoblog",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.es.yml",
          "type": "blob",
          "size": 1.109375,
          "content": "version: '3'\n\nservices:\n  es:\n    image: liangliangyy/elasticsearch-analysis-ik:8.6.1\n    container_name: es\n    restart: always\n    environment:\n      - discovery.type=single-node\n      - \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\n    ports:\n      - 9200:9200\n    volumes:\n      - ./bin/datas/es/:/usr/share/elasticsearch/data/\n\n  kibana:\n    image: kibana:8.6.1\n    restart: always\n    container_name: kibana\n    ports:\n      - 5601:5601\n    environment:\n      - ELASTICSEARCH_HOSTS=http://es:9200\n\n  djangoblog:\n    build: .\n    restart: always\n    command: bash -c 'sh /code/djangoblog/bin/docker_start.sh'\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ./collectedstatic:/code/djangoblog/collectedstatic\n      - ./uploads:/code/djangoblog/uploads\n    environment:\n      - DJANGO_MYSQL_DATABASE=djangoblog\n      - DJANGO_MYSQL_USER=root\n      - DJANGO_MYSQL_PASSWORD=DjAnGoBlOg!2!Q@W#E\n      - DJANGO_MYSQL_HOST=db\n      - DJANGO_MYSQL_PORT=3306\n      - DJANGO_MEMCACHED_LOCATION=memcached:11211\n      - DJANGO_ELASTICSEARCH_HOST=es:9200\n    links:\n      - db\n      - memcached\n    depends_on:\n      - db\n    container_name: djangoblog\n\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.294921875,
          "content": "version: '3'\n\nservices:\n  db:\n    image: mysql:latest\n    restart: always\n    environment:\n      - MYSQL_DATABASE=djangoblog\n      - MYSQL_ROOT_PASSWORD=DjAnGoBlOg!2!Q@W#E\n    ports:\n      - 3306:3306\n    volumes:\n      - ./bin/datas/mysql/:/var/lib/mysql\n    depends_on:\n      - redis\n    container_name: db\n\n  djangoblog:\n    build: .\n    restart: always\n    command: bash -c 'sh /code/djangoblog/bin/docker_start.sh'\n    ports:\n      - \"8000:8000\"\n    volumes:\n      - ./collectedstatic:/code/djangoblog/collectedstatic\n      - ./logs:/code/djangoblog/logs\n      - ./uploads:/code/djangoblog/uploads\n    environment:\n      - DJANGO_MYSQL_DATABASE=djangoblog\n      - DJANGO_MYSQL_USER=root\n      - DJANGO_MYSQL_PASSWORD=DjAnGoBlOg!2!Q@W#E\n      - DJANGO_MYSQL_HOST=db\n      - DJANGO_MYSQL_PORT=3306\n      - DJANGO_REDIS_URL=redis:6379\n    links:\n      - db\n      - redis\n    depends_on:\n      - db\n    container_name: djangoblog\n  nginx:\n    restart: always\n    image: nginx:latest\n    ports:\n      - \"80:80\"\n      - \"443:443\"\n    volumes:\n      - ./bin/nginx.conf:/etc/nginx/nginx.conf\n      - ./collectedstatic:/code/djangoblog/collectedstatic\n    links:\n      - djangoblog:djangoblog\n    container_name: nginx\n\n  redis:\n    restart: always\n    image: redis:latest\n    container_name: redis\n    ports:\n      - \"6379:6379\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "locale",
          "type": "tree",
          "content": null
        },
        {
          "name": "manage.py",
          "type": "blob",
          "size": 0.7890625,
          "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"djangoblog.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError:\n        # The above import may fail for some other reason. Ensure that the\n        # issue is really that Django is missing to avoid masking other\n        # exceptions on Python 2.\n        try:\n            import django\n        except ImportError:\n            raise ImportError(\n                \"Couldn't import Django. Are you sure it's installed and \"\n                \"available on your PYTHONPATH environment variable? Did you \"\n                \"forget to activate a virtual environment?\"\n            )\n        raise\n    execute_from_command_line(sys.argv)\n"
        },
        {
          "name": "oauth",
          "type": "tree",
          "content": null
        },
        {
          "name": "owntracks",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.48828125,
          "content": "coverage==7.3.2\r\nbleach==6.1.0\r\nDjango==4.2.17\r\ndjango-compressor==4.4\r\ndjango-haystack==3.2.1\r\ndjango-ipware==5.0.1\r\ndjango-mdeditor==0.1.20\r\ndjango-uuslug==2.0.0\r\nelasticsearch==7.16.1\r\nelasticsearch-dsl==7.4.0\r\ngevent==23.9.1\r\njieba==0.42.1\r\njsonpickle==3.0.2\r\nMarkdown==3.5\r\nmysqlclient==2.2.0\r\nPillow==10.3.0\r\nPygments==2.16.1\r\npython-logstash==0.4.8\r\npython-slugify==8.0.1\r\npytz==2023.3.post1\r\nrequests==2.32.0\r\nWeRoBot==1.13.1\r\nWhoosh==2.7.4\r\nuser-agents==2.2.0\r\nredis==5.0.1\r\nopenai==0.28.1\r\n"
        },
        {
          "name": "servermanager",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}