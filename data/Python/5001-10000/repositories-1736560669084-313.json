{
  "metadata": {
    "timestamp": 1736560669084,
    "page": 313,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wiseodd/generative-models",
      "stars": 7363,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.189453125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n.hypothesis/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# IPython Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# dotenv\n.env\n\n# virtualenv\nvenv/\nENV/\n\n# Spyder project settings\n.spyderproject\n\n# Rope project settings\n.ropeproject\n\n*.sublime*\nMNIST_data/\nGAN/out/\nVAE/out/\nout/\n\n# Unreleased\nGAN/unrolled_gan/\nGAN/loss_sensitive_gan/\nGAN/generative_adversarial_parallelization/gap_tensorflow.py\n\n.vscode\n"
        },
        {
          "name": "GAN",
          "type": "tree",
          "content": null
        },
        {
          "name": "HelmholtzMachine",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.181640625,
          "content": "This is free and unencumbered software released into the public domain.\n\nAnyone is free to copy, modify, publish, use, compile, sell, or\ndistribute this software, either in source code form or as a compiled\nbinary, for any purpose, commercial or non-commercial, and by any\nmeans.\n\nIn jurisdictions that recognize copyright laws, the author or authors\nof this software dedicate any and all copyright interest in the\nsoftware to the public domain. We make this dedication for the benefit\nof the public at large and to the detriment of our heirs and\nsuccessors. We intend this dedication to be an overt act of\nrelinquishment in perpetuity of all present and future rights to this\nsoftware under copyright law.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\nOTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n\nFor more information, please refer to <http://unlicense.org>\n"
        },
        {
          "name": "RBM",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.62109375,
          "content": "# Generative Models\nCollection of generative models, e.g. GAN, VAE in Pytorch and Tensorflow.\nAlso present here are RBM and Helmholtz Machine.\n\n## Note:\nGenerated samples will be stored in `GAN/{gan_model}/out` (or `VAE/{vae_model}/out`, etc) directory during training.\n\n## What's in it?\n\n#### Generative Adversarial Nets (GAN)\n  1. [Vanilla GAN](https://arxiv.org/abs/1406.2661)\n  2. [Conditional GAN](https://arxiv.org/abs/1411.1784)\n  3. [InfoGAN](https://arxiv.org/abs/1606.03657)\n  4. [Wasserstein GAN](https://arxiv.org/abs/1701.07875)\n  5. [Mode Regularized GAN](https://arxiv.org/abs/1612.02136)\n  6. [Coupled GAN](https://arxiv.org/abs/1606.07536)\n  7. [Auxiliary Classifier GAN](https://arxiv.org/abs/1610.09585)\n  8. [Least Squares GAN](https://arxiv.org/abs/1611.04076v2)\n  9. [Boundary Seeking GAN](https://arxiv.org/abs/1702.08431)\n  10. [Energy Based GAN](https://arxiv.org/abs/1609.03126)\n  11. [f-GAN](https://arxiv.org/abs/1606.00709)\n  12. [Generative Adversarial Parallelization](https://arxiv.org/abs/1612.04021)\n  13. [DiscoGAN](https://arxiv.org/abs/1703.05192)\n  14. [Adversarial Feature Learning](https://arxiv.org/abs/1605.09782) & [Adversarially Learned Inference](https://arxiv.org/abs/1606.00704)\n  15. [Boundary Equilibrium GAN](https://arxiv.org/abs/1703.10717)\n  16. [Improved Training for Wasserstein GAN](https://arxiv.org/abs/1704.00028)\n  17. [DualGAN](https://arxiv.org/abs/1704.02510)\n  18. [MAGAN: Margin Adaptation for GAN](https://arxiv.org/abs/1704.03817)\n  19. [Softmax GAN](https://arxiv.org/abs/1704.06191)\n  20. [GibbsNet](https://papers.nips.cc/paper/7094-gibbsnet-iterative-adversarial-inference-for-deep-graphical-models.pdf)\n\n#### Variational Autoencoder (VAE)\n  1. [Vanilla VAE](https://arxiv.org/abs/1312.6114)\n  2. [Conditional VAE](https://arxiv.org/abs/1406.5298)\n  3. [Denoising VAE](https://arxiv.org/abs/1511.06406)\n  4. [Adversarial Autoencoder](https://arxiv.org/abs/1511.05644)\n  5. [Adversarial Variational Bayes](https://arxiv.org/abs/1701.04722)\n\n#### Restricted Boltzmann Machine (RBM)\n  1. [Binary RBM with Contrastive Divergence](http://www.cs.toronto.edu/~fritz/absps/cdmiguel.pdf)\n  2. [Binary RBM with Persistent Contrastive Divergence](http://www.cs.toronto.edu/~tijmen/pcd/pcd.pdf)\n\n#### Helmholtz Machine\n  1. [Binary Helmholtz Machine with Wake-Sleep Algorithm](http://www.cs.toronto.edu/~fritz/absps/ws.pdf)\n\n## Dependencies\n\n1. Install miniconda <http://conda.pydata.org/miniconda.html>\n2. Do `conda env create`\n3. Enter the env `source activate generative-models`\n4. Install [Tensorflow](https://www.tensorflow.org/get_started/os_setup)\n5. Install [Pytorch](https://github.com/pytorch/pytorch#installation)\n"
        },
        {
          "name": "VAE",
          "type": "tree",
          "content": null
        },
        {
          "name": "environment.yml",
          "type": "blob",
          "size": 0.146484375,
          "content": "name: generative-models\ndependencies:\n- python=3.5.1\n- numpy=1.11.0\n- scikit-learn=0.17.1\n- scipy=0.17.1\n- matplotlib=1.5.3\n- pip:\n    - keras==1.1.1\n"
        }
      ]
    }
  ]
}