{
  "metadata": {
    "timestamp": 1736560544169,
    "page": 152,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "drivendataorg/cookiecutter-data-science",
      "stars": 8476,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01171875,
          "content": "* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.283203125,
          "content": "# generated docs items\ndocs/site/\ndocs/docs/_partials/termynal.md\ndocs/docs/_partials/*/*.html\n\n# test cache\nmanual_test/\n\n# other local dev info\n.vscode/\n\n# Mac OS-specific storage files\n.DS_Store\n\n# vim\n*.swp\n*.swo\n\n## https://github.com/github/gitignore/blob/4488915eec0b3a45b5c63ead28f286819c0917de/Python.gitignore\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n"
        },
        {
          "name": "HISTORY.md",
          "type": "blob",
          "size": 0.443359375,
          "content": "# cookiecutter-data-science Changelog\n\n## UNRELEASED\n\n- Fixes issue with scaffold code that import of config did not work. Adds testing of imports to test suite. (Issue [#370](https://github.com/drivendataorg/cookiecutter-data-science/issues/370))\n\n## v2.0.0 (2024-05-22)\n\n- Released version 2.0.0! :tada: See [docs](https://cookiecutter-data-science.drivendata.org/) and [announcement blog post](https://drivendata.co/blog/ccds-v2) for more information."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0556640625,
          "content": "The MIT License (MIT)\nCopyright (c) 2016 DrivenData, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.388671875,
          "content": ".PHONY: _prep create_environment requirements format lint docs docs-serve test \\\n\ttest-fastest test-debug-fastest _clean_manual_test manual-test manual-test-debug\n\n## GLOBALS\n\nPROJECT_NAME = cookiecutter-data-science\nPYTHON_VERSION = 3.10\nPYTHON_INTERPRETER = python\n\n\n###     UTILITIES\n_prep:\n\trm -f **/*/.DS_store\n\n\n###     DEV COMMANDS\n\n## Set up python interpreter environment\ncreate_environment:\n\tconda create --name $(PROJECT_NAME) python=$(PYTHON_VERSION) -y\n\t@echo \">>> conda env created. Activate with:\\nconda activate $(PROJECT_NAME)\"\n\n## Install Python Dependencies\nrequirements:\n\t$(PYTHON_INTERPRETER) -m pip install -r dev-requirements.txt\n\n## Format the code using isort and black\nformat:\n\tisort --profile black ccds hooks tests docs/scripts\n\tblack ccds hooks tests docs/scripts\n\nlint:\n\tflake8 ccds hooks tests docs/scripts\n\tisort --check --profile black ccds hooks tests docs/scripts\n\tblack --check ccds hooks tests docs/scripts\n\n\n###     DOCS\n\ndocs:\n\tcd docs && mkdocs build\n\ndocs-serve:\n\tcd docs && mkdocs serve\n\n###     TESTS\n\ntest: _prep\n\tpytest -vvv --durations=0\n\ntest-fastest: _prep\n\tpytest -vvv -FFF\n\ntest-debug-last:\n\tpytest --lf --pdb\n\n_clean_manual_test:\n\trm -rf manual_test\n\nmanual-test: _prep _clean_manual_test\n\tmkdir -p manual_test\n\tcd manual_test && python -m ccds ..\n\nmanual-test-debug: _prep _clean_manual_test\n\tmkdir -p manual_test\n\tcd manual_test && python -m pdb ../ccds/__main__.py ..\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.5185546875,
          "content": "# Cookiecutter Data Science\n\n_A logical, reasonably standardized but flexible project structure for doing and sharing data science work._\n\n**Cookiecutter Data Science (CCDS)** is a tool for setting up a data science project template that incorporates best practices. To learn more about CCDS's philosophy, visit the [project homepage](https://cookiecutter-data-science.drivendata.org/).\n\n> ℹ️ Cookiecutter Data Science v2 has changed from v1. It now requires installing the new cookiecutter-data-science Python package, which extends the functionality of the [cookiecutter](https://cookiecutter.readthedocs.io/en/stable/README.html) templating utility. Use the provided `ccds` command-line program instead of `cookiecutter`.\n\n## Installation\n\nCookiecutter Data Science v2 requires Python 3.8+. Since this is a cross-project utility application, we recommend installing it with [pipx](https://pypa.github.io/pipx/). Installation command options:\n\n```bash\n# With pipx from PyPI (recommended)\npipx install cookiecutter-data-science\n\n# With pip from PyPI\npip install cookiecutter-data-science\n\n# With conda from conda-forge (coming soon)\n# conda install cookiecutter-data-science -c conda-forge\n```\n\n## Starting a new project\n\nTo start a new project, run:\n\n```bash\nccds\n```\n\n### The resulting directory structure\n\nThe directory structure of your new project will look something like this (depending on the settings that you choose):\n\n```\n├── LICENSE            <- Open-source license if one is chosen\n├── Makefile           <- Makefile with convenience commands like `make data` or `make train`\n├── README.md          <- The top-level README for developers using this project.\n├── data\n│   ├── external       <- Data from third party sources.\n│   ├── interim        <- Intermediate data that has been transformed.\n│   ├── processed      <- The final, canonical data sets for modeling.\n│   └── raw            <- The original, immutable data dump.\n│\n├── docs               <- A default mkdocs project; see www.mkdocs.org for details\n│\n├── models             <- Trained and serialized models, model predictions, or model summaries\n│\n├── notebooks          <- Jupyter notebooks. Naming convention is a number (for ordering),\n│                         the creator's initials, and a short `-` delimited description, e.g.\n│                         `1.0-jqp-initial-data-exploration`.\n│\n├── pyproject.toml     <- Project configuration file with package metadata for \n│                         {{ cookiecutter.module_name }} and configuration for tools like black\n│\n├── references         <- Data dictionaries, manuals, and all other explanatory materials.\n│\n├── reports            <- Generated analysis as HTML, PDF, LaTeX, etc.\n│   └── figures        <- Generated graphics and figures to be used in reporting\n│\n├── requirements.txt   <- The requirements file for reproducing the analysis environment, e.g.\n│                         generated with `pip freeze > requirements.txt`\n│\n├── setup.cfg          <- Configuration file for flake8\n│\n└── {{ cookiecutter.module_name }}   <- Source code for use in this project.\n    │\n    ├── __init__.py             <- Makes {{ cookiecutter.module_name }} a Python module\n    │\n    ├── config.py               <- Store useful variables and configuration\n    │\n    ├── dataset.py              <- Scripts to download or generate data\n    │\n    ├── features.py             <- Code to create features for modeling\n    │\n    ├── modeling                \n    │   ├── __init__.py \n    │   ├── predict.py          <- Code to run model inference with trained models          \n    │   └── train.py            <- Code to train models\n    │\n    └── plots.py                <- Code to create visualizations   \n```\n\n## Using v1\n\nIf you want to use the old v1 project template, you need to have either the cookiecutter-data-science package or cookiecutter package installed. Then, use either command-line program with the `-c v1` option:\n\n```bash\nccds https://github.com/drivendataorg/cookiecutter-data-science -c v1\n# or equivalently\ncookiecutter https://github.com/drivendataorg/cookiecutter-data-science -c v1\n```\n\n## Contributing\n\nWe welcome contributions! [See the docs for guidelines](https://cookiecutter-data-science.drivendata.org/contributing/).\n\n### Installing development requirements\n\n```bash\npip install -r dev-requirements.txt\n```\n\n### Running the tests\n\n```bash\npytest tests\n```\n"
        },
        {
          "name": "ccds-help.json",
          "type": "blob",
          "size": 9.9755859375,
          "content": "[\n    {\n        \"field\": \"project_name\",\n        \"help\": {\n            \"description\": \"A name for the project, for example 'My Project'.\",\n            \"more_information\": \"\"\n        }\n    },\n    {\n        \"field\": \"repo_name\",\n        \"help\": {\n            \"description\": \"Default generated by altering the `project_name`. Used for folder and repo name for the project.\",\n            \"more_information\": \"\"\n        }\n    },\n    {\n        \"field\": \"module_name\",\n        \"help\": {\n            \"description\": \"Default generated by altering the `project_name` to be a compatible Python module name.\",\n            \"more_information\": \"\"\n        }\n    },\n    {\n        \"field\": \"author_name\",\n        \"help\": {\n            \"description\": \"Name of the individual or organization that created the project.\",\n            \"more_information\": \"\"\n        }\n    },\n    {\n        \"field\": \"description\",\n        \"help\": {\n            \"description\": \"A short description that appears in the README.md file by default.\",\n            \"more_information\": \"\"\n        }\n    },\n    {\n        \"field\": \"python_version_number\",\n        \"help\": {\n            \"description\": \"The version of Python that the project will use.\",\n            \"more_information\": \"[Python version status](https://devguide.python.org/versions/)\"\n        }\n    },\n    {\n        \"field\": \"dataset_storage\",\n        \"help\": {\n            \"description\": \"A cloud storage location for where data should be stored; controls `sync_data_up` and `sync_data_down` Makefile commands. You will be asked for different additional configuration information depending on your choice.\",\n            \"more_information\": \"\"\n        },\n        \"choices\": [\n            {\n                \"choice\": \"none\",\n                \"help\": {\n                    \"description\": \"No cloud storage configured; Makefile commands to sync data removed.\",\n                    \"more_information\": \"\"\n                } \n            },\n            {\n                \"choice\": \"azure\",\n                \"help\": {\n                    \"description\": \"Store data on Azure Blob Storage.\",\n                    \"more_information\": \"[Docs](https://learn.microsoft.com/en-us/azure/storage/blobs/)\"\n                },\n                \"subfields\": [\n                    {\n                        \"field\": \"container\",\n                        \"help\": {\n                            \"description\": \"Name of the container on blob storage.\",\n                            \"more_information\": \"[Docs](https://learn.microsoft.com/en-us/azure/storage/blobs/blob-containers-portal)\" \n                        }\n                    }\n                ] \n            },\n            {\n                \"choice\": \"s3\",\n                \"help\": {\n                    \"description\": \"Store data on Amazon S3.\",\n                    \"more_information\": \"[Docs](https://docs.aws.amazon.com/s3/)\"\n                },\n                \"subfields\": [\n                    {\n                        \"field\": \"bucket\",\n                        \"help\": {\n                            \"description\": \"The name of the bucket to store data in; can also be a longer S3 path.\",\n                            \"more_information\": \"[Docs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/Welcome.html#BasicsBucket)\" \n                        }\n                    },\n                    {\n                        \"field\": \"aws_profile\",\n                        \"help\": {\n                            \"description\": \"The name of the profile to use for the aws CLI.\",\n                            \"more_information\": \"[Docs](https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-files.html)\"\n                        }\n                    }\n                ] \n            },\n            {\n                \"choice\": \"gcs\",\n                \"help\": {\n                    \"description\": \"Store data to Google Cloud Storage\",\n                    \"more_information\": \"[Docs](https://cloud.google.com/storage/docs)\"\n                },\n                \"subfields\": [\n                    {\n                        \"field\": \"bucket\",\n                        \"help\": {\n                            \"description\": \"The name of the bucket to store data in.\",\n                            \"more_information\": \"[Docs](https://cloud.google.com/storage/docs/buckets)\"\n                        }\n                    }\n                ] \n            }\n        ]\n    },\n    {\n        \"field\": \"environment_manager\",\n        \"help\": {\n            \"description\": \"Tool for managing creating Python environments. Controls `make create_environment` Makefile command.\",\n            \"more_information\": \"[About virtual environments](https://www.dataquest.io/blog/a-complete-guide-to-python-virtual-environments/)\"\n        },\n        \"choices\": [\n            {\n                \"choice\": \"virtualenv\",\n                \"help\": {\n                    \"description\": \"Simple wrapper on venv with more features.\",\n                    \"more_information\": \"[Docs](https://virtualenv.pypa.io/en/latest/)\"\n                } \n            },\n            {\n                \"choice\": \"conda\",\n                \"help\": {\n                    \"description\": \"Data science environments supporting non-Python dependencies as well.\",\n                    \"more_information\": \"[Docs](https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html)\"\n                } \n            },\n            {\n                \"choice\": \"pipenv\",\n                \"help\": {\n                    \"description\": \"Manages dependencies and virual environments.\",\n                    \"more_information\": \"[Docs](https://pipenv.pypa.io/en/latest/)\"\n                } \n            },\n            {\n                \"choice\": \"none\",\n                \"help\": {\n                    \"description\": \"Do not add `create_environment` commands; env management left to the user.\",\n                    \"more_information\": \"\"\n                } \n            }\n        ]\n    },\n    {\n        \"field\": \"dependency_file\",\n        \"help\": {\n            \"description\": \"Where to track project-specific dependencies; often paired with specific environment manager.\",\n            \"more_information\": \"\"\n        },\n        \"choices\": [\n            {\n                \"choice\": \"requirements.txt\",\n                \"help\": {\n                    \"description\": \"Most general, least feature-rich format for use with `pip`.\",\n                    \"more_information\": \"[pip docs](https://pip.pypa.io/en/stable/reference/requirements-file-format/)\"\n                } \n            },\n            {\n                \"choice\": \"environment.yml\",\n                \"help\": {\n                    \"description\": \"Format used by `conda`.\",\n                    \"more_information\": \"[Docs](https://conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html#sharing-an-environment)\"\n                } \n            },\n            {\n                \"choice\": \"Pipfile\",\n                \"help\": {\n                    \"description\": \"Format used by Pipenv\",\n                    \"more_information\": \"[Docs](https://pipenv.pypa.io/en/latest/pipfile.html)\"\n                } \n            }\n        ]\n    },\n    {\n        \"field\": \"pydata_packages\",\n        \"help\": {\n            \"description\": \"Packages automatically added to your requirements file.\",\n            \"more_information\": \"\"\n        },\n        \"choices\": [\n            {\n                \"choice\": \"none\",\n                \"help\": {\n                    \"description\": \"No extra packages.\",\n                    \"more_information\": \"\"\n                } \n            },\n            {\n                \"choice\": \"basic\",\n                \"help\": {\n                    \"description\": \"Basic common data science packages.\",\n                    \"more_information\": \"\"\n                } \n            }\n        ]\n    },\n    {\n        \"field\": \"open_source_license\",\n        \"help\": {\n            \"description\": \"Whether to include a license file and which one to use.\",\n            \"more_information\": \"\"\n        },\n        \"choices\": [\n            {\n                \"choice\": \"No license file\",\n                \"help\": {\n                    \"description\": \"No license file will be included.\",\n                    \"more_information\": \"\"\n                } \n            },\n            {\n                \"choice\": \"MIT\",\n                \"help\": {\n                    \"description\": \"MIT License\",\n                    \"more_information\": \"[License](https://opensource.org/license/mit)\"\n                } \n            },\n            {\n                \"choice\": \"BSD-3-Clause\",\n                \"help\": {\n                    \"description\": \"3-Clause BSD License\",\n                    \"more_information\": \"[License](https://opensource.org/license/bsd-3-clause)\"\n                } \n            }\n        ]\n    },\n    {\n        \"field\": \"docs\",\n        \"help\": {\n            \"description\": \"Whether to include a `docs` folder and documentation tools.\",\n            \"more_information\": \"\"\n        },\n        \"choices\": [\n            {\n                \"choice\": \"none\",\n                \"help\": {\n                    \"description\": \"No `docs` folder.\",\n                    \"more_information\": \"\"\n                } \n            },\n            {\n                \"choice\": \"mkdocs\",\n                \"help\": {\n                    \"description\": \"Include `docs` folder and `mkdocs` tools.\",\n                    \"more_information\": \"[Docs](https://www.mkdocs.org/)\"\n                } \n            }\n        ]\n    },\n    {\n        \"field\": \"include_code_scaffold\",\n        \"help\": {\n            \"description\": \"Whether to include some basic boilerplate code in the Python module.\",\n            \"more_information\": \"\"\n        },\n        \"choices\": [\n            {\n                \"choice\": \"Yes\",\n                \"help\": {\n                    \"description\": \"Includes common data submodules.\",\n                    \"more_information\": \"\"\n                } \n            },\n            {\n                \"choice\": \"No\",\n                \"help\": {\n                    \"description\": \"Empty Python module to start with.\",\n                    \"more_information\": \"\"\n                } \n            }\n        ]\n    }\n]\n"
        },
        {
          "name": "ccds.json",
          "type": "blob",
          "size": 0.9990234375,
          "content": "{\n    \"project_name\": \"project_name\",\n    \"repo_name\": \"{{ cookiecutter.project_name.lower().replace(' ', '_') }}\",\n    \"module_name\": \"{{ cookiecutter.project_name.lower().replace(' ', '_').replace('-', '_') }}\",\n    \"author_name\": \"Your name (or your organization/company/team)\",\n    \"description\": \"A short description of the project.\",\n    \"python_version_number\": \"3.10\",\n    \"dataset_storage\": [\n        {\"none\": \"none\"},\n        {\"azure\": {\"container\": \"container-name\"}},\n        {\"s3\": {\"bucket\": \"bucket-name\", \"aws_profile\": \"default\"}},\n        {\"gcs\": {\"bucket\": \"bucket-name\"}}\n    ],\n    \"environment_manager\": [\n        \"virtualenv\",\n        \"conda\",\n        \"pipenv\",\n        \"none\"\n    ],\n    \"dependency_file\": [\n        \"requirements.txt\",\n        \"environment.yml\",\n        \"Pipfile\"\n    ],\n    \"pydata_packages\": [\n        \"none\",\n        \"basic\"\n    ],\n    \"open_source_license\": [\"No license file\", \"MIT\", \"BSD-3-Clause\"],\n    \"docs\": [\"mkdocs\", \"none\"],\n    \"include_code_scaffold\": [\"Yes\", \"No\"]\n}"
        },
        {
          "name": "ccds",
          "type": "tree",
          "content": null
        },
        {
          "name": "cookiecutter.json",
          "type": "blob",
          "size": 0.1875,
          "content": "{\n    \"DEPRECATED\": \"Use of the `cookiecutter` command is deprecated. Please use `ccds` in place of `cookiecutter`. To continue using the deprecated template, use `cookiecutter ... -c v1`.\"\n}\n"
        },
        {
          "name": "dev-requirements.txt",
          "type": "blob",
          "size": 0.2412109375,
          "content": "-e .\n\nansi2html\nblack\nbuild\nchardet\nflake8\nisort\nmkdocs\nmkdocs-material\nmkdocs-gen-files\nmkdocs-include-markdown-plugin\npexpect\npipenv\npytest\ntermynal\ntwine\nvirtualenvwrapper; sys_platform != 'win32'\nvirtualenvwrapper-win; sys_platform == 'win32'\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.3525390625,
          "content": "[build-system]\nrequires = [\"flit_core >=3.2,<4\"]\nbuild-backend = \"flit_core.buildapi\"\n\n[tool.flit.module]\nname = \"ccds\"\n\n[project]\nname = \"cookiecutter-data-science\"\nversion = \"2.0.0\"\ndescription = \"A logical, reasonably standardized but flexible project structure for doing and sharing data science work.\"\nauthors = [\n  { name = \"DrivenData\", email = \"info@drivendata.org\" },\n]\nlicense = { file = \"LICENSE\" }\nreadme = \"README.md\"\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"Intended Audience :: Developers\",\n  \"Intended Audience :: Science/Research\",\n  \"License :: OSI Approved :: MIT License\",\n  \"Programming Language :: Python :: 3\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Topic :: Scientific/Engineering\",\n  \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n]\nrequires-python = \">=3.8\"\ndependencies = [\n  \"click\",\n  \"cookiecutter\",\n]\n\n[project.scripts]\nccds = \"ccds.__main__:main\"\n\n[project.urls]\n\"Homepage\" = \"https://cookiecutter-data-science.drivendata.org/\"\n\"Source Code\" = \"https://github.com/drivendataorg/cookiecutter-data-science/\"\n\"Bug Tracker\" = \"https://github.com/drivendataorg/cookiecutter-data-science/issues\"\n\"DrivenData\" = \"https://drivendata.co\"\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.0595703125,
          "content": "[flake8]\nignore = E203, E402, E501, W503\nmax-line-length = 99"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "{{ cookiecutter.repo_name }}",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}