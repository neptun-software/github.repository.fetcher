{
  "metadata": {
    "timestamp": 1736560926626,
    "page": 659,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TechXueXi/TechXueXi",
      "stars": 5688,
      "defaultBranch": "developing",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1865234375,
          "content": ".vscode\nSourcePackages/XuexiStart.sh\npandaico.ico\ncontributors.psd\n.idea\nSourcePackages/chrome\nSourcePackages/pdlearn/__pycache__\nSourcePackages/user\nSourcePackages/__pycache__\nstartTech.bat\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.267578125,
          "content": "官方网站： https://techxuexi.js.org/\n\n# 第一次参与开源\n\n万事起头难。特别是和其他人合作时，犯错格外令人不舒服。不过，开源的本质就是和其他人合作。我们希望为初学者带来一个简单的方法去学 xi 及参与开源项目。\n\n阅读文章和观看教程会有所帮助。不过，有什么方法能比实际动手做更好？本项目旨在指导初学者及简化初学者参与开源的方式。记住：过程越轻松，学 xi 效益越高。如果你想要做出第一次贡献，只需按照以下简单步骤操作即可。我们答应你，这将很好玩 :)\n\n## 准备\n\n### 账号\n\n首先，你需要准备一个 GitHub 账号。由于本项目特殊性，**您需要一个不包括您真实信息的账号**。\n\n绑定境外邮箱比如谷歌，不要用国区苹果账号，腾讯，163，阿里的邮箱，也不要让境外邮箱转发到境内邮箱。\n\n如果您已经申请有github账号，而且它不包括你真实个人信息，没有使用国内邮箱进行过绑定，同时知道你身份和github账号的人都可靠，直接使用就行。不过以后需要在github从事其他项目开发，要看具体情况，是否新建github账号\n\n如果包括个人信息，请重新申请一个github账号专门提交这个项目有关的代码。\n\n### git 环境\n\n如果您想只通过网页修改，可以不准备这个。但是您需要确认网络环境稳定。现在中国大陆访问GitHub非常不稳定，为了确保更改不丢失，请最好使用某些稳定的工具。\n\n如果您想先在本地修改，你的电脑上尚未安装 git, 请按照这个[ 安装指引 ](https://help.github.com/articles/set-up-git/)进行安装。\n\n## Fork（复制）本代码仓库\n\n点击仓库右上角的一个按钮去 Fork 这个代码仓库。\n这个操作会将代码仓库复制一个到你的账户名下。\n\n## 只通过网页修改\n\n只通过网页修改，在你的账户名下 Fork 的仓库内随意修改，点击浏览某个文件，然后点击笔图标编辑就行。记得点击页面底部绿色commit按钮保存。也可以新建文件，记得添加文件名。不能新建空文件夹。\n\n一次只能修改一个文件，但是您可以这样修改多个文件之后再进行下一步操作\n\n## 提pr Pull Request\n\n前往 Github 你的代码仓库，你会在仓库标题下看到一个 `pull requests` 的标签。点击该按钮。\n\n接着再点击 `new pull request` 按钮，正式提交 pull request,写好说明。\n\n不久之后，我便会把你所有的变化合并到这个项目的主分支。更改合并后，你会收到电子邮件通知。\n\n# 贡献什么\n\n###### 你喜欢写作吗？\n\n- 编写并改进项目的文档\n- 编写项目的教程\n\n###### 你喜欢组织吗？\n\n- 链接到重复的问题，并建议新的问题标签，以保持组织有序\n- 通过开放性问题并建议关闭旧问题\n- 询问有关最近开放的问题的澄清问题，以推进讨论\n\n###### 你喜欢编码吗？\n\n- 找一个待解决的公开问题\n- 询问您是否可以帮助编写新功能\n- 自动化项目设置\n- 改进工具和测试\n\n###### 你喜欢帮助别人吗？\n\n- 回答有关项目的问题\n- 回答有关未解决问题的人的问题\n- 帮助调节讨论板或对话渠道\n\n###### 你喜欢帮助别人代码吗？\n\n- 查看其他人提交的代码\n- 编写有关如何使用项目的教程\n- 提供指导另一个贡献者，\n\n## 其他说明\n有一些开发者说明请到 https://github.com/TechXueXi/techxuexi-readme 查看，但说明不完善。加入开发组后登录可见。 加入说明： https://github.com/TechXueXi/TechXueXi/issues/2\n\n## 有疑问？\n遇到问题，请试着按如下步骤解决：\n\n1. 仔细阅读过 `README.md` ， `使用方法-更新方法-下载方式.md` ， `DOCKER.md` 这些说明\n2. 查看/搜索所有已有 issue，无论是open还是close的\n3. 通过搜索引擎搜索，尝试不同的关键词 www.google.com www.baidu.com\n4. 到提供的在线聊天室询问 (聊天室说明： https://github.com/TechXueXi/TechXueXi/issues/14 )\n5. 提新 issue ，关注邮箱有关这个 issue 的提醒。\n\n## 本地修改操作：\n\n## Clone（克隆）代码仓库\n\n<img align=\"right\" width=\"300\" src=\"https://raw.githubusercontent.com/firstcontributions/first-contributions/master/assets/clone.png\" alt=\"clone this repository\" />\n\n接下来，将复制后的代码仓库克隆到你的电脑上。点击图示中的绿色按钮，接着点击复制到剪切板按钮（将代码仓库地址复制下来）\n\n随后打开命令行窗口，敲入如下 git 命令：\n\n```\ngit clone \"刚才复制的 url 链接\"\n```\n\n\"刚才复制的 url 链接\"（去掉双引号）就是复制到你账户名下的代码仓库地址。获取这链接地址的方法请见上一步。\n\n<img align=\"right\" width=\"300\" src=\"https://raw.githubusercontent.com/firstcontributions/first-contributions/master/assets/copy-to-clipboard.png\" alt=\"copy URL to clipboard\" />\n\n譬如：\n\n```\ngit clone https://github.com/你的Github用户名/first-contributions.git\n```\n\n'你的 Github 用户名' 指的就是你的 Github 用户名。这一步，你将复制到你账户名下的 first-contributions 这个代码仓库克隆到本地电脑上。\n\n## 新建一个分支\n\n下面的命令能在命令行窗口中，把目录切换到 first-contributions\n\n```\ncd first-contributions\n```\n\n接下来使用 `git checkout` 命令新建一个代码分支\n\n```\ngit checkout -b <新分支的名称>\n```\n\n譬如：\n\n```\ngit checkout -b add-myname\n```\n\n(新分支的名称不一定需要有* add *。然而，在新分支的名称加入* add *是一件合理的事情，因为这个分支的目的是将你的名字添加到列表中。)\n\n## 对代码进行修改，而後 Commit (提交) 修改\n\n打开 `Contributors.md` 这个文件，更新文件内容，将你的名字加上去，保存修改。`git status` 这命令会列出被改动的文件。接着 `git add` 这命令则可以添加你的改动，就像如下这条命令。\n\n<img align=\"right\" width=\"450\" src=\"https://raw.githubusercontent.com/firstcontributions/first-contributions/master/assets/git-status.png\" alt=\"git status\" />\n\n```\ngit add Contributors.md\n```\n\n现在就可以使用 `git commit` 命令 commit 你的修改了。\n\n```\ngit commit -m \"Add <你的名字> to Contributors list\"\n```\n\n将 `<你的名字>` 替换为你的名字\n\n## 将改动 Push（发布）到 GitHub\n\n使用 `git push` 命令发布代码\n\n```\ngit push origin <分支的名称>\n```\n\n将 `<分支的名称>` 替换为之前新建的分支名称。\n\n## 提出 Pull Request 将你的修改供他人审阅\n\n前往 Github 你的代码仓库，你会看到一个 `Compare & pull request` 的按钮。点击该按钮。\n\n<img style=\"float: right;\" src=\"https://raw.githubusercontent.com/firstcontributions/first-contributions/master/assets/compare-and-pull.png\" alt=\"create a pull request\" />\n\n接着再点击 `Create pull request` 按钮，正式提交 pull request。\n\n<img style=\"float: right;\" src=\"https://raw.githubusercontent.com/firstcontributions/first-contributions/master/assets/submit-pull-request.png\" alt=\"submit pull request\" />\n\n不久之后，我便会把你所有的变化合并到这个项目的主分支。更改合并后，你会收到电子邮件通知。\n\n### [ 更多资料 ](../additional-material/git_workflow_scenarios/additional-material.md)\n\n\n\n"
        },
        {
          "name": "DOCKER.md",
          "type": "blob",
          "size": 0.05859375,
          "content": "文档移动到 https://github.com/TechXueXi/TechXueXi/wiki\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.470703125,
          "content": "\nFROM python:3.7-slim\nARG usesource=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nARG usebranche=\"dev\"\nENV pullbranche=${usebranche}\nENV Sourcepath=${usesource}\nRUN apt-get update\nRUN apt-get install -y wget unzip libzbar0 git cron supervisor\nENV TZ=Asia/Shanghai\nENV AccessToken=\nENV Secret=\nENV Nohead=True\nENV Pushmode=1\nENV islooplogin=False\nENV CRONTIME=\"30 9 * * *\"\n# RUN rm -f /xuexi/config/*; ls -la\nCOPY requirements.txt /xuexi/requirements.txt\nCOPY run.sh /xuexi/run.sh \nCOPY start.sh /xuexi/start.sh \nCOPY supervisor.sh /xuexi/supervisor.sh\n\nRUN pip install -r /xuexi/requirements.txt\nRUN cd /xuexi/; \\\n  wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_92.0.4515.159-1_amd64.deb; \\\n  dpkg -i google-chrome-stable_92.0.4515.159-1_amd64.deb; \\\n  apt-get -fy install; \\\n  google-chrome --version; \\\n  rm -f google-chrome-stable_92.0.4515.159-1_amd64.deb\nRUN cd /xuexi/; \\\n  wget -O chromedriver_linux64_92.0.4515.107.zip http://npm.taobao.org/mirrors/chromedriver/92.0.4515.107/chromedriver_linux64.zip; \\\n  unzip chromedriver_linux64_92.0.4515.107.zip; \\\n  chmod 755 chromedriver; \\\n  ls -la; \\\n  ./chromedriver --version\nRUN apt-get clean\nWORKDIR /xuexi\nRUN chmod +x ./run.sh\nRUN chmod +x ./start.sh\nRUN chmod +x ./supervisor.sh;./supervisor.sh\nRUN mkdir code\nWORKDIR /xuexi/code\nRUN git clone -b ${usebranche} ${usesource}; cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi;\nWORKDIR /xuexi\nEXPOSE 80\nENTRYPOINT [\"/bin/bash\", \"./start.sh\"]\n"
        },
        {
          "name": "Dockerfile.dev",
          "type": "blob",
          "size": 1.88671875,
          "content": "  \nFROM python:3.7-slim\nARG usesource=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nARG usebranche=\"dev\"\nENV pullbranche=${usebranche}\nENV Sourcepath=${usesource}\n\nRUN \\\n  sed -i 's/snapshot.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\\\n  sed -i 's/security.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\\\n  sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\n\nRUN \\\n  mkdir ~/.pip ;\\\n  echo -e \"\\n[global]\\ntrusted-host=mirrors.aliyun.com\\nindex-url=https://mirrors.aliyun.com/pypi/simple/\" > ~/.pip/pip.conf\n  \n  \nRUN apt-get update\nRUN apt-get install -y wget unzip libzbar0 git cron supervisor\nENV TZ=Asia/Shanghai\nENV AccessToken=\nENV Secret=\nENV Nohead=True\nENV Pushmode=1\nENV islooplogin=False\nENV CRONTIME=\"30 9 * * *\"\n# RUN rm -f /xuexi/config/*; ls -la\nCOPY requirements.txt /xuexi/requirements.txt\nCOPY run.sh /xuexi/run.sh \nCOPY start.sh /xuexi/start.sh \nCOPY supervisor.sh /xuexi/supervisor.sh\n\nRUN pip install -r /xuexi/requirements.txt\nRUN cd /xuexi/; \\\n  wget https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_92.0.4515.159-1_amd64.deb; \\\n  dpkg -i google-chrome-stable_92.0.4515.159-1_amd64.deb; \\\n  apt-get -fy install; \\\n  google-chrome --version; \\\n  rm -f google-chrome-stable_92.0.4515.159-1_amd64.deb\nRUN cd /xuexi/; \\\n  wget -O chromedriver_linux64_92.0.4515.107.zip http://npm.taobao.org/mirrors/chromedriver/92.0.4515.107/chromedriver_linux64.zip; \\\n  unzip chromedriver_linux64_92.0.4515.107.zip; \\\n  chmod 755 chromedriver; \\\n  ls -la; \\\n  ./chromedriver --version\nRUN apt-get clean\nWORKDIR /xuexi\nRUN chmod +x ./run.sh\nRUN chmod +x ./start.sh\nRUN chmod +x ./supervisor.sh;./supervisor.sh\nRUN mkdir code\nWORKDIR /xuexi/code\nRUN git clone -b ${usebranche} ${usesource}; cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi;\nWORKDIR /xuexi\nEXPOSE 80\nENTRYPOINT [\"/bin/bash\", \"./start.sh\"]\n"
        },
        {
          "name": "Dockerfile_arm32v7",
          "type": "blob",
          "size": 1.654296875,
          "content": "FROM alpine AS builder\n\nENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz\nRUN apk add curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1\nFROM arm32v7/python:bullseye\nARG usesource=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nARG usebranche=\"dev\"\nENV pullbranche=${usebranche}\nENV Sourcepath=${usesource}\nCOPY --from=builder qemu-arm-static /usr/bin \n# 增加适配玩客云arm7 32位环境 chrome默认安装 90版本\nRUN ln -s /usr/bin/dpkg-split /usr/sbin/dpkg-split\nRUN ln -s /usr/bin/dpkg-deb /usr/sbin/dpkg-deb\nRUN ln -s /bin/tar /usr/sbin/tar\nRUN apt-get update\n#RUN apt-get upgrade\nRUN apt-get install -y wget unzip libzbar0 git cron supervisor chromium-driver; chromedriver --version; which chromedriver; chromium --version\nRUN apt-get install -y libxml2-dev libxslt1-dev zlib1g-dev python3-pip\nRUN apt-get install libjpeg-dev zlib1g-dev \nENV TZ=Asia/Shanghai\nENV AccessToken=\nENV Secret=\nENV Nohead=True\nENV Pushmode=1\nENV islooplogin=False\n#ENV Sourcepath=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nENV CRONTIME=\"30 9 * * *\"\n# RUN rm -f /xuexi/config/*; ls -la\nCOPY requirements.txt /xuexi/requirements.txt\nCOPY run.sh /xuexi/run.sh \nCOPY start.sh /xuexi/start.sh \nCOPY supervisor.sh /xuexi/supervisor.sh\nRUN pip install -r /xuexi/requirements.txt\n\nWORKDIR /xuexi\nRUN chmod +x ./run.sh\nRUN chmod +x ./start.sh\nRUN chmod +x ./supervisor.sh;./supervisor.sh\nRUN mkdir code\nWORKDIR /xuexi/code\n#RUN git clone -b ${pullbranche} ${Sourcepath}\nRUN git clone -b ${usebranche} ${usesource};cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi;\nWORKDIR /xuexi\nEXPOSE 80\nENTRYPOINT [\"/bin/bash\", \"./start.sh\"]\n"
        },
        {
          "name": "Dockerfile_arm32v7.dev",
          "type": "blob",
          "size": 1.919921875,
          "content": "FROM alpine AS builder\n\nENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz\nRUN apk add curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1\nFROM arm32v7/python:bullseye\nARG usesource=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nARG usebranche=\"dev\"\nENV pullbranche=${usebranche}\nENV Sourcepath=${usesource}\nCOPY --from=builder qemu-arm-static /usr/bin \n# RUN \\\n#  sed -i 's/snapshot.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\\\n#  sed -i 's/security.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\\\n#  sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\n# 增加适配玩客云arm7 32位环境 chrome默认安装 90版本\nRUN ln -s /usr/bin/dpkg-split /usr/sbin/dpkg-split\nRUN ln -s /usr/bin/dpkg-deb /usr/sbin/dpkg-deb\nRUN ln -s /bin/tar /usr/sbin/tar\nRUN apt-get update\n#RUN apt-get upgrade\nRUN apt-get install -y wget unzip libzbar0 git cron supervisor chromium-driver; chromedriver --version; which chromedriver; chromium --version\nRUN apt-get install -y libxml2-dev libxslt1-dev zlib1g-dev python3-pip\nRUN apt-get install libjpeg-dev zlib1g-dev \nENV TZ=Asia/Shanghai\nENV AccessToken=\nENV Secret=\nENV Nohead=True\nENV Pushmode=1\nENV islooplogin=False\n#ENV Sourcepath=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nENV CRONTIME=\"30 9 * * *\"\n# RUN rm -f /xuexi/config/*; ls -la\nCOPY requirements.txt /xuexi/requirements.txt\nCOPY run.sh /xuexi/run.sh \nCOPY start.sh /xuexi/start.sh \nCOPY supervisor.sh /xuexi/supervisor.sh\nRUN pip install -r /xuexi/requirements.txt\n\nWORKDIR /xuexi\nRUN chmod +x ./run.sh\nRUN chmod +x ./start.sh\nRUN chmod +x ./supervisor.sh;./supervisor.sh\nRUN mkdir code\nWORKDIR /xuexi/code\n#RUN git clone -b ${pullbranche} ${Sourcepath}\nRUN git clone -b ${usebranche} ${usesource};cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi;\nWORKDIR /xuexi\nEXPOSE 80\nENTRYPOINT [\"/bin/bash\", \"./start.sh\"]\n"
        },
        {
          "name": "Dockerfile_arm64v8",
          "type": "blob",
          "size": 1.3359375,
          "content": "FROM alpine AS builder\n\nENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-aarch64.tar.gz\nRUN apk add curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1\n\n\nFROM arm64v8/python:3.7-slim\n\nCOPY --from=builder qemu-aarch64-static /usr/bin\nARG usesource=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nARG usebranche=\"dev\"\nENV pullbranche=${usebranche}\nENV Sourcepath=${usesource}\nRUN apt-get update\nRUN apt-get install -y wget unzip libzbar0 git cron supervisor chromium-driver; chromedriver --version; which chromedriver; chromium --version\nENV TZ=Asia/Shanghai\nENV AccessToken=\nENV Secret=\nENV Nohead=True\nENV Pushmode=1\nENV islooplogin=False\n#ENV Sourcepath=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nENV CRONTIME=\"30 9 * * *\"\n# RUN rm -f /xuexi/config/*; ls -la\nCOPY requirements.txt /xuexi/requirements.txt\nCOPY run.sh /xuexi/run.sh \nCOPY start.sh /xuexi/start.sh \nCOPY supervisor.sh /xuexi/supervisor.sh\nRUN pip install -r /xuexi/requirements.txt\nWORKDIR /xuexi\nRUN chmod +x ./run.sh\nRUN chmod +x ./start.sh\nRUN chmod +x ./supervisor.sh;./supervisor.sh\nRUN mkdir code\nWORKDIR /xuexi/code\n#RUN git clone -b ${pullbranche} ${Sourcepath}\nRUN git clone -b ${usebranche} ${usesource};cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi;\nWORKDIR /xuexi\nEXPOSE 80\nENTRYPOINT [\"/bin/bash\", \"./start.sh\"]\n"
        },
        {
          "name": "Dockerfile_arm64v8.dev",
          "type": "blob",
          "size": 1.8759765625,
          "content": "FROM alpine AS builder\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories\nENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-aarch64.tar.gz\nRUN apk add --update --no-cache curl && curl -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1\n\n\nFROM arm64v8/python:3.7-slim\n\nCOPY --from=builder qemu-aarch64-static /usr/bin\nARG usesource=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nARG usebranche=\"dev\"\nENV pullbranche=${usebranche}\nENV Sourcepath=${usesource}\n\nRUN \\\n  sed -i 's/snapshot.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\\\n  sed -i 's/security.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\\\n  sed -i 's/deb.debian.org/mirrors.tuna.tsinghua.edu.cn/g' /etc/apt/sources.list ;\n\n# RUN \\\n#   mkdir ~/.pip ;\\\n#   echo -e \"\\n[global]\\ntrusted-host=mirrors.aliyun.com\\nindex-url=https://mirrors.aliyun.com/pypi/simple/\" > ~/.pip/pip.conf; \\\n#   cat ~/.pip/pip.conf\n\nRUN apt-get update\nRUN apt-get install -y wget unzip libzbar0 git cron supervisor chromium-driver; chromedriver --version; which chromedriver; chromium --version\nENV TZ=Asia/Shanghai\nENV AccessToken=\nENV Secret=\nENV Nohead=True\nENV Pushmode=1\nENV islooplogin=False\n#ENV Sourcepath=\"https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\"\nENV CRONTIME=\"30 9 * * *\"\n# RUN rm -f /xuexi/config/*; ls -la\nCOPY requirements.txt /xuexi/requirements.txt\nCOPY run.sh /xuexi/run.sh \nCOPY start.sh /xuexi/start.sh \nCOPY supervisor.sh /xuexi/supervisor.sh\nRUN pip install -r /xuexi/requirements.txt\nWORKDIR /xuexi\nRUN chmod +x ./run.sh\nRUN chmod +x ./start.sh\nRUN chmod +x ./supervisor.sh;./supervisor.sh\nRUN mkdir code\nWORKDIR /xuexi/code\n#RUN git clone -b ${pullbranche} ${Sourcepath}\nRUN git clone -b ${usebranche} ${usesource};cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi;\nWORKDIR /xuexi\nEXPOSE 80\nENTRYPOINT [\"/bin/bash\", \"./start.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.47265625,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.646484375,
          "content": "# 前言\n\n官方网站： https://techxuexi.js.org/\n\n**[交流群地址及说明（点击查看）](https://github.com/TechXueXi/TechXueXi/issues/14)**\n\n**重要公告**： [公告栏（国内打不开）](https://t.me/s/techxuexi_notice) || [公告栏（国内可以打开）](https://notice.techxuexi.workers.dev)\n\n**我们随时删库跑路，请加交流群防失联。**\n\n可以点击右上角 watch 接收关于本项目的通知邮件，新版本提醒等。\n\n> 本项目基于某已终止的项目，请自行搜索后前往star。我们由衷地敬佩这个领域的先锋们。  \n> 这是全网较好的成熟产品，但已停止，我们于心不忍。本仓库现由“科技强国”组织进行维护。\n\n> **所有问题请到本项目这里提，不要打扰原作者。**\n\n许多IT人员本终日埋头写代码，确实有需求，与其各人重复修改编写浪费生产力不如团队合作维护，\n因此我们还是希望继续维护此生态。具体请详细阅读下文\n<div>\n<img width=80% src=\"https://raw.githubusercontent.com/TechXueXi/TechXueXi/master/img_folder/banner.jpg\" />\n<img width=18% src=\"https://raw.githubusercontent.com/TechXueXi/TechXueXi/master/img_folder/kjqg.png\" />\n</div>\n\n文档移动到了 https://github.com/TechXueXi/TechXueXi/wiki\n\n# TechXueXi\n<p align=\"center\">TechXueXi 是一款使用python语言编写的学 xi 工具。可达 45 分/天</p>\n\n<p align=\"center\"><img src=\"https://github.com/TechXueXi/TechXueXi/blob/master/img_folder/peoplelearning.jpg?raw=true\" alt=\"学 xi 情景\"/></p>\n\n<p align=\"center\"><a href=\"https://github.com/TechXueXi/TechXueXi/watchers\"><img src=\"https://img.shields.io/github/watchers/TechXueXi/TechXueXi.svg?style=social\" alt=\"GitHub watchers\"/></a>&nbsp;\n<a href=\"https://github.com/TechXueXi/TechXueXi/stargazers\"><img src=\"https://img.shields.io/github/stars/TechXueXi/TechXueXi.svg?style=social\" alt=\"GitHub stars\"/></a>&nbsp;\n<a href=\"https://github.com/TechXueXi/TechXueXi/network/members\"><img src=\"https://img.shields.io/github/forks/TechXueXi/TechXueXi.svg?style=social\" alt=\"GitHub forks\"/></a> <br>\n<code>请点击页面顶部靠右star与fork</code> <br>\n<a href=\"https://github.com/TechXueXi/TechXueXi/issues\"><img src=\"https://img.shields.io/github/issues/TechXueXi/TechXueXi.svg\" alt=\"GitHub issues\"/></a>&nbsp;\n<a href=\"https://github.com/TechXueXi/TechXueXi/issues?q=is%3Aissue+is%3Aclosed\"><img src=\"https://img.shields.io/github/issues-closed/TechXueXi/TechXueXi.svg\" alt=\"GitHub closed issues\"/></a>&nbsp;\n<a href=\"https://github.com/TechXueXi/TechXueXi/pulls\"><img src=\"https://img.shields.io/github/issues-pr/TechXueXi/TechXueXi\" alt=\"GitHub pull requests\"/></a>&nbsp;\n<a href=\"https://github.com/TechXueXi/TechXueXi/pulls?q=is%3Apr+is%3Aclosed\"><img src=\"https://img.shields.io/github/issues-pr-closed/TechXueXi/TechXueXi\" alt=\"GitHub closed pull requests\"/></a>  </p>\n\n<p align=\"center\"><img src=\"https://img.shields.io/github/release/TechXueXi/TechXueXi.svg?label=%E7%89%88%E6%9C%AC&amp;style=flat-square\" alt=\"GitHub release\"/>&nbsp;\n<img src=\"https://img.shields.io/github/languages/top/TechXueXi/TechXueXi.svg?style=flat-square\" alt=\"GitHub top language\"/>&nbsp;\n<img src=\"https://img.shields.io/github/languages/code-size/TechXueXi/TechXueXi.svg?style=flat-square\" alt=\"GitHub code size in bytes\"/>&nbsp;\n<img src=\"https://img.shields.io/github/repo-size/TechXueXi/TechXueXi.svg?style=flat-square\" alt=\"GitHub repo size\"/> <br>\n<img src=\"https://img.shields.io/github/license/TechXueXi/TechXueXi.svg?style=flat-square\" alt=\"GitHub License\"/>&nbsp;\n<img src=\"https://img.shields.io/badge/platform-win32%20%7C%20win64%20%7C%20linux%20%7C%20osx-brightgreen.svg?style=flat-square\" alt=\"platforms\"/>&nbsp;\n<img src=\"https://img.shields.io/librariesio/github/TechXueXi/TechXueXi.svg?style=flat-square\" alt=\"Libraries.io dependency status for GitHub repo\"/> <br>\n<img src=\"https://img.shields.io/github/commit-activity/m/TechXueXi/TechXueXi.svg?style=flat-square\" alt=\"GitHub commit activity\"/>&nbsp;\n<img src=\"https://img.shields.io/github/contributors/TechXueXi/TechXueXi.svg?style=flat-square\" alt=\"GitHub contributors\"/>&ensp;</p>\n\n<p align=\"center\"><a href=\"https://github.com/TechXueXi/TechXueXi/releases/\"><img src=\"https://img.shields.io/github/downloads/TechXueXi/TechXueXi/total?style=for-the-badge\" alt=\"GitHub all releases\"/></a>&ensp;&ensp;\n<a href=\"https://996.icu/#/zh_CN\"><img src=\"https://img.shields.io/badge/link-996.icu-%23FF4D5B.svg?style=for-the-badge\" alt=\"Badge\"/></a></p>\n\n<!--\nTechXueXi 是一款使用python语言编写的学 xi 工具。可达 45 分/天\n\n![学 xi 情景](https://github.com/TechXueXi/TechXueXi/blob/master/img_folder/peoplelearning.jpg?raw=true)\n\n[![GitHub watchers](https://img.shields.io/github/watchers/TechXueXi/TechXueXi.svg?style=social)](https://github.com/TechXueXi/TechXueXi/watchers)&nbsp;\n[![GitHub stars](https://img.shields.io/github/stars/TechXueXi/TechXueXi.svg?style=social)](https://github.com/TechXueXi/TechXueXi/stargazers)&nbsp;\n[![GitHub forks](https://img.shields.io/github/forks/TechXueXi/TechXueXi.svg?style=social)](https://github.com/TechXueXi/TechXueXi/network/members)  \n`请点击页面顶部靠右star与fork`  \n[![GitHub issues](https://img.shields.io/github/issues/TechXueXi/TechXueXi.svg)](https://github.com/TechXueXi/TechXueXi/issues)&nbsp;\n[![GitHub closed issues](https://img.shields.io/github/issues-closed/TechXueXi/TechXueXi.svg)](https://github.com/TechXueXi/TechXueXi/issues?q=is%3Aissue+is%3Aclosed)&nbsp;\n[![GitHub pull requests](https://img.shields.io/github/issues-pr/TechXueXi/TechXueXi)](https://github.com/TechXueXi/TechXueXi/pulls)&nbsp;\n[![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/TechXueXi/TechXueXi)](https://github.com/TechXueXi/TechXueXi/pulls?q=is%3Apr+is%3Aclosed)  \n\n![GitHub release](https://img.shields.io/github/release/TechXueXi/TechXueXi.svg?label=%E7%89%88%E6%9C%AC&style=flat-square)&nbsp;\n![GitHub top language](https://img.shields.io/github/languages/top/TechXueXi/TechXueXi.svg?style=flat-square)&nbsp;\n![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/TechXueXi/TechXueXi.svg?style=flat-square)&nbsp;\n![GitHub repo size](https://img.shields.io/github/repo-size/TechXueXi/TechXueXi.svg?style=flat-square)  \n![GitHub License](https://img.shields.io/github/license/TechXueXi/TechXueXi.svg?style=flat-square)&nbsp;\n![platforms](https://img.shields.io/badge/platform-win32%20%7C%20win64%20%7C%20linux%20%7C%20osx-brightgreen.svg?style=flat-square)&nbsp;\n![Libraries.io dependency status for GitHub repo](https://img.shields.io/librariesio/github/TechXueXi/TechXueXi.svg?style=flat-square)  \n![GitHub commit activity](https://img.shields.io/github/commit-activity/m/TechXueXi/TechXueXi.svg?style=flat-square)&nbsp;\n![GitHub contributors](https://img.shields.io/github/contributors/TechXueXi/TechXueXi.svg?style=flat-square)&ensp;\n\n[![GitHub all releases](https://img.shields.io/github/downloads/TechXueXi/TechXueXi/total?style=for-the-badge)](https://github.com/TechXueXi/TechXueXi/releases/)&ensp;&ensp;\n[![Badge](https://img.shields.io/badge/link-996.icu-%23FF4D5B.svg?style=for-the-badge)](https://996.icu/#/zh_CN)\n-->\n\n[TOC]\n\n# 📃免责声明\n\nTechXueXi为python学 xi 交流的开源非营利项目，仅作为程序员之间相互学 xi 交流之用，使用需严格遵守开源许可协议。严禁用于商业用途，禁止使用TechXueXi进行任何盈利活动。对一切非法使用所产生的后果，我们概不负责。\n\n<img width=50% src=\"https://raw.githubusercontent.com/TechXueXi/TechXueXi/master/img_folder/qsjwczlhql.jpg\" />\n\n# 有疑问？\n遇到问题，请试着按如下步骤解决：\n\n1. 仔细阅读过 `README.md` ， `使用方法-更新方法-下载方式.md` ， `DOCKER.md` 这些说明\n2. 查看/搜索所有已有 issue，无论是open还是close的\n3. 通过搜索引擎搜索，尝试不同的关键词 www.google.com www.baidu.com\n4. 到提供的在线聊天室询问 (聊天室说明： https://github.com/TechXueXi/TechXueXi/issues/14 )\n5. 提新 issue ，关注邮箱有关这个 issue 的提醒。\n\n# 👍程序特性\n\n<img align=\"right\" width=\"270\" src=\"https://raw.githubusercontent.com/TechXueXi/TechXueXi/master/img_folder/phone.jpg\" alt=\"copy URL to clipboard\" />\n\n- 全平台支持： win，macos，linux，vps，Raspbian-pi等各种平台\n\n> 请使用带图形界面的环境,推荐windows。尽量使用自用电脑，  \n最好不要使用vps,云主机等（因为有可能被xuexi根据服务商ip查到）。  \n`不支持xp`\n\n- **支持每日答题，支持每周答题，支持专项答题**\n- 全程后台静默学 xi ： 也可开启前台学 xi 展示\n- 自动核对学 xi 分数： 根据每日分数学满为止\n- ~~支持保存账户信息： 可以保存帐户信息每日免去重复登陆~~\n- 默认多线程学 xi ：  可关闭，建议开启，每日学满只需20分钟\n- ~~可设置自动关机：  每天下班用办公室电脑学 xi 后自动关机~~\n- 增强防检测：随机浏览器请求头及自然学 xi 行为模拟\n\n> `右侧为手机操作vps示例`\n\n另有安卓本地运行方式，请查看issue #323 （可能无法使用）\n\n------\n\n\n# 📗使用方法 🔧更新方法 💾下载地址\n\n详见： [使用方法-更新方法-下载方式](https://github.com/TechXueXi/TechXueXi/wiki/%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95-%E6%9B%B4%E6%96%B0%E6%96%B9%E6%B3%95-%E4%B8%8B%E8%BD%BD%E6%96%B9%E5%BC%8F)\n\n\n\n# 📑常见问题\n\nwin平台可能提示`无法定位程序输入点ucrtbase.terminate于动态链接库api-ms-win-crt-runtime-|1-1-0.dll`等缺失dll文件的问题而无法使用，尝试安装[`Visual C++ Redistributable for Visual Studio 2015`](https://www.microsoft.com/zh-CN/download/details.aspx?id=48145)\n\n**下载链接:**\n\n[![](https://img.shields.io/badge/download-vc_redist.x64-blue.svg?style=for-the-badge&logo=visualstudiocode)](https://raw.fastgit.org/TechXueXi/VC-REDIST/master/vc_redist.x64.exe) \n\n[![](https://img.shields.io/badge/download-vc_redist.x86-blue.svg?style=for-the-badge&logo=visualstudiocode)](https://raw.fastgit.org/TechXueXi/VC-REDIST/master/vc_redist.x86.exe) \n\n\n\n# 📕问题提交\n\n在仔细阅读文档的前提下\n\n- 检查当前的issue是否有与你相关的。发布重复的issue会让双方都降低效率，搜索开放和已经关闭的issue来检查你现在提出的issue是否已经被提及。\n- 请明确你的问题：期望的输出是什么，实际发生了什么？以及其他人如何复现你的问题。\n- 对结果的链接：复现问题的方式\n- 汇报系统环境的详细信息，注明程序版本号与运行环境。\n- 如果你粘贴错误输出到一个issue中，请使用三个反引号包裹` ```使得显示更漂亮易读``` `。\n\n[![GitHub issues](https://img.shields.io/github/issues/TechXueXi/TechXueXi.svg)](https://github.com/TechXueXi/TechXueXi/issues)  [![GitHub closed issues](https://img.shields.io/github/issues-closed/TechXueXi/TechXueXi.svg)](https://github.com/TechXueXi/TechXueXi/issues?q=is%3Aissue+is%3Aclosed) \n\n提交issue标题示例  `V2.4 win10x64 软件显示问题…`\n\n\n# 💪 代码贡献\n\n### 🕔 项目计划\n本项目维护计划、路线图参见（TechXueXi 开发团队成员才可以查看） https://github.com/orgs/TechXueXi/projects/2\n\n申请加入 TechXueXi 开发团队参见下方说明 https://github.com/TechXueXi/TechXueXi/issues/2\n\n如您参与贡献，请注意：维护计划、路线图中每一条未列至\"Done\"下时，仅可在 developing 分支改动。\n\n### [👨‍👨‍👦‍👦 直接参与贡献](https://github.com/TechXueXi/TechXueXi/blob/dev/CONTRIBUTING.md)(内附提交方法)\n\n如您开发了其他“科技强国”项目，也可以加入本组织，相互交流，共同维护生态。\n\n### 🙋‍♂️ 加入组织\nhttps://github.com/TechXueXi/TechXueXi/issues/2\n\n# 📌关于学 xi 强国\n\n个人认为，学 xi 强国本身受众就是国家的栋梁，本人不欢迎不热爱国家的人加入本项目。\n\n学 xi 强国聚合了大量可免费阅读的期刊、古籍、公开课、歌曲、戏曲、电影、图书等资料，内容严谨，专业性强。没有博眼球，无下限的自媒体内容和虚假新闻。推荐大家自发积极学 xi 使用。TechXueXi 仅额外提供给上班上学期间工作学业繁重，抽不出时间完成学 xi 强国任务的非程序员。\n\n“学 xi 强国”意义深远。\n\n\n\n# 📝源代码\n\n[![](https://img.shields.io/badge/source-pandalearning-orange.svg?style=for-the-badge&logo=visualstudiocode)](https://github.com/TechXueXi/TechXueXi/tree/master/SourcePackages) \n\n\n\n# 📜许可证\n\n![GitHub](https://img.shields.io/github/license/TechXueXi/TechXueXi.svg) \n\n[![](https://github.com/TechXueXi/TechXueXi/blob/master/img_folder/1920px-LGPLv3_Logo.svg.png?raw=true)](https://github.com/TechXueXi/TechXueXi/blob/master/LICENSE)\n\n# **我们不接受任何捐赠。**\n"
        },
        {
          "name": "SourcePackages",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-build-dev.sh",
          "type": "blob",
          "size": 0.77734375,
          "content": "#!/bin/bash\n# eg ./docker-build-dev.sh https://github.com/TechXueXi/TechXueXi.git developing  localhost:5000 arm64v8 Dockerfile_arm64v8.dev\n\nUSESOURCE='https://github.com/TechXueXi/TechXueXi.git'\nUSEBRANCHE='developing'\nIMAGE_TAG=\"techxuexi/techxuexi-amd64:${USEBRANCHE}\"\nPUSH_REGISTRY_URL='docker.io'\nDOCKER_FILE='Dockerfile.dev'\nif [[ $1 ]]; then\n    USESOURCE=$1\nfi\nif [[ $2 ]]; then\n    USEBRANCHE=$2\nfi\nif [[ $3 ]]; then\n    PUSH_REGISTRY_URL=$3\n    IMAGE_TAG=${PUSH_REGISTRY_URL}/${IMAGE_TAG}\nfi\nif [[ $4 ]]; then\n    IMAGE_TAG=\"techxuexi/techxuexi-$4:${USEBRANCHE}\"\nfi\nif [[ $5 ]]; then\n    DOCKER_FILE=$5\nfi\nset -x\ndocker build \\\n    -f ${DOCKER_FILE} \\\n    --build-arg \"usesource=${USESOURCE}\" \\\n    --build-arg \"usebranche=${USEBRANCHE}\" \\\n    --tag \"${IMAGE_TAG}\" \\\n    .\n\ndocker push\n"
        },
        {
          "name": "docker-compose.yaml",
          "type": "blob",
          "size": 0.576171875,
          "content": "version: \"3.6\"\n\nservices:\n    techxuexi:\n        image: techxuexi/techxuexi-amd64\n        container_name: techxuexi\n        restart: unless-stopped\n        volumes:\n            - ./xuexi:/xuexi/user\n        ports:\n            - 9980:80\n        shm_size: 2gb\n        environment:\n            - CRONTIME=5 */6 * * *\n            - Pushmode=6\n            - ZhuanXiang=True\n        # # 自定义拉取版本\n        # - Sourcepath=https://github.com/TechXueXi/TechXueXi.git\n        # - pullbranche=developing\n\n        # --------------------------------\n        # 运行之后打开IP:9980即可\n"
        },
        {
          "name": "docker-manifest.sh",
          "type": "blob",
          "size": 3.19140625,
          "content": "#!/bin/bash\n\n# eg : ./docker-manifest.sh localhost:5000 dev79 youname\n# 1. 拉取镜像         : docker pull docker.io/techxuexi/techxuexi-{}:dev79     % amd64 arm64v8 arm32v7\n# 2. 推送镜像         : docker push localhost:5000/youname/techxuexi-{}:dev79   % amd64 arm64v8 arm32v7\n# 3. 创建manifest    : docker docker manifest create MANIFEST_LIST MANIFEST [MANIFEST...]\n# 4. 附加架构信息     ：docker manifest annotate [OPTIONS] MANIFEST_LIST MANIFEST\n# 5. 推送manifest     ：docker manifest push  localhost:5000/youname/techxuexi:dev79\n# 5. 显示manifest     ：docker manifest inspect localhost:5000/youname/techxuexi:dev79\n\nTAG='latest'\nPULL_REGISTRY_URL='docker.io'\nPULL_COMMUNITY_USER='techxuexi'\nIMAGE_NAME='techxuexi'\nPUSH_REGISTRY_URL='docker.io'\nPUSH_COMMUNITY_USER='techxuexi'\n\nif [[ $1 ]]; then\n  PUSH_REGISTRY_URL=$1\nelse\n  PUSH_REGISTRY_URL=${PULL_REGISTRY_URL}\nfi\n\nif [[ $2 ]]; then\n  TAG=$2\nfi\n\nif [[ $3 ]]; then\n  PUSH_COMMUNITY_USER=$3\nfi\n\nLOG_INFO() {\n  echo -e \"\\033[0;32m[INFO] $* \\033[0m\"\n}\nLOG_ERROR() {\n  echo -e \"\\033[0;31m[ERROR] $* \\033[0m\"\n}\nLOG_WARNING() {\n  echo -e \"\\033[0;33m[WARNING] $* \\033[0m\"\n}\n\n# 输出命令到日志并运行\nLOGGER_RUN() {\n  LOG_INFO \"$*\"\n  bash -c \"$*\"\n}\n\nfor ARCH in amd64 arm64v8 arm32v7; do\n\n  case $ARCH in\n  amd64)\n    PLATFORM=x86_64\n    ;;\n\n  arm64v8)\n    PLATFORM=arm64\n    ;;\n\n  arm32v7)\n    PLATFORM=arm\n    ;;\n  esac\n\n  LOGGER_RUN docker pull --platform ${PLATFORM} ${PULL_REGISTRY_URL}/${PULL_COMMUNITY_USER}/${IMAGE_NAME}-${ARCH}:${TAG}\n  LOGGER_RUN docker tag ${PULL_REGISTRY_URL}/${PULL_COMMUNITY_USER}/${IMAGE_NAME}-${ARCH}:${TAG} ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}-${ARCH}:${TAG}\n  LOGGER_RUN docker push ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}-${ARCH}:${TAG}\n  OUT_TAGS=\"${OUT_TAGS} ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}-${ARCH}:${TAG}\"\ndone\nLOG_INFO # $ docker manifest create MANIFEST_LIST MANIFEST [MANIFEST...]\nLOGGER_RUN docker manifest create ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}:${TAG} ${OUT_TAGS}\nif [ $? -ne 0 ]; then\n  LOGGER_RUN docker manifest create --amend ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}:${TAG} ${OUT_TAGS}\n  echo \"failed, retry\"\nfi\nfor ARCH in amd64 arm64v8 arm32v7; do\n\n  case $ARCH in\n  amd64)\n    PLATFORM=x86_64\n    ;;\n\n  arm64v8)\n    PLATFORM=arm64\n    ;;\n\n  arm32v7)\n    PLATFORM=arm\n    ;;\n  esac\n\n  LOG_INFO # $ docker manifest annotate [OPTIONS] MANIFEST_LIST MANIFEST\n  LOG_INFO docker manifest annotate ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}:${TAG} \\\n    ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}-${ARCH}:${TAG} \\\n    --os linux --arch ${PLATFORM}\ndone\nLOG_INFO # $ docker manifest create MANIFEST_LIST MANIFEST [MANIFEST...]\nLOGGER_RUN docker manifest create ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}:${TAG} ${OUT_TAGS}\nif [ $? -ne 0 ]; then\n  LOGGER_RUN docker manifest create --amend ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}:${TAG} ${OUT_TAGS}\n  echo \"failed, retry\"\nfi\n\nLOGGER_RUN docker manifest push ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}:${TAG}\n\nLOGGER_RUN docker manifest inspect ${PUSH_REGISTRY_URL}/${PUSH_COMMUNITY_USER}/${IMAGE_NAME}:${TAG}\n"
        },
        {
          "name": "google-chrome.repo",
          "type": "blob",
          "size": 0.1689453125,
          "content": "[google-chrome]\nname=google-chrome\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64\nenabled=1\ngpgcheck=1\ngpgkey=https://dl.google.com/linux/linux_signing_key.pub\n"
        },
        {
          "name": "img_folder",
          "type": "tree",
          "content": null
        },
        {
          "name": "post-update",
          "type": "blob",
          "size": 0.349609375,
          "content": "#!/bin/sh\n# v0x09\necho \"==========================\"\necho \"ON PUSH\"\ngit fetch --all\ngit push\ntime=$(date)\necho \"git fetch and push at time: $time.\"\necho \"==========================\"\necho \"now in `pwd`\"\n\ncd .. || exit\nunset GIT_DIR\n\necho \"change to `pwd`\"\ngit reset --hard\necho \"reset local `pwd`\"\necho \"==========================\"\nexec git update-server-info\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.2822265625,
          "content": "requests==2.26.0\nlxml==4.6.5\ncolorama==0.4.1\nbeautifulsoup4==4.9.3\nselenium==3.141.0\npyhocon==0.3.58\npyzbar==0.1.8\nPillow>=9.0.1\npyTelegramBotAPI==4.0.1\ngunicorn==20.1.0\nPySocks==1.7.1\nurllib3==1.26.7\nitsdangerous==2.0.1\nFlask==2.1.3\nFlask_SQLAlchemy==2.5.1\nFlask_Cors==3.0.9\nqrcode==7.3.1"
        },
        {
          "name": "run.sh",
          "type": "blob",
          "size": 0.0771484375,
          "content": "#!/bin/bash\n\necho \"开始运行\"\n/usr/local/bin/python /xuexi/pandalearning.py\n"
        },
        {
          "name": "start.sh",
          "type": "blob",
          "size": 2.95703125,
          "content": "#!/bin/bash\n\nupdate() {\n\n    echo \"检查更新\"\n    git -C /xuexi/code/TechXueXi pull $Sourcepath $pullbranche\n    echo \"检查更新完毕\"\n    cp /xuexi/code/TechXueXi/*.sh /xuexi\n    cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi\n    echo \"下载更新\"\n    git -C /xuexi/code/TechXueXi pull $Sourcepath $pullbranche\n    echo \"下载完毕\"\n    cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi\n    echo \"更新完成\"\n}\n\nif [[ ${pullbranche} == \"developing\" ]]; then\n    echo \"当前处于开发模式，自动更新\"\n    update\nfi\n#echo \"检查更新\"\n#git -C /xuexi/code/TechXueXi pull $Sourcepath $pullbranche\n#echo \"检查更新完毕\"\n#cp -r /xuexi/code/TechXueXi/SourcePackages/* /xuexi\n\n\n#if ! git -C /xuexi/code/TechXueXi config pull.ff only; then\n#    rm -rf /xuexi/code/TechXueXi\n#    cd /xuexi/code/ && git clone -b ${pullbranche} ${Sourcepath}\n#fi\nprintenv >>/etc/environment\ntouch /var/log/cron.log\n\n#TODO : 日志时间后缀，记得将 supervisor.sh 一起改了\nLOG_SUFFIX=$(date +\"%Y-%m-%d--%H-%M-%S\")\n\nif [ \"${Pushmode}\" = \"2\" ]; then\n    echo \"当前模式为 Wechat 模式，即将启动守护 --  xuexiwechat\"\n    : > /xuexi/user/wechat_listener.log\n    sleep 1\n    ./supervisor.sh 2>&1 & #修复Error:could not find config file /xuexi/user/supervisord.conf的问题\n    supervisord -c /xuexi/user/supervisord.conf\n    sleep 1\n    supervisorctl start xuexiwechat\n    if [ $? -ne 0 ]; then\n        echo \"守护进程启动失败，切换备用方式\"\n        nohup /usr/local/bin/python /xuexi/wechatListener.py >> /xuexi/user/wechat_listener.log 2>&1 &\n    fi\n    tail -f /xuexi/user/wechat_listener.log &\nfi\n\n\nif [ \"${Pushmode}\" = \"5\" ]; then\n    echo \"当前模式为 Telegram 模式，即将启动守护 --  xuexitg\"\n    : > /xuexi/user/tg_listener.log\n    sleep 1\n    ./supervisor.sh 2>&1 & #修复Error:could not find config file /xuexi/user/supervisord.conf的问题\n    supervisord -c /xuexi/user/supervisord.conf\n    if [ $? -ne 0 ]; then\n        echo \"守护进程启动失败，切换备用方式\"\n        nohup /usr/local/bin/python /xuexi/telegramListener.py >> /xuexi/user/tg_listener.log 2>&1 &\n    fi\n    sleep 1\n    supervisorctl start xuexitg\n    tail -f /xuexi/user/tg_listener.log &\nfi\n\n\nif [ \"${Pushmode}\" = \"6\" ]; then\n    echo \"当前模式为 WEB网页控制台 模式，即将启动守护 --  xuexiweb\"\n    : > /xuexi/user/web_listener.log\n    sleep 1\n    ./supervisor.sh 2>&1 & #修复Error:could not find config file /xuexi/user/supervisord.conf的问题\n    supervisord -c /xuexi/user/supervisord.conf\n    sleep 1\n    supervisorctl start xuexiweb\n    if [ $? -ne 0 ]; then\n        echo \"守护进程启动失败，切换备用方式\"\n        nohup /usr/local/bin/python /xuexi/webserverListener.py >> /xuexi/user/web_listener.log 2>&1 &\n    fi\n    tail -f /xuexi/user/web_listener.log &\nfi\n\n./run.sh 2>&1 &\necho -e \"$CRONTIME $USER /xuexi/run.sh >> /var/log/cron.log 2>&1\\n#empty line\" >/etc/cron.d/mycron\ncrontab /etc/cron.d/mycron\ncron && tail -f /var/log/cron.log\n"
        },
        {
          "name": "supervisor.sh",
          "type": "blob",
          "size": 1.265625,
          "content": "#!/bin/sh\n# apt-get install supervisor\n\necho_supervisord_conf > /etc/supervisord.conf\n\nsed -i -e 's/^file=\\/tmp/file=\\/var\\/run/' \\\n    -e 's/^logfile=\\/tmp/logfile=\\/var\\/log/' \\\n    -e 's/^pidfile=\\/tmp/pidfile=\\/var\\/run/' \\\n    -e 's/^serverurl=unix:\\/\\/\\/tmp/serverurl=unix:\\/\\/\\/var\\/run/' \\\n    /etc/supervisord.conf\n\n\n\ncat >> /etc/supervisord.conf <<EOF\n\n[program:xuexiwechat]\ndirectory=/xuexi\nuser=root\ncommand=/usr/local/bin/python wechatListener.py \nautostart=false\nautorestart=true\nstdout_logfile=/xuexi/user/wechat_listener.log\nstderr_logfile=/xuexi/user/wechat_listener.log\n\nEOF\n\ncat >> /etc/supervisord.conf <<EOF\n\n[program:xuexitg]\ndirectory=/xuexi\nuser=root\ncommand=/usr/local/bin/python telegramListener.py\nautostart=false\nautorestart=true\nstdout_logfile=/xuexi/user/tg_listener.log\nstderr_logfile=/xuexi/user/tg_listener.log\n\nEOF\n\ncat >> /etc/supervisord.conf <<EOF\n\n[program:xuexiweb]\ndirectory=/xuexi\nuser=root\ncommand=/usr/local/bin/python webserverListener.py \nautostart=false\nautorestart=true\nstdout_logfile=/xuexi/user/web_listener.log\nstderr_logfile=/xuexi/user/web_listener.log\n\nEOF\n\nmkdir -p /xuexi/user\ncp -r /etc/supervisord.conf /xuexi/user/\n#systemctl enable supervisord\n#supervisorctl stop all\n#supervisord -c /xuexi/user/supervisord.conf\n#supervisorctl start all"
        },
        {
          "name": "windows系统git_pull_一键更新.bat",
          "type": "blob",
          "size": 2.3515625,
          "content": "@echo off\r\ngoto start\r\n\r\n\r\n:color_red\r\necho \u001b[31m[*] %1\u001b[0m\r\nexit /b 0\r\n\r\n:color_green\r\necho \u001b[32m[*] %1\u001b[0m\r\nexit /b 0\r\n\r\n:color_yellow\r\necho \u001b[33m[*] %1\u001b[0m\r\nexit /b 0\r\n\r\n:color_blue\r\necho \u001b[34m[*] %1\u001b[0m\r\nexit /b 0\r\n\r\n:replace_dir\r\ncall :color_yellow 重要信息：\r\necho 此目录已作废，请转到 TechXuexi-master-clone 目录\r\necho 已自动为您复制 user 文件夹和 chrome 文件夹，此为用户数据，\r\necho 为保证无误您可再确认一下目录内是否已经有这两个文件夹\r\necho 您可将 TechXuexi-master-clone 里的所有内容（含.git文件夹）替换此文件夹的所有内容\r\nexit /b 0\r\n\r\n\r\n:start\r\nset repo_url1=https://hub.fastgit.xyz/TechXueXi/TechXueXi.git\r\nset repo_url2=https://hub.fastgit.org/TechXueXi/TechXueXi.git\r\nset push_url=git@github.com:TechXueXi/TechXueXi.git\r\n\r\nif exist \"_unavailable_dir\" (\r\n\tcall :replace_dir\r\n\tgoto end\r\n)\r\n\r\n:enter_file_path\r\nset file_path=%~dp0\r\n%file_path:~0,1%:\r\ncd \"%file_path%\"\r\n\r\n:test_have_git\r\ncall :color_green 检查此电脑有无安装git\r\ngit --version\r\nif %ERRORLEVEL% equ 0 (\r\n    goto have_git\r\n) else (\r\n    goto not_have_git\r\n)\r\n\r\n:have_git\r\n:test_is_git_repo\r\ncall :color_green 检查此文件夹是否是git库\r\ngit remote -v\r\nif %ERRORLEVEL% equ 0 (\r\n    goto is_a_repo\r\n) else (\r\n    goto git_init\r\n)\r\n\r\n:is_a_repo\r\ncall :color_green 现在检查remote地址设置\r\ngit remote -v >nul 2>nul\r\ngit config remote.origin.url %repo_url1%\r\ngit config remote.origin.pushurl %push_url%\r\ngit remote -v\r\ncall :color_green 拉取远程代码（如在此卡住10秒以上可关闭重新打开）\r\ngit fetch\r\ncall :color_green 暂存修改\r\ngit stash save \"pull_auto_stash\"\r\ncall :color_green 更新...（如在此卡住10秒以上可关闭重新打开）\r\ngit pull --rebase\r\ncall :color_green 恢复修改\r\ngit stash pop\r\ngit checkout windows系统git_pull_一键更新.bat\r\ncall :color_green 完成\r\ngoto end\r\n\r\n\r\n:git_init\r\ncall :color_green 下载最新代码到TechXuexi-master-clone文件夹\r\ngit clone -b master %repo_url1% TechXuexi-master-clone\r\nif %ERRORLEVEL% equ 0 (\r\n\tcall :color_green 复制用户数据文件...\r\n\txcopy /E /V /K /I /Y /Q SourcePackages\\user TechXuexi-master-clone\\SourcePackages\\user\r\n\txcopy /E /V /K /I /Y /Q SourcePackages\\chrome TechXuexi-master-clone\\SourcePackages\\chrome\r\n\techo. >_unavailable_dir\r\n\tcall :color_green 完成.\r\n\tcall :replace_dir\r\n\tgoto end\r\n) else (\r\n\tcall :color_red 出现错误！请反馈此问题：git_clone_出错\r\n\tgoto end\r\n)\r\n\r\n:not_have_git\r\ncall :color_yellow 找不到git，请自行搜索安装git后再打开运行。\r\ngoto end\r\n\r\n\r\n\r\n\r\n:end\r\nset/p=按回车键退出程序...\r\n\r\n"
        },
        {
          "name": "使用方法-更新方法-下载方式.md",
          "type": "blob",
          "size": 0.05859375,
          "content": "文档移动到 https://github.com/TechXueXi/TechXueXi/wiki\n"
        }
      ]
    }
  ]
}