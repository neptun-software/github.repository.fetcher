{
  "metadata": {
    "timestamp": 1736561039941,
    "page": 814,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "myshell-ai/MeloTTS",
      "stars": 5159,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1474609375,
          "content": "__pycache__/\n.ipynb_checkpoints/\nbasetts_outputs_use_bert/\nbasetts_outputs/\nmultilingual_ckpts\nbasetts_outputs_package/\nbuild/\n*.egg-info/\n\n*.zip\n*.wav"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.30859375,
          "content": "FROM python:3.9-slim\nWORKDIR /app\nCOPY . /app\n\nRUN apt-get update && apt-get install -y \\\n    build-essential libsndfile1 \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip install -e .\nRUN python -m unidic download\nRUN python melo/init_downloads.py\n\nCMD [\"python\", \"./melo/app.py\", \"--host\", \"0.0.0.0\", \"--port\", \"8888\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0283203125,
          "content": "Copyright (c) 2024 MyShell.ai\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.41015625,
          "content": "<div align=\"center\">\n  <div>&nbsp;</div>\n  <img src=\"logo.png\" width=\"300\"/> <br>\n  <a href=\"https://trendshift.io/repositories/8133\" target=\"_blank\"><img src=\"https://trendshift.io/api/badge/repositories/8133\" alt=\"myshell-ai%2FMeloTTS | Trendshift\" style=\"width: 250px; height: 55px;\" width=\"250\" height=\"55\"/></a>\n</div>\n\n## Introduction\nMeloTTS is a **high-quality multi-lingual** text-to-speech library by [MIT](https://www.mit.edu/) and [MyShell.ai](https://myshell.ai). Supported languages include:\n\n| Language | Example |\n| --- | --- |\n| English (American)    | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/en/EN-US/speed_1.0/sent_000.wav) |\n| English (British)     | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/en/EN-BR/speed_1.0/sent_000.wav) |\n| English (Indian)      | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/en/EN_INDIA/speed_1.0/sent_000.wav) |\n| English (Australian)  | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/en/EN-AU/speed_1.0/sent_000.wav) |\n| English (Default)     | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/en/EN-Default/speed_1.0/sent_000.wav) |\n| Spanish               | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/es/ES/speed_1.0/sent_000.wav) |\n| French                | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/fr/FR/speed_1.0/sent_000.wav) |\n| Chinese (mix EN)      | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/zh/ZH/speed_1.0/sent_008.wav) |\n| Japanese              | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/jp/JP/speed_1.0/sent_000.wav) |\n| Korean                | [Link](https://myshell-public-repo-host.s3.amazonaws.com/myshellttsbase/examples/kr/KR/speed_1.0/sent_000.wav) |\n\nSome other features include:\n- The Chinese speaker supports `mixed Chinese and English`.\n- Fast enough for `CPU real-time inference`.\n\n## Usage\n- [Use without Installation](docs/quick_use.md)\n- [Install and Use Locally](docs/install.md)\n- [Training on Custom Dataset](docs/training.md)\n\nThe Python API and model cards can be found in [this repo](https://github.com/myshell-ai/MeloTTS/blob/main/docs/install.md#python-api) or on [HuggingFace](https://huggingface.co/myshell-ai).\n\n**Contributing**\n\nIf you find this work useful, please consider contributing to this repo.\n\n- Many thanks to [@fakerybakery](https://github.com/fakerybakery) for adding the Web UI and CLI part.\n\n## Authors\n\n- [Wenliang Zhao](https://wl-zhao.github.io) at Tsinghua University\n- [Xumin Yu](https://yuxumin.github.io) at Tsinghua University\n- [Zengyi Qin](https://www.qinzy.tech) (project lead) at MIT and MyShell\n\n**Citation**\n```\n@software{zhao2024melo,\n  author={Zhao, Wenliang and Yu, Xumin and Qin, Zengyi},\n  title = {MeloTTS: High-quality Multi-lingual Multi-accent Text-to-Speech},\n  url = {https://github.com/myshell-ai/MeloTTS},\n  year = {2023}\n}\n```\n\n## License\n\nThis library is under MIT License, which means it is free for both commercial and non-commercial use.\n\n## Acknowledgements\n\nThis implementation is based on [TTS](https://github.com/coqui-ai/TTS), [VITS](https://github.com/jaywalnut310/vits), [VITS2](https://github.com/daniilrobnikov/vits2) and [Bert-VITS2](https://github.com/fishaudio/Bert-VITS2). We appreciate their awesome work.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 181.7998046875,
          "content": null
        },
        {
          "name": "melo",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.4140625,
          "content": "txtsplit\ntorch\ntorchaudio\ncached_path\ntransformers==4.27.4\nnum2words==0.5.12\nunidic_lite==1.0.8\nunidic==1.1.0\nmecab-python3==1.0.9\npykakasi==2.2.1\nfugashi==1.3.0\ng2p_en==2.1.0\nanyascii==0.3.2\njamo==0.4.1\ngruut[de,es,fr]==2.2.3\ng2pkk>=0.1.1\nlibrosa==0.9.1\npydub==0.25.1\neng_to_ipa==0.0.2\ninflect==7.0.0\nunidecode==1.3.7\npypinyin==0.50.0\ncn2an==0.5.22\njieba==0.42.1\ngradio\nlangid==1.1.6\ntqdm\ntensorboard==2.16.2\nloguru==0.7.2\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.986328125,
          "content": "import os \nfrom setuptools import setup, find_packages\nfrom setuptools.command.develop import develop\nfrom setuptools.command.install import install\n\n\ncwd = os.path.dirname(os.path.abspath(__file__))\n\nwith open('requirements.txt') as f:\n    reqs = f.read().splitlines()\nclass PostInstallCommand(install):\n    \"\"\"Post-installation for installation mode.\"\"\"\n    def run(self):\n        install.run(self)\n        os.system('python -m unidic download')\n\n\nclass PostDevelopCommand(develop):\n    \"\"\"Post-installation for development mode.\"\"\"\n    def run(self):\n        develop.run(self)\n        os.system('python -m unidic download')\n\nsetup(\n    name='melotts',\n    version='0.1.2',\n    packages=find_packages(),\n    include_package_data=True,\n    install_requires=reqs,\n    package_data={\n        '': ['*.txt', 'cmudict_*'],\n    },\n    entry_points={\n        \"console_scripts\": [\n            \"melotts = melo.main:main\",\n            \"melo = melo.main:main\",\n            \"melo-ui = melo.app:main\",\n        ],\n    },\n)\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}