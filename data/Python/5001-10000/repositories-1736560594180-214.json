{
  "metadata": {
    "timestamp": 1736560594180,
    "page": 214,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "platformio/platformio-core",
      "stars": 8061,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1064453125,
          "content": "*.egg-info\n*.pyc\n__pycache__\n.tox\ndocs/_build\ndist\nbuild\n.cache\ncoverage.xml\n.coverage\nhtmlcov\n.pytest_cache\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.203125,
          "content": "[submodule \"examples\"]\n\tpath = examples\n\turl = https://github.com/platformio/platformio-examples.git\n[submodule \"docs\"]\n\tpath = docs\n\turl = https://github.com/platformio/platformio-docs.git\n\tbranch = develop\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 0.2158203125,
          "content": "[REPORTS]\noutput-format=colorized\n\n[MESSAGES CONTROL]\ndisable=\n    missing-docstring,\n    duplicate-code,\n    invalid-name,\n    too-few-public-methods,\n    consider-using-f-string,\n    cyclic-import,\n    use-dict-literal\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.068359375,
          "content": "# Code of Conduct\n\nSee https://piolabs.com/legal/code-of-conduct.html\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.9921875,
          "content": "Contributing\n------------\n\nTo get started, <a href=\"https://cla-assistant.io/platformio/platformio-core\">sign the Contributor License Agreement</a>.\n\n1. Fork the repository on GitHub\n2. Clone repository `git clone --recursive https://github.com/YourGithubUsername/platformio-core.git`\n3. Run `pip install tox`\n4. Go to the root of the PlatformIO Core project where `tox.ini` is located (``cd platformio-core``) and run `tox -e py39`.\n   You can replace `py39` with your own Python version. For example, `py311` means Python 3.11.\n5. Activate current development environment:\n\n   * Windows: `.tox\\py39\\Scripts\\activate`\n   * Bash/ZSH: `source .tox/py39/bin/activate`\n   * Fish: `source .tox/py39/bin/activate.fish`\n\n6. Make changes to code, documentation, etc.\n7. Lint source code `make before-commit`\n8. Run the tests `make test`\n9. Build documentation `tox -e docs` (creates a directory _build under docs where you can find the html)\n10. Commit changes to your forked repository\n11. Submit a Pull Request on GitHub\n"
        },
        {
          "name": "HISTORY.rst",
          "type": "blob",
          "size": 41.6015625,
          "content": "Release Notes\n=============\n\n.. |PIOCONF| replace:: `\"platformio.ini\" <https://docs.platformio.org/en/latest/projectconf.html>`__ configuration file\n.. |LIBRARYJSON| replace:: `library.json <https://docs.platformio.org/en/latest/manifests/library-json/index.html>`__\n.. |LDF| replace:: `LDF <https://docs.platformio.org/en/latest/librarymanager/ldf.html>`__\n.. |INTERPOLATION| replace:: `Interpolation of Values <https://docs.platformio.org/en/latest/projectconf/interpolation.html>`__\n.. |UNITTESTING| replace:: `Unit Testing <https://docs.platformio.org/en/latest/advanced/unit-testing/index.html>`__\n.. |DEBUGGING| replace:: `Debugging <https://docs.platformio.org/en/latest/plus/debugging.html>`__\n.. |STATICCODEANALYSIS| replace:: `Static Code Analysis <https://docs.platformio.org/en/latest/advanced/static-code-analysis/index.html>`__\n\n.. _release_notes_6:\n\nPlatformIO Core 6\n-----------------\n\nUnlock the true potential of embedded software development with\nPlatformIO's collaborative ecosystem, embracing declarative principles,\ntest-driven methodologies, and modern toolchains for unrivaled success.\n\n6.1.17 (2024-??-??)\n~~~~~~~~~~~~~~~~~~~\n\n* Added support for ``tar.xz`` tarball dependencies (`pull #4974 <https://github.com/platformio/platformio-core/pull/4974>`_)\n* Ensured that dependencies of private libraries are no longer unnecessarily re-installed, optimizing dependency management and reducing redundant operations (`issue #4987 <https://github.com/platformio/platformio-core/issues/4987>`_)\n* Resolved an issue where the ``compiledb`` target failed to properly escape compiler executable paths containing spaces (`issue #4998 <https://github.com/platformio/platformio-core/issues/4998>`_)\n* Resolved an issue with incorrect path resolution when linking static libraries via the `build_flags <https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_flags.html>`__ option (`issue #5004 <https://github.com/platformio/platformio-core/issues/5004>`_)\n* Resolved an issue where the ``--project-dir`` flag did not function correctly with the `pio check <https://docs.platformio.org/en/latest/core/userguide/cmd_check.html>`__ and `pio debug <https://docs.platformio.org/en/latest/core/userguide/cmd_debug.html>`__ commands (`issue #5029 <https://github.com/platformio/platformio-core/issues/5029>`_)\n* Resolved an issue where the |LDF| occasionally excluded bundled platform libraries from the dependency graph (`pull #4941 <https://github.com/platformio/platformio-core/pull/4941>`_)\n\n6.1.16 (2024-09-26)\n~~~~~~~~~~~~~~~~~~~\n\n* Added support for Python 3.13\n* Introduced the `PLATFORMIO_SYSTEM_TYPE <https://docs.platformio.org/en/latest/envvars.html#envvar-PLATFORMIO_SYSTEM_TYPE>`__ environment variable, enabling manual override of the detected system type for greater flexibility and control in custom build environments\n* Enhanced internet connection checks by falling back to HTTPS protocol when HTTP (port 80) fails (`issue #4980 <https://github.com/platformio/platformio-core/issues/4980>`_)\n* Upgraded the build engine to the latest version of SCons (4.8.1) to improve build performance, reliability, and compatibility with other tools and systems (`release notes <https://github.com/SCons/scons/releases/tag/4.8.1>`__)\n* Upgraded the `Doctest <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/doctest.html>`__ testing framework to version 2.4.11, the `GoogleTest <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/doctest.html>`__ to version 1.15.2, and the `Unity <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/unity.html>`__ to version 2.6.0, incorporating the latest features and improvements for enhanced testing capabilities\n* Corrected an issue where the incorrect public class was imported for the ``DoctestTestRunner`` (`issue #4949 <https://github.com/platformio/platformio-core/issues/4949>`_)\n\n6.1.15 (2024-04-25)\n~~~~~~~~~~~~~~~~~~~\n\n* Resolved an issue where the |LDF| couldn't locate a library dependency declared via version control system repository (`issue #4885 <https://github.com/platformio/platformio-core/issues/4885>`_)\n* Resolved an issue related to the inaccurate detection of the Clang compiler (`pull #4897 <https://github.com/platformio/platformio-core/pull/4897>`_)\n\n6.1.14 (2024-03-21)\n~~~~~~~~~~~~~~~~~~~\n\n* Introduced the ``--json-output`` option to the `pio test <https://docs.platformio.org/en/latest/core/userguide/cmd_test.html>`__ command, enabling users to generate test results in the JSON format\n* Upgraded the build engine to the latest version of SCons (4.7.0) to improve build performance, reliability, and compatibility with other tools and systems (`release notes <https://github.com/SCons/scons/releases/tag/4.7.0>`__)\n* Broadened version support for the ``pyelftools`` dependency, enabling compatibility with lower versions and facilitating integration with a wider range of third-party tools (`issue #4834 <https://github.com/platformio/platformio-core/issues/4834>`_)\n* Addressed an issue where passing a relative path (``--project-dir``) to the `pio project init <https://docs.platformio.org/en/latest/core/userguide/project/cmd_init.html>`__ command resulted in an error (`issue #4847 <https://github.com/platformio/platformio-core/issues/4847>`_)\n* Enhanced |STATICCODEANALYSIS| to accommodate scenarios where custom ``src_dir`` or ``include_dir`` are located outside the project folder (`pull #4874 <https://github.com/platformio/platformio-core/pull/4874>`_)\n* Corrected the validation of ``symlink://`` `package specifications <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_install.html#local-folder>`__ , resolving an issue that caused the package manager to repeatedly reinstall dependencies (`pull #4870 <https://github.com/platformio/platformio-core/pull/4870>`_)\n* Resolved an issue related to the relative package path in the `pio pkg publish <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_publish.html>`__ command\n* Resolved an issue where the |LDF| selected an incorrect library version (`issue #4860 <https://github.com/platformio/platformio-core/issues/4860>`_)\n* Resolved an issue with the ``hexlify`` filter in the `device monitor <https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html>`__ command, ensuring proper representation of characters with Unicode code points higher than 127 (`issue #4732 <https://github.com/platformio/platformio-core/issues/4732>`_)\n\n6.1.13 (2024-01-12)\n~~~~~~~~~~~~~~~~~~~\n\n* Expanded support for SCons variables declared in the legacy format ``${SCONS_VARNAME}`` (`issue #4828 <https://github.com/platformio/platformio-core/issues/4828>`_)\n\n6.1.12 (2024-01-10)\n~~~~~~~~~~~~~~~~~~~\n\n* Added support for Python 3.12\n* Introduced the capability to launch the debug server in a separate process (`issue #4722 <https://github.com/platformio/platformio-core/issues/4722>`_)\n* Introduced a warning during the verification of MCU maximum RAM usage, signaling when the allocated RAM surpasses 100% (`issue #4791 <https://github.com/platformio/platformio-core/issues/4791>`_)\n* Drastically enhanced the speed of project building when operating in verbose mode (`issue #4783 <https://github.com/platformio/platformio-core/issues/4783>`_)\n* Upgraded the build engine to the latest version of SCons (4.6.0) to improve build performance, reliability, and compatibility with other tools and systems (`release notes <https://github.com/SCons/scons/releases/tag/4.6.0>`__)\n* Enhanced the handling of built-in variables in |PIOCONF| during |INTERPOLATION| (`issue #4695 <https://github.com/platformio/platformio-core/issues/4695>`_)\n* Enhanced PIP dependency declarations for improved reliability and extended support to include Python 3.6 (`issue #4819 <https://github.com/platformio/platformio-core/issues/4819>`_)\n* Implemented automatic installation of missing dependencies when utilizing a SOCKS proxy (`issue #4822 <https://github.com/platformio/platformio-core/issues/4822>`_)\n* Implemented a fail-safe mechanism to terminate a debugging session if an unknown CLI option is passed (`issue #4699 <https://github.com/platformio/platformio-core/issues/4699>`_)\n* Rectified an issue where ``${platformio.name}`` erroneously represented ``None`` as the default `project name <https://docs.platformio.org/en/latest/projectconf/sections/platformio/options/generic/name.html>`__ (`issue #4717 <https://github.com/platformio/platformio-core/issues/4717>`_)\n* Resolved an issue where the ``COMPILATIONDB_INCLUDE_TOOLCHAIN`` setting was not correctly applying to private libraries (`issue #4762 <https://github.com/platformio/platformio-core/issues/4762>`_)\n* Resolved an issue where ``get_systype()`` inaccurately returned the architecture when executed within a Docker container on a 64-bit kernel with a 32-bit userspace (`issue #4777 <https://github.com/platformio/platformio-core/issues/4777>`_)\n* Resolved an issue with incorrect handling of the ``check_src_filters`` option when used in multiple environments (`issue #4788 <https://github.com/platformio/platformio-core/issues/4788>`_)\n* Resolved an issue where running `pio project metadata <https://docs.platformio.org/en/latest/core/userguide/project/cmd_metadata.html>`__ resulted in duplicated \"include\" entries (`issue #4723 <https://github.com/platformio/platformio-core/issues/4723>`_)\n* Resolved an issue where native debugging failed on the host machine (`issue #4745 <https://github.com/platformio/platformio-core/issues/4745>`_)\n* Resolved an issue where custom debug configurations were being inadvertently overwritten in VSCode's ``launch.json`` (`issue #4810 <https://github.com/platformio/platformio-core/issues/4810>`_)\n\n6.1.11 (2023-08-31)\n~~~~~~~~~~~~~~~~~~~\n\n* Resolved a possible issue that may cause generated projects for `PlatformIO IDE for VSCode <https://docs.platformio.org/en/latest/integration/ide/vscode.html>`__ to fail to launch a debug session because of a missing \"objdump\" binary when GDB is not part of the toolchain package\n* Resolved a regression issue that resulted in the malfunction of the Memory Inspection feature within `PIO Home <https://docs.platformio.org/en/latest/home/index.html>`__\n\n6.1.10 (2023-08-11)\n~~~~~~~~~~~~~~~~~~~\n\n* Resolved an issue that caused generated projects for `PlatformIO IDE for VSCode <https://docs.platformio.org/en/latest/integration/ide/vscode.html>`__ to break when the ``-iprefix`` compiler flag was used\n* Resolved an issue encountered while utilizing the `pio pkg exec <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_exec.html>`__ command on the Windows platform to execute Python scripts from a package\n* Implemented a crucial improvement to the `pio run <https://docs.platformio.org/en/latest/core/userguide/cmd_run.html>`__ command, guaranteeing that the ``monitor`` target is not executed if any of the preceding targets, such as ``upload``, encounter failures\n* `Cppcheck <https://docs.platformio.org/en/latest/plus/check-tools/cppcheck.html>`__ v2.11 with new checks, CLI commands and various analysis improvements\n* Resolved a critical issue that arose on macOS ARM platforms due to the Python \"requests\" module, leading to a \"ModuleNotFoundError: No module named 'chardet'\" (`issue #4702 <https://github.com/platformio/platformio-core/issues/4702>`_)\n\n6.1.9 (2023-07-06)\n~~~~~~~~~~~~~~~~~~\n\n* Rectified a regression bug that occurred when the ``-include`` flag was passed via the `build_flags <https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_flags.html>`__ option as a relative path and subsequently expanded (`issue #4683 <https://github.com/platformio/platformio-core/issues/4683>`_)\n* Resolved an issue that resulted in unresolved absolute toolchain paths when generating the `Compilation database \"compile_commands.json\" <https://docs.platformio.org/en/latest/integration/compile_commands.html>`__ (`issue #4684 <https://github.com/platformio/platformio-core/issues/4684>`_)\n\n6.1.8 (2023-07-05)\n~~~~~~~~~~~~~~~~~~\n\n* Added a new ``--lint`` option to the `pio project config <https://docs.platformio.org/en/latest/core/userguide/project/cmd_config.html>`__ command, enabling users to efficiently perform linting on the |PIOCONF|\n* Enhanced the parsing of the |PIOCONF| to provide comprehensive diagnostic information\n* Expanded the functionality of the |LIBRARYJSON| manifest by allowing the use of the underscore symbol in the `keywords <https://docs.platformio.org/en/latest/manifests/library-json/fields/keywords.html>`__ field\n* Optimized project integration templates to address the issue of long paths on Windows (`issue #4652 <https://github.com/platformio/platformio-core/issues/4652>`_)\n* Refactored |UNITTESTING| engine to resolve compiler warnings with \"-Wpedantic\" option (`pull #4671 <https://github.com/platformio/platformio-core/pull/4671>`_)\n* Eliminated erroneous warning regarding the use of obsolete PlatformIO Core when downgrading to the stable version (`issue #4664 <https://github.com/platformio/platformio-core/issues/4664>`_)\n* Updated the `pio project metadata <https://docs.platformio.org/en/latest/core/userguide/project/cmd_metadata.html>`__ command to return C/C++ flags as parsed Unix shell arguments when dumping project build metadata\n* Resolved a critical issue related to the usage of the ``-include`` flag within the `build_flags <https://docs.platformio.org/en/latest/projectconf/sections/env/options/build/build_flags.html>`__ option, specifically when employing dynamic variables (`issue #4682 <https://github.com/platformio/platformio-core/issues/4682>`_)\n* Removed PlatformIO IDE for Atom from the documentation as `Atom has been deprecated <https://github.blog/2022-06-08-sunsetting-atom/>`__\n\n6.1.7 (2023-05-08)\n~~~~~~~~~~~~~~~~~~\n\n* Introduced a new ``--sample-code`` option to the `pio project init <https://docs.platformio.org/en/latest/core/userguide/project/cmd_init.html>`__ command, which allows users to include sample code in the newly created project\n* Added validation for `project working environment names <https://docs.platformio.org/en/latest/projectconf/sections/env/index.html#working-env-name>`__ to ensure that they only contain lowercase letters ``a-z``, numbers ``0-9``, and special characters ``_`` (underscore) and ``-`` (hyphen)\n* Added the ability to show a detailed library dependency tree only in `verbose mode <https://docs.platformio.org/en/latest/core/userguide/cmd_run.html#cmdoption-pio-run-v>`__, which can help you understand the relationship between libraries and troubleshoot issues more effectively (`issue #4517 <https://github.com/platformio/platformio-core/issues/4517>`_)\n* Added the ability to run only the `device monitor <https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html>`__ when using the `pio run -t monitor <https://docs.platformio.org/en/latest/core/userguide/cmd_run.html>`__ command, saving you time and resources by skipping the build process\n* Implemented a new feature to store device monitor logs in the project's ``logs`` folder, making it easier to access and review device monitor logs for your projects (`issue #4596 <https://github.com/platformio/platformio-core/issues/4596>`_)\n* Improved support for projects located on Windows network drives, including Network Shared Folder, Dropbox, OneDrive, Google Drive, and other similar services (`issue #3417 <https://github.com/platformio/platformio-core/issues/3417>`_)\n* Improved source file filtering functionality for the `Static Code Analysis <https://docs.platformio.org/en/latest/advanced/static-code-analysis/index.html>`__ feature, making it easier to analyze only the code you need to\n* Upgraded the build engine to the latest version of SCons (4.5.2) to improve build performance, reliability, and compatibility with other tools and systems (`release notes <https://github.com/SCons/scons/releases/tag/4.5.2>`__)\n* Implemented a fix for shell injection vulnerabilities when converting INO files to CPP, ensuring your code is safe and secure (`issue #4532 <https://github.com/platformio/platformio-core/issues/4532>`_)\n* Restored the project generator for the `NetBeans IDE <https://docs.platformio.org/en/latest/integration/ide/netbeans.html>`__, providing you with more flexibility and options for your development workflow\n* Resolved installation issues with PIO Remote on Raspberry Pi and other small form-factor PCs (`issue #4425 <https://github.com/platformio/platformio-core/issues/4425>`_, `issue #4493 <https://github.com/platformio/platformio-core/issues/4493>`_, `issue #4607 <https://github.com/platformio/platformio-core/issues/4607>`_)\n* Resolved an issue where the `build_cache_dir <https://docs.platformio.org/en/latest/projectconf/sections/platformio/options/directory/build_cache_dir.html>`__ setting was not being recognized consistently across multiple environments (`issue #4574 <https://github.com/platformio/platformio-core/issues/4574>`_)\n* Resolved an issue where organization details could not be updated using the `pio org update <https://docs.platformio.org/en/latest/core/userguide/org/cmd_update.html>`__ command\n* Resolved an issue where the incorrect debugging environment was generated for VSCode in \"Auto\" mode (`issue #4597 <https://github.com/platformio/platformio-core/issues/4597>`_)\n* Resolved an issue where native tests would fail if a custom program name was specified (`issue #4546 <https://github.com/platformio/platformio-core/issues/4546>`_)\n* Resolved an issue where the PlatformIO |DEBUGGING| solution was not escaping the tool installation process into MI2 correctly (`issue #4565 <https://github.com/platformio/platformio-core/issues/4565>`_)\n* Resolved an issue where multiple targets were not executed sequentially (`issue #4604 <https://github.com/platformio/platformio-core/issues/4604>`_)\n* Resolved an issue where upgrading PlatformIO Core fails on Windows with Python 3.11 (`issue #4540 <https://github.com/platformio/platformio-core/issues/4540>`_)\n\n6.1.6 (2023-01-23)\n~~~~~~~~~~~~~~~~~~\n\n* Added support for Python 3.11\n* Added a new `name <https://docs.platformio.org/en/latest/projectconf/sections/platformio/options/generic/description.html>`__ configuration option to customize a project name (`pull #4498 <https://github.com/platformio/platformio-core/pull/4498>`_)\n* Made assets (templates, ``99-platformio-udev.rules``) part of Python's module (`issue #4458 <https://github.com/platformio/platformio-core/issues/4458>`_)\n* Updated `Clang-Tidy <https://docs.platformio.org/en/latest/plus/check-tools/clang-tidy.html>`__ check tool to v15.0.5 with new diagnostics and bugfixes\n* Removed dependency on the \"zeroconf\" package and install it only when a user lists mDNS devices (issue with zeroconf's LGPL license)\n* Show the real error message instead of \"Can not remove temporary directory\" when |PIOCONF| is broken (`issue #4480 <https://github.com/platformio/platformio-core/issues/4480>`_)\n* Fixed an issue with an incorrect test summary when a testcase name includes a colon (`issue #4508 <https://github.com/platformio/platformio-core/issues/4508>`_)\n* Fixed an issue when `extends <https://docs.platformio.org/en/latest/projectconf/sections/env/options/advanced/extends.html>`__ did not override options in the right order (`issue #4462 <https://github.com/platformio/platformio-core/issues/4462>`_)\n* Fixed an issue when `pio pkg list <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_list.html>`__ and `pio pkg uninstall <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_uninstall.html>`__ commands fail if there are circular dependencies in the |LIBRARYJSON| manifests (`issue #4475 <https://github.com/platformio/platformio-core/issues/4475>`_)\n\n6.1.5 (2022-11-01)\n~~~~~~~~~~~~~~~~~~\n\n* Added a new `enable_proxy_strict_ssl <https://docs.platformio.org/en/latest/core/userguide/cmd_settings.html>`__ setting to disable the proxy server certificate verification (`issue #4432 <https://github.com/platformio/platformio-core/issues/4432>`_)\n* Documented `PlatformIO Core Proxy Configuration <https://docs.platformio.org/en/latest/core/installation/proxy-configuration.html>`__\n* Speeded up device port finder by avoiding loading board HWIDs from development platforms\n* Improved caching of build metadata in debug mode\n* Fixed an issue when `pio pkg install --storage-dir <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_install.html>`__ command requires PlatformIO project (`issue #4410 <https://github.com/platformio/platformio-core/issues/4410>`_)\n\n6.1.4 (2022-08-12)\n~~~~~~~~~~~~~~~~~~\n\n* Added support for accepting the original FileNode environment in a \"callback\" function when using `Build Middlewares <https://docs.platformio.org/en/latest/scripting/middlewares.html>`__ (`pull #4380 <https://github.com/platformio/platformio-core/pull/4380>`_)\n* Improved device port finder when using dual channel UART converter (`issue #4367 <https://github.com/platformio/platformio-core/issues/4367>`_)\n* Improved project dependency resolving when using the `pio project init --ide <https://docs.platformio.org/en/latest/core/userguide/project/cmd_init.html>`__ command\n* Upgraded build engine to the SCons 4.4.0 (`release notes <https://github.com/SCons/scons/releases/tag/4.4.0>`__)\n* Keep custom \"unwantedRecommendations\" when generating projects for VSCode (`issue #4383 <https://github.com/platformio/platformio-core/issues/4383>`_)\n* Do not resolve project dependencies for the ``cleanall`` target (`issue #4344 <https://github.com/platformio/platformio-core/issues/4344>`_)\n* Warn about calling \"env.BuildSources\" in a POST-type script (`issue #4385 <https://github.com/platformio/platformio-core/issues/4385>`_)\n* Fixed an issue when escaping macros/defines for IDE integration (`issue #4360 <https://github.com/platformio/platformio-core/issues/4360>`_)\n* Fixed an issue when the \"cleanall\" target removes dependencies from all working environments (`issue #4386 <https://github.com/platformio/platformio-core/issues/4386>`_)\n\n6.1.3 (2022-07-18)\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a regression bug when opening device monitor without any filters (`issue #4363 <https://github.com/platformio/platformio-core/issues/4363>`_)\n\n6.1.2 (2022-07-18)\n~~~~~~~~~~~~~~~~~~\n\n* Export a ``PIO_UNIT_TESTING`` macro to the project source files and dependent libraries in the |UNITTESTING| mode\n* Improved detection of Windows architecture (`issue #4353 <https://github.com/platformio/platformio-core/issues/4353>`_)\n* Warn about unknown `device monitor filters <https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html#filters>`__ (`issue #4362 <https://github.com/platformio/platformio-core/issues/4362>`_)\n* Fixed a regression bug when `libArchive <https://docs.platformio.org/en/latest/manifests/library-json/fields/build/libarchive.html>`__ option declared in the |LIBRARYJSON| manifest was ignored (`issue #4351 <https://github.com/platformio/platformio-core/issues/4351>`_)\n* Fixed an issue when the `pio pkg publish <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_publish.html>`__ command didn't work with Python 3.6 (`issue #4352 <https://github.com/platformio/platformio-core/issues/4352>`_)\n\n6.1.1 (2022-07-11)\n~~~~~~~~~~~~~~~~~~\n\n* Added new ``monitor_encoding`` project configuration option to configure `Device Monitor <https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html>`__ (`issue #4350 <https://github.com/platformio/platformio-core/issues/4350>`_)\n* Allowed specifying project environments for `pio ci <https://docs.platformio.org/en/latest/core/userguide/cmd_ci.html>`__ command (`issue #4347 <https://github.com/platformio/platformio-core/issues/4347>`_)\n* Show \"TimeoutError\" only in the verbose mode when can not find a serial port\n* Fixed an issue when a serial port was not automatically detected if the board has predefined HWIDs\n* Fixed an issue with endless scanning of project dependencies (`issue #4349 <https://github.com/platformio/platformio-core/issues/4349>`_)\n* Fixed an issue with |LDF| when incompatible libraries were used for the working project environment with the missed framework (`pull #4346 <https://github.com/platformio/platformio-core/pull/4346>`_)\n\n6.1.0 (2022-07-06)\n~~~~~~~~~~~~~~~~~~\n\n* **Device Manager**\n\n  - Automatically reconnect device monitor if a connection fails\n  - Added new `pio device monitor --no-reconnect <https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html#cmdoption-pio-device-monitor-no-reconnect>`__ option to disable automatic reconnection\n  - Handle device monitor disconnects more gracefully (`issue #3939 <https://github.com/platformio/platformio-core/issues/3939>`_)\n  - Improved a serial port finder for `Black Magic Probe <https://docs.platformio.org/en/latest/plus/debug-tools/blackmagic.html>`__ (`issue #4023 <https://github.com/platformio/platformio-core/issues/4023>`_)\n  - Improved a serial port finder for a board with predefined HWIDs\n  - Replaced ``monitor_flags`` with independent project configuration options: `monitor_parity <https://docs.platformio.org/en/latest/projectconf/section_env_monitor.html#monitor-parity>`__, `monitor_eol <https://docs.platformio.org/en/latest/projectconf/section_env_monitor.html#monitor-eol>`__, `monitor_raw <https://docs.platformio.org/en/latest/projectconf/section_env_monitor.html#monitor-raw>`__, `monitor_echo <https://docs.platformio.org/en/latest/projectconf/section_env_monitor.html#monitor-echo>`__\n  - Fixed an issue when the monitor filters were not applied in their order (`issue #4320 <https://github.com/platformio/platformio-core/issues/4320>`_)\n\n* **Unit Testing**\n\n  - Updated \"Getting Started\" documentation for `GoogleTest <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/googletest.html>`__ testing and mocking framework\n  - Export |UNITTESTING| flags only to the project build environment (``projenv``, files in \"src\" folder)\n  - Merged the \"building\" stage with \"uploading\" for the embedded target (`issue #4307 <https://github.com/platformio/platformio-core/issues/4307>`_)\n  - Do not resolve dependencies from the project \"src\" folder when the `test_build_src <https://docs.platformio.org/en/latest//projectconf/section_env_test.html#test-build-src>`__ option is not enabled\n  - Do not immediately terminate a testing program when results are received\n  - Fixed an issue when a custom `pio test --project-config <https://docs.platformio.org/en/latest/core/userguide/cmd_test.html#cmdoption-pio-test-c>`__ was not handled properly (`issue #4299 <https://github.com/platformio/platformio-core/issues/4299>`_)\n  - Fixed an issue when testing results were wrong in the verbose mode (`issue #4336 <https://github.com/platformio/platformio-core/issues/4336>`_)\n\n* **Build System**\n\n  - Significantly improved support for `Pre & Post Actions <https://docs.platformio.org/en/latest/scripting/actions.html>`__\n\n    * Allowed to declare actions in the `PRE-type scripts <https://docs.platformio.org/en/latest/scripting/launch_types.html>`__ even if the target is not ready yet\n    * Allowed library maintainers to use Pre & Post Actions in the library `extraScript <https://docs.platformio.org/en/latest/manifests/library-json/fields/build/extrascript.html>`__\n\n  - Documented `Stringification <https://docs.platformio.org/en/latest/projectconf/section_env_build.html#stringification>`__ – converting a macro argument into a string constant (`issue #4310 <https://github.com/platformio/platformio-core/issues/4310>`_)\n  - Added new `pio run --monitor-port <https://docs.platformio.org/en/latest/core/userguide/cmd_run.html#cmdoption-pio-run-monitor-port>`__ option to specify custom device monitor port to the ``monitor`` target (`issue #4337 <https://github.com/platformio/platformio-core/issues/4337>`_)\n  - Added ``env.StringifyMacro(value)`` helper function for the `Advanced Scripting <https://docs.platformio.org/en/latest/scripting/index.html>`__\n  - Allowed to ``Import(\"projenv\")`` in a library extra script (`issue #4305 <https://github.com/platformio/platformio-core/issues/4305>`_)\n  - Fixed an issue when the `build_unflags <https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-unflags>`__ operation ignores a flag value (`issue #4309 <https://github.com/platformio/platformio-core/issues/4309>`_)\n  - Fixed an issue when the `build_unflags <https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-unflags>`__ option was not applied to the ``ASPPFLAGS`` scope\n  - Fixed an issue on Windows OS when flags were wrapped to the temporary file while generating the `Compilation database \"compile_commands.json\" <https://docs.platformio.org/en/latest/integration/compile_commands.html>`__\n  - Fixed an issue with the |LDF| when recursively scanning dependencies in the ``chain`` mode\n  - Fixed a \"PermissionError\" on Windows when running \"clean\" or \"cleanall\" targets (`issue #4331 <https://github.com/platformio/platformio-core/issues/4331>`_)\n\n* **Package Management**\n\n  - Fixed an issue when library dependencies were installed for the incompatible project environment (`issue #4338 <https://github.com/platformio/platformio-core/issues/4338>`_)\n\n* **Miscellaneous**\n\n  - Warn about incompatible Bash version for the `Shell Completion <https://docs.platformio.org/en/latest/core/userguide/system/completion/index.html>`__ (`issue #4326 <https://github.com/platformio/platformio-core/issues/4326>`_)\n\n6.0.2 (2022-06-01)\n~~~~~~~~~~~~~~~~~~\n\n* Control |UNITTESTING| verbosity with a new multilevel `pio test -v <https://docs.platformio.org/en/latest/core/userguide/cmd_test.html#cmdoption-pio-test-v>`__ command option (`issue #4276 <https://github.com/platformio/platformio-core/issues/4276>`_)\n* Follow symbolic links during searching for the unit test suites (`issue #4288 <https://github.com/platformio/platformio-core/issues/4288>`_)\n* Show a warning when testing an empty project without a test suite (`issue #4278 <https://github.com/platformio/platformio-core/issues/4278>`_)\n* Improved support for `Asking for input (prompts) <https://docs.platformio.org/en/latest/scripting/examples/asking_for_input.html>`_\n* Fixed an issue when the `build_src_flags <https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-src-flags>`__ option was applied outside the project scope (`issue #4277 <https://github.com/platformio/platformio-core/issues/4277>`_)\n* Fixed an issue with debugging assembly files without preprocessor (\".s\")\n\n6.0.1 (2022-05-17)\n~~~~~~~~~~~~~~~~~~\n\n* Improved support for the renamed configuration options (`issue #4270 <https://github.com/platformio/platformio-core/issues/4270>`_)\n* Fixed an issue when calling the built-in `pio device monitor <https://docs.platformio.org/en/latest/core/userguide/device/cmd_monitor.html#filters>`__ filters\n* Fixed an issue when using |INTERPOLATION| and merging str+int options (`issue #4271 <https://github.com/platformio/platformio-core/issues/4271>`_)\n\n6.0.0 (2022-05-16)\n~~~~~~~~~~~~~~~~~~\n\nPlease check the `Migration guide from 5.x to 6.0 <https://docs.platformio.org/en/latest/core/migration.html>`__.\n\n* **Package Management**\n\n  - New unified Package Management CLI (``pio pkg``):\n\n    * `pio pkg exec <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_exec.html>`_ - run command from package tool (`issue #4163 <https://github.com/platformio/platformio-core/issues/4163>`_)\n    * `pio pkg install <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_install.html>`_ - install the project dependencies or custom packages\n    * `pio pkg list <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_list.html>`__ - list installed packages\n    * `pio pkg outdated <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_outdated.html>`__ - check for project outdated packages\n    * `pio pkg search <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_search.html>`__ - search for packages\n    * `pio pkg show <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_show.html>`__ - show package information\n    * `pio pkg uninstall <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_uninstall.html>`_ - uninstall the project dependencies or custom packages\n    * `pio pkg update <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_update.html>`__ - update the project dependencies or custom packages\n\n  - Package Manifest\n\n    * Added support for `\"scripts\" <https://docs.platformio.org/en/latest/librarymanager/config.html#scripts>`__ (`issue #485 <https://github.com/platformio/platformio-core/issues/485>`_)\n    * Added support for `multi-licensed <https://docs.platformio.org/en/latest/librarymanager/config.html#license>`__ packages using SPDX Expressions (`issue #4037 <https://github.com/platformio/platformio-core/issues/4037>`_)\n    * Added support for `\"dependencies\" <https://docs.platformio.org/en/latest/librarymanager/config.html#dependencies>`__ declared in a \"tool\" package manifest\n\n  - Added support for `symbolic links <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_install.html#local-folder>`__ allowing pointing the local source folder to the Package Manager (`issue #3348 <https://github.com/platformio/platformio-core/issues/3348>`_)\n  - Automatically install dependencies of the local (private) project libraries (`issue #2910 <https://github.com/platformio/platformio-core/issues/2910>`_)\n  - Improved detection of a package type from the tarball archive (`issue #3828 <https://github.com/platformio/platformio-core/issues/3828>`_)\n  - Ignore files according to the patterns declared in \".gitignore\" when using the `pio package pack <https://docs.platformio.org/en/latest/core/userguide/pkg/cmd_pack.html>`__ command (`issue #4188 <https://github.com/platformio/platformio-core/issues/4188>`_)\n  - Dropped automatic updates of global libraries and development platforms (`issue #4179 <https://github.com/platformio/platformio-core/issues/4179>`_)\n  - Dropped support for the \"pythonPackages\" field in \"platform.json\" manifest in favor of `Extra Python Dependencies <https://docs.platformio.org/en/latest/scripting/examples/extra_python_packages.html>`__\n  - Fixed an issue when manually removed dependencies from the |PIOCONF| were not uninstalled from the storage (`issue #3076 <https://github.com/platformio/platformio-core/issues/3076>`_)\n\n* **Unit Testing**\n\n  - Refactored from scratch |UNITTESTING| solution and its documentation\n  - New: `Test Hierarchy <https://docs.platformio.org/en/latest/advanced/unit-testing/structure.html>`_ (`issue #4135 <https://github.com/platformio/platformio-core/issues/4135>`_)\n  - New: `Doctest <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/doctest.html>`__ testing framework (`issue #4240 <https://github.com/platformio/platformio-core/issues/4240>`_)\n  - New: `GoogleTest <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/googletest.html>`__ testing and mocking framework (`issue #3572 <https://github.com/platformio/platformio-core/issues/3572>`_)\n  - New: `Semihosting <https://docs.platformio.org/en/latest/advanced/unit-testing/semihosting.html>`__ (`issue #3516 <https://github.com/platformio/platformio-core/issues/3516>`_)\n  - New: Hardware `Simulators <https://docs.platformio.org/en/latest/advanced/unit-testing/simulators/index.html>`__ for Unit Testing (QEMU, Renode, SimAVR, and custom solutions)\n  - New: ``test`` `build configuration <https://docs.platformio.org/en/latest/projectconf/build_configurations.html>`__\n  - Added support for a `custom testing framework <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/custom/index.html>`_\n  - Added support for a custom `testing command <https://docs.platformio.org/en/latest/projectconf/section_env_test.html#test-testing-command>`__\n  - Added support for a `custom Unity library <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/custom/examples/custom_unity_library.html>`__ (`issue #3980 <https://github.com/platformio/platformio-core/issues/3980>`_)\n  - Added support for the ``socket://`` and ``rfc2217://`` protocols using `test_port <https://docs.platformio.org/en/latest/projectconf/section_env_test.html#test-port>`__ option (`issue #4229 <https://github.com/platformio/platformio-core/issues/4229>`_)\n  - List available project tests with a new `pio test --list-tests <https://docs.platformio.org/en/latest/core/userguide/cmd_test.html#cmdoption-pio-test-list-tests>`__ option\n  - Pass extra arguments to the testing program with a new `pio test --program-arg <https://docs.platformio.org/en/latest/core/userguide/cmd_test.html#cmdoption-pio-test-a>`__ option (`issue #3132 <https://github.com/platformio/platformio-core/issues/3132>`_)\n  - Generate reports in JUnit and JSON formats using the `pio test <https://docs.platformio.org/en/latest/core/userguide/cmd_test.html>`__ command (`issue #2891 <https://github.com/platformio/platformio-core/issues/2891>`_)\n  - Provide more information when the native program crashed on a host (errored with a non-zero return code) (`issue #3429 <https://github.com/platformio/platformio-core/issues/3429>`_)\n  - Improved automatic detection of a testing serial port (`issue #4076 <https://github.com/platformio/platformio-core/issues/4076>`_)\n  - Fixed an issue when command line parameters (``--ignore``, ``--filter``) do not override values defined in the |PIOCONF| (`issue #3845 <https://github.com/platformio/platformio-core/issues/3845>`_)\n  - Renamed the \"test_build_project_src\" project configuration option to the `test_build_src <https://docs.platformio.org/en/latest//projectconf/section_env_test.html#test-build-src>`__\n  - Removed the \"test_transport\" option in favor of the `Custom \"unity_config.h\" <https://docs.platformio.org/en/latest/advanced/unit-testing/frameworks/unity.html>`_\n\n* **Static Code Analysis**\n\n  - Updated analysis tools:\n\n    * `Cppcheck <https://docs.platformio.org/en/latest/plus/check-tools/cppcheck.html>`__ v2.7 with various checker improvements and fixed false positives\n    * `PVS-Studio <https://docs.platformio.org/en/latest/plus/check-tools/pvs-studio.html>`__ v7.18 with improved and updated semantic analysis system\n\n  - Added support for the custom `Clang-Tidy <https://docs.platformio.org/en/latest/plus/check-tools/clang-tidy.html>`__ configuration file (`issue #4186 <https://github.com/platformio/platformio-core/issues/4186>`_)\n  - Added ability to override a tool version using the `platform_packages <https://docs.platformio.org/en/latest/projectconf/section_env_platform.html#platform-packages>`__ option (`issue #3798 <https://github.com/platformio/platformio-core/issues/3798>`_)\n  - Fixed an issue with improper handling of defects that don't specify a source file (`issue #4237 <https://github.com/platformio/platformio-core/issues/4237>`_)\n\n* **Build System**\n\n  - Show project dependency licenses when building in the verbose mode\n  - Fixed an issue when |LDF| ignores the project `lib_deps <https://docs.platformio.org/en/latest/projectconf/section_env_library.html#lib-deps>`__ while resolving library dependencies (`issue #3598 <https://github.com/platformio/platformio-core/issues/3598>`_)\n  - Fixed an issue with calling an extra script located outside a project (`issue #4220 <https://github.com/platformio/platformio-core/issues/4220>`_)\n  - Fixed an issue when GCC preprocessor was applied to the \".s\" assembly files on case-sensitive OS such as Window OS (`issue #3917 <https://github.com/platformio/platformio-core/issues/3917>`_)\n  - Fixed an issue when |LDF| ignores `build_src_flags <https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-src-flags>`__ in the \"deep+\" mode (`issue #4253 <https://github.com/platformio/platformio-core/issues/4253>`_)\n\n* **Integration**\n\n  - Added a new build variable (``COMPILATIONDB_INCLUDE_TOOLCHAIN``) to include toolchain paths in the compilation database (`issue #3735 <https://github.com/platformio/platformio-core/issues/3735>`_)\n  - Changed a default path for compilation database `compile_commands.json <https://docs.platformio.org/en/latest/integration/compile_commands.html>`__ to the project root\n  - Enhanced integration for Qt Creator (`issue #3046 <https://github.com/platformio/platformio-core/issues/3046>`_)\n\n* **Project Configuration**\n\n  - Extended |INTERPOLATION| with ``${this}`` pattern (`issue #3953 <https://github.com/platformio/platformio-core/issues/3953>`_)\n  - Embed environment name of the current section in the |PIOCONF| using ``${this.__env__}`` pattern\n  - Renamed the \"src_build_flags\" project configuration option to the `build_src_flags <https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-src-flags>`__\n  - Renamed the \"src_filter\" project configuration option to the `build_src_filter <https://docs.platformio.org/en/latest/projectconf/section_env_build.html#build-src-filter>`__\n\n* **Miscellaneous**\n\n  - Pass extra arguments to the `native <https://docs.platformio.org/en/latest/platforms/native.html>`__ program with a new `pio run --program-arg <https://docs.platformio.org/en/latest/core/userguide/cmd_run.html#cmdoption-pio-run-a>`__ option (`issue #4246 <https://github.com/platformio/platformio-core/issues/4246>`_)\n  - Improved PIO Remote setup on credit-card sized computers (Raspberry Pi, BeagleBon, etc) (`issue #3865 <https://github.com/platformio/platformio-core/issues/3865>`_)\n  - Finally removed all tracks to the Python 2.7, the Python 3.6 is the minimum supported version.\n\n.. _release_notes_5:\n\nPlatformIO Core 5\n-----------------\n\nSee `PlatformIO Core 5.0 history <https://github.com/platformio/platformio-core/blob/v5.2.5/HISTORY.rst>`__.\n\n.. _release_notes_4:\n\nPlatformIO Core 4\n-----------------\n\nSee `PlatformIO Core 4.0 history <https://github.com/platformio/platformio-core/blob/v4.3.4/HISTORY.rst>`__.\n\nPlatformIO Core 3\n-----------------\n\nSee `PlatformIO Core 3.0 history <https://github.com/platformio/platformio-core/blob/v3.6.7/HISTORY.rst>`__.\n\nPlatformIO Core 2\n-----------------\n\nSee `PlatformIO Core 2.0 history <https://github.com/platformio/platformio-core/blob/v2.11.2/HISTORY.rst>`__.\n\nPlatformIO Core 1\n-----------------\n\nSee `PlatformIO Core 1.0 history <https://github.com/platformio/platformio-core/blob/v1.5.0/HISTORY.rst>`__.\n\nPlatformIO Core Preview\n-----------------------\n\nSee `PlatformIO Core Preview history <https://github.com/platformio/platformio-core/blob/v0.10.2/HISTORY.rst>`__.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 8.9541015625,
          "content": "Apache License\nVersion 2.0, January 2004\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n\n(a) You must give any other recipients of the Work or\n  Derivative Works a copy of this License; and\n\n(b) You must cause any modified files to carry prominent notices\n  stating that You changed the files; and\n\n(c) You must retain, in the Source form of any Derivative Works\n  that You distribute, all copyright, patent, trademark, and\n  attribution notices from the Source form of the Work,\n  excluding those notices that do not pertain to any part of\n  the Derivative Works; and\n\n(d) If the Work includes a \"NOTICE\" text file as part of its\n  distribution, then any Derivative Works that You distribute must\n  include a readable copy of the attribution notices contained\n  within such NOTICE file, excluding those notices that do not\n  pertain to any part of the Derivative Works, in at least one\n  of the following places: within a NOTICE text file distributed\n  as part of the Derivative Works; within the Source form or\n  documentation, if provided along with the Derivative Works; or,\n  within a display generated by the Derivative Works, if and\n  wherever such third-party notices normally appear. The contents\n  of the NOTICE file are for informational purposes only and\n  do not modify the License. You may add Your own attribution\n  notices within Derivative Works that You distribute, alongside\n  or as an addendum to the NOTICE text from the Work, provided\n  that such additional attribution notices cannot be construed\n  as modifying the License.\n\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.6923828125,
          "content": "lint:\n\tpylint --rcfile=./.pylintrc ./tests\n\tpylint --rcfile=./.pylintrc ./platformio\n\nisort:\n\tisort ./platformio\n\tisort ./tests\n\nformat:\n\tblack ./platformio\n\tblack ./tests\n\ntest:\n\tpytest --verbose --exitfirst -n 6 --dist=loadscope tests --ignore tests/test_examples.py\n\nbefore-commit: isort format lint\n\nclean-docs:\n\trm -rf docs/_build\n\nclean: clean-docs\n\tfind . -name \\*.pyc -delete\n\tfind . -name __pycache__ -delete\n\trm -rf .cache\n\trm -rf build\n\trm -rf htmlcov\n\trm -f .coverage\n\nprofile:\n\t# Usage $ > make PIOARGS=\"boards\" profile\n\tpython -m cProfile -o .tox/.tmp/cprofile.prof -m platformio ${PIOARGS}\n\tsnakeviz .tox/.tmp/cprofile.prof\n\npack:\n\tpython setup.py sdist\n\npublish:\n\tpython setup.py sdist upload\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 5.1171875,
          "content": "PlatformIO Core\n===============\n\n.. image:: https://github.com/platformio/platformio-core/workflows/Core/badge.svg\n    :target: https://docs.platformio.org/en/latest/core/index.html\n    :alt:  CI Build for PlatformIO Core\n.. image:: https://github.com/platformio/platformio-core/workflows/Docs/badge.svg\n    :target: https://docs.platformio.org?utm_source=github&utm_medium=core\n    :alt:  CI Build for Docs\n.. image:: https://github.com/platformio/platformio-core/workflows/Examples/badge.svg\n    :target: https://github.com/platformio/platformio-examples\n    :alt:  CI Build for dev-platform examples\n.. image:: https://github.com/platformio/platformio-core/workflows/Projects/badge.svg\n    :target: https://docs.platformio.org/en/latest/tutorials/index.html#projects\n    :alt:  CI Build for the Community Projects\n.. image:: https://img.shields.io/pypi/v/platformio.svg\n    :target: https://pypi.python.org/pypi/platformio/\n    :alt: Latest Version\n.. image:: https://img.shields.io/badge/PlatformIO-Labs-orange.svg\n   :alt: PlatformIO Labs\n   :target: https://piolabs.com/?utm_source=github&utm_medium=core\n\n**Quick Links:** `Homepage <https://platformio.org?utm_source=github&utm_medium=core>`_ |\n`PlatformIO IDE <https://platformio.org/platformio-ide?utm_source=github&utm_medium=core>`_ |\n`Registry <https://registry.platformio.org?utm_source=github&utm_medium=core>`_ |\n`Project Examples <https://github.com/platformio/platformio-examples/>`__ |\n`Docs <https://docs.platformio.org?utm_source=github&utm_medium=core>`_ |\n`Donate <https://platformio.org/donate?utm_source=github&utm_medium=core>`_ |\n`Contact Us <https://piolabs.com/?utm_source=github&utm_medium=core>`_\n\n**Social:** `LinkedIn <https://www.linkedin.com/company/platformio/>`_ |\n`Twitter <https://twitter.com/PlatformIO_Org>`_ |\n`Facebook <https://www.facebook.com/platformio>`_ |\n`Community Forums <https://community.platformio.org?utm_source=github&utm_medium=core>`_\n\n.. image:: https://raw.githubusercontent.com/platformio/platformio-web/develop/app/images/platformio-ide-laptop.png\n    :target: https://platformio.org?utm_source=github&utm_medium=core\n\n`PlatformIO <https://platformio.org>`_: Your Gateway to Embedded Software Development Excellence.\n\nUnlock the true potential of embedded software development with\nPlatformIO's collaborative ecosystem, embracing declarative principles,\ntest-driven methodologies, and modern toolchains for unrivaled success.\n\n* Open source, maximum permissive Apache 2.0 license\n* Cross-platform IDE and Unified Debugger\n* Static Code Analyzer and Remote Unit Testing\n* Multi-platform and Multi-architecture Build System\n* Firmware File Explorer and Memory Inspection\n\nGet Started\n-----------\n\n* `What is PlatformIO? <https://docs.platformio.org/en/latest/what-is-platformio.html?utm_source=github&utm_medium=core>`_\n* `PlatformIO IDE <https://platformio.org/platformio-ide?utm_source=github&utm_medium=core>`_\n* `PlatformIO Core (CLI) <https://docs.platformio.org/en/latest/core.html?utm_source=github&utm_medium=core>`_\n* `Project Examples <https://github.com/platformio/platformio-examples?utm_source=github&utm_medium=core>`__\n\nSolutions\n---------\n\n* `Library Management <https://docs.platformio.org/en/latest/librarymanager/index.html?utm_source=github&utm_medium=core>`_\n* `Desktop IDEs Integration <https://docs.platformio.org/en/latest/ide.html?utm_source=github&utm_medium=core>`_\n* `Continuous Integration <https://docs.platformio.org/en/latest/ci/index.html?utm_source=github&utm_medium=core>`_\n\n**Advanced**\n\n* `Debugging <https://docs.platformio.org/en/latest/plus/debugging.html?utm_source=github&utm_medium=core>`_\n* `Unit Testing <https://docs.platformio.org/en/latest/advanced/unit-testing/index.html?utm_source=github&utm_medium=core>`_\n* `Static Code Analysis <https://docs.platformio.org/en/latest/plus/pio-check.html?utm_source=github&utm_medium=core>`_\n* `Remote Development <https://docs.platformio.org/en/latest/plus/pio-remote.html?utm_source=github&utm_medium=core>`_\n\nRegistry\n--------\n\n* `Libraries <https://registry.platformio.org/search?t=library&utm_source=github&utm_medium=core>`_\n* `Development Platforms <https://registry.platformio.org/search?t=platform&utm_source=github&utm_medium=core>`_\n* `Development Tools <https://registry.platformio.org/search?t=tool&utm_source=github&utm_medium=core>`_\n\nContributing\n------------\n\nSee `contributing guidelines <https://github.com/platformio/platformio/blob/develop/CONTRIBUTING.md>`_.\n\nTelemetry / Privacy Policy\n--------------------------\n\nShare minimal diagnostics and usage information to help us make PlatformIO better.\nIt is enabled by default. For more information see:\n\n* `Telemetry Setting <https://docs.platformio.org/en/latest/userguide/cmd_settings.html?utm_source=github&utm_medium=core#enable-telemetry>`_\n\nLicense\n-------\n\nCopyright (c) 2014-present PlatformIO <contact@platformio.org>\n\nThe PlatformIO is licensed under the permissive Apache 2.0 license,\nso you can use it in both commercial and personal projects with confidence.\n\n.. image:: https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg\n    :target: https://github.com/vshymanskyy/StandWithUkraine/blob/main/docs/README.md\n    :alt:  SWUbanner"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.0517578125,
          "content": "# Security Policy\n\n## Supported Versions\n\nWe are committed to ensuring the security and protection of PlatformIO Core. \nTo this end, we support only the following versions:\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 6.1.x   | :white_check_mark: |\n| < 6.1   | :x:                |\n\nUnsupported versions of the PlatformIO Core may have known vulnerabilities or security issues that could compromise the security of our organization's systems and data. \nTherefore, it is important that all developers use only supported versions of the PlatformIO Core.\n\n## Reporting a Vulnerability\n\nWe take the security of our systems and data very seriously. We encourage responsible disclosure of any vulnerabilities or security issues that you may find in our systems or applications. If you believe you have discovered a vulnerability, please report it to us immediately.\n\nTo report a vulnerability, please send an email to our security team at contact@piolabs.com. Please include as much information as possible, including:\n\n- A description of the vulnerability and how it can be exploited\n- Steps to reproduce the vulnerability\n- Any additional information that can help us understand and reproduce the vulnerability\n\nOnce we receive your report, our security team will acknowledge receipt within 24 hours and will work to validate the reported vulnerability. We will provide periodic updates on the progress of the vulnerability assessment, and will notify you once a fix has been deployed.\n\nIf the vulnerability is accepted, we will work to remediate the issue as quickly as possible. We may also provide credit or recognition to the individual who reported the vulnerability, at our discretion.\n\nIf the vulnerability is declined, we will provide a justification for our decision and may offer guidance on how to improve the report or how to test the system more effectively.\n\nPlease note that we will not take any legal action against individuals who report vulnerabilities in good faith and in accordance with this policy.\n\nThank you for helping us keep our systems and data secure.\n"
        },
        {
          "name": "docs",
          "type": "commit",
          "content": null
        },
        {
          "name": "examples",
          "type": "commit",
          "content": null
        },
        {
          "name": "platformio",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.73828125,
          "content": "# Copyright (c) 2014-present PlatformIO <contact@platformio.org>\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nfrom setuptools import find_packages, setup\n\nfrom platformio import (\n    __author__,\n    __description__,\n    __email__,\n    __license__,\n    __title__,\n    __url__,\n    __version__,\n)\nfrom platformio.dependencies import get_pip_dependencies\n\nsetup(\n    name=__title__,\n    version=__version__,\n    description=__description__,\n    long_description=open(\"README.rst\").read(),\n    author=__author__,\n    author_email=__email__,\n    url=__url__,\n    license=__license__,\n    install_requires=get_pip_dependencies(),\n    python_requires=\">=3.6\",\n    packages=find_packages(include=[\"platformio\", \"platformio.*\"]),\n    package_data={\n        \"platformio\": [\n            \"assets/system/99-platformio-udev.rules\",\n            \"project/integration/tpls/*/*.tpl\",\n            \"project/integration/tpls/*/.*.tpl\",  # include hidden files\n            \"project/integration/tpls/*/.*/*.tpl\",  # include hidden folders\n            \"project/integration/tpls/*/*/*.tpl\",  # NetBeans\n            \"project/integration/tpls/*/*/*/*.tpl\",  # NetBeans\n        ]\n    },\n    entry_points={\n        \"console_scripts\": [\n            \"platformio = platformio.__main__:main\",\n            \"pio = platformio.__main__:main\",\n            \"piodebuggdb = platformio.__main__:debug_gdb_main\",\n        ]\n    },\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Console\",\n        \"Intended Audience :: Developers\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: C\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Topic :: Software Development\",\n        \"Topic :: Software Development :: Build Tools\",\n        \"Topic :: Software Development :: Compilers\",\n    ],\n    keywords=[\n        \"iot\",\n        \"embedded\",\n        \"arduino\",\n        \"mbed\",\n        \"esp8266\",\n        \"esp32\",\n        \"fpga\",\n        \"firmware\",\n        \"continuous-integration\",\n        \"cloud-ide\",\n        \"avr\",\n        \"arm\",\n        \"ide\",\n        \"unit-testing\",\n        \"hardware\",\n        \"verilog\",\n        \"microcontroller\",\n        \"debug\",\n    ],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.716796875,
          "content": "# Copyright (c) 2014-present PlatformIO <contact@platformio.org>\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n[isort]\nprofile = black\nknown_third_party=OpenSSL, SCons, jsonrpc, twisted, zope\n\n[pytest]\nfilterwarnings =\n    error\n    # Bottle\n    ignore:.*'cgi' is deprecated and slated for removal\n\n[testenv]\npassenv = *\nusedevelop = True\ndeps =\n    black\n    isort\n    pylint\n    pytest\n    pytest-xdist\n    jsondiff\ncommands =\n    {envpython} --version\n    pio system info\n\n[testenv:lint]\ncommands =\n    {envpython} --version\n    pylint --rcfile=./.pylintrc ./platformio\n    pylint --rcfile=./.pylintrc ./tests\n\n[testenv:testcore]\ncommands =\n    {envpython} --version\n    py.test -v --basetemp={envtmpdir} -k \"not skip_ci\" tests --ignore tests/test_examples.py\n\n[testenv:testexamples]\ncommands =\n    {envpython} scripts/install_devplatforms.py\n    py.test -v --basetemp={envtmpdir} tests/test_examples.py\n\n[testenv:docs]\ndeps =\n    sphinx-rtd-theme==3.0.2\n    sphinxcontrib-googleanalytics\n    sphinx-notfound-page\n    sphinx-copybutton\n    restructuredtext-lint\nchange_dir = docs\ncommands =\n    sphinx-build -b html . _build/html\n\n[testenv:docslinkcheck]\ndeps =\n    {[testenv:docs]deps}\nchange_dir = docs\ncommands =\n    sphinx-build -b linkcheck . _build\n"
        }
      ]
    }
  ]
}