{
  "metadata": {
    "timestamp": 1736560771464,
    "page": 458,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lancopku/pkuseg-python",
      "stars": 6578,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0908203125,
          "content": ".vscode/\n*.cpp\n*.pyd\n*.html\n**/__pycache__/\n*.egg-info\n*.txt*\nbuild\ntmp/\ndata/\nmodels/\n*stats"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05078125,
          "content": "MIT License\n\nCopyright (c) 2018-2019 pkuseg authors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.11328125,
          "content": "# pkuseg：一个多领域中文分词工具包 [**(English Version)**](readme/readme_english.md)\r\n\r\npkuseg 是基于论文[[Luo et. al, 2019](#论文引用)]的工具包。其简单易用，支持细分领域分词，有效提升了分词准确度。\r\n\r\n\r\n\r\n## 目录\r\n\r\n* [主要亮点](#主要亮点)\r\n* [编译和安装](#编译和安装)\r\n* [各类分词工具包的性能对比](#各类分词工具包的性能对比)\r\n* [使用方式](#使用方式)\r\n* [论文引用](#论文引用)\r\n* [作者](#作者)\r\n* [常见问题及解答](#常见问题及解答)\r\n\r\n\r\n\r\n## 主要亮点\r\n\r\npkuseg具有如下几个特点：\r\n\r\n1. 多领域分词。不同于以往的通用中文分词工具，此工具包同时致力于为不同领域的数据提供个性化的预训练模型。根据待分词文本的领域特点，用户可以自由地选择不同的模型。 我们目前支持了新闻领域，网络领域，医药领域，旅游领域，以及混合领域的分词预训练模型。在使用中，如果用户明确待分词的领域，可加载对应的模型进行分词。如果用户无法确定具体领域，推荐使用在混合领域上训练的通用模型。各领域分词样例可参考 [**example.txt**](https://github.com/lancopku/pkuseg-python/blob/master/example.txt)。\r\n2. 更高的分词准确率。相比于其他的分词工具包，当使用相同的训练数据和测试数据，pkuseg可以取得更高的分词准确率。\r\n3. 支持用户自训练模型。支持用户使用全新的标注数据进行训练。\r\n4. 支持词性标注。\r\n\r\n\r\n## 编译和安装\r\n\r\n- 目前**仅支持python3**\r\n- **为了获得好的效果和速度，强烈建议大家通过pip install更新到目前的最新版本**\r\n\r\n1. 通过PyPI安装(自带模型文件)：\r\n\t```\r\n\tpip3 install pkuseg\r\n\t之后通过import pkuseg来引用\r\n\t```\r\n   **建议更新到最新版本**以获得更好的开箱体验：\r\n   \t```\r\n\tpip3 install -U pkuseg\r\n\t```\r\n2. 如果PyPI官方源下载速度不理想，建议使用镜像源，比如：   \r\n   初次安装：\r\n\t```\r\n\tpip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple pkuseg\r\n\t```\r\n   更新：\r\n\t```\r\n\tpip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple -U pkuseg\r\n\t```\r\n   \r\n3. 如果不使用pip安装方式，选择从GitHub下载，可运行以下命令安装：\r\n\t```\r\n\tpython setup.py build_ext -i\r\n\t```\r\n\t\r\n   GitHub的代码并不包括预训练模型，因此需要用户自行下载或训练模型，预训练模型可详见[release](https://github.com/lancopku/pkuseg-python/releases)。使用时需设定\"model_name\"为模型文件。\r\n\r\n注意：**安装方式1和2目前仅支持linux(ubuntu)、mac、windows 64 位的python3版本**。如果非以上系统，请使用安装方式3进行本地编译安装。\r\n\t\r\n\r\n## 各类分词工具包的性能对比\r\n\r\n我们选择jieba、THULAC等国内代表分词工具包与pkuseg做性能比较，详细设置可参考[实验环境](readme/environment.md)。\r\n\r\n\r\n\r\n#### 细领域训练及测试结果\r\n\r\n以下是在不同数据集上的对比结果：\r\n\r\n| MSRA   | Precision | Recall |   F-score |\r\n| :----- | --------: | -----: | --------: |\r\n| jieba  |     87.01 |  89.88 |     88.42 |\r\n| THULAC |     95.60 |  95.91 |     95.71 |\r\n| pkuseg |     96.94 |  96.81 | **96.88** |\r\n\r\n\r\n| WEIBO  | Precision | Recall |   F-score |\r\n| :----- | --------: | -----: | --------: |\r\n| jieba  |     87.79 |  87.54 |     87.66 |\r\n| THULAC |     93.40 |  92.40 |     92.87 |\r\n| pkuseg |     93.78 |  94.65 | **94.21** |\r\n\r\n\r\n\r\n\r\n#### 默认模型在不同领域的测试效果\r\n\r\n考虑到很多用户在尝试分词工具的时候，大多数时候会使用工具包自带模型测试。为了直接对比“初始”性能，我们也比较了各个工具包的默认模型在不同领域的测试效果。请注意，这样的比较只是为了说明默认情况下的效果，并不一定是公平的。\r\n\r\n| Default | MSRA  | CTB8  | PKU   | WEIBO | All Average |\r\n| ------- | :---: | :---: | :---: | :---: | :---------: |\r\n| jieba  | 81.45 | 79.58 | 81.83 | 83.56 | 81.61       |\r\n| THULAC |\t85.55 | 87.84 | 92.29 | 86.65 | 88.08 |\r\n| pkuseg | 87.29 | 91.77 | 92.68 | 93.43 | **91.29**   |\r\n\r\n其中，`All Average`显示的是在所有测试集上F-score的平均。\r\n\r\n更多详细比较可参见[和现有工具包的比较](readme/comparison.md)。\r\n\r\n## 使用方式\r\n\r\n#### 代码示例\r\n\r\n以下代码示例适用于python交互式环境。\r\n\r\n代码示例1：使用默认配置进行分词（**如果用户无法确定分词领域，推荐使用默认模型分词**）\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg()           # 以默认配置加载模型\r\ntext = seg.cut('我爱北京天安门')  # 进行分词\r\nprint(text)\r\n```\r\n\r\n代码示例2：细领域分词（**如果用户明确分词领域，推荐使用细领域模型分词**）\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg(model_name='medicine')  # 程序会自动下载所对应的细领域模型\r\ntext = seg.cut('我爱北京天安门')              # 进行分词\r\nprint(text)\r\n```\r\n\r\n代码示例3：分词同时进行词性标注，各词性标签的详细含义可参考 [tags.txt](https://github.com/lancopku/pkuseg-python/blob/master/tags.txt)\r\n```python3\r\nimport pkuseg\r\n\r\nseg = pkuseg.pkuseg(postag=True)  # 开启词性标注功能\r\ntext = seg.cut('我爱北京天安门')    # 进行分词和词性标注\r\nprint(text)\r\n```\r\n\r\n\r\n代码示例4：对文件分词\r\n```python3\r\nimport pkuseg\r\n\r\n# 对input.txt的文件分词输出到output.txt中\r\n# 开20个进程\r\npkuseg.test('input.txt', 'output.txt', nthread=20)     \r\n```\r\n\r\n其他使用示例可参见[详细代码示例](readme/interface.md)。\r\n\r\n\r\n\r\n#### 参数说明\r\n\r\n模型配置\r\n```\r\npkuseg.pkuseg(model_name = \"default\", user_dict = \"default\", postag = False)\r\n\tmodel_name\t\t模型路径。\r\n\t\t\t        \"default\"，默认参数，表示使用我们预训练好的混合领域模型(仅对pip下载的用户)。\r\n\t\t\t\t\"news\", 使用新闻领域模型。\r\n\t\t\t\t\"web\", 使用网络领域模型。\r\n\t\t\t\t\"medicine\", 使用医药领域模型。\r\n\t\t\t\t\"tourism\", 使用旅游领域模型。\r\n\t\t\t        model_path, 从用户指定路径加载模型。\r\n\tuser_dict\t\t设置用户词典。\r\n\t\t\t\t\"default\", 默认参数，使用我们提供的词典。\r\n\t\t\t\tNone, 不使用词典。\r\n\t\t\t\tdict_path, 在使用默认词典的同时会额外使用用户自定义词典，可以填自己的用户词典的路径，词典格式为一行一个词（如果选择进行词性标注并且已知该词的词性，则在该行写下词和词性，中间用tab字符隔开）。\r\n\tpostag\t\t        是否进行词性分析。\r\n\t\t\t\tFalse, 默认参数，只进行分词，不进行词性标注。\r\n\t\t\t\tTrue, 会在分词的同时进行词性标注。\r\n```\r\n\r\n对文件进行分词\r\n```\r\npkuseg.test(readFile, outputFile, model_name = \"default\", user_dict = \"default\", postag = False, nthread = 10)\r\n\treadFile\t\t输入文件路径。\r\n\toutputFile\t\t输出文件路径。\r\n\tmodel_name\t\t模型路径。同pkuseg.pkuseg\r\n\tuser_dict\t\t设置用户词典。同pkuseg.pkuseg\r\n\tpostag\t\t\t设置是否开启词性分析功能。同pkuseg.pkuseg\r\n\tnthread\t\t\t测试时开的进程数。\r\n```\r\n\r\n模型训练\r\n```\r\npkuseg.train(trainFile, testFile, savedir, train_iter = 20, init_model = None)\r\n\ttrainFile\t\t训练文件路径。\r\n\ttestFile\t\t测试文件路径。\r\n\tsavedir\t\t\t训练模型的保存路径。\r\n\ttrain_iter\t\t训练轮数。\r\n\tinit_model\t\t初始化模型，默认为None表示使用默认初始化，用户可以填自己想要初始化的模型的路径如init_model='./models/'。\r\n```\r\n\r\n\r\n\r\n#### 多进程分词\r\n\r\n当将以上代码示例置于文件中运行时，如涉及多进程功能，请务必使用`if __name__ == '__main__'`保护全局语句，详见[多进程分词](readme/multiprocess.md)。\r\n\r\n\r\n\r\n## 预训练模型\r\n\r\n从pip安装的用户在使用细领域分词功能时，只需要设置model_name字段为对应的领域即可，会自动下载对应的细领域模型。\r\n\r\n从github下载的用户则需要自己下载对应的预训练模型，并设置model_name字段为预训练模型路径。预训练模型可以在[release](https://github.com/lancopku/pkuseg-python/releases)部分下载。以下是对预训练模型的说明：\r\n\r\n- **news**: 在MSRA（新闻语料）上训练的模型。\r\n\r\n- **web**: 在微博（网络文本语料）上训练的模型。\r\n\r\n- **medicine**: 在医药领域上训练的模型。\r\n\r\n- **tourism**: 在旅游领域上训练的模型。\r\n\r\n- **mixed**: 混合数据集训练的通用模型。随pip包附带的是此模型。\r\n\r\n我们还通过领域自适应的方法，利用维基百科的未标注数据实现了几个细领域预训练模型的自动构建以及通用模型的优化，这些模型目前仅可以在release中下载：\r\n\r\n- **art**: 在艺术与文化领域上训练的模型。\r\n\r\n- **entertainment**: 在娱乐与体育领域上训练的模型。\r\n\r\n- **science**: 在科学领域上训练的模型。\r\n\r\n- **default_v2**: 使用领域自适应方法得到的优化后的通用模型，相较于默认模型规模更大，但泛化性能更好。\r\n\r\n\r\n\r\n欢迎更多用户可以分享自己训练好的细分领域模型。\r\n\r\n\r\n\r\n## 版本历史\r\n\r\n详见[版本历史](readme/history.md)。\r\n\r\n\r\n## 开源协议\r\n1. 本代码采用MIT许可证。\r\n2. 欢迎对该工具包提出任何宝贵意见和建议，请发邮件至jingjingxu@pku.edu.cn。\r\n\r\n\r\n\r\n## 论文引用\r\n\r\n该代码包主要基于以下科研论文，如使用了本工具，请引用以下论文：\r\n* Ruixuan Luo, Jingjing Xu, Yi Zhang, Zhiyuan Zhang, Xuancheng Ren, Xu Sun. [PKUSEG: A Toolkit for Multi-Domain Chinese Word Segmentation](https://arxiv.org/abs/1906.11455). Arxiv. 2019.\r\n\r\n```\r\n\r\n@article{pkuseg,\r\n  author = {Luo, Ruixuan and Xu, Jingjing and Zhang, Yi and Zhang, Zhiyuan and Ren, Xuancheng and Sun, Xu},\r\n  journal = {CoRR},\r\n  title = {PKUSEG: A Toolkit for Multi-Domain Chinese Word Segmentation.},\r\n  url = {https://arxiv.org/abs/1906.11455},\r\n  volume = {abs/1906.11455},\r\n  year = 2019\r\n}\r\n```\r\n\r\n## 其他相关论文\r\n\r\n* Xu Sun, Houfeng Wang, Wenjie Li. Fast Online Training with Frequency-Adaptive Learning Rates for Chinese Word Segmentation and New Word Detection. ACL. 2012.\r\n* Jingjing Xu and Xu Sun. Dependency-based gated recursive neural network for chinese word segmentation. ACL. 2016.\r\n* Jingjing Xu and Xu Sun. Transfer learning for low-resource chinese word segmentation with a novel neural network. NLPCC. 2017.\r\n\r\n## 常见问题及解答\r\n\r\n\r\n1. [为什么要发布pkuseg？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#1-为什么要发布pkuseg)\r\n2. [pkuseg使用了哪些技术？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#2-pkuseg使用了哪些技术)\r\n3. [无法使用多进程分词和训练功能，提示RuntimeError和BrokenPipeError。](https://github.com/lancopku/pkuseg-python/wiki/FAQ#3-无法使用多进程分词和训练功能提示runtimeerror和brokenpipeerror)\r\n4. [是如何跟其它工具包在细领域数据上进行比较的？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#4-是如何跟其它工具包在细领域数据上进行比较的)\r\n5. [在黑盒测试集上进行比较的话，效果如何？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#5-在黑盒测试集上进行比较的话效果如何)\r\n6. [如果我不了解待分词语料的所属领域呢？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#6-如果我不了解待分词语料的所属领域呢)\r\n7. [如何看待在一些特定样例上的分词结果？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#7-如何看待在一些特定样例上的分词结果)\r\n8. [关于运行速度问题？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#8-关于运行速度问题)\r\n9. [关于多进程速度问题？](https://github.com/lancopku/pkuseg-python/wiki/FAQ#9-关于多进程速度问题)\r\n\r\n\r\n## 致谢\r\n\r\n感谢俞士汶教授（北京大学计算语言所）与邱立坤博士提供的训练数据集！\r\n\r\n## 作者\r\n\r\nRuixuan Luo （罗睿轩）,  Jingjing Xu（许晶晶）, Xuancheng Ren（任宣丞）, Yi Zhang（张艺）, Zhiyuan Zhang（张之远）, Bingzhen Wei（位冰镇）， Xu Sun （孙栩）  \r\n\r\n北京大学 [语言计算与机器学习研究组](http://lanco.pku.edu.cn/)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
        },
        {
          "name": "example.txt",
          "type": "blob",
          "size": 2.5478515625,
          "content": "\r\n\r\n以下为使用细领域模型的切分结果。\r\n在使用中，如果用户明确待分词的领域，可加载对应的模型进行分词。如果用户无法确定具体领域，推荐使用在混合领域上训练的通用模型。\r\n\r\n\r\n\r\n医药领域分词示例：\r\n\r\n    医生 工具 通常 包括 病历 管理 、 药品 信息 查询 、 临床 指南 、 前沿 的 医学 资讯 。\r\n    医联 平台 ： 包括 挂号 预约 查看 院内 信息 化验单 等 ， 目前 出现 与 微信 、 支付宝 结合的 趋势 。\r\n    甲状腺功能减退症 简称 甲减 ， 是 甲状腺 制造 的 甲状腺激素 过少 而 引发 的疾病 。\r\n\r\n\r\n\r\n旅游领域分词示例：\r\n    \r\n    在 这里 可以 俯瞰 维多利亚港 的 香港岛 ， 九龙 半岛 两岸 ， 美景 无敌 。\r\n    以往 去 香港 都 是 去 旺角 尖沙咀 中环 等等 闹市 地区 。\r\n    初 至 重庆 ， 我 就 来到 了 洪崖洞 ， 在 这里 ， 旧时 城墙 、 吊脚楼 仿 若 镶嵌 在 现代 钢筋 水泥 城市 间 的 一 枚 朴玉 。\r\n    首都 机场 提供 了 手机 值机 、 自助 值机 、 自助 行李 托运 、 自助 通关 等 多种 便捷 举措 。\r\n   \r\n   \r\n      \r\n网络领域分词示例：\r\n    \r\n    视频 中 ， 胡可 负责 录制 ， 沙溢 则 带 着 安吉 和 小鱼儿 坐在 沙发 上 唱 着 《 学猫 叫 》 ， 小鱼儿 还 争 着 要 坐在 C位 ， 一家人 其乐融融\r\n    【 这是 我 的 世界 ， 你 还 未 见 过 】 欢迎 来 参加 我 的 演唱会 听点 音乐\r\n    被 全家 套路 的 小鱼儿 也 太 可怜 了 ： 我 要求 C位 ！ ！ 我 不要 唱 “ 喵喵喵 ” 结果 七 秒 记忆 又 继续 唱 了 起来 哈哈 哈哈 哈哈 哈哈\r\n\r\n\r\n\r\n新闻领域分词示例：\r\n\r\n    乌克兰 一直 想 加入 北约 ， 并 不断 的 按照 西方 国家 的 要求 “ 改造 ” 自己 ， 据 乌克兰 之 声 2月20日 报道 称 ， 乌克兰 政府 正式 通过 最新 《 宪法 修正案 》 ， 正式 确定 乌克兰 将 加入 北约 作为 重要 国家 方针 ， 该 法 强调 ， \" 这项 法律 将 于 发布 次日 起 生效 \" 。\r\n    美国广播公司 网站 2月20日 报道 称 ， 特朗普 19日 在 推特 上 写 道 ： “ 正如 我 预测 的 那样 ， 主要 由 开放 边界 的 民主党 人和 激进 左派 主导 的 16个 州 已经 在 第九巡回法院 提起 诉讼 。 ” 他 不 忘 讽刺 加州 ： “ 加州 已 在 失控 的 高铁 项目 上 浪费 了 数十亿美元 ， 完全 没有 完成 的 希望 。 \r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n"
        },
        {
          "name": "pkuseg",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0205078125,
          "content": "numpy>=1.16.0\ncython\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.818359375,
          "content": "import setuptools\nimport os\nfrom distutils.extension import Extension\n\nimport numpy as np\n\ndef is_source_release(path):\n    return os.path.exists(os.path.join(path, \"PKG-INFO\"))\n\ndef setup_package():\n    root = os.path.abspath(os.path.dirname(__file__))\n\n    long_description = \"pkuseg-python\"\n\n    extensions = [\n        Extension(\n            \"pkuseg.inference\",\n            [\"pkuseg/inference.pyx\"],\n            include_dirs=[np.get_include()],\n            language=\"c++\"\n        ),\n        Extension(\n            \"pkuseg.feature_extractor\",\n            [\"pkuseg/feature_extractor.pyx\"],\n            include_dirs=[np.get_include()],\n        ),\n        Extension(\n            \"pkuseg.postag.feature_extractor\",\n            [\"pkuseg/postag/feature_extractor.pyx\"],\n            include_dirs=[np.get_include()],\n        ),\n    ]\n    \n    if not is_source_release(root):\n        from Cython.Build import cythonize\n        extensions = cythonize(extensions, annotate=True)\n\n\n    setuptools.setup(\n        name=\"pkuseg\",\n        version=\"0.0.25\",\n        author=\"Lanco\",\n        author_email=\"luoruixuan97@pku.edu.cn\",\n        description=\"A small package for Chinese word segmentation\",\n        long_description=long_description,\n        long_description_content_type=\"text/markdown\",\n        url=\"https://github.com/lancopku/pkuseg-python\",\n        packages=setuptools.find_packages(),\n        package_data={\"\": [\"*.txt*\", \"*.pkl\", \"*.npz\", \"*.pyx\", \"*.pxd\"]},\n        classifiers=[\n            \"Programming Language :: Python :: 3\",\n            \"License :: Other/Proprietary License\",\n            \"Operating System :: OS Independent\",\n        ],\n        install_requires=[\"cython\", \"numpy>=1.16.0\"],\n        setup_requires=[\"cython\", \"numpy>=1.16.0\"],\n        ext_modules=extensions,\n        zip_safe=False,\n    )\n\n\nif __name__ == \"__main__\":\n    setup_package()\n"
        },
        {
          "name": "tags.txt",
          "type": "blob",
          "size": 0.474609375,
          "content": "n   名词\nt   时间词\ns   处所词\nf   方位词\nm   数词\nq   量词\nb   区别词\nr   代词\nv   动词\na   形容词\nz   状态词\nd   副词\np   介词\nc   连词\nu   助词\ny   语气词\ne   叹词\no   拟声词\ni   成语\nl   习惯用语\nj   简称\nh   前接成分\nk   后接成分\ng   语素\nx   非语素字\nw   标点符号\nnr  人名\nns  地名\nnt  机构名称\nnx  外文字符\nnz  其它专名\nvd  副动词\nvn  名动词\nvx  形式动词\nad  副形词\nan  名形词\n"
        }
      ]
    }
  ]
}