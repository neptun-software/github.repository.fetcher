{
  "metadata": {
    "timestamp": 1736560749368,
    "page": 430,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bee-san/pyWhat",
      "stars": 6752,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.111328125,
          "content": "coverage:\n  status:\n    project:\n      default:\n        target: 90%\n    patch:\n      default:\n        target: 80%\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.10546875,
          "content": "[run]\nomit =\n    ./noxfile.py\n[report]\nexclude_lines = \n    pragma: no cover\n    if __name__ == .__main__.:\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.0537109375,
          "content": "[flake8]\nmax-line-length = 88\nignore = E501, E203, W503"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.5302734375,
          "content": "# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Dependency directories (remove the comment below to include it)\n# vendor/\n\n# Created by https://www.toptal.com/developers/gitignore/api/python\n# Edit at https://www.toptal.com/developers/gitignore?templates=python\n\n### Python ###\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\ntests/__pycache__/\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\npytestdebug.log\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\ndoc/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#poetry.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n# .env\n.env/\n.venv/\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\npythonenv*\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# operating system-related files\n# file properties cache/storage on macOS\n*.DS_Store\n# thumbnail cache on Windows\nThumbs.db\n\n# profiling data\n.prof\n\n\n# End of https://www.toptal.com/developers/gitignore/api/python\n\n# Code editor files\n.vscode\n.idea"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.0859375,
          "content": "Please read our wiki here:\nhttps://github.com/bee-san/pyWhat/wiki/Adding-your-own-Regex\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2314453125,
          "content": "FROM python:3.10-alpine\nRUN apk add --no-cache git \\\n    && pip install  --no-cache-dir git+https://github.com/bee-san/pyWhat \\\n    && apk del git \\\n    && rm -rf /var/cache/apk/*\nWORKDIR /workdir\nENTRYPOINT [ \"python\", \"-m\", \"pywhat\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "MIT License\n\nCopyright (c) 2021 - Present @bee-san\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.904296875,
          "content": "<p align='center'>\n<img src='images/logo.png'>\n<p align=\"center\">‚û°Ô∏è <a href=\"http://discord.skerritt.blog\">Discord</a> ‚¨ÖÔ∏è<br>\n<i>The easiest way to identify anything</i><br>\n<code>pip3 install pywhat && pywhat --help</code>\n</p>\n\n<p align=\"center\">\n  <a href=\"http://discord.skerritt.blog\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/754001738184392704\"></a> <a href=\"https://pypi.org/project/pywhat/\"><img alt=\"PyPI - Downloads\" src=\"https://pepy.tech/badge/pywhat/month\"></a>  <a href=\"https://twitter.com/bee_sec_san\"><img alt=\"Twitter Follow\" src=\"https://img.shields.io/twitter/follow/bee_sec_san?style=social\"></a> <a href=\"https://pypi.org/project/pywhat/\"><img alt=\"PyPI - Python Version\" src=\"https://img.shields.io/pypi/pyversions/pywhat\"></a> <a href=\"https://pypi.org/project/pywhat/\"><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/pywhat\"></a>\n</p>\n<hr>\n\n# ü§î `What` is this?\n\n![](images/main_demo.gif)\n\nImagine this: You come across some mysterious text üßô‚Äç‚ôÇÔ∏è `0x52908400098527886E0F7030069857D2E4169EE7` or `dQw4w9WgXcQ` and you wonder what it is. What do you do?\n\nWell, with `what` all you have to do is ask `what \"0x52908400098527886E0F7030069857D2E4169EE7\"` and `what` will tell you!\n\n`what`'s job is to **identify _what_ something is.** Whether it be a file or text! Or even the hex of a file! What about text _within_ files? We have that too! `what` is recursive, it will identify **everything** in text and more!\n\n# Installation\n\n## üî® Using pip\n\n```$ pip3 install pywhat```\n\nor\n\n```shell\n# installs optional dependencies that may improve the speed\n$ pip3 install pywhat[optimize] \n```\n\n## üî® On Mac?\n\n```$ brew install pywhat```\n\nOr for our MacPorts fans:\n\n```$ sudo port install pywhat```\n\n# ‚öô Use Cases\n\n## ü¶† Wannacry\n\n![](images/wannacry_demo.png)\n\nYou come across a new piece of malware called WantToCry. You think back to Wannacry and remember it was stopped because a researcher found a kill-switch in the code.\n\nWhen a domain, hardcoded into Wannacry, was registered the virus would stop.\n\nYou use `What` to identify all the domains in the malware, and use a domain registrar API to register all the domains.\n\n## ü¶à Faster Analysis of Pcap files\n\n![](images/pcap_demo.gif)\n\nSay you have a `.pcap` file from a network attack. `What` can identify this and quickly find you:\n\n- All URLs\n- Emails\n- Phone numbers\n- Credit card numbers\n- Cryptocurrency addresses\n- Social Security Numbers\n- and much more.\n\nWith `what`, you can identify the important things in the pcap in seconds, not minutes.\n\n## üêû Bug Bounties\n\nYou can use PyWhat to scan for things that'll make you money via bug bounties like:\n* API Keys\n* Webhooks\n* Credentials\n* and more\n\nRun PyWhat with:\n\n```\npywhat --include \"Bug Bounty\" TEXT\n```\n\nTo do this.\n\nHere are some examples üëá\n\n### üêô GitHub Repository API Key Leaks\n\n1. Download all GitHub repositories of an organisation\n2. Search for anything that you can submit as a bounty, like API keys\n\n```shell\n# Download all repositories\nGHUSER=CHANGEME; curl \"https://api.github.com/users/$GHUSER/repos?per_page=1000\" | grep -o 'git@[^\"]*' | xargs -L1 git clone\n\n# Will print when it finds things.\n# Loops over all files in current directory.\nfind . -type f -execdir pywhat --include 'Bug Bounty' {} \\;\n```\n\n### üï∑ Scan all web pages for bounties\n\n```shell\n# Recursively download all web pages of a site\nwget -r -np -k https://skerritt.blog\n\n# Will print when it finds things.\n# Loops over all files in current directory.\nfind . -type f -execdir pywhat --include 'Bug Bounty' {} \\;\n```\n\n**PS**: We support more filters than just bug bounties! Run `pywhat --tags`\n\n## üåå Other Features\n\nAnytime you have a file and you want to find structured data in it that's useful, `What` is for you.\n\nOr if you come across some piece of text and you don't know what it is, `What` will tell you.\n\n### üìÅ File & Directory Handling\n\n**File Opening** You can pass in a file path by `what 'this/is/a/file/path'`. `What` is smart enough to figure out it's a file!\n\nWhat about a whole **directory**? `What` can handle that too! It will **recursively** search for files and output everything you need!\n\n### üîç Filtering your output\n\nSometimes, you only care about seeing things which are related to AWS. Or bug bounties, or cryptocurrencies!\n\nYou can filter output by using `what --rarity 0.2:0.8 --include Identifiers,URL https://skerritt.blog`. Use `what --help` to get more information.\n\nTo see all filters, run `pywhat --tags`! You can also combine them, for example to see all cryptocurrency wallets minus Ripple you can do:\n\n```console\npywhat --include \"Cryptocurrency Wallet\" --exclude \"Ripple Wallet\" 1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY\n```\n\n### üëΩ Sorting, Exporting, and more!\n\n**Sorting** You can sort the output by using `what -k rarity --reverse TEXT`. Use `what --help` to get more information.\n\n**Exporting** You can export to json using `what --json` and results can be sent directly to a file using `what --json > file.json`.\n\n**Boundaryless mode** `What` has a special mode to match identifiable information within strings. By default, it is enabled in CLI but disabled in API. Use `what --help` or refer to [API Documentation](https://github.com/bee-san/pyWhat/wiki/API) for more information.\n\n\n# üçï API\n\nPyWhat has an API! Click here [https://github.com/bee-san/pyWhat/wiki/API](https://github.com/bee-san/pyWhat/wiki/API) to read about it.\n\n# üëæ Contributing\n\n`what` not only thrives on contributors, but can't exist without them! If you want to add a new regex to check for things, you can read our documentation [here](https://github.com/bee-san/what/wiki/Adding-your-own-Regex)\n\nWe ask contributors to join the Discord for quicker discussions, but it's not needed:\n<a href=\"http://discord.skerritt.blog\"><img alt=\"Discord\" src=\"https://img.shields.io/discord/754001738184392704\"></a>\n\n# üôè Thanks\n\nWe would like to thank [Dora](https://github.com/sdushantha/dora) for their work on a bug bounty specific regex database which we have used."
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 0.1298828125,
          "content": "import logging\n\n\ndef pytest_configure(config):\n    # Silence Flake8 warnings\n    logging.getLogger(\"flake8\").setLevel(logging.ERROR)\n"
        },
        {
          "name": "fixtures",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "noxfile.py",
          "type": "blob",
          "size": 1.9111328125,
          "content": "\"\"\"Nox sessions.\"\"\"\r\nfrom os import environ\r\nfrom typing import Any\r\n\r\nimport nox\r\nfrom nox.sessions import Session\r\n\r\nnox.options.sessions = [\"tests\"]\r\nif environ.get(\"CI\", None) == \"true\":\r\n    nox.options.sessions.append(\"coverage\")\r\nlocations = \"src\", \"tests\", \"noxfile.py\", \"docs/conf.py\"\r\n\r\n\r\ndef install_with_constraints(session: Session, *args: str, **kwargs: Any) -> None:\r\n    \"\"\"Install packages constrained by Poetry's lock file.\r\n    This function is a wrapper for nox.sessions.Session.install. It\r\n    invokes pip to install packages inside of the session's virtualenv.\r\n    Additionally, pip is passed a constraints file generated from\r\n    Poetry's lock file, to ensure that the packages are pinned to the\r\n    versions specified in poetry.lock. This allows you to manage the\r\n    packages as Poetry development dependencies.\r\n    Arguments:\r\n        session: The Session object.\r\n        args: Command-line arguments for pip.\r\n        kwargs: Additional keyword arguments for Session.install.\r\n    \"\"\"\r\n    session.run(\r\n        \"poetry\",\r\n        \"export\",\r\n        \"--without-hashes\",\r\n        \"--dev\",\r\n        \"--format=requirements.txt\",\r\n        \"--output=requirements.txt\",\r\n        external=True,\r\n    )\r\n    session.install(\"--constraint=requirements.txt\", *args, **kwargs)\r\n\r\n\r\n@nox.session\r\ndef tests(session: Session) -> None:\r\n    \"\"\"Run the test suite.\"\"\"\r\n    session.run(\"poetry\", \"install\", \"--no-dev\", external=True)\r\n    install_with_constraints(\r\n        session,\r\n        \"pytest\",\r\n        \"pytest-black\",\r\n        \"pytest-cov\",\r\n        \"pytest-isort\",\r\n        \"pytest-flake8\",\r\n        \"pytest-mypy\",\r\n        \"types-requests\",\r\n        \"types-orjson\",\r\n    )\r\n    session.run(\"pytest\", \"--cov=./\", \"--cov-report=xml\")\r\n\r\n\r\n@nox.session\r\ndef coverage(session: Session) -> None:\r\n    \"\"\"Upload coverage data.\"\"\"\r\n    install_with_constraints(session, \"codecov\")\r\n    session.run(\"codecov\", \"--env\", \"OS\", \"PYTHON\")\r\n"
        },
        {
          "name": "poetry.lock",
          "type": "blob",
          "size": 38.91015625,
          "content": "[[package]]\nname = \"atomicwrites\"\nversion = \"1.4.0\"\ndescription = \"Atomic file writes.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[[package]]\nname = \"attrs\"\nversion = \"21.4.0\"\ndescription = \"Classes Without Boilerplate\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\n\n[package.extras]\ndev = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pympler\", \"pytest (>=4.3.0)\", \"six\", \"mypy\", \"pytest-mypy-plugins\", \"zope.interface\", \"furo\", \"sphinx\", \"sphinx-notfound-page\", \"pre-commit\", \"cloudpickle\"]\ndocs = [\"furo\", \"sphinx\", \"zope.interface\", \"sphinx-notfound-page\"]\ntests = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pympler\", \"pytest (>=4.3.0)\", \"six\", \"mypy\", \"pytest-mypy-plugins\", \"zope.interface\", \"cloudpickle\"]\ntests_no_zope = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pympler\", \"pytest (>=4.3.0)\", \"six\", \"mypy\", \"pytest-mypy-plugins\", \"cloudpickle\"]\n\n[[package]]\nname = \"black\"\nversion = \"22.3.0\"\ndescription = \"The uncompromising code formatter.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6.2\"\n\n[package.dependencies]\nclick = \">=8.0.0\"\nmypy-extensions = \">=0.4.3\"\npathspec = \">=0.9.0\"\nplatformdirs = \">=2\"\ntomli = {version = \">=1.1.0\", markers = \"python_version < \\\"3.11\\\"\"}\ntyped-ast = {version = \">=1.4.2\", markers = \"python_version < \\\"3.8\\\" and implementation_name == \\\"cpython\\\"\"}\ntyping-extensions = {version = \">=3.10.0.0\", markers = \"python_version < \\\"3.10\\\"\"}\n\n[package.extras]\ncolorama = [\"colorama (>=0.4.3)\"]\nd = [\"aiohttp (>=3.7.4)\"]\njupyter = [\"ipython (>=7.8.0)\", \"tokenize-rt (>=3.2.0)\"]\nuvloop = [\"uvloop (>=0.15.2)\"]\n\n[[package]]\nname = \"certifi\"\nversion = \"2021.10.8\"\ndescription = \"Python package for providing Mozilla's CA Bundle.\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"charset-normalizer\"\nversion = \"2.0.12\"\ndescription = \"The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.5.0\"\n\n[package.extras]\nunicode_backport = [\"unicodedata2\"]\n\n[[package]]\nname = \"click\"\nversion = \"8.1.2\"\ndescription = \"Composable command line interface toolkit\"\ncategory = \"main\"\noptional = false\npython-versions = \">=3.7\"\n\n[package.dependencies]\ncolorama = {version = \"*\", markers = \"platform_system == \\\"Windows\\\"\"}\nimportlib-metadata = {version = \"*\", markers = \"python_version < \\\"3.8\\\"\"}\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.4\"\ndescription = \"Cross-platform colored terminal text.\"\ncategory = \"main\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\n\n[[package]]\nname = \"commonmark\"\nversion = \"0.9.1\"\ndescription = \"Python parser for the CommonMark Markdown spec\"\ncategory = \"main\"\noptional = false\npython-versions = \"*\"\n\n[package.extras]\ntest = [\"flake8 (==3.7.8)\", \"hypothesis (==3.55.3)\"]\n\n[[package]]\nname = \"filelock\"\nversion = \"3.6.0\"\ndescription = \"A platform independent file lock.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.7\"\n\n[package.extras]\ndocs = [\"furo (>=2021.8.17b43)\", \"sphinx (>=4.1)\", \"sphinx-autodoc-typehints (>=1.12)\"]\ntesting = [\"covdefaults (>=1.2.0)\", \"coverage (>=4)\", \"pytest (>=4)\", \"pytest-cov\", \"pytest-timeout (>=1.4.2)\"]\n\n[[package]]\nname = \"flake8\"\nversion = \"4.0.1\"\ndescription = \"the modular source code checker: pep8 pyflakes and co\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\nimportlib-metadata = {version = \"<4.3\", markers = \"python_version < \\\"3.8\\\"\"}\nmccabe = \">=0.6.0,<0.7.0\"\npycodestyle = \">=2.8.0,<2.9.0\"\npyflakes = \">=2.4.0,<2.5.0\"\n\n[[package]]\nname = \"idna\"\nversion = \"3.3\"\ndescription = \"Internationalized Domain Names in Applications (IDNA)\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.5\"\n\n[[package]]\nname = \"importlib-metadata\"\nversion = \"4.2.0\"\ndescription = \"Read metadata from Python packages\"\ncategory = \"main\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\ntyping-extensions = {version = \">=3.6.4\", markers = \"python_version < \\\"3.8\\\"\"}\nzipp = \">=0.5\"\n\n[package.extras]\ndocs = [\"sphinx\", \"jaraco.packaging (>=8.2)\", \"rst.linker (>=1.9)\"]\ntesting = [\"pytest (>=4.6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-flake8\", \"pytest-cov\", \"pytest-enabler (>=1.0.1)\", \"packaging\", \"pep517\", \"pyfakefs\", \"flufl.flake8\", \"pytest-black (>=0.3.7)\", \"pytest-mypy\", \"importlib-resources (>=1.3)\"]\n\n[[package]]\nname = \"iniconfig\"\nversion = \"1.1.1\"\ndescription = \"iniconfig: brain-dead simple config-ini parsing\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"isort\"\nversion = \"5.10.1\"\ndescription = \"A Python utility / library to sort Python imports.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6.1,<4.0\"\n\n[package.extras]\npipfile_deprecated_finder = [\"pipreqs\", \"requirementslib\"]\nrequirements_deprecated_finder = [\"pipreqs\", \"pip-api\"]\ncolors = [\"colorama (>=0.4.3,<0.5.0)\"]\nplugins = [\"setuptools\"]\n\n[[package]]\nname = \"mccabe\"\nversion = \"0.6.1\"\ndescription = \"McCabe checker, plugin for flake8\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"mypy\"\nversion = \"0.942\"\ndescription = \"Optional static typing for Python\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\nmypy-extensions = \">=0.4.3\"\ntomli = \">=1.1.0\"\ntyped-ast = {version = \">=1.4.0,<2\", markers = \"python_version < \\\"3.8\\\"\"}\ntyping-extensions = \">=3.10\"\n\n[package.extras]\ndmypy = [\"psutil (>=4.0)\"]\npython2 = [\"typed-ast (>=1.4.0,<2)\"]\nreports = [\"lxml\"]\n\n[[package]]\nname = \"mypy-extensions\"\nversion = \"0.4.3\"\ndescription = \"Experimental type system extensions for programs checked with the mypy typechecker.\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"orjson\"\nversion = \"3.6.8\"\ndescription = \"Fast, correct Python JSON library supporting dataclasses, datetimes, and numpy\"\ncategory = \"main\"\noptional = true\npython-versions = \">=3.7\"\n\n[[package]]\nname = \"packaging\"\nversion = \"21.3\"\ndescription = \"Core utilities for Python packages\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\npyparsing = \">=2.0.2,<3.0.5 || >3.0.5\"\n\n[[package]]\nname = \"pathspec\"\nversion = \"0.9.0\"\ndescription = \"Utility library for gitignore style pattern matching of file paths.\"\ncategory = \"dev\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,>=2.7\"\n\n[[package]]\nname = \"platformdirs\"\nversion = \"2.5.2\"\ndescription = \"A small Python module for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.7\"\n\n[package.extras]\ndocs = [\"furo (>=2021.7.5b38)\", \"proselint (>=0.10.2)\", \"sphinx-autodoc-typehints (>=1.12)\", \"sphinx (>=4)\"]\ntest = [\"appdirs (==1.4.4)\", \"pytest-cov (>=2.7)\", \"pytest-mock (>=3.6)\", \"pytest (>=6)\"]\n\n[[package]]\nname = \"pluggy\"\nversion = \"1.0.0\"\ndescription = \"plugin and hook calling mechanisms for python\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\nimportlib-metadata = {version = \">=0.12\", markers = \"python_version < \\\"3.8\\\"\"}\n\n[package.extras]\ndev = [\"pre-commit\", \"tox\"]\ntesting = [\"pytest\", \"pytest-benchmark\"]\n\n[[package]]\nname = \"py\"\nversion = \"1.11.0\"\ndescription = \"library with cross-python path, ini-parsing, io, code, log facilities\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\n\n[[package]]\nname = \"pycodestyle\"\nversion = \"2.8.0\"\ndescription = \"Python style guide checker\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\n\n[[package]]\nname = \"pyflakes\"\nversion = \"2.4.0\"\ndescription = \"passive checker of Python programs\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[[package]]\nname = \"pygments\"\nversion = \"2.12.0\"\ndescription = \"Pygments is a syntax highlighting package written in Python.\"\ncategory = \"main\"\noptional = false\npython-versions = \">=3.6\"\n\n[[package]]\nname = \"pyparsing\"\nversion = \"3.0.8\"\ndescription = \"pyparsing module - Classes and methods to define and execute parsing grammars\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6.8\"\n\n[package.extras]\ndiagrams = [\"railroad-diagrams\", \"jinja2\"]\n\n[[package]]\nname = \"pytest\"\nversion = \"7.1.2\"\ndescription = \"pytest: simple powerful testing with Python\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.7\"\n\n[package.dependencies]\natomicwrites = {version = \">=1.0\", markers = \"sys_platform == \\\"win32\\\"\"}\nattrs = \">=19.2.0\"\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\nimportlib-metadata = {version = \">=0.12\", markers = \"python_version < \\\"3.8\\\"\"}\niniconfig = \"*\"\npackaging = \"*\"\npluggy = \">=0.12,<2.0\"\npy = \">=1.8.2\"\ntomli = \">=1.0.0\"\n\n[package.extras]\ntesting = [\"argcomplete\", \"hypothesis (>=3.56)\", \"mock\", \"nose\", \"pygments (>=2.7.2)\", \"requests\", \"xmlschema\"]\n\n[[package]]\nname = \"pytest-black\"\nversion = \"0.3.12\"\ndescription = \"A pytest plugin to enable format checking with black\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7\"\n\n[package.dependencies]\nblack = {version = \"*\", markers = \"python_version >= \\\"3.6\\\"\"}\npytest = \">=3.5.0\"\ntoml = \"*\"\n\n[[package]]\nname = \"pytest-flake8\"\nversion = \"1.1.1\"\ndescription = \"pytest plugin to check FLAKE8 requirements\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[package.dependencies]\nflake8 = \">=4.0\"\npytest = \">=7.0\"\n\n[[package]]\nname = \"pytest-isort\"\nversion = \"2.0.0\"\ndescription = \"py.test plugin to check import ordering using isort\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[package.dependencies]\nisort = \">=4.0\"\n\n[package.extras]\ntests = [\"mock\"]\n\n[[package]]\nname = \"pytest-mypy\"\nversion = \"0.8.1\"\ndescription = \"Mypy static type checker plugin for Pytest\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.5\"\n\n[package.dependencies]\nattrs = \">=19.0\"\nfilelock = \">=3.0\"\nmypy = [\n    {version = \">=0.500\", markers = \"python_version < \\\"3.8\\\"\"},\n    {version = \">=0.700\", markers = \"python_version >= \\\"3.8\\\" and python_version < \\\"3.9\\\"\"},\n    {version = \">=0.780\", markers = \"python_version >= \\\"3.9\\\"\"},\n]\npytest = \">=3.5\"\n\n[[package]]\nname = \"requests\"\nversion = \"2.27.1\"\ndescription = \"Python HTTP for Humans.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, !=3.5.*\"\n\n[package.dependencies]\ncertifi = \">=2017.4.17\"\ncharset-normalizer = {version = \">=2.0.0,<2.1.0\", markers = \"python_version >= \\\"3\\\"\"}\nidna = {version = \">=2.5,<4\", markers = \"python_version >= \\\"3\\\"\"}\nurllib3 = \">=1.21.1,<1.27\"\n\n[package.extras]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7)\", \"win-inet-pton\"]\nuse_chardet_on_py3 = [\"chardet (>=3.0.2,<5)\"]\n\n[[package]]\nname = \"rich\"\nversion = \"12.2.0\"\ndescription = \"Render rich text, tables, progress bars, syntax highlighting, markdown and more to the terminal\"\ncategory = \"main\"\noptional = false\npython-versions = \">=3.6.3,<4.0.0\"\n\n[package.dependencies]\ncommonmark = \">=0.9.0,<0.10.0\"\npygments = \">=2.6.0,<3.0.0\"\ntyping-extensions = {version = \">=4.0.0,<5.0\", markers = \"python_version < \\\"3.9\\\"\"}\n\n[package.extras]\njupyter = [\"ipywidgets (>=7.5.1,<8.0.0)\"]\n\n[[package]]\nname = \"toml\"\nversion = \"0.10.2\"\ndescription = \"Python Library for Tom's Obvious, Minimal Language\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*\"\n\n[[package]]\nname = \"tomli\"\nversion = \"2.0.1\"\ndescription = \"A lil' TOML parser\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.7\"\n\n[[package]]\nname = \"typed-ast\"\nversion = \"1.5.3\"\ndescription = \"a fork of Python 2 and 3 ast modules with type comment support\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[[package]]\nname = \"types-orjson\"\nversion = \"3.6.2\"\ndescription = \"Typing stubs for orjson\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"types-requests\"\nversion = \"2.27.20\"\ndescription = \"Typing stubs for requests\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[package.dependencies]\ntypes-urllib3 = \"<1.27\"\n\n[[package]]\nname = \"types-urllib3\"\nversion = \"1.26.13\"\ndescription = \"Typing stubs for urllib3\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"typing-extensions\"\nversion = \"4.2.0\"\ndescription = \"Backported and Experimental Type Hints for Python 3.7+\"\ncategory = \"main\"\noptional = false\npython-versions = \">=3.7\"\n\n[[package]]\nname = \"urllib3\"\nversion = \"1.26.9\"\ndescription = \"HTTP library with thread-safe connection pooling, file post, and more.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*, <4\"\n\n[package.extras]\nbrotli = [\"brotlicffi (>=0.8.0)\", \"brotli (>=1.0.9)\", \"brotlipy (>=0.6.0)\"]\nsecure = [\"pyOpenSSL (>=0.14)\", \"cryptography (>=1.3.4)\", \"idna (>=2.0.0)\", \"certifi\", \"ipaddress\"]\nsocks = [\"PySocks (>=1.5.6,!=1.5.7,<2.0)\"]\n\n[[package]]\nname = \"zipp\"\nversion = \"3.8.0\"\ndescription = \"Backport of pathlib-compatible object wrapper for zip files\"\ncategory = \"main\"\noptional = false\npython-versions = \">=3.7\"\n\n[package.extras]\ndocs = [\"sphinx\", \"jaraco.packaging (>=9)\", \"rst.linker (>=1.9)\"]\ntesting = [\"pytest (>=6)\", \"pytest-checkdocs (>=2.4)\", \"pytest-flake8\", \"pytest-cov\", \"pytest-enabler (>=1.0.1)\", \"jaraco.itertools\", \"func-timeout\", \"pytest-black (>=0.3.7)\", \"pytest-mypy (>=0.9.1)\"]\n\n[extras]\noptimize = [\"orjson\"]\n\n[metadata]\nlock-version = \"1.1\"\npython-versions = \"^3.7\"\ncontent-hash = \"c7df16c9b4c5c23eb5259af6d9d30561ebd28eb8f201a748f73580d1f3811245\"\n\n[metadata.files]\natomicwrites = [\n    {file = \"atomicwrites-1.4.0-py2.py3-none-any.whl\", hash = \"sha256:6d1784dea7c0c8d4a5172b6c620f40b6e4cbfdf96d783691f2e1302a7b88e197\"},\n    {file = \"atomicwrites-1.4.0.tar.gz\", hash = \"sha256:ae70396ad1a434f9c7046fd2dd196fc04b12f9e91ffb859164193be8b6168a7a\"},\n]\nattrs = [\n    {file = \"attrs-21.4.0-py2.py3-none-any.whl\", hash = \"sha256:2d27e3784d7a565d36ab851fe94887c5eccd6a463168875832a1be79c82828b4\"},\n    {file = \"attrs-21.4.0.tar.gz\", hash = \"sha256:626ba8234211db98e869df76230a137c4c40a12d72445c45d5f5b716f076e2fd\"},\n]\nblack = [\n    {file = \"black-22.3.0-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:2497f9c2386572e28921fa8bec7be3e51de6801f7459dffd6e62492531c47e09\"},\n    {file = \"black-22.3.0-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:5795a0375eb87bfe902e80e0c8cfaedf8af4d49694d69161e5bd3206c18618bb\"},\n    {file = \"black-22.3.0-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:e3556168e2e5c49629f7b0f377070240bd5511e45e25a4497bb0073d9dda776a\"},\n    {file = \"black-22.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:67c8301ec94e3bcc8906740fe071391bce40a862b7be0b86fb5382beefecd968\"},\n    {file = \"black-22.3.0-cp310-cp310-win_amd64.whl\", hash = \"sha256:fd57160949179ec517d32ac2ac898b5f20d68ed1a9c977346efbac9c2f1e779d\"},\n    {file = \"black-22.3.0-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:cc1e1de68c8e5444e8f94c3670bb48a2beef0e91dddfd4fcc29595ebd90bb9ce\"},\n    {file = \"black-22.3.0-cp36-cp36m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6d2fc92002d44746d3e7db7cf9313cf4452f43e9ea77a2c939defce3b10b5c82\"},\n    {file = \"black-22.3.0-cp36-cp36m-win_amd64.whl\", hash = \"sha256:a6342964b43a99dbc72f72812bf88cad8f0217ae9acb47c0d4f141a6416d2d7b\"},\n    {file = \"black-22.3.0-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:328efc0cc70ccb23429d6be184a15ce613f676bdfc85e5fe8ea2a9354b4e9015\"},\n    {file = \"black-22.3.0-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:06f9d8846f2340dfac80ceb20200ea5d1b3f181dd0556b47af4e8e0b24fa0a6b\"},\n    {file = \"black-22.3.0-cp37-cp37m-win_amd64.whl\", hash = \"sha256:ad4efa5fad66b903b4a5f96d91461d90b9507a812b3c5de657d544215bb7877a\"},\n    {file = \"black-22.3.0-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:e8477ec6bbfe0312c128e74644ac8a02ca06bcdb8982d4ee06f209be28cdf163\"},\n    {file = \"black-22.3.0-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:637a4014c63fbf42a692d22b55d8ad6968a946b4a6ebc385c5505d9625b6a464\"},\n    {file = \"black-22.3.0-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:863714200ada56cbc366dc9ae5291ceb936573155f8bf8e9de92aef51f3ad0f0\"},\n    {file = \"black-22.3.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:10dbe6e6d2988049b4655b2b739f98785a884d4d6b85bc35133a8fb9a2233176\"},\n    {file = \"black-22.3.0-cp38-cp38-win_amd64.whl\", hash = \"sha256:cee3e11161dde1b2a33a904b850b0899e0424cc331b7295f2a9698e79f9a69a0\"},\n    {file = \"black-22.3.0-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:5891ef8abc06576985de8fa88e95ab70641de6c1fca97e2a15820a9b69e51b20\"},\n    {file = \"black-22.3.0-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:30d78ba6bf080eeaf0b7b875d924b15cd46fec5fd044ddfbad38c8ea9171043a\"},\n    {file = \"black-22.3.0-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:ee8f1f7228cce7dffc2b464f07ce769f478968bfb3dd1254a4c2eeed84928aad\"},\n    {file = \"black-22.3.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:6ee227b696ca60dd1c507be80a6bc849a5a6ab57ac7352aad1ffec9e8b805f21\"},\n    {file = \"black-22.3.0-cp39-cp39-win_amd64.whl\", hash = \"sha256:9b542ced1ec0ceeff5b37d69838106a6348e60db7b8fdd245294dc1d26136265\"},\n    {file = \"black-22.3.0-py3-none-any.whl\", hash = \"sha256:bc58025940a896d7e5356952228b68f793cf5fcb342be703c3a2669a1488cb72\"},\n    {file = \"black-22.3.0.tar.gz\", hash = \"sha256:35020b8886c022ced9282b51b5a875b6d1ab0c387b31a065b84db7c33085ca79\"},\n]\ncertifi = [\n    {file = \"certifi-2021.10.8-py2.py3-none-any.whl\", hash = \"sha256:d62a0163eb4c2344ac042ab2bdf75399a71a2d8c7d47eac2e2ee91b9d6339569\"},\n    {file = \"certifi-2021.10.8.tar.gz\", hash = \"sha256:78884e7c1d4b00ce3cea67b44566851c4343c120abd683433ce934a68ea58872\"},\n]\ncharset-normalizer = [\n    {file = \"charset-normalizer-2.0.12.tar.gz\", hash = \"sha256:2857e29ff0d34db842cd7ca3230549d1a697f96ee6d3fb071cfa6c7393832597\"},\n    {file = \"charset_normalizer-2.0.12-py3-none-any.whl\", hash = \"sha256:6881edbebdb17b39b4eaaa821b438bf6eddffb4468cf344f09f89def34a8b1df\"},\n]\nclick = [\n    {file = \"click-8.1.2-py3-none-any.whl\", hash = \"sha256:24e1a4a9ec5bf6299411369b208c1df2188d9eb8d916302fe6bf03faed227f1e\"},\n    {file = \"click-8.1.2.tar.gz\", hash = \"sha256:479707fe14d9ec9a0757618b7a100a0ae4c4e236fac5b7f80ca68028141a1a72\"},\n]\ncolorama = [\n    {file = \"colorama-0.4.4-py2.py3-none-any.whl\", hash = \"sha256:9f47eda37229f68eee03b24b9748937c7dc3868f906e8ba69fbcbdd3bc5dc3e2\"},\n    {file = \"colorama-0.4.4.tar.gz\", hash = \"sha256:5941b2b48a20143d2267e95b1c2a7603ce057ee39fd88e7329b0c292aa16869b\"},\n]\ncommonmark = [\n    {file = \"commonmark-0.9.1-py2.py3-none-any.whl\", hash = \"sha256:da2f38c92590f83de410ba1a3cbceafbc74fee9def35f9251ba9a971d6d66fd9\"},\n    {file = \"commonmark-0.9.1.tar.gz\", hash = \"sha256:452f9dc859be7f06631ddcb328b6919c67984aca654e5fefb3914d54691aed60\"},\n]\nfilelock = [\n    {file = \"filelock-3.6.0-py3-none-any.whl\", hash = \"sha256:f8314284bfffbdcfa0ff3d7992b023d4c628ced6feb957351d4c48d059f56bc0\"},\n    {file = \"filelock-3.6.0.tar.gz\", hash = \"sha256:9cd540a9352e432c7246a48fe4e8712b10acb1df2ad1f30e8c070b82ae1fed85\"},\n]\nflake8 = [\n    {file = \"flake8-4.0.1-py2.py3-none-any.whl\", hash = \"sha256:479b1304f72536a55948cb40a32dce8bb0ffe3501e26eaf292c7e60eb5e0428d\"},\n    {file = \"flake8-4.0.1.tar.gz\", hash = \"sha256:806e034dda44114815e23c16ef92f95c91e4c71100ff52813adf7132a6ad870d\"},\n]\nidna = [\n    {file = \"idna-3.3-py3-none-any.whl\", hash = \"sha256:84d9dd047ffa80596e0f246e2eab0b391788b0503584e8945f2368256d2735ff\"},\n    {file = \"idna-3.3.tar.gz\", hash = \"sha256:9d643ff0a55b762d5cdb124b8eaa99c66322e2157b69160bc32796e824360e6d\"},\n]\nimportlib-metadata = [\n    {file = \"importlib_metadata-4.2.0-py3-none-any.whl\", hash = \"sha256:057e92c15bc8d9e8109738a48db0ccb31b4d9d5cfbee5a8670879a30be66304b\"},\n    {file = \"importlib_metadata-4.2.0.tar.gz\", hash = \"sha256:b7e52a1f8dec14a75ea73e0891f3060099ca1d8e6a462a4dff11c3e119ea1b31\"},\n]\niniconfig = [\n    {file = \"iniconfig-1.1.1-py2.py3-none-any.whl\", hash = \"sha256:011e24c64b7f47f6ebd835bb12a743f2fbe9a26d4cecaa7f53bc4f35ee9da8b3\"},\n    {file = \"iniconfig-1.1.1.tar.gz\", hash = \"sha256:bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32\"},\n]\nisort = [\n    {file = \"isort-5.10.1-py3-none-any.whl\", hash = \"sha256:6f62d78e2f89b4500b080fe3a81690850cd254227f27f75c3a0c491a1f351ba7\"},\n    {file = \"isort-5.10.1.tar.gz\", hash = \"sha256:e8443a5e7a020e9d7f97f1d7d9cd17c88bcb3bc7e218bf9cf5095fe550be2951\"},\n]\nmccabe = [\n    {file = \"mccabe-0.6.1-py2.py3-none-any.whl\", hash = \"sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42\"},\n    {file = \"mccabe-0.6.1.tar.gz\", hash = \"sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f\"},\n]\nmypy = [\n    {file = \"mypy-0.942-cp310-cp310-macosx_10_9_universal2.whl\", hash = \"sha256:5bf44840fb43ac4074636fd47ee476d73f0039f4f54e86d7265077dc199be24d\"},\n    {file = \"mypy-0.942-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:dcd955f36e0180258a96f880348fbca54ce092b40fbb4b37372ae3b25a0b0a46\"},\n    {file = \"mypy-0.942-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:6776e5fa22381cc761df53e7496a805801c1a751b27b99a9ff2f0ca848c7eca0\"},\n    {file = \"mypy-0.942-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:edf7237137a1a9330046dbb14796963d734dd740a98d5e144a3eb1d267f5f9ee\"},\n    {file = \"mypy-0.942-cp310-cp310-win_amd64.whl\", hash = \"sha256:64235137edc16bee6f095aba73be5334677d6f6bdb7fa03cfab90164fa294a17\"},\n    {file = \"mypy-0.942-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:b840cfe89c4ab6386c40300689cd8645fc8d2d5f20101c7f8bd23d15fca14904\"},\n    {file = \"mypy-0.942-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:2b184db8c618c43c3a31b32ff00cd28195d39e9c24e7c3b401f3db7f6e5767f5\"},\n    {file = \"mypy-0.942-cp36-cp36m-win_amd64.whl\", hash = \"sha256:1a0459c333f00e6a11cbf6b468b870c2b99a906cb72d6eadf3d1d95d38c9352c\"},\n    {file = \"mypy-0.942-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:4c3e497588afccfa4334a9986b56f703e75793133c4be3a02d06a3df16b67a58\"},\n    {file = \"mypy-0.942-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:6f6ad963172152e112b87cc7ec103ba0f2db2f1cd8997237827c052a3903eaa6\"},\n    {file = \"mypy-0.942-cp37-cp37m-win_amd64.whl\", hash = \"sha256:0e2dd88410937423fba18e57147dd07cd8381291b93d5b1984626f173a26543e\"},\n    {file = \"mypy-0.942-cp38-cp38-macosx_10_9_universal2.whl\", hash = \"sha256:246e1aa127d5b78488a4a0594bd95f6d6fb9d63cf08a66dafbff8595d8891f67\"},\n    {file = \"mypy-0.942-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:d8d3ba77e56b84cd47a8ee45b62c84b6d80d32383928fe2548c9a124ea0a725c\"},\n    {file = \"mypy-0.942-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:2bc249409a7168d37c658e062e1ab5173300984a2dada2589638568ddc1db02b\"},\n    {file = \"mypy-0.942-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:9521c1265ccaaa1791d2c13582f06facf815f426cd8b07c3a485f486a8ffc1f3\"},\n    {file = \"mypy-0.942-cp38-cp38-win_amd64.whl\", hash = \"sha256:e865fec858d75b78b4d63266c9aff770ecb6a39dfb6d6b56c47f7f8aba6baba8\"},\n    {file = \"mypy-0.942-cp39-cp39-macosx_10_9_universal2.whl\", hash = \"sha256:6ce34a118d1a898f47def970a2042b8af6bdcc01546454726c7dd2171aa6dfca\"},\n    {file = \"mypy-0.942-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:10daab80bc40f84e3f087d896cdb53dc811a9f04eae4b3f95779c26edee89d16\"},\n    {file = \"mypy-0.942-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:3841b5433ff936bff2f4dc8d54cf2cdbfea5d8e88cedfac45c161368e5770ba6\"},\n    {file = \"mypy-0.942-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:6f7106cbf9cc2f403693bf50ed7c9fa5bb3dfa9007b240db3c910929abe2a322\"},\n    {file = \"mypy-0.942-cp39-cp39-win_amd64.whl\", hash = \"sha256:7742d2c4e46bb5017b51c810283a6a389296cda03df805a4f7869a6f41246534\"},\n    {file = \"mypy-0.942-py3-none-any.whl\", hash = \"sha256:a1b383fe99678d7402754fe90448d4037f9512ce70c21f8aee3b8bf48ffc51db\"},\n    {file = \"mypy-0.942.tar.gz\", hash = \"sha256:17e44649fec92e9f82102b48a3bf7b4a5510ad0cd22fa21a104826b5db4903e2\"},\n]\nmypy-extensions = [\n    {file = \"mypy_extensions-0.4.3-py2.py3-none-any.whl\", hash = \"sha256:090fedd75945a69ae91ce1303b5824f428daf5a028d2f6ab8a299250a846f15d\"},\n    {file = \"mypy_extensions-0.4.3.tar.gz\", hash = \"sha256:2d82818f5bb3e369420cb3c4060a7970edba416647068eb4c5343488a6c604a8\"},\n]\norjson = [\n    {file = \"orjson-3.6.8-cp310-cp310-macosx_10_7_x86_64.whl\", hash = \"sha256:3a287a650458de2211db03681b71c3e5cb2212b62f17a39df8ad99fc54855d0f\"},\n    {file = \"orjson-3.6.8-cp310-cp310-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl\", hash = \"sha256:5204e25c12cea58e524fc82f7c27ed0586f592f777b33075a92ab7b3eb3687c2\"},\n    {file = \"orjson-3.6.8-cp310-cp310-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:77e8386393add64f959c044e0fb682364fd0e611a6f477aa13f0e6a733bd6a28\"},\n    {file = \"orjson-3.6.8-cp310-cp310-manylinux_2_24_aarch64.whl\", hash = \"sha256:279f2d2af393fdf8601020744cb206b91b54ad60fb8401e0761819c7bda1f4e4\"},\n    {file = \"orjson-3.6.8-cp310-cp310-manylinux_2_24_x86_64.whl\", hash = \"sha256:c31c9f389be7906f978ed4192eb58a4b74a37ad60556a0b88ddc47c576697770\"},\n    {file = \"orjson-3.6.8-cp310-cp310-musllinux_1_1_x86_64.whl\", hash = \"sha256:0db5c5a0c5b89f092d52f6e5a3701660a9d6ffa9e2968b3ce17c2bc4f5eb0414\"},\n    {file = \"orjson-3.6.8-cp310-none-win_amd64.whl\", hash = \"sha256:eb22485847b9a0c4bbedc668df860126ac931edbed1d456cf41a59f3cb961ed8\"},\n    {file = \"orjson-3.6.8-cp37-cp37m-macosx_10_7_x86_64.whl\", hash = \"sha256:1a5fe569310bc819279bd4d5f2c349910b104ed3207936246dd5d5e0b085e74a\"},\n    {file = \"orjson-3.6.8-cp37-cp37m-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl\", hash = \"sha256:ccb356a47ab1067cd3549847e9db1d279a63fe0482d315b3ffd6e7abef35ef77\"},\n    {file = \"orjson-3.6.8-cp37-cp37m-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:ab29c069c222248ce302a25855b4e1664f9436e8ae5a131fb0859daf31676d2b\"},\n    {file = \"orjson-3.6.8-cp37-cp37m-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:9d2b5e4cba9e774ac011071d9d27760f97f4b8cd46003e971d122e712f971345\"},\n    {file = \"orjson-3.6.8-cp37-cp37m-manylinux_2_24_aarch64.whl\", hash = \"sha256:c311ec504414d22834d5b972a209619925b48263856a11a14d90230f9682d49c\"},\n    {file = \"orjson-3.6.8-cp37-cp37m-manylinux_2_24_x86_64.whl\", hash = \"sha256:a3dfec7950b90fb8d143743503ee53fa06b32e6068bdea792fc866284da3d71d\"},\n    {file = \"orjson-3.6.8-cp37-cp37m-musllinux_1_1_x86_64.whl\", hash = \"sha256:b890dbbada2cbb26eb29bd43a848426f007f094bb0758df10dfe7a438e1cb4b4\"},\n    {file = \"orjson-3.6.8-cp37-none-win_amd64.whl\", hash = \"sha256:9143ae2c52771525be9ad11a7a8cc8e7fd75391b107e7e644a9e0050496f6b4f\"},\n    {file = \"orjson-3.6.8-cp38-cp38-macosx_10_7_x86_64.whl\", hash = \"sha256:33a82199fd42f6436f833e210ae5129c922a5c355629356ca7a8e82964da7285\"},\n    {file = \"orjson-3.6.8-cp38-cp38-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl\", hash = \"sha256:90159ea8b9a5a2a98fa33dc7b421cfac4d2ae91ba5e1058f5909e7f059f6b467\"},\n    {file = \"orjson-3.6.8-cp38-cp38-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:656fbe15d9ef0733e740d9def78f4fdb4153102f4836ee774a05123499005931\"},\n    {file = \"orjson-3.6.8-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:7be3be6153843e0f01351b1313a5ad4723595427680dac2dfff22a37e652ce02\"},\n    {file = \"orjson-3.6.8-cp38-cp38-manylinux_2_24_aarch64.whl\", hash = \"sha256:dd24f66b6697ee7424f7da575ec6cbffc8ede441114d53470949cda4d97c6e56\"},\n    {file = \"orjson-3.6.8-cp38-cp38-manylinux_2_24_x86_64.whl\", hash = \"sha256:b07c780f7345ecf5901356dc21dee0669defc489c38ce7b9ab0f5e008cc0385c\"},\n    {file = \"orjson-3.6.8-cp38-cp38-musllinux_1_1_x86_64.whl\", hash = \"sha256:ea32015a5d8a4ce00d348a0de5dc7040e0ad58f970a8fcbb5713a1eac129e493\"},\n    {file = \"orjson-3.6.8-cp38-none-win_amd64.whl\", hash = \"sha256:c5a3e382194c838988ec128a26b08aa92044e5e055491cc4056142af0c1c54d7\"},\n    {file = \"orjson-3.6.8-cp39-cp39-macosx_10_7_x86_64.whl\", hash = \"sha256:83a8424e857ae1bf53530e88b4eb2f16ca2b489073b924e655f1575cacd7f52a\"},\n    {file = \"orjson-3.6.8-cp39-cp39-macosx_10_9_x86_64.macosx_11_0_arm64.macosx_10_9_universal2.whl\", hash = \"sha256:81e1a6a2d67f15007dadacbf9ba5d3d79237e5e33786c028557fe5a2b72f1c9a\"},\n    {file = \"orjson-3.6.8-cp39-cp39-manylinux_2_17_armv7l.manylinux2014_armv7l.whl\", hash = \"sha256:137b539881c77866eba86ff6a11df910daf2eb9ab8f1acae62f879e83d7c38af\"},\n    {file = \"orjson-3.6.8-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl\", hash = \"sha256:2cbd358f3b3ad539a27e36900e8e7d172d0e1b72ad9dd7d69544dcbc0f067ee7\"},\n    {file = \"orjson-3.6.8-cp39-cp39-manylinux_2_24_aarch64.whl\", hash = \"sha256:6ab94701542d40b90903ecfc339333f458884979a01cb9268bc662cc67a5f6d8\"},\n    {file = \"orjson-3.6.8-cp39-cp39-manylinux_2_24_x86_64.whl\", hash = \"sha256:32b6f26593a9eb606b40775826beb0dac152e3d224ea393688fced036045a821\"},\n    {file = \"orjson-3.6.8-cp39-cp39-musllinux_1_1_x86_64.whl\", hash = \"sha256:afd9e329ebd3418cac3cd747769b1d52daa25fa672bbf414ab59f0e0881b32b9\"},\n    {file = \"orjson-3.6.8-cp39-none-win_amd64.whl\", hash = \"sha256:0c89b419914d3d1f65a1b0883f377abe42a6e44f6624ba1c63e8846cbfc2fa60\"},\n    {file = \"orjson-3.6.8.tar.gz\", hash = \"sha256:e19d23741c5de13689bb316abfccea15a19c264e3ec8eb332a5319a583595ace\"},\n]\npackaging = [\n    {file = \"packaging-21.3-py3-none-any.whl\", hash = \"sha256:ef103e05f519cdc783ae24ea4e2e0f508a9c99b2d4969652eed6a2e1ea5bd522\"},\n    {file = \"packaging-21.3.tar.gz\", hash = \"sha256:dd47c42927d89ab911e606518907cc2d3a1f38bbd026385970643f9c5b8ecfeb\"},\n]\npathspec = [\n    {file = \"pathspec-0.9.0-py2.py3-none-any.whl\", hash = \"sha256:7d15c4ddb0b5c802d161efc417ec1a2558ea2653c2e8ad9c19098201dc1c993a\"},\n    {file = \"pathspec-0.9.0.tar.gz\", hash = \"sha256:e564499435a2673d586f6b2130bb5b95f04a3ba06f81b8f895b651a3c76aabb1\"},\n]\nplatformdirs = [\n    {file = \"platformdirs-2.5.2-py3-none-any.whl\", hash = \"sha256:027d8e83a2d7de06bbac4e5ef7e023c02b863d7ea5d079477e722bb41ab25788\"},\n    {file = \"platformdirs-2.5.2.tar.gz\", hash = \"sha256:58c8abb07dcb441e6ee4b11d8df0ac856038f944ab98b7be6b27b2a3c7feef19\"},\n]\npluggy = [\n    {file = \"pluggy-1.0.0-py2.py3-none-any.whl\", hash = \"sha256:74134bbf457f031a36d68416e1509f34bd5ccc019f0bcc952c7b909d06b37bd3\"},\n    {file = \"pluggy-1.0.0.tar.gz\", hash = \"sha256:4224373bacce55f955a878bf9cfa763c1e360858e330072059e10bad68531159\"},\n]\npy = [\n    {file = \"py-1.11.0-py2.py3-none-any.whl\", hash = \"sha256:607c53218732647dff4acdfcd50cb62615cedf612e72d1724fb1a0cc6405b378\"},\n    {file = \"py-1.11.0.tar.gz\", hash = \"sha256:51c75c4126074b472f746a24399ad32f6053d1b34b68d2fa41e558e6f4a98719\"},\n]\npycodestyle = [\n    {file = \"pycodestyle-2.8.0-py2.py3-none-any.whl\", hash = \"sha256:720f8b39dde8b293825e7ff02c475f3077124006db4f440dcbc9a20b76548a20\"},\n    {file = \"pycodestyle-2.8.0.tar.gz\", hash = \"sha256:eddd5847ef438ea1c7870ca7eb78a9d47ce0cdb4851a5523949f2601d0cbbe7f\"},\n]\npyflakes = [\n    {file = \"pyflakes-2.4.0-py2.py3-none-any.whl\", hash = \"sha256:3bb3a3f256f4b7968c9c788781e4ff07dce46bdf12339dcda61053375426ee2e\"},\n    {file = \"pyflakes-2.4.0.tar.gz\", hash = \"sha256:05a85c2872edf37a4ed30b0cce2f6093e1d0581f8c19d7393122da7e25b2b24c\"},\n]\npygments = [\n    {file = \"Pygments-2.12.0-py3-none-any.whl\", hash = \"sha256:dc9c10fb40944260f6ed4c688ece0cd2048414940f1cea51b8b226318411c519\"},\n    {file = \"Pygments-2.12.0.tar.gz\", hash = \"sha256:5eb116118f9612ff1ee89ac96437bb6b49e8f04d8a13b514ba26f620208e26eb\"},\n]\npyparsing = [\n    {file = \"pyparsing-3.0.8-py3-none-any.whl\", hash = \"sha256:ef7b523f6356f763771559412c0d7134753f037822dad1b16945b7b846f7ad06\"},\n    {file = \"pyparsing-3.0.8.tar.gz\", hash = \"sha256:7bf433498c016c4314268d95df76c81b842a4cb2b276fa3312cfb1e1d85f6954\"},\n]\npytest = [\n    {file = \"pytest-7.1.2-py3-none-any.whl\", hash = \"sha256:13d0e3ccfc2b6e26be000cb6568c832ba67ba32e719443bfe725814d3c42433c\"},\n    {file = \"pytest-7.1.2.tar.gz\", hash = \"sha256:a06a0425453864a270bc45e71f783330a7428defb4230fb5e6a731fde06ecd45\"},\n]\npytest-black = [\n    {file = \"pytest-black-0.3.12.tar.gz\", hash = \"sha256:1d339b004f764d6cd0f06e690f6dd748df3d62e6fe1a692d6a5500ac2c5b75a5\"},\n]\npytest-flake8 = [\n    {file = \"pytest-flake8-1.1.1.tar.gz\", hash = \"sha256:ba4f243de3cb4c2486ed9e70752c80dd4b636f7ccb27d4eba763c35ed0cd316e\"},\n    {file = \"pytest_flake8-1.1.1-py2.py3-none-any.whl\", hash = \"sha256:e0661a786f8cbf976c185f706fdaf5d6df0b1667c3bcff8e823ba263618627e7\"},\n]\npytest-isort = [\n    {file = \"pytest-isort-2.0.0.tar.gz\", hash = \"sha256:821a8c5c9c4f3a3c52cfa9c541fbe89ac9e28728125125af53724c4c3f129117\"},\n    {file = \"pytest_isort-2.0.0-py3-none-any.whl\", hash = \"sha256:ab949c593213dad38ba75db32a0ce361fcddd11d4152be4a2c93b85104cc4376\"},\n]\npytest-mypy = [\n    {file = \"pytest-mypy-0.8.1.tar.gz\", hash = \"sha256:1fa55723a4bf1d054fcba1c3bd694215a2a65cc95ab10164f5808afd893f3b11\"},\n    {file = \"pytest_mypy-0.8.1-py3-none-any.whl\", hash = \"sha256:6e68e8eb7ceeb7d1c83a1590912f784879f037b51adfb9c17b95c6b2fc57466b\"},\n]\nrequests = [\n    {file = \"requests-2.27.1-py2.py3-none-any.whl\", hash = \"sha256:f22fa1e554c9ddfd16e6e41ac79759e17be9e492b3587efa038054674760e72d\"},\n    {file = \"requests-2.27.1.tar.gz\", hash = \"sha256:68d7c56fd5a8999887728ef304a6d12edc7be74f1cfa47714fc8b414525c9a61\"},\n]\nrich = [\n    {file = \"rich-12.2.0-py3-none-any.whl\", hash = \"sha256:c50f3d253bc6a9bb9c79d61a26d510d74abdf1b16881260fab5edfc3edfb082f\"},\n    {file = \"rich-12.2.0.tar.gz\", hash = \"sha256:ea74bc9dad9589d8eea3e3fd0b136d8bf6e428888955f215824c2894f0da8b47\"},\n]\ntoml = [\n    {file = \"toml-0.10.2-py2.py3-none-any.whl\", hash = \"sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b\"},\n    {file = \"toml-0.10.2.tar.gz\", hash = \"sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f\"},\n]\ntomli = [\n    {file = \"tomli-2.0.1-py3-none-any.whl\", hash = \"sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc\"},\n    {file = \"tomli-2.0.1.tar.gz\", hash = \"sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f\"},\n]\ntyped-ast = [\n    {file = \"typed_ast-1.5.3-cp310-cp310-macosx_10_9_x86_64.whl\", hash = \"sha256:9ad3b48cf2b487be140072fb86feff36801487d4abb7382bb1929aaac80638ea\"},\n    {file = \"typed_ast-1.5.3-cp310-cp310-macosx_11_0_arm64.whl\", hash = \"sha256:542cd732351ba8235f20faa0fc7398946fe1a57f2cdb289e5497e1e7f48cfedb\"},\n    {file = \"typed_ast-1.5.3-cp310-cp310-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:5dc2c11ae59003d4a26dda637222d9ae924387f96acae9492df663843aefad55\"},\n    {file = \"typed_ast-1.5.3-cp310-cp310-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:fd5df1313915dbd70eaaa88c19030b441742e8b05e6103c631c83b75e0435ccc\"},\n    {file = \"typed_ast-1.5.3-cp310-cp310-win_amd64.whl\", hash = \"sha256:e34f9b9e61333ecb0f7d79c21c28aa5cd63bec15cb7e1310d7d3da6ce886bc9b\"},\n    {file = \"typed_ast-1.5.3-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:f818c5b81966d4728fec14caa338e30a70dfc3da577984d38f97816c4b3071ec\"},\n    {file = \"typed_ast-1.5.3-cp36-cp36m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:3042bfc9ca118712c9809201f55355479cfcdc17449f9f8db5e744e9625c6805\"},\n    {file = \"typed_ast-1.5.3-cp36-cp36m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:4fff9fdcce59dc61ec1b317bdb319f8f4e6b69ebbe61193ae0a60c5f9333dc49\"},\n    {file = \"typed_ast-1.5.3-cp36-cp36m-win_amd64.whl\", hash = \"sha256:8e0b8528838ffd426fea8d18bde4c73bcb4167218998cc8b9ee0a0f2bfe678a6\"},\n    {file = \"typed_ast-1.5.3-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:8ef1d96ad05a291f5c36895d86d1375c0ee70595b90f6bb5f5fdbee749b146db\"},\n    {file = \"typed_ast-1.5.3-cp37-cp37m-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:ed44e81517364cb5ba367e4f68fca01fba42a7a4690d40c07886586ac267d9b9\"},\n    {file = \"typed_ast-1.5.3-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:f60d9de0d087454c91b3999a296d0c4558c1666771e3460621875021bf899af9\"},\n    {file = \"typed_ast-1.5.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:9e237e74fd321a55c90eee9bc5d44be976979ad38a29bbd734148295c1ce7617\"},\n    {file = \"typed_ast-1.5.3-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:ee852185964744987609b40aee1d2eb81502ae63ee8eef614558f96a56c1902d\"},\n    {file = \"typed_ast-1.5.3-cp38-cp38-macosx_11_0_arm64.whl\", hash = \"sha256:27e46cdd01d6c3a0dd8f728b6a938a6751f7bd324817501c15fb056307f918c6\"},\n    {file = \"typed_ast-1.5.3-cp38-cp38-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:d64dabc6336ddc10373922a146fa2256043b3b43e61f28961caec2a5207c56d5\"},\n    {file = \"typed_ast-1.5.3-cp38-cp38-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:8cdf91b0c466a6c43f36c1964772918a2c04cfa83df8001ff32a89e357f8eb06\"},\n    {file = \"typed_ast-1.5.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:9cc9e1457e1feb06b075c8ef8aeb046a28ec351b1958b42c7c31c989c841403a\"},\n    {file = \"typed_ast-1.5.3-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:e20d196815eeffb3d76b75223e8ffed124e65ee62097e4e73afb5fec6b993e7a\"},\n    {file = \"typed_ast-1.5.3-cp39-cp39-macosx_11_0_arm64.whl\", hash = \"sha256:37e5349d1d5de2f4763d534ccb26809d1c24b180a477659a12c4bde9dd677d74\"},\n    {file = \"typed_ast-1.5.3-cp39-cp39-manylinux_2_17_aarch64.manylinux2014_aarch64.whl\", hash = \"sha256:c9f1a27592fac87daa4e3f16538713d705599b0a27dfe25518b80b6b017f0a6d\"},\n    {file = \"typed_ast-1.5.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl\", hash = \"sha256:8831479695eadc8b5ffed06fdfb3e424adc37962a75925668deeb503f446c0a3\"},\n    {file = \"typed_ast-1.5.3-cp39-cp39-win_amd64.whl\", hash = \"sha256:20d5118e494478ef2d3a2702d964dae830aedd7b4d3b626d003eea526be18718\"},\n    {file = \"typed_ast-1.5.3.tar.gz\", hash = \"sha256:27f25232e2dd0edfe1f019d6bfaaf11e86e657d9bdb7b0956db95f560cceb2b3\"},\n]\ntypes-orjson = [\n    {file = \"types-orjson-3.6.2.tar.gz\", hash = \"sha256:cf9afcc79a86325c7aff251790338109ed6f6b1bab09d2d4262dd18c85a3c638\"},\n    {file = \"types_orjson-3.6.2-py3-none-any.whl\", hash = \"sha256:22ee9a79236b6b0bfb35a0684eded62ad930a88a56797fa3c449b026cf7dbfe4\"},\n]\ntypes-requests = [\n    {file = \"types-requests-2.27.20.tar.gz\", hash = \"sha256:63344573cde6c4efd44d867c0158d9fb7e6beb95721cbe9882f3f857ee8a5398\"},\n    {file = \"types_requests-2.27.20-py3-none-any.whl\", hash = \"sha256:68b8de86552116424ec23b77afc925e111afb6496d3821b183b7d151b3b834d4\"},\n]\ntypes-urllib3 = [\n    {file = \"types-urllib3-1.26.13.tar.gz\", hash = \"sha256:40f8fb5e8cd7d57e8aefdee3fdd5e930aa1a1bb4179cdadd55226cea588af790\"},\n    {file = \"types_urllib3-1.26.13-py3-none-any.whl\", hash = \"sha256:ff7500641824f881b2c7bde4cc57e6c3abf03d1e005bae83aca752e77213a5da\"},\n]\ntyping-extensions = [\n    {file = \"typing_extensions-4.2.0-py3-none-any.whl\", hash = \"sha256:6657594ee297170d19f67d55c05852a874e7eb634f4f753dbd667855e07c1708\"},\n    {file = \"typing_extensions-4.2.0.tar.gz\", hash = \"sha256:f1c24655a0da0d1b67f07e17a5e6b2a105894e6824b92096378bb3668ef02376\"},\n]\nurllib3 = [\n    {file = \"urllib3-1.26.9-py2.py3-none-any.whl\", hash = \"sha256:44ece4d53fb1706f667c9bd1c648f5469a2ec925fcf3a776667042d645472c14\"},\n    {file = \"urllib3-1.26.9.tar.gz\", hash = \"sha256:aabaf16477806a5e1dd19aa41f8c2b7950dd3c746362d7e3223dbe6de6ac448e\"},\n]\nzipp = [\n    {file = \"zipp-3.8.0-py3-none-any.whl\", hash = \"sha256:c4f6e5bbf48e74f7a38e7cc5b0480ff42b0ae5178957d564d18932525d5cf099\"},\n    {file = \"zipp-3.8.0.tar.gz\", hash = \"sha256:56bf8aadb83c24db6c4b577e13de374ccfb67da2078beba1d037c17980bf43ad\"},\n]\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.095703125,
          "content": "[tool.poetry]\nname = \"pywhat\"\nversion = \"5.1.0\"\ndescription = \"What is that thing?\"\nauthors = [\"Bee <github@skerritt.blog>\"]\nlicense = \"MIT\"\ndocumentation = \"https://github.com/bee-san/pyWhat/wiki\"\nreadme = \"README.md\"\n\n[tool.poetry.dependencies]\npython = \"^3.7\"\nclick = \"^8.0.0\"\nrich = \">=11.0.0\"\norjson = {version = \"^3.6.1\", optional = true}\n\n[tool.poetry.dev-dependencies]\npytest = \"^7.0\"\nblack = \"^22.1.0\"\nisort = \"^5.9.3\"\nflake8 = \"^4.0\"\nrequests = \"^2.26.0\"\npytest-black = \"^0.3.12\"\npytest-isort = \"^2.0.0\"\npytest-flake8 = \"^1.0.7\"\npytest-mypy = \"^0.8.1\"\ntypes-requests = \"^2.25.9\"\ntypes-orjson = \"^3.6.0\"\n\n[tool.poetry.extras]\noptimize = [\"orjson\"]\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n[tool.poetry.scripts]\npywhat = \"pywhat.what:main\"\nwhat = \"pywhat.what:main\"\n\n[tool.isort]\nprofile = \"black\"\nmulti_line_output = 3\ninclude_trailing_comma = true\nforce_grid_wrap = 0\nuse_parentheses = true\nensure_newline_before_comments = true\nline_length = 88\n\n[tool.mypy]\nignore_missing_imports = true\n\n[tool.pytest.ini_options]\naddopts = \"--black --isort --flake8 --mypy\"\n"
        },
        {
          "name": "pywhat",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}