{
  "metadata": {
    "timestamp": 1736560707168,
    "page": 370,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LibrePhotos/librephotos",
      "stars": 7086,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.1328125,
          "content": "[run]\nbranch = True\n\n[report]\nskip_covered = True\nskip_empty = True\n# show_missing = True\n\n[html]\nskip_covered = True\nskip_empty = True\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.5302734375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Docker\nDockerfile\nentrypoint.sh\n\n# Static assets\nstatic/\n\n# Nuitka\nmanage.build/\nmanage.dist/\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\ncoco/\nsurvey/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# visual studio\n.vs/\n.vscode/\n\n# IntelliJ\n.idea/\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# LibrePhotos\ndensecap/data/models/densecap/densecap-pretrained-vgg16.t7\n*/*.pkl\n*/*/*.pkl\nthumbnails\nmedia\nsamplephotos\nConv2d.patch\nLinear.patch\nSequential.patch\nBatchNorm2d.patch\nAvgPool2d.patch\nReLU.patch\nrun_docker.sh\nlogs/\nplayground\napi/im2txt/data/\napi/im2txt/models/\napi/im2txt/png/\n*.ipynb\napi/im2txt/*.tar.gz\n*.db\nmedia*\nprotected_media\nreport_dynamo_export.sarif\n\n# Vim\n*.swp\n*.swo\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.4189453125,
          "content": "default_language_version:\n  python: python3\n\nrepos:\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.12.0\n    hooks:\n      - id: isort\n  - repo: https://github.com/psf/black\n    rev: 23.3.0\n    hooks:\n      - id: black\n  - repo: https://github.com/pycqa/flake8\n    rev: 6.0.0\n    hooks:\n      - id: flake8\n        args:\n          - --exclude=.+/migrations/\n          - --max-line-length=88\n          - --ignore=E501,W503,E203\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2017 Hooram Nam\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.443359375,
          "content": "[![Discord](https://img.shields.io/discord/784619049208250388?style=plastic)][discord] [![Website](https://img.shields.io/website?down_color=lightgrey&down_message=offline&style=plastic&up_color=blue&up_message=online&url=https%3A%2F%2Flibrephotos.com)](https://librephotos.com/)\n[![Read the docs](https://img.shields.io/static/v1?label=Read&message=the%20docs&color=blue&style=plastic)](https://docs.librephotos.com/) [![GitHub contributors](https://img.shields.io/github/contributors/librephotos/librephotos?style=plastic)](https://github.com/LibrePhotos/librephotos/graphs/contributors)\n<a href=\"https://hosted.weblate.org/engage/librephotos/\">\n<img src=\"https://hosted.weblate.org/widgets/librephotos/-/librephotos-frontend/svg-badge.svg\" alt=\"Translation status\" />\n</a>\n\n# LibrePhotos\n\n![](https://github.com/LibrePhotos/librephotos/blob/dev/screenshots/mockups_main_fhd.png?raw=true)\n<sub>Mockup designed by rawpixel.com / Freepik</sub>\n\n- **Stable** demo is available here:https://demo1.librephotos.com/ . User is ```demo```, password is ```demo1234``` (with sample images).\n- Latest **development** demo is available here: https://demo2.librephotos.com/ (same user/password)\n- You can watch development videos on [Niaz Faridani-Rad's channel](https://www.youtube.com/channel/UCZJ2pk2BPKxwbuCV9LWDR0w)\n- You can join our [Discord][discord].\n\n## Installation\n\nStep-by-step installation instructions are available in our [documentation](https://docs.librephotos.com/docs/installation/standard-install)\n\n## How to help out\n- ‚≠ê **Star** this repository if you like this project!\n- üöÄ **Developing**: Get started in less than 30 minutes by following [this guide](https://docs.librephotos.com/docs/development/dev-install).\n- üóíÔ∏è **Documentation**: Improving the documentation is as simple as submitting a pull request [here](https://github.com/LibrePhotos/librephotos.docs)\n- üß™ **Testing**: If you want to help find bugs, use the ```dev``` tag and update it regularly. If you find a bug, open an issue.\n- üßë‚Äçü§ù‚Äçüßë **Outreach**: Talk about this project with other people and help them to get started too!\n- üåê **Translations**: Make LibrePhotos accessible to more people with [weblate](https://hosted.weblate.org/engage/librephotos/).\n- üí∏ [**Donate**](https://github.com/sponsors/derneuere) to the developers of LibrePhotos\n\n## Features\n\n  - Support for all types of photos including raw photos\n  - Support for videos\n  - Timeline view\n  - Scans pictures on the file system\n  - Multiuser support\n  - Generate albums based on events like \"Thursday in Berlin\"\n  - Face recognition / Face classification\n  - Reverse geocoding\n  - Object / Scene detection\n  - Semantic image search\n  - Search by metadata\n\n## What does it use?\n\n- **Image Conversion:** [ImageMagick](https://github.com/ImageMagick/ImageMagick) \n- **Video Conversion:** [FFmpeg](https://github.com/FFmpeg/FFmpeg)\n- **Exif Support:** [ExifTool](https://github.com/exiftool/exiftool)\n- **Face detection:** [face_recognition](https://github.com/ageitgey/face_recognition) \n- **Face classification/clusterization:** [scikit-learn](https://scikit-learn.org/) and [hdbscan](https://github.com/scikit-learn-contrib/hdbscan)\n- **Image captioning:** [im2txt](https://github.com/HughKu/Im2txt), \n- **Scene classification** [places365](http://places.csail.mit.edu/)\n- **Reverse geocoding:** [Mapbox](https://www.mapbox.com/): You need to have an API key. First 50,000 geocode lookups are free every month.\n\n[discord]: https://discord.gg/xwRvtSDGWb\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "image_similarity",
          "type": "tree",
          "content": null
        },
        {
          "name": "librephotos",
          "type": "tree",
          "content": null
        },
        {
          "name": "manage.py",
          "type": "blob",
          "size": 0.9296875,
          "content": "#!/usr/bin/env python\nimport os\nimport sys\n\nif __name__ == \"__main__\":\n    environment = \"production\"\n    if os.environ.get(\"DEBUG\", \"0\") == \"1\":\n        environment = \"development\"\n\n    try:\n        command = sys.argv[1]\n    except IndexError:\n        command = \"help\"\n\n    do_not_collect_coverage = os.environ.get(\"NO_COVERAGE\") is not None\n    running_tests = command == \"test\"\n    if running_tests:\n        environment = \"test\"\n    if running_tests and not do_not_collect_coverage:\n        from coverage import Coverage\n\n        cov = Coverage()\n        cov.erase()\n        cov.start()\n\n    from django.core.management import execute_from_command_line\n\n    os.environ.setdefault(\n        \"DJANGO_SETTINGS_MODULE\", f\"librephotos.settings.{environment}\"\n    )\n    execute_from_command_line(sys.argv)\n\n    if running_tests and not do_not_collect_coverage:\n        cov.stop()\n        cov.save()\n        cov.html_report()\n        covered = cov.report()\n"
        },
        {
          "name": "nextcloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "ownphotos",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.310546875,
          "content": "[tool.black]\nline-length = 88\ntarget-version = ['py311']\ninclude = '\\.pyi?$' # all files that end with .py or .pyi\n\n[tool.pylint.master]\nload-plugins = 'pylint_django'\ndjango-settings-module = 'ownphotos.settings'\ndisable = 'E029,C0111,C0301'\n\n[tool.pylint.format]\nmax-line-length = 88\n\n[tool.isort]\nprofile = \"black\"\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.2255859375,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"packageRules\": [\n    {\n      \"matchUpdateTypes\": [\"minor\", \"patch\", \"pin\", \"digest\"],\n      \"automerge\": true\n    }\n  ],\n  \"extends\": [\n    \"config:base\"\n  ]\n}\n"
        },
        {
          "name": "requirements.dev.txt",
          "type": "blob",
          "size": 0.275390625,
          "content": "ipdb==0.13.13\nipython==8.29.0\nipython-genutils==0.2.0\nPygments==2.18.0\nprompt-toolkit==3.0.48\nnose==1.3.7\npylint==3.3.1\npylint-django==2.6.1\nflake8==7.1.1\npre-commit==4.0.1\ncoverage==7.6.10\nFaker==33.1.0\nisort==5.13.2\nsetuptools==75.4.0\nblack==24.10.0\npyfakefs==5.7.1\npytest==8.3.3\n"
        },
        {
          "name": "requirements.mlval.txt",
          "type": "blob",
          "size": 0.0888671875,
          "content": "pycocotools==2.0.8\npycocoevalcap==1.2\nnltk==3.9.1\nmatplotlib==3.9.2\nonnx==1.17.0\nonnxscript"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 1.09765625,
          "content": "Django==4.2.17\ndjango-constance==4.1.3\ndjango-cors-headers==4.6.0\ngit+https://github.com/derneuere/django-chunked-upload@master#egg=django-chunked-upload\ndjango-cryptography==1.1\ndjango-extensions==3.2.3\ndjango-filter==24.3\ndjango-picklefield==3.2\ndjango-bulk-update\ndjango-silk==5.3.2\ndjangorestframework==3.15.2\ndjangorestframework-simplejwt==5.3.1\ndrf-extensions==0.7.1\ndrf-spectacular==0.27.2\nface-recognition==1.3.0\nfaiss-cpu==1.8.0.post1\nFlask==3.0.3\nFlask-Cors==5.0.0\nFlask-RESTful==0.3.10\ngeopy==2.4.1\ngunicorn==23.0.0\nhdbscan==0.8.39\nmatplotlib==3.9.2\nnetworkx==3.4.2\nnltk==3.9.1\nmarkupsafe==3.0.2\nPillow==10.4.0\npsycopg==3.2.3\nhttps://github.com/owncloud/pyocclient/archive/master.zip\npytz==2024.2\ntzdata==2024.2\nPyExifTool==0.4.9\nPyJWT==2.9.0\npyvips==2.2.3\nscikit-learn<1.5.3\nseaborn==0.13.2\nsentence_transformers==2.7.0\ntimezonefinder==6.5.4\ntqdm==4.67.0\ngevent==24.10.3\npython-magic==0.4.27\nWand==0.6.13\ndjango-q2==1.7.4\nsafetensors==0.4.5\npy-cpuinfo==9.0.0\npsutil==6.1.0\nonnxruntime==1.20.0\n# Dependencies for blip\ntimm==1.0.11\ntransformers==4.46.2\n# Dependencies for mistral quantized\nllama-cpp-python==0.3.5\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "service",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}