{
  "metadata": {
    "timestamp": 1736561009305,
    "page": 768,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "buildbot/buildbot",
      "stars": 5297,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bbtravis.yml",
          "type": "blob",
          "size": 9.7099609375,
          "content": "# BBTravis CI configuration file\nlanguage: unknown\n\nlabel_mapping:\n  TWISTED: tw\n  SQLALCHEMY: sqla\n  SQLALCHEMY_MIGRATE: sqlam\n  latest: l\n  PYTHON: py\n  TESTS: t\n  WORKER_PYTHON: wp\nenv:\n  global:\n  - BUILDBOT_TEST_DB_URL=sqlite://\n  - NUM_CPU=700m\n  - MEMORY_SIZE=1G\n  - CHROME_BIN=/usr/bin/google-chrome\n  # Needed to ignore specific warns, otherwise, it'll warn a generic message\n  - SQLALCHEMY_WARN_20=1\n  matrix: []\nmatrix:\n  fast_finish: true\n  include:\n    # ruff, docs first as they're more likely to find issues\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=ruff\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=docs\n    - env: PYTHON=3.9 TESTS=mypy\n\n    # add js tests in separate job. Start it early because it is quite long\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=js_build NUM_CPU=2 MEMORY_SIZE=1G\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=js_unit NUM_CPU=2 MEMORY_SIZE=1G\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=e2e_react_whl NUM_CPU=2 MEMORY_SIZE=2G\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=e2e_react_tgz NUM_CPU=2 MEMORY_SIZE=2G\n    - env: PYTHON=3.12 TWISTED=latest SQLALCHEMY=latest TESTS=e2e_react_whl NUM_CPU=2 MEMORY_SIZE=2G\n    - env: PYTHON=3.12 TWISTED=latest SQLALCHEMY=latest TESTS=e2e_react_tgz NUM_CPU=2 MEMORY_SIZE=2G\n\n    # include \"ci\" string into the name of the status that is eventually submitted to Github, so\n    # that the codecov.io service would wait until this build is finished before creating report.\n    - env: PYTHON=3.9 TREQ=22.2.0 TWISTED=22.1.0 SQLALCHEMY=latest NUM_CPU=2 TESTS=trial\n    - env: PYTHON=3.9 TREQ=22.2.0 TWISTED=22.4.0 SQLALCHEMY=latest NUM_CPU=2 TESTS=trial\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=1.4.52 NUM_CPU=2 TESTS=trial\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest NUM_CPU=2 TESTS=ci/coverage\n    - env: PYTHON=3.10 TWISTED=latest SQLALCHEMY=latest NUM_CPU=2 TESTS=trial\n    - env: PYTHON=3.11 TWISTED=latest SQLALCHEMY=latest NUM_CPU=2 TESTS=trial\n    - env: PYTHON=3.12 TWISTED=latest SQLALCHEMY=latest NUM_CPU=2 TESTS=trial\n    - env: PYTHON=3.13 TWISTED=latest SQLALCHEMY=latest NUM_CPU=2 TESTS=trial\n\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest NUM_CPU=2 TESTS=dev_virtualenv\n\n    # Worker-master interoperability tests\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=interop WORKER_PYTHON=3.9\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=interop WORKER_PYTHON=3.8\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=interop WORKER_PYTHON=3.7\n\n    # Worker tests on older python and twisted package combinations.\n    - env: PYTHON=3.7 TREQ=22.2.0 TWISTED=21.2.0 SQLALCHEMY=latest TESTS=trial_worker\n    - env: PYTHON=3.8 TREQ=22.2.0 TWISTED=21.2.0 SQLALCHEMY=latest TESTS=trial_worker\n    - env: PYTHON=3.9 TREQ=22.2.0 TWISTED=21.2.0 SQLALCHEMY=latest TESTS=trial_worker\n\n    # Configuration when SQLite database is persistent between running tests\n    # (by default in other tests in-memory SQLite database is used which is\n    # recreated for each test).\n    # Helps to detect issues with incorrect database setup/cleanup in tests.\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=trial BUILDBOT_TEST_DB_URL=sqlite:////scratch/test_db{TEST_ID}.sqlite\n    # Configuration that runs tests with real MySQL database\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=trial BUILDBOT_TEST_DB_URL=mysql+mysqldb://travis@127.0.0.1/bbtest{TEST_ID}\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=trial BUILDBOT_TEST_DB_URL=mysql+mysqldb://travis@127.0.0.1/bbtest{TEST_ID}?storage_engine=InnoDB\n\n    # Configuration that runs tests with real PostgreSQL database with pg8000 and psycopg2 drivers\n    # psycopg2 uses Peer Authentication which is configured in the dockerfile, while pg8000 use md5 auth with dummy password\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=trial BUILDBOT_TEST_DB_URL=postgresql+psycopg2:///bbtest{TEST_ID}\n    - env: PYTHON=3.9 TWISTED=latest SQLALCHEMY=latest TESTS=trial BUILDBOT_TEST_DB_URL='postgresql+pg8000:///bbtest{TEST_ID}?user=buildbot&password=x'\n\n# Dependencies installation commands\ninstall:\n  - title: setup virtualenv\n    cmd: |\n      rm -rf /tmp/bbvenv\n      python$PYTHON -m venv /tmp/bbvenv\n  - /tmp/bbvenv/bin/pip install -r requirements-pip.txt\n  - condition: TESTS not in (\"dev_virtualenv\", \"e2e_react_whl\", \"e2e_react_tgz\", \"trial_worker\")\n    cmd: /tmp/bbvenv/bin/pip install -r requirements-ci.txt\n  # On python 3.12 workaround done in dcbc28d1431e1aae892f7fdc0e266253365bc11e is no longer enough.\n  - condition: TESTS not in (\"dev_virtualenv\", \"e2e_react_whl\", \"e2e_react_tgz\", \"trial_worker\")\n    cmd: /tmp/bbvenv/bin/pip install -e master -e worker\n  - condition: TESTS == \"dev_virtualenv\"\n    cmd: /tmp/bbvenv/bin/pip install -r requirements-ci.txt -r requirements-ciworker.txt -r requirements-cidocs.txt\n  - condition: TESTS == \"trial_worker\"\n    cmd: /tmp/bbvenv/bin/pip install -r requirements-ciworker.txt\n  - condition: TESTS == \"docs\"\n    cmd: /tmp/bbvenv/bin/pip install -r requirements-cidocs.txt\n  - condition: '\"sqlite\" not in BUILDBOT_TEST_DB_URL'\n    cmd: /tmp/bbvenv/bin/pip install -r requirements-cidb.txt\n  - condition: TESTS == \"interop\"\n    cmd: |\n      set -e\n      rm -rf /tmp/bbworkervenv\n      python$WORKER_PYTHON -m venv /tmp/bbworkervenv\n      /tmp/bbworkervenv/bin/pip install -r requirements-pip.txt\n      /tmp/bbworkervenv/bin/pip install -r requirements-ciworker.txt\n  - title: pip installs for backward compat\n    cmd: |\n      # pip installs for backward compat\n      set -e\n      pkg_ver=\"\"\n      if [ ! -z \"$TREQ\" ]; then\n        pkg_ver=\"${pkg_ver} treq==$TREQ\"\n      fi\n      if [ \"$TWISTED\" = \"trunk\" ]; then\n        pkg_ver=\"${pkg_ver} git+https://github.com/twisted/twisted\"\n      elif [ ! -z \"$TWISTED\" -a \"$TWISTED\" != \"latest\" ]; then\n        pkg_ver=\"${pkg_ver} Twisted==$TWISTED\"\n      fi\n      if [ ! -z \"$SQLALCHEMY\" -a \"$SQLALCHEMY\" != \"latest\" ]; then\n        pkg_ver=\"${pkg_ver} sqlalchemy==$SQLALCHEMY\"\n      fi\n\n      if [ ! -z \"$pkg_ver\" ]; then\n        /tmp/bbvenv/bin/python -m pip install ${pkg_ver}\n      fi\n  - step: !ShellCommand\n        command: \"/tmp/bbvenv/bin/pip check\"\n        warnOnFailure: True\n        flunkOnFailure: False\n        haltOnFailure: False\n        name: \"pip check\"\n    title: \"pip check\"\n\nbefore_script:\n  # create real database for tests\n  - condition: '\"mysql\" in BUILDBOT_TEST_DB_URL'\n    cmd: /prepare_mysql\n  - condition: '\"postgresql\" in BUILDBOT_TEST_DB_URL'\n    cmd: |\n        /prepare_postgres\n        # for pg8000 driver we can't use peer authentication or empty password, so set a dummy password\n        # This also serves as a way to wait that the database is ready\n        while ! psql -d bbtest -c 'ALTER USER \"buildbot\" WITH PASSWORD '\"'x'\"';' ; do sleep 1 ; done\n\n# Tests running commands\nscript:\n  - title: frontend tests\n    condition: TESTS == \"js_build\"\n    cmd: |\n      export PATH=/tmp/bbvenv/bin/:$PATH\n      make frontend_install_tests\n\n  - title: frontend unit tests\n    condition: TESTS == \"js_unit\"\n    cmd: |\n      export PATH=/tmp/bbvenv/bin/:$PATH\n      export VITEST_MIN_THREADS=1\n      export VITEST_MAX_THREADS=8\n      make frontend_tests\n\n  - title: master and worker tests\n    condition: TESTS in (\"dev_virtualenv\", \"trial\")\n    cmd: /tmp/bbvenv/bin/trial -j8 --reporter=text --rterrors buildbot.test buildbot_worker.test\n\n  - title: interop tests\n    condition: TESTS == \"interop\"\n    cmd: |\n      SANDBOXED_WORKER_PATH=/tmp/bbworkervenv/bin/buildbot-worker \\\n        /tmp/bbvenv/bin/coverage run --rcfile=.coveragerc \\\n          /tmp/bbvenv/bin/trial --reporter=text --rterrors buildbot.test.integration.interop\n\n  - title: worker tests\n    condition: TESTS == \"trial_worker\"\n    cmd: /tmp/bbvenv/bin/trial  --reporter=text --rterrors buildbot_worker.test\n\n  # run tests under coverage for latest only (it's slower..)\n  - title: coverage tests\n    condition: TESTS == \"ci/coverage\"\n    cmd: /tmp/bbvenv/bin/coverage run --rcfile=.coveragerc /tmp/bbvenv/bin/trial -j8 --reporter=text --rterrors buildbot.test buildbot_worker.test\n\n  - title: ruff\n    condition: TESTS == \"ruff\"\n    cmd:  |\n      export PATH=/tmp/bbvenv/bin/:$PATH\n      ruff check `git ls-files |grep '.py$'` && \\\n      ruff format --check `git ls-files |grep '.py$'`\n\n  - title: mypy\n    condition: TESTS == \"mypy\"\n    cmd:  |\n      export PATH=/tmp/bbvenv/bin/:$PATH\n      (cd ./master && mypy --config-file ../pyproject.toml buildbot)\n      (cd ./worker && mypy --config-file ../pyproject.toml buildbot_worker)\n\n  # Build documentation\n  - title: docs\n    condition: TESTS == \"docs\"\n    cmd:  |\n      export PATH=/tmp/bbvenv/bin/:$PATH\n      make docs-release\n\n  # Run spell checker on documentation\n  - title: spelling\n    condition: TESTS == \"docs\"\n    cmd:  |\n      export PATH=/tmp/bbvenv/bin/:$PATH\n      make docs-release-spelling\n\n  - title: maketarballs\n    condition: TESTS in (\"e2e_react_whl\", \"e2e_react_tgz\")\n    cmd:  |\n      export PATH=/tmp/bbvenv/bin/:$PATH\n      make tarballs\n\n  - title: end to end tests\n    condition: TESTS == \"e2e_react_whl\"\n    cmd: ./common/smokedist-react.sh whl\n\n  - title: tarballs end to end tests\n    condition: TESTS == \"e2e_react_tgz\"\n    cmd: ./common/smokedist-react.sh tar.gz\n\nnotifications:\n  email: false\n\nafter_script:\n  - |\n      # codecov\n      if [ $TESTS = ci/coverage ]; then\n        curl -Os https://uploader.codecov.io/v0.4.1/linux/codecov\n        echo \"32cb14b5f3aaacd67f4c1ff55d82f037d3cd10c8e7b69c051f27391d2e66e15c  codecov\" | sha256sum --check\n        chmod +x ./codecov\n        CODECOV_TOKEN=\"b80c80d7-689d-46d7-b1aa-59168bb4c9a9\" ./codecov\n      fi\n  # List installed packages along with their versions.\n  - \"/tmp/bbvenv/bin/pip list\"\n\nsudo: false\nbranches:\n  # Only build main-line branches.\n  only:\n    - master\n    - eight\ngit:\n  depth: 300\n"
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.47265625,
          "content": "codecov:\n  require_ci_to_pass: yes\n  notify:\n    # 2 ci/coverage build from Buildbot\n    # 6 Github Actions DB builds\n    # Note that currently Appveyor builds fail to upload\n    after_n_builds: 8\n    wait_for_ci: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"70...100\"\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ncomment:\n  layout: \"reach,diff,flags,files,footer\"\n  behavior: default\n  require_changes: no\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0166015625,
          "content": "common/coveragerc"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.29296875,
          "content": "**/*.pyc\n**/dist\n**/*.egg-info\n**/build\n**/node_modules\n\n# Note: not ignoring .git so that build scripts can figure out which version of Buildbot we're\n# building.\n\n.dockerignore\n.venv*\nDockerfile.master\nmaster/_build\nmaster/docs/manual/mydashboard.html\nmaster/docs/manual/mydashboard.py\n_trial_temp\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2607421875,
          "content": "master/buildbot/__init__.py             export-subst\npkg/buildbot_pkg.py                     export-subst\nworker/buildbot_worker/__init__.py      export-subst\n.gitattributes                          export-ignore\n.gitignore                              export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6630859375,
          "content": "# All files to globally ignore\n*.pyc\n*.pyo\n*$py.class\n# vim trash:\n.*.sw[a-z]\n*.patch\n*.orig\n*.rej\n*#\n*~\nMANIFEST\n_trial_temp*\ndist\nbuild/\n.build\n*.egg-info\nmaster/docs/buildbot.html\nmaster/docs/buildbot.info\nmaster/docs/buildbot.info-1\nmaster/docs/buildbot.info-2\n.stgit-edit.txt\n.project\n.pydevproject\n.vscode\n.settings\n*/build/\nmaster/docs/buildbot\nmaster/docs/version.texinfo\nmaster/docs/docs.tgz\nmaster/docs/latest\ntwisted/plugins/dropin.cache\n.coverage\ncoverage-html\nmaster/docs/tutorial/_build\n_build\n# tox\n.tox/\n# downloaded by setup_requires eggs\n*.egg\n.eggs/\nmaster/setuptools_trial*\nsandbox\nsandbox.*\n.idea/\n/.venv*/\n\n# www\n*/node_modules/\nnode_modules\nyarn-error.log\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.4150390625,
          "content": "[settings]\nline_length=110\nknown_future_library=__future__\nknown_standard_library=html\nknown_twisted=twisted,zope,autobahn,klein,txaio\nknown_mock=mock\nknown_third_party=migrate,sqlalchemy,ldap3,txrequests,requests,MySQLdb,coverage,jinja2,dateutil,sphinx,setuptools,jwt,flask,docutils,aiohttp\nknown_first_party=buildbot,buildbot_worker\nforce_single_line=1\nsections=FUTURE,STDLIB,THIRDPARTY,MOCK,TWISTED,FIRSTPARTY,LOCALFOLDER\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 3.9443359375,
          "content": "Abdelrahman Hussein <abdelrahman@skydiver.(none)>\nA. T. Hofkamp <a.t.hofkamp@tue.nl>\nAmber Yust <ayust@yelp.com> <amber.yust@gmail.com>\nAndrew Melo <andrew.m.melo@vanderbilt.edu> <andrew.melo@gmail.com>\nAurélien Bompard <aurelien@bompard.org>\nBen Hearsum <bhearsum@mozilla.com> <bhearsum@bitters-2.local>\nBen Hearsum <bhearsum@mozilla.com> <bhearsum@foo-ix-blah.wittydomain.in>\nBen Hearsum <bhearsum@mozilla.com> <bhearsum@voot.(none)>\nBenoît Allard <benoit@aeteurope.nl>\nBenoît Allard <benoit@aeteurope.nl> <al.yazdi+github@gmail.com>\nBenoît Allard <benoit@aeteurope.nl> <benoit.allard@gmx.de>\nBrian Warner <warner@lothar.com>\nBrian Warner <warner@lothar.com> <warner-buildbot@lothar.com>\nBrian Warner <warner@lothar.com> <warner>\nBrian Warner <warner@lothar.com> <warner@allmydata.com>\nChad S Metcalf <cmetcalf@archrock.com>\nCharles Lepple <clepple@gmail.com> <clepple+buildbot@gmail.com>\nChris Soyars <ctsoyars@gmail.com>\nDan Scott <dan@coffeecode.net> <gitorious@coffeecode.net>\nDaniel Dunbar <daniel@zuster.org> <ddunbar@lordcrumb.apple.com>\nDaniel Dunbar <daniel@zuster.org> <ddunbar@smooshlab.apple.com>\nDouglas Hubler <dhubler@bigbird.(none)> <dhubler@localhost.(none)>\nDustin J. Mitchell <dustin@mozilla.com>\nDustin J. Mitchell <dustin@mozilla.com> <dustin@v.igoro.us>\nDustin J. Mitchell <dustin@mozilla.com> <dustin@zmanda.com>\nGary Poster <gary@imposter.home> <gary@gary-ubuntu.(none)>\nGary Poster <gary@imposter.home> <gary@imposter.local>\nGeorges Racinet <gracinet@purity.racinet.fr> <gracinet@ishtar.(none)>\nGeraud Boyer <geraud@gbox.local> <geraud@sparkle.(none)>\nGreg Ward <greg@gerg.ca> <gerg.ward+buildbot@gmail.com>\nIan Zimmerman <itz@clustrix.com> <itz@dell-itz.office.sproutsys.com>\nIan Zimmerman <itz@dell-itz.office.sproutsys.com> <itz@sproutsys.com> \nJohn Carr <john.carr@isotoma.com> <john.carr@unrouted.co.uk>\nJohn Ford <jford@mozilla.com> <john@johnford.info>\nJohn O'Duinn <john@oduinn.com>\nJon Olsson <jon@vexed.se> <jon.olsson@gmail.com>\nJonathan S. Romero <jonnyro@jonnyro-desktop.(none)> <jonnyro@disti-vm-jromero-ubuntu-workstation.(none)>\nJoshua Kugler <jkugler@hosanna.kugler.localdomain> <joshua@eeinternet.com>\nJustin Wood <Callek@gmail.com>\nJustin Wood <Callek@gmail.com> <bugspam.Callek@gmail.com>\nJustin Wood <Callek@gmail.com> Justin Wood <callek@gmail.com>\nKristian Nielsen <knmeister@gmail.com> <knielsen@knielsen-hq.org>\nLital Natan <procscsi@gmail.com> <litaln@Lital-Natans-MacBook-Pro.local>\nLouis Opter <kalessin@kalessin.fr> <louis@lse.epita.fr>\nLouis Opter <kalessin@kalessin.fr> <louis@lse.epitech.net>\nMarc-Antoine Ruel <maruel@chromium.org>\nMarc-Antoine Ruel <maruel@chromium.org> <maruel@gmail.com>\nMarcus Lindblom <macke@yar.nu>\nMark Lakewood <underplank@gmail.com>\nMark Lakewood <underplank@gmail.com> <markl@markl-desktop.(none)>\nMatisse Enzer <menzer@apple.com> <menzer@pple.com>\nMichael MacDonald <mjmac@pobox.com>\nMichael MacDonald <mjmac@pobox.com> <mjmac@vpn-129-150-66-84.east.sun.com>\nNate Bragg <nate.bragg@adb-air.com>\nNeil Hemingway <neil.hemingway@googlemail.com>\nNeil Hemingway <neil.hemingway@googlemail.com> <neil.hemingway@greyhavens.org.uk>\nNicolas Sylvain <nsylvain@chromium.org> <nsylvain@google.com>\nPierre Tardy <tardyp@gmail.com> <pierre.tardy@intel.com>\nQuentin Raynaud <buildbot@undoso.eu> <quentin@LAYLA.KUBUNTU>\nRandall Bosetti <rbosetti+gh@gmail.com>\nRandall Bosetti <rbosetti+gh@gmail.com> <randall@alyosha.(none)>\nRene Müller <rene.mueller@tracetronic.de>\nRene Müller <rene.mueller@tracetronic.de> <rene@spiwi.tracetronic.de> \nScott Garman <sgarman@zenlinux.com> <scott.a.garman@intel.com>\nStefan Seefeld <seefeld@sympatico.ca>\nStefan Seefeld <seefeld@sympatico.ca> <stefan@quasimodo.(none)>\nStefan Zager <szager@gmail.com> <szager@google.com>\nSteve \"Ashcrow\" Milner <smilner@redhat.com> <smilner+buildbot@redhat.com>\nWilliam Deegan <bill@baddogconsulting.com> <bdbaddog@gmail.com>\nZooko Wilcox-O'Hearn <zooko@zooko.com>\nadam <adam@adams-macbook.local> <adam@bastard.(none)>\nHarry Borkhuis <harry@aeteurope.nl>\nAndy Howell <AndyHowell@austin.rr.com>\n"
        },
        {
          "name": ".mention-bot",
          "type": "blob",
          "size": 0.06640625,
          "content": "{\n   \"userBlacklist\" : [\n      \"tomprince\",\n      \"djmitche\"\n   ]\n}\n"
        },
        {
          "name": ".pyup.yml",
          "type": "blob",
          "size": 0.236328125,
          "content": "# update schedule, default is not set\n# the bot will visit the repo once and bundle all updates in a single PR for the given\n# day/week/month\nschedule: \"every two weeks\" # allowed [\"every day\", \"every week\", \"every two weeks\", \"every month\"]\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 0.162109375,
          "content": "Contributing to Buildbot\n========================\n\nSee https://docs.buildbot.net/current/developer/quickstart.html for an introduction into contributing to buildbot.\n"
        },
        {
          "name": "Dockerfile.master",
          "type": "blob",
          "size": 4.5166015625,
          "content": "# buildbot/buildbot-master\n\n# please follow docker best practices\n# https://docs.docker.com/engine/userguide/eng-image/dockerfile_best-practices/\n\n# Use a multi-stage build:\n# https://docs.docker.com/develop/develop-images/multistage-build/\n\n# Provides a base Debian (11) image with latest buildbot master installed\n# the master image is not optimized for size, but rather uses Debian for wider package availability\n\n# Provide an intermediate Docker image named \"buildbot-build\".\n# This intermediate image builds binary wheels\n# which get installed in the final image.\n# This allows us to avoid installing build tools like gcc in the final image.\n\nFROM docker.io/library/debian:11 AS buildbot-build\nMAINTAINER  Buildbot maintainers\n\n# Last build date - this can be updated whenever there are security updates so\n# that everything is rebuilt\nENV         security_updates_as_of 2024-09-27\n\nRUN \\\n    apt-get update && \\\n    apt-get -y upgrade && \\\n    apt-get -y install -q \\\n        wget \\\n        gpg \\\n        && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Required when using nodejs from nodesource and yarn from Debian.\n# Remove when migrating to bookworm. See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=933229\nENV NODE_PATH /usr/lib/nodejs:/usr/share/nodejs\n\nRUN \\\n    KEYRING=/usr/share/keyrings/nodesource.gpg && \\\n    wget --quiet -O - https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --dearmor > \"$KEYRING\" && \\\n    gpg --no-default-keyring --keyring \"$KEYRING\" --list-keys && \\\n    chmod a+r /usr/share/keyrings/nodesource.gpg && \\\n    VERSION=node_18.x && \\\n    DISTRO=bullseye && \\\n    echo \"deb [signed-by=$KEYRING] https://deb.nodesource.com/$VERSION $DISTRO main\" >> /etc/apt/sources.list.d/nodesource.list && \\\n    echo \"deb-src [signed-by=$KEYRING] https://deb.nodesource.com/$VERSION $DISTRO main\" >> /etc/apt/sources.list.d/nodesource.list && \\\n    cat /etc/apt/sources.list.d/nodesource.list\n\nRUN \\\n    apt-get update && \\\n    apt-get -y install -q \\\n        curl \\\n        git \\\n        libcairo-gobject2 \\\n        libcairo2-dev \\\n        libgirepository1.0-dev \\\n        libglib2.0-dev \\\n        libffi-dev \\\n        libpq-dev \\\n        libssl-dev \\\n        nodejs \\\n        pkg-config \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        yarnpkg \\\n        tar \\\n        tzdata \\\n        virtualenv \\\n        && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY . /usr/src/buildbot\n\nRUN cd /usr/src/buildbot && make tarballs\nRUN virtualenv --python=python3 /buildbot_venv && \\\n    /buildbot_venv/bin/pip3 install -r /usr/src/buildbot/requirements-master-docker-extras.txt && \\\n    env CRYPTOGRAPHY_DONT_BUILD_RUST=1 /buildbot_venv/bin/pip3 install /usr/src/buildbot/dist/*.whl\n\nRUN mkdir -p /wheels && \\\n    /buildbot_venv/bin/pip3 list --format freeze | grep -v '^buildbot' | grep -v '^pkg-resources' > /wheels/wheels.txt && \\\n    cat /wheels/wheels.txt && \\\n    cd /wheels && \\\n    /buildbot_venv/bin/pip3 wheel -r wheels.txt && \\\n    rm /wheels/wheels.txt && \\\n    cp /usr/src/buildbot/dist/*.whl /wheels\n\n#==============================================================================================\n# Build the final image here.  Use build artifacts from the buildbot-build\n# container.\n\n# Note that the UI and worker packages are the latest version published on pypi\n# This is to avoid pulling node inside this container\n\nFROM docker.io/library/debian:11-slim\nMAINTAINER  Buildbot maintainers\n\n# Last build date - this can be updated whenever there are security updates so\n# that everything is rebuilt\nENV         security_updates_as_of 2024-09-27\n\nRUN \\\n    apt-get update && \\\n    apt-get -y upgrade && \\\n    apt-get -y install -q \\\n        curl \\\n        dumb-init \\\n        git \\\n        libpq5 \\\n        libcairo2 \\\n        openssh-client \\\n        python3 \\\n        python3-pip \\\n        tar \\\n        tzdata \\\n        virtualenv \\\n        && \\\n    rm -rf /var/lib/apt/lists\n\n# Build wheels in other container using the Dockerfile.build\n# and copy them into this container.\n# We do this to avoid having to pull gcc for building native extensions.\nCOPY --from=buildbot-build /wheels /wheels\n\n# install pip dependencies\nRUN virtualenv --python=python3 /buildbot_venv && \\\n    /buildbot_venv/bin/pip3 install --upgrade pip setuptools && \\\n    cd /wheels && /buildbot_venv/bin/pip3 install $(ls -1 | grep -v 'buildbot-worker') && \\\n    rm -r /root/.cache /wheels\n\nCOPY master/docker/buildbot.tac /usr/src/buildbot/buildbot.tac\nCOPY master/docker/start_buildbot.sh /usr/src/buildbot/start_buildbot.sh\n\nWORKDIR /buildbot\nCMD [\"dumb-init\", \"/usr/src/buildbot/start_buildbot.sh\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 14.767578125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 5.869140625,
          "content": "# Enable more strict mode for shell\n.SHELLFLAGS := -eu -c\n\n# developer utilities\nDOCKERBUILD := docker build --build-arg http_proxy=$$http_proxy --build-arg https_proxy=$$https_proxy\nROOT_DIR := $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))\n\n.PHONY: docs ruff virtualenv check_for_yarn\n\nifeq ($(OS),Windows_NT)\n  VENV_BIN_DIR := Scripts\n  VENV_PY_VERSION ?= python\n  VENV_CREATE := python -m venv\nelse\n  VENV_BIN_DIR := bin\n  VENV_PY_VERSION ?= python3\n  VENV_CREATE := virtualenv -p $(VENV_PY_VERSION)\nendif\n\nVENV_NAME := .venv$(VENV_PY_VERSION)\nPIP ?= $(ROOT_DIR)/$(VENV_NAME)/$(VENV_BIN_DIR)/pip\nVENV_PYTHON ?= $(ROOT_DIR)/$(VENV_NAME)/$(VENV_BIN_DIR)/python\nYARN := $(shell which yarnpkg || which yarn)\n\ncheck_for_yarn:\n\t@if [ \"$(YARN)\" = \"\" ]; then echo \"yarnpkg or yarn is not installed\" ; exit 1; fi\n\nWWW_PKGS := www/base www/console_view www/grid_view www/waterfall_view www/wsgi_dashboards www/badges\nWWW_EX_PKGS := www/nestedexample\nWWW_DEP_PKGS := www/plugin_support www/data-module www/ui\nALL_PKGS := master worker pkg $(WWW_PKGS)\n\nWWW_PKGS_FOR_UNIT_TESTS := $(filter-out www/badges www/plugin_support www/grid_view www/wsgi_dashboards, $(WWW_DEP_PKGS) $(WWW_PKGS))\n\nALL_PKGS_TARGETS := $(addsuffix _pkg,$(ALL_PKGS))\n.PHONY: $(ALL_PKGS_TARGETS)\n\n# build rst documentation\ndocs:\n\t$(MAKE) -C master/docs dev\n\t@echo \"You can now open master/docs/_build/html/index.html\"\n\ndocs-towncrier:\n\t# Check that master/docs/relnotes/index.rst is not already generated (so it's in the staging area).\n\t# If docs-release and docs-release-spelling are called one after the other, then towncrier will report duplicate release notes.\n\tif ! git diff --name-only --cached | grep -q \"master/docs/relnotes/index.rst\"; then \\\n\tif command -v towncrier >/dev/null 2>&1 ;\\\n\tthen \\\n\ttowncrier --draft | grep  'No significant changes.' || yes n | towncrier ;\\\n\tfi \\\n\tfi\n\ndocs-spelling:\n\t$(MAKE) -C master/docs SPHINXOPTS=-W spelling\n\ndocs-linkcheck:\n\t$(MAKE) -C master/docs SPHINXOPTS=-q linkcheck\n\ndocs-release: docs-towncrier\n\t$(MAKE) -C master/docs\n\ndocs-release-spelling: docs-towncrier\n\t$(MAKE) -C master/docs SPHINXOPTS=-W spelling\n\nfrontend_deps: $(VENV_NAME) check_for_yarn\n\t$(PIP) install build wheel -r requirements-ci.txt\n\tfor i in $(WWW_DEP_PKGS); \\\n\t\tdo (cd $$i; $(YARN) install --pure-lockfile; $(YARN) run build); done\n\nfrontend_tests: frontend_deps check_for_yarn\n\tfor i in $(WWW_PKGS); \\\n\t\tdo (cd $$i; $(YARN) install --pure-lockfile); done\n\tfor i in $(WWW_PKGS_FOR_UNIT_TESTS); \\\n\t\tdo (cd $$i; $(YARN) run build-dev || exit 1; $(YARN) run test || exit 1) || exit 1; done\n\n# rebuild front-end from source\nfrontend: frontend_deps\n\tfor i in pkg $(WWW_PKGS); do $(PIP) install -e $$i || exit 1; done\n\n# build frontend wheels for installation elsewhere\nfrontend_wheels: frontend_deps\n\tfor i in pkg $(WWW_PKGS); \\\n\t\tdo (cd $$i; $(VENV_PYTHON) -m build --no-isolation --wheel || exit 1) || exit 1; done\n\n# do installation tests. Test front-end can build and install for all install methods\nfrontend_install_tests: frontend_deps\n\ttrial pkg/test_buildbot_pkg.py\n\n# upgrade FE dependencies\nfrontend_yarn_upgrade: check_for_yarn\n\tfor i in $(WWW_PKGS) $(WWW_EX_PKGS) $(WWW_DEP_PKGS); \\\n\t\tdo (cd $$i; echo $$i; rm -rf yarn.lock; $(YARN) install || echo $$i failed); done\n\n# install git hooks for validating patches at commit time\nhooks:\n\tcp common/hooks/* `git rev-parse --git-dir`/hooks\nrmpyc:\n\tfind master worker \\( -name '*.pyc' -o -name '*.pyo' \\) -exec rm -v {} \\;\n\nruff:\n\truff format .\n\ndocker: docker-buildbot-worker docker-buildbot-master\n\techo done\ndocker-buildbot-worker:\n\t$(DOCKERBUILD) -t buildbot/buildbot-worker:master worker\ndocker-buildbot-worker-node:\n\t$(DOCKERBUILD) -t buildbot/buildbot-worker-node:master master/contrib/docker/pythonnode_worker\ndocker-buildbot-master:\n\t$(DOCKERBUILD) -t buildbot/buildbot-master:master master\n\n$(VENV_NAME):\n\t$(VENV_CREATE) $(VENV_NAME)\n\t$(PIP) install -r requirements-pip.txt\n\n# helper for virtualenv creation\nvirtualenv: $(VENV_NAME) check_for_yarn   # usage: make virtualenv VENV_PY_VERSION=python3.8\n\t$(PIP) install -r requirements-ci.txt \\\n\t\t-r requirements-ciworker.txt \\\n\t\t-r requirements-cidocs.txt \\\n\t\tpackaging towncrier\n\t@echo now you can type following command  to activate your virtualenv\n\t@echo . $(VENV_NAME)/$(VENV_BIN_DIR)/activate\n\nTRIALOPTS?=buildbot\n\n.PHONY: trial\ntrial: virtualenv\n\t. $(VENV_NAME)/$(VENV_BIN_DIR)/activate && trial $(TRIALOPTS)\n\nrelease_notes: $(VENV_NAME)\n\ttest ! -z \"$(VERSION)\"  #  usage: make release_notes VERSION=0.9.2\n\ttowncrier build --yes  --version $(VERSION) --date `date -u  +%F`\n\tgit commit -m \"Release notes for $(VERSION)\"\n\n$(ALL_PKGS_TARGETS): cleanup_for_tarballs frontend_deps\n\t. $(VENV_NAME)/$(VENV_BIN_DIR)/activate && ./common/maketarball.sh $(patsubst %_pkg,%,$@)\n\ncleanup_for_tarballs:\n\tfind master pkg worker www -name VERSION -exec rm {} \\;\n\trm -rf dist\n\tmkdir dist\n.PHONY: cleanup_for_tarballs\ntarballs: $(ALL_PKGS_TARGETS)\n.PHONY: tarballs\n\n# helper for release creation\nrelease: virtualenv\n\ttest ! -z \"$(VERSION)\"  #  usage: make release VERSION=0.9.2\n\ttest -d \"../bbdocs/.git\"  #  make release should be done with bbdocs populated at the same level as buildbot dir\n\tGPG_TTY=`tty` git tag -a -sf v$(VERSION) -m \"TAG $(VERSION)\"\n\tgit push buildbot \"v$(VERSION)\"  # tarballs are made by circleci.yml, and create a github release\n\texport VERSION=$(VERSION) ; . $(VENV_NAME)/$(VENV_BIN_DIR)/activate && make docs-release\n\trm -rf ../bbdocs/docs/$(VERSION)  # in case of re-run\n\tcp -r master/docs/_build/html ../bbdocs/docs/$(VERSION)\n\tcd ../bbdocs && git pull\n\t. $(VENV_NAME)/$(VENV_BIN_DIR)/activate && cd ../bbdocs && make && git add docs && git commit -m $(VERSION) && git push\n\t@echo When tarballs have been generated by circleci:\n\t@echo make finishrelease\n\nfinishrelease:\n\trm -rf dist\n\tpython3 ./common/download_release.py\n\trm -rf ./dist/v*\n\ttwine upload dist/*\n\npyinstaller: virtualenv\n\t$(PIP) install pyinstaller\n\t$(VENV_NAME)/$(VENV_BIN_DIR)/pyinstaller pyinstaller/buildbot-worker.spec\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 1.234375,
          "content": "==========\n Buildbot\n==========\n\n--------------------------------------\n The Continuous Integration Framework\n--------------------------------------\n\nBuildbot is based on original work from `Brian Warner <mailto:warner-buildbot @\nlothar . com>`_, and currently maintained by `the Botherders\n<https://github.com/buildbot/botherders>`_.\n\nVisit us on http://buildbot.net !\n\n|travis-badge|_ |codecov-badge|_ |readthedocs-badge|_\n\nBuildbot consists of several components:\n\n* master\n* worker\n* www/base\n* www/console_view\n* www/waterfall_view\n\nand so on\n\nSee the README in each subdirectory for more information\n\nRelated repositories:\n\n* https://github.com/buildbot/buildbot-media - Buildbot-related media\n* https://github.com/buildbot/buildbot-website - Source for http://buildbot.net\n\n.. |travis-badge| image:: https://travis-ci.org/buildbot/buildbot.svg?branch=master\n.. _travis-badge: https://travis-ci.org/buildbot/buildbot\n.. |codecov-badge| image:: http://codecov.io/github/buildbot/buildbot/coverage.svg?branch=master\n.. _codecov-badge: http://codecov.io/github/buildbot/buildbot?branch=master\n.. |readthedocs-badge| image:: https://readthedocs.org/projects/buildbot/badge/?version=latest\n.. _readthedocs-badge: https://readthedocs.org/projects/buildbot/builds/\n"
        },
        {
          "name": "RELEASING.rst",
          "type": "blob",
          "size": 4.2900390625,
          "content": "Creating a release\n==================\n\nThis document is documentation intended for Buildbot maintainers.\nIt documents the release process of Buildbot.\n\nStep 1: Verify that external dependants can be built\n----------------------------------------------------\n\nVerify that the following resources can be built from the latest master.\nThis can be checked by looking into the dashboards (maintainer access may be needed).\n\n - quay.io (buildbot-master) (https://quay.io/repository/buildbot/buildbot-master?tab=builds)\n\n - quay.io (buildbot-worker) (https://quay.io/repository/buildbot/buildbot-worker?tab=builds)\n\n - Read the Docs (https://readthedocs.org/projects/buildbot/builds/)\n\nThese external dependencies build only by git tag.\nThus if a release is done with broken build process, it would be impossible to fix without releasing a new version.\n\nStep 2: Release notes PR\n------------------------\n\nOpen a new branch (e.g. `release`) and run the following:\n\n    . .venv/bin/activate && make release_notes VERSION=x.y.z\n\nThis collects the release notes using the `towncrier` tool and then commits the result.\nThis step is done as a PR so that CI can check for spelling errors and similar issues.\nLocal checks are insufficient as spelling check in particular depends on what dictionaries are installed.\n\nIt's best to run `make docs-release` afterwards and check `master/docs/_build/html/relnotes/index.html` file for obvious rendering errors.\nThis will have much faster turnaround compared to if the error is noticed after the CI runs.\nIf any errors are found, just amend the commit created by `make release_notes`.\n\nCertain file names are not properly supported by the `towncrier` tool and it ignores them.\nCheck `newsfragments` directory for any forgotten release notes\n\nStep 3: Merge the release notes PR\n----------------------------------\n\nStep 4: Perform actual release\n------------------------------\n\nThis step requires the Buildbot git repository to contain `buildbot` remote that points to https://github.com/buildbot/buildbot and can be pushed to.\n\nAdditionally, the Buildbot docs repository (https://github.com/buildbot/bbdocs) must be checked out at `../bbdocs` path.\n\nPull the merge commit created on the `master` branch during the step 2.\nThen run:\n\n    make release VERSION=x.y.z\n\nThis will create the required tags, make documentation, copy it to bbdocs repo and push everything.\n\nStep 5: Draft a new release and wait for CircleCi to create release tarballs\n----------------------------------------------------------------------------\n\nThe push of tags created during step 3 will activate CircleCi configuration that generates tarballs and uploads them to GitHub.\nCircleCi will automatically publish a new release when uploading assets.\nThe release notes must be added manually by drafting a release on the GitHub UI at https://github.com/buildbot/buildbot/releases.\n\nIf you draft the release and publish it before CircleCi, make sure the release name matches the git tag.\nThis is a requirement for subsequent release scripts to work.\nManual publishing is preferred, because the releases created by CircleCi don't contain release notes, thus GitHub notifications are not informative.\n\nStep 6: Upload release to PyPI\n------------------------------\n\nThis step requires GitHub Hub tool to be installed and authorized to GitHub (https://github.com/github/hub).\nAdditionally you have to have access to GPG key that is used to sign the releases.\nFinally, you have to be added as a maintainer to all Buildbot PyPI projects.\n\nTo complete the release just run the following:\n\n    make finishrelease\n\nThe above will download the releases from GitHub and upload them using twine.\nIf you get bytes-related error after entering PyPI password, you'll need to upgrade Twine.\n\nStep 7: Announce the release\n----------------------------\n\nThis step involves announcing the release of the new Buildbot version on several channels.\nWrite an email to the BuildBot mailing lists: announce@buildbot.net, devel@buildbot.net, users@buildbot.net.\nWrite a blog post on the Buildbot Medium account: https://medium.com/buildbot.\nThe blog post should include the highlights of the release in less monotonous style than the release notes.\nAny extra important remarks can be added there.\nLastly, include the output of `git shortlog --no-merges -ns v<prev_version>...v<curr_version>` to recognize the contributors.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 2.650390625,
          "content": "# AppVeyor CI\n# https://www.appveyor.com/docs\n\nimage:\n  - Visual Studio 2019\n\nenvironment:\n  matrix:\n    # For Python versions available on AppVeyor, see\n    # http://www.appveyor.com/docs/installed-software#python\n    - PYTHON: \"C:\\\\Python312-x64\"\n\ninstall:\n  - \"SET PATH=%PYTHON%;%PYTHON%\\\\Scripts;%PATH%\"\n  - \"python -c \\\"import sys; print(sys.prefix)\\\"\"\n  - \"python -c \\\"import sys; print(sys.exec_prefix)\\\"\"\n  - \"python -c \\\"import sys; print(sys.executable)\\\"\"\n  - \"python -V -V\"\n  - \"python -m pip install -r requirements-pip.txt\"\n  - \"python -m pip install -r requirements-ci.txt\"\n  - \"python -m pip list\"\n  # Check that pywin32 is properly installed\n  - \"python -c \\\"import win32api\\\"\"\n\nbuild: false\n\ntest_script:\n  # Note that Twisted Trial does not support multiple jobs on Windows\n  # The following error is printed: \"Customizing childFDs is not supported on Windows.\"\n  - \"coverage run --rcfile=common/coveragerc -m twisted.trial --reporter=text --rterrors buildbot.test buildbot_worker.test\"\n  - ps: |\n          echo $ENV:PYTHON\n          if ($env:PYTHON -imatch 'C:\\\\Python27') {\n            iex 'pyinstaller pyinstaller/buildbot-worker.spec'\n            iex 'appveyor PushArtifact dist\\\\buildbot-worker.exe'\n          }\n\non_success:\n  - \"coverage xml --rcfile=common/coveragerc -o coverage.xml -i\"\n  - ps: |\n        (New-Object System.Net.WebClient).DownloadFile(\"https://uploader.codecov.io/v0.4.1/windows/codecov.exe\", (Join-Path $pwd \"codecov.exe\"))\n        .\\codecov.exe\n\non_failure:\n  # Store _trial_temp directory as artifact on build failure.\n  # See <https://www.appveyor.com/docs/packaging-artifacts#pushing-artifacts-from-scripts>\n  - ps: |\n          $root = Resolve-Path _trial_temp;\n          [IO.Directory]::GetFiles($root.Path, '*.*', 'AllDirectories') | % {\n              Push-AppveyorArtifact $_ -FileName $_.Substring($root.Path.Length + 1) -DeploymentName trial-log\n            }\n\n# Uncomment this part if you want to interactively debug tests on AppVeyor.\n# This will pause build at the end and setup RDP server.\n# Connection details will be printed in the build log.\n# For detail see: https://www.appveyor.com/docs/how-to/rdp-to-build-worker\n#on_finish:\n#- ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))\n\ndeploy:\n  release: $(APPVEYOR_REPO_TAG_NAME)\n  description: 'windows binary for buildbot-worker'\n  provider: GitHub\n  auth_token:\n    secure: HQNlcAyaY9Jznbl77rfNatZG62Gg+qFY7emzj5n3Wu16fkr8dLlFNTKOJlfXO5uK\n  artifact: \"buildbot-worker.exe\"\n  draft: false\n  prerelease: false\n  on:\n    appveyor_repo_tag: true        # deploy on tag push only\n    PYTHON: \"C:\\\\Python35\"\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "master",
          "type": "tree",
          "content": null
        },
        {
          "name": "newsfragments",
          "type": "tree",
          "content": null
        },
        {
          "name": "pkg",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyinstaller",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 6.8603515625,
          "content": "[tool.ruff]\nline-length = 100\ntarget-version = \"py38\"\n\n[tool.ruff.lint]\n    select = [\"W\", \"E\", \"F\", \"I\", \"PL\", \"UP\", \"T100\", \"B\", \"RUF\", \"FA\"]\n    ignore = [\n        \"E711\", # comparison to None should be 'if cond is None:'\n        \"E712\", # comparison to False should be 'if cond is False:' or 'if not cond:'\n        \"E721\", # do not compare types, use 'isinstance()'\n        \"E731\", # do not assign a lambda expression, use a def\n        \"E741\", # ambiguous variable name\n        \"E501\", # line too long (we rely on ruff format for that)\n\n        \"PLR0904\", # too-many-public-methods\n        \"PLR0911\", # too-many-return-statements\n        \"PLR0911\", # too-many-return-statements\n        \"PLR0912\", # too-many-branches\n        \"PLR0913\", # too-many-arguments\n        \"PLR0914\", # too-many-locals\n        \"PLR0915\", # too-many-statements\n        \"PLC0415\", # import-outside-toplevel\n        \"PLW0603\", # global-statement\n        \"PLW1501\", # bad-open-mode\n        \"PLR1711\", # useless-return\n        \"PLW1514\", # unspecified-encoding\n        \"PLR5501\", # collapsible-else-if\n\n        # maybe we should fix these?\n        \"PLR2004\", # magic-value-comparison\n        \"PLW2901\", # redefined-loop-name\n\n        \"UP027\", # unpacked-list-comprehension Deprecated, see: https://github.com/astral-sh/ruff/issues/12754\n\n        \"B007\", # unused-loop-control-variable\n\n        # Might be nice to have in future, but requires significant refactoring for now.\n        \"RUF012\", # mutable-class-default\n        \"RUF017\", # quadratic-list-summation (only used in one case, where didn't like the outcome: https://github.com/buildbot/buildbot/pull/8081)\n    ]\n\n[tool.ruff.lint.isort]\nforce-single-line = true\nknown-first-party = [\"buildbot\", \"buildbot_worker\"]\n\n[tool.ruff.format]\npreview = true # needed for quote-style\nquote-style = \"preserve\"\n\n[tool.towncrier]\n    package = \"buildbot\"\n    package_dir = \"master\"\n    directory = \"newsfragments\"\n    filename = \"master/docs/relnotes/index.rst\"\n    template = \"master/docs/relnotes.rst.jinja\"\n    title_format = \"{name} ``{version}`` ( ``{project_date}`` )\"\n    [[tool.towncrier.section]]\n        path = \"\"\n\n    [[tool.towncrier.type]]\n        directory = \"feature\"\n        name = \"Features\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"change\"\n        name = \"Changes\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"bugfix\"\n        name = \"Bug fixes\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"doc\"\n        name = \"Improved Documentation\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"removal\"\n        name = \"Deprecations and Removals\"\n        showcontent = true\n\n    [[tool.towncrier.type]]\n        directory = \"misc\"\n        name = \"Misc\"\n        showcontent = true\n\n[tool.mypy]\npython_version = \"3.8\"\nnamespace_packages = true\npretty = true\nmypy_path = \"$MYPY_CONFIG_FILE_DIR/master:$MYPY_CONFIG_FILE_DIR/worker\"\nplugins = \"mypy_zope:plugin\"\n    [[tool.mypy.overrides]]\n    module = \"setuptools.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"lz4.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"brotli.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"markdown.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"dateutil.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"yaml.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"psutil.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"pywintypes.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32api.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32con.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"servicemanager.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32file.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32pipe.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32service.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32serviceutil.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"pythoncom.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32event.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32process.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32security.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32com.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"winerror.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"msgpack.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"autobahn.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"requests.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"unidiff.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"croniter.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"aiohttp.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"hvac.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"influxdb.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"evalidate.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"txrequests.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"subunit.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"parameterized.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"win32job.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"ldap3.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"keystoneauth1.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"novaclient.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"libvirt.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"boto3.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"botocore.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"docker.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"txaio.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"dnotify.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"treq.*\"\n    ignore_missing_imports = true\n\n    [[tool.mypy.overrides]]\n    module = \"xerox.*\"\n    ignore_missing_imports = true\n"
        },
        {
          "name": "readthedocs.yaml",
          "type": "blob",
          "size": 0.1455078125,
          "content": "version: 2\n\nbuild:\n    os: ubuntu-22.04\n    tools:\n        python: \"3.10\"\n\npython:\n    install:\n        - requirements: requirements-readthedocs.txt\n"
        },
        {
          "name": "requirements-ci.txt",
          "type": "blob",
          "size": 2.162109375,
          "content": "-e master[test,tls]\n-e worker\n-e pkg\n# we install buildbot www from pypi to avoid the slow nodejs build at each test\nbuildbot-www==4.1.0\n\nMarkdown==3.7\ncoverage==7.6.8;  python_version >= \"3.9\"\ncoverage==7.6.1; python_version < \"3.9\" # pyup: ignore\ndocker==7.1.0\nhvac==2.3.0\nldap3==2.9.1\nmypy==1.13.0\nmypy-zope==1.0.9\npsutil==6.1.0\n\n# The following are transitive dependencies of the above. The versions are pinned so that tests\n# are reproducible. The versions should be upgraded whenever we see new versions to catch problems\n# in new versions of the packages. Whole list should be regenerated by via `pip freeze` once in a\n# while to remove no longer needed dependencies.\n\nalembic==1.14.0\nattrs==24.2.0\nautobahn==24.4.2;  python_version >= \"3.9\"\nautobahn==22.7.1;  python_version < \"3.9\" # pyup: ignore\nAutomat==24.8.1\nboto==2.49.0\nboto3==1.35.72\nbotocore==1.35.72\ncertifi==2024.8.30\ncffi==1.17.1\ncharset-normalizer==3.4.0\nconstantly==23.10.4\ncroniter==5.0.1\ncryptography==44.0.0\ndill==0.3.9\nevalidate==2.0.3\ngreenlet==3.1.1\nhyperlink==21.0.0\nidna==3.10\nincremental==24.7.2\nincremental==22.10.0;  python_version < \"3.8\" # pyup: ignore\nJinja2==3.1.5\njmespath==1.0.1\nlz4==4.3.3\nzstandard==0.23.0\nBrotli==1.1.0\nMako==1.3.6\nMarkupSafe==3.0.2;  python_version >= \"3.9\"\nMarkupSafe==2.1.5;  python_version < \"3.9\" # pyup: ignore\nmoto==5.0.22\nmsgpack==1.1.0\nmypy-extensions==1.0.0\npackaging==24.2\nparameterized==0.9.0\npyasn1==0.6.1\npyasn1-modules==0.4.1\npycparser==2.22\nPyJWT==2.10.1;  python_version >= \"3.9\"\nPyJWT==2.9.0; python_version < \"3.9\" # pyup: ignore\npyOpenSSL==24.3.0\npypugjs==5.11.0\npython-dateutil==2.9.0.post0\npytz==2024.2\nPyYAML==6.0.2\nrequests==2.32.3\nresponses==0.25.3\nruff==0.7.4\ns3transfer==0.10.4\nservice-identity==24.2.0\nsetuptools-trial==0.6.0\nsix==1.16.0\nSQLAlchemy==2.0.36\ntreq==24.9.1;  python_version >= \"3.9\"\ntreq==22.2.0;  python_version < \"3.9\" # pyup: ignore\nTwisted==24.10.0\ntxaio==23.1.1\ntxrequests==0.9.6\ntyping_extensions==4.12.2\nunidiff==0.7.5\n# botocore depends on urllib3<1.27\nurllib3==1.26.19  # pyup: ignore\nWerkzeug==3.1.3;  python_version >= \"3.9\"\nWerkzeug==3.0.6;  python_version < \"3.9\" # pyup: ignore\nxmltodict==0.14.2\nzope.event==5.0\nzope.interface==7.2\nzope.schema==7.0.1\n"
        },
        {
          "name": "requirements-cidb.txt",
          "type": "blob",
          "size": 0.423828125,
          "content": "psycopg2-binary==2.9.10\nmysqlclient==2.2.6\npg8000==1.31.2\n\n# The following are transitive dependencies of the above. The versions are pinned so that tests\n# are reproducible. The versions should be upgraded whenever we see new versions to catch problems\n# in new versions of the packages. Whole list should be regenerated by via `pip freeze` once in a\n# while to remove no longer needed dependencies.\n\nasn1crypto==1.5.1\nscramp==1.4.5\n"
        },
        {
          "name": "requirements-cidocs.txt",
          "type": "blob",
          "size": 1.8974609375,
          "content": "Sphinx==7.1.2;  python_version < \"3.9\" # pyup: ignore\nSphinx==7.4.7;  python_version == \"3.9\" # pyup: ignore\nSphinx==8.1.3;  python_version >= \"3.10\"\nsphinx-jinja==2.0.2\nsphinx-rtd-theme==2.0.0;  python_version < \"3.10\" # pyup: ignore\nsphinx-rtd-theme==3.0.2;  python_version >= \"3.10\"\nsphinxcontrib-applehelp==1.0.4;  python_version < \"3.9\" # pyup: ignore\nsphinxcontrib-applehelp==2.0.0;  python_version >= \"3.9\"\nsphinxcontrib-devhelp==1.0.2;  python_version < \"3.9\" # pyup: ignore\nsphinxcontrib-devhelp==2.0.0;  python_version >= \"3.9\"\nsphinxcontrib-htmlhelp==2.0.1;  python_version < \"3.9\" # pyup: ignore\nsphinxcontrib-htmlhelp==2.1.0;  python_version >= \"3.9\"\nsphinxcontrib-jquery==4.1.0\nsphinxcontrib-jsmath==1.0.1\nsphinxcontrib-qthelp==1.0.3;  python_version < \"3.9\" # pyup: ignore\nsphinxcontrib-qthelp==2.0.0;  python_version >= \"3.9\"\nsphinxcontrib-serializinghtml==1.1.5;  python_version < \"3.9\" # pyup: ignore\nsphinxcontrib-serializinghtml==2.0.0;  python_version >= \"3.9\"\nsphinxcontrib-spelling==8.0.0\nsphinxcontrib-websupport==1.2.4;  python_version < \"3.9\" # pyup: ignore\nsphinxcontrib-websupport==2.0.0;  python_version >= \"3.9\"\nPygments==2.18.0\ntowncrier==24.8.0\n\n# The following are transitive dependencies of the above. The versions are pinned so that tests\n# are reproducible. The versions should be upgraded whenever we see new versions to catch problems\n# in new versions of the packages. Whole list should be regenerated by via `pip freeze` once in a\n# while to remove no longer needed dependencies.\n\nalabaster==1.0.0; python_version >= \"3.10\"\nalabaster==0.7.16; python_version == \"3.9\" # pyup: ignore 1.0.0 dropped support for Python 3.9 and earlier\nalabaster==0.7.13; python_version < \"3.9\" # pyup: ignore 0.7.14 dropped support for Python 3.8 and earlier\nBabel==2.16.0\nclick==8.1.7\ndocutils==0.20.1  # pyup: ignore (sphinx-rtd-theme 2.0.0 requires docutils<0.21)\nimagesize==1.4.1\npyenchant==3.2.2\nsnowballstemmer==2.2.0\n"
        },
        {
          "name": "requirements-ciworker.txt",
          "type": "blob",
          "size": 1.0966796875,
          "content": "attrs==24.2.0\nautobahn==24.4.2;  python_version >= \"3.9\"\nautobahn==22.7.1;  python_version < \"3.9\"  # pyup: ignore\nAutomat==22.10.0;  python_version < \"3.8\"  # pyup: ignore\nAutomat==24.8.1;  python_version >= \"3.8\"\ncffi==1.15.1;  python_version < \"3.8\"  # pyup: ignore\ncffi==1.17.1;  python_version >= \"3.8\"\nconstantly==23.10.4; python_version >= \"3.8\"\nconstantly==15.1.0; python_version < \"3.8\"  # pyup: ignore\ncryptography==44.0.0\nfuncsigs==1.0.2\nhyperlink==21.0.0\nidna==3.10\nincremental==22.10.0;  python_version < \"3.8\" # pyup: ignore\nincremental==24.7.2;  python_version >= \"3.8\"\nmock==5.1.0\nparameterized==0.9.0\npbr==6.1.0\nPyHamcrest==2.1.0\npsutil==6.1.0\npycparser==2.21;  python_version < \"3.8\" # pyup: ignore\npycparser==2.22;  python_version >= \"3.8\"\nsix==1.16.0\nTwisted==23.8.0;  python_version < \"3.8\" # pyup: ignore\nTwisted==24.10.0;  python_version >= \"3.8\"\ntxaio==23.1.1\ntyping-extensions==4.7.1;  python_version < \"3.8\" # pyup: ignore\ntyping-extensions==4.12.2;  python_version >= \"3.8\"\nzope.interface==6.4.post2;  python_version < \"3.8\" # pyup: ignore\nzope.interface==7.2;  python_version >= \"3.8\"\n-e worker\n"
        },
        {
          "name": "requirements-master-docker-extras.txt",
          "type": "blob",
          "size": 0.06640625,
          "content": "requests==2.32.3\npsycopg2==2.9.10\ntxrequests==0.9.6\npycairo==1.27.0\n"
        },
        {
          "name": "requirements-pip.txt",
          "type": "blob",
          "size": 0.3349609375,
          "content": "pip==24.0; python_version < \"3.8\"  # pyup: ignore\npip==24.3.1; python_version >= \"3.8\"\nsetuptools==68.0.0; python_version < \"3.8\"  # pyup: ignore\nsetuptools==75.3.0; python_version == \"3.8\"  # pyup: ignore\nsetuptools==75.6.0; python_version >= \"3.9\"\nwheel==0.42.0; python_version < \"3.8\"  # pyup: ignore\nwheel==0.45.1; python_version >= \"3.8\"\n"
        },
        {
          "name": "requirements-readthedocs.txt",
          "type": "blob",
          "size": 0.1201171875,
          "content": "# Requirements list for building documentation on ReadTheDocs.\n\n# Install master with the docs dependencies\n-e master[docs]"
        },
        {
          "name": "worker",
          "type": "tree",
          "content": null
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}