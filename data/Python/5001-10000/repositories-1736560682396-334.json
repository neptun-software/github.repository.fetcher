{
  "metadata": {
    "timestamp": 1736560682396,
    "page": 334,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "awslabs/aws-shell",
      "stars": 7240,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".changes",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.36328125,
          "content": "*.py[co]\n*.DS_Store\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nvar\nsdist\ndevelop-eggs\n.installed.cfg\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\n.cache\n\n#Translations\n*.mo\n\n#Mr Developer\n.mr.developer.cfg\n\n# Emacs backup files\n*~\n\n# Eclipse IDE\n/.project\n/.pydevproject\n\n# IDEA IDE\n.idea*\nsrc/\n\n# Completions Index\ncompletions.idx\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 11.2509765625,
          "content": "[MASTER]\n\n# Specify a configuration file.\n#rcfile=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=compat.py\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Use multiple processes to speed up Pylint.\njobs=1\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-whitelist=\n\n# Allow optimization of some AST trees. This will activate a peephole AST\n# optimizer, which will apply various small optimizations. For instance, it can\n# be used to obtain the result of joining multiple strings with the addition\n# operator. Joining a lot of strings can lead to a maximum recursion error in\n# Pylint and this flag can prevent that. It has one side effect, the resulting\n# AST will be different than the one from reality.\noptimize-ast=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time. See also the \"--disable\" option for examples.\n#enable=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=E1608,R0201,W1627,E1601,E1603,E1602,E1605,E1604,E1607,E1606,W1621,W1620,W1623,W1622,W1625,W1624,W1609,W1608,W1607,W1606,W1605,W1604,W1603,W1602,W1601,W1639,W0613,W1640,I0021,W1638,I0020,C0111,W1618,W1619,W1630,W1626,W1637,W1634,W1635,W1610,W1611,W1612,W1613,W1614,W1615,W1616,W1617,W1632,R0903,W1633,W0231,W0704,W0232,W1628,W1629,W1636\n\n\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\".\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n\n[BASIC]\n\n# List of builtins function names that should not be used, separated by a comma\nbad-functions=apply,reduce\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=e,i,j,k,n,ex,Run,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# Regular expression matching correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Naming hint for function names\nfunction-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{0,50}$\n\n# Naming hint for variable names\nvariable-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct constant names\nconst-rgx=(([a-zA-Z_][a-zA-Z0-9_]*)|(__.*__))$\n\n# Naming hint for constant names\nconst-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Regular expression matching correct attribute names\nattr-rgx=[a-z_][a-z0-9_]{1,50}$\n\n# Naming hint for attribute names\nattr-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct argument names\nargument-rgx=[a-z_][a-z0-9_]{0,50}$\n\n# Naming hint for argument names\nargument-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Naming hint for class attribute names\nclass-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Naming hint for inline iteration names\ninlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Naming hint for class names\nclass-name-hint=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression matching correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Naming hint for module names\nmodule-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression matching correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,50}$\n\n# Naming hint for method names\nmethod-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=.*\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=80\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n# List of optional constructs for which whitespace checking is disabled\nno-space-check=trailing-comma,dict-separator\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \" \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=3\n\n# Ignore comments when computing similarities.\nignore-comments=no\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=no\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis\nignored-modules=\n\n# List of classes names for which member attributes should not be checked\n# (useful for classes with attributes dynamically set).\nignored-classes=SQLObject\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E0201 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=REQUEST,acl_users,aq_parent,objects,DoesNotExist,md5,sha1,sha224,sha256,sha384,sha512\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=_|dummy|ignore\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n\n# Maximum number of locals for function / method body\nmax-locals=15\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of statements in function / method body\nmax-statements=30\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=5\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=0\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,string,TERMIOS,Bastion,rexec,UserDict\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4501953125,
          "content": "language: python\n\nmatrix:\n    include:\n        - python: 2.7\n          env: TEST_TYPE=test\n        - python: 2.7\n          env: TEST_TYPE=check\n        - python: 3.4\n          env: TEST_TYPE=test\n        - python: 3.5\n          env: TEST_TYPE=test\n        - python: 3.6\n          env: TEST_TYPE=test\n\nsudo: false\ninstall:\n  - if [[ $TEST_TYPE == 'check' ]]; then pip install -r requirements-dev.txt; fi\n  - python scripts/ci/install\nscript:\n  - make $TEST_TYPE\n"
        },
        {
          "name": "CHANGELOG.rst",
          "type": "blob",
          "size": 2.3466796875,
          "content": "=========\nCHANGELOG\n=========\n\n0.2.2\n=====\n\n* bugfix:Dependency: Fix bcdoc import errors. Fixes `#247 <https://github.com/awslabs/aws-shell/issues/247>`__.\n\n0.2.1\n=====\n\n* bugfix:AWS CLI: Fixes `#208 <https://github.com/awslabs/aws-shell/issues/208>`__. Update the AWS Shell to support the latest version of the AWS CLI.\n\n0.2.0\n=====\n\n* bugfix:Command History: Ensure aws prefix is not prepended twice in command history.\n  Fixes `#157 <https://github.com/awslabs/aws-shell/issues/157>`__\n* bugfix:Keybinding: Switching between emacs/vi keybindings now functions properly\n* enhancement:Documentation: The documentation pane can now be focused and navigated.\n  Fixes `#74 <https://github.com/awslabs/aws-shell/issues/74>`__, `#159 <https://github.com/awslabs/aws-shell/issues/159>`__\n\n0.1.1\n=====\n\n* bugfix:AWS CLI: Fix issue with latest version of the AWS CLI\n  that would cause the AWS Shell to raise an exception on startup.\n  The minimum version of the AWS CLI has been bumped to 1.10.30.\n  (`issue 118 <https://github.com/awslabs/aws-shell/issues/118>`__)\n\n0.1.0\n=====\n\n* feature:Dot Commands: Add ``.exit/.quit`` dot commands\n  (`issue 97 <https://github.com/awslabs/aws-shell/pull/97>`__)\n* feature:Documentation: Show documentation for global arguments\n  (`issue 51 <https://github.com/awslabs/aws-shell/issues/51>`__)\n* feature:Dot Commands: Add ``.cd`` dot command\n  (`issue 97 <https://github.com/awslabs/aws-shell/issues/76>`__)\n* feature:Dot Commands: Add ``.profile`` dot command\n  (`issue 97 <https://github.com/awslabs/aws-shell/issues/9>`__)\n* feature:Command Line Arguments: Add ``--profile`` command line\n  option (`issue 89 <https://github.com/awslabs/aws-shell/issues/89>`__)\n* bugfix:Completer: Fix crash when attempting server side completion\n  with no region configured option\n  (`issue 84 <https://github.com/awslabs/aws-shell/issues/84>`__)\n* feature:Lexer: Add lexer/syntax highlighting\n  (`issue 27 <https://github.com/awslabs/aws-shell/issues/27>`__)\n* feature:Server Side Completion: Add server side completion for\n  Elastic Load Balancing\n  (`issue 79 <https://github.com/awslabs/aws-shell/pull/79>`__)\n* feature:Server Side Completion: Add server side completion for\n  Amazon Kinesis\n  (`issue 73 <https://github.com/awslabs/aws-shell/pull/73>`__)\n* bugfix:Windows: Fix crash when using ``.edit`` on Windows\n  (`issue 55 <https://github.com/awslabs/aws-shell/pull/55>`__)\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1337890625,
          "content": "include README.rst\ninclude LICENSE.txt\ninclude NOTICE.txt\ninclude awsshell/awsshellrc\nrecursive-include awsshell/data *.json\ngraft tests\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.978515625,
          "content": "# Eventually I'll add:\n# py.test --cov awsshell --cov-report term-missing --cov-fail-under 95 tests/\n# which will fail if tests are under 95%\n\ncheck:\n\t###### FLAKE8 #####\n\t# No unused imports, no undefined vars,\n\t# follow pep8, and max cyclomatic complexity of 15.\n\t# I'd eventually like to lower this down to < 10.\n\tflake8 --ignore=E731,W503 --exclude awsshell/compat.py --max-complexity 15 awsshell/*.py\n\t#\n\t#\n\t##### DOC8 ######\n\t# Correct rst formatting for docstrings\n\t#\n\t##\n\tdoc8 awsshell/*.py\n\t#\n\t#\n\t#\n\t# Proper docstring conventions according to pep257\n\t#\n\t#\n\tpep257 --add-ignore=D100,D101,D102,D103,D104,D105,D204\n\t#\n\t#\n\t#\n\t###### PYLINT ERRORS ONLY ######\n\t#\n\t#\n\t#\n\tpylint --rcfile .pylintrc -E awsshell\n\ntest:\n\tpython scripts/ci/run-tests\n\npylint:\n\t###### PYLINT ######\n\t# Python linter.  This will generally not have clean output.\n\t# So you'll need to manually verify this output.\n\t#\n\t#\n\tpylint --rcfile .pylintrc awsshell\n\ncoverage:\n\tpy.test --cov awsshell --cov-report term-missing tests/\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.080078125,
          "content": "AWS Shell\nCopyright 2015 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 9.8046875,
          "content": "aws-shell - The interactive productivity booster for the AWS CLI\n================================================================\n\n.. image:: https://aws-developer-blog-media.s3-us-west-2.amazonaws.com/cli/Super-Charge-Your-AWS-Command-Line-Experience-with-aws-shell/aws-shell-final.gif\n\n\nInstallation\n============\n\nThe aws-shell requires python and `pip`_ to install.\nYou can install the aws-shell using `pip`_::\n\n    $ pip install aws-shell\n\nIf you are not installing into a virtualenv you can run::\n\n    $ sudo pip install aws-shell\n\n**Mac OS X (10.11 El Capitan) users**: There is a known issue with Apple and\nits included python package dependencies (more info at\nhttps://github.com/pypa/pip/issues/3165).\nWe are investigating ways to fix this issue but in the meantime,\nto install the aws-shell, you can run:\n``sudo pip install aws-shell --upgrade --ignore-installed six``\n\nOnce you've installed the aws-shell, you can now run::\n\n    $ aws-shell\n\nTo exit the shell, press ``Ctrl-D``.\n\nUpgrading the aws-shell\n-----------------------\n\nIf you want to upgrade to the latest version of the aws-shell,\nyou can run::\n\n    $ pip install --upgrade aws-shell\n\nYou can also use this upgrade command whenever a new version of the AWS CLI is\nreleased that includes new services and API updates.  You will then be\nable to use these new services and API updates in the aws-shell.\n\nSupported Python Versions\n-------------------------\n\nThe aws-shell works on the same python versions supported by the AWS CLI:\n\n* 2.6.5 and greater\n* 2.7.x and greater\n* 3.3.x and greater\n* 3.4.x and greater\n\n\nConfiguration\n=============\n\nThe aws-shell uses the same configuration settings as the AWS CLI.\nIf you've never used the AWS CLI before, the easiest way to get\nstarted is to run the ``configure`` command::\n\n    $ aws-shell\n    aws> configure\n    AWS Access Key ID [None]: your-access-key-id\n    AWS Secret Access Key [None]: your-secret-access-key\n    Default region name [None]: region-to-use (e.g us-west-2, us-west-1, etc).\n    Default output format [None]:\n    aws>\n\nFor more information about configure settings, see the\n`AWS CLI Getting Started Guide`_.\n\nBasic Usage\n===========\n\nThe aws-shell accepts the same commands as the AWS CLI, except you don't\nneed to provide the ``aws`` prefix.  For example, here are a few commands\nyou can try::\n\n\n    $ aws-shell\n    aws> ec2 describe-regions\n    {\n        \"Regions\": [\n            {\n                \"Endpoint\": \"ec2.eu-west-1.amazonaws.com\",\n                \"RegionName\": \"eu-west-1\"\n            },\n            ...\n    aws> s3 ls\n    2015-12-07 15:03:34 bucket1\n    2015-12-07 15:03:34 bucket2\n    aws> dynamodb list-tables --output text\n    TABLENAMES     First\n    TABLENAMES     Second\n    TABLENAMES     Third\n\nProfiles\n--------\n\nThe aws-shell supports AWS CLI profiles.  You have two options to use\nprofiles.  First, you can provide a profile when you start the aws-shell::\n\n    $ aws-shell --profile prod\n    aws>\n\nWhen you do this all the server side completion as well as CLI commands\nyou run will automatically use the ``prod`` profile.\n\nYou can also change the current profile while you're in the aws-shell::\n\n    $ aws-shell\n    aws> .profile demo\n    Current shell profile changed to: demo\n\nYou can also check what profile you've configured in the aws-shell using::\n\n    aws> .profile\n    Current shell profile: demo\n\nAfter changing your profile using the ``.profile`` dot command, all\nserver side completion as well as CLI commands will automatically use\nthe new profile you've configured.\n\n\nFeatures\n========\n\nAuto Completion of Commands and Options\n---------------------------------------\n\nThe aws-shell provides auto completion of commands and\noptions as you type.\n\n\n.. image:: https://cloud.githubusercontent.com/assets/368057/11824078/784a613e-a32c-11e5-8ac5-f1d1873cc643.png\n\n\nShorthand Auto Completion\n-------------------------\n\nThe aws-shell can also fill in an example of the\nshorthand syntax used for various AWS CLI options:\n\n.. image:: https://cloud.githubusercontent.com/assets/368057/11823453/e95d85da-a328-11e5-8b8d-67566eccf9e3.png\n\n\nServer Side Auto Completion\n---------------------------\n\nThe aws-shell also leverages `boto3`_, the AWS SDK for Python, to auto complete\nserver side resources such as Amazon EC2 instance Ids, Amazon Dynamodb table\nnames, AWS IAM user names, Amazon S3 bucket names, etc.\n\nThis feature is under active development.  The list of supported resources\ncontinues to grow.\n\n.. image:: https://cloud.githubusercontent.com/assets/368057/11824022/3648b4fc-a32c-11e5-8e18-92f028eb1cee.png\n\n\nFuzzy Searching\n---------------\n\nEvery auto completion value supports fuzzy searching.  This enables you to\nspecify the commands, options, and values you want to run with even less\ntyping.  You can try typing:\n\n* The first letter of each sub word: ``ec2 describe-reserved-instances-offerings``\n  -> ``ec2 drio``\n* A little bit of each word: ``ec2 describe-instances`` -> ``ec2 descinst``\n* Any part of the command: ``dynamodb table`` -> Offers all commands that\n  contain the subsequence ``table``.\n\n\n.. image:: https://cloud.githubusercontent.com/assets/368057/11823996/18e69d16-a32c-11e5-80a2-defbaa6a8a80.png\n\nInline Documentation\n--------------------\n\nThe aws-shell will automatically pull up documentation as you type commands.\nIt will show inline documentation for CLI options.  There is also a separate\ndocumentation panel that will show documentation for the current command or\noption you are typing. Pressing F9 will toggle focus to the documentation panel\nallowing you to navigate it using your selected keybindings.\n\n\n.. image:: https://cloud.githubusercontent.com/assets/368057/11823320/36ae9b04-a328-11e5-9661-81abfc0afe5a.png\n\n\nFish-Style Auto Suggestions\n---------------------------\n\nThe aws-shell supports Fish-style auto-suggestions. Use the right arrow key to\ncomplete a suggestion.\n\n.. image:: https://cloud.githubusercontent.com/assets/368057/11822961/4bceff94-a326-11e5-87fa-c664e1e82be4.png\n\nCommand History\n---------------\n\nThe aws-shell records the commands you run and writes them to\n``~/.aws/shell/history``.  You can use the up and down arrow keys to scroll\nthrough your history.\n\n.. image:: https://cloud.githubusercontent.com/assets/368057/11823211/b5851e9a-a327-11e5-877f-687dc1f90e27.png\n\nToolbar Options\n---------------\n\nThe aws-shell has a bottom toolbar that provides several options:\n\n* ``F2`` toggles between fuzzy and substring matching\n* ``F3`` toggles between VI and Emacs key bindings\n* ``F4`` toggles between single and multi column auto completions\n* ``F5`` shows and hides the help documentation pane\n* ``F9`` toggles focus between the cli and documentation pane\n* ``F10`` or ``Ctrl-D`` exits the aws-shell\n\nAs you toggle options in the toolbar, your preferences are persisted\nto the ``~/.aws/shell/awsshellrc`` file so that the next time you run\nthe aws-shell, your preferences will be restored.\n\n.. image:: https://cloud.githubusercontent.com/assets/368057/11823907/8c3f1e60-a32b-11e5-9f99-fe504ea0a5dc.png\n\nDot Commands\n------------\n\nThe aws-shell provides additional commands specific to the aws-shell.\nThe commands are available by adding the ``.`` prefix before a command.\n\nExiting the Shell\n~~~~~~~~~~~~~~~~~\nYou can run the ``.exit`` or ``.quit`` commands to exit the shell.\n\nCreating Shell Scripts with .edit\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThere are times when you may want to take a sequence of commands\nyou've run in the aws-shell and combine them into a shell script.\nIn addition to the command history that's persisted to the\nhistory file, the aws-shell also keeps track of all the commands\nyou've run since you first started your aws-shell session.\n\nYou can run the ``.edit`` command to open all these commands in\nan editor.  The aws-shell will use the ``EDITOR`` environment\nvariable before defaulting to ``notepad`` on Windows and\n``vi`` on other platforms.\n\n::\n\n    aws> ec2 describe-instances\n    aws> dynamodb list-tables\n    aws> .edit\n\nChanging Profiles with .profile\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can change the current AWS CLI profile used by the aws-shell\nby using the ``.profile`` dot command.  If you run the ``.profile``\ncommand with no arguments, the currently configured shell profile\nwill be printed.\n\n::\n\n    aws> .profile demo\n    Current shell profile changed to: demo\n    aws> .profile\n    Current shell profile: demo\n\n\n.cd\n~~~\n\nYou can change the current working directory of the aws-shell by using\nthe ``.cd`` command::\n\n    aws> !pwd\n    /usr\n    aws> .cd /tmp\n    aws> !pwd\n    /tmp\n\n\nExecuting Shell Commands\n------------------------\n\nThe aws-shell integrates with other commands in several ways.\nFirst, you can pipe AWS CLI commands to other processes as well\nas redirect output to a file::\n\n    aws> dynamodb list-tables --output text | head -n 1\n    TABLENAMES     First\n    aws> dynamodb list-tables --output text > /tmp/foo.txt\n\nSecond, if you want to run a shell command rather than an AWS CLI\ncommand, you can add the ``!`` prefix to your command::\n\n    aws> !ls /tmp/\n    foo.txt                                    bar.txt\n\nDeveloper Preview Status\n========================\n\nThe aws-shell is currently in developer preview.\nWe welcome feedback, feature requests, and bug reports.\nThere may be backwards incompatible changes made in order\nto respond to customer feedback as we continue to iterate\non the aws-shell.\n\n\nMore Information\n================\n\nBelow are miscellaneous links for more information:\n\n* `AWS CLI Reference Docs`_\n* `AWS CLI User Guide`_\n* `AWS CLI Blog`_\n* `AWS CLI Github Repo`_\n\n.. _pip: http://www.pip-installer.org/en/latest/\n.. _AWS CLI Getting Started Guide: http://docs.aws.amazon.com/cli/latest/userguide/cli-chap-getting-started.html\n.. _boto3: https://github.com/boto/boto3\n.. _AWS CLI Reference Docs: http://docs.aws.amazon.com/cli/latest/reference/\n.. _AWS CLI User Guide: http://docs.aws.amazon.com/cli/latest/userguide/\n.. _AWS CLI Blog: https://blogs.aws.amazon.com/cli/\n.. _AWS CLI Github Repo: https://github.com/aws/aws-cli\n"
        },
        {
          "name": "awsshell",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.076171875,
          "content": "doc8==0.6.0\nflake8==2.5.0\npep257==0.7.0\npylint==1.7.2\n-rrequirements-test.txt\n"
        },
        {
          "name": "requirements-test.txt",
          "type": "blob",
          "size": 0.21484375,
          "content": "pytest==3.0.2\npytest-cov==2.3.1\nmock==1.3.0\ntox==2.2.1\nconfigobj==5.0.6\n# Note you need at least pip --version of 6.0 or\n# higher to be able to pick on these version specifiers.\nunittest2==1.1.0; python_version == '2.6'\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.02734375,
          "content": "[bdist_wheel]\nuniversal = 1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.6787109375,
          "content": "#!/usr/bin/env python\nimport re\nimport ast\n\nfrom setuptools import setup, find_packages\n\n\nrequires = [\n    'awscli>=1.16.10,<2.0.0',\n    'prompt-toolkit>=1.0.0,<1.1.0',\n    'boto3>=1.9.0,<2.0.0',\n    'configobj>=5.0.6,<6.0.0',\n    'Pygments>=2.1.3,<3.0.0',\n]\n\n\nwith open('awsshell/__init__.py', 'r') as f:\n    version = str(\n        ast.literal_eval(\n            re.search(\n                r'__version__\\s+=\\s+(.*)',\n                f.read()).group(1)))\n\n\nsetup(\n    name='aws-shell',\n    version=version,\n    description='AWS Shell',\n    long_description=open('README.rst').read(),\n    author='James Saryerwinnie',\n    url='https://github.com/awslabs/aws-shell',\n    packages=find_packages(exclude=['tests*']),\n    include_package_data=True,\n    package_data={'awsshell': ['data/*/*.json',\n                               'awsshellrc']},\n    install_requires=requires,\n    entry_points={\n        'console_scripts': [\n            'aws-shell = awsshell:main',\n            'aws-shell-mkindex = awsshell.makeindex:main',\n        ]\n    },\n    license=\"Apache License 2.0\",\n    classifiers=(\n        'Development Status :: 3 - Alpha',\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'Natural Language :: English',\n        'License :: OSI Approved :: Apache Software License',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 2.6',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n    ),\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.1044921875,
          "content": "[tox]\nenvlist = py26,py27,py33,py34,py35,py36\n\n[testenv]\ncommands = py.test\ndeps = -rrequirements-test.txt\n"
        }
      ]
    }
  ]
}