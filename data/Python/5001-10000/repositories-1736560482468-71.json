{
  "metadata": {
    "timestamp": 1736560482468,
    "page": 71,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hummingbot/hummingbot",
      "stars": 9178,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 1.8291015625,
          "content": "[run]\nsource_pkgs = hummingbot\nomit =\n        hummingbot/core/gateway/*\n        hummingbot/core/management/*\n        hummingbot/client/config/config_helpers.py\n        hummingbot/client/config/conf_migration.py\n        hummingbot/client/config/security.py\n        hummingbot/client/hummingbot_application.py\n        hummingbot/client/command/*\n        hummingbot/client/settings.py\n        hummingbot/client/ui/completer.py\n        hummingbot/client/ui/layout.py\n        hummingbot/client/tab/*\n        hummingbot/client/ui/parser.py\n        hummingbot/connector/derivative/position.py\n        hummingbot/connector/exchange/bitfinex*\n        hummingbot/connector/exchange/foxbit*\n        hummingbot/connector/derivative/dydx_v4_perpetual/*\n        hummingbot/connector/derivative/dydx_v4_perpetual/data_sources/*\n        hummingbot/connector/exchange/injective_v2/account_delegation_script.py\n        hummingbot/connector/exchange/paper_trade*\n        hummingbot/connector/gateway/**\n        hummingbot/connector/test_support/*\n        hummingbot/core/utils/gateway_config_utils.py\n        hummingbot/core/utils/kill_switch.py\n        hummingbot/core/utils/wallet_setup.py\n        hummingbot/connector/mock*\n        hummingbot/strategy/*/start.py\n        hummingbot/strategy/dev*\n        hummingbot/user/user_balances.py\n        hummingbot/connector/exchange/cube/cube_ws_protobufs/*\n        hummingbot/strategy_v2/backtesting/*\ndynamic_context = test_function\nbranch = true\n\n[report]\nfail_under = 70\nprecision = 2\nskip_empty = true\nexclude_lines =\n    @(abc\\.)?abstractmethod\n    if TYPE_CHECKING:\n    pragma: no cover\n    if __name__ == .__main__.:\n    if 0:\n    raise AssertionError\n    raise NotImplementedError\n    if settings.DEBUG\n    except asyncio.exceptions.TimeoutError:\n\n[html]\ndirectory = coverage_html_report\nshow_contexts = true\n\n[xml]\noutput = coverage.xml\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1767578125,
          "content": "/data\n/logs\n/build\n/dist\n/.git\n/.github\n.DS_Store\n/conf_backup\n/conf/strategies/*.yml\n/conf/*.yml\n/conf/gateway_connections.json\n/conf/.password_verification\n/conf/connectors/*.yml\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.2880859375,
          "content": "[flake8]\nfilename = *.py, *.pyx, *.pxd\nignore = E251, E501,E702,W504,W503\nper-file-ignores =\n    hummingbot/**/*.pyx: E225, E226, E251, E999\n    hummingbot/**/*.pxd: E225, E226, E251, E999\n    test/**/*.pyx: E225, E226, E251, E999\n    test/**/*.pxd: E225, E226, E251, E999\nmax-line-length = 120\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.29296875,
          "content": "# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# .idea\n/.idea\n\n# CMake\ncmake-build-debug/\n\n## File-based project format:\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n__pycache__\n.ipynb_checkpoints\n*.pyc\n\n# Cython objects\n/**/*.so\n/**/*.pyd\n/hummingbot/**/*.c\n/hummingbot/**/*.cpp\n!/hummingbot/core/cpp/*.cpp\n/hummingbot/wallet/*.c\n/hummingbot/wallet/*.cpp\n/hummingbot/wallet/ethereum/*.c\n/hummingbot/wallet/ethereum/*.cpp\n/test/**/*.cpp\n/build\n\n# Local files\n**/.DS_Store\nportfolio_value.csv\n/notebooks\n/data\ndebug.log\n/installation/docker-commands/hummingbot_files\n\n# Distribution files\n/build\n/dist\n/src\n/*.egg-info\n*.whl\n\n\n# VSCode\n.vscode/\n.history/\n\n# emacs files\n\\#*\\#\n.\\#*\n\n# Documentation build dir\n/documentation/site/\n\n# Cert files\n/certs\n*.pem\n\n# Coverage\n.coverage\n/cover/\n/coverage_html_report/\ncoverage.xml\n\n# misc\n*.srl\n*.key\n*.crt\n*.log\n\n# Debug console\n.debug_console_ssh_host_key\n\n/conf_backup\n\n# External SDK files\n/**/.chain_cookie\n/**/.injective_cookie\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.7041015625,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v2.3.0\n    hooks:\n    - id: flake8\n      types: ['file']\n      files: \\.(py|pyx|pxd)$\n    - id: detect-private-key\n-   repo: https://github.com/pre-commit/mirrors-eslint\n    rev: v8.10.0\n    hooks:\n    -   id: eslint\n        files: \\.[jt]sx?$  # *.js, *.jsx, *.ts and *.tsx\n        types: [file]\n-   repo: https://github.com/CoinAlpha/git-hooks\n    rev: 78f0683233a09c68a072fd52740d32c0376d4f0f\n    hooks:\n    -   id: detect-wallet-private-key\n        types: [file]\n        exclude: .json\n-   repo: https://github.com/pycqa/isort\n    rev: 5.12.0\n    hooks:\n      - id: isort\n        files: \"\\\\.(py)$\"\n        args: [--settings-path=pyproject.toml]\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.2783203125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at operations@hummingbot.org. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.9814453125,
          "content": "# Contribution Guidelines\n\n## General Workflow\n\n1. Fork the `hummingbot/hummingbot` repository.\n2. Create a new branch from the `development` branch in your fork.\n3. Commit your changes to your branch.\n4. Once you've completed your fix, feature, connector, or documentation:\n\n   - Rebase upstream changes into your branch.\n   - Create a pull request to the `development` branch.\n   - Include a detailed description of your changes.\n   - Ensure to `allow edits by maintainers` before submitting the pull request.\n\n5. Your code changes will be reviewed and tested by the Foundation QA team.\n6. Address any changes requested by your reviewer, fix issues raised, and push your fixes as a single new commit.\n7. Once the pull request has been reviewed and accepted, it will be merged by a member of the Hummingbot Foundation team.\n\n**Note:** Tests are crucial. If your pull request contains new, testable behavior, please submit tests. Refer to the 'Unit Test Coverage' section for more information.\n\n## Detailed Workflow\n\n### 1. Fork the Repository\n\nUse GitHub's interface to fork the repo, add the Hummingbot repo as an upstream remote, and fetch upstream data:\n\n```bash\ngit remote add upstream https://github.com/hummingbot/hummingbot.git\ngit fetch upstream\n```\n\n### 2. Create Your Branch\n\nCreate your local branch following this naming convention:\n\n- feat/...\n- fix/...\n- refactor/...\n- doc/...\n\nCreate and switch to a new local branch called feat/[branch_name] based on the development branch of the remote upstream:\n\n```bash\ngit checkout -b feat/[branch_name] upstream/development\n```\n\n### 3. Commit Changes to Your Branch\n\nMake commits to your branch. Prefix each commit like so:\n\n- (feat) add a new feature\n- (fix) fix inconsistent tests\n- (refactor) ...\n- (cleanup) ...\n- (doc) ...\n\nCommit messages should be written in the present tense, e.g., \"(feat) add unit tests\". The first line of your commit message should be a summary of what the commit changes, aiming for about 70 characters max. If you want to explain the commit in more depth, provide a more detailed description after a blank line following the first line.\n\n### 4. Rebase Upstream Changes\n\nRebase upstream changes to the development branch into yours by running this command from your branch:\n\n```bash\ngit pull --rebase upstream development\n```\n\nIf there are conflicting changes, git will pause rebasing to allow you to sort out the conflicts. Once you are done fixing conflicts for a specific commit, run:\n\n```bash\ngit rebase --continue\n```\n\nEnsure all tests pass after rebasing.\n\n### 5. Create a Pull Request\n\nCreate a clear pull request from your fork and branch to the upstream `development` branch, detailing your changes. Check 'Allow edits by maintainers' for the Foundation team to update your branch with development whenever needed.\n\nIf the Foundation team requests changes, make more commits to your branch to address these, then follow this process again from rebasing onwards. Once you've addressed the requests, request further review.\n\n## Unit Test Coverage\n\nA minimum of 80% unit test coverage is required for all changes included in a pull request. However, some components, like UI components, are excluded from this validation.\n\nTo run tests locally, run `make test` after activating the environment.\n\nTo calculate the diff-coverage locally on your computer, run `make development-diff-cover` after running all tests.\n\n## Checklist\n\n- Did I create my branch from `development` (don't create new branches from existing feature branches)?\n- Did I follow the correct naming convention for my branch?\n- Is my branch focused on a single main change?\n- Do all of my changes directly relate to this change?\n- Did I rebase the upstream development branch after I finished all my work?\n- Did I write a clear pull request message detailing what changes I made?\n- Did I get a code review?\n- Did I make any requested changes from that code review?\n\nIf you adhere to these guidelines and make quality changes, you should have no problems getting your contributions accepted. Thank you for contributing!\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.228515625,
          "content": "# Set the base image\nFROM continuumio/miniconda3:latest AS builder\n\n# Install system dependencies\nRUN apt-get update && \\\n    apt-get install -y sudo libusb-1.0 gcc g++ python3-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /home/hummingbot\n\n# Create conda environment\nCOPY setup/environment.yml /tmp/environment.yml\nRUN conda env create -f /tmp/environment.yml && \\\n    conda clean -afy && \\\n    rm /tmp/environment.yml\n\n# Copy remaining files\nCOPY bin/ bin/\nCOPY hummingbot/ hummingbot/\nCOPY scripts/ scripts/\nCOPY controllers/ controllers/\nCOPY scripts/ scripts-copy/\nCOPY setup.py .\nCOPY LICENSE .\nCOPY README.md .\n\n# activate hummingbot env when entering the CT\nSHELL [ \"/bin/bash\", \"-lc\" ]\nRUN echo \"conda activate hummingbot\" >> ~/.bashrc\n\nRUN python3 setup.py build_ext --inplace -j 8 && \\\n    rm -rf build/ && \\\n    find . -type f -name \"*.cpp\" -delete\n\n\n# Build final image using artifacts from builder\nFROM continuumio/miniconda3:latest AS release\n\n# Dockerfile author / maintainer\nLABEL maintainer=\"Fede Cardoso @dardonacci <federico@hummingbot.org>\"\n\n# Build arguments\nARG BRANCH=\"\"\nARG COMMIT=\"\"\nARG BUILD_DATE=\"\"\nLABEL branch=${BRANCH}\nLABEL commit=${COMMIT}\nLABEL date=${BUILD_DATE}\n\n# Set ENV variables\nENV COMMIT_SHA=${COMMIT}\nENV COMMIT_BRANCH=${BRANCH}\nENV BUILD_DATE=${DATE}\n\nENV INSTALLATION_TYPE=docker\n\n# Install system dependencies\nRUN apt-get update && \\\n    apt-get install -y sudo libusb-1.0 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Create mount points\nRUN mkdir -p /home/hummingbot/conf /home/hummingbot/conf/connectors /home/hummingbot/conf/strategies /home/hummingbot/conf/controllers /home/hummingbot/conf/scripts /home/hummingbot/logs /home/hummingbot/data /home/hummingbot/certs /home/hummingbot/scripts /home/hummingbot/controllers\n\nWORKDIR /home/hummingbot\n\n# Copy all build artifacts from builder image\nCOPY --from=builder /opt/conda/ /opt/conda/\nCOPY --from=builder /home/ /home/\n\n# Setting bash as default shell because we have .bashrc with customized PATH (setting SHELL affects RUN, CMD and ENTRYPOINT, but not manual commands e.g. `docker run image COMMAND`!)\nSHELL [ \"/bin/bash\", \"-lc\" ]\n\n# Set the default command to run when starting the container\n\nCMD conda activate hummingbot && ./bin/hummingbot_quickstart.py 2>> ./logs/errors.log\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0859375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2023 Hummingbot Foundation.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.1689453125,
          "content": ".ONESHELL:\n.PHONY: test\n.PHONY: run_coverage\n.PHONY: report_coverage\n.PHONY: development-diff-cover\n.PHONY: docker\n.PHONY: install\n.PHONY: uninstall\n.PHONY: clean\n.PHONY: build\n\ntest:\n\tcoverage run -m nose \\\n \t--exclude-dir=\"test/mock\" \\\n \t--exclude-dir=\"test/hummingbot/connector/gateway/amm\" \\\n \t--exclude-dir=\"test/hummingbot/connector/exchange/coinbase_advance_trade\" \\\n \t--exclude-dir=\"test/hummingbot/connector/exchange/ndax\" \\\n \t--exclude-dir=\"test/hummingbot/connector/exchange/foxbit\" \\\n \t--exclude-dir=\"test/hummingbot/connector/derivative/dydx_v4_perpetual\" \\\n \t--exclude-dir=\"test/hummingbot/connector/gateway/clob_spot/data_sources/dexalot\" \\\n \t--exclude-dir=\"test/hummingbot/strategy/amm_arb\" \\\n \t--exclude-dir=\"test/hummingbot/core/gateway\" \\\n \t--exclude-dir=\"test/hummingbot/strategy/amm_v3_lp\"\n\nrun_coverage: test\n\tcoverage report\n\tcoverage html\n\nreport_coverage:\n\tcoverage report\n\tcoverage html\n\ndevelopment-diff-cover:\n\tcoverage xml\n\tdiff-cover --compare-branch=origin/development coverage.xml\n\ndocker:\n\tgit clean -xdf && make clean && docker build -t hummingbot/hummingbot${TAG} -f Dockerfile .\n\nclean:\n\t./clean\n\ninstall:\n\t./install\n\nuninstall:\n\t./uninstall\n\nbuild:\n\t./compile\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.7568359375,
          "content": "![Hummingbot](https://i.ibb.co/X5zNkKw/blacklogo-with-text.png)\n\n----\n[![License](https://img.shields.io/badge/License-Apache%202.0-informational.svg)](https://github.com/hummingbot/hummingbot/blob/master/LICENSE)\n[![Twitter](https://img.shields.io/twitter/url?url=https://twitter.com/_hummingbot?style=social&label=_hummingbot)](https://twitter.com/_hummingbot)\n[![Youtube](https://img.shields.io/youtube/channel/subscribers/UCxzzdEnDRbylLMWmaMjywOA)](https://www.youtube.com/@hummingbot)\n[![Discord](https://img.shields.io/discord/530578568154054663?logo=discord&logoColor=white&style=flat-square)](https://discord.gg/hummingbot)\n\nHummingbot is an open source framework that helps you design and deploy automated trading strategies, or **bots**, that can run on many centralized or decentralized exchange. Over the past year, Hummingbot users have generated over $34 billion in trading volume across 140+ unique trading venues. \n\nThe Hummingbot codebase is free and publicly available under the Apache 2.0 open source license. Our mission is to **democratize high-frequency trading** by creating a global community of algorithmic traders and developers that share knowledge and contribute to the codebase.\n\n## Quick Links\n\n* [Website and Docs](https://hummingbot.org): Official Hummingbot website and documentation\n* [Installation](https://hummingbot.org/installation/docker/): Install Hummingbot on various platforms\n* [Discord](https://discord.gg/hummingbot): The main gathering spot for the global Hummingbot community\n* [YouTube](https://www.youtube.com/c/hummingbot): Videos that teach you how to get the most of of Hummingbot\n* [Twitter](https://twitter.com/_hummingbot): Get the latest announcements about Hummingbot\n* [Reported Volumes](https://p.datadoghq.com/sb/a96a744f5-a15479d77992ccba0d23aecfd4c87a52): Reported trading volumes across all Hummingbot instances\n* [Newsletter](https://hummingbot.substack.com): Get our newsletter whenever we ship a new release\n\n\n## Exchange Connectors\n\nHummingbot connectors standardize REST and WebSocket API interfaces to different types of exchanges, enabling you to build sophisticated trading strategies that can be deployed across many exchanges with minimal changes.  We classify exchanges into the following categories:\n\n* **CEX**: Centralized exchanges that take custody of your funds. Use API keys to connect with Hummingbot.\n* **DEX**: Decentralized, non-custodial exchanges that operate on a blockchain. Use wallet keys to connect with Hummingbot.\n\nIn addition, connectors differ based on the type of market supported:\n\n * **CLOB Spot**: Connectors to spot markets on central limit order book (CLOB) exchanges\n * **CLOB Perp**: Connectors to perpetual futures markets on CLOB exchanges\n * **AMM**: Connectors to spot markets on Automatic Market Maker (AMM) decentralized exchanges\n\n### Exchange Sponsors\n\nWe are grateful for the following exchanges who support the development and maintenance of Hummingbot via broker partnerships and sponsorships.\n\n| Connector ID | Exchange | CEX/DEX | Market Type | Docs | Discount |\n|----|------|-------|------|------|----------|\n| `binance` | [Binance](https://accounts.binance.com/register?ref=CBWO4LU6) | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/binance/) | [![Sign up for Binance using Hummingbot's referral link for a 10% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d10%25&color=orange)](https://accounts.binance.com/register?ref=CBWO4LU6) |\n| `binance_perpetual` | [Binance](https://accounts.binance.com/register?ref=CBWO4LU6) | CEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/binance/) | [![Sign up for Binance using Hummingbot's referral link for a 10% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d10%25&color=orange)](https://accounts.binance.com/register?ref=CBWO4LU6) |\n| `gate_io` | [Gate.io](https://www.gate.io/referral/invite/HBOTGATE_0_103) | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/gate-io/) | [![Sign up for Gate.io using Hummingbot's referral link for a 10% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d20%25&color=orange)](https://www.gate.io/referral/invite/HBOTGATE_0_103) |\n| `gate_io_perpetual` | [Gate.io](https://www.gate.io/referral/invite/HBOTGATE_0_103) | CEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/gate-io/) | [![Sign up for Gate.io using Hummingbot's referral link for a 20% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d20%25&color=orange)](https://www.gate.io/referral/invite/HBOTGATE_0_103) |\n| `htx` | [HTX (Huobi)](https://www.htx.com.pk/invite/en-us/1h?invite_code=re4w9223) | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/huobi/) | [![Sign up for HTX using Hummingbot's referral link for a 20% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d20%25&color=orange)](https://www.htx.com.pk/invite/en-us/1h?invite_code=re4w9223) |\n| `kucoin` | [KuCoin](https://www.kucoin.com/r/af/hummingbot) | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/kucoin/) | [![Sign up for Kucoin using Hummingbot's referral link for a 20% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d20%25&color=orange)](https://www.kucoin.com/r/af/hummingbot) |\n| `kucoin_perpetual` | [KuCoin](https://www.kucoin.com/r/af/hummingbot) | CEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/kucoin/) | [![Sign up for Kucoin using Hummingbot's referral link for a 20% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d20%25&color=orange)](https://www.kucoin.com/r/af/hummingbot) |\n| `okx` | [OKX](https://www.okx.com/join/1931920269) | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/okx/okx/) | [![Sign up for Kucoin using Hummingbot's referral link for a 20% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d20%25&color=orange)](https://www.okx.com/join/1931920269) |\n| `okx_perpetual` | [OKX](https://www.okx.com/join/1931920269) | CEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/okx/okx/) | [![Sign up for Kucoin using Hummingbot's referral link for a 20% discount!](https://img.shields.io/static/v1?label=Fee&message=%2d20%25&color=orange)](https://www.okx.com/join/1931920269) |\n| `dydx_v4_perpetual` | [dYdX](https://www.dydx.exchange/) | DEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/dydx/) | - |\n| `hyperliquid_perpetual` | [Hyperliquid](https://hyperliquid.io/) | DEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/hyperliquid/) | - |\n| `xrpl` | [XRP Ledger](https://xrpl.org/) | DEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/xrpl/) | - |\n\n### Other Exchange Connectors\n\nCurrently, the master branch of Hummingbot also includes the following exchange connectors, which are maintained and updated through the Hummingbot Foundation governance process. See [Governance](https://hummingbot.org/governance/) for more information.\n\n| Connector ID | Exchange | CEX/DEX | Type | Docs | Discount |\n|----|------|-------|------|------|----------|\n| `ascend_ex` | AscendEx | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/ascendex/) | - |\n| `balancer` | Balancer | DEX | AMM | [Docs](https://hummingbot.org/exchanges/balancer/) | - |\n| `bitfinex` | Bitfinex | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/bitfinex/) | - |\n| `bitget_perpetual` | Bitget | CEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/bitget-perpetual/) | - |\n| `bitmart` | BitMart | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/bitmart/) | - |\n| `bitrue` | Bitrue | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/bitrue/) | - |\n| `bitstamp` | Bitstamp | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/bitstamp/) | - |\n| `btc_markets` | BTC Markets | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/btc-markets/) | - |\n| `bybit` | Bybit | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/bybit/) | - |\n| `bybit_perpetual` | Bybit | CEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/bybit/) | - |\n| `carbon` | Carbon | DEX | AMM | [Docs](https://hummingbot.org/exchanges/carbon/) | - |\n| `coinbase_advanced_trade` | Coinbase | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/coinbase/) | - |\n| `cube` | Cube | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/cube/) | - |\n| `curve` | Curve | DEX | AMM | [Docs](https://hummingbot.org/exchanges/curve/) | - |\n| `dexalot` | Dexalot | DEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/dexalot/) | - |\n| `hashkey` | HashKey | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/hashkey/) | - |\n| `hashkey_perpetual` | HashKey | CEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/hashkey/) | - |\n| `injective_v2` | Injective Helix | DEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/injective/) | - |\n| `injective_v2_perpetual` | Injective Helix | DEX | CLOB Perp | [Docs](https://hummingbot.org/exchanges/injective/) | - |\n| `kraken` | Kraken | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/kraken/) | - |\n| `mad_meerkat` | Mad Meerkat | DEX | AMM | [Docs](https://hummingbot.org/exchanges/mad-meerkat/) | - |\n| `mexc` | MEXC | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/mexc/) | - |\n| `ndax` | NDAX | CEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/ndax/) | - |\n| `openocean` | OpenOcean | DEX | AMM | [Docs](https://hummingbot.org/exchanges/openocean/) | - |\n| `pancakeswap` | PancakeSwap | DEX | AMM | [Docs](https://hummingbot.org/exchanges/pancakeswap/) | - |\n| `pangolin` | Pangolin | CEX | DEX | [Docs](https://hummingbot.org/exchanges/pangolin/) | - |\n| `polkadex` | Polkadex | DEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/polkadex/) | - |\n| `quickswap` | QuickSwap | DEX | AMM | [Docs](https://hummingbot.org/exchanges/quickswap/) | - |\n| `sushiswap` | SushiSwap | DEX | AMM | [Docs](https://hummingbot.org/exchanges/sushiswap/) | - |\n| `tinyman` | Tinyman | DEX | AMM | [Docs](https://hummingbot.org/exchanges/tinyman/) | - |\n| `traderjoe` | Trader Joe | DEX | AMM | [Docs](https://hummingbot.org/exchanges/traderjoe/) | - |\n| `uniswap` | Uniswap | DEX | AMM | [Docs](https://hummingbot.org/exchanges/uniswap/) | - |\n| `vertex` | Vertex | DEX | CLOB Spot | [Docs](https://hummingbot.org/exchanges/vertex/) | - |\n| `vvs` | VVS | DEX | AMM | [Docs](https://hummingbot.org/exchanges/vvs/) | - |\n| `xsswap` | XSSwap | DEX | AMM | [Docs](https://hummingbot.org/exchanges/xswap/) | - |\n\n## Other Hummingbot Repos\n\n* [Deploy](https://github.com/hummingbot/deploy): Deploy Hummingbot in various configurations with Docker\n* [Dashboard](https://github.com/hummingbot/dashboard): Web app that help you create, backtest, deploy, and manage Hummingbot instances\n* [Quants Lab](https://github.com/hummingbot/quants-lab): Juypter notebooks that enable you to fetch data and perform research using Hummingbot\n* [Gateway](https://github.com/hummingbot/gateway): Typescript based API client for DEX connectors\n* [Hummingbot Site](https://github.com/hummingbot/hummingbot-site): Official documentation for Hummingbot - we welcome contributions here too!\n\n## Contributions\n\nThe Hummingbot architecture features modular components that can be maintained and extended by individual community members.\n\nWe welcome contributions from the community! Please review these [guidelines](./CONTRIBUTING.md) before submitting a pull request.\n\nTo have your exchange connector or other pull request merged into the codebase, please submit a New Connector Proposal or Pull Request Proposal, following these [guidelines](https://hummingbot.org/governance/proposals/). Note that you will need some amount of [HBOT tokens](https://etherscan.io/token/0xe5097d9baeafb89f9bcb78c9290d545db5f9e9cb) in your Ethereum wallet to submit a proposal.\n\n## Legal\n\n* **License**: Hummingbot is open source and licensed under [Apache 2.0](./LICENSE).\n* **Data collection**: See [Reporting](https://hummingbot.org/reporting/) for information on anonymous data collection and reporting in Hummingbot.\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "clean",
          "type": "blob",
          "size": 0.267578125,
          "content": "#!/bin/bash\n\ncd $(dirname \"$0\")\n\necho \"Cleaning up all intermediate and compiled files generated from Cython compilation...\"\n\nrm -rf build dist\nrm -f $(find . -name \"*.pyx\" | sed s/\\.pyx$/\\*\\.cpp/g)\nfind . \\( -name \"*.so\" -o -name \"*.pyd\" \\) -exec rm -f {} \\;\n\necho \"Done!\"\n"
        },
        {
          "name": "compile",
          "type": "blob",
          "size": 0.0673828125,
          "content": "#!/bin/bash\n\ncd $(dirname \"$0\")\n\npython setup.py build_ext --inplace\n"
        },
        {
          "name": "compile.bat",
          "type": "blob",
          "size": 0.05078125,
          "content": "@echo off\n\npython setup.py build_ext --inplace -j 8\n"
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "controllers",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.388671875,
          "content": "version: \"3.9\"\nservices:\n  hummingbot:\n    container_name: hummingbot\n    image: hummingbot/hummingbot:latest\n#    build: Uncomment this and comment image if you want to build it locally\n#      context: .\n#      dockerfile: Dockerfile\n    volumes:\n      - ./conf:/home/hummingbot/conf\n      - ./conf/connectors:/home/hummingbot/conf/connectors\n      - ./conf/strategies:/home/hummingbot/conf/strategies\n      - ./conf/controllers:/home/hummingbot/conf/controllers\n      - ./conf/scripts:/home/hummingbot/conf/scripts\n      - ./logs:/home/hummingbot/logs\n      - ./data:/home/hummingbot/data\n      - ./certs:/home/hummingbot/certs\n      - ./scripts:/home/hummingbot/scripts\n      - ./controllers:/home/hummingbot/controllers\n    logging:\n      driver: \"json-file\"\n      options:\n        max-size: \"10m\"\n        max-file: \"5\"\n    tty: true\n    stdin_open: true\n    network_mode: host\n    #  environment:\n    #    - CONFIG_PASSWORD=a\n    #    - CONFIG_FILE_NAME=simple_pmm_example.py\n    #    - SCRIPT_CONFIG=conf_simple_pmm_example.yaml\n\n  # gateway:\n  #  container_name: gateway\n  #  image: hummingbot/gateway:latest\n  #  ports:\n  #    - \"15888:15888\"\n  #    - \"8080:8080\"\n  #  volumes:\n  #    - \"./gateway_files/conf:/home/gateway/conf\"\n  #    - \"./gateway_files/logs:/home/gateway/logs\"\n  #    - \"./gateway_files/db:/home/gateway/db\"\n  #    - \"./certs:/home/gateway/certs\"\n  #  environment:\n  #    - GATEWAY_PASSPHRASE=a\n"
        },
        {
          "name": "hummingbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "install",
          "type": "blob",
          "size": 1.8271484375,
          "content": "#!/bin/bash\n\ncd $(dirname $0)\n\n# Compatibility logic for older Anaconda versions.\nif [ \"${CONDA_EXE} \" == \" \" ]; then\n    CONDA_EXE=$((find /opt/conda/bin/conda || find ~/anaconda3/bin/conda || \\\n\t    find /usr/local/anaconda3/bin/conda || find ~/miniconda3/bin/conda  || \\\n\t    find /root/miniconda/bin/conda || find ~/Anaconda3/Scripts/conda || \\\n\t    find $CONDA/bin/conda) 2>/dev/null)\nfi\n\nif [ \"${CONDA_EXE}_\" == \"_\" ]; then\n    echo \"Please install Anaconda w/ Python 3.7+ first\"\n    echo \"See: https://www.anaconda.com/download\"\n    exit 1\nfi\n\nCONDA_BIN=$(dirname ${CONDA_EXE})\nENV_FILE_1=\"setup/environment.yml\"\nENV_FILE_2=\"setup/environment_dydx.yml\"\n\n# The default is ENV_FILE_1\nENV_FILE=$ENV_FILE_1\n\n# Parse command line arguments\nUSE_DYDX=false\nwhile [[ $# -gt 0 ]]; do\n    key=\"$1\"\n    case $key in\n        --dydx)\n        USE_DYDX=true\n        shift\n        ;;\n        *)\n        # Handle other unidentified parameters\n        shift\n        ;;\n    esac\ndone\n\n# If you use the --dydx flag, switch to ENV_FILE_2\nif [ \"$USE_DYDX\" = true ]; then\n    ENV_FILE=$ENV_FILE_2\n    echo \"install dydx version.\"\nfi\n\nif ${CONDA_EXE} env list | egrep -qe \"^hummingbot\"; then\n    ${CONDA_EXE} env update -f $ENV_FILE\nelse\n    ${CONDA_EXE} env create -f $ENV_FILE\nfi\n\nsource \"${CONDA_BIN}/activate\" hummingbot\n\n# Add the project directory to module search paths.\nconda develop .\n\n# For some reason, this needs to be installed outside of the environment file,\n# or it'll give you the graphviz install error.\npip install objgraph\n\npre-commit install\n\n# Check for build-essential (only relevant for Debian-based systems)\nif [ \"$(uname)\" = \"Linux\" ]; then\n    if ! dpkg -s build-essential &> /dev/null; then\n        echo \"build-essential not found, installing...\"\n        sudo apt-get update && sudo apt-get upgrade -y\n        sudo apt-get install -y build-essential\n    fi\nfi\n"
        },
        {
          "name": "logs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.4873046875,
          "content": "[tool.black]\nline-length = 120\ninclude = '\\.pyi?$'\nexclude = '''\n/(\n    \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n)/\n'''\n\n[build-system]\nrequires = [\"setuptools\", \"wheel\", \"numpy==1.26.4\", \"cython==3.0.0a10\"]\n\n[tool.isort]\nline_length = 120\nmulti_line_output = 3\ninclude_trailing_comma = true\nuse_parentheses = true\nensure_newline_before_comments = true\ncombine_as_imports = true\nconda_env = \"hummingbot\"\nfilter_files = true\nskip = [\"setup.py\"]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.041015625,
          "content": "[nosetests]\nverbosity=2\ndetailed-errors=1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.361328125,
          "content": "import os\nimport subprocess\nimport sys\nimport fnmatch\n\nimport numpy as np\nfrom setuptools import find_packages, setup\nfrom setuptools.command.build_ext import build_ext\nfrom Cython.Build import cythonize\n\nis_posix = (os.name == \"posix\")\n\nif is_posix:\n    os_name = subprocess.check_output(\"uname\").decode(\"utf8\")\n    if \"Darwin\" in os_name:\n        os.environ[\"CFLAGS\"] = \"-stdlib=libc++ -std=c++11\"\n    else:\n        os.environ[\"CFLAGS\"] = \"-std=c++11\"\n\nif os.environ.get(\"WITHOUT_CYTHON_OPTIMIZATIONS\"):\n    os.environ[\"CFLAGS\"] += \" -O0\"\n\n\n# Avoid a gcc warning below:\n# cc1plus: warning: command line option ???-Wstrict-prototypes??? is valid\n# for C/ObjC but not for C++\nclass BuildExt(build_ext):\n    def build_extensions(self):\n        if os.name != \"nt\" and \"-Wstrict-prototypes\" in self.compiler.compiler_so:\n            self.compiler.compiler_so.remove(\"-Wstrict-prototypes\")\n        super().build_extensions()\n\n\ndef main():\n    cpu_count = os.cpu_count() or 8\n    version = \"20241227\"\n    all_packages = find_packages(include=[\"hummingbot\", \"hummingbot.*\"], )\n    excluded_paths = [\n        \"hummingbot.connector.gateway.clob_spot.data_sources.injective\",\n        \"hummingbot.connector.gateway.clob_perp.data_sources.injective_perpetual\"\n    ]\n    packages = [pkg for pkg in all_packages if not any(fnmatch.fnmatch(pkg, pattern) for pattern in excluded_paths)]\n    package_data = {\n        \"hummingbot\": [\n            \"core/cpp/*\",\n            \"VERSION\",\n            \"templates/*TEMPLATE.yml\"\n        ],\n    }\n    install_requires = [\n        \"bidict\",\n        \"aioconsole\",\n        \"aiohttp\",\n        \"aioprocessing\",\n        \"asyncssh\",\n        \"appdirs\",\n        \"appnope\",\n        \"async-timeout\",\n        \"base58\",\n        \"cachetools\",\n        \"certifi\",\n        \"coincurve\",\n        \"coinbase-advanced-py==1.8.2\",\n        \"cryptography\",\n        \"cython==3.0.0\",\n        \"cytoolz\",\n        \"commlib-py\",\n        \"docker\",\n        \"diff-cover\",\n        \"ecdsa\",\n        \"eip712-structs\",\n        \"eth-abi\",\n        \"eth-account\",\n        \"eth-bloom\",\n        \"eth-keyfile\",\n        \"eth-typing\",\n        \"eth-utils\",\n        \"flake8\",\n        \"grpcio\",\n        \"hexbytes\",\n        \"importlib-metadata\",\n        \"injective-py\",\n        \"mypy-extensions\",\n        \"msgpack\",\n        \"nose\",\n        \"nose-exclude\",\n        \"numpy==1.26.4\",\n        \"pandas\",\n        \"pip\",\n        \"pre-commit\",\n        \"prompt-toolkit\",\n        \"protobuf\",\n        \"psutil\",\n        \"pydantic\",\n        \"pyjwt\",\n        \"pyperclip\",\n        \"python-dateutil\",\n        \"python-telegram-bot==12.8\",\n        \"pyOpenSSL\",\n        \"requests\",\n        \"rsa\",\n        \"ruamel-yaml\",\n        \"scipy\",\n        \"signalr-client-aio\",\n        \"simplejson\",\n        \"six\",\n        \"sqlalchemy\",\n        \"tabulate\",\n        \"tzlocal\",\n        \"ujson\",\n        \"web3\",\n        \"websockets\",\n        \"yarl\",\n        \"pandas_ta==0.3.14b\",\n        \"xrpl-py==4.0.0b3\",\n    ]\n\n    cython_kwargs = {\n        \"language\": \"c++\",\n        \"language_level\": 3,\n    }\n\n    cython_sources = [\"hummingbot/**/*.pyx\"]\n\n    compiler_directives = {\n        \"annotation_typing\": False,\n    }\n    if os.environ.get(\"WITHOUT_CYTHON_OPTIMIZATIONS\"):\n        compiler_directives.update({\n            \"optimize.use_switch\": False,\n            \"optimize.unpack_method_calls\": False,\n        })\n\n    if is_posix:\n        cython_kwargs[\"nthreads\"] = cpu_count\n\n    if \"DEV_MODE\" in os.environ:\n        version += \".dev1\"\n        package_data[\"\"] = [\n            \"*.pxd\", \"*.pyx\", \"*.h\"\n        ]\n        package_data[\"hummingbot\"].append(\"core/cpp/*.cpp\")\n\n    if len(sys.argv) > 1 and sys.argv[1] == \"build_ext\" and is_posix:\n        sys.argv.append(f\"--parallel={cpu_count}\")\n\n    setup(name=\"hummingbot\",\n          version=version,\n          description=\"Hummingbot\",\n          url=\"https://github.com/hummingbot/hummingbot\",\n          author=\"Hummingbot Foundation\",\n          author_email=\"dev@hummingbot.org\",\n          license=\"Apache 2.0\",\n          packages=packages,\n          package_data=package_data,\n          install_requires=install_requires,\n          ext_modules=cythonize(cython_sources, compiler_directives=compiler_directives, **cython_kwargs),\n          include_dirs=[\n              np.get_include()\n          ],\n          scripts=[\n              \"bin/hummingbot_quickstart.py\"\n          ],\n          cmdclass={\"build_ext\": BuildExt},\n          )\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "setup",
          "type": "tree",
          "content": null
        },
        {
          "name": "start",
          "type": "blob",
          "size": 1.4580078125,
          "content": "#!/bin/bash\n\nPASSWORD=\"\"\nFILENAME=\"\"\nCONFIG=\"\"\n\n# Argument parsing\nwhile getopts \":p:f:c:\" opt; do\n  case $opt in\n    p)\n      PASSWORD=\"$OPTARG\"\n      ;;\n    f)\n      FILENAME=\"$OPTARG\"\n      ;;\n    c)\n      CONFIG=\"$OPTARG\"\n      ;;\n    \\?)\n      echo \"Invalid option: -$OPTARG\" >&2\n      exit 1\n      ;;\n    :)\n      echo \"Option -$OPTARG requires an argument.\" >&2\n      exit 1\n      ;;\n  esac\ndone\n\n# Check if bin/hummingbot_quickstart.py exists\nif [[ ! -f bin/hummingbot_quickstart.py ]]; then\n    echo \"Error: bin/hummingbot_quickstart.py command not found. Make sure you are in the Hummingbot root directory\"\n    exit 1\nfi\n\n# Check if the hummingbot conda environment is activated\nif [[ $CONDA_DEFAULT_ENV != \"hummingbot\" ]]; then\n    echo \"Error: 'hummingbot' conda environment is not activated. Please activate it and try again.\"\n    exit 1\nfi\n\n# Build the command to run\nCMD=\"./bin/hummingbot_quickstart.py\"\nif [[ ! -z \"$PASSWORD\" ]]; then\n    CMD=\"$CMD -p \\\"$PASSWORD\\\"\"\nfi\n\n# Check for valid file extensions\nif [[ ! -z \"$FILENAME\" ]]; then\n    if [[ $FILENAME == *.yml || $FILENAME == *.py ]]; then\n        CMD=\"$CMD -f \\\"$FILENAME\\\"\"\n    else\n        echo \"Error: Invalid strategy or script file. File must be a .yml or .py file.\"\n        exit 4\n    fi\nfi\n\nif [[ ! -z \"$CONFIG\" ]]; then\n    if [[ $CONFIG == *.yml ]]; then\n        CMD=\"$CMD -c \\\"$CONFIG\\\"\"\n    else\n        echo \"Error: Config file must be a .yml file.\"\n        exit 3\n    fi\nfi\n\n# Execute the command\neval $CMD\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "uninstall",
          "type": "blob",
          "size": 0.6513671875,
          "content": "#!/bin/bash\n\ncd $(dirname $0)\n\n# Compatibility logic for older Anaconda versions.\nif [ \"${CONDA_EXE} \" == \" \" ]; then\n    CONDA_EXE=$((find /opt/conda/bin/conda || find ~/anaconda3/bin/conda || \\\n\t    find /usr/local/anaconda3/bin/conda || find ~/miniconda3/bin/conda  || \\\n\t    find /root/miniconda/bin/conda || find ~/Anaconda3/Scripts/conda) 2>/dev/null)\nfi\n\nif [ \"${CONDA_EXE}_\" == \"_\" ]; then\n    echo \"Please install Anaconda w/ Python 3.7+ first\"\n    echo \"See: https://www.continuum.io/downloads\"\n    exit 1\nfi\n\nif ${CONDA_EXE} env list | egrep -qe \"^hummingbot\"; then\n    ${CONDA_EXE} env remove -n hummingbot\nelse\n    echo \"Environment already removed.\"\nfi\n"
        }
      ]
    }
  ]
}