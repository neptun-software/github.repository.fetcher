{
  "metadata": {
    "timestamp": 1736560884089,
    "page": 605,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DEAP/deap",
      "stars": 5918,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".azure-pipelines",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.21484375,
          "content": "# folders to ignore\nbuild/\ndist/\ndoc/_build/\n.vscode/\n.pytest_cache/\n__pycache__/\nenv/\nvenv/\n*.egg-info/\n\n# files to ignore\nMANIFEST\n\n# file patterns to ignore\n*.pyc\n*.pyo\n*.orig\n.DS_Store\n*.so\n\n# IDE stuff\n.idea\n.vscode"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 1.0087890625,
          "content": "# Read the Docs configuration file for Sphinx projects\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the OS, Python version and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n    # You can also specify other tool versions:\n    # nodejs: \"20\"\n    # rust: \"1.70\"\n    # golang: \"1.20\"\n\n# Build documentation in the \"docs/\" directory with Sphinx\nsphinx:\n  configuration: doc/conf.py\n  # You can configure Sphinx to use a different builder, for instance use the dirhtml builder for simpler URLs\n  # builder: \"dirhtml\"\n  # Fail on all warnings to avoid broken references\n  # fail_on_warning: true\n\n# Optionally build your docs in additional formats such as PDF and ePub\n# formats:\n#   - pdf\n#   - epub\n\n# Optional but recommended, declare the Python requirements required\n# to build your documentation\n# See https://docs.readthedocs.io/en/stable/guides/reproducible-builds.html\n# python:\n#   install:\n#     - requirements: docs/requirements.txt\n"
        },
        {
          "name": "INSTALL.txt",
          "type": "blob",
          "size": 0.65234375,
          "content": "================================\nUNIX based platforms and Windows\n================================\n\nIn order to install DEAP from sources, change directory to the root of deap and type in :\n\n$ python setup.py install\n\nThis will try to install deap into your package directory, you might need permissions to write to this directory. \n\n=======\nOptions\n=======\n\nPrefix\n++++++\n\nYou might want to install this software somewhere else by adding the prefix options to the installation.\n\n$ python setup.py install --prefix=somewhere/else\n\nOther\n+++++\n\nOther basic options are provided by the building tools of Python, see http://docs.python.org/install/ for more information.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 7.4580078125,
          "content": "\t\t   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.244140625,
          "content": "include *.txt\ninclude *.md\nrecursive-include deap *.cpp *.c *.hpp *.h\nrecursive-include examples *.py *.csv *.json *.txt *.cpp *.hpp *.h\nrecursive-include doc *\nrecursive-include tests *\nprune doc/_build\nglobal-exclude .DS_Store\nglobal-exclude *.pyc\n"
        },
        {
          "name": "README-zh_CN.md",
          "type": "blob",
          "size": 11.6787109375,
          "content": "简体中文 | [English](./README.md)\n\n# DEAP\n\n[![Build status](https://travis-ci.org/DEAP/deap.svg?branch=master)](https://travis-ci.org/DEAP/deap) [![Download](https://img.shields.io/pypi/dm/deap.svg)](https://pypi.python.org/pypi/deap) [![Join the chat at https://gitter.im/DEAP/deap](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/DEAP/deap?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Build Status](https://dev.azure.com/fderainville/DEAP/_apis/build/status/DEAP.deap?branchName=master)](https://dev.azure.com/fderainville/DEAP/_build/latest?definitionId=1&branchName=master) [![Documentation Status](https://readthedocs.org/projects/deap/badge/?version=master)](https://deap.readthedocs.io/en/master/?badge=master)\n\nDEAP 是一款新型的进化计算框架，用于快速原型设计和测试想法，旨在能够使得算法明确、数据结构透明。它能够与并行机制（例如多进程和 [SCOOP](https://github.com/soravux/scoop)）完美协作。\n\nDEAP 包含以下特性:\n\n* 使用任何你能够想象到的数据形式使用遗传算法\n\n   * 列表、数组、集合、字典、树、NumPy 数组等\n\n* 使用前缀树进行遗传编程\n\n   * 松散类型，强类型\n   * 自动定义函数\n\n* 进化策略（包括 CMA-ES）\n* 多目标优化（NSGA-II、NSGA-III、SPEA2、MO-CMA-ES）\n* 多个种群的共同进化（合作和竞争）\n* 评估的并行化（以及更多其他的情况）\n* 最佳个体的名人堂，记录在种群中生活过的最佳个体\n* 定期快照系统的检查点\n* 基准模块，包含最常见的测试函数\n* 进化的谱系（与 [NetworkX](https://github.com/networkx/networkx) 兼容）\n* 替代算法的示例：粒子群优化、差分进化、分布估计算法\n\n## 下载\n\n在 Python 社区接受 [PEP 438](http://www.python.org/dev/peps/pep-0438/) 之后，我们已经将 DEAP 的源代码发布到了 PyPI。\n\n你可以在这里找到最新的发布版本：: https://pypi.python.org/pypi/deap/.\n\n## 文档\n\n请参阅 [DEAP User's Guide](http://deap.readthedocs.org/) 用户指南以获取 DEAP 的文档。\n\n为了获取最新的文档，请切换到 `doc` 子文件夹并输入 `make html`, 文档在 [Sphinx](http://sphinx.pocoo.org) 目录下。之后你会用到这个文档。\n\n### Notebooks\n\n你还可以查看我们的新的[notebook examples](https://github.com/DEAP/notebooks)示例。使用 Jupyter 笔记本，你将能够进行导航，并且可以逐个执行代码块以了解每一行的作用。你也可以通过页面底部的链接在线查看 notebook，或者下载 notebook 到本地运行。\n\n```bash\njupyter notebook\n```\n\n## 下载\n\n我们提倡使用 easy_install 或者 pip 下载 DEAP 到你自己的系统里。对于其他的安装程序，比如 apt-get, yum 等，通常提供的不是最新的版本。\n\n```bash\npip install deap\n```\n\n可以使用下面的命令获取最新版本\n\n```bash\npip install git+https://github.com/DEAP/deap@master\n```\n\n如果你想通过源代码进行构建，下载或者克隆仓库，可以使用\n\n```bash\npython setup.py install\n```\n\n## 构建状态\n\nEAP 的构建状态可以在 Travis-CI 上查看，网址为 https://travis-ci.org/DEAP/deap.\n\n## 依赖\n\nDEAP 的最基本功能依赖于 Python 2.6。为了能够将工具箱与多进程模块结合使用，需要 Python 2.7，因为它支持对部分函数进行序列化（pickle）。CMA-ES 需要使用到 Numpy，我们推荐使用 matplotlib 进行可视化，因为它能够与 DEAP 的 API 完全兼容。\n\n自从 0.8 版本以来，DEAP 可以开箱即用地与 Python 3 兼容。安装过程中会自动使用 2to3 将源代码转换为 Python 3，但这需要 `setuptools<=58`。我们建议使用 `pip install setuptools==57.5.0` 来解决此问题。\n\n## 示例\n\n以下代码简单概述了如何使用 DEAP 实现 Onemax 问题优化的遗传算法。更多示例可以在 [这里](http://deap.readthedocs.org/en/master/examples/index.html) 找到。\n\n```python\nimport random\nfrom deap import creator, base, tools, algorithms\n\ncreator.create(\"FitnessMax\", base.Fitness, weights=(1.0,))\ncreator.create(\"Individual\", list, fitness=creator.FitnessMax)\n\ntoolbox = base.Toolbox()\n\ntoolbox.register(\"attr_bool\", random.randint, 0, 1)\ntoolbox.register(\"individual\", tools.initRepeat, creator.Individual, toolbox.attr_bool, n=100)\ntoolbox.register(\"population\", tools.initRepeat, list, toolbox.individual)\n\ndef evalOneMax(individual):\n    return sum(individual),\n\ntoolbox.register(\"evaluate\", evalOneMax)\ntoolbox.register(\"mate\", tools.cxTwoPoint)\ntoolbox.register(\"mutate\", tools.mutFlipBit, indpb=0.05)\ntoolbox.register(\"select\", tools.selTournament, tournsize=3)\n\npopulation = toolbox.population(n=300)\n\nNGEN=40\nfor gen in range(NGEN):\n    offspring = algorithms.varAnd(population, toolbox, cxpb=0.5, mutpb=0.1)\n    fits = toolbox.map(toolbox.evaluate, offspring)\n    for fit, ind in zip(fits, offspring):\n        ind.fitness.values = fit\n    population = toolbox.select(offspring, k=len(population))\ntop10 = tools.selBest(population, k=10)\n```\n\n## 如何引用 DEAP\n\n在科学论文中，包括使用 DEAP 生成的结果，我们鼓励作者引用以下论文。\n\n```xml\n@article{DEAP_JMLR2012, \n    author    = \" F\\'elix-Antoine Fortin and Fran\\c{c}ois-Michel {De Rainville} and Marc-Andr\\'e Gardner and Marc Parizeau and Christian Gagn\\'e \",\n    title     = { {DEAP}: Evolutionary Algorithms Made Easy },\n    pages    = { 2171--2175 },\n    volume    = { 13 },\n    month     = { jul },\n    year      = { 2012 },\n    journal   = { Journal of Machine Learning Research }\n}\n```\n\n## 研究过程中使用 DEAP 的论文\n\n* François-Michel De Rainville, Félix-Antoine Fortin, Marc-André Gardner, Marc Parizeau and Christian Gagné, \"DEAP -- Enabling Nimbler Evolutions\", SIGEVOlution, vol. 6, no 2, pp. 17-26, February 2014. [Paper](http://goo.gl/tOrXTp)\n* Félix-Antoine Fortin, François-Michel De Rainville, Marc-André Gardner, Marc Parizeau and Christian Gagné, \"DEAP: Evolutionary Algorithms Made Easy\", Journal of Machine Learning Research, vol. 13, pp. 2171-2175, jul 2012. [Paper](http://goo.gl/amJ3x)\n* François-Michel De Rainville, Félix-Antoine Fortin, Marc-André Gardner, Marc Parizeau and Christian Gagné, \"DEAP: A Python Framework for Evolutionary Algorithms\", in !EvoSoft Workshop, Companion proc. of the Genetic and Evolutionary Computation Conference (GECCO 2012), July 07-11 2012. [Paper](http://goo.gl/pXXug)\n\n## 使用 DEAP 的项目\n\n* Ribaric, T., & Houghten, S. (2017, June). Genetic programming for improved cryptanalysis of elliptic curve cryptosystems. In 2017 IEEE Congress on Evolutionary Computation (CEC) (pp. 419-426). IEEE.\n* Ellefsen, Kai Olav, Herman Augusto Lepikson, and Jan C. Albiez. \"Multiobjective coverage path planning: Enabling automated inspection of complex, real-world structures.\" Applied Soft Computing 61 (2017): 264-282.\n* S. Chardon, B. Brangeon, E. Bozonnet, C. Inard (2016), Construction cost and energy performance of single family houses : From integrated design to automated optimization, Automation in Construction, Volume 70, p.1-13.\n* B. Brangeon, E. Bozonnet, C. Inard (2016), Integrated refurbishment of collective housing and optimization process with real products databases, Building Simulation Optimization, pp. 531–538 Newcastle, England.\n* Randal S. Olson, Ryan J. Urbanowicz, Peter C. Andrews, Nicole A. Lavender, La Creis Kidd, and Jason H. Moore (2016). Automating biomedical data science through tree-based pipeline optimization. Applications of Evolutionary Computation, pages 123-137.\n* Randal S. Olson, Nathan Bartley, Ryan J. Urbanowicz, and Jason H. Moore (2016). Evaluation of a Tree-based Pipeline Optimization Tool for Automating Data Science. Proceedings of GECCO 2016, pages 485-492.\n* Van Geit W, Gevaert M, Chindemi G, Rössert C, Courcol J, Muller EB, Schürmann F, Segev I and Markram H (2016). BluePyOpt: Leveraging open source software and cloud infrastructure to optimise model parameters in neuroscience. Front. Neuroinform. 10:17. doi: 10.3389/fninf.2016.00017 https://github.com/BlueBrain/BluePyOpt\n* Lara-Cabrera, R., Cotta, C. and Fernández-Leiva, A.J. (2014). Geometrical vs topological measures for the evolution of aesthetic maps in a rts game, Entertainment Computing,\n* Macret, M. and Pasquier, P. (2013). Automatic Tuning of the OP-1 Synthesizer Using a Multi-objective Genetic Algorithm. In Proceedings of the 10th Sound and Music Computing Conference (SMC). (pp 614-621).\n* Fortin, F. A., Grenier, S., & Parizeau, M. (2013, July). Generalizing the improved run-time complexity algorithm for non-dominated sorting. In Proceeding of the fifteenth annual conference on Genetic and evolutionary computation conference (pp. 615-622). ACM.\n* Fortin, F. A., & Parizeau, M. (2013, July). Revisiting the NSGA-II crowding-distance computation. In Proceeding of the fifteenth annual conference on Genetic and evolutionary computation conference (pp. 623-630). ACM.\n* Marc-André Gardner, Christian Gagné, and Marc Parizeau. Estimation of Distribution Algorithm based on Hidden Markov Models for Combinatorial Optimization. in Comp. Proc. Genetic and Evolutionary Computation Conference (GECCO 2013), July 2013.\n* J. T. Zhai, M. A. Bamakhrama, and T. Stefanov. \"Exploiting Just-enough Parallelism when Mapping Streaming Applications in Hard Real-time Systems\". Design Automation Conference (DAC 2013), 2013.\n* V. Akbarzadeh, C. Gagné, M. Parizeau, M. Argany, M. A Mostafavi, \"Probabilistic Sensing Model for Sensor Placement Optimization Based on Line-of-Sight Coverage\", Accepted in IEEE Transactions on Instrumentation and Measurement, 2012.\n* M. Reif, F. Shafait, and A. Dengel. \"Dataset Generation for Meta-Learning\". Proceedings of the German Conference on Artificial Intelligence (KI'12). 2012.\n* M. T. Ribeiro, A. Lacerda, A. Veloso, and N. Ziviani. \"Pareto-Efficient Hybridization for Multi-Objective Recommender Systems\". Proceedings of the Conference on Recommanders Systems (!RecSys'12). 2012.\n* M. Pérez-Ortiz, A. Arauzo-Azofra, C. Hervás-Martínez, L. García-Hernández and L. Salas-Morera. \"A system learning user preferences for multiobjective optimization of facility layouts\". Pr,oceedings on the Int. Conference on Soft Computing Models in Industrial and Environmental Applications (SOCO'12). 2012.\n* Lévesque, J.C., Durand, A., Gagné, C., and Sabourin, R., Multi-Objective Evolutionary Optimization for Generating Ensembles of Classifiers in the ROC Space, Genetic and Evolutionary Computation Conference (GECCO 2012), 2012.\n* Marc-André Gardner, Christian Gagné, and Marc Parizeau, \"Bloat Control in Genetic Programming with Histogram-based Accept-Reject Method\", in Proc. Genetic and Evolutionary Computation Conference (GECCO 2011), 2011.\n* Vahab Akbarzadeh, Albert Ko, Christian Gagné, and Marc Parizeau, \"Topography-Aware Sensor Deployment Optimization with CMA-ES\", in Proc. of Parallel Problem Solving from Nature (PPSN 2010), Springer, 2010.\n* DEAP is used in [TPOT](https://github.com/rhiever/tpot), an open source tool that uses genetic programming to optimize machine learning pipelines.\n* DEAP is also used in ROS as an optimization package http://www.ros.org/wiki/deap.\n* DEAP is an optional dependency for [PyXRD](https://github.com/mathijs-dumon/PyXRD), a Python implementation of the matrix algorithm developed for the X-ray diffraction analysis of disordered lamellar structures.\n* DEAP is used in [glyph](https://github.com/Ambrosys/glyph), a library for symbolic regression with applications to [MLC](https://en.wikipedia.org/wiki/Machine_learning_control).\n* DEAP is used in [Sklearn-genetic-opt](https://github.com/rodrigo-arenas/Sklearn-genetic-opt), an open source tool that uses evolutionary programming to fine tune machine learning hyperparameters.\n\n如果你希望你的项目在这里列出，请发送链接和简要描述，我们将很高兴添加。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.0673828125,
          "content": "English | [简体中文](./README-zh_CN.md)\n\n# DEAP\n\n[![Build status](https://travis-ci.org/DEAP/deap.svg?branch=master)](https://travis-ci.org/DEAP/deap) [![Download](https://img.shields.io/pypi/dm/deap.svg)](https://pypi.python.org/pypi/deap) [![Join the chat at https://gitter.im/DEAP/deap](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/DEAP/deap?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Build Status](https://dev.azure.com/fderainville/DEAP/_apis/build/status/DEAP.deap?branchName=master)](https://dev.azure.com/fderainville/DEAP/_build/latest?definitionId=1&branchName=master) [![Documentation Status](https://readthedocs.org/projects/deap/badge/?version=master)](https://deap.readthedocs.io/en/master/?badge=master)\n\nDEAP is a novel evolutionary computation framework for rapid prototyping and testing of\nideas. It seeks to make algorithms explicit and data structures transparent. It works in perfect harmony with parallelisation mechanisms such as multiprocessing and [SCOOP](https://github.com/soravux/scoop).\n\nDEAP includes the following features:\n\n* Genetic algorithm using any imaginable representation\n   * List, Array, Set, Dictionary, Tree, Numpy Array, etc.\n\n* Genetic programming using prefix trees\n   * Loosely typed, Strongly typed\n   * Automatically defined functions\n\n* Evolution strategies (including CMA-ES)\n* Multi-objective optimisation (NSGA-II, NSGA-III, SPEA2, MO-CMA-ES)\n* Co-evolution (cooperative and competitive) of multiple populations\n* Parallelization of the evaluations (and more)\n* Hall of Fame of the best individuals that lived in the population\n* Checkpoints that take snapshots of a system regularly\n* Benchmarks module containing most common test functions\n* Genealogy of an evolution (that is compatible with [NetworkX](https://github.com/networkx/networkx))\n* Examples of alternative algorithms : Particle Swarm Optimization, Differential Evolution, Estimation of Distribution Algorithm\n\n## Downloads\n\nFollowing acceptance of [PEP 438](http://www.python.org/dev/peps/pep-0438/) by the Python community, we have moved DEAP's source releases on [PyPI](https://pypi.python.org).\n\nYou can find the most recent releases at: https://pypi.python.org/pypi/deap/.\n\n## Documentation\n\nSee the [DEAP User's Guide](http://deap.readthedocs.org/) for DEAP documentation.\n\nIn order to get the tip documentation, change directory to the `doc` subfolder and type in `make html`, the documentation will be under `_build/html`. You will need [Sphinx](http://sphinx.pocoo.org) to build the documentation.\n\n### Notebooks\n\nAlso checkout our new [notebook examples](https://github.com/DEAP/notebooks). Using [Jupyter notebooks](http://jupyter.org)  you'll be able to navigate and execute each block of code individually and tell what every line is doing. Either, look at the notebooks online using the notebook viewer links at the botom of the page or download the notebooks, navigate to the you download directory and run\n\n```bash\njupyter notebook\n```\n\n## Installation\n\nWe encourage you to use easy_install or pip to install DEAP on your system. Other installation procedure like apt-get, yum, etc. usually provide an outdated version.\n\n```bash\npip install deap\n```\n\nThe latest version can be installed with\n\n```bash\npip install git+https://github.com/DEAP/deap@master\n```\n\nIf you wish to build from sources, download or clone the repository and type\n\n```bash\npython setup.py install\n```\n\n## Build Status\n\nDEAP build status is available on Travis-CI https://travis-ci.org/DEAP/deap.\n\n## Requirements\n\nThe most basic features of DEAP requires Python2.6. In order to combine the toolbox and the multiprocessing module Python2.7 is needed for its support to pickle partial functions. CMA-ES requires Numpy, and we recommend matplotlib for visualization of results as it is fully compatible with DEAP's API.\n\nSince version 0.8, DEAP is compatible out of the box with Python 3. The installation procedure automatically translates the source to Python 3 with 2to3, however this requires having `setuptools<=58`. It is recommended to use `pip install setuptools==57.5.0` to address this issue.\n\n## Example\n\nThe following code gives a quick overview how simple it is to implement the Onemax problem optimization with genetic algorithm using DEAP.  More examples are provided [here](http://deap.readthedocs.org/en/master/examples/index.html).\n\n```python\nimport random\nfrom deap import creator, base, tools, algorithms\n\ncreator.create(\"FitnessMax\", base.Fitness, weights=(1.0,))\ncreator.create(\"Individual\", list, fitness=creator.FitnessMax)\n\ntoolbox = base.Toolbox()\n\ntoolbox.register(\"attr_bool\", random.randint, 0, 1)\ntoolbox.register(\"individual\", tools.initRepeat, creator.Individual, toolbox.attr_bool, n=100)\ntoolbox.register(\"population\", tools.initRepeat, list, toolbox.individual)\n\ndef evalOneMax(individual):\n    return sum(individual),\n\ntoolbox.register(\"evaluate\", evalOneMax)\ntoolbox.register(\"mate\", tools.cxTwoPoint)\ntoolbox.register(\"mutate\", tools.mutFlipBit, indpb=0.05)\ntoolbox.register(\"select\", tools.selTournament, tournsize=3)\n\npopulation = toolbox.population(n=300)\n\nNGEN=40\nfor gen in range(NGEN):\n    offspring = algorithms.varAnd(population, toolbox, cxpb=0.5, mutpb=0.1)\n    fits = toolbox.map(toolbox.evaluate, offspring)\n    for fit, ind in zip(fits, offspring):\n        ind.fitness.values = fit\n    population = toolbox.select(offspring, k=len(population))\ntop10 = tools.selBest(population, k=10)\n```\n\n## How to cite DEAP\n\nAuthors of scientific papers including results generated using DEAP are encouraged to cite the following paper.\n\n```xml\n@article{DEAP_JMLR2012, \n    author    = \" F\\'elix-Antoine Fortin and Fran\\c{c}ois-Michel {De Rainville} and Marc-Andr\\'e Gardner and Marc Parizeau and Christian Gagn\\'e \",\n    title     = { {DEAP}: Evolutionary Algorithms Made Easy },\n    pages    = { 2171--2175 },\n    volume    = { 13 },\n    month     = { jul },\n    year      = { 2012 },\n    journal   = { Journal of Machine Learning Research }\n}\n```\n\n## Publications on DEAP\n\n* François-Michel De Rainville, Félix-Antoine Fortin, Marc-André Gardner, Marc Parizeau and Christian Gagné, \"DEAP -- Enabling Nimbler Evolutions\", SIGEVOlution, vol. 6, no 2, pp. 17-26, February 2014. [Paper](http://goo.gl/tOrXTp)\n* Félix-Antoine Fortin, François-Michel De Rainville, Marc-André Gardner, Marc Parizeau and Christian Gagné, \"DEAP: Evolutionary Algorithms Made Easy\", Journal of Machine Learning Research, vol. 13, pp. 2171-2175, jul 2012. [Paper](http://goo.gl/amJ3x)\n* François-Michel De Rainville, Félix-Antoine Fortin, Marc-André Gardner, Marc Parizeau and Christian Gagné, \"DEAP: A Python Framework for Evolutionary Algorithms\", in !EvoSoft Workshop, Companion proc. of the Genetic and Evolutionary Computation Conference (GECCO 2012), July 07-11 2012. [Paper](http://goo.gl/pXXug)\n\n## Projects using DEAP\n\n* Ribaric, T., & Houghten, S. (2017, June). Genetic programming for improved cryptanalysis of elliptic curve cryptosystems. In 2017 IEEE Congress on Evolutionary Computation (CEC) (pp. 419-426). IEEE.\n* Ellefsen, Kai Olav, Herman Augusto Lepikson, and Jan C. Albiez. \"Multiobjective coverage path planning: Enabling automated inspection of complex, real-world structures.\" Applied Soft Computing 61 (2017): 264-282.\n* S. Chardon, B. Brangeon, E. Bozonnet, C. Inard (2016), Construction cost and energy performance of single family houses : From integrated design to automated optimization, Automation in Construction, Volume 70, p.1-13.\n* B. Brangeon, E. Bozonnet, C. Inard (2016), Integrated refurbishment of collective housing and optimization process with real products databases, Building Simulation Optimization, pp. 531–538 Newcastle, England.\n* Randal S. Olson, Ryan J. Urbanowicz, Peter C. Andrews, Nicole A. Lavender, La Creis Kidd, and Jason H. Moore (2016). Automating biomedical data science through tree-based pipeline optimization. Applications of Evolutionary Computation, pages 123-137.\n* Randal S. Olson, Nathan Bartley, Ryan J. Urbanowicz, and Jason H. Moore (2016). Evaluation of a Tree-based Pipeline Optimization Tool for Automating Data Science. Proceedings of GECCO 2016, pages 485-492.\n* Van Geit W, Gevaert M, Chindemi G, Rössert C, Courcol J, Muller EB, Schürmann F, Segev I and Markram H (2016). BluePyOpt: Leveraging open source software and cloud infrastructure to optimise model parameters in neuroscience. Front. Neuroinform. 10:17. doi: 10.3389/fninf.2016.00017 https://github.com/BlueBrain/BluePyOpt\n* Lara-Cabrera, R., Cotta, C. and Fernández-Leiva, A.J. (2014). Geometrical vs topological measures for the evolution of aesthetic maps in a rts game, Entertainment Computing,\n* Macret, M. and Pasquier, P. (2013). Automatic Tuning of the OP-1 Synthesizer Using a Multi-objective Genetic Algorithm. In Proceedings of the 10th Sound and Music Computing Conference (SMC). (pp 614-621).\n* Fortin, F. A., Grenier, S., & Parizeau, M. (2013, July). Generalizing the improved run-time complexity algorithm for non-dominated sorting. In Proceeding of the fifteenth annual conference on Genetic and evolutionary computation conference (pp. 615-622). ACM.\n* Fortin, F. A., & Parizeau, M. (2013, July). Revisiting the NSGA-II crowding-distance computation. In Proceeding of the fifteenth annual conference on Genetic and evolutionary computation conference (pp. 623-630). ACM.\n* Marc-André Gardner, Christian Gagné, and Marc Parizeau. Estimation of Distribution Algorithm based on Hidden Markov Models for Combinatorial Optimization. in Comp. Proc. Genetic and Evolutionary Computation Conference (GECCO 2013), July 2013.\n* J. T. Zhai, M. A. Bamakhrama, and T. Stefanov. \"Exploiting Just-enough Parallelism when Mapping Streaming Applications in Hard Real-time Systems\". Design Automation Conference (DAC 2013), 2013.\n* V. Akbarzadeh, C. Gagné, M. Parizeau, M. Argany, M. A Mostafavi, \"Probabilistic Sensing Model for Sensor Placement Optimization Based on Line-of-Sight Coverage\", Accepted in IEEE Transactions on Instrumentation and Measurement, 2012.\n* M. Reif, F. Shafait, and A. Dengel. \"Dataset Generation for Meta-Learning\". Proceedings of the German Conference on Artificial Intelligence (KI'12). 2012.\n* M. T. Ribeiro, A. Lacerda, A. Veloso, and N. Ziviani. \"Pareto-Efficient Hybridization for Multi-Objective Recommender Systems\". Proceedings of the Conference on Recommanders Systems (!RecSys'12). 2012.\n* M. Pérez-Ortiz, A. Arauzo-Azofra, C. Hervás-Martínez, L. García-Hernández and L. Salas-Morera. \"A system learning user preferences for multiobjective optimization of facility layouts\". Pr,oceedings on the Int. Conference on Soft Computing Models in Industrial and Environmental Applications (SOCO'12). 2012.\n* Lévesque, J.C., Durand, A., Gagné, C., and Sabourin, R., Multi-Objective Evolutionary Optimization for Generating Ensembles of Classifiers in the ROC Space, Genetic and Evolutionary Computation Conference (GECCO 2012), 2012.\n* Marc-André Gardner, Christian Gagné, and Marc Parizeau, \"Bloat Control in Genetic Programming with Histogram-based Accept-Reject Method\", in Proc. Genetic and Evolutionary Computation Conference (GECCO 2011), 2011.\n* Vahab Akbarzadeh, Albert Ko, Christian Gagné, and Marc Parizeau, \"Topography-Aware Sensor Deployment Optimization with CMA-ES\", in Proc. of Parallel Problem Solving from Nature (PPSN 2010), Springer, 2010.\n* DEAP is used in [TPOT](https://github.com/rhiever/tpot), an open source tool that uses genetic programming to optimize machine learning pipelines.\n* DEAP is also used in ROS as an optimization package http://www.ros.org/wiki/deap.\n* DEAP is an optional dependency for [PyXRD](https://github.com/mathijs-dumon/PyXRD), a Python implementation of the matrix algorithm developed for the X-ray diffraction analysis of disordered lamellar structures.\n* DEAP is used in [glyph](https://github.com/Ambrosys/glyph), a library for symbolic regression with applications to [MLC](https://en.wikipedia.org/wiki/Machine_learning_control).\n* DEAP is used in [Sklearn-genetic-opt](https://github.com/rodrigo-arenas/Sklearn-genetic-opt), an open source tool that uses evolutionary programming to fine tune machine learning hyperparameters.\n\nIf you want your project listed here, send us a link and a brief description and we'll be glad to add it.\n"
        },
        {
          "name": "deap",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.6611328125,
          "content": "#!/usr/bin/env python\nimport sys\n\nfrom setuptools.command.build_ext import build_ext\nfrom distutils.errors import CCompilerError, DistutilsExecError, \\\n    DistutilsPlatformError\n\n# read the contents of README file\nfrom os import path\nimport codecs\n\nimport deap\n\nwarnings = list()\n\ntry:\n    from setuptools import setup, Extension, find_packages\n    modules = find_packages(exclude=['examples'])\nexcept ImportError:\n    warnings.append(\"warning: using distutils.core.setup, cannot use \\\"develop\\\" option\")\n    from distutils.core import setup, Extension\n    modules = ['deap', 'deap.benchmarks', 'deap.tests', 'deap.tools', 'deap.tools._hypervolume']\n\nthis_directory = path.abspath(path.dirname(__file__))\nlong_description = codecs.open(path.join(this_directory, 'README.md'), 'r', 'utf-8').read()\n\nif sys.platform == 'win32' and sys.version_info > (2, 6):\n    # 2.6's distutils.msvc9compiler can raise an IOError when failing to\n    # find the compiler\n    # It can also raise ValueError http://bugs.python.org/issue7511\n    ext_errors = (CCompilerError, DistutilsExecError, DistutilsPlatformError,\n                  IOError, ValueError)\nelse:\n    ext_errors = (CCompilerError, DistutilsExecError, DistutilsPlatformError)\n\n\nclass BuildFailed(Exception):\n    pass\n\n\nclass ve_build_ext(build_ext):\n    # This class allows C extension building to fail.\n\n    def run(self):\n        try:\n            build_ext.run(self)\n        except DistutilsPlatformError as e:\n            print(e)\n            raise BuildFailed()\n\n    def build_extension(self, ext):\n        try:\n            build_ext.build_extension(self, ext)\n        except ext_errors as e:\n            print(e)\n            raise BuildFailed()\n\n\ndef run_setup(build_ext):\n    extra_modules = None\n    if build_ext:\n        extra_modules = list()\n\n        hv_module = Extension(\"deap.tools._hypervolume.hv\", sources=[\"deap/tools/_hypervolume/_hv.c\", \"deap/tools/_hypervolume/hv.cpp\"])\n        extra_modules.append(hv_module)\n\n    setup(name='deap',\n          version=deap.__revision__,\n          description='Distributed Evolutionary Algorithms in Python',\n          long_description=long_description,\n          long_description_content_type=\"text/markdown\",\n          author='deap Development Team',\n          author_email='deap-users@googlegroups.com',\n          url='https://www.github.com/deap',\n          packages=find_packages(exclude=['examples', 'tests']),\n          platforms=['any'],\n          keywords=['evolutionary algorithms', 'genetic algorithms', 'genetic programming', 'cma-es', 'ga', 'gp', 'es', 'pso'],\n          license='LGPL',\n          classifiers=[\n              'Development Status :: 4 - Beta',\n              'Intended Audience :: Developers',\n              'Intended Audience :: Education',\n              'Intended Audience :: Science/Research',\n              'License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)',\n              'Programming Language :: Python',\n              'Programming Language :: Python :: 3',\n              'Topic :: Scientific/Engineering',\n              'Topic :: Software Development',\n          ],\n          ext_modules=extra_modules,\n          cmdclass={\"build_ext\": ve_build_ext},\n          install_requires=['numpy'],\n          )\n\n\ntry:\n    run_setup(True)\nexcept BuildFailed:\n    print(\"*\" * 75)\n    print(\"WARNING: The C extensions could not be compiled, \"\n          \"speedups won't be available.\")\n    print(\"Now building without C extensions.\")\n    print(\"*\" * 75)\n\n    run_setup(False)\n\n    print(\"*\" * 75)\n    print(\"WARNING: The C extensions could not be compiled, \"\n          \"speedups won't be available.\")\n    print(\"Plain-Python installation succeeded.\")\n    print(\"*\" * 75)\n\nprint(\"\\n\".join(warnings))\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}