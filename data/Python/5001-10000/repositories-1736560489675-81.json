{
  "metadata": {
    "timestamp": 1736560489675,
    "page": 81,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "instaloader/instaloader",
      "stars": 9087,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.025390625,
          "content": "__pycache__/\n.mypy_cache/\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 20.9169921875,
          "content": "[MAIN]\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Clear in-memory caches upon conclusion of linting. Useful if running pylint\n# in a server-like mode.\nclear-cache-post-run=no\n\n# Load and enable all available extensions. Use --list-extensions to see a list\n# all available extensions.\n#enable-all-extensions=\n\n# In error mode, messages with a category besides ERROR or FATAL are\n# suppressed, and no reports are done by default. Error mode is compatible with\n# disabling specific errors.\n#errors-only=\n\n# Always return a 0 (non-error) status code, even if lint errors are found.\n# This is primarily useful in continuous integration scripts.\n#exit-zero=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code.\nextension-pkg-allow-list=\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code. (This is an alternative name to extension-pkg-allow-list\n# for backward compatibility.)\nextension-pkg-whitelist=\n\n# Return non-zero exit code if any of these messages/categories are detected,\n# even if score is above --fail-under value. Syntax same as enable. Messages\n# specified are enabled, while categories only check already-enabled messages.\nfail-on=\n\n# Specify a score threshold under which the program will exit with error.\nfail-under=10\n\n# Interpret the stdin as a python script, whose filename needs to be passed as\n# the module_or_package argument.\n#from-stdin=\n\n# Files or directories to be skipped. They should be base names, not paths.\nignore=CVS\n\n# Add files or directories matching the regular expressions patterns to the\n# ignore-list. The regex matches against paths and can be in Posix or Windows\n# format. Because '\\\\' represents the directory delimiter on Windows systems,\n# it can't be used as an escape character.\nignore-paths=\n\n# Files or directories matching the regular expression patterns are skipped.\n# The regex matches against base names, not paths. The default value ignores\n# Emacs file locks\nignore-patterns=^\\.#\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis). It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the\n# number of processors available to use, and will cap the count on Windows to\n# avoid hangs.\njobs=1\n\n# Control the amount of potential inferred values when inferring a single\n# object. This can help the performance when dealing with large functions or\n# complex, nested conditions.\nlimit-inference-results=100\n\n# List of plugins (as comma separated values of python module names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Minimum Python version to use for version dependent checks. Will default to\n# the version used to run pylint.\npy-version=3.8\n\n# Discover python modules and packages in the file system subtree.\nrecursive=no\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages.\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# In verbose mode, extra non-checker-related info will be displayed.\n#verbose=\n\n\n[BASIC]\n\n# Naming style matching correct argument names.\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style. If left empty, argument names will be checked with the set\n# naming style.\n#argument-rgx=\n\n# Naming style matching correct attribute names.\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style. If left empty, attribute names will be checked with the set naming\n# style.\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma.\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Bad variable names regexes, separated by a comma. If names match any regex,\n# they will always be refused\nbad-names-rgxs=\n\n# Naming style matching correct class attribute names.\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style. If left empty, class attribute names will be checked\n# with the set naming style.\n#class-attribute-rgx=\n\n# Naming style matching correct class constant names.\nclass-const-naming-style=UPPER_CASE\n\n# Regular expression matching correct class constant names. Overrides class-\n# const-naming-style. If left empty, class constant names will be checked with\n# the set naming style.\n#class-const-rgx=\n\n# Naming style matching correct class names.\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-\n# style. If left empty, class names will be checked with the set naming style.\n#class-rgx=\n\n# Naming style matching correct constant names.\nconst-naming-style=UPPER_CASE\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style. If left empty, constant names will be checked with the set naming\n# style.\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n# Naming style matching correct function names.\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style. If left empty, function names will be checked with the set\n# naming style.\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma.\ngood-names=i,\n           j,\n           k,\n           ex,\n           Run,\n           _\n\n# Good variable names regexes, separated by a comma. If names match any regex,\n# they will always be accepted\ngood-names-rgxs=\n\n# Include a hint for the correct naming format with invalid-name.\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names.\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style. If left empty, inline iteration names will be checked\n# with the set naming style.\n#inlinevar-rgx=\n\n# Naming style matching correct method names.\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style. If left empty, method names will be checked with the set naming style.\n#method-rgx=\n\n# Naming style matching correct module names.\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style. If left empty, module names will be checked with the set naming style.\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\n# These decorators are taken in consideration only for invalid-name.\nproperty-classes=abc.abstractproperty\n\n# Regular expression matching correct type variable names. If left empty, type\n# variable names will be checked with the set naming style.\n#typevar-rgx=\n\n# Naming style matching correct variable names.\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style. If left empty, variable names will be checked with the set\n# naming style.\n#variable-rgx=\n\n\n[CLASSES]\n\n# Warn about protected attribute access inside special methods\ncheck-protected-access-in-special-methods=no\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp,\n                      __post_init__\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# List of regular expressions of class ancestor names to ignore when counting\n# public methods (see R0903)\nexclude-too-few-public-methods=\n\n# List of qualified class names to ignore when counting class parents (see\n# R0901)\nignored-parents=\n\n# Maximum number of arguments for function / method.\nmax-args=5\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Maximum number of boolean expressions in an if statement (see R0916).\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body.\nmax-branches=12\n\n# Maximum number of locals for function / method body.\nmax-locals=15\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of return / yield for function / method body.\nmax-returns=6\n\n# Maximum number of statements in function / method body.\nmax-statements=50\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when caught.\novergeneral-exceptions=builtins.BaseException,builtins.Exception\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=120\n\n# Maximum number of lines in a module.\nmax-module-lines=1000\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[IMPORTS]\n\n# List of modules that can be imported at any level, not just the top level\n# one.\nallow-any-import-level=\n\n# Allow explicit reexports by alias from a package __init__.\nallow-reexport-from-package=yes\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Deprecated modules which should not be used, separated by a comma.\ndeprecated-modules=\n\n# Output a graph (.gv or any supported image format) of external dependencies\n# to the given file (report RP0402 must not be disabled).\next-import-graph=\n\n# Output a graph (.gv or any supported image format) of all (i.e. internal and\n# external) dependencies to the given file (report RP0402 must not be\n# disabled).\nimport-graph=\n\n# Output a graph (.gv or any supported image format) of internal dependencies\n# to the given file (report RP0402 must not be disabled).\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n# Couples of modules and preferred modules, separated by a comma.\npreferred-modules=\n\n\n[LOGGING]\n\n# The type of string formatting that logging methods do. `old` means using %\n# formatting, `new` is for `{}` formatting.\nlogging-format-style=old\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format.\nlogging-modules=logging\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, CONTROL_FLOW, INFERENCE, INFERENCE_FAILURE,\n# UNDEFINED.\nconfidence=HIGH,\n           CONTROL_FLOW,\n           INFERENCE,\n           INFERENCE_FAILURE,\n           UNDEFINED\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once). You can also use \"--disable=all\" to\n# disable everything first and then re-enable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use \"--disable=all --enable=classes\n# --disable=W\".\ndisable=bad-inline-option,\n        consider-using-f-string,\n        cyclic-import,\n        deprecated-pragma,\n        file-ignored,\n        invalid-name,\n        locally-disabled,\n        missing-class-docstring,\n        missing-function-docstring,\n        missing-module-docstring,\n        no-else-raise,\n        no-else-return,\n        raw-checker-failed,\n        suppressed-message,\n        too-many-arguments,\n        too-many-branches,\n        too-many-instance-attributes,\n        too-many-lines,\n        too-many-locals,\n        too-many-public-methods,\n        too-many-statements,\n        unnecessary-lambda-assignment,\n        unnecessary-pass,\n        unspecified-encoding,\n        unused-wildcard-import,\n        use-dict-literal,\n        use-list-literal,\n        use-symbolic-message-instead,\n        useless-suppression,\n        wildcard-import\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=c-extension-no-member\n\n\n[METHOD_ARGS]\n\n# List of qualified names (i.e., library.method) which require a timeout\n# parameter e.g. 'requests.api.get,requests.api.post'\ntimeout-methods=requests.api.delete,requests.api.get,requests.api.head,requests.api.options,requests.api.patch,requests.api.post,requests.api.put,requests.api.request\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n# Regular expression of note tags to take in consideration.\nnotes-rgx=\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=sys.exit,argparse.parse_error\n\n\n[REPORTS]\n\n# Python expression which should return a score less than or equal to 10. You\n# have access to the variables 'fatal', 'error', 'warning', 'refactor',\n# 'convention', and 'info' which contain the number of messages in each\n# category, as well as 'statement' which is the total number of statements\n# analyzed. This score is used by the global evaluation report (RP0004).\nevaluation=max(0, 0 if fatal else 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10))\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details.\nmsg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio). You can also give a reporter class, e.g.\n# mypackage.mymodule.MyReporterClass.\n#output-format=\n\n# Tells whether to display a full report or only the messages.\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[SIMILARITIES]\n\n# Comments are removed from the similarity computation\nignore-comments=yes\n\n# Docstrings are removed from the similarity computation\nignore-docstrings=yes\n\n# Imports are removed from the similarity computation\nignore-imports=yes\n\n# Signatures are removed from the similarity computation\nignore-signatures=yes\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes.\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. Available dictionaries: none. To make it work,\n# install the 'python-enchant' package.\nspelling-dict=\n\n# List of comma separated words that should be considered directives if they\n# appear at the beginning of a comment and should not be checked.\nspelling-ignore-comment-directives=fmt: on,fmt: off,noqa:,noqa,nosec,isort:skip,mypy:\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains the private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to the private dictionary (see the\n# --spelling-private-dict-file option) instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[STRING]\n\n# This flag controls whether inconsistent-quotes generates a warning when the\n# character used as a quote delimiter is used inconsistently within a module.\ncheck-quote-consistency=no\n\n# This flag controls whether the implicit-str-concat should generate a warning\n# on implicit string concatenation in sequences defined over several lines.\ncheck-str-concat-over-line-jumps=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether to warn about missing members when the owner of the attribute\n# is inferred to be None.\nignore-none=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of symbolic message names to ignore for Mixin members.\nignored-checks-for-mixins=no-member,\n                          not-async-context-manager,\n                          not-context-manager,\n                          attribute-defined-outside-init\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local,argparse.Namespace\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n# Regex pattern to define which classes are considered mixins.\nmixin-class-rgx=.*[Mm]ixin\n\n# List of decorators that change the signature of a decorated function.\nsignature-mutators=\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid defining new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of names allowed to shadow builtins\nallowed-redefined-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expected to\n# not be used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored.\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io\n"
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 0.24609375,
          "content": "Authors\n=======\n\nInstaloader is written by\n\n- Alexander Graf (@aandergr)\n- André Koch-Kramer (@Thammus)\n- Lars Lindqvist (@e5150)\n- Eduardo M Kalinowksi (@ekalin)\n- ... and many more, see https://github.com/instaloader/instaloader/graphs/contributors\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.396484375,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement by opening an\nissue or contacting one or more of the project maintainers.\n\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by \n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available \nat [https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.083984375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016-2020 Alexander Graf and André Koch-Kramer.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.5341796875,
          "content": "[[source]]\nname = \"pypi\"\nurl = \"https://pypi.org/simple\"\nverify_ssl = true\n\n[dev-packages]\npylint = \"*\"\nmypy = \"*\"\nsphinx = \"*\"\npyinstaller = \"*\"\npsutil = \"*\"\ntypes-requests = \"*\"\nsphinx-autodoc-typehints = \"*\"\nsphinxcontrib-jquery = \"*\"\ntomli = \"*\"           # Needed for Pylint for \"python_version < '3.11'\"\ndill = \"*\"            # Needed for Pylint for \"python_version < '3.11'\"\npywin32-ctypes = \"*\"  # Needed for pyinstaller on Windows\npefile = \"*\"          # Needed for pyinstaller on Windows\n\n[packages]\nrequests = \"*\"\nbrowser-cookie3 = \"*\"\n"
        },
        {
          "name": "Pipfile.lock",
          "type": "blob",
          "size": 48.8046875,
          "content": "{\n    \"_meta\": {\n        \"hash\": {\n            \"sha256\": \"7a7000ad88c2f698c6e5f6b3eaaf24b66321e6d1743a8e088bae609626a02133\"\n        },\n        \"pipfile-spec\": 6,\n        \"requires\": {},\n        \"sources\": [\n            {\n                \"name\": \"pypi\",\n                \"url\": \"https://pypi.org/simple\",\n                \"verify_ssl\": true\n            }\n        ]\n    },\n    \"default\": {\n        \"browser-cookie3\": {\n            \"hashes\": [\n                \"sha256:114e40fe80853211d65f14bc690a7d90c4c287251593dc5767692a950a9006d4\",\n                \"sha256:3031ad14b96b47ef1e4c8545f2f463e10ad844ef834dcd0ebdae361e31c6119a\"\n            ],\n            \"index\": \"pypi\",\n            \"version\": \"==0.19.1\"\n        },\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:5a1e7645bc0ec61a09e26c36f6106dd4cf40c6db3a1fb6352b0244e7fb057c7b\",\n                \"sha256:c198e21b1289c2ab85ee4e67bb4b4ef3ead0892059901a8d5b622f24a1101e90\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==2024.7.4\"\n        },\n        \"charset-normalizer\": {\n            \"hashes\": [\n                \"sha256:06435b539f889b1f6f4ac1758871aae42dc3a8c0e24ac9e60c2384973ad73027\",\n                \"sha256:06a81e93cd441c56a9b65d8e1d043daeb97a3d0856d177d5c90ba85acb3db087\",\n                \"sha256:0a55554a2fa0d408816b3b5cedf0045f4b8e1a6065aec45849de2d6f3f8e9786\",\n                \"sha256:0b2b64d2bb6d3fb9112bafa732def486049e63de9618b5843bcdd081d8144cd8\",\n                \"sha256:10955842570876604d404661fbccbc9c7e684caf432c09c715ec38fbae45ae09\",\n                \"sha256:122c7fa62b130ed55f8f285bfd56d5f4b4a5b503609d181f9ad85e55c89f4185\",\n                \"sha256:1ceae2f17a9c33cb48e3263960dc5fc8005351ee19db217e9b1bb15d28c02574\",\n                \"sha256:1d3193f4a680c64b4b6a9115943538edb896edc190f0b222e73761716519268e\",\n                \"sha256:1f79682fbe303db92bc2b1136016a38a42e835d932bab5b3b1bfcfbf0640e519\",\n                \"sha256:2127566c664442652f024c837091890cb1942c30937add288223dc895793f898\",\n                \"sha256:22afcb9f253dac0696b5a4be4a1c0f8762f8239e21b99680099abd9b2b1b2269\",\n                \"sha256:25baf083bf6f6b341f4121c2f3c548875ee6f5339300e08be3f2b2ba1721cdd3\",\n                \"sha256:2e81c7b9c8979ce92ed306c249d46894776a909505d8f5a4ba55b14206e3222f\",\n                \"sha256:3287761bc4ee9e33561a7e058c72ac0938c4f57fe49a09eae428fd88aafe7bb6\",\n                \"sha256:34d1c8da1e78d2e001f363791c98a272bb734000fcef47a491c1e3b0505657a8\",\n                \"sha256:37e55c8e51c236f95b033f6fb391d7d7970ba5fe7ff453dad675e88cf303377a\",\n                \"sha256:3d47fa203a7bd9c5b6cee4736ee84ca03b8ef23193c0d1ca99b5089f72645c73\",\n                \"sha256:3e4d1f6587322d2788836a99c69062fbb091331ec940e02d12d179c1d53e25fc\",\n                \"sha256:42cb296636fcc8b0644486d15c12376cb9fa75443e00fb25de0b8602e64c1714\",\n                \"sha256:45485e01ff4d3630ec0d9617310448a8702f70e9c01906b0d0118bdf9d124cf2\",\n                \"sha256:4a78b2b446bd7c934f5dcedc588903fb2f5eec172f3d29e52a9096a43722adfc\",\n                \"sha256:4ab2fe47fae9e0f9dee8c04187ce5d09f48eabe611be8259444906793ab7cbce\",\n                \"sha256:4d0d1650369165a14e14e1e47b372cfcb31d6ab44e6e33cb2d4e57265290044d\",\n                \"sha256:549a3a73da901d5bc3ce8d24e0600d1fa85524c10287f6004fbab87672bf3e1e\",\n                \"sha256:55086ee1064215781fff39a1af09518bc9255b50d6333f2e4c74ca09fac6a8f6\",\n                \"sha256:572c3763a264ba47b3cf708a44ce965d98555f618ca42c926a9c1616d8f34269\",\n                \"sha256:573f6eac48f4769d667c4442081b1794f52919e7edada77495aaed9236d13a96\",\n                \"sha256:5b4c145409bef602a690e7cfad0a15a55c13320ff7a3ad7ca59c13bb8ba4d45d\",\n                \"sha256:6463effa3186ea09411d50efc7d85360b38d5f09b870c48e4600f63af490e56a\",\n                \"sha256:65f6f63034100ead094b8744b3b97965785388f308a64cf8d7c34f2f2e5be0c4\",\n                \"sha256:663946639d296df6a2bb2aa51b60a2454ca1cb29835324c640dafb5ff2131a77\",\n                \"sha256:6897af51655e3691ff853668779c7bad41579facacf5fd7253b0133308cf000d\",\n                \"sha256:68d1f8a9e9e37c1223b656399be5d6b448dea850bed7d0f87a8311f1ff3dabb0\",\n                \"sha256:6ac7ffc7ad6d040517be39eb591cac5ff87416c2537df6ba3cba3bae290c0fed\",\n                \"sha256:6b3251890fff30ee142c44144871185dbe13b11bab478a88887a639655be1068\",\n                \"sha256:6c4caeef8fa63d06bd437cd4bdcf3ffefe6738fb1b25951440d80dc7df8c03ac\",\n                \"sha256:6ef1d82a3af9d3eecdba2321dc1b3c238245d890843e040e41e470ffa64c3e25\",\n                \"sha256:753f10e867343b4511128c6ed8c82f7bec3bd026875576dfd88483c5c73b2fd8\",\n                \"sha256:7cd13a2e3ddeed6913a65e66e94b51d80a041145a026c27e6bb76c31a853c6ab\",\n                \"sha256:7ed9e526742851e8d5cc9e6cf41427dfc6068d4f5a3bb03659444b4cabf6bc26\",\n                \"sha256:7f04c839ed0b6b98b1a7501a002144b76c18fb1c1850c8b98d458ac269e26ed2\",\n                \"sha256:802fe99cca7457642125a8a88a084cef28ff0cf9407060f7b93dca5aa25480db\",\n                \"sha256:80402cd6ee291dcb72644d6eac93785fe2c8b9cb30893c1af5b8fdd753b9d40f\",\n                \"sha256:8465322196c8b4d7ab6d1e049e4c5cb460d0394da4a27d23cc242fbf0034b6b5\",\n                \"sha256:86216b5cee4b06df986d214f664305142d9c76df9b6512be2738aa72a2048f99\",\n                \"sha256:87d1351268731db79e0f8e745d92493ee2841c974128ef629dc518b937d9194c\",\n                \"sha256:8bdb58ff7ba23002a4c5808d608e4e6c687175724f54a5dade5fa8c67b604e4d\",\n                \"sha256:8c622a5fe39a48f78944a87d4fb8a53ee07344641b0562c540d840748571b811\",\n                \"sha256:8d756e44e94489e49571086ef83b2bb8ce311e730092d2c34ca8f7d925cb20aa\",\n                \"sha256:8f4a014bc36d3c57402e2977dada34f9c12300af536839dc38c0beab8878f38a\",\n                \"sha256:9063e24fdb1e498ab71cb7419e24622516c4a04476b17a2dab57e8baa30d6e03\",\n                \"sha256:90d558489962fd4918143277a773316e56c72da56ec7aa3dc3dbbe20fdfed15b\",\n                \"sha256:923c0c831b7cfcb071580d3f46c4baf50f174be571576556269530f4bbd79d04\",\n                \"sha256:95f2a5796329323b8f0512e09dbb7a1860c46a39da62ecb2324f116fa8fdc85c\",\n                \"sha256:96b02a3dc4381e5494fad39be677abcb5e6634bf7b4fa83a6dd3112607547001\",\n                \"sha256:9f96df6923e21816da7e0ad3fd47dd8f94b2a5ce594e00677c0013018b813458\",\n                \"sha256:a10af20b82360ab00827f916a6058451b723b4e65030c5a18577c8b2de5b3389\",\n                \"sha256:a50aebfa173e157099939b17f18600f72f84eed3049e743b68ad15bd69b6bf99\",\n                \"sha256:a981a536974bbc7a512cf44ed14938cf01030a99e9b3a06dd59578882f06f985\",\n                \"sha256:a9a8e9031d613fd2009c182b69c7b2c1ef8239a0efb1df3f7c8da66d5dd3d537\",\n                \"sha256:ae5f4161f18c61806f411a13b0310bea87f987c7d2ecdbdaad0e94eb2e404238\",\n                \"sha256:aed38f6e4fb3f5d6bf81bfa990a07806be9d83cf7bacef998ab1a9bd660a581f\",\n                \"sha256:b01b88d45a6fcb69667cd6d2f7a9aeb4bf53760d7fc536bf679ec94fe9f3ff3d\",\n                \"sha256:b261ccdec7821281dade748d088bb6e9b69e6d15b30652b74cbbac25e280b796\",\n                \"sha256:b2b0a0c0517616b6869869f8c581d4eb2dd83a4d79e0ebcb7d373ef9956aeb0a\",\n                \"sha256:b4a23f61ce87adf89be746c8a8974fe1c823c891d8f86eb218bb957c924bb143\",\n                \"sha256:bd8f7df7d12c2db9fab40bdd87a7c09b1530128315d047a086fa3ae3435cb3a8\",\n                \"sha256:beb58fe5cdb101e3a055192ac291b7a21e3b7ef4f67fa1d74e331a7f2124341c\",\n                \"sha256:c002b4ffc0be611f0d9da932eb0f704fe2602a9a949d1f738e4c34c75b0863d5\",\n                \"sha256:c083af607d2515612056a31f0a8d9e0fcb5876b7bfc0abad3ecd275bc4ebc2d5\",\n                \"sha256:c180f51afb394e165eafe4ac2936a14bee3eb10debc9d9e4db8958fe36afe711\",\n                \"sha256:c235ebd9baae02f1b77bcea61bce332cb4331dc3617d254df3323aa01ab47bd4\",\n                \"sha256:cd70574b12bb8a4d2aaa0094515df2463cb429d8536cfb6c7ce983246983e5a6\",\n                \"sha256:d0eccceffcb53201b5bfebb52600a5fb483a20b61da9dbc885f8b103cbe7598c\",\n                \"sha256:d965bba47ddeec8cd560687584e88cf699fd28f192ceb452d1d7ee807c5597b7\",\n                \"sha256:db364eca23f876da6f9e16c9da0df51aa4f104a972735574842618b8c6d999d4\",\n                \"sha256:ddbb2551d7e0102e7252db79ba445cdab71b26640817ab1e3e3648dad515003b\",\n                \"sha256:deb6be0ac38ece9ba87dea880e438f25ca3eddfac8b002a2ec3d9183a454e8ae\",\n                \"sha256:e06ed3eb3218bc64786f7db41917d4e686cc4856944f53d5bdf83a6884432e12\",\n                \"sha256:e27ad930a842b4c5eb8ac0016b0a54f5aebbe679340c26101df33424142c143c\",\n                \"sha256:e537484df0d8f426ce2afb2d0f8e1c3d0b114b83f8850e5f2fbea0e797bd82ae\",\n                \"sha256:eb00ed941194665c332bf8e078baf037d6c35d7c4f3102ea2d4f16ca94a26dc8\",\n                \"sha256:eb6904c354526e758fda7167b33005998fb68c46fbc10e013ca97f21ca5c8887\",\n                \"sha256:eb8821e09e916165e160797a6c17edda0679379a4be5c716c260e836e122f54b\",\n                \"sha256:efcb3f6676480691518c177e3b465bcddf57cea040302f9f4e6e191af91174d4\",\n                \"sha256:f27273b60488abe721a075bcca6d7f3964f9f6f067c8c4c605743023d7d3944f\",\n                \"sha256:f30c3cb33b24454a82faecaf01b19c18562b1e89558fb6c56de4d9118a032fd5\",\n                \"sha256:fb69256e180cb6c8a894fee62b3afebae785babc1ee98b81cdf68bbca1987f33\",\n                \"sha256:fd1abc0d89e30cc4e02e4064dc67fcc51bd941eb395c502aac3ec19fab46b519\",\n                \"sha256:ff8fa367d09b717b2a17a052544193ad76cd49979c805768879cb63d9ca50561\"\n            ],\n            \"markers\": \"python_full_version >= '3.7.0'\",\n            \"version\": \"==3.3.2\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:028ff3aadf0609c1fd278d8ea3089299412a7a8b9bd005dd08b9f8285bcb5cfc\",\n                \"sha256:82fee1fc78add43492d3a1898bfa6d8a904cc97d8427f683ed8e798d07761aa0\"\n            ],\n            \"markers\": \"python_version >= '3.5'\",\n            \"version\": \"==3.7\"\n        },\n        \"jeepney\": {\n            \"hashes\": [\n                \"sha256:5efe48d255973902f6badc3ce55e2aa6c5c3b3bc642059ef3a91247bcfcc5806\",\n                \"sha256:c0a454ad016ca575060802ee4d590dd912e35c122fa04e70306de3d076cce755\"\n            ],\n            \"markers\": \"python_version >= '3.7' and 'bsd' in sys_platform or sys_platform == 'linux'\",\n            \"version\": \"==0.8.0\"\n        },\n        \"lz4\": {\n            \"hashes\": [\n                \"sha256:01fe674ef2889dbb9899d8a67361e0c4a2c833af5aeb37dd505727cf5d2a131e\",\n                \"sha256:054b4631a355606e99a42396f5db4d22046a3397ffc3269a348ec41eaebd69d2\",\n                \"sha256:0a136e44a16fc98b1abc404fbabf7f1fada2bdab6a7e970974fb81cf55b636d0\",\n                \"sha256:0e9c410b11a31dbdc94c05ac3c480cb4b222460faf9231f12538d0074e56c563\",\n                \"sha256:222a7e35137d7539c9c33bb53fcbb26510c5748779364014235afc62b0ec797f\",\n                \"sha256:24b3206de56b7a537eda3a8123c644a2b7bf111f0af53bc14bed90ce5562d1aa\",\n                \"sha256:2b901c7784caac9a1ded4555258207d9e9697e746cc8532129f150ffe1f6ba0d\",\n                \"sha256:2f7b1839f795315e480fb87d9bc60b186a98e3e5d17203c6e757611ef7dcef61\",\n                \"sha256:30e8c20b8857adef7be045c65f47ab1e2c4fabba86a9fa9a997d7674a31ea6b6\",\n                \"sha256:31ea4be9d0059c00b2572d700bf2c1bc82f241f2c3282034a759c9a4d6ca4dc2\",\n                \"sha256:337cb94488a1b060ef1685187d6ad4ba8bc61d26d631d7ba909ee984ea736be1\",\n                \"sha256:33c9a6fd20767ccaf70649982f8f3eeb0884035c150c0b818ea660152cf3c809\",\n                \"sha256:363ab65bf31338eb364062a15f302fc0fab0a49426051429866d71c793c23394\",\n                \"sha256:43cf03059c0f941b772c8aeb42a0813d68d7081c009542301637e5782f8a33e2\",\n                \"sha256:56f4fe9c6327adb97406f27a66420b22ce02d71a5c365c48d6b656b4aaeb7775\",\n                \"sha256:5d35533bf2cee56f38ced91f766cd0038b6abf46f438a80d50c52750088be93f\",\n                \"sha256:6756212507405f270b66b3ff7f564618de0606395c0fe10a7ae2ffcbbe0b1fba\",\n                \"sha256:6cdc60e21ec70266947a48839b437d46025076eb4b12c76bd47f8e5eb8a75dcc\",\n                \"sha256:abc197e4aca8b63f5ae200af03eb95fb4b5055a8f990079b5bdf042f568469dd\",\n                \"sha256:b14d948e6dce389f9a7afc666d60dd1e35fa2138a8ec5306d30cd2e30d36b40c\",\n                \"sha256:b47839b53956e2737229d70714f1d75f33e8ac26e52c267f0197b3189ca6de24\",\n                \"sha256:b6d9ec061b9eca86e4dcc003d93334b95d53909afd5a32c6e4f222157b50c071\",\n                \"sha256:b891880c187e96339474af2a3b2bfb11a8e4732ff5034be919aa9029484cd201\",\n                \"sha256:bca8fccc15e3add173da91be8f34121578dc777711ffd98d399be35487c934bf\",\n                \"sha256:c81703b12475da73a5d66618856d04b1307e43428a7e59d98cfe5a5d608a74c6\",\n                \"sha256:d2507ee9c99dbddd191c86f0e0c8b724c76d26b0602db9ea23232304382e1f21\",\n                \"sha256:e36cd7b9d4d920d3bfc2369840da506fa68258f7bb176b8743189793c055e43d\",\n                \"sha256:e7d84b479ddf39fe3ea05387f10b779155fc0990125f4fb35d636114e1c63a2e\",\n                \"sha256:eac9af361e0d98335a02ff12fb56caeb7ea1196cf1a49dbf6f17828a131da807\",\n                \"sha256:edfd858985c23523f4e5a7526ca6ee65ff930207a7ec8a8f57a01eae506aaee7\",\n                \"sha256:ee9ff50557a942d187ec85462bb0960207e7ec5b19b3b48949263993771c6205\",\n                \"sha256:f0e822cd7644995d9ba248cb4b67859701748a93e2ab7fc9bc18c599a52e4604\",\n                \"sha256:f180904f33bdd1e92967923a43c22899e303906d19b2cf8bb547db6653ea6e7d\",\n                \"sha256:f1d18718f9d78182c6b60f568c9a9cec8a7204d7cb6fad4e511a2ef279e4cb05\",\n                \"sha256:f4c7bf687303ca47d69f9f0133274958fd672efaa33fb5bcde467862d6c621f0\",\n                \"sha256:f76176492ff082657ada0d0f10c794b6da5800249ef1692b35cf49b1e93e8ef7\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==4.3.3\"\n        },\n        \"pycryptodomex\": {\n            \"hashes\": [\n                \"sha256:0daad007b685db36d977f9de73f61f8da2a7104e20aca3effd30752fd56f73e1\",\n                \"sha256:108e5f1c1cd70ffce0b68739c75734437c919d2eaec8e85bffc2c8b4d2794305\",\n                \"sha256:19764605feea0df966445d46533729b645033f134baeb3ea26ad518c9fdf212c\",\n                \"sha256:1be97461c439a6af4fe1cf8bf6ca5936d3db252737d2f379cc6b2e394e12a458\",\n                \"sha256:25cd61e846aaab76d5791d006497134602a9e451e954833018161befc3b5b9ed\",\n                \"sha256:2a47bcc478741b71273b917232f521fd5704ab4b25d301669879e7273d3586cc\",\n                \"sha256:59af01efb011b0e8b686ba7758d59cf4a8263f9ad35911bfe3f416cee4f5c08c\",\n                \"sha256:5dcac11031a71348faaed1f403a0debd56bf5404232284cf8c761ff918886ebc\",\n                \"sha256:62a5ec91388984909bb5398ea49ee61b68ecb579123694bffa172c3b0a107079\",\n                \"sha256:645bd4ca6f543685d643dadf6a856cc382b654cc923460e3a10a49c1b3832aeb\",\n                \"sha256:653b29b0819605fe0898829c8ad6400a6ccde096146730c2da54eede9b7b8baa\",\n                \"sha256:69138068268127cd605e03438312d8f271135a33140e2742b417d027a0539427\",\n                \"sha256:6e186342cfcc3aafaad565cbd496060e5a614b441cacc3995ef0091115c1f6c5\",\n                \"sha256:76bd15bb65c14900d98835fcd10f59e5e0435077431d3a394b60b15864fddd64\",\n                \"sha256:7805830e0c56d88f4d491fa5ac640dfc894c5ec570d1ece6ed1546e9df2e98d6\",\n                \"sha256:7a710b79baddd65b806402e14766c721aee8fb83381769c27920f26476276c1e\",\n                \"sha256:7a7a8f33a1f1fb762ede6cc9cbab8f2a9ba13b196bfaf7bc6f0b39d2ba315a43\",\n                \"sha256:82ee7696ed8eb9a82c7037f32ba9b7c59e51dda6f105b39f043b6ef293989cb3\",\n                \"sha256:88afd7a3af7ddddd42c2deda43d53d3dfc016c11327d0915f90ca34ebda91499\",\n                \"sha256:8af1a451ff9e123d0d8bd5d5e60f8e3315c3a64f3cdd6bc853e26090e195cdc8\",\n                \"sha256:8ee606964553c1a0bc74057dd8782a37d1c2bc0f01b83193b6f8bb14523b877b\",\n                \"sha256:91852d4480a4537d169c29a9d104dda44094c78f1f5b67bca76c29a91042b623\",\n                \"sha256:9c682436c359b5ada67e882fec34689726a09c461efd75b6ea77b2403d5665b7\",\n                \"sha256:bc3ee1b4d97081260d92ae813a83de4d2653206967c4a0a017580f8b9548ddbc\",\n                \"sha256:bca649483d5ed251d06daf25957f802e44e6bb6df2e8f218ae71968ff8f8edc4\",\n                \"sha256:c39778fd0548d78917b61f03c1fa8bfda6cfcf98c767decf360945fe6f97461e\",\n                \"sha256:cbe71b6712429650e3883dc81286edb94c328ffcd24849accac0a4dbcc76958a\",\n                \"sha256:d00fe8596e1cc46b44bf3907354e9377aa030ec4cd04afbbf6e899fc1e2a7781\",\n                \"sha256:d3584623e68a5064a04748fb6d76117a21a7cb5eaba20608a41c7d0c61721794\",\n                \"sha256:e48217c7901edd95f9f097feaa0388da215ed14ce2ece803d3f300b4e694abea\",\n                \"sha256:f2e497413560e03421484189a6b65e33fe800d3bd75590e6d78d4dfdb7accf3b\",\n                \"sha256:ff5c9a67f8a4fba4aed887216e32cbc48f2a6fb2673bb10a99e43be463e15913\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4'\",\n            \"version\": \"==3.20.0\"\n        },\n        \"requests\": {\n            \"hashes\": [\n                \"sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760\",\n                \"sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.32.3\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:a448b2f64d686155468037e1ace9f2d2199776e17f0a46610480d311f73e3472\",\n                \"sha256:dd505485549a7a552833da5e6063639d0d177c04f23bc3864e41e5dc5f612168\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.2.2\"\n        }\n    },\n    \"develop\": {\n        \"alabaster\": {\n            \"hashes\": [\n                \"sha256:c00dca57bca26fa62a6d7d0a9fcce65f3e026e9bfe33e9c538fd3fbb2144fd9e\",\n                \"sha256:fc6786402dc3fcb2de3cabd5fe455a2db534b371124f1f21de8731783dec828b\"\n            ],\n            \"markers\": \"python_version >= '3.10'\",\n            \"version\": \"==1.0.0\"\n        },\n        \"altgraph\": {\n            \"hashes\": [\n                \"sha256:1b5afbb98f6c4dcadb2e2ae6ab9fa994bbb8c1d75f4fa96d340f9437ae454406\",\n                \"sha256:642743b4750de17e655e6711601b077bc6598dbfa3ba5fa2b2a35ce12b508dff\"\n            ],\n            \"version\": \"==0.17.4\"\n        },\n        \"astroid\": {\n            \"hashes\": [\n                \"sha256:0e14202810b30da1b735827f78f5157be2bbd4a7a59b7707ca0bfc2fb4c0063a\",\n                \"sha256:413658a61eeca6202a59231abb473f932038fbcbf1666587f66d482083413a25\"\n            ],\n            \"markers\": \"python_full_version >= '3.8.0'\",\n            \"version\": \"==3.2.4\"\n        },\n        \"babel\": {\n            \"hashes\": [\n                \"sha256:368b5b98b37c06b7daf6696391c3240c938b37767d4584413e8438c5c435fa8b\",\n                \"sha256:d1f3554ca26605fe173f3de0c65f750f5a42f924499bf134de6423582298e316\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.16.0\"\n        },\n        \"certifi\": {\n            \"hashes\": [\n                \"sha256:5a1e7645bc0ec61a09e26c36f6106dd4cf40c6db3a1fb6352b0244e7fb057c7b\",\n                \"sha256:c198e21b1289c2ab85ee4e67bb4b4ef3ead0892059901a8d5b622f24a1101e90\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==2024.7.4\"\n        },\n        \"charset-normalizer\": {\n            \"hashes\": [\n                \"sha256:06435b539f889b1f6f4ac1758871aae42dc3a8c0e24ac9e60c2384973ad73027\",\n                \"sha256:06a81e93cd441c56a9b65d8e1d043daeb97a3d0856d177d5c90ba85acb3db087\",\n                \"sha256:0a55554a2fa0d408816b3b5cedf0045f4b8e1a6065aec45849de2d6f3f8e9786\",\n                \"sha256:0b2b64d2bb6d3fb9112bafa732def486049e63de9618b5843bcdd081d8144cd8\",\n                \"sha256:10955842570876604d404661fbccbc9c7e684caf432c09c715ec38fbae45ae09\",\n                \"sha256:122c7fa62b130ed55f8f285bfd56d5f4b4a5b503609d181f9ad85e55c89f4185\",\n                \"sha256:1ceae2f17a9c33cb48e3263960dc5fc8005351ee19db217e9b1bb15d28c02574\",\n                \"sha256:1d3193f4a680c64b4b6a9115943538edb896edc190f0b222e73761716519268e\",\n                \"sha256:1f79682fbe303db92bc2b1136016a38a42e835d932bab5b3b1bfcfbf0640e519\",\n                \"sha256:2127566c664442652f024c837091890cb1942c30937add288223dc895793f898\",\n                \"sha256:22afcb9f253dac0696b5a4be4a1c0f8762f8239e21b99680099abd9b2b1b2269\",\n                \"sha256:25baf083bf6f6b341f4121c2f3c548875ee6f5339300e08be3f2b2ba1721cdd3\",\n                \"sha256:2e81c7b9c8979ce92ed306c249d46894776a909505d8f5a4ba55b14206e3222f\",\n                \"sha256:3287761bc4ee9e33561a7e058c72ac0938c4f57fe49a09eae428fd88aafe7bb6\",\n                \"sha256:34d1c8da1e78d2e001f363791c98a272bb734000fcef47a491c1e3b0505657a8\",\n                \"sha256:37e55c8e51c236f95b033f6fb391d7d7970ba5fe7ff453dad675e88cf303377a\",\n                \"sha256:3d47fa203a7bd9c5b6cee4736ee84ca03b8ef23193c0d1ca99b5089f72645c73\",\n                \"sha256:3e4d1f6587322d2788836a99c69062fbb091331ec940e02d12d179c1d53e25fc\",\n                \"sha256:42cb296636fcc8b0644486d15c12376cb9fa75443e00fb25de0b8602e64c1714\",\n                \"sha256:45485e01ff4d3630ec0d9617310448a8702f70e9c01906b0d0118bdf9d124cf2\",\n                \"sha256:4a78b2b446bd7c934f5dcedc588903fb2f5eec172f3d29e52a9096a43722adfc\",\n                \"sha256:4ab2fe47fae9e0f9dee8c04187ce5d09f48eabe611be8259444906793ab7cbce\",\n                \"sha256:4d0d1650369165a14e14e1e47b372cfcb31d6ab44e6e33cb2d4e57265290044d\",\n                \"sha256:549a3a73da901d5bc3ce8d24e0600d1fa85524c10287f6004fbab87672bf3e1e\",\n                \"sha256:55086ee1064215781fff39a1af09518bc9255b50d6333f2e4c74ca09fac6a8f6\",\n                \"sha256:572c3763a264ba47b3cf708a44ce965d98555f618ca42c926a9c1616d8f34269\",\n                \"sha256:573f6eac48f4769d667c4442081b1794f52919e7edada77495aaed9236d13a96\",\n                \"sha256:5b4c145409bef602a690e7cfad0a15a55c13320ff7a3ad7ca59c13bb8ba4d45d\",\n                \"sha256:6463effa3186ea09411d50efc7d85360b38d5f09b870c48e4600f63af490e56a\",\n                \"sha256:65f6f63034100ead094b8744b3b97965785388f308a64cf8d7c34f2f2e5be0c4\",\n                \"sha256:663946639d296df6a2bb2aa51b60a2454ca1cb29835324c640dafb5ff2131a77\",\n                \"sha256:6897af51655e3691ff853668779c7bad41579facacf5fd7253b0133308cf000d\",\n                \"sha256:68d1f8a9e9e37c1223b656399be5d6b448dea850bed7d0f87a8311f1ff3dabb0\",\n                \"sha256:6ac7ffc7ad6d040517be39eb591cac5ff87416c2537df6ba3cba3bae290c0fed\",\n                \"sha256:6b3251890fff30ee142c44144871185dbe13b11bab478a88887a639655be1068\",\n                \"sha256:6c4caeef8fa63d06bd437cd4bdcf3ffefe6738fb1b25951440d80dc7df8c03ac\",\n                \"sha256:6ef1d82a3af9d3eecdba2321dc1b3c238245d890843e040e41e470ffa64c3e25\",\n                \"sha256:753f10e867343b4511128c6ed8c82f7bec3bd026875576dfd88483c5c73b2fd8\",\n                \"sha256:7cd13a2e3ddeed6913a65e66e94b51d80a041145a026c27e6bb76c31a853c6ab\",\n                \"sha256:7ed9e526742851e8d5cc9e6cf41427dfc6068d4f5a3bb03659444b4cabf6bc26\",\n                \"sha256:7f04c839ed0b6b98b1a7501a002144b76c18fb1c1850c8b98d458ac269e26ed2\",\n                \"sha256:802fe99cca7457642125a8a88a084cef28ff0cf9407060f7b93dca5aa25480db\",\n                \"sha256:80402cd6ee291dcb72644d6eac93785fe2c8b9cb30893c1af5b8fdd753b9d40f\",\n                \"sha256:8465322196c8b4d7ab6d1e049e4c5cb460d0394da4a27d23cc242fbf0034b6b5\",\n                \"sha256:86216b5cee4b06df986d214f664305142d9c76df9b6512be2738aa72a2048f99\",\n                \"sha256:87d1351268731db79e0f8e745d92493ee2841c974128ef629dc518b937d9194c\",\n                \"sha256:8bdb58ff7ba23002a4c5808d608e4e6c687175724f54a5dade5fa8c67b604e4d\",\n                \"sha256:8c622a5fe39a48f78944a87d4fb8a53ee07344641b0562c540d840748571b811\",\n                \"sha256:8d756e44e94489e49571086ef83b2bb8ce311e730092d2c34ca8f7d925cb20aa\",\n                \"sha256:8f4a014bc36d3c57402e2977dada34f9c12300af536839dc38c0beab8878f38a\",\n                \"sha256:9063e24fdb1e498ab71cb7419e24622516c4a04476b17a2dab57e8baa30d6e03\",\n                \"sha256:90d558489962fd4918143277a773316e56c72da56ec7aa3dc3dbbe20fdfed15b\",\n                \"sha256:923c0c831b7cfcb071580d3f46c4baf50f174be571576556269530f4bbd79d04\",\n                \"sha256:95f2a5796329323b8f0512e09dbb7a1860c46a39da62ecb2324f116fa8fdc85c\",\n                \"sha256:96b02a3dc4381e5494fad39be677abcb5e6634bf7b4fa83a6dd3112607547001\",\n                \"sha256:9f96df6923e21816da7e0ad3fd47dd8f94b2a5ce594e00677c0013018b813458\",\n                \"sha256:a10af20b82360ab00827f916a6058451b723b4e65030c5a18577c8b2de5b3389\",\n                \"sha256:a50aebfa173e157099939b17f18600f72f84eed3049e743b68ad15bd69b6bf99\",\n                \"sha256:a981a536974bbc7a512cf44ed14938cf01030a99e9b3a06dd59578882f06f985\",\n                \"sha256:a9a8e9031d613fd2009c182b69c7b2c1ef8239a0efb1df3f7c8da66d5dd3d537\",\n                \"sha256:ae5f4161f18c61806f411a13b0310bea87f987c7d2ecdbdaad0e94eb2e404238\",\n                \"sha256:aed38f6e4fb3f5d6bf81bfa990a07806be9d83cf7bacef998ab1a9bd660a581f\",\n                \"sha256:b01b88d45a6fcb69667cd6d2f7a9aeb4bf53760d7fc536bf679ec94fe9f3ff3d\",\n                \"sha256:b261ccdec7821281dade748d088bb6e9b69e6d15b30652b74cbbac25e280b796\",\n                \"sha256:b2b0a0c0517616b6869869f8c581d4eb2dd83a4d79e0ebcb7d373ef9956aeb0a\",\n                \"sha256:b4a23f61ce87adf89be746c8a8974fe1c823c891d8f86eb218bb957c924bb143\",\n                \"sha256:bd8f7df7d12c2db9fab40bdd87a7c09b1530128315d047a086fa3ae3435cb3a8\",\n                \"sha256:beb58fe5cdb101e3a055192ac291b7a21e3b7ef4f67fa1d74e331a7f2124341c\",\n                \"sha256:c002b4ffc0be611f0d9da932eb0f704fe2602a9a949d1f738e4c34c75b0863d5\",\n                \"sha256:c083af607d2515612056a31f0a8d9e0fcb5876b7bfc0abad3ecd275bc4ebc2d5\",\n                \"sha256:c180f51afb394e165eafe4ac2936a14bee3eb10debc9d9e4db8958fe36afe711\",\n                \"sha256:c235ebd9baae02f1b77bcea61bce332cb4331dc3617d254df3323aa01ab47bd4\",\n                \"sha256:cd70574b12bb8a4d2aaa0094515df2463cb429d8536cfb6c7ce983246983e5a6\",\n                \"sha256:d0eccceffcb53201b5bfebb52600a5fb483a20b61da9dbc885f8b103cbe7598c\",\n                \"sha256:d965bba47ddeec8cd560687584e88cf699fd28f192ceb452d1d7ee807c5597b7\",\n                \"sha256:db364eca23f876da6f9e16c9da0df51aa4f104a972735574842618b8c6d999d4\",\n                \"sha256:ddbb2551d7e0102e7252db79ba445cdab71b26640817ab1e3e3648dad515003b\",\n                \"sha256:deb6be0ac38ece9ba87dea880e438f25ca3eddfac8b002a2ec3d9183a454e8ae\",\n                \"sha256:e06ed3eb3218bc64786f7db41917d4e686cc4856944f53d5bdf83a6884432e12\",\n                \"sha256:e27ad930a842b4c5eb8ac0016b0a54f5aebbe679340c26101df33424142c143c\",\n                \"sha256:e537484df0d8f426ce2afb2d0f8e1c3d0b114b83f8850e5f2fbea0e797bd82ae\",\n                \"sha256:eb00ed941194665c332bf8e078baf037d6c35d7c4f3102ea2d4f16ca94a26dc8\",\n                \"sha256:eb6904c354526e758fda7167b33005998fb68c46fbc10e013ca97f21ca5c8887\",\n                \"sha256:eb8821e09e916165e160797a6c17edda0679379a4be5c716c260e836e122f54b\",\n                \"sha256:efcb3f6676480691518c177e3b465bcddf57cea040302f9f4e6e191af91174d4\",\n                \"sha256:f27273b60488abe721a075bcca6d7f3964f9f6f067c8c4c605743023d7d3944f\",\n                \"sha256:f30c3cb33b24454a82faecaf01b19c18562b1e89558fb6c56de4d9118a032fd5\",\n                \"sha256:fb69256e180cb6c8a894fee62b3afebae785babc1ee98b81cdf68bbca1987f33\",\n                \"sha256:fd1abc0d89e30cc4e02e4064dc67fcc51bd941eb395c502aac3ec19fab46b519\",\n                \"sha256:ff8fa367d09b717b2a17a052544193ad76cd49979c805768879cb63d9ca50561\"\n            ],\n            \"markers\": \"python_full_version >= '3.7.0'\",\n            \"version\": \"==3.3.2\"\n        },\n        \"dill\": {\n            \"hashes\": [\n                \"sha256:3ebe3c479ad625c4553aca177444d89b486b1d84982eeacded644afc0cf797ca\",\n                \"sha256:c36ca9ffb54365bdd2f8eb3eff7d2a21237f8452b57ace88b1ac615b7e815bd7\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==0.3.8\"\n        },\n        \"docutils\": {\n            \"hashes\": [\n                \"sha256:3a6b18732edf182daa3cd12775bbb338cf5691468f91eeeb109deff6ebfa986f\",\n                \"sha256:dafca5b9e384f0e419294eb4d2ff9fa826435bf15f15b7bd45723e8ad76811b2\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==0.21.2\"\n        },\n        \"idna\": {\n            \"hashes\": [\n                \"sha256:028ff3aadf0609c1fd278d8ea3089299412a7a8b9bd005dd08b9f8285bcb5cfc\",\n                \"sha256:82fee1fc78add43492d3a1898bfa6d8a904cc97d8427f683ed8e798d07761aa0\"\n            ],\n            \"markers\": \"python_version >= '3.5'\",\n            \"version\": \"==3.7\"\n        },\n        \"imagesize\": {\n            \"hashes\": [\n                \"sha256:0d8d18d08f840c19d0ee7ca1fd82490fdc3729b7ac93f49870406ddde8ef8d8b\",\n                \"sha256:69150444affb9cb0d5cc5a92b3676f0b2fb7cd9ae39e947a5e11a36b4497cd4a\"\n            ],\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3'\",\n            \"version\": \"==1.4.1\"\n        },\n        \"isort\": {\n            \"hashes\": [\n                \"sha256:48fdfcb9face5d58a4f6dde2e72a1fb8dcaf8ab26f95ab49fab84c2ddefb0109\",\n                \"sha256:8ca5e72a8d85860d5a3fa69b8745237f2939afe12dbf656afbcb47fe72d947a6\"\n            ],\n            \"markers\": \"python_full_version >= '3.8.0'\",\n            \"version\": \"==5.13.2\"\n        },\n        \"jinja2\": {\n            \"hashes\": [\n                \"sha256:4a3aee7acbbe7303aede8e9648d13b8bf88a429282aa6122a993f0ac800cb369\",\n                \"sha256:bc5dd2abb727a5319567b7a813e6a2e7318c39f4f487cfe6c89c6f9c7d25197d\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==3.1.4\"\n        },\n        \"markupsafe\": {\n            \"hashes\": [\n                \"sha256:00e046b6dd71aa03a41079792f8473dc494d564611a8f89bbbd7cb93295ebdcf\",\n                \"sha256:075202fa5b72c86ad32dc7d0b56024ebdbcf2048c0ba09f1cde31bfdd57bcfff\",\n                \"sha256:0e397ac966fdf721b2c528cf028494e86172b4feba51d65f81ffd65c63798f3f\",\n                \"sha256:17b950fccb810b3293638215058e432159d2b71005c74371d784862b7e4683f3\",\n                \"sha256:1f3fbcb7ef1f16e48246f704ab79d79da8a46891e2da03f8783a5b6fa41a9532\",\n                \"sha256:2174c595a0d73a3080ca3257b40096db99799265e1c27cc5a610743acd86d62f\",\n                \"sha256:2b7c57a4dfc4f16f7142221afe5ba4e093e09e728ca65c51f5620c9aaeb9a617\",\n                \"sha256:2d2d793e36e230fd32babe143b04cec8a8b3eb8a3122d2aceb4a371e6b09b8df\",\n                \"sha256:30b600cf0a7ac9234b2638fbc0fb6158ba5bdcdf46aeb631ead21248b9affbc4\",\n                \"sha256:397081c1a0bfb5124355710fe79478cdbeb39626492b15d399526ae53422b906\",\n                \"sha256:3a57fdd7ce31c7ff06cdfbf31dafa96cc533c21e443d57f5b1ecc6cdc668ec7f\",\n                \"sha256:3c6b973f22eb18a789b1460b4b91bf04ae3f0c4234a0a6aa6b0a92f6f7b951d4\",\n                \"sha256:3e53af139f8579a6d5f7b76549125f0d94d7e630761a2111bc431fd820e163b8\",\n                \"sha256:4096e9de5c6fdf43fb4f04c26fb114f61ef0bf2e5604b6ee3019d51b69e8c371\",\n                \"sha256:4275d846e41ecefa46e2015117a9f491e57a71ddd59bbead77e904dc02b1bed2\",\n                \"sha256:4c31f53cdae6ecfa91a77820e8b151dba54ab528ba65dfd235c80b086d68a465\",\n                \"sha256:4f11aa001c540f62c6166c7726f71f7573b52c68c31f014c25cc7901deea0b52\",\n                \"sha256:5049256f536511ee3f7e1b3f87d1d1209d327e818e6ae1365e8653d7e3abb6a6\",\n                \"sha256:58c98fee265677f63a4385256a6d7683ab1832f3ddd1e66fe948d5880c21a169\",\n                \"sha256:598e3276b64aff0e7b3451b72e94fa3c238d452e7ddcd893c3ab324717456bad\",\n                \"sha256:5b7b716f97b52c5a14bffdf688f971b2d5ef4029127f1ad7a513973cfd818df2\",\n                \"sha256:5dedb4db619ba5a2787a94d877bc8ffc0566f92a01c0ef214865e54ecc9ee5e0\",\n                \"sha256:619bc166c4f2de5caa5a633b8b7326fbe98e0ccbfacabd87268a2b15ff73a029\",\n                \"sha256:629ddd2ca402ae6dbedfceeba9c46d5f7b2a61d9749597d4307f943ef198fc1f\",\n                \"sha256:656f7526c69fac7f600bd1f400991cc282b417d17539a1b228617081106feb4a\",\n                \"sha256:6ec585f69cec0aa07d945b20805be741395e28ac1627333b1c5b0105962ffced\",\n                \"sha256:72b6be590cc35924b02c78ef34b467da4ba07e4e0f0454a2c5907f473fc50ce5\",\n                \"sha256:7502934a33b54030eaf1194c21c692a534196063db72176b0c4028e140f8f32c\",\n                \"sha256:7a68b554d356a91cce1236aa7682dc01df0edba8d043fd1ce607c49dd3c1edcf\",\n                \"sha256:7b2e5a267c855eea6b4283940daa6e88a285f5f2a67f2220203786dfa59b37e9\",\n                \"sha256:823b65d8706e32ad2df51ed89496147a42a2a6e01c13cfb6ffb8b1e92bc910bb\",\n                \"sha256:8590b4ae07a35970728874632fed7bd57b26b0102df2d2b233b6d9d82f6c62ad\",\n                \"sha256:8dd717634f5a044f860435c1d8c16a270ddf0ef8588d4887037c5028b859b0c3\",\n                \"sha256:8dec4936e9c3100156f8a2dc89c4b88d5c435175ff03413b443469c7c8c5f4d1\",\n                \"sha256:97cafb1f3cbcd3fd2b6fbfb99ae11cdb14deea0736fc2b0952ee177f2b813a46\",\n                \"sha256:a17a92de5231666cfbe003f0e4b9b3a7ae3afb1ec2845aadc2bacc93ff85febc\",\n                \"sha256:a549b9c31bec33820e885335b451286e2969a2d9e24879f83fe904a5ce59d70a\",\n                \"sha256:ac07bad82163452a6884fe8fa0963fb98c2346ba78d779ec06bd7a6262132aee\",\n                \"sha256:ae2ad8ae6ebee9d2d94b17fb62763125f3f374c25618198f40cbb8b525411900\",\n                \"sha256:b91c037585eba9095565a3556f611e3cbfaa42ca1e865f7b8015fe5c7336d5a5\",\n                \"sha256:bc1667f8b83f48511b94671e0e441401371dfd0f0a795c7daa4a3cd1dde55bea\",\n                \"sha256:bec0a414d016ac1a18862a519e54b2fd0fc8bbfd6890376898a6c0891dd82e9f\",\n                \"sha256:bf50cd79a75d181c9181df03572cdce0fbb75cc353bc350712073108cba98de5\",\n                \"sha256:bff1b4290a66b490a2f4719358c0cdcd9bafb6b8f061e45c7a2460866bf50c2e\",\n                \"sha256:c061bb86a71b42465156a3ee7bd58c8c2ceacdbeb95d05a99893e08b8467359a\",\n                \"sha256:c8b29db45f8fe46ad280a7294f5c3ec36dbac9491f2d1c17345be8e69cc5928f\",\n                \"sha256:ce409136744f6521e39fd8e2a24c53fa18ad67aa5bc7c2cf83645cce5b5c4e50\",\n                \"sha256:d050b3361367a06d752db6ead6e7edeb0009be66bc3bae0ee9d97fb326badc2a\",\n                \"sha256:d283d37a890ba4c1ae73ffadf8046435c76e7bc2247bbb63c00bd1a709c6544b\",\n                \"sha256:d9fad5155d72433c921b782e58892377c44bd6252b5af2f67f16b194987338a4\",\n                \"sha256:daa4ee5a243f0f20d528d939d06670a298dd39b1ad5f8a72a4275124a7819eff\",\n                \"sha256:db0b55e0f3cc0be60c1f19efdde9a637c32740486004f20d1cff53c3c0ece4d2\",\n                \"sha256:e61659ba32cf2cf1481e575d0462554625196a1f2fc06a1c777d3f48e8865d46\",\n                \"sha256:ea3d8a3d18833cf4304cd2fc9cbb1efe188ca9b5efef2bdac7adc20594a0e46b\",\n                \"sha256:ec6a563cff360b50eed26f13adc43e61bc0c04d94b8be985e6fb24b81f6dcfdf\",\n                \"sha256:f5dfb42c4604dddc8e4305050aa6deb084540643ed5804d7455b5df8fe16f5e5\",\n                \"sha256:fa173ec60341d6bb97a89f5ea19c85c5643c1e7dedebc22f5181eb73573142c5\",\n                \"sha256:fa9db3f79de01457b03d4f01b34cf91bc0048eb2c3846ff26f66687c2f6d16ab\",\n                \"sha256:fce659a462a1be54d2ffcacea5e3ba2d74daa74f30f5f143fe0c58636e355fdd\",\n                \"sha256:ffee1f21e5ef0d712f9033568f8344d5da8cc2869dbd08d87c84656e6a2d2f68\"\n            ],\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==2.1.5\"\n        },\n        \"mccabe\": {\n            \"hashes\": [\n                \"sha256:348e0240c33b60bbdf4e523192ef919f28cb2c3d7d5c7794f74009290f236325\",\n                \"sha256:6c2d30ab6be0e4a46919781807b4f0d834ebdd6c6e3dca0bda5a15f863427b6e\"\n            ],\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==0.7.0\"\n        },\n        \"mypy\": {\n            \"hashes\": [\n                \"sha256:0624bdb940255d2dd24e829d99a13cfeb72e4e9031f9492148f410ed30bcab54\",\n                \"sha256:0bc71d1fb27a428139dd78621953effe0d208aed9857cb08d002280b0422003a\",\n                \"sha256:0bd53faf56de9643336aeea1c925012837432b5faf1701ccca7fde70166ccf72\",\n                \"sha256:11965c2f571ded6239977b14deebd3f4c3abd9a92398712d6da3a772974fad69\",\n                \"sha256:1a81cf05975fd61aec5ae16501a091cfb9f605dc3e3c878c0da32f250b74760b\",\n                \"sha256:2684d3f693073ab89d76da8e3921883019ea8a3ec20fa5d8ecca6a2db4c54bbe\",\n                \"sha256:2c63350af88f43a66d3dfeeeb8d77af34a4f07d760b9eb3a8697f0386c7590b4\",\n                \"sha256:45df906e8b6804ef4b666af29a87ad9f5921aad091c79cc38e12198e220beabd\",\n                \"sha256:4c956b49c5d865394d62941b109728c5c596a415e9c5b2be663dd26a1ff07bc0\",\n                \"sha256:64f4a90e3ea07f590c5bcf9029035cf0efeae5ba8be511a8caada1a4893f5525\",\n                \"sha256:749fd3213916f1751fff995fccf20c6195cae941dc968f3aaadf9bb4e430e5a2\",\n                \"sha256:79c07eb282cb457473add5052b63925e5cc97dfab9812ee65a7c7ab5e3cb551c\",\n                \"sha256:7b6343d338390bb946d449677726edf60102a1c96079b4f002dedff375953fc5\",\n                \"sha256:886c9dbecc87b9516eff294541bf7f3655722bf22bb898ee06985cd7269898de\",\n                \"sha256:a2b43895a0f8154df6519706d9bca8280cda52d3d9d1514b2d9c3e26792a0b74\",\n                \"sha256:a32fc80b63de4b5b3e65f4be82b4cfa362a46702672aa6a0f443b4689af7008c\",\n                \"sha256:a707ec1527ffcdd1c784d0924bf5cb15cd7f22683b919668a04d2b9c34549d2e\",\n                \"sha256:a831671bad47186603872a3abc19634f3011d7f83b083762c942442d51c58d58\",\n                \"sha256:b639dce63a0b19085213ec5fdd8cffd1d81988f47a2dec7100e93564f3e8fb3b\",\n                \"sha256:b868d3bcff720dd7217c383474008ddabaf048fad8d78ed948bb4b624870a417\",\n                \"sha256:c1952f5ea8a5a959b05ed5f16452fddadbaae48b5d39235ab4c3fc444d5fd411\",\n                \"sha256:d44be7551689d9d47b7abc27c71257adfdb53f03880841a5db15ddb22dc63edb\",\n                \"sha256:e1e30dc3bfa4e157e53c1d17a0dad20f89dc433393e7702b813c10e200843b03\",\n                \"sha256:e4fe9f4e5e521b458d8feb52547f4bade7ef8c93238dfb5bbc790d9ff2d770ca\",\n                \"sha256:f39918a50f74dc5969807dcfaecafa804fa7f90c9d60506835036cc1bc891dc8\",\n                \"sha256:f404a0b069709f18bbdb702eb3dcfe51910602995de00bd39cea3050b5772d08\",\n                \"sha256:fca4a60e1dd9fd0193ae0067eaeeb962f2d79e0d9f0f66223a0682f26ffcc809\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==1.11.1\"\n        },\n        \"mypy-extensions\": {\n            \"hashes\": [\n                \"sha256:4392f6c0eb8a5668a69e23d168ffa70f0be9ccfd32b5cc2d26a34ae5b844552d\",\n                \"sha256:75dbf8955dc00442a438fc4d0666508a9a97b6bd41aa2f0ffe9d2f2725af0782\"\n            ],\n            \"markers\": \"python_version >= '3.5'\",\n            \"version\": \"==1.0.0\"\n        },\n        \"packaging\": {\n            \"hashes\": [\n                \"sha256:026ed72c8ed3fcce5bf8950572258698927fd1dbda10a5e981cdf0ac37f4f002\",\n                \"sha256:5b8f2217dbdbd2f7f384c41c628544e6d52f2d0f53c6d0c3ea61aa5d1d7ff124\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==24.1\"\n        },\n        \"pefile\": {\n            \"hashes\": [\n                \"sha256:82e6114004b3d6911c77c3953e3838654b04511b8b66e8583db70c65998017dc\",\n                \"sha256:da185cd2af68c08a6cd4481f7325ed600a88f6a813bad9dea07ab3ef73d8d8d6\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_full_version >= '3.6.0'\",\n            \"version\": \"==2023.2.7\"\n        },\n        \"platformdirs\": {\n            \"hashes\": [\n                \"sha256:2d7a1657e36a80ea911db832a8a6ece5ee53d8de21edd5cc5879af6530b1bfee\",\n                \"sha256:38b7b51f512eed9e84a22788b4bce1de17c0adb134d6becb09836e37d8654cd3\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==4.2.2\"\n        },\n        \"psutil\": {\n            \"hashes\": [\n                \"sha256:02b69001f44cc73c1c5279d02b30a817e339ceb258ad75997325e0e6169d8b35\",\n                \"sha256:1287c2b95f1c0a364d23bc6f2ea2365a8d4d9b726a3be7294296ff7ba97c17f0\",\n                \"sha256:1e7c870afcb7d91fdea2b37c24aeb08f98b6d67257a5cb0a8bc3ac68d0f1a68c\",\n                \"sha256:21f1fb635deccd510f69f485b87433460a603919b45e2a324ad65b0cc74f8fb1\",\n                \"sha256:33ea5e1c975250a720b3a6609c490db40dae5d83a4eb315170c4fe0d8b1f34b3\",\n                \"sha256:34859b8d8f423b86e4385ff3665d3f4d94be3cdf48221fbe476e883514fdb71c\",\n                \"sha256:5fd9a97c8e94059b0ef54a7d4baf13b405011176c3b6ff257c247cae0d560ecd\",\n                \"sha256:6ec7588fb3ddaec7344a825afe298db83fe01bfaaab39155fa84cf1c0d6b13c3\",\n                \"sha256:6ed2440ada7ef7d0d608f20ad89a04ec47d2d3ab7190896cd62ca5fc4fe08bf0\",\n                \"sha256:8faae4f310b6d969fa26ca0545338b21f73c6b15db7c4a8d934a5482faa818f2\",\n                \"sha256:a021da3e881cd935e64a3d0a20983bda0bb4cf80e4f74fa9bfcb1bc5785360c6\",\n                \"sha256:a495580d6bae27291324fe60cea0b5a7c23fa36a7cd35035a16d93bdcf076b9d\",\n                \"sha256:a9a3dbfb4de4f18174528d87cc352d1f788b7496991cca33c6996f40c9e3c92c\",\n                \"sha256:c588a7e9b1173b6e866756dde596fd4cad94f9399daf99ad8c3258b3cb2b47a0\",\n                \"sha256:e2e8d0054fc88153ca0544f5c4d554d42e33df2e009c4ff42284ac9ebdef4132\",\n                \"sha256:fc8c9510cde0146432bbdb433322861ee8c3efbf8589865c8bf8d21cb30c4d14\",\n                \"sha256:ffe7fc9b6b36beadc8c322f84e1caff51e8703b88eee1da46d1e3a6ae11b4fd0\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '2.7' and python_version not in '3.0, 3.1, 3.2, 3.3, 3.4, 3.5'\",\n            \"version\": \"==6.0.0\"\n        },\n        \"pygments\": {\n            \"hashes\": [\n                \"sha256:786ff802f32e91311bff3889f6e9a86e81505fe99f2735bb6d60ae0c5004f199\",\n                \"sha256:b8e6aca0523f3ab76fee51799c488e38782ac06eafcf95e7ba832985c8e7b13a\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.18.0\"\n        },\n        \"pyinstaller\": {\n            \"hashes\": [\n                \"sha256:2bf4de17a1c63c0b797b38e13bfb4d03b5ee7c0a68e28b915a7eaacf6b76087f\",\n                \"sha256:43709c70b1da8441a730327a8ed362bfcfdc3d42c1bf89f3e2b0a163cc4e7d33\",\n                \"sha256:4e3e50743c091a06e6d01c59bdd6d03967b453ee5384a9e790759be4129db4a4\",\n                \"sha256:5ced2e83acf222b936ea94abc5a5cc96588705654b39138af8fb321d9cf2b954\",\n                \"sha256:7bf0c13c5a8560c89540746ae742f4f4b82290e95a6b478374d9f34959fe25d6\",\n                \"sha256:a0f378f64ad0655d11ade9fde7877e7573fd3d5066231608ce7dfa9040faecdd\",\n                \"sha256:b041be2fe78da47a269604d62c940d68c62f9a3913bdf64af4123f7689d47099\",\n                \"sha256:da994aba14c5686db88796684de265a8665733b4df09b939f7ebdf097d18df72\",\n                \"sha256:f15c1ef11ed5ceb32447dfbdab687017d6adbef7fc32aa359d584369bfe56eda\",\n                \"sha256:f18a3d551834ef8fb7830d48d4cc1527004d0e6b51ded7181e78374ad6111846\",\n                \"sha256:f2fc568de3d6d2a176716a3fc9f20da06d351e8bea5ddd10ecb5659fce3a05b0\",\n                \"sha256:f4a75c552facc2e2a370f1e422b971b5e5cdb4058ff38cea0235aa21fc0b378f\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version < '3.13' and python_version >= '3.8'\",\n            \"version\": \"==6.9.0\"\n        },\n        \"pyinstaller-hooks-contrib\": {\n            \"hashes\": [\n                \"sha256:0057fe9a5c398d3f580e73e58793a1d4a8315ca91c3df01efea1c14ed557825a\",\n                \"sha256:29b68d878ab739e967055b56a93eb9b58e529d5b054fbab7a2f2bacf80cef3e2\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2024.8\"\n        },\n        \"pylint\": {\n            \"hashes\": [\n                \"sha256:03c8e3baa1d9fb995b12c1dbe00aa6c4bcef210c2a2634374aedeb22fb4a8f8f\",\n                \"sha256:a5d01678349454806cff6d886fb072294f56a58c4761278c97fb557d708e1eb3\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_full_version >= '3.8.0'\",\n            \"version\": \"==3.2.6\"\n        },\n        \"pywin32-ctypes\": {\n            \"hashes\": [\n                \"sha256:3426e063bdd5fd4df74a14fa3cf80a0b42845a87e1d1e81f6549f9daec593a60\",\n                \"sha256:bf490a1a709baf35d688fe0ecf980ed4de11d2b3e37b51e5442587a75d9957e7\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.6'\",\n            \"version\": \"==0.2.2\"\n        },\n        \"requests\": {\n            \"hashes\": [\n                \"sha256:55365417734eb18255590a9ff9eb97e9e1da868d4ccd6402399eaf68af20a760\",\n                \"sha256:70761cfe03c773ceb22aa2f671b4757976145175cdfca038c02654d061d6dcc6\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.32.3\"\n        },\n        \"setuptools\": {\n            \"hashes\": [\n                \"sha256:5a03e1860cf56bb6ef48ce186b0e557fdba433237481a9a625176c2831be15d1\",\n                \"sha256:8d243eff56d095e5817f796ede6ae32941278f542e0f941867cc05ae52b162ec\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==72.1.0\"\n        },\n        \"snowballstemmer\": {\n            \"hashes\": [\n                \"sha256:09b16deb8547d3412ad7b590689584cd0fe25ec8db3be37788be3810cbf19cb1\",\n                \"sha256:c8e1716e83cc398ae16824e5572ae04e0d9fc2c6b985fb0f900f5f0c96ecba1a\"\n            ],\n            \"version\": \"==2.2.0\"\n        },\n        \"sphinx\": {\n            \"hashes\": [\n                \"sha256:0cce1ddcc4fd3532cf1dd283bc7d886758362c5c1de6598696579ce96d8ffa5b\",\n                \"sha256:56173572ae6c1b9a38911786e206a110c9749116745873feae4f9ce88e59391d\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.10'\",\n            \"version\": \"==8.0.2\"\n        },\n        \"sphinx-autodoc-typehints\": {\n            \"hashes\": [\n                \"sha256:b7058e8c5831e5598afca1a78fda0695d3291388d954464a6e480c36198680c0\",\n                \"sha256:fde3d888949bd0a91207cf1e54afda58121dbb4bf1f183d0cc78a0826654c974\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.2.3\"\n        },\n        \"sphinxcontrib-applehelp\": {\n            \"hashes\": [\n                \"sha256:2f29ef331735ce958efa4734873f084941970894c6090408b079c61b2e1c06d1\",\n                \"sha256:4cd3f0ec4ac5dd9c17ec65e9ab272c9b867ea77425228e68ecf08d6b28ddbdb5\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"sphinxcontrib-devhelp\": {\n            \"hashes\": [\n                \"sha256:411f5d96d445d1d73bb5d52133377b4248ec79db5c793ce7dbe59e074b4dd1ad\",\n                \"sha256:aefb8b83854e4b0998877524d1029fd3e6879210422ee3780459e28a1f03a8a2\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"sphinxcontrib-htmlhelp\": {\n            \"hashes\": [\n                \"sha256:166759820b47002d22914d64a075ce08f4c46818e17cfc9470a9786b759b19f8\",\n                \"sha256:c9e2916ace8aad64cc13a0d233ee22317f2b9025b9cf3295249fa985cc7082e9\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.1.0\"\n        },\n        \"sphinxcontrib-jquery\": {\n            \"hashes\": [\n                \"sha256:1620739f04e36a2c779f1a131a2dfd49b2fd07351bf1968ced074365933abc7a\",\n                \"sha256:f936030d7d0147dd026a4f2b5a57343d233f1fc7b363f68b3d4f1cb0993878ae\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '2.7'\",\n            \"version\": \"==4.1\"\n        },\n        \"sphinxcontrib-jsmath\": {\n            \"hashes\": [\n                \"sha256:2ec2eaebfb78f3f2078e73666b1415417a116cc848b72e5172e596c871103178\",\n                \"sha256:a9925e4a4587247ed2191a22df5f6970656cb8ca2bd6284309578f2153e0c4b8\"\n            ],\n            \"markers\": \"python_version >= '3.5'\",\n            \"version\": \"==1.0.1\"\n        },\n        \"sphinxcontrib-qthelp\": {\n            \"hashes\": [\n                \"sha256:4fe7d0ac8fc171045be623aba3e2a8f613f8682731f9153bb2e40ece16b9bbab\",\n                \"sha256:b18a828cdba941ccd6ee8445dbe72ffa3ef8cbe7505d8cd1fa0d42d3f2d5f3eb\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"sphinxcontrib-serializinghtml\": {\n            \"hashes\": [\n                \"sha256:6e2cb0eef194e10c27ec0023bfeb25badbbb5868244cf5bc5bdc04e4464bf331\",\n                \"sha256:e9d912827f872c029017a53f0ef2180b327c3f7fd23c87229f7a8e8b70031d4d\"\n            ],\n            \"markers\": \"python_version >= '3.9'\",\n            \"version\": \"==2.0.0\"\n        },\n        \"tomli\": {\n            \"hashes\": [\n                \"sha256:939de3e7a6161af0c887ef91b7d41a53e7c5a1ca976325f429cb46ea9bc30ecc\",\n                \"sha256:de526c12914f0c550d15924c62d72abc48d6fe7364aa87328337a31007fe8a4f\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.7'\",\n            \"version\": \"==2.0.1\"\n        },\n        \"tomlkit\": {\n            \"hashes\": [\n                \"sha256:08ad192699734149f5b97b45f1f18dad7eb1b6d16bc72ad0c2335772650d7b72\",\n                \"sha256:7075d3042d03b80f603482d69bf0c8f345c2b30e41699fd8883227f89972b264\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==0.13.0\"\n        },\n        \"types-requests\": {\n            \"hashes\": [\n                \"sha256:90c079ff05e549f6bf50e02e910210b98b8ff1ebdd18e19c873cd237737c1358\",\n                \"sha256:f754283e152c752e46e70942fa2a146b5bc70393522257bb85bd1ef7e019dcc3\"\n            ],\n            \"index\": \"pypi\",\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.32.0.20240712\"\n        },\n        \"typing-extensions\": {\n            \"hashes\": [\n                \"sha256:04e5ca0351e0f3f85c6853954072df659d0d13fac324d0072316b67d7794700d\",\n                \"sha256:1a7ead55c7e559dd4dee8856e3a88b41225abfe1ce8df57b7c13915fe121ffb8\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==4.12.2\"\n        },\n        \"urllib3\": {\n            \"hashes\": [\n                \"sha256:a448b2f64d686155468037e1ace9f2d2199776e17f0a46610480d311f73e3472\",\n                \"sha256:dd505485549a7a552833da5e6063639d0d177c04f23bc3864e41e5dc5f612168\"\n            ],\n            \"markers\": \"python_version >= '3.8'\",\n            \"version\": \"==2.2.2\"\n        }\n    }\n}\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 4.9853515625,
          "content": ".. image:: https://raw.githubusercontent.com/instaloader/instaloader/master/docs/logo_heading.png\n\n.. badges-start\n\n|pypi| |pyversion| |license| |aur| |contributors| |downloads|\n\n.. |pypi| image:: https://img.shields.io/pypi/v/instaloader.svg\n   :alt: Instaloader PyPI Project Page\n   :target: https://pypi.org/project/instaloader/\n\n.. |license| image:: https://img.shields.io/github/license/instaloader/instaloader.svg\n   :alt: MIT License\n   :target: https://github.com/instaloader/instaloader/blob/master/LICENSE\n\n.. |pyversion| image:: https://img.shields.io/pypi/pyversions/instaloader.svg\n   :alt: Supported Python Versions\n\n.. |contributors| image:: https://img.shields.io/github/contributors/instaloader/instaloader.svg\n   :alt: Contributor Count\n   :target: https://github.com/instaloader/instaloader/graphs/contributors\n\n.. |aur| image:: https://img.shields.io/aur/version/instaloader.svg\n   :alt: Arch User Repository Package\n   :target: https://aur.archlinux.org/packages/instaloader/\n\n.. |downloads| image:: https://pepy.tech/badge/instaloader/month\n   :alt: PyPI Download Count\n   :target: https://pepy.tech/project/instaloader\n\n.. badges-end\n\n::\n\n    $ pip3 install instaloader\n\n    $ instaloader profile [profile ...]\n\n**Instaloader**\n\n- downloads **public and private profiles, hashtags, user stories,\n  feeds and saved media**,\n\n- downloads **comments, geotags and captions** of each post,\n\n- automatically **detects profile name changes** and renames the target\n  directory accordingly,\n\n- allows **fine-grained customization** of filters and where to store\n  downloaded media,\n\n- automatically **resumes previously-interrupted** download iterations.\n\n::\n\n    instaloader [--comments] [--geotags]\n                [--stories] [--highlights] [--tagged] [--reels] [--igtv]\n                [--login YOUR-USERNAME] [--fast-update]\n                profile | \"#hashtag\" | :stories | :feed | :saved\n\n`Instaloader Documentation <https://instaloader.github.io/>`__\n\n\nHow to Automatically Download Pictures from Instagram\n-----------------------------------------------------\n\nTo **download all pictures and videos of a profile**, as well as the\n**profile picture**, do\n\n::\n\n    instaloader profile [profile ...]\n\nwhere ``profile`` is the name of a profile you want to download. Instead\nof only one profile, you may also specify a list of profiles.\n\nTo later **update your local copy** of that profiles, you may run\n\n::\n\n    instaloader --fast-update profile [profile ...]\n\nIf ``--fast-update`` is given, Instaloader stops when arriving at the\nfirst already-downloaded picture.\n\nAlternatively, you can use ``--latest-stamps`` to have Instaloader store\nthe time each profile was last downloaded and only download newer media:\n\n::\n\n    instaloader --latest-stamps -- profile [profile ...]\n\nWith this option it's possible to move or delete downloaded media and still keep\nthe archive updated.\n\nWhen updating profiles, Instaloader\nautomatically **detects profile name changes** and renames the target directory\naccordingly.\n\nInstaloader can also be used to **download private profiles**. To do so,\ninvoke it with\n\n::\n\n    instaloader --login=your_username profile [profile ...]\n\nWhen logging in, Instaloader **stores the session cookies** in a file in your\ntemporary directory, which will be reused later the next time ``--login``\nis given.  So you can download private profiles **non-interactively** when you\nalready have a valid session cookie file.\n\n`Instaloader Documentation <https://instaloader.github.io/basic-usage.html>`__\n\nContributing\n------------\n\nAs an open source project, Instaloader heavily depends on the contributions from\nits community. See\n`contributing <https://instaloader.github.io/contributing.html>`__\nfor how you may help Instaloader to become an even greater tool.\n\nSupporters\n----------\n\n.. current-sponsors-start\n\n| Instaloader is proudly sponsored by\n|  `@rocketapi-io <https://github.com/rocketapi-io>`__\n\nSee `Alex' GitHub Sponsors <https://github.com/sponsors/aandergr>`__ page for\nhow you can sponsor the development of Instaloader!\n\n.. current-sponsors-end\n\nIt is a pleasure for us to share our Instaloader to the world, and we are proud\nto have attracted such an active and motivating community, with so many users\nwho share their suggestions and ideas with us. Buying a community-sponsored beer\nor coffee from time to time is very likely to further raise our passion for the\ndevelopment of Instaloader.\n\n| For Donations, we provide GitHub Sponsors page, a PayPal.Me link and a Bitcoin address.\n|  GitHub Sponsors: `Sponsor @aandergr on GitHub Sponsors <https://github.com/sponsors/aandergr>`__\n|  PayPal: `PayPal.me/aandergr <https://www.paypal.me/aandergr>`__\n|  BTC: 1Nst4LoadeYzrKjJ1DX9CpbLXBYE9RKLwY\n\nDisclaimer\n----------\n\n.. disclaimer-start\n\nInstaloader is in no way affiliated with, authorized, maintained or endorsed by Instagram or any of its affiliates or\nsubsidiaries. This is an independent and unofficial project. Use at your own risk.\n\nInstaloader is licensed under an MIT license. Refer to ``LICENSE`` file for more information.\n\n.. disclaimer-end\n"
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "instaloader.py",
          "type": "blob",
          "size": 0.0986328125,
          "content": "#!/usr/bin/env python3\n\nfrom instaloader.__main__ import main\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "instaloader",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.3408203125,
          "content": "#!/usr/bin/env python3\n\nimport re\nimport sys\nimport os\nfrom setuptools import setup\n\n\nSRC = os.path.abspath(os.path.dirname(__file__))\n\n\ndef get_version():\n    with open(os.path.join(SRC, 'instaloader/__init__.py')) as f:\n        for line in f:\n            m = re.match(\"__version__ = '(.*)'\", line)\n            if m:\n                return m.group(1)\n    raise SystemExit(\"Could not find version string.\")\n\n\nif sys.version_info < (3, 9):\n    sys.exit('Instaloader requires Python >= 3.9.')\n\nrequirements = ['requests>=2.25']\noptional_requirements = {\n    'browser_cookie3': ['browser_cookie3>=0.19.1'],\n}\n\nkeywords = (['instagram', 'instagram-scraper', 'instagram-client', 'instagram-feed', 'downloader', 'videos', 'photos',\n             'pictures', 'instagram-user-photos', 'instagram-photos', 'instagram-metadata', 'instagram-downloader',\n             'instagram-stories'])\n\n# NOTE that many of the values defined in this file are duplicated on other places, such as the\n# documentation.\n\nsetup(\n    name='instaloader',\n    version=get_version(),\n    packages=['instaloader'],\n    package_data={'instaloader': ['py.typed']},\n    url='https://instaloader.github.io/',\n    license='MIT',\n    author='Alexander Graf, André Koch-Kramer',\n    author_email='mail@agraf.me, koch-kramer@web.de',\n    description='Download pictures (or videos) along with their captions and other metadata '\n                'from Instagram.',\n    long_description=open(os.path.join(SRC, 'README.rst')).read(),\n    install_requires=requirements,\n    python_requires='>=3.9',\n    extras_require=optional_requirements,\n    entry_points={'console_scripts': ['instaloader=instaloader.__main__:main']},\n    zip_safe=False,\n    keywords=keywords,\n    classifiers=[\n        'Development Status :: 5 - Production/Stable',\n        'Environment :: Console',\n        'Intended Audience :: End Users/Desktop',\n        'Intended Audience :: Developers',\n        'License :: OSI Approved :: MIT License',\n        'Operating System :: OS Independent',\n        'Programming Language :: Python :: 3.9',\n        'Programming Language :: Python :: 3.10',\n        'Programming Language :: Python :: 3.11',\n        'Programming Language :: Python :: 3.12',\n        'Programming Language :: Python :: 3.13',\n        'Programming Language :: Python :: 3 :: Only',\n        'Topic :: Internet',\n        'Topic :: Multimedia :: Graphics'\n    ]\n)\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}