{
  "metadata": {
    "timestamp": 1736560794556,
    "page": 488,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "boto/boto",
      "stars": 6468,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1298828125,
          "content": "*.pyc\n.*.swp\n*.log\n*~\nboto.egg-info\nbuild/\ndist/\nMANIFEST\n.DS_Store\n.idea\n.tox\n.coverage\n*flymake.py\n.vscode/\nvenv*\nvenv-2.5\nenv-2.5\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 3.1572265625,
          "content": "============\nContributing\n============\n\nFor more information, please see the official contribution docs at\nhttp://docs.pythonboto.org/en/latest/contributing.html.\n\n\nContributing Code\n=================\n\n* A good patch:\n\n  * is clear.\n  * works across all supported versions of Python.\n  * follows the existing style of the code base (PEP-8).\n  * has comments included as needed.\n\n* A test case that demonstrates the previous flaw that now passes\n  with the included patch.\n* If it adds/changes a public API, it must also include documentation\n  for those changes.\n* Must be appropriately licensed (New BSD).\n\n\nReporting An Issue/Feature\n==========================\n\n* Check to see if there's an existing issue/pull request for the\n  bug/feature. All issues are at https://github.com/boto/boto/issues\n  and pull reqs are at https://github.com/boto/boto/pulls.\n* If there isn't an existing issue there, please file an issue. The ideal\n  report includes:\n\n  * A description of the problem/suggestion.\n  * How to recreate the bug.\n  * If relevant, including the versions of your:\n\n    * Python interpreter\n    * boto\n    * Optionally of the other dependencies involved\n\n  * If possible, create a pull request with a (failing) test case demonstrating\n    what's wrong. This makes the process for fixing bugs quicker & gets issues\n    resolved sooner.\n\n\nMaintenance\n===========\n\nYou do not have to be labeled as a\n\"maintainer\" to be able to help with the triaging, resolving, and\nreviewing of boto issues and pull requests.\n\nThese are the processes that the maintainers follow, that you can also\nfollow to help speed up the resolution of an issue or pull request:\n\nPull Requests\n-------------\nThere are some key points that are needed to be met before a pull request\ncan be merged:\n\n* All tests must pass for all python versions.\n* All pull requests require tests that either test the new feature or test\n  that the specific bug is fixed. Pull requests for minor things like\n  adding a new region or fixing a typo do not need tests.\n* Must follow PEP8 conventions.\n* All changes must be backwards compatible.\n* If the pull request is for a feature, make sure a link to the corresponding\n  API is provided in order to easily check that the feature matches up\n  with the service's API.\n\nThe best way to help with pull requests is to comment on pull requests by\nnoting if any of these key points are missing, it will both help get feedback\nsooner to the issuer of the pull request and make it easier to determine for\nan individual with write permissions to the repository if a pull request\nis ready to be merged.\n\nIssues\n------\nHere are the best ways to help with open issues:\n\n* If there is an issue without a set of instructions on how to reproduce the\n  bug, feel free to try to reproduce the issue, comment with the minimal\n  amount of steps to reproduce the bug (a code snippet would be ideal). If\n  there is not a set of steps that can be made to reproduce the issue, at\n  least make sure there are debug logs that capture the unexpected behavior.\n\n* Consolidate all related issue to one issues by closing out related issues\n  and linking them to the single issue that outlines the general issue.\n\n* Submit pull requests for open issues.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.9833984375,
          "content": "Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish, dis-\ntribute, sublicense, and/or sell copies of the Software, and to permit\npersons to whom the Software is furnished to do so, subject to the fol-\nlowing conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-\nITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\nSHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\nIN THE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.3349609375,
          "content": "include boto/cacerts/cacerts.txt\ninclude README.rst\ninclude boto/file/README\ninclude .gitignore\ninclude pylintrc\ninclude boto/endpoints.json\ninclude boto/pyami/copybot.cfg\ninclude boto/services/sonofmmm.cfg\ninclude boto/mturk/test/*.doctest\ninclude boto/mturk/test/.gitignore\nrecursive-include tests *.json *.py *.txt\nrecursive-include docs *\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 5.83984375,
          "content": "####\nDeprecation notice\n####\n\n**This package is no longer maintained and has been replaced by** `Boto3 <https://github.com/boto/boto3>`__.\n**Issues and pull requests are not reviewed. If you are having an issue with the** `Boto3 <https://github.com/boto/boto3>`__ **package or the** `AWS CLI <https://github.com/aws/aws-cli>`__, **please open an issue on their respective repositories.**\n\n####\nboto\n####\nboto 2.49.0\n\nReleased: 11-July-2018\n\n.. image:: https://pypip.in/d/boto/badge.svg\n        :target: https://pypi.python.org/pypi/boto/\n\n\n************\nIntroduction\n************\n\nBoto is a Python package that provides interfaces to Amazon Web Services.\nCurrently, all features work with Python 2.6 and 2.7. Work is under way to\nsupport Python 3.3+ in the same codebase. Modules are being ported one at\na time with the help of the open source community, so please check below\nfor compatibility with Python 3.3+.\n\nTo port a module to Python 3.3+, please view our `Contributing Guidelines`_\nand the `Porting Guide`_. If you would like, you can open an issue to let\nothers know about your work in progress. Tests **must** pass on Python\n2.6, 2.7, 3.3, and 3.4 for pull requests to be accepted.\n\n\n********\nServices\n********\n\nAt the moment, boto supports:\n\n* Compute\n\n  * Amazon Elastic Compute Cloud (EC2) (Python 3)\n  * Amazon Elastic Map Reduce (EMR) (Python 3)\n  * AutoScaling (Python 3)\n  * Amazon Kinesis (Python 3)\n  * AWS Lambda (Python 3)\n  * Amazon EC2 Container Service (Python 3)\n\n* Content Delivery\n\n  * Amazon CloudFront (Python 3)\n\n* Database\n\n  * Amazon Relational Data Service (RDS)\n  * Amazon DynamoDB (Python 3)\n  * Amazon SimpleDB (Python 3)\n  * Amazon ElastiCache (Python 3)\n  * Amazon Redshift (Python 3)\n\n* Deployment and Management\n\n  * AWS Elastic Beanstalk (Python 3)\n  * AWS CloudFormation (Python 3)\n  * AWS Data Pipeline (Python 3)\n  * AWS Opsworks (Python 3)\n  * AWS CloudTrail (Python 3)\n  * AWS CodeDeploy (Python 3)\n\n* Administration & Security\n\n  * AWS Identity and Access Management (IAM) (Python 3)\n  * AWS Key Management Service (KMS) (Python 3)\n  * AWS Config (Python 3)\n  * AWS CloudHSM (Python 3)\n\n* Application Services\n\n  * Amazon CloudSearch (Python 3)\n  * Amazon CloudSearch Domain (Python 3)\n  * Amazon Elastic Transcoder (Python 3)\n  * Amazon Simple Workflow Service (SWF) (Python 3)\n  * Amazon Simple Queue Service (SQS) (Python 3)\n  * Amazon Simple Notification Server (SNS) (Python 3)\n  * Amazon Simple Email Service (SES) (Python 3)\n  * Amazon Cognito Identity (Python 3)\n  * Amazon Cognito Sync (Python 3)\n  * Amazon Machine Learning (Python 3)\n\n* Monitoring\n\n  * Amazon CloudWatch (EC2 Only) (Python 3)\n  * Amazon CloudWatch Logs (Python 3)\n\n* Networking\n\n  * Amazon Route53 (Python 3)\n  * Amazon Route 53 Domains (Python 3)\n  * Amazon Virtual Private Cloud (VPC) (Python 3)\n  * Elastic Load Balancing (ELB) (Python 3)\n  * AWS Direct Connect (Python 3)\n\n* Payments and Billing\n\n  * Amazon Flexible Payment Service (FPS)\n\n* Storage\n\n  * Amazon Simple Storage Service (S3) (Python 3)\n  * Amazon Glacier (Python 3)\n  * Amazon Elastic Block Store (EBS)\n  * Google Cloud Storage\n\n* Workforce\n\n  * Amazon Mechanical Turk\n\n* Other\n\n  * Marketplace Web Services (Python 3)\n  * AWS Support (Python 3)\n\nThe goal of boto is to support the full breadth and depth of Amazon\nWeb Services.  In addition, boto provides support for other public\nservices such as Google Storage in addition to private cloud systems\nlike Eucalyptus, OpenStack and Open Nebula.\n\nBoto is developed mainly using Python 2.6.6 and Python 2.7.3 on Mac OSX\nand Ubuntu Maverick.  It is known to work on other Linux distributions\nand on Windows.  Most of Boto requires no additional libraries or packages\nother than those that are distributed with Python.  Efforts are made\nto keep boto compatible with Python 2.5.x but no guarantees are made.\n\n************\nInstallation\n************\n\nInstall via `pip`_:\n\n::\n\n    $ pip install boto\n\nInstall from source:\n\n::\n\n    $ git clone git://github.com/boto/boto.git\n    $ cd boto\n    $ python setup.py install\n\n**********\nChangeLogs\n**********\n\nTo see what has changed over time in boto, you can check out the\nrelease notes at `http://docs.pythonboto.org/en/latest/#release-notes`\n\n***************************\nFinding Out More About Boto\n***************************\n\nThe main source code repository for boto can be found on `github.com`_.\nThe boto project uses the `gitflow`_ model for branching.\n\n`Online documentation`_ is also available. The online documentation includes\nfull API documentation as well as Getting Started Guides for many of the boto\nmodules.\n\nBoto releases can be found on the `Python Cheese Shop`_.\n\nJoin our IRC channel `#boto` on FreeNode.\nWebchat IRC channel: http://webchat.freenode.net/?channels=boto\n\nJoin the `boto-users Google Group`_.\n\n*************************\nGetting Started with Boto\n*************************\n\nYour credentials can be passed into the methods that create\nconnections.  Alternatively, boto will check for the existence of the\nfollowing environment variables to ascertain your credentials:\n\n**AWS_ACCESS_KEY_ID** - Your AWS Access Key ID\n\n**AWS_SECRET_ACCESS_KEY** - Your AWS Secret Access Key\n\nCredentials and other boto-related settings can also be stored in a\nboto config file.  See `this`_ for details.\n\n.. _Contributing Guidelines: https://github.com/boto/boto/blob/develop/CONTRIBUTING\n.. _Porting Guide: http://boto.readthedocs.org/en/latest/porting_guide.html\n.. _pip: http://www.pip-installer.org/\n.. _release notes: https://github.com/boto/boto/wiki\n.. _github.com: http://github.com/boto/boto\n.. _Online documentation: http://docs.pythonboto.org\n.. _Python Cheese Shop: http://pypi.python.org/pypi/boto\n.. _this: http://docs.pythonboto.org/en/latest/boto_config_tut.html\n.. _gitflow: http://nvie.com/posts/a-successful-git-branching-model/\n.. _neo: https://github.com/boto/boto/tree/neo\n.. _boto-users Google Group: https://groups.google.com/forum/?fromgroups#!forum/boto-users\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "boto",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pylintrc",
          "type": "blob",
          "size": 8.6572265625,
          "content": "# lint Python modules using external checkers.\n# \n# This is the main checker controlling the other ones and the reports\n# generation. It is itself both a raw checker and an astng checker in order\n# to:\n# * handle message activation / deactivation at the module level\n# * handle some basic but necessary stats'data (number of classes, methods...)\n# \n[MASTER]\n\n\n# Specify a configuration file.\n#rcfile=\n\n# Profiled execution.\nprofile=no\n\n# Add <file or directory> to the black list. It should be a base name, not a\n# path. You may set this option multiple times.\nignore=.svn\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Set the cache size for astng objects.\ncache-size=500\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n\n[MESSAGES CONTROL]\n\n# Enable only checker(s) with the given id(s). This option conflict with the\n# disable-checker option\n#enable-checker=\n\n# Enable all checker(s) except those with the given id(s). This option conflict\n# with the disable-checker option\n#disable-checker=\n\n# Enable all messages in the listed categories.\n#enable-msg-cat=\n\n# Disable all messages in the listed categories.\n#disable-msg-cat=\n\n# Enable the message(s) with the given id(s).\n#enable-msg=\n\n# Disable the message(s) with the given id(s).\n# disable-msg=C0323,W0142,C0301,C0103,C0111,E0213,C0302,C0203,W0703,R0201\ndisable-msg=C0301,C0111,C0103,R0201,W0702,C0324\n\n[REPORTS]\n\n# set the output format. Available formats are text, parseable, colorized and\n# html\noutput-format=colorized\n\n# Include message's id in output\ninclude-ids=yes\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\".\nfiles-output=no\n\n# Tells wether to display a full report or only the messages\nreports=yes\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note).You have access to the variables errors warning, statement which\n# respectivly contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (R0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Add a comment according to your evaluation note. This is used by the global\n# evaluation report (R0004).\ncomment=no\n\n# Enable the report(s) with the given id(s).\n#enable-report=\n\n# Disable the report(s) with the given id(s).\n#disable-report=\n\n# checks for\n# * unused variables / imports\n# * undefined variables\n# * redefinition of variable from builtins or from an outer scope\n# * use of variable before assigment\n# \n[VARIABLES]\n\n# Tells wether we should check for unused import in __init__ files.\ninit-import=yes\n\n# A regular expression matching names used for dummy variables (i.e. not used).\ndummy-variables-rgx=_|dummy\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n\n# try to find bugs in the code using type inference\n# \n[TYPECHECK]\n\n# Tells wether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# When zope mode is activated, consider the acquired-members option to ignore\n# access to some undefined attributes.\nzope=no\n\n# List of members which are usually get through zope's acquisition mecanism and\n# so shouldn't trigger E0201 when accessed (need zope=yes to be considered).\nacquired-members=REQUEST,acl_users,aq_parent\n\n\n# checks for :\n# * doc strings\n# * modules / classes / functions / methods / arguments / variables name\n# * number of arguments, local variables, branches, returns and statements in\n# functions, methods\n# * required module attributes\n# * dangerous default values as arguments\n# * redefinition of function / method / class\n# * uses of the global statement\n# \n[BASIC]\n\n# Required attributes for module, separated by a comma\nrequired-attributes=\n\n# Regular expression which should only match functions or classes name which do\n# not require a docstring\nno-docstring-rgx=__.*__\n\n# Regular expression which should only match correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression which should only match correct module level names\nconst-rgx=(([A-Z_][A-Z1-9_]*)|(__.*__))$\n\n# Regular expression which should only match correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression which should only match correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct instance attribute names\nattr-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct argument names\nargument-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match correct list comprehension /\n# generator expression variable names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k,ex,Run,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# List of builtins function names that should not be used, separated by a comma\nbad-functions=apply,input\n\n\n# checks for sign of poor/misdesign:\n# * number of methods, attributes, local variables...\n# * size, complexity of functions, methods\n# \n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=12\n\n# Maximum number of locals for function / method body\nmax-locals=30\n\n# Maximum number of return / yield for function / method body\nmax-returns=12\n\n# Maximum number of branch for function / method body\nmax-branchs=30\n\n# Maximum number of statements in function / method body\nmax-statements=60\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=20\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=0\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n\n# checks for\n# * external modules dependencies\n# * relative / wildcard imports\n# * cyclic imports\n# * uses of deprecated modules\n# \n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,string,TERMIOS,Bastion,rexec\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report R0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report R0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report R0402 must\n# not be disabled)\nint-import-graph=\n\n\n# checks for :\n# * methods without self as first argument\n# * overridden methods signature\n# * access only to existant members via self\n# * attributes not defined in the __init__ method\n# * supported interfaces implementation\n# * unreachable code\n# \n[CLASSES]\n\n# List of interface methods to ignore, separated by a comma. This is used for\n# instance to not check methods defines in Zope's Interface base class.\n# ignore-iface-methods=isImplementedBy,deferred,extends,names,namesAndDescriptions,queryDescriptionFor,getBases,getDescriptionFor,getDoc,getName,getTaggedValue,getTaggedValueTags,isEqualOrExtendedBy,setTaggedValue,isImplementedByInstancesOf,adaptWith,is_implemented_by\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n\n# checks for similarities and duplicated code. This computation may be\n# memory / CPU intensive, so you should disable it if you experiments some\n# problems.\n# \n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=5\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n\n# checks for:\n# * warning notes in the code like FIXME, XXX\n# * PEP 263: source code with non ascii character but no encoding declaration\n# \n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO,BUG:\n\n\n# checks for :\n# * unauthorized constructions\n# * strict indentation\n# * line length\n# * use of <> instead of !=\n# \n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=80\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \" \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n"
        },
        {
          "name": "requirements-docs.txt",
          "type": "blob",
          "size": 0.115234375,
          "content": "requests>=1.2.3,<=2.0.1\nrsa==3.1.4\nSphinx>=1.1.3,<1.3\nsimplejson==3.5.2\nargparse==1.2.1\nparamiko>=1.10.0\nPyYAML>=3.10\n"
        },
        {
          "name": "requirements-py26.txt",
          "type": "blob",
          "size": 0.0771484375,
          "content": "PyYAML==3.11\nidna==2.7\nunittest2==0.5.1\nordereddict==1.1\nparamiko>=1.10.0,<2.4\n"
        },
        {
          "name": "requirements-py33.txt",
          "type": "blob",
          "size": 0.03125,
          "content": "idna==2.7\nparamiko>=1.10.0,<2.4\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.15234375,
          "content": "nose==1.3.3\nrequests>=1.2.3,<=2.0.1\nrsa==3.1.4\nsimplejson==3.6.5\nargparse==1.2.1\nhttpretty>=0.9.6\nparamiko>=1.10.0\nPyYAML>=3.10\ncoverage==3.7.1\nmock==1.0.1\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.02734375,
          "content": "[bdist_wheel]\nuniversal = 1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.7841796875,
          "content": "#!/usr/bin/env python\n\n# Copyright (c) 2006-2010 Mitch Garnaat http://garnaat.org/\n# Copyright (c) 2010, Eucalyptus Systems, Inc.\n# All rights reserved.\n#\n# Permission is hereby granted, free of charge, to any person obtaining a\n# copy of this software and associated documentation files (the\n# \"Software\"), to deal in the Software without restriction, including\n# without limitation the rights to use, copy, modify, merge, publish, dis-\n# tribute, sublicense, and/or sell copies of the Software, and to permit\n# persons to whom the Software is furnished to do so, subject to the fol-\n# lowing conditions:\n#\n# The above copyright notice and this permission notice shall be included\n# in all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n# OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABIL-\n# ITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\n# SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n# IN THE SOFTWARE.\n\nfrom __future__ import print_function\n\ntry:\n    from setuptools import setup\n    extra = dict(test_suite=\"tests.test.suite\", include_package_data=True)\nexcept ImportError:\n    from distutils.core import setup\n    extra = {}\n\nimport sys\n\nfrom boto import __version__\n\nif sys.version_info <= (2, 5):\n    error = \"ERROR: boto requires Python Version 2.6 or above...exiting.\"\n    print(error, file=sys.stderr)\n    sys.exit(1)\n\ndef readme():\n    with open(\"README.rst\") as f:\n        return f.read()\n\nsetup(name = \"boto\",\n      version = __version__,\n      description = \"Amazon Web Services Library\",\n      long_description = readme(),\n      author = \"Mitch Garnaat\",\n      author_email = \"mitch@garnaat.com\",\n      scripts = [\"bin/sdbadmin\", \"bin/elbadmin\", \"bin/cfadmin\",\n                 \"bin/s3put\", \"bin/fetch_file\", \"bin/launch_instance\",\n                 \"bin/list_instances\", \"bin/taskadmin\", \"bin/kill_instance\",\n                 \"bin/bundle_image\", \"bin/pyami_sendmail\", \"bin/lss3\",\n                 \"bin/cq\", \"bin/route53\", \"bin/cwutil\", \"bin/instance_events\",\n                 \"bin/asadmin\", \"bin/glacier\", \"bin/mturk\",\n                 \"bin/dynamodb_dump\", \"bin/dynamodb_load\"],\n      url = \"https://github.com/boto/boto/\",\n      packages = [\"boto\", \"boto.sqs\", \"boto.s3\", \"boto.gs\", \"boto.file\",\n                  \"boto.ec2\", \"boto.ec2.cloudwatch\", \"boto.ec2.autoscale\",\n                  \"boto.ec2.elb\", \"boto.sdb\", \"boto.cacerts\",\n                  \"boto.sdb.db\", \"boto.sdb.db.manager\",\n                  \"boto.mturk\", \"boto.pyami\",\n                  \"boto.pyami.installers\", \"boto.pyami.installers.ubuntu\",\n                  \"boto.mashups\", \"boto.contrib\", \"boto.manage\",\n                  \"boto.services\", \"boto.cloudfront\",\n                  \"boto.roboto\", \"boto.rds\", \"boto.vpc\", \"boto.fps\",\n                  \"boto.fps\", \"boto.emr\", \"boto.emr\", \"boto.sns\",\n                  \"boto.ecs\", \"boto.iam\", \"boto.route53\", \"boto.ses\",\n                  \"boto.cloudformation\", \"boto.sts\", \"boto.dynamodb\",\n                  \"boto.swf\", \"boto.mws\", \"boto.cloudsearch\", \"boto.glacier\",\n                  \"boto.beanstalk\", \"boto.datapipeline\", \"boto.elasticache\",\n                  \"boto.elastictranscoder\", \"boto.opsworks\", \"boto.redshift\",\n                  \"boto.dynamodb2\", \"boto.support\", \"boto.cloudtrail\",\n                  \"boto.directconnect\", \"boto.kinesis\", \"boto.rds2\",\n                  \"boto.cloudsearch2\", \"boto.logs\", \"boto.vendored\",\n                  \"boto.route53.domains\", \"boto.cognito\",\n                  \"boto.cognito.identity\", \"boto.cognito.sync\",\n                  \"boto.cloudsearchdomain\", \"boto.kms\",\n                  \"boto.awslambda\", \"boto.codedeploy\", \"boto.configservice\",\n                  \"boto.cloudhsm\", \"boto.ec2containerservice\",\n                  \"boto.machinelearning\", \"boto.vendored.regions\"],\n      package_data = {\n          \"boto.cacerts\": [\"cacerts.txt\"],\n          \"boto\": [\"endpoints.json\"],\n      },\n      license = \"MIT\",\n      platforms = \"Posix; MacOS X; Windows\",\n      classifiers = [\"Development Status :: 5 - Production/Stable\",\n                     \"Intended Audience :: Developers\",\n                     \"License :: OSI Approved :: MIT License\",\n                     \"Operating System :: OS Independent\",\n                     \"Topic :: Internet\",\n                     \"Programming Language :: Python :: 2\",\n                     \"Programming Language :: Python :: 2.6\",\n                     \"Programming Language :: Python :: 2.7\",\n                     \"Programming Language :: Python :: 3\",\n                     \"Programming Language :: Python :: 3.3\",\n                     \"Programming Language :: Python :: 3.4\"],\n      **extra\n      )\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.890625,
          "content": "[tox]\nenvlist = py26,py27,py33,py34,pypy\n\n# Comment to build sdist and install into virtualenv\n# This is helpful to test installation but takes extra time\nskipsdist = True\n\n[testenv:py26]\n# Python 2.6 requires two extra test dependencies\ndeps =\n    unittest2\n    ordereddict\n    -rrequirements.txt\n# Some tests expect specific ordering, so we set the hash\n# seed for Python 2.x until all tests are updated for Python 3.\n# Hash seed affects ordering of certain objects like dict keys\n# Set it to a constant so that tests are consistent across\n# runs and versions of Python.\nsetenv =\n    PYTHONHASHSEED = 0\n\n[testenv:py27]\ndeps =\n    -rrequirements.txt\n# See comment above in py26 about hash seed.\nsetenv =\n    PYTHONHASHSEED = 0\n\n[testenv:pypy]\n# See comment above in py26 about hash seed.\nsetenv =\n    PYTHONHASHSEED = 0\n\n[testenv]\ndeps = -rrequirements.txt\ncommands =\n    python tests/test.py {posargs:default}\n"
        }
      ]
    }
  ]
}