{
  "metadata": {
    "timestamp": 1736560754391,
    "page": 436,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "modelscope/DiffSynth-Studio",
      "stars": 6722,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0810546875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2023] [Zhongjie Duan]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.8388671875,
          "content": "# DiffSynth Studio\n[![PyPI](https://img.shields.io/pypi/v/DiffSynth)](https://pypi.org/project/DiffSynth/)\n[![license](https://img.shields.io/github/license/modelscope/DiffSynth-Studio.svg)](https://github.com/modelscope/DiffSynth-Studio/blob/master/LICENSE)\n[![open issues](https://isitmaintained.com/badge/open/modelscope/DiffSynth-Studio.svg)](https://github.com/modelscope/DiffSynth-Studio/issues)\n[![GitHub pull-requests](https://img.shields.io/github/issues-pr/modelscope/DiffSynth-Studio.svg)](https://GitHub.com/modelscope/DiffSynth-Studio/pull/)\n[![GitHub latest commit](https://badgen.net/github/last-commit/modelscope/DiffSynth-Studio)](https://GitHub.com/modelscope/DiffSynth-Studio/commit/)\n\n<p align=\"center\">\n<a href=\"https://trendshift.io/repositories/10946\" target=\"_blank\"><img src=\"https://trendshift.io/api/badge/repositories/10946\" alt=\"modelscope%2FDiffSynth-Studio | Trendshift\" style=\"width: 250px; height: 55px;\" width=\"250\" height=\"55\"/></a>\n</p>\n\nDocument: https://diffsynth-studio.readthedocs.io/zh-cn/latest/index.html\n\n## Introduction\n\nDiffSynth Studio is a Diffusion engine. We have restructured architectures including Text Encoder, UNet, VAE, among others, maintaining compatibility with models from the open-source community while enhancing computational performance. We provide many interesting features. Enjoy the magic of Diffusion models!\n\nUntil now, DiffSynth Studio has supported the following models:\n\n* [HunyuanVideo](https://github.com/Tencent/HunyuanVideo)\n* [CogVideoX](https://huggingface.co/THUDM/CogVideoX-5b)\n* [FLUX](https://huggingface.co/black-forest-labs/FLUX.1-dev)\n* [ExVideo](https://huggingface.co/ECNU-CILab/ExVideo-SVD-128f-v1)\n* [Kolors](https://huggingface.co/Kwai-Kolors/Kolors)\n* [Stable Diffusion 3](https://huggingface.co/stabilityai/stable-diffusion-3-medium)\n* [Stable Video Diffusion](https://huggingface.co/stabilityai/stable-video-diffusion-img2vid-xt)\n* [Hunyuan-DiT](https://github.com/Tencent/HunyuanDiT)\n* [RIFE](https://github.com/hzwer/ECCV2022-RIFE)\n* [ESRGAN](https://github.com/xinntao/ESRGAN)\n* [Ip-Adapter](https://github.com/tencent-ailab/IP-Adapter)\n* [AnimateDiff](https://github.com/guoyww/animatediff/)\n* [ControlNet](https://github.com/lllyasviel/ControlNet)\n* [Stable Diffusion XL](https://huggingface.co/stabilityai/stable-diffusion-xl-base-1.0)\n* [Stable Diffusion](https://huggingface.co/runwayml/stable-diffusion-v1-5)\n\n## News\n- **December 31, 2024** We propose EliGen, a novel framework for precise entity-level controlled text-to-image generation, complemented by an inpainting fusion pipeline to extend its capabilities to image inpainting tasks. EliGen seamlessly integrates with existing community models, such as IP-Adapter and In-Context LoRA, enhancing its versatility. For more details, see [./examples/EntityControl](./examples/EntityControl/).\n  * Paper: [EliGen: Entity-Level Controlled Image Generation with Regional Attention](https://arxiv.org/abs/2501.01097)\n  * Github: [DiffSynth-Studio](https://github.com/modelscope/DiffSynth-Studio)\n  * Model: [ModelScope](https://www.modelscope.cn/models/DiffSynth-Studio/Eligen)\n  * Training dataset: Coming soon\n\n- **December 19, 2024** We implement advanced VRAM management for HunyuanVideo, making it possible to generate videos at a resolution of 129x720x1280 using 24GB of VRAM, or at 129x512x384 resolution with just 6GB of VRAM. Please refer to [./examples/HunyuanVideo/](./examples/HunyuanVideo/) for more details.\n\n- **December 18, 2024** We propose ArtAug, an approach designed to improve text-to-image synthesis models through synthesis-understanding interactions. We have trained an ArtAug enhancement module for FLUX.1-dev in the format of LoRA. This model integrates the aesthetic understanding of Qwen2-VL-72B into FLUX.1-dev, leading to an improvement in the quality of generated images.\n  - Paper: https://arxiv.org/abs/2412.12888\n  - Examples: https://github.com/modelscope/DiffSynth-Studio/tree/main/examples/ArtAug\n  - Model: [ModelScope](https://www.modelscope.cn/models/DiffSynth-Studio/ArtAug-lora-FLUX.1dev-v1), [HuggingFace](https://huggingface.co/ECNU-CILab/ArtAug-lora-FLUX.1dev-v1)\n  - Demo: [ModelScope](https://modelscope.cn/aigc/imageGeneration?tab=advanced&versionId=7228&modelType=LoRA&sdVersion=FLUX_1&modelUrl=modelscope%3A%2F%2FDiffSynth-Studio%2FArtAug-lora-FLUX.1dev-v1%3Frevision%3Dv1.0), HuggingFace (Coming soon)\n\n- **October 25, 2024** We provide extensive FLUX ControlNet support. This project supports many different ControlNet models that can be freely combined, even if their structures differ. Additionally, ControlNet models are compatible with high-resolution refinement and partition control techniques, enabling very powerful controllable image generation. See [`./examples/ControlNet/`](./examples/ControlNet/).\n\n- **October 8, 2024.** We release the extended LoRA based on CogVideoX-5B and ExVideo. You can download this model from [ModelScope](https://modelscope.cn/models/ECNU-CILab/ExVideo-CogVideoX-LoRA-129f-v1) or [HuggingFace](https://huggingface.co/ECNU-CILab/ExVideo-CogVideoX-LoRA-129f-v1).\n\n- **August 22, 2024.** CogVideoX-5B is supported in this project. See [here](/examples/video_synthesis/). We provide several interesting features for this text-to-video model, including\n  - Text to video\n  - Video editing\n  - Self-upscaling\n  - Video interpolation\n\n- **August 22, 2024.** We have implemented an interesting painter that supports all text-to-image models. Now you can create stunning images using the painter, with assistance from AI!\n  - Use it in our [WebUI](#usage-in-webui).\n\n- **August 21, 2024.** FLUX is supported in DiffSynth-Studio.\n  - Enable CFG and highres-fix to improve visual quality. See [here](/examples/image_synthesis/README.md)\n  - LoRA, ControlNet, and additional models will be available soon.\n\n- **June 21, 2024.** 🔥🔥🔥 We propose ExVideo, a post-tuning technique aimed at enhancing the capability of video generation models. We have extended Stable Video Diffusion to achieve the generation of long videos up to 128 frames.\n  - [Project Page](https://ecnu-cilab.github.io/ExVideoProjectPage/)\n  - Source code is released in this repo. See [`examples/ExVideo`](./examples/ExVideo/).\n  - Models are released on [HuggingFace](https://huggingface.co/ECNU-CILab/ExVideo-SVD-128f-v1) and [ModelScope](https://modelscope.cn/models/ECNU-CILab/ExVideo-SVD-128f-v1).\n  - Technical report is released on [arXiv](https://arxiv.org/abs/2406.14130).\n  - You can try ExVideo in this [Demo](https://huggingface.co/spaces/modelscope/ExVideo-SVD-128f-v1)!\n\n- **June 13, 2024.** DiffSynth Studio is transferred to ModelScope. The developers have transitioned from \"I\" to \"we\". Of course, I will still participate in development and maintenance.\n\n- **Jan 29, 2024.** We propose Diffutoon, a fantastic solution for toon shading.\n  - [Project Page](https://ecnu-cilab.github.io/DiffutoonProjectPage/)\n  - The source codes are released in this project.\n  - The technical report (IJCAI 2024) is released on [arXiv](https://arxiv.org/abs/2401.16224).\n\n- **Dec 8, 2023.** We decide to develop a new Project, aiming to release the potential of diffusion models, especially in video synthesis. The development of this project is started.\n\n- **Nov 15, 2023.** We propose FastBlend, a powerful video deflickering algorithm.\n  - The sd-webui extension is released on [GitHub](https://github.com/Artiprocher/sd-webui-fastblend).\n  - Demo videos are shown on Bilibili, including three tasks.\n    - [Video deflickering](https://www.bilibili.com/video/BV1d94y1W7PE)\n    - [Video interpolation](https://www.bilibili.com/video/BV1Lw411m71p)\n    - [Image-driven video rendering](https://www.bilibili.com/video/BV1RB4y1Z7LF)\n  - The technical report is released on [arXiv](https://arxiv.org/abs/2311.09265).\n  - An unofficial ComfyUI extension developed by other users is released on [GitHub](https://github.com/AInseven/ComfyUI-fastblend).\n\n- **Oct 1, 2023.** We release an early version of this project, namely FastSDXL. A try for building a diffusion engine.\n  - The source codes are released on [GitHub](https://github.com/Artiprocher/FastSDXL).\n  - FastSDXL includes a trainable OLSS scheduler for efficiency improvement.\n    - The original repo of OLSS is [here](https://github.com/alibaba/EasyNLP/tree/master/diffusion/olss_scheduler).\n    - The technical report (CIKM 2023) is released on [arXiv](https://arxiv.org/abs/2305.14677).\n    - A demo video is shown on [Bilibili](https://www.bilibili.com/video/BV1w8411y7uj).\n    - Since OLSS requires additional training, we don't implement it in this project.\n\n- **Aug 29, 2023.** We propose DiffSynth, a video synthesis framework.\n  - [Project Page](https://ecnu-cilab.github.io/DiffSynth.github.io/).\n  - The source codes are released in [EasyNLP](https://github.com/alibaba/EasyNLP/tree/master/diffusion/DiffSynth).\n  - The technical report (ECML PKDD 2024) is released on [arXiv](https://arxiv.org/abs/2308.03463).\n\n\n## Installation\n\nInstall from source code (recommended):\n\n```\ngit clone https://github.com/modelscope/DiffSynth-Studio.git\ncd DiffSynth-Studio\npip install -e .\n```\n\nOr install from pypi:\n\n```\npip install diffsynth\n```\n\n## Usage (in Python code)\n\nThe Python examples are in [`examples`](./examples/). We provide an overview here.\n\n### Download Models\n\nDownload the pre-set models. Model IDs can be found in [config file](/diffsynth/configs/model_config.py).\n\n```python\nfrom diffsynth import download_models\n\ndownload_models([\"FLUX.1-dev\", \"Kolors\"])\n```\n\nDownload your own models.\n\n```python\nfrom diffsynth.models.downloader import download_from_huggingface, download_from_modelscope\n\n# From Modelscope (recommended)\ndownload_from_modelscope(\"Kwai-Kolors/Kolors\", \"vae/diffusion_pytorch_model.fp16.bin\", \"models/kolors/Kolors/vae\")\n# From Huggingface\ndownload_from_huggingface(\"Kwai-Kolors/Kolors\", \"vae/diffusion_pytorch_model.fp16.safetensors\", \"models/kolors/Kolors/vae\")\n```\n\n### Video Synthesis\n\n#### Text-to-video using CogVideoX-5B\n\nCogVideoX-5B is released by ZhiPu. We provide an improved pipeline, supporting text-to-video, video editing, self-upscaling and video interpolation. [`examples/video_synthesis`](./examples/video_synthesis/)\n\nThe video on the left is generated using the original text-to-video pipeline, while the video on the right is the result after editing and frame interpolation.\n\nhttps://github.com/user-attachments/assets/26b044c1-4a60-44a4-842f-627ff289d006\n\n#### Long Video Synthesis\n\nWe trained extended video synthesis models, which can generate 128 frames. [`examples/ExVideo`](./examples/ExVideo/)\n\nhttps://github.com/modelscope/DiffSynth-Studio/assets/35051019/d97f6aa9-8064-4b5b-9d49-ed6001bb9acc\n\nhttps://github.com/user-attachments/assets/321ee04b-8c17-479e-8a95-8cbcf21f8d7e\n\n#### Toon Shading\n\nRender realistic videos in a flatten style and enable video editing features. [`examples/Diffutoon`](./examples/Diffutoon/)\n\nhttps://github.com/Artiprocher/DiffSynth-Studio/assets/35051019/b54c05c5-d747-4709-be5e-b39af82404dd\n\nhttps://github.com/Artiprocher/DiffSynth-Studio/assets/35051019/20528af5-5100-474a-8cdc-440b9efdd86c\n\n#### Video Stylization\n\nVideo stylization without video models. [`examples/diffsynth`](./examples/diffsynth/)\n\nhttps://github.com/Artiprocher/DiffSynth-Studio/assets/35051019/59fb2f7b-8de0-4481-b79f-0c3a7361a1ea\n\n### Image Synthesis\n\nGenerate high-resolution images, by breaking the limitation of diffusion models! [`examples/image_synthesis`](./examples/image_synthesis/).\n\nLoRA fine-tuning is supported in [`examples/train`](./examples/train/).\n\n|FLUX|Stable Diffusion 3|\n|-|-|\n|![image_1024_cfg](https://github.com/user-attachments/assets/984561e9-553d-4952-9443-79ce144f379f)|![image_1024](https://github.com/modelscope/DiffSynth-Studio/assets/35051019/4df346db-6f91-420a-b4c1-26e205376098)|\n\n|Kolors|Hunyuan-DiT|\n|-|-|\n|![image_1024](https://github.com/modelscope/DiffSynth-Studio/assets/35051019/53ef6f41-da11-4701-8665-9f64392607bf)|![image_1024](https://github.com/modelscope/DiffSynth-Studio/assets/35051019/60b022c8-df3f-4541-95ab-bf39f2fa8bb5)|\n\n|Stable Diffusion|Stable Diffusion XL|\n|-|-|\n|![1024](https://github.com/Artiprocher/DiffSynth-Studio/assets/35051019/6fc84611-8da6-4a1f-8fee-9a34eba3b4a5)|![1024](https://github.com/Artiprocher/DiffSynth-Studio/assets/35051019/67687748-e738-438c-aee5-96096f09ac90)|\n\n## Usage (in WebUI)\n\nCreate stunning images using the painter, with assistance from AI!\n\nhttps://github.com/user-attachments/assets/95265d21-cdd6-4125-a7cb-9fbcf6ceb7b0\n\n**This video is not rendered in real-time.**\n\nBefore launching the WebUI, please download models to the folder `./models`. See [here](#download-models).\n\n* `Gradio` version\n\n```\npip install gradio\n```\n\n```\npython apps/gradio/DiffSynth_Studio.py\n```\n\n![20240822102002](https://github.com/user-attachments/assets/59613157-de51-4109-99b3-97cbffd88076)\n\n* `Streamlit` version\n\n```\npip install streamlit streamlit-drawable-canvas\n```\n\n```\npython -m streamlit run apps/streamlit/DiffSynth_Studio.py\n```\n\nhttps://github.com/Artiprocher/DiffSynth-Studio/assets/35051019/93085557-73f3-4eee-a205-9829591ef954\n"
        },
        {
          "name": "apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "diffsynth",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.154296875,
          "content": "torch>=2.0.0\ntorchvision\ncupy-cuda12x\ntransformers==4.46.2\ncontrolnet-aux==0.0.7\nimageio\nimageio[ffmpeg]\nsafetensors\neinops\nsentencepiece\nprotobuf\nmodelscope\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.921875,
          "content": "import os\nfrom setuptools import setup, find_packages\nimport pkg_resources\n\n# Path to the requirements file\nrequirements_path = os.path.join(os.path.dirname(__file__), \"requirements.txt\")\n\n# Read the requirements from the requirements file\nif os.path.exists(requirements_path):\n    with open(requirements_path, 'r') as f:\n        install_requires = [str(r) for r in pkg_resources.parse_requirements(f)]\nelse:\n    install_requires = []\n\nsetup(\n    name=\"diffsynth\",\n    version=\"1.0.0\",\n    description=\"Enjoy the magic of Diffusion models!\",\n    author=\"Artiprocher\",\n    packages=find_packages(),\n    install_requires=install_requires,\n    include_package_data=True,\n    classifiers=[\n        \"Programming Language :: Python :: 3\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Operating System :: OS Independent\",\n    ],\n    package_data={\"diffsynth\": [\"tokenizer_configs/**/**/*.*\"]},\n    python_requires='>=3.6',\n)\n"
        }
      ]
    }
  ]
}