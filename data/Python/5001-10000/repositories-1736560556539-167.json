{
  "metadata": {
    "timestamp": 1736560556539,
    "page": 167,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OctoPrint/OctoPrint",
      "stars": 8390,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codespell_ignore_words",
          "type": "blob",
          "size": 0.033203125,
          "content": "managable\ncommitish\nmatchs\nmedias\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.513671875,
          "content": "# This file is for unifying the coding style for different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nmax_line_length = 90\n\n[**.py]\nindent_size = 4\n\n[**.yaml]\nindent_size = 2\n\n[src/octoprint/static/js/app/**.js]\nindent_size = 4\n\n[src/octoprint/static/js/login/**.js]\nindent_size = 4\n\n[src/octoprint/static/js/recovery/**.js]\nindent_size = 4\n\n[src/octoprint/static/less/octoprint.less]\nindent_size = 2\n"
        },
        {
          "name": ".eslintrc.yaml",
          "type": "blob",
          "size": 0.0498046875,
          "content": "env:\n  browser: true\n  jquery: true\n  es2018: true\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.6044921875,
          "content": "# refs to ignore during git blame, use with --ignore-revs-file\n\n# pre-commit version updates\nb4f265d9f67508677e1697e74e248b895da7f43c\n2231e81efd32d649798f7a58cdb1755e34902d8a\n\n# Switch to black formatting\n1f93b2355a2816918e11a55e61b42010d15a6720\n5f2a95d154650366078b0d387e5b01427c4340c0\n\n# Switch to prettier formatting\n6b44909f21ee39237b7504cd31ffa6cf28275c33\n\n# EOF/trailing whitespace check\n#cae6730ea87da18bd6ebfeaf3e1e9cd354390939\n\n# dict_to_literal, set_to_literal, not_in, flake8 fixes\n#af60fd642832736966104ae71d852d745397c749\n#986312b6ae7eeadcaf620cc99d53b23794be83b6\n#b5be8f3eaec18ae2a88110a3a16c552931d493dd\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.34375,
          "content": "src/octoprint/_version.py export-subst\n\nsrc/octoprint/static/js/lib/* linguist-vendored\nsrc/octoprint/static/less/bootstrap/* linguist-vendored\nsrc/octoprint/static/less/font-awesome.less linguist-vendored\nsrc/octoprint/static/less/mixins.less linguist-vendored\nsrc/octoprint/static/less/variables.less linguist-vendored\n\ndocs/* linguist-documentation\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.533203125,
          "content": "src/octoprint/templates/_data/AUTHORS.md\nsrc/octoprint/templates/_data/CHANGELOG.md\nsrc/octoprint/templates/_data/SUPPORTERS.md\nsrc/octoprint/templates/_data/THIRDPARTYLICENSES.md\nsrc/octoprint/plugins/pi_support/.local_debug\ndocs/_build\n\ndevtools\n\n*.tar.bz2\n*.tar.gz\n*.7z\n*.pyc\n*.zip\n*.exe\n*.swp\ndarwin-Cura-*\nwin32-Cura-*\nlinux-Cura-*\n*.iml\nPrintrun\n=======\n.idea\n.vscode\n.DS_Store\nCura/current_profile.ini\nCura/preferences.ini\nbuild\ndist\npypy\n\n*.orig\n*.codekit\n\n*.egg-info\n.eggs\n.mypy_cache\n.pytest_cache\n.python-version\n.tox\n\nvenv*\ntestconf*\n"
        },
        {
          "name": ".ignore",
          "type": "blob",
          "size": 0.072265625,
          "content": "# ripgrep ignore file\n\nsrc/octoprint/static/vendor/\nsrc/octoprint/vendor/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 2.1748046875,
          "content": "default_language_version:\n  python: python3.10\nexclude: ^(src/octoprint/vendor/|src/octoprint/static/js/lib|src/octoprint/static/vendor|src/octoprint_setuptools|tests/static/js/lib|tests/util/_files|scripts/|translations/|.*\\.css|.*\\.svg)\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.4.0\n    hooks:\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n      - id: check-case-conflict\n      - id: check-json\n      - id: check-yaml\n      - id: check-toml\n      - id: check-merge-conflict\n      - id: fix-encoding-pragma\n        args: [\"--remove\"]\n        exclude: \"setup.py|src/octoprint_setuptools/__init__.py\"\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v3.3.1\n    hooks:\n      - id: pyupgrade\n        args: [\"--py37-plus\"]\n        exclude: \"setup.py|src/octoprint_setuptools/__init__.py\"\n  - repo: https://github.com/OctoPrint/codemods\n    rev: \"0.6.3\"\n    hooks:\n      - id: codemod_batch\n        args:\n          [\n            \"--check\",\n            \"not_in\",\n            \"--check\",\n            \"detect_past_builtins_imports\",\n            \"--ignore\",\n            \"src/octoprint/vendor\",\n            \"--ignore\",\n            \"setup.py\",\n            \"--ignore\",\n            \"src/octoprint_setuptools/__init__.py\"\n          ]\n  - repo: https://github.com/pre-commit/mirrors-isort\n    rev: v5.10.1\n    hooks:\n      - id: isort\n  - repo: https://github.com/psf/black\n    rev: 23.1.0\n    hooks:\n      - id: black\n  - repo: https://github.com/pycqa/flake8\n    rev: 6.0.0\n    hooks:\n      - id: flake8\n        args: [--config=setup.cfg]\n        additional_dependencies:\n          - flake8-bugbear==23.2.13\n        exclude: ^(docs/)\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v2.7.1\n    hooks:\n      - id: prettier\n  - repo: https://github.com/pre-commit/mirrors-eslint\n    rev: v8.35.0\n    hooks:\n      - id: eslint\n        files: \\.js$\n        exclude: ^(src/octoprint/vendor/|tests/static/js/lib|tests/util/_files|docs/|scripts/|translations/)\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.2.2\n    hooks:\n      - id: codespell\n        exclude: ^(src/octoprint/vendor/|tests/static/js/lib|tests/util/_files|tests/playwright|scripts/)\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.2236328125,
          "content": "src/octoprint/static/js/lib\nsrc/octoprint/static/vendor\nsrc/octoprint/static/less/bootstrap\nsrc/octoprint/static/less/font-awesome.less\n*.md\n*.css\n**/package.json\n**/package-lock.json\n**/*.min.js\ndocs\nbuild\ndist\nvenv\nvenv2\nvenv3\n"
        },
        {
          "name": ".prettierrc.yaml",
          "type": "blob",
          "size": 0.2119140625,
          "content": "printWidth: 90\ntabWidth: 4\nsemi: true\ntrailingComma: \"none\"\nsingleQuote: false\nquoteProps: consistent\nbracketSpacing: false\noverrides:\n  - files: [\"*.yaml\", \"*.yml\", \"*.json\", \"*.less\"]\n    options:\n      tabWidth: 2\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS.md",
          "type": "blob",
          "size": 9.0302734375,
          "content": "# Authors\n\nThe following people have contributed to OctoPrint's code base (ordered roughly by\ndate of first contribution):\n\n  * [Gina Häußge](https://github.com/foosel)\n  * [Thomas Sanladerer](https://github.com/imitation)\n  * [Alex Ustyantsev](https://github.com/hudbrog)\n  * [Andrew Dalgleish](https://github.com/ajd4096)\n  * [Dale Price](https://github.com/daprice)\n  * [Václav \"ax\" Hůla](https://github.com/AxTheB)\n  * [Tom Perry](https://github.com/daftscience)\n  * [Andreas Gohr](https://github.com/splitbrain)\n  * [Lars Norpchen](https://github.com/norpchen)\n  * [Marlon Wünnemann](https://github.com/marwue)\n  * [\"algspd\"](https://github.com/algspd)\n  * [Peter Uithoven](https://github.com/peteruithoven)\n  * [Bryan Mayland](https://github.com/CapnBry)\n  * [Ross Hendrickson](https://github.com/savorywatt)\n  * [Dan Lipsitt](https://github.com/DanLipsitt)\n  * [James Gao](https://github.com/jamesgao)\n  * [Tonnerre Lombard](https://github.com/tonnerre)\n  * [Marc Hannappel](https://github.com/Salandora)\n  * [Brad Pitcher](https://github.com/brad)\n  * [Gabe Rosenhouse](https://github.com/rosenhouse)\n  * [chriskoz](https://github.com/chriskoz)\n  * [Ilya Novoselov](https://github.com/nullie)\n  * [Corey C](https://github.com/C-o-r-E)\n  * [Jarek Szczepanski](https://github.com/imrahil)\n  * [Jon Nordby](https://github.com/jonnor)\n  * [Aaron Bieber](https://github.com/qbit)\n  * [Guy Sheffer](https://github.com/guysoft)\n  * [Dattas Moonchaser](https://github.com/dattas)\n  * [Pim Rutgers](https://github.com/Booli)\n  * [Koen Kooi](https://github.com/koenkooi)\n  * [Colin Wallace](https://github.com/Wallacoloo)\n  * [Michael Ang](https://github.com/mangtronix)\n  * [Philipp Engel](https://github.com/nosyjoe)\n  * [Giles Hall](https://github.com/vishnubob)\n  * [Bevaz](https://github.com/Bevaz)\n  * [Bortek](https://github.com/bortek)\n  * [Rob Speed](https://github.com/rspeed)\n  * [Renha](https://github.com/Renha)\n  * [Antoine Bertin](https://github.com/Diaoul)\n  * [Teja Philipp](https://github.com/hungerpirat)\n  * [\"matobago\"](https://github.com/matobago)\n  * [\"nophead\"](https://github.com/nophead)\n  * [Bob Clough](https://github.com/thinkl33t)\n  * [Mikk Kiilaspää](https://github.com/Mikk36)\n  * [Jack Minardi](https://github.com/jminardi)\n  * [Mark Walker](https://github.com/markwal)\n  * [Lucas Clemente](https://github.com/lucas-clemente)\n  * [Andrew Erickson](https://github.com/aerickson)\n  * [Nicanor Romero Venier](https://github.com/nicanor-romero)\n  * [Thomas Hou](https://github.com/masterhou)\n  * [Mark Bastiaans](https://github.com/markbastiaans)\n  * [Marcel Hellwig](https://github.com/punkkeks)\n  * [Kevin Murphy](https://github.com/kevingelion)\n  * [Richard Joyce](https://github.com/richjoyce)\n  * [\"bwgan\"](https://github.com/bwgan)\n  * [Siim Raud](https://github.com/2ndalpha)\n  * [\"geoporalis\"](https://github.com/geoporalis)\n  * [Andrew Malota](https://github.com/2bitoperations)\n  * [Ishwar Agarwal](https://github.com/agarwali)\n  * [Kye Hoover](https://github.com/eykrevooh)\n  * [Joseph Carrick](https://github.com/carricktel)\n  * [Alexander Leisentritt](https://github.com/Alex9779)\n  * [therealbstern](https://github.com/therealbstern)\n  * [Philipp Baum](https://github.com/philphilphil)\n  * [Kyle Evans](https://github.com/kevans91)\n  * [Javier Martínez Arrieta](https://github.com/Javierma)\n  * [Mircea Dan Gheorghe](https://github.com/ByReaL)\n  * [Ovidiu Hossu](https://github.com/MoonshineSG)\n  * [Eyck Jentzsch](https://github.com/eyck)\n  * [Mathias Rangel Wulff](https://github.com/mathiasrw)\n  * [Clemens Niemeyer](https://github.com/clemniem)\n  * [\"I-am-me\"](https://github.com/I-am-me)\n  * [J-J Heinonen](https://github.com/jammi)\n  * [Noah Martin](https://github.com/noahsmartin)\n  * [Eyal Soha](https://github.com/eyal0)\n  * [Greg Hulands](https://github.com/ghulands)\n  * [Andreas Werner](https://github.com/gallore)\n  * [Shawn Bruce](https://github.com/kantlivelong)\n  * [Claudiu Ceia](https://github.com/ClaudiuCeia)\n  * [Goswin von Brederlow](https://github.com/mrvn)\n  * [Luke McKechnie](https://github.com/galamdring)\n  * [Peter Backx](https://github.com/pbackx)\n  * [Josh Major](https://github.com/astateofblank)\n  * [\"alex-gh\"](https://github.com/alex-gh)\n  * [Bernd Zeimetz](https://github.com/bzed)\n  * [Daniele Forsi](https://github.com/dforsi)\n  * [Ganey](https://github.com/ganey)\n  * [Sven Lohrmann](https://github.com/malnvenshorn)\n  * [Andy Castille](https://github.com/klikini)\n  * [Zachary Nofzinger](https://github.com/ZachNo)\n  * [Gaston Dombiak](https://github.com/gdombiak)\n  * [Brad Fisher](https://github.com/bradcfisher)\n  * [Aldo Hoeben](https://github.com/fieldofview)\n  * [Henning Groß](https://github.com/hgross)\n  * [Jubaleth](https://github.com/jubaleth)\n  * [Matthias Urlichs](https://github.com/smurfix)\n  * [Daniel Joyce](https://github.com/DanielJoyce)\n  * [Andy Qua](https://github.com/AndyQ)\n  * [Fabio Santos](https://github.com/Fabi0San)\n  * [Jack Wilsdon](https://github.com/jackwilsdon)\n  * [Ryan Finnie](https://github.com/rfinnie)\n  * [Timur Duehr](https://github.com/tduehr)\n  * [Nicolai Nielsen](https://github.com/dovecode)\n  * [Janne Mäntyharju](https://github.com/JanneMantyharju)\n  * [Steven Spungin](https://github.com/flamenco)\n  * [Piotr Usewicz](https://github.com/pusewicz)\n  * [Aliaksei Pilko](https://github.com/aliaksei135)\n  * [Ben Yarmis](https://github.com/byarmis)\n  * [Florian Heilmann](https://github.com/FHeilmann)\n  * [Ludovico de Nittis](https://github.com/RyuzakiKK)\n  * [Dominik Paľo](https://github.com/DominikPalo)\n  * [Kelly Anderson](https://github.com/cbxbiker61)\n  * [Jim Neill](https://github.com/jneilliii)\n  * [Dustin Kerber](https://github.com/kerber)\n  * [Tobias Schürg](https://github.com/tobiasschuerg)\n  * [Josh Friend](https://github.com/joshfriend)\n  * [Lachlan Cresswell](https://github.com/lachyc)\n  * [Khoi Pham](https://github.com/osubuu)\n  * [Timofei Korostelev](https://github.com/chudsaviet)\n  * [Federico Nembrini](https://github.com/FedericoNembrini)\n  * [Uri Shaked](https://github.com/urish)\n  * [Brian Vanderbusch](https://github.com/LongLiveCHIEF)\n  * [Charlie Powell](https://github.com/cp2004)\n  * [Ollis Git](https://github.com/OllisGit)\n  * [Sophist](https://github.com/Sophist-UK)\n  * [Manuel McLure](https://github.com/ManuelMcLure)\n  * [\"j7126\"](https://github.com/j7126)\n  * [\"coliss86\"](https://github.com/coliss86)\n  * [\"MichaIng\"](https://github.com/MichaIng)\n  * [\"jasonbcox\"](https://github.com/jasonbcox)\n  * [\"shadycuz\"](https://github.com/shadycuz)\n  * [David Rifkind](https://github.com/drifkind)\n  * [Nils Hofmann](https://github.com/Master92)\n  * [Miroslav Šedivý](https://github.com/eumiro)\n  * [Costas Basdekis](https://github.com/costas-basdekis)\n  * [Joe Martella](https://github.com/martellaj)\n  * [Scott Lahteine](https://github.com/thinkyhead)\n  * [Karthikeyan Singaravelan](https://github.com/tirkarthi)\n  * [Yvan Rodrigues](https://github.com/TwoRedCells)\n  * [Elton Law](https://github.com/eltonlaw)\n  * [\"sparxooo\"](https://github.com/sparxooo)\n  * [\"Stevil Knevil\"](https://github.com/StevilKnevil)\n  * [ldursw](https://github.com/ldursw)\n  * [Ian Wilt](https://github.com/ianwiltdotcom)\n  * [Ben Sycha](https://github.com/Sycha)\n  * [John Boiles](https://github.com/johnboiles)\n  * [Adam DeMuri](https://github.com/ademuri)\n  * [Daniel Shenkle](https://github.com/DShenkle)\n  * [Bryan Kenote](https://github.com/bryankenote)\n  * [Quinn Damerell](https://github.com/QuinnDamerell)\n  * [Sven Samoray](https://github.com/thelastWallE)\n  * [Carey Metcalfe](https://github.com/pR0Ps)\n  * [Christian Würthner](https://github.com/crysxd)\n  * [Maciej Urbański](https://github.com/rooterkyberian)\n  * [Adam Wolf](https://github.com/adamwolf)\n  * [Didi Kohen](https://github.com/kohend)\n  * [Taylor Talkington](https://github.com/The-EG)\n  * [Carey Metcalfe](https://github.com/pR0Ps)\n  * [Shell M. Shrader](https://github.com/synman)\n  * [Johan Verrept](https://github.com/JoveToo)\n  * [Nicu Surdu](https://github.com/surdu)\n  * [Zack Lewis](https://github.com/lima3w)\n  * [Billy Richardson](https://github.com/richardsondev)\n  * [Christian Bianchini](https://github.com/max246)\n  * [Kestin Goforth](https://github.com/kforth)\n  * [Dawid Pieper](https://github.com/dawidpieper)\n  * [\"arrdem\"](https://github.com/arrdem)\n  * [Arkadiusz Miśkiewicz](https://github.com/arekm)\n  * [\"tempodat\"](https://github.com/tempodat)\n  * [Frederik Kemner](https://github.com/040medien)\n  * [Moiz Rasheed](https://github.com/msrasheed)\n  * [Scott Martin](https://github.com/smartin015)\n  * [Shyam Sunder](https://github.com/sgsunder)\n  * [Conny Rasch](https://github.com/CMR-DEV)\n  * [Christopher Perrin](https://github.com/cperrin88)\n  * [Jatin Saini](https://github.com/jatin-47)\n  * [Martin Bartsch](https://github.com/kaenguruhs)\n  * [Matthias Weis](https://github.com/mad73923)\n  * [Rob Emery](https://github.com/mintsoft)\n  * [Jacopo Tediosi](https://github.com/jacopotediosi)\n\nOctoPrint started off as a fork of [Cura](https://github.com/daid/Cura) by\n[Daid Braam](https://github.com/daid). Parts of its communication layer and\nthe server side GCODE interpreter are still based on Cura's code base from\nDecember 2012 and hence on the work of its authors up until then.\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.15234375,
          "content": "# Changelog\n\nSee [the releases on Github](https://github.com/OctoPrint/OctoPrint/releases) for detailed changelogs for all releases\nand release candidates.\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.099609375,
          "content": "OctoPrint's Code of Conduct can be found at [octoprint.org/conduct/](https://octoprint.org/conduct/).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 19.5576171875,
          "content": "# Contribution Guidelines\n\nThis document outlines what you need to know before **[creating tickets](#issues-tickets-however-you-may-call-them)**\nor **[creating pull requests](#pull-requests)**.\n\n## Contents\n\n  * [Issues, Tickets, however you may call them](#issues-tickets-however-you-may-call-them)\n  * [How to file a bug report](#how-to-file-a-bug-report)\n    * [What should I do before submitting a bug report?](#what-should-i-do-before-submitting-a-bug-report)\n    * [What should I include in a bug report?](#what-should-i-include-in-a-bug-report)\n    * [Where can I find which version and branch I'm on?](#where-can-i-find-which-version-and-branch-im-on)\n    * [Where can I find those log files you keep talking about?](#where-can-i-find-those-log-files-you-keep-talking-about)\n    * [Where can I find my browser's error console?](#where-can-i-find-my-browsers-error-console)\n  * [Setting up a development environment](#setting-up-a-development-environment)\n  * [Pull requests](#pull-requests)\n  * [What do the branches mean?](#what-do-the-branches-mean)\n  * [How OctoPrint is versioned](#how-octoprint-is-versioned)\n  * [History](#history)\n  * [Footnotes](#footnotes)\n\n## Issues, Tickets, however you may call them\n\nPlease read the following instructions fully and follow them. You can\nhelp the project tremendously this way: not only do you help the maintainers\nto **address problems in a timely manner** but also keep it possible for them\nto **fix bugs, add new and improve on existing functionality** instead of doing\nnothing but ticket management.\n\n![Ticket flow chart](https://i.imgur.com/cw19qHX.png)\n\n- **[Read the FAQ](https://faq.octoprint.org)**\n- If you want to report a **bug**, [read \"How to file a bug report\" below](#how-to-file-a-bug-report)\n  and *[use the provided template](#what-should-i-include-in-a-ticket)*.\n  You do not need to do anything else with your ticket.\n- If you want to post a **feature request** or a **documentation request**, add `[Request]`\n  to your issue's title (e.g. `[Request] Awesome new feature`). A question on how to run/change/setup\n  something is **not** what qualifies as a request here, use the\n  [community forum at community.octoprint.org](https://community.octoprint.org) for\n  such support issues.\n- If you are a **developer** that wants to brainstorm a pull request or possible\n  changes to the plugin system, please get in touch on the\n  [community forum at community.octoprint.org](https://community.octoprint.org/c/development).\n- If you need **support**, have a **question** or some **other reason** that\n  doesn't fit any of the above categories, the issue tracker is not the right place.\n  Consult the [community forum at community.octoprint.org](https://community.octoprint.org/c/support) instead.\n\nNo matter what kind of ticket you create, never mix two or more \"ticket reasons\"\ninto one ticket: One ticket per bug, request, brainstorming thread please.\n\n> 👉 **Note**\n>\n> A bot is in place that monitors new tickets, automatically\n> categorizes them and checks new bug reports for usage of the provided template.\n> That bot will only bother you if you open a ticket that appears to be a bug (no\n> `[Request]` in the title) without the complete template, and it\n> will do that only to ensure that all information needed to solve the issue is\n> available for the maintainers to directly start tackling that problem.\n\n## How to file a bug report\n\nIf you encounter an issue with OctoPrint, you are welcome to\n[submit a bug report](https://github.com/OctoPrint/OctoPrint/issues/new?template=bug_report.yml).\n\nBefore you do that for the first time though please take a moment to read the\nfollowing section *completely* and also follow the instructions in the\n\"new issue\" form. Thank you! :)\n\n### What should I do before submitting a bug report?\n\n1. **Make sure you are at the right location**. This is the bug tracker\n   of the official version of OctoPrint, which is the 3D print server and\n   corresponding web interface itself.\n\n   **OctoPrint doesn't manage your network connection or your webcam nor\n   can it fix your printer not getting detected as a serial interface** -\n   if you have any kinds of problems with that, get in touch on the\n   [community forum](https://community.octoprint.org).\n\n   **This is not the bug tracker of OctoPi**, which is the preconfigured\n   Raspberry Pi image including OctoPrint among other things - that one can be found\n   [here](https://github.com/guysoft/OctoPi). If you have any kind of specific\n   issue with how the OctoPi system is setup, go there please.\n\n   **This is also not the bug tracker of any OctoPrint Plugins you\n   might have installed**. Report any issues with those in their corresponding\n   bug tracker (probably linked to from the plugin's homepage).\n\n   Finally, **this is also not the right bug tracker if you are running a\n   forked version of OctoPrint**. Seek help for such unofficial versions from\n   the people maintaining them instead.\n\n2. Please make sure to **test out the current version** of OctoPrint to see\n   whether the problem you are encountering still exists, and **test without\n   any third-party plugins enabled** to make sure it's not a misbehaving\n   plugin causing the issue at hand. For that please restart OctoPrint in\n   **safe mode**, either by selecting \"Restart OctoPrint in safe mode\" from\n   the \"System\" menu, or by starting OctoPrint from the command line with\n   `octoprint serve --safe`. Then try to reproduce your issue. Find out\n   more about safe mode in the [docs](https://docs.octoprint.org/en/master/features/safemode.html).\n\n   You might also want to try the current development version of OctoPrint\n   (if you aren't already). Refer to the [FAQ](https://faq.octoprint.org)\n   for information on how to do this.\n\n3. The problem still exists? Then please **look through the\n   [existing tickets](https://github.com/foosel/OctoPrint/issues?state=open)\n   (use the [search](https://github.com/foosel/OctoPrint/search?q=&ref=cmdform&type=Issues))**\n   to check if there already exists a report of the issue you are encountering.\n   Sorting through duplicates of the same issue sometimes causes more work than\n   fixing it. Take the time to filter through possible duplicates and be really\n   sure that your problem definitely is a new one. Try more than one search query\n   (e.g. do not only search for \"timelapse\" if you happen to run into an issue\n   with your webcam, also search for \"recording\" etc). Do not only read the subject lines\n   of tickets that look like they might be related, but also read the ticket itself!\n\n   **Very important:** Please make absolutely sure that if you find a bug that looks like\n   it is the same as your's, it actually behaves the same as your's. E.g. if someone gives steps\n   to reproduce his bug that looks like your's, reproduce the bug like that if possible,\n   and only add a \"me too\" if you actually can reproduce the same\n   issue. Also **provide all information like Systeminfo Bundle, additional logs & versions, different reproduction steps**\n   and whatever was additionally requested over the course of the ticket\n   even if you \"only\" add to an existing ticket. The more information available regarding a bug, the higher\n   the chances of reproducing and solving it. But \"me too\" on an actually unrelated ticket\n   makes it more difficult due to on top of having to figure out the original problem\n   there's now also a [red herring](https://en.wikipedia.org/wiki/Red_herring) interfering - so please be\n   very diligent here!\n\nIf in doubt about any of the above - get in touch on the [community forums](https://community.octoprint.org)\ninstead of opening a ticket here. If you are actually running into a bug, we'll figure it out together\nthere.\n\n### What should I include in a bug report?\n\nFirst of all make sure your use **a descriptive title**. \"It doesn't work\"\nand similar unspecific complaints are NOT descriptive titles.\n\n**Always use the following template, even if only adding a \"me too\" to an\nexisting ticket**:\n\n```\n<!--\nREAD THE FOLLOWING FIRST:\n\nIf not already done, please read the Contribution Guidelines that\nare linked to the right under \"Helpful resources\" > \"Contributing\".\n\nAlso read the FAQ: https://faq.octoprint.org\n\nThis is a bug and feature tracker, please only use it to report bugs\nor request features within OctoPrint (not OctoPi, not any OctoPrint\nplugins and not unofficial OctoPrint versions).\n\nDo not seek support here (\"I need help with ...\", \"I have a\nquestion ...\"), that belongs on the community forum at\ncommunity.octoprint.org, NOT here.\n\nMark requests with a \"[Request]\" prefix in the title please. For bug\nreports fully fill out the bug reporting template (if you don't know\nwhere to find some information - it's all described in the Contribution\nGuidelines linked up there in the big yellow box).\n\nWhen reporting a bug do NOT delete ANY lines from the template.\n\nMake sure any bug you want to report is still present with the CURRENT\nOctoPrint version and that it does not vanish when you start OctoPrint\nin safe mode - how to do that is also explained in the Contribution\nGuidelines linked up there in the big yellow box.\n\nThank you!\n-->\n\n#### What were you doing?\n\n<!--\nPlease be as specific as possible here. The maintainers will need to\nreproduce your issue in order to fix it and that is not possible if they\ndon't know what you did to get it to happen in the first place.\n\nIdeally provide exact steps to follow in order to reproduce your problem:\n-->\n\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n<!--\nIf you encountered a problem with specific files of any sorts, make sure\nto also include a link to a file with which to reproduce the problem.\n-->\n\n#### What did you expect to happen?\n\n#### What happened instead?\n\n#### Did the same happen when running OctoPrint in safe mode?\n\n<!--\nTest if you can reproduce your problem in safe mode. You can find information\non how to enable safe mode in the Contribution Guidelines.\n\nIf you can't reproduce in safe mode, this is a bug with one of your\ninstalled third party plugins. Don't open a ticket here!\n\nIf you can't test this in safe mode, state why.\n-->\n\n#### Version of OctoPrint\n\n<!--\nCan be found in the lower left corner of the web interface. ALWAYS INCLUDE.\n-->\n\n#### Printer model & used firmware incl. version\n\n<!--\nIf applicable, always include if unsure.\n-->\n\n#### Browser and version of browser, operating system running browser\n\n<!--\nIf applicable, always include if unsure.\n-->\n\n#### System Info Bundle\n\n<!--\nDirectly uploaded here. ALWAYS INCLUDE.\n\nThe Contribution Guidelines tell you where to find that.\n-->\n\n#### Link to contents of Javascript console in the browser\n\n<!--\nDirectly uploaded here or on gist.github.com or pastebin.com.\nIf applicable - always include if unsure or reporting UI issues.\n\nThe Contribution Guidelines tell you where to find that.\n-->\n\n#### Screenshot(s)/video(s) showing the problem:\n\n<!--\nIf applicable. Always include if unsure or reporting UI issues.\n-->\n\nI have read the FAQ.\n```\n\nProvide the same kind and amount of information also when you are just adding on to an\nexisting ticket!\n\n### Where can I find the System Info Bundle?\n\nPlease refer to [this FAQ entry](https://community.octoprint.org/t/what-is-a-systeminfo-bundle-and-how-can-i-obtain-one/29887).\n\n### Where can I find which version and branch I'm on?\n\nPlease refer to [this FAQ entry](https://community.octoprint.org/t/how-can-i-find-out-the-version-of-octoprint-or-octopi-i-am-running/204/1).\n\n### Where can I find those log files you keep talking about?\n\nPlease refer to [this FAQ entry](https://community.octoprint.org/t/where-can-i-find-octoprints-and-octopis-log-files/299/1).\n\n### Where can I find my browser's error console?\n\nSee [How to open the Javascript Console in different browsers](https://webmasters.stackexchange.com/questions/8525/how-to-open-the-javascript-console-in-different-browsers)\n\n## Setting up a development environment\n\nSee [the corresponding chapter in the documentation](https://docs.octoprint.org/en/master/development/environment.html).\nThis also includes information on how to run the test suite and how to build\nthe documentation, the bundled virtual printer plugin and OctoPrint's versioning\nand branching strategy.\n\n## Pull requests\n\n1. If you want to add a new feature to OctoPrint, **please always first\n   consider if it wouldn't be better suited for a plugin.** As a general rule\n   of thumb, any feature that is only of interest to a small sub group should\n   be moved into a plugin. If the current plugin system doesn't allow you to\n   implement your feature as a plugin, please get in touch on the\n   [forums](https://community.octoprint.org/c/development) to get\n   the discussion going on how best to solve *this* in OctoPrint's plugin\n   system - maybe that's the actual PR you have been waiting for to contribute :)\n2. If you plan to make **any large or otherwise disruptive changes to the\n   code or appearance, please get in touch on the\n   [forums](https://community.octoprint.org/c/development)** first so\n   that we can determine if it's a good time for your specific pull\n   request. It might be that we're currently in the process of making\n   heavy changes to the code locations you'd target as well, or your\n   approach doesn't fit the general \"project vision\", and that would\n   just cause unnecessary work and frustration for everyone or\n   possibly get the PR rejected.\n3. Create your pull request **from a custom branch** on your end (e.g.\n   `improve/myNewFeature`)[1].\n4. Create your pull request **only against the `maintenance` or `devel` branch**:\n     * if it's a bug fix for a bug in the current stable version, an improvement of existing functionality or a\n       *small* backwards compatible new feature (e.g. a new hook, a new config flag, ...): `maintenance` branch\n     * if it's a bigger backwards compatible new feature: please [get in touch](https://community.octoprint.org/c/development) first to avoid\n       wasting work that doesn't match the current direction of the project or implement as a plugin.\n     * if it's any breaking backwards incompatible change: `devel` branch. In case of big changes, [get in touch](https://community.octoprint.org/c/development) first.\n5. Create **one pull request per feature/bug fix**.\n6. Make sure there are **only relevant changes** included in your PR. No\n   changes to unrelated files, no additional files that don't belong (e.g.\n   commits of your full virtual environment). Make sure your PR consists\n   **ideally of only one commit** (use git's rebase and squash functionality).\n7. Make sure you **follow the current coding style**. This means:\n     * Spaces for indenting and alignment, indentation width 4.\n     * English language (code, variables, comments, ...)\n     * Comments where necessary: Tell *why* the code does something like it does\n       it, structure your code\n     * Following the general architecture\n     * If your PR needs to make changes to the Stylesheets, change the\n       ``.less`` files from which the CSS is compiled.\n     * Make sure you do not add dead code (e.g. commented out left-overs\n       from experiments).\n8. Ensure your changes **pass the existing unit tests**. PRs that break\n   those cannot be accepted. You can run the unit tests locally (after\n   [initial development environment setup with \"develop\" dependencies](https://docs.octoprint.org/en/master/development/environment.html))\n   by running\n\n   ```\n   pytest\n   ```\n\n   in the OctoPrint checkout folder. An [automatic build workflow](https://github.com/OctoPrint/OctoPrint/actions?query=workflow%3ABuild)\n   is also setup so that if the tests should fail, your PR will be marked\n   accordingly.\n9. Run the **pre-commit check suite** against your changes. You can run that (after\n   [initial development environment setup with \"develop\" dependencies](https://docs.octoprint.org/en/master/development/environment.html))\n   by running\n\n   ```\n   pre-commit run --hook-stage manual --all-files\n   ```\n\n   in the OctoPrint checkout folder. If you install the pre-commit hooks via\n   `pre-commit install` (which you really should!) this will even be taken care of for you prior to committing.\n\n   An [automatic build workflow](https://github.com/OctoPrint/OctoPrint/actions?query=workflow%3ABuild)\n   is in place that will run these checks - if they fail your PR will be marked accordingly.\n10. **Test your changes thoroughly**. That also means testing with usage\n    scenarios you don't normally use. If you only test with your printer, test with the\n    virtual printer and vice versa. State in your pull request how you tested\n    your changes. Ideally **add unit tests** - OctoPrint severely lacks in that\n    department, but we are trying to change that, so any new code already covered\n    with a test suite helps a lot!\n11. In your pull request's description, **state what your pull request does**,\n    as in, what feature does it implement, what bug does it fix. The more\n    thoroughly you explain your intent behind the PR here, the higher the\n    chances it will get merged fast. There is a template provided below\n    that can help you here.\n12. Don't forget to **add yourself to the [AUTHORS](./AUTHORS.md)\n    file** :)\n\nTemplate to use for Pull Request descriptions:\n\n```\n#### What does this PR do and why is it necessary?\n\n#### How was it tested? How can it be tested by the reviewer?\n\n#### Any background context you want to provide?\n\n#### What are the relevant tickets if any?\n\n#### Screenshots (if appropriate)\n\n#### Further notes\n```\n\n## How is OctoPrint versioned?\n\nSee [the corresponding chapter in the documentation](https://docs.octoprint.org/en/master/development/versioning.html).\n\n## What do the branches mean?\n\nSee [the corresponding chapter in the documentation](https://docs.octoprint.org/en/master/development/branches.html).\n\n## History\n\n  * 2015-01-23: More guidelines for creating pull requests, support/questions\n    redirected to Mailinglist/G+ community\n  * 2015-01-27: Added another explicit link to the FAQ\n  * 2015-07-07: Added step to add yourself to AUTHORS when creating a PR :)\n  * 2015-12-01: Heavily reworked to include examples, better structure and\n    all information in one document.\n  * 2016-02-10: Added information about branch structure and versioning.\n  * 2016-02-16: Added requirement to add information from template to existing\n    tickets as well, explained issue with \"me too\" red herrings.\n  * 2016-03-14: Some more requirements for PRs, and a PR template.\n  * 2016-06-08: New `prerelease` and `rc` branches explained.\n  * 2016-09-09: New `rc/*` branches explained.\n  * 2016-09-23: Some more work on \"How to file a bug report\" based on recent\n    experiences\n  * 2017-01-25: Fixed a typo\n  * 2017-03-09: Allow PRs against `maintenance` branch for bugs in stable.\n  * 2017-03-10: Reproduce bugs in safe mode to make sure they are really caused\n    by OctoPrint itself and not a misbehaving plugin.\n  * 2017-03-27: Added safe mode section to ticket template.\n  * 2017-11-22: Added note on how to run the unit tests\n  * 2018-03-15: Link to new community forum and some clarifications re bug\n    reporting\n  * 2018-03-29: \"Where to find version numbers\" is now located on the FAQ\n  * 2018-10-18: Allow PRs against `maintenance` branch for improvements and small\n    new features, suggest getting in touch on the forum for larger changes\n  * 2020-08-10: Update versioning scheme and PR instructions\n  * 2020-09-23: Move branch & versioning into development docs\n  * 2020-10-07: Introduce `pre-commit`\n  * 2021-02-04: Issue forms! \\o/\n  * 2021-03-04: Correct issue forms link\n  * 2021-04-27: Systeminfo Bundles! \\o/\n\n## Footnotes\n  * [1] - If you are wondering why, the problem is that anything that you add\n    to your PR's branch will also become part of your PR, so if you create a\n    PR from your version of `devel` chances are high you'll add changes to the\n    PR that do not belong to the PR.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 33.7109375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.3994140625,
          "content": "recursive-include src/octoprint/static *\nrecursive-include src/octoprint/templates *\nrecursive-include src/octoprint/plugins *\nrecursive-include src/octoprint/translations *\ninclude src/octoprint/util/piptestballoon/setup.py\ninclude src/octoprint/_version.py\ninclude src/octoprint/_static_version.py\ninclude requirements.txt\ninclude *.md\nexclude CODE_OF_CONDUCT.md\nexclude SECURITY.md\nexclude CONTRIBUTING.md\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.4453125,
          "content": "<p align=\"center\"><img src=\"https://octoprint.org/assets/img/logo.png\" alt=\"OctoPrint's logo\" /></p>\n\n<h1 align=\"center\">OctoPrint</h1>\n\n<p align=\"center\">\n  <img src=\"https://img.shields.io/github/v/release/OctoPrint/OctoPrint?logo=github&logoColor=white\" alt=\"GitHub release\"/>\n  <img src=\"https://img.shields.io/pypi/v/OctoPrint?logo=python&logoColor=white\" alt=\"PyPI\"/>\n  <img src=\"https://img.shields.io/github/actions/workflow/status/OctoPrint/OctoPrint/build.yml?branch=master\" alt=\"Build status\"/>\n  <a href=\"https://community.octoprint.org\"><img src=\"https://img.shields.io/discourse/users?label=forum&logo=discourse&logoColor=white&server=https%3A%2F%2Fcommunity.octoprint.org\" alt=\"Community Forum\"/></a>\n  <a href=\"https://discord.octoprint.org\"><img src=\"https://img.shields.io/discord/704958479194128507?label=discord&logo=discord&logoColor=white\" alt=\"Discord\"/></a>\n  <a href=\"https://octoprint.org/conduct/\"><img src=\"https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg\" alt=\"Contributor Covenant\"/></a>\n  <a href=\"https://github.com/psf/black\"><img src=\"https://img.shields.io/badge/code%20style-black-000000.svg\" alt=\"Code style: black\"/></a>\n  <a href=\"https://github.com/prettier/prettier\"><img src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square\" alt=\"Code style: prettier\"/></a>\n  <a href=\"https://pycqa.github.io/isort/\"><img src=\"https://img.shields.io/badge/%20imports-isort-%231674b1\" alt=\"Imports: isort\"/></a>\n  <a href=\"https://github.com/pre-commit/pre-commit\"><img src=\"https://img.shields.io/badge/pre--commit-enabled-brightgreen?logo=pre-commit&logoColor=white\" alt=\"pre-commit\"/></a>\n</p>\n\nOctoPrint provides a snappy web interface for controlling consumer 3D printers. It is Free Software\nand released under the [GNU Affero General Public License V3](https://www.gnu.org/licenses/agpl-3.0.html).\n\nIts website can be found at [octoprint.org](https://octoprint.org/?utm_source=github&utm_medium=readme).\n\nThe community forum is available at [community.octoprint.org](https://community.octoprint.org/?utm_source=github&utm_medium=readme). It also serves as a central knowledge base.\n\nAn invite to the Discord server can be found at [discord.octoprint.org](https://discord.octoprint.org).\n\nThe FAQ can be accessed by following [faq.octoprint.org](https://faq.octoprint.org/?utm_source=github&utm_medium=readme).\n\nThe documentation is located at [docs.octoprint.org](https://docs.octoprint.org).\n\nThe official plugin repository can be reached at [plugins.octoprint.org](https://plugins.octoprint.org/?utm_source=github&utm_medium=readme).\n\n**OctoPrint's development wouldn't be possible without the [financial support by its community](https://octoprint.org/support-octoprint/?utm_source=github&utm_medium=readme).\nIf you enjoy OctoPrint, please consider becoming a regular supporter!**\n\n![Screenshot](https://octoprint.org/assets/img/screenshot-readme.png)\n\nYou are currently looking at the source code repository of OctoPrint. If you already installed it\n(e.g. by using the Raspberry Pi targeted distribution [OctoPi](https://github.com/guysoft/OctoPi)) and only\nwant to find out how to use it, [the documentation](https://docs.octoprint.org/) might be of more interest for you. You might also want to subscribe to join\n[the community forum at community.octoprint.org](https://community.octoprint.org) where there are other active users who might be\nable to help you with any questions you might have.\n\n## Contributing\n\nContributions of all kinds are welcome, not only in the form of code but also with regards to the\n[official documentation](https://docs.octoprint.org/), debugging help\nin the [bug tracker](https://github.com/OctoPrint/OctoPrint/issues), support of other users on\n[the community forum at community.octoprint.org](https://community.octoprint.org) or\n[the official discord at discord.octoprint.org](https://discord.octoprint.org)\nand also [financially](https://octoprint.org/support-octoprint/?utm_source=github&utm_medium=readme).\n\nIf you think something is bad about OctoPrint or its documentation the way it is, please help\nin any way to make it better instead of just complaining about it -- this is an Open Source Project\nafter all :)\n\nFor information about how to go about submitting bug reports or pull requests, please see the project's\n[Contribution Guidelines](https://github.com/OctoPrint/OctoPrint/blob/master/CONTRIBUTING.md).\n\n## Installation\n\nInstallation instructions for installing from source for different operating\nsystems can be found [on the forum](https://community.octoprint.org/tags/c/support/guides/15/setup).\n\nIf you want to run OctoPrint on a Raspberry Pi, you really should take a look at [OctoPi](https://github.com/guysoft/OctoPi)\nwhich is a custom SD card image that includes OctoPrint plus dependencies.\n\nThe generic steps that should basically be done regardless of operating system\nand runtime environment are the following (as *regular\nuser*, please keep your hands *off* of the `sudo` command here!) - this assumes\nyou already have Python 3.7+, pip and virtualenv and their dependencies set up on your system:\n\n1. Create a user-owned virtual environment therein: `virtualenv venv`. If you want to specify a specific python\n   to use instead of whatever version your system defaults to, you can also explicitly require that via the `--python`\n   parameter, e.g. `virtualenv --python=python3 venv`.\n2. Install OctoPrint *into that virtual environment*: `./venv/bin/pip install OctoPrint`\n\nYou may then start the OctoPrint server via `/path/to/OctoPrint/venv/bin/octoprint`, see [Usage](#usage)\nfor details.\n\nAfter installation, please make sure you follow the first-run wizard and set up\naccess control as necessary.\n\n## Dependencies\n\nOctoPrint depends on a few python modules to do its job. Those are automatically installed when installing\nOctoPrint via `pip`.\n\nOctoPrint currently supports Python 3.7, 3.8, 3.9, 3.10, 3.11 and 3.12.\n\n## Usage\n\nRunning the pip install via\n\n    pip install OctoPrint\n\ninstalls the `octoprint` script in your Python installation's scripts folder\n(which, depending on whether you installed OctoPrint globally or into a virtual env, will be in your `PATH` or not). The\nfollowing usage examples assume that the `octoprint` script is on your `PATH`.\n\nYou can start the server via\n\n    octoprint serve\n\nBy default it binds to all interfaces on port 5000 (so pointing your browser to `http://127.0.0.1:5000`\nwill do the trick). If you want to change that, use the additional command line parameters `host` and `port`,\nwhich accept the host ip to bind to and the numeric port number respectively. If for example you want the server\nto only listen on the local interface on port 8080, the command line would be\n\n    octoprint serve --host=127.0.0.1 --port=8080\n\nAlternatively, the host and port on which to bind can be defined via the config file.\n\nIf you want to run OctoPrint as a daemon (only supported on Linux), use\n\n    octoprint daemon {start|stop|restart} [--pid PIDFILE]\n\nIf you do not supply a custom pidfile location via `--pid PIDFILE`, it will be created at `/tmp/octoprint.pid`.\n\nYou can also specify the config file or the base directory (for basing off the `uploads`, `timelapse` and `logs` folders),\ne.g.:\n\n    octoprint serve --config /path/to/another/config.yaml --basedir /path/to/my/basedir\n\nTo start OctoPrint in safe mode - which disables all third party plugins that do not come bundled with OctoPrint - use\nthe ``--safe`` flag:\n\n    octoprint serve --safe\n\nSee `octoprint --help` for more information on the available command line parameters.\n\nOctoPrint also ships with a `run` script in its source directory. You can invoke it to start the server. It\ntakes the same command line arguments as the `octoprint` script.\n\n## Configuration\n\nIf not specified via the command line, the config file `config.yaml` for OctoPrint is expected in the settings folder,\nwhich is located at `~/.octoprint` on Linux, at `%APPDATA%/OctoPrint` on Windows and\nat `~/Library/Application Support/OctoPrint` on MacOS.\n\nA comprehensive overview of all available configuration settings can be found\n[in the docs](https://docs.octoprint.org/en/master/configuration/config_yaml.html).\nPlease note that the most commonly used configuration settings can also easily\nbe edited from OctoPrint's settings dialog.\n\n## Special Thanks\n\nCross-browser testing services are kindly provided by [BrowserStack](https://www.browserstack.com/).\n\nProfiling is done with the help of [PyVmMonitor](https://www.pyvmmonitor.com).\n\nError tracking is powered and sponsored by [Sentry](https://sentry.io).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0986328125,
          "content": "# Security Policy\n\nOctoPrint's security policy can be found [here](https://octoprint.org/security/).\n"
        },
        {
          "name": "SUPPORTERS.md",
          "type": "blob",
          "size": 1.89453125,
          "content": "# Supporters\n\nDevelopment of this version of OctoPrint wouldn't have been possible without\n[the financial support by the community](https://support.octoprint.org) -\nthanks to everyone who contributed!\n\n## Patrons & Sponsors\n\n  * 3D-TECH\n  * 3DPrinterOS\n  * Accalia Elementia\n  * Alex Young\n  * Anthony Gainsborough\n  * Ash King\n  * Boris Hussein\n  * Brad Jackson\n  * Bradford Benn\n  * Brandon Robertson\n  * Bruce Meyer\n  * Charles Morgan\n  * Chloe Martin\n  * Chris Heerschap\n  * Christian Petropolis\n  * Christian Wolf\n  * Christian Würthner\n  * Christoph Sigrist\n  * Christopher Heiny\n  * Coltarus Halo\n  * CooperSpartan\n  * David L Weiner\n  * David OMeara\n  * David Pitman\n  * DeltaMaker 3D Printers\n  * Dennis Breining\n  * Dima Gorbenko\n  * Dr. Frank Wester\n  * Ed Crump\n  * Erik Ableson\n  * Ernesto Martinez\n  * Franziska Kunsmann\n  * George Jeng\n  * Happy House\n  * Hog Duske\n  * James Fryman\n  * James Nangano\n  * Jason Kitchens\n  * JCsGotThis\n  * Jeff Moe\n  * John Cassel\n  * Justin Kaufman\n  * Kaile Riser\n  * Kazuhiro Ogura\n  * Keenan Newton\n  * Kenneth Jiang\n  * Khaled Allen\n  * Kureemii\n  * Kurt Wubbels\n  * Lachlan Bell\n  * Lefteris Lertas\n  * LulzBot\n  * Makespace Madrid\n  * Marco van Dijk\n  * Mark Greenwald\n  * Mark Robards\n  * Mark Walker\n  * Martin\n  * Martin Schmitt\n  * Matthew Andersen\n  * Matthias Urlichs\n  * Michael Aumock\n  * Michael Badagliacco\n  * Mike Labanov\n  * Mosaic Manufacturing\n  * Norman Jaffe\n  * Paul McMaster\n  * Printago\n  * Randy C. Will\n  * Ranjib Dey\n  * Richard Stocks\n  * Rik KM\n  * Robert Gusek\n  * Sebastien Andrivet\n  * SimplyPrint\n  * Sinie47\n  * Stefan Krister\n  * TheWebMachine\n  * Tideline 3D\n  * Ulrich Kempken\n\nand 2952 more wonderful people pledging on the [Patreon campaign](https://patreon.com/foosel), on [GitHub Sponsors](https://github.com/users/foosel/sponsorship), via [Ko-fi](https://ko-fi.com/octoprint) or [Donorbox](https://donorbox.org/support-octoprint?recurring=true)!\n"
        },
        {
          "name": "THIRDPARTYLICENSES.md",
          "type": "blob",
          "size": 5.87890625,
          "content": "# Third Party Licenses\n\n## Web Interface\n\n  * [Babel JavaScript Support](https://github.com/mitsuhiko/babel/blob/master/contrib/babel.js): BSD\n  * [@babel/polyfill](https://babeljs.io/docs/en/babel-polyfill/): MIT\n  * [Bootstrap](http://getbootstrap.com/): Apache License 2.0\n  * [Bootstrap Modal](http://jschr.github.io/bootstrap-modal/): Apache License 2.0\n  * [Bootstrap Slider Knockout Binding](https://github.com/cosminstefanxp/bootstrap-slider-knockout-binding): MIT\n  * [Bootstrap Slider](http://seiyria.com/bootstrap-slider/): Apache License 2.0\n  * [Bootstrap Tabdrop](http://www.eyecon.ro/bootstrap-tabdrop): Apache License 2.0\n  * [css-element-queries](https://github.com/marcj/css-element-queries): MIT\n  * [Detect Mobile Browser](http://detectmobilebrowsers.com/): Public Domain\n  * [Flot](http://www.flotcharts.org/): MIT\n  * [Flot Crosshair Plugin](http://www.flotcharts.org/): MIT\n  * [Flot Dashes Plugin](https://github.com/cquartier/flot.dashes): Unlicense\n  * [Flot Resize Plugin](http://www.flotcharts.org/): MIT\n  * [Flot Time Plugin](http://www.flotcharts.org/): MIT\n  * [HLS.js](https://github.com/video-dev/hls.js): Apache License 2.0\n  * [JavaScript MD5](https://github.com/blueimp/JavaScript-MD5): MIT\n  * [JQuery](http://jquery.com/): MIT\n  * [JQuery Bootstrap Wizard](http://github.com/VinceG/twitter-bootstrap-wizard): MIT, GPL (dual licensed)\n  * [JQuery File Upload](https://github.com/blueimp/jQuery-File-Upload): MIT\n  * [JQuery iframe transport](https://github.com/blueimp/jQuery-File-Upload/blob/master/js/jquery.iframe-transport.js): MIT\n  * [JQuery QRCode](http://larsjung.de/jquery-qrcode/): MIT\n  * [JQuery Slimscroll](http://rocha.la/jQuery-slimScroll): MIT, GPL (dual licensed)\n  * [JQuery UI Core, Mouse, Slider and Widget](http://jqueryui.com): MIT\n  * [Knockout](http://knockoutjs.com/): MIT\n  * [LESS](http://lesscss.org): Apache License 2.0\n  * [lodash](https://lodash.com): MIT\n  * [Loglevel](https://github.com/pimterry/loglevel): MIT\n  * [md5.js](https://blueimp.github.io/JavaScript-MD5/): MIT\n  * [Modernizr](http://modernizr.com): MIT\n  * [Moment.js](http://momentjs.com/): MIT\n  * [Pako](https://github.com/nodeca/pako): MIT\n  * [PNotify](http://sciactive.com/pnotify/): GPL, LGPL, MPL (triple licensed)\n  * [pusher.color.js](http://cache.preserve.io/5g18q0pw/index.html) (original link dead): MIT\n  * [SockJS](https://github.com/sockjs/sockjs-client): MIT\n  * [sprintf-js](http://alexei.ro/): BSD\n  * [UAParser.js](https://faisalman.github.io/ua-parser-js/): MIT\n\n## Server\n\n  * [appdirs](http://github.com/ActiveState/appdirs): MIT\n  * [argon2-cffi](https://github.com/hynek/argon2-cffi): MIT\n  * [Awesome-Slugify](https://pypi.python.org/pypi/awesome-slugify): GPLv3\n  * [cachelib](https://github.com/pallets-eco/cachelib/): BSD\n  * [chainmap](https://bitbucket.org/jeunice/chainmap): Python\n  * [Click](http://click.pocoo.org/): BSD\n  * [colorlog](https://github.com/borntyping/python-colorlog): MIT\n  * [emoji](https://github.com/carpedm20/emoji/): BSD\n  * [feedparser](https://github.com/kurtmckee/feedparser): BSD\n  * [filetype](https://h2non.github.io/filetype.py/): MIT\n  * [Flask](https://flask.palletsprojects.com/): BSD\n  * [Flask-Assets](http://github.com/miracle2k/flask-assets): BSD\n  * [Flask-Babel](http://github.com/mitsuhiko/flask-babel): BSD\n  * [Flask-Limiter](https://flask-limiter.readthedocs.org/): MIT\n  * [Flask-Login](https://github.com/maxcountryman/flask-login): MIT\n  * [Flask-Markdown](http://github.com/dcolish/flask-markdown): BSD\n  * [Flask-Principal](http://packages.python.org/Flask-Principal/): MIT\n  * [frozendict](https://github.com/slezica/python-frozendict): MIT\n  * [netaddr](https://github.com/drkjam/netaddr/): BSD\n  * [netifaces](https://github.com/al45tair/netifaces): MIT\n  * [passlib](https://passlib.readthedocs.io/): BSD\n  * [pathvalidate](https://pathvalidate.readthedocs.io/en/latest/index.html): MIT\n  * [pkginfo](http://pypi.python.org/pypi/pkginfo/): Python\n  * [psutil](https://github.com/giampaolo/psutil): BSD\n  * [pydantic](https://github.com/pydantic/pydantic): MIT\n  * [pylru](https://github.com/jlhutch/pylru): GPLv2\n  * [pyserial](http://pyserial.sourceforge.net/): Python\n  * [pytz](http://pythonhosted.org/pytz): MIT\n  * [PyYAML](http://pyyaml.org/wiki/PyYAML): MIT\n  * [requests](http://python-requests.org/): Apache License 2.0\n  * [sarge](http://sarge.readthedocs.org/): BSD\n  * [semantic_version](https://github.com/rbarrois/python-semanticversion): BSD\n  * [sentry-sdk](https://github.com/getsentry/sentry-python): BSD\n  * [SockJS-Tornado](http://github.com/mrjoes/sockjs-tornado/): MIT\n  * [Tornado](http://www.tornadoweb.org/): Apache License 2.0\n  * [typing](https://pypi.org/project/typing/): Python\n  * [watchdog](http://github.com/gorakhargosh/watchdog): Apache License 2.0\n  * [websocket-client](https://github.com/liris/websocket-client): LGPLv3\n  * [wrapt](http://wrapt.readthedocs.org/): BSD\n  * [zeroconf](https://github.com/python-zeroconf/python-zeroconf): LGPLv2\n  * [zipstream-ng](https://github.com/pR0Ps/zipstream-ng): LGPLv3\n\n## Development (testing, documentation generation, etc)\n\n  * [cookiecutter](https://github.com/cookiecutter/cookiecutter): BSD\n  * [ddt](https://github.com/txels/ddt): MIT\n  * [flake8](https://gitlab.com/pycqa/flake8): MIT\n  * [mock](https://github.com/testing-cabal/mock): BSD\n  * [pre-commit](https://github.com/pre-commit/pre-commit): MIT\n  * [pyinstrument](https://github.com/joerick/pyinstrument): BSD\n  * [pytest](https://docs.pytest.org/en/latest/): MIT\n  * [pytest-doctest-custom](http://github.com/danilobellini/pytest-doctest-custom): MIT\n  * [Read the Docs Sphinx Extensions](https://github.com/readthedocs/readthedocs-sphinx-ext): MIT\n  * [Sphinx](http://sphinx-doc.org/): BSD\n  * [sphinxcontrib-httpdomain](https://bitbucket.org/birkenfeld/sphinx-contrib/src/default/httpdomain/): BSD\n  * [sphinxcontrib-mermaid](https://github.com/mgaitan/sphinxcontrib-mermaid): BSD\n  * [sphinx_rtd_theme](https://github.com/snide/sphinx_rtd_theme/): BSD\n"
        },
        {
          "name": "babel.cfg",
          "type": "blob",
          "size": 0.486328125,
          "content": "[python: src/octoprint/**.py]\n\n[jinja2: src/octoprint/templates/**.jinja2]\nsilent=false\nextensions=webassets.ext.jinja2.AssetsExtension, jinja2.ext.do, octoprint.util.jinja.trycatch\n\n[jinja2: src/octoprint/plugins/**.jinja2]\nsilent=false\nextensions=webassets.ext.jinja2.AssetsExtension, jinja2.ext.do, octoprint.util.jinja.trycatch\n\n[javascript: src/octoprint/static/js/app/**.js]\nextract_messages = gettext, ngettext\n\n[javascript: src/octoprint/plugins/**.js]\nextract_messages = gettext, ngettext\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.3759765625,
          "content": "[build-system]\nrequires = [\"setuptools>=40.8.0\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.black]\nline-length = 90\ninclude = '''\n\n(\n    (\n        src\n      | tests\n      | .github\n    ).*\\.pyi?$\n)|(\n    setup\\.py\n)\n'''\nexclude = '''\n\n(\n    src/octoprint/vendor  # we want to still be able to apply patches from upstream w/o\n                          # match issues\n)\n'''\n"
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.138671875,
          "content": "[pytest]\ntestpaths = src tests\naddopts = --doctest-modules\n          --doctest-repr=octoprint.util:pp\n          --ignore=src/octoprint/vendor\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.3095703125,
          "content": "###\n# This file is only here to make sure that something like\n#\n#    pip install -e .[develop]\n#\n# works as expected. Requirements can be found in setup.py in the\n# variables INSTALL_REQUIRES and EXTRA_REQUIRES.\n###\n\n# let's force the regular pypi URL, with https, just to be sure\n-i https://pypi.python.org/simple\n.\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.7294921875,
          "content": "[metadata]\nlicense_files = LICENSE.txt\n\n[bdist_wheel]\nuniversal = 1\n\n[flake8]\nmax-line-length = 90\nextend-ignore = E203, E231, E265, E266, E402, E501, E731, B023, B903, B904, B907, B950, W503\nselect = B,C,E,F,W,T4,B9\nexclude =\n    src/octoprint/vendor\n\n[isort]\nmulti_line_output = 3\ninclude_trailing_comma = True\nforce_grid_wrap = 0\nuse_parentheses = True\nensure_newline_before_comments = True\nline_length = 90\nskip =\n    src/octoprint/vendor\nknown_first_party =\n    octoprint\n    octoprint_setuptools\n    octoprint_client\n\n[codespell]\nskip = *.po,*.min.js,.git,*/vendor/*,*/lib/*,*/bootstrap/*,*/node_modules/*,*/translations/*,*/venv*,*/.*,*/build/*,*/_build/*,setup.cfg,AUTHORS.md\nignore-words = .codespell_ignore_words\nquiet-level = 3\ncount =\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 13.3134765625,
          "content": "# -*- coding: utf-8 -*-\n\n### NOTE #################################################################################\n# This file has to stay format compatible to Python 2, or pip under Python 2 will\n# not be able to detect that OctoPrint requires Python 3 but instead fail with a\n# syntax error.\n#\n# So, no f-strings, no walrus operators, no pyupgrade or codemods.\n##########################################################################################\n\nimport os\nimport sys\n\nsys.path.insert(0, os.path.dirname(__file__))\n\nimport setuptools  # noqa: F401,E402\n\ntry:\n    import octoprint_setuptools  # noqa: F401,E402\nexcept ImportError:\n    octoprint_setuptools = None\n\n# ----------------------------------------------------------------------------------------\n\n# Supported python versions\nPYTHON_REQUIRES = \">=3.7, <3.13\"\n\n# Requirements for setup.py\nSETUP_REQUIRES = []\n\n# Requirements for our application\nbundled_plugins = [\n    \"OctoPrint-FileCheck>=2024.3.27\",\n    \"OctoPrint-FirmwareCheck>=2021.10.11\",\n    \"OctoPrint-PiSupport>=2023.10.10\",\n]\ncore_deps = [\n    \"argon2-cffi>=23.1.0\",\n    \"Babel>=2.12.1,<2.13\",  # breaking changes can happen on minor version increases\n    \"cachelib>=0.10.2,<0.11\",\n    \"Click>=8.1.7,<9\",\n    \"colorlog>=6.7.0,<7\",\n    \"emoji>=2.10.1,<3\",\n    \"feedparser>=6.0.11,<7\",\n    \"filetype>=1.2.0,<2\",\n    \"Flask-Assets>=2.1.0,<3\",\n    \"Flask-Babel>=3.1.0,<4\",\n    \"Flask-Login>=0.6.3,<0.7\",  # breaking changes can happen on minor version increases\n    \"Flask-Limiter>=3.5.0,<4\",\n    \"flask>=2.2.3,<2.3\",  # breaking changes can happen on minor version increases (with deprecation warnings)\n    \"frozendict>=2.4.0,<3\",\n    \"future>=0.18.3,<1\",  # not really needed anymore, but leaving in for py2/3 compat plugins\n    \"markdown>=3.4.4,<3.5\",  # later versions require Python 3.8+\n    \"netaddr>=0.8,<0.9\",  # changelog hints at breaking changes on minor version increases\n    # \"netifaces2>=0.0.21,<0.1\",  # fork of netifaces in Rust, use rolled back due to build issues in some environments\n    \"netifaces>=0.11.0,<0.12\",\n    \"passlib>=1.7.4,<2\",\n    \"pathvalidate>=2.5.2,<3\",\n    \"pkginfo>=1.9.6,<2\",\n    \"psutil>=5.9.8,<6\",\n    \"pydantic==1.10.16\",  # to be kept pinned until https://github.com/pydantic/pydantic/issues/7689 is resolved\n    \"pylru>=1.2.1,<2\",\n    \"pyserial>=3.5,<4\",\n    \"pytz\",\n    \"PyYAML>=6.0.1,<7\",  # changelog at https://github.com/yaml/pyyaml/blob/master/CHANGES\n    \"requests>=2.31.0,<3\",\n    \"sarge==0.1.7.post1\",\n    \"semantic_version>=2.10.0,<3\",\n    \"sentry-sdk>=1.40.0,<2\",\n    \"setuptools\",\n    \"tornado>=6.2,<6.3\",  # later versions require Python 3.8+\n    \"watchdog>=2.3.1,<3\",\n    \"websocket-client==1.6.1\",  # later versions require Python 3.8+, breaking changes can happen on patch version increases, changelog incomplete\n    \"werkzeug>=2.2.3,<2.3\",  # breaking changes can happen on minor version increases\n    \"wrapt>=1.15,<1.16\",\n    \"zeroconf~=0.127\",  # breaking changes can happen on minor version increases (despite semantic versioning)\n    \"zipstream-ng>=1.7.1,<2.0.0\",\n]\nvendored_deps = [\n    \"blinker>=1.6.3,<1.7.0\",  # dependency of flask_principal, later versions require Python 3.8+\n    \"class-doc>=0.2.6,<0.3\",  # dependency of with_attrs_docs\n    \"regex\",  # dependency of awesome-slugify\n    \"unidecode\",  # dependency of awesome-slugify\n]\nplugin_deps = [\n    # \"OctoPrint-Setuptools>=1.0.3\",  # makes sure plugins can import this on setup.py based install\n    \"wheel\",  # makes sure plugins can be built as wheels in OctoPrint's venv, see #4682\n]\n\nINSTALL_REQUIRES = bundled_plugins + core_deps + vendored_deps + plugin_deps\n\n# Additional requirements for optional install options and/or OS-specific dependencies\nEXTRA_REQUIRES = {\n    # Dependencies for OSX\n    \":sys_platform == 'darwin'\": [\n        \"appdirs>=1.4.4,<2\",\n    ],\n    # Dependencies for core development\n    \"develop\": [\n        # Testing dependencies\n        \"ddt\",\n        \"mock>=5.1.0,<6\",\n        \"pytest-doctest-custom>=1.0.0,<2\",\n        \"pytest>=7.3.0,<8\",\n        # pre-commit\n        \"pre-commit\",\n        # profiler\n        \"pyinstrument\",\n    ],\n    # Dependencies for developing OctoPrint plugins\n    \"plugins\": [\"cookiecutter>=2.5.0,<3\"],  # update plugin tutorial when updating this\n    # Dependencies for building the documentation\n    \"docs\": [\n        \"sphinx\",\n        \"sphinxcontrib-httpdomain\",\n        \"sphinxcontrib-mermaid\",\n        \"sphinx_rtd_theme\",\n        \"readthedocs-sphinx-ext\",\n    ],\n}\n\n# ----------------------------------------------------------------------------------------\n# Anything below here is just command setup and general setup configuration\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\n\ndef read_file_contents(path):\n    import io\n\n    with io.open(path, encoding=\"utf-8\") as f:\n        return f.read()\n\n\ndef copy_files_build_py_factory(files, baseclass):\n    class copy_files_build_py(baseclass):\n        files = {}\n\n        def run(self):\n            print(\"RUNNING copy_files_build_py\")\n            if not self.dry_run:\n                import shutil\n\n                for directory, files in self.files.items():\n                    target_dir = os.path.join(self.build_lib, directory)\n                    self.mkpath(target_dir)\n\n                    for entry in files:\n                        if isinstance(entry, tuple):\n                            if len(entry) != 2:\n                                continue\n                            source, dest = entry[0], os.path.join(target_dir, entry[1])\n                        else:\n                            source = entry\n                            dest = os.path.join(target_dir, source)\n\n                        print(\"Copying {} to {}\".format(source, dest))\n                        shutil.copy2(source, dest)\n\n            baseclass.run(self)\n\n    return type(copy_files_build_py)(\n        copy_files_build_py.__name__, (copy_files_build_py,), {\"files\": files}\n    )\n\n\nclass ScanDepsCommand(setuptools.Command):\n    description = \"Scan dependencies for updates\"\n    user_options = []\n\n    PYPI = \"https://pypi.org/simple/{package}/\"\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    def run(self):\n        from collections import namedtuple\n\n        import pkg_resources\n        import requests\n        from packaging.version import parse as parse_version\n\n        Update = namedtuple(\"Update\", [\"name\", \"spec\", \"current\", \"latest\"])\n        update_lower_bounds = []\n        update_bounds = []\n\n        all_requires = list(INSTALL_REQUIRES)\n        for value in EXTRA_REQUIRES.values():\n            all_requires += value\n\n        for r in all_requires:\n            requirement = pkg_resources.Requirement.parse(r)\n\n            resp = requests.get(\n                self.PYPI.format(package=requirement.project_name),\n                headers={\"Accept\": \"application/vnd.pypi.simple.v1+json\"},\n            )\n            resp.raise_for_status()\n\n            def safe_parse_version(version):\n                try:\n                    return parse_version(version)\n                except ValueError:\n                    return None\n\n            data = resp.json()\n            versions = list(\n                filter(\n                    lambda x: x and not x.is_prerelease and not x.is_devrelease,\n                    map(lambda x: safe_parse_version(x), data.get(\"versions\", [])),\n                )\n            )\n            if not versions:\n                continue\n\n            lower = None\n            for spec in requirement.specs:\n                if spec[0] == \">=\":\n                    lower = spec[1]\n                    break\n\n            latest = versions[-1]\n\n            update = Update(requirement.project_name, str(requirement), lower, latest)\n\n            if str(latest) not in requirement:\n                update_bounds.append(update)\n            elif lower and parse_version(lower) < latest:\n                update_lower_bounds.append(update)\n\n        def print_update(update):\n            print(\n                f\"{update.spec}: latest {update.latest}, pypi: https://pypi.org/project/{update.name}/\"\n            )\n\n        print(\"\")\n        print(\"The following dependencies can get their lower bounds updated:\")\n        print(\"\")\n        for update in update_lower_bounds:\n            print_update(update)\n\n        print(\"\")\n        print(\"The following dependencies should get looked at for a full update:\")\n        print(\"\")\n        for update in update_bounds:\n            print_update(update)\n\n\ndef get_version_and_cmdclass(pkg_path):\n    import os\n    from importlib.util import module_from_spec, spec_from_file_location\n\n    spec = spec_from_file_location(\"version\", os.path.join(pkg_path, \"_version.py\"))\n    module = module_from_spec(spec)\n    spec.loader.exec_module(module)\n\n    data = module.get_data()\n    return data[\"version\"], module.get_cmdclass(pkg_path)\n\n\ndef get_cmdclass(cmdclass):\n    # make sure these are always available, even when run by dependabot\n    global octoprint_setuptools, md_to_html_build_py_factory\n\n    from setuptools.command.build_py import build_py as _build_py\n\n    if octoprint_setuptools:\n        # add clean command\n        cmdclass.update(\n            {\n                \"clean\": octoprint_setuptools.CleanCommand.for_options(\n                    source_folder=\"src\", eggs=[\"OctoPrint*.egg-info\"]\n                )\n            }\n        )\n\n        # add translation commands\n        translation_dir = \"translations\"\n        pot_file = os.path.join(translation_dir, \"messages.pot\")\n        bundled_dir = os.path.join(\"src\", \"octoprint\", \"translations\")\n        cmdclass.update(\n            octoprint_setuptools.get_babel_commandclasses(\n                pot_file=pot_file,\n                output_dir=translation_dir,\n                pack_name_prefix=\"OctoPrint-i18n-\",\n                pack_path_prefix=\"\",\n                bundled_dir=bundled_dir,\n            )\n        )\n\n    cmdclass[\"build_py\"] = copy_files_build_py_factory(\n        {\n            \"octoprint/templates/_data\": [\n                \"AUTHORS.md\",\n                \"SUPPORTERS.md\",\n                \"THIRDPARTYLICENSES.md\",\n            ]\n        },\n        cmdclass.get(\"build_py\", _build_py),\n    )\n\n    cmdclass[\"scan_deps\"] = ScanDepsCommand\n\n    return cmdclass\n\n\ndef package_data_dirs(source, sub_folders):\n    dirs = []\n\n    for d in sub_folders:\n        folder = os.path.join(source, d)\n        if not os.path.exists(folder):\n            continue\n\n        for dirname, _, files in os.walk(folder):\n            dirname = os.path.relpath(dirname, source)\n            for f in files:\n                dirs.append(os.path.join(dirname, f))\n\n    return dirs\n\n\nif __name__ == \"__main__\":\n    version, cmdclass = get_version_and_cmdclass(os.path.join(\"src\", \"octoprint\"))\n    setuptools.setup(\n        name=\"OctoPrint\",\n        version=version,\n        cmdclass=get_cmdclass(cmdclass),\n        description=\"The snappy web interface for your 3D printer\",\n        long_description=read_file_contents(os.path.join(here, \"README.md\")),\n        long_description_content_type=\"text/markdown\",\n        python_requires=PYTHON_REQUIRES,\n        setup_requires=SETUP_REQUIRES,\n        install_requires=INSTALL_REQUIRES,\n        extras_require=EXTRA_REQUIRES,\n        classifiers=[\n            \"Development Status :: 5 - Production/Stable\",\n            \"Environment :: Web Environment\",\n            \"Framework :: Flask\",\n            \"Intended Audience :: Developers\",\n            \"Intended Audience :: Education\",\n            \"Intended Audience :: End Users/Desktop\",\n            \"Intended Audience :: Manufacturing\",\n            \"Intended Audience :: Other Audience\",\n            \"Intended Audience :: Science/Research\",\n            \"License :: OSI Approved :: GNU Affero General Public License v3\",\n            \"Natural Language :: English\",\n            \"Natural Language :: German\",\n            \"Operating System :: OS Independent\",\n            \"Programming Language :: Python\",\n            \"Programming Language :: Python :: 3\",\n            \"Programming Language :: Python :: 3.7\",\n            \"Programming Language :: Python :: 3.8\",\n            \"Programming Language :: Python :: 3.9\",\n            \"Programming Language :: Python :: 3.10\",\n            \"Programming Language :: Python :: 3.11\",\n            \"Programming Language :: Python :: 3.12\",\n            \"Programming Language :: Python :: 3 :: Only\",\n            \"Programming Language :: Python :: Implementation :: CPython\",\n            \"Programming Language :: JavaScript\",\n            \"Topic :: Printing\",\n            \"Topic :: System :: Monitoring\",\n        ],\n        author=\"Gina Häußge\",\n        author_email=\"gina@octoprint.org\",\n        url=\"https://octoprint.org\",\n        license=\"GNU Affero General Public License v3\",\n        keywords=\"3dprinting 3dprinter 3d-printing 3d-printer octoprint\",\n        project_urls={\n            \"Community Forum\": \"https://community.octoprint.org\",\n            \"Bug Reports\": \"https://github.com/OctoPrint/OctoPrint/issues\",\n            \"Source\": \"https://github.com/OctoPrint/OctoPrint\",\n            \"Funding\": \"https://support.octoprint.org\",\n        },\n        packages=setuptools.find_packages(where=\"src\"),\n        package_dir={\"\": \"src\"},\n        package_data={\n            \"octoprint\": package_data_dirs(\n                \"src/octoprint\", [\"static\", \"templates\", \"plugins\", \"translations\"]\n            )\n            + [\"util/piptestballoon/setup.py\"]\n        },\n        include_package_data=True,\n        zip_safe=False,\n        entry_points={\"console_scripts\": [\"octoprint = octoprint:main\"]},\n    )\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}