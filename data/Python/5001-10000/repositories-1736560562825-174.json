{
  "metadata": {
    "timestamp": 1736560562825,
    "page": 174,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FlareSolverr/FlareSolverr",
      "stars": 8311,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0458984375,
          "content": ".git/\n.github/\n.idea/\nhtml_samples/\nresources/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.6005859375,
          "content": "# Editors\r\n.vscode/\r\n.idea/\r\n\r\n# Vagrant\r\n.vagrant/\r\n\r\n# Mac/OSX\r\n.DS_Store\r\n\r\n# Windows\r\nThumbs.db\r\n\r\n# Source for the following rules: https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore\r\n# Byte-compiled / optimized / DLL files\r\n__pycache__/\r\n*.py[cod]\r\n*$py.class\r\n\r\n# C extensions\r\n*.so\r\n\r\n# Distribution / packaging\r\n.Python\r\nbuild/\r\ndevelop-eggs/\r\ndist/\r\ndist_chrome/\r\ndownloads/\r\neggs/\r\n.eggs/\r\nlib/\r\nlib64/\r\nparts/\r\nsdist/\r\nvar/\r\nwheels/\r\n*.egg-info/\r\n.installed.cfg\r\n*.egg\r\nMANIFEST\r\n\r\n# PyInstaller\r\n#  Usually these files are written by a python script from a template\r\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\r\n*.manifest\r\n*.spec\r\n\r\n# Installer logs\r\npip-log.txt\r\npip-delete-this-directory.txt\r\n\r\n# Unit test / coverage reports\r\nhtmlcov/\r\n.tox/\r\n.nox/\r\n.coverage\r\n.coverage.*\r\n.cache\r\nnosetests.xml\r\ncoverage.xml\r\n*.cover\r\n.hypothesis/\r\n.pytest_cache/\r\n\r\n# Translations\r\n*.mo\r\n*.pot\r\n\r\n# Django stuff:\r\n*.log\r\nlocal_settings.py\r\ndb.sqlite3\r\n\r\n# Flask stuff:\r\ninstance/\r\n.webassets-cache\r\n\r\n# Scrapy stuff:\r\n.scrapy\r\n\r\n# Sphinx documentation\r\ndocs/_build/\r\n\r\n# PyBuilder\r\ntarget/\r\n\r\n# Jupyter Notebook\r\n.ipynb_checkpoints\r\n\r\n# IPython\r\nprofile_default/\r\nipython_config.py\r\n\r\n# pyenv\r\n.python-version\r\n\r\n# celery beat schedule file\r\ncelerybeat-schedule\r\n\r\n# SageMath parsed files\r\n*.sage.py\r\n\r\n# Environments\r\n.env\r\n.venv\r\nenv/\r\nvenv/\r\nENV/\r\nenv.bak/\r\nvenv.bak/\r\n\r\n# Spyder project settings\r\n.spyderproject\r\n.spyproject\r\n\r\n# Rope project settings\r\n.ropeproject\r\n\r\n# mkdocs documentation\r\n/site\r\n\r\n# mypy\r\n.mypy_cache/\r\n.dmypy.json\r\ndmypy.json\r\n\r\n# node\r\nnode_modules/"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 12.814453125,
          "content": "# Changelog\n\n## v3.3.21 (2024/06/26)\n* Add challenge selector to catch reloading page on non-English systems\n* Escape values for generated form used in request.post. Thanks @mynameisbogdan\n\n## v3.3.20 (2024/06/21)\n* maxTimeout should always be int\n* Check not running in Docker before logging version_main error\n* Update Cloudflare challenge and checkbox selectors. Thanks @tenettow & @21hsmw\n\n## v3.3.19 (2024/05/23)\n* Fix occasional headless issue on Linux when set to \"false\". Thanks @21hsmw\n\n## v3.3.18 (2024/05/20)\n\n* Fix LANG ENV for Linux\n* Fix Chrome v124+ not closing on Windows. Thanks @RileyXX\n\n## v3.3.17 (2024/04/09)\n\n* Fix file descriptor leak in service on quit(). Thanks @zkulis\n\n## v3.3.16 (2024/02/28)\n\n* Fix of the subprocess.STARTUPINFO() call. Thanks @ceconelo\n* Add FreeBSD support. Thanks @Asthowen\n* Use headless configuration properly. Thanks @hashworks\n\n## v3.3.15 (2024/02/20)\n\n* Fix looping challenges\n\n## v3.3.14-hotfix2 (2024/02/17)\n\n* Hotfix 2 - bad Chromium build, instances failed to terminate\n\n## v3.3.14-hotfix (2024/02/17)\n\n* Hotfix for Linux build - some Chrome files no longer exist\n\n## v3.3.14 (2024/02/17)\n\n* Update Chrome downloads. Thanks @opemvbs\n\n## v3.3.13 (2024/01/07)\n\n* Fix too many open files error\n\n## v3.3.12 (2023/12/15)\n\n* Fix looping challenges and invalid cookies\n\n## v3.3.11 (2023/12/11)\n\n* Update UC 3.5.4 & Selenium 4.15.2. Thanks @txtsd\n\n## v3.3.10 (2023/11/14)\n\n* Add LANG ENV - resolves issues with YGGtorrent\n\n## v3.3.9 (2023/11/13)\n\n* Fix for Docker build, capture TypeError\n\n## v3.3.8 (2023/11/13)\n\n* Fix headless=true for Chrome 117+. Thanks @NabiKAZ\n* Support running Chrome 119 from source. Thanks @koleg and @Chris7X\n* Fix \"OSError: [WinError 6] The handle is invalid\" on exit. Thanks @enesgorkemgenc\n\n## v3.3.7 (2023/11/05)\n\n* Bump to rebuild. Thanks @JoachimDorchies\n\n## v3.3.6 (2023/09/15)\n\n* Update checkbox selector, again\n\n## v3.3.5 (2023/09/13)\n\n* Change checkbox selector, support languages other than English\n\n## v3.3.4 (2023/09/02)\n\n* Update checkbox selector\n\n## v3.3.3 (2023/08/31)\n\n* Update undetected_chromedriver to v3.5.3\n\n## v3.3.2 (2023/08/03)\n\n* Fix URL domain in Prometheus exporter\n\n## v3.3.1 (2023/08/03)\n\n* Fix for Cloudflare verify checkbox\n* Fix HEADLESS=false in Windows binary\n* Fix Prometheus exporter for management and health endpoints\n* Remove misleading stack trace when the verify checkbox is not found\n* Revert \"Update base Docker image to Debian Bookworm\" #849\n* Revert \"Install Chromium 115 from Debian testing\" #849\n\n## v3.3.0 (2023/08/02)\n\n* Fix for new Cloudflare detection. Thanks @cedric-bour for #845\n* Add support for proxy authentication username/password. Thanks @jacobprice808\tfor #807\n* Implement Prometheus metrics\n* Fix Chromium Driver for Chrome / Chromium version > 114\n* Use Chromium 115 in binary packages (Windows and Linux)\n* Install Chromium 115 from Debian testing (Docker)\n* Update base Docker image to Debian Bookworm\n* Update Selenium 4.11.2\n* Update pyinstaller 5.13.0\n* Add more traces in build_package.py\n\n## v3.2.2 (2023/07/16)\n\n* Workaround for updated 'verify you are human' check\n\n## v3.2.1 (2023/06/10)\n\n* Kill dead Chrome processes in Windows\n* Fix Chrome GL erros in ASUSTOR NAS\n\n## v3.2.0 (2023/05/23)\n\n* Support \"proxy\" param in requests and sessions\n* Support \"cookies\" param in requests\n* Fix Chromium exec permissions in Linux package\n* Update Python dependencies\n\n## v3.1.2 (2023/04/02)\n\n* Fix headless mode in macOS\n* Remove redundant artifact from Windows binary package\n* Bump Selenium dependency\n\n## v3.1.1 (2023/03/25)\n\n* Distribute binary executables in compressed package\n* Add icon for binary executable\n* Include information about supported architectures in the readme\n* Check Python version on start\n\n## v3.1.0 (2023/03/20)\n\n* Build binaries for Linux x64 and Windows x64\n* Sessions with auto-creation on fetch request and TTL\n* Fix error trace: Crash Reports/pending No such file or directory\n* Fix Waitress server error with asyncore_use_poll=true\n* Attempt to fix Docker ARM32 build\n* Print platform information on start up\n* Add Fairlane challenge selector\n* Update DDOS-GUARD title\n* Update dependencies\n\n## v3.0.4 (2023/03/07)\n\n* Click on the Cloudflare's 'Verify you are human' button if necessary\n\n## v3.0.3 (2023/03/06)\n\n* Update undetected_chromedriver version to 3.4.6\n\n## v3.0.2 (2023/01/08)\n\n* Detect Cloudflare blocked access\n* Check Chrome / Chromium web browser is installed correctly\n\n## v3.0.1 (2023/01/06)\n\n* Kill Chromium processes properly to avoid defunct/zombie processes\n* Update undetected-chromedriver\n* Disable Zygote sandbox in Chromium browser\n* Add more selectors to detect blocked access\n* Include procps (ps), curl and vim packages in the Docker image\n\n## v3.0.0 (2023/01/04)\n\n* This is the first release of FlareSolverr v3. There are some breaking changes\n* Docker images for linux/386, linux/amd64, linux/arm/v7 and linux/arm64/v8\n* Replaced Firefox with Chrome\n* Replaced NodeJS / Typescript with Python\n* Replaced Puppeter with Selenium\n* No binaries for Linux / Windows. You have to use the Docker image or install from Source code\n* No proxy support\n* No session support\n\n## v2.2.10 (2022/10/22)\n\n* Detect DDoS-Guard through title content\n\n## v2.2.9 (2022/09/25)\n\n* Detect Cloudflare Access Denied\n* Commit the complete changelog\n\n## v2.2.8 (2022/09/17)\n\n* Remove 30 s delay and clean legacy code\n\n## v2.2.7 (2022/09/12)\n\n* Temporary fix: add 30s delay\n* Update README.md\n\n## v2.2.6 (2022/07/31)\n\n* Fix Cloudflare detection in POST requests\n\n## v2.2.5 (2022/07/30)\n\n* Update GitHub actions to build executables with NodeJs 16\n* Update Cloudflare selectors and add HTML samples\n* Install Firefox 94 instead of the latest Nightly\n* Update dependencies\n* Upgrade Puppeteer (#396)\n\n## v2.2.4 (2022/04/17)\n\n* Detect DDoS-Guard challenge\n\n## v2.2.3 (2022/04/16)\n\n* Fix 2000 ms navigation timeout\n* Update README.md (libseccomp2 package in Debian)\n* Update README.md (clarify proxy parameter) (#307)\n* Update NPM dependencies\n* Disable Cloudflare ban detection\n\n## v2.2.2 (2022/03/19)\n\n* Fix ban detection. Resolves #330 (#336)\n\n## v2.2.1 (2022/02/06)\n\n* Fix max timeout error in some pages\n* Avoid crashing in NodeJS 17 due to Unhandled promise rejection\n* Improve proxy validation and debug traces\n* Remove @types/puppeteer dependency\n\n## v2.2.0 (2022/01/31)\n\n* Increase default BROWSER_TIMEOUT=40000 (40 seconds)\n* Fix Puppeter deprecation warnings\n* Update base Docker image Alpine 3.15 / NodeJS 16\n* Build precompiled binaries with NodeJS 16\n* Update Puppeter and other dependencies\n* Add support for Custom CloudFlare challenge\n* Add support for DDoS-GUARD challenge\n\n## v2.1.0 (2021/12/12)\n\n* Add aarch64 to user agents to be replaced (#248)\n* Fix SOCKSv4 and SOCKSv5 proxy. resolves #214 #220\n* Remove redundant JSON key (postData) (#242)\n* Make test URL configurable with TEST_URL env var. resolves #240\n* Bypass new Cloudflare protection\n* Update donation links\n\n## v2.0.2 (2021/10/31)\n\n* Fix SOCKS5 proxy. Resolves #214\n* Replace Firefox ERS with a newer version\n* Catch startup exceptions and give some advices\n* Add env var BROWSER_TIMEOUT for slow systems\n* Fix NPM warning in Docker images\n\n## v2.0.1 (2021/10/24)\n\n* Check user home dir before testing web browser installation\n\n## v2.0.0 (2021/10/20)\n\nFlareSolverr 2.0.0 is out with some important changes:\n\n* It is capable of solving the automatic challenges of Cloudflare. CAPTCHAs (hCaptcha) cannot be resolved and the old solvers have been removed.\n* The Chrome browser has been replaced by Firefox. This has caused some functionality to be removed. Parameters: `userAgent`, `headers`, `rawHtml` and `downloadare` no longer available.\n* Included `proxy` support without user/password credentials. If you are writing your own integration with FlareSolverr, make sure your client uses the same User-Agent header and Proxy that FlareSolverr uses. Those values together with the Cookie are checked and detected by Cloudflare.\n* FlareSolverr has been rewritten from scratch. From now on it should be easier to maintain and test.\n* If you are using Jackett make sure you have version v0.18.1041 or higher. FlareSolverSharp v2.0.0 is out too.\n\nComplete changelog:\n\n* Bump version 2.0.0\n* Set puppeteer timeout half of maxTimeout param. Resolves #180\n* Add test for blocked IP\n* Avoid reloading the page in case of error\n* Improve Cloudflare detection\n* Fix version\n* Fix browser preferences and proxy\n* Fix request.post method and clean error traces\n* Use Firefox ESR for Docker images\n* Improve Firefox start time and code clean up\n* Improve bad request management and tests\n* Build native packages with Firefox\n* Update readme\n* Improve Docker image and clean TODOs\n* Add proxy support\n* Implement request.post method for Firefox\n* Code clean up, remove returnRawHtml, download, headers params\n* Remove outdated chaptcha solvers\n* Refactor the app to use Express server and Jest for tests\n* Fix Cloudflare resolver for Linux ARM builds\n* Fix Cloudflare resolver\n* Replace Chrome web browser with Firefox\n* Remove userAgent parameter since any modification is detected by CF\n* Update dependencies\n* Remove Puppeter steath plugin\n\n## v1.2.9 (2021/08/01)\n\n* Improve \"Execution context was destroyed\" error handling\n* Implement returnRawHtml parameter. resolves #172 resolves #165\n* Capture Docker stop signal. resolves #158\n* Reduce Docker image size 20 MB\n* Fix page reload after challenge is solved. resolves #162 resolves #143\n* Avoid loading images/css/fonts to speed up page load\n* Improve Cloudflare IP ban detection\n* Fix vulnerabilities\n\n## v1.2.8 (2021/06/01)\n\n* Improve old JS challenge waiting. Resolves #129\n\n## v1.2.7 (2021/06/01)\n\n* Improvements in Cloudflare redirect detection. Resolves #140\n* Fix installation instructions\n\n## v1.2.6 (2021/05/30)\n\n* Handle new Cloudflare challenge. Resolves #135 Resolves #134\n* Provide reference Systemd unit file. Resolves #72\n* Fix EACCES: permission denied, open '/tmp/flaresolverr.txt'. Resolves #120\n* Configure timezone with TZ env var. Resolves #109\n* Return the redirected URL in the response (#126)\n* Show an error in hcaptcha-solver. Resolves #132\n* Regenerate package-lock.json lockfileVersion 2\n* Update issue template. Resolves #130\n* Bump ws from 7.4.1 to 7.4.6 (#137)\n* Bump hosted-git-info from 2.8.8 to 2.8.9 (#124)\n* Bump lodash from 4.17.20 to 4.17.21 (#125)\n\n## v1.2.5 (2021/04/05)\n\n* Fix memory regression, close test browser\n* Fix release-docker GitHub action\n\n## v1.2.4 (2021/04/04)\n\n* Include license in release zips. resolves #75\n* Validate Chrome is working at startup\n* Speedup Docker image build\n* Add health check endpoint\n* Update issue template\n* Minor improvements in debug traces\n* Validate environment variables at startup. resolves #101\n* Add FlareSolverr logo. resolves #23\n\n## v1.2.3 (2021/01/10)\n\n* CI/CD: Generate release changelog from commits. resolves #34\n* Update README.md\n* Add donation links\n* Simplify docker-compose.yml\n* Allow to configure \"none\" captcha resolver\n* Override docker-compose.yml variables via .env resolves #64 (#66)\n\n## v1.2.2 (2021/01/09)\n\n* Add documentation for precompiled binaries installation\n* Add instructions to set environment variables in Windows\n* Build Windows and Linux binaries. resolves #18\n* Add release badge in the readme\n* CI/CD: Generate release changelog from commits. resolves #34\n* Add a notice about captcha solvers\n* Add Chrome flag --disable-dev-shm-usage to fix crashes. resolves #45\n* Fix Docker CLI documentation\n* Add traces with captcha solver service. resolves #39\n* Improve logic to detect Cloudflare captcha. resolves #48\n* Move Cloudflare provider logic to his own class\n* Simplify and document the \"return only cookies\" parameter\n* Show message when debug log is enabled\n* Update readme to add more clarifications. resolves #53 (#60)\n* issue_template: typo fix (#52)\n\n## v1.2.1 (2020/12/20)\n\n* Change version to match release tag / 1.2.0 => v1.2.0\n* CI/CD Publish release in GitHub repository. resolves #34\n* Add welcome message in / endpoint\n* Rewrite request timeout handling (maxTimeout) resolves #42\n* Add http status for better logging\n* Return an error when no selectors are found, #25\n* Add issue template, fix #32\n* Moving log.html right after loading the page and add one on reload, fix #30\n* Update User-Agent to match chromium version, ref: #15 (#28)\n* Update install from source code documentation\n* Update readme to add Docker instructions (#20)\n* Clean up readme (#19)\n* Add docker-compose\n* Change default log level to info\n\n## v1.2.0 (2020/12/20)\n\n* Fix User-Agent detected by CouldFlare (Docker ARM) resolves #15\n* Include exception message in error response\n* CI/CD: Rename GitHub Action build => publish\n* Bump version\n* Fix TypeScript compilation and bump minor version\n* CI/CD: Bump minor version\n* CI/CD: Configure GitHub Actions\n* CI/CD: Configure GitHub Actions\n* CI/CD: Bump minor version\n* CI/CD: Configure Build GitHub Action\n* CI/CD: Configure AutoTag GitHub Action (#14)\n* CI/CD: Build the Docker images with GitHub Actions (#13)\n* Update dependencies\n* Backport changes from Cloudproxy (#11)\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 3.0400390625,
          "content": "FROM python:3.11-slim-bullseye as builder\n\n# Build dummy packages to skip installing them and their dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends equivs \\\n    && equivs-control libgl1-mesa-dri \\\n    && printf 'Section: misc\\nPriority: optional\\nStandards-Version: 3.9.2\\nPackage: libgl1-mesa-dri\\nVersion: 99.0.0\\nDescription: Dummy package for libgl1-mesa-dri\\n' >> libgl1-mesa-dri \\\n    && equivs-build libgl1-mesa-dri \\\n    && mv libgl1-mesa-dri_*.deb /libgl1-mesa-dri.deb \\\n    && equivs-control adwaita-icon-theme \\\n    && printf 'Section: misc\\nPriority: optional\\nStandards-Version: 3.9.2\\nPackage: adwaita-icon-theme\\nVersion: 99.0.0\\nDescription: Dummy package for adwaita-icon-theme\\n' >> adwaita-icon-theme \\\n    && equivs-build adwaita-icon-theme \\\n    && mv adwaita-icon-theme_*.deb /adwaita-icon-theme.deb\n\nFROM python:3.11-slim-bullseye\n\n# Copy dummy packages\nCOPY --from=builder /*.deb /\n\n# Install dependencies and create flaresolverr user\n# You can test Chromium running this command inside the container:\n#    xvfb-run -s \"-screen 0 1600x1200x24\" chromium --no-sandbox\n# The error traces is like this: \"*** stack smashing detected ***: terminated\"\n# To check the package versions available you can use this command:\n#    apt-cache madison chromium\nWORKDIR /app\n    # Install dummy packages\nRUN dpkg -i /libgl1-mesa-dri.deb \\\n    && dpkg -i /adwaita-icon-theme.deb \\\n    # Install dependencies\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends chromium chromium-common chromium-driver xvfb dumb-init \\\n        procps curl vim xauth \\\n    # Remove temporary files and hardware decoding libraries\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -f /usr/lib/x86_64-linux-gnu/libmfxhw* \\\n    && rm -f /usr/lib/x86_64-linux-gnu/mfx/* \\\n    # Create flaresolverr user\n    && useradd --home-dir /app --shell /bin/sh flaresolverr \\\n    && mv /usr/bin/chromedriver chromedriver \\\n    && chown -R flaresolverr:flaresolverr .\n\n# Install Python dependencies\nCOPY requirements.txt .\nRUN pip install -r requirements.txt \\\n    # Remove temporary files\n    && rm -rf /root/.cache\n\nUSER flaresolverr\n\nRUN mkdir -p \"/app/.config/chromium/Crash Reports/pending\"\n\nCOPY src .\nCOPY package.json ../\n\nEXPOSE 8191\nEXPOSE 8192\n\n# dumb-init avoids zombie chromium processes\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n\nCMD [\"/usr/local/bin/python\", \"-u\", \"/app/flaresolverr.py\"]\n\n# Local build\n# docker build -t ngosang/flaresolverr:3.3.21 .\n# docker run -p 8191:8191 ngosang/flaresolverr:3.3.21\n\n# Multi-arch build\n# docker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n# docker buildx create --use\n# docker buildx build -t ngosang/flaresolverr:3.3.21 --platform linux/386,linux/amd64,linux/arm/v7,linux/arm64/v8 .\n#   add --push to publish in DockerHub\n\n# Test multi-arch build\n# docker run --rm --privileged multiarch/qemu-user-static --reset -p yes\n# docker buildx create --use\n# docker buildx build -t ngosang/flaresolverr:3.3.21 --platform linux/arm/v7 --load .\n# docker run -p 8191:8191 --platform linux/arm/v7 ngosang/flaresolverr:3.3.21\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0732421875,
          "content": "MIT License\n\nCopyright (c) 2023 Diego Heras (ngosang / ngosang@hotmail.es)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.494140625,
          "content": "# FlareSolverr\r\n\r\n[![Latest release](https://img.shields.io/github/v/release/FlareSolverr/FlareSolverr)](https://github.com/FlareSolverr/FlareSolverr/releases)\r\n[![Docker Pulls](https://img.shields.io/docker/pulls/flaresolverr/flaresolverr)](https://hub.docker.com/r/flaresolverr/flaresolverr/)\r\n[![GitHub issues](https://img.shields.io/github/issues/FlareSolverr/FlareSolverr)](https://github.com/FlareSolverr/FlareSolverr/issues)\r\n[![GitHub pull requests](https://img.shields.io/github/issues-pr/FlareSolverr/FlareSolverr)](https://github.com/FlareSolverr/FlareSolverr/pulls)\r\n[![Donate PayPal](https://img.shields.io/badge/Donate-PayPal-yellow.svg)](https://www.paypal.com/paypalme/diegoheras0xff)\r\n[![Donate Bitcoin](https://img.shields.io/badge/Donate-Bitcoin-f7931a.svg)](https://www.blockchain.com/btc/address/13Hcv77AdnFWEUZ9qUpoPBttQsUT7q9TTh)\r\n[![Donate Ethereum](https://img.shields.io/badge/Donate-Ethereum-8c8c8c.svg)](https://www.blockchain.com/eth/address/0x0D1549BbB00926BF3D92c1A8A58695e982f1BE2E)\r\n\r\nFlareSolverr is a proxy server to bypass Cloudflare and DDoS-GUARD protection.\r\n\r\n## How it works\r\n\r\nFlareSolverr starts a proxy server, and it waits for user requests in an idle state using few resources.\r\nWhen some request arrives, it uses [Selenium](https://www.selenium.dev) with the\r\n[undetected-chromedriver](https://github.com/ultrafunkamsterdam/undetected-chromedriver)\r\nto create a web browser (Chrome). It opens the URL with user parameters and waits until the Cloudflare challenge\r\nis solved (or timeout). The HTML code and the cookies are sent back to the user, and those cookies can be used to\r\nbypass Cloudflare using other HTTP clients.\r\n\r\n**NOTE**: Web browsers consume a lot of memory. If you are running FlareSolverr on a machine with few RAM, do not make\r\nmany requests at once. With each request a new browser is launched.\r\n\r\nIt is also possible to use a permanent session. However, if you use sessions, you should make sure to close them as\r\nsoon as you are done using them.\r\n\r\n## Installation\r\n\r\n### Docker\r\n\r\nIt is recommended to install using a Docker container because the project depends on an external browser that is\r\nalready included within the image.\r\n\r\nDocker images are available in:\r\n* GitHub Registry => https://github.com/orgs/FlareSolverr/packages/container/package/flaresolverr\r\n* DockerHub => https://hub.docker.com/r/flaresolverr/flaresolverr\r\n\r\nSupported architectures are:\r\n\r\n| Architecture | Tag          |\r\n|--------------|--------------|\r\n| x86          | linux/386    |\r\n| x86-64       | linux/amd64  |\r\n| ARM32        | linux/arm/v7 |\r\n| ARM64        | linux/arm64  |\r\n\r\nWe provide a `docker-compose.yml` configuration file. Clone this repository and execute\r\n`docker-compose up -d` _(Compose V1)_ or `docker compose up -d` _(Compose V2)_ to start\r\nthe container.\r\n\r\nIf you prefer the `docker cli` execute the following command.\r\n```bash\r\ndocker run -d \\\r\n  --name=flaresolverr \\\r\n  -p 8191:8191 \\\r\n  -e LOG_LEVEL=info \\\r\n  --restart unless-stopped \\\r\n  ghcr.io/flaresolverr/flaresolverr:latest\r\n```\r\n\r\nIf your host OS is Debian, make sure `libseccomp2` version is 2.5.x. You can check the version with `sudo apt-cache policy libseccomp2` \r\nand update the package with `sudo apt install libseccomp2=2.5.1-1~bpo10+1` or `sudo apt install libseccomp2=2.5.1-1+deb11u1`.\r\nRemember to restart the Docker daemon and the container after the update.\r\n\r\n### Precompiled binaries\r\n\r\n> **Warning**\r\n> Precompiled binaries are only available for x64 architecture. For other architectures see Docker images.\r\n\r\nThis is the recommended way for Windows users.\r\n* Download the [FlareSolverr executable](https://github.com/FlareSolverr/FlareSolverr/releases) from the release's page. It is available for Windows x64 and Linux x64.\r\n* Execute FlareSolverr binary. In the environment variables section you can find how to change the configuration.\r\n\r\n### From source code\r\n\r\n> **Warning**\r\n> Installing from source code only works for x64 architecture. For other architectures see Docker images.\r\n\r\n* Install [Python 3.11](https://www.python.org/downloads/).\r\n* Install [Chrome](https://www.google.com/intl/en_us/chrome/) (all OS) or [Chromium](https://www.chromium.org/getting-involved/download-chromium/) (just Linux, it doesn't work in Windows) web browser.\r\n* (Only in Linux) Install [Xvfb](https://en.wikipedia.org/wiki/Xvfb) package.\r\n* (Only in macOS) Install [XQuartz](https://www.xquartz.org/) package.\r\n* Clone this repository and open a shell in that path.\r\n* Run `pip install -r requirements.txt` command to install FlareSolverr dependencies.\r\n* Run `python src/flaresolverr.py` command to start FlareSolverr.\r\n\r\n### From source code (FreeBSD/TrueNAS CORE)\r\n\r\n* Run `pkg install chromium python39 py39-pip xorg-vfbserver` command to install the required dependencies.\r\n* Clone this repository and open a shell in that path.\r\n* Run `python3.9 -m pip install -r requirements.txt` command to install FlareSolverr dependencies.\r\n* Run `python3.9 src/flaresolverr.py` command to start FlareSolverr.\r\n\r\n### Systemd service\r\n\r\nWe provide an example Systemd unit file `flaresolverr.service` as reference. You have to modify the file to suit your needs: paths, user and environment variables.\r\n\r\n## Usage\r\n\r\nExample Bash request:\r\n```bash\r\ncurl -L -X POST 'http://localhost:8191/v1' \\\r\n-H 'Content-Type: application/json' \\\r\n--data-raw '{\r\n  \"cmd\": \"request.get\",\r\n  \"url\": \"http://www.google.com/\",\r\n  \"maxTimeout\": 60000\r\n}'\r\n```\r\n\r\nExample Python request:\r\n```py\r\nimport requests\r\n\r\nurl = \"http://localhost:8191/v1\"\r\nheaders = {\"Content-Type\": \"application/json\"}\r\ndata = {\r\n    \"cmd\": \"request.get\",\r\n    \"url\": \"http://www.google.com/\",\r\n    \"maxTimeout\": 60000\r\n}\r\nresponse = requests.post(url, headers=headers, json=data)\r\nprint(response.text)\r\n```\r\n\r\nExample PowerShell request:\r\n```ps1\r\n$body = @{\r\n    cmd = \"request.get\"\r\n    url = \"http://www.google.com/\"\r\n    maxTimeout = 60000\r\n} | ConvertTo-Json\r\n\r\nirm -UseBasicParsing 'http://localhost:8191/v1' -Headers @{\"Content-Type\"=\"application/json\"} -Method Post -Body $body\r\n```\r\n\r\n### Commands\r\n\r\n#### + `sessions.create`\r\n\r\nThis will launch a new browser instance which will retain cookies until you destroy it with `sessions.destroy`.\r\nThis comes in handy, so you don't have to keep solving challenges over and over and you won't need to keep sending\r\ncookies for the browser to use.\r\n\r\nThis also speeds up the requests since it won't have to launch a new browser instance for every request.\r\n\r\n| Parameter | Notes                                                                                                                                                                                                                                                                                                            |\r\n|-----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| session   | Optional. The session ID that you want to be assigned to the instance. If isn't set a random UUID will be assigned.                                                                                                                                                                                              |\r\n| proxy     | Optional, default disabled. Eg: `\"proxy\": {\"url\": \"http://127.0.0.1:8888\"}`. You must include the proxy schema in the URL: `http://`, `socks4://` or `socks5://`. Authorization (username/password) is supported. Eg: `\"proxy\": {\"url\": \"http://127.0.0.1:8888\", \"username\": \"testuser\", \"password\": \"testpass\"}` |\r\n\r\n#### + `sessions.list`\r\n\r\nReturns a list of all the active sessions. More for debugging if you are curious to see how many sessions are running.\r\nYou should always make sure to properly close each session when you are done using them as too many may slow your\r\ncomputer down.\r\n\r\nExample response:\r\n\r\n```json\r\n{\r\n  \"sessions\": [\r\n    \"session_id_1\",\r\n    \"session_id_2\",\r\n    \"session_id_3...\"\r\n  ]\r\n}\r\n```\r\n\r\n#### + `sessions.destroy`\r\n\r\nThis will properly shutdown a browser instance and remove all files associated with it to free up resources for a new\r\nsession. When you no longer need to use a session you should make sure to close it.\r\n\r\n| Parameter | Notes                                         |\r\n|-----------|-----------------------------------------------|\r\n| session   | The session ID that you want to be destroyed. |\r\n\r\n#### + `request.get`\r\n\r\n| Parameter           | Notes                                                                                                                                                                                                                                                                                                                                        |\r\n|---------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| url                 | Mandatory                                                                                                                                                                                                                                                                                                                                    |\r\n| session             | Optional. Will send the request from and existing browser instance. If one is not sent it will create a temporary instance that will be destroyed immediately after the request is completed.                                                                                                                                                |\r\n| session_ttl_minutes | Optional. FlareSolverr will automatically rotate expired sessions based on the TTL provided in minutes.                                                                                                                                                                                                                                      |\r\n| maxTimeout          | Optional, default value 60000. Max timeout to solve the challenge in milliseconds.                                                                                                                                                                                                                                                           |\r\n| cookies             | Optional. Will be used by the headless browser. Eg: `\"cookies\": [{\"name\": \"cookie1\", \"value\": \"value1\"}, {\"name\": \"cookie2\", \"value\": \"value2\"}]`.                                                                                                                                                                                           |\r\n| returnOnlyCookies   | Optional, default false. Only returns the cookies. Response data, headers and other parts of the response are removed.                                                                                                                                                                                                                       |\r\n| proxy               | Optional, default disabled. Eg: `\"proxy\": {\"url\": \"http://127.0.0.1:8888\"}`. You must include the proxy schema in the URL: `http://`, `socks4://` or `socks5://`. Authorization (username/password) is not supported. (When the `session` parameter is set, the proxy is ignored; a session specific proxy can be set in `sessions.create`.) |\r\n\r\n> **Warning**\r\n> If you want to use Cloudflare clearance cookie in your scripts, make sure you use the FlareSolverr User-Agent too. If they don't match you will see the challenge.\r\n\r\nExample response from running the `curl` above:\r\n\r\n```json\r\n{\r\n    \"solution\": {\r\n        \"url\": \"https://www.google.com/?gws_rd=ssl\",\r\n        \"status\": 200,\r\n        \"headers\": {\r\n            \"status\": \"200\",\r\n            \"date\": \"Thu, 16 Jul 2020 04:15:49 GMT\",\r\n            \"expires\": \"-1\",\r\n            \"cache-control\": \"private, max-age=0\",\r\n            \"content-type\": \"text/html; charset=UTF-8\",\r\n            \"strict-transport-security\": \"max-age=31536000\",\r\n            \"p3p\": \"CP=\\\"This is not a P3P policy! See g.co/p3phelp for more info.\\\"\",\r\n            \"content-encoding\": \"br\",\r\n            \"server\": \"gws\",\r\n            \"content-length\": \"61587\",\r\n            \"x-xss-protection\": \"0\",\r\n            \"x-frame-options\": \"SAMEORIGIN\",\r\n            \"set-cookie\": \"1P_JAR=2020-07-16-04; expires=Sat...\"\r\n        },\r\n        \"response\":\"<!DOCTYPE html>...\",\r\n        \"cookies\": [\r\n            {\r\n                \"name\": \"NID\",\r\n                \"value\": \"204=QE3Ocq15XalczqjuDy52HeseG3zAZuJzID3R57...\",\r\n                \"domain\": \".google.com\",\r\n                \"path\": \"/\",\r\n                \"expires\": 1610684149.307722,\r\n                \"size\": 178,\r\n                \"httpOnly\": true,\r\n                \"secure\": true,\r\n                \"session\": false,\r\n                \"sameSite\": \"None\"\r\n            },\r\n            {\r\n                \"name\": \"1P_JAR\",\r\n                \"value\": \"2020-07-16-04\",\r\n                \"domain\": \".google.com\",\r\n                \"path\": \"/\",\r\n                \"expires\": 1597464949.307626,\r\n                \"size\": 19,\r\n                \"httpOnly\": false,\r\n                \"secure\": true,\r\n                \"session\": false,\r\n                \"sameSite\": \"None\"\r\n            }\r\n        ],\r\n        \"userAgent\": \"Windows NT 10.0; Win64; x64) AppleWebKit/5...\"\r\n    },\r\n    \"status\": \"ok\",\r\n    \"message\": \"\",\r\n    \"startTimestamp\": 1594872947467,\r\n    \"endTimestamp\": 1594872949617,\r\n    \"version\": \"1.0.0\"\r\n}\r\n```\r\n\r\n### + `request.post`\r\n\r\nThis is the same as `request.get` but it takes one more param:\r\n\r\n| Parameter | Notes                                                                    |\r\n|-----------|--------------------------------------------------------------------------|\r\n| postData  | Must be a string with `application/x-www-form-urlencoded`. Eg: `a=b&c=d` |\r\n\r\n## Environment variables\r\n\r\n| Name               | Default                | Notes                                                                                                                                                         |\r\n|--------------------|------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------|\r\n| LOG_LEVEL          | info                   | Verbosity of the logging. Use `LOG_LEVEL=debug` for more information.                                                                                         |\r\n| LOG_HTML           | false                  | Only for debugging. If `true` all HTML that passes through the proxy will be logged to the console in `debug` level.                                          |\r\n| CAPTCHA_SOLVER     | none                   | Captcha solving method. It is used when a captcha is encountered. See the Captcha Solvers section.                                                            |\r\n| TZ                 | UTC                    | Timezone used in the logs and the web browser. Example: `TZ=Europe/London`.                                                                                   |\r\n| LANG               | none                   | Language used in the web browser. Example: `LANG=en_GB`.                                                                                   |\r\n| HEADLESS           | true                   | Only for debugging. To run the web browser in headless mode or visible.                                                                                       |\r\n| BROWSER_TIMEOUT    | 40000                  | If you are experiencing errors/timeouts because your system is slow, you can try to increase this value. Remember to increase the `maxTimeout` parameter too. |\r\n| TEST_URL           | https://www.google.com | FlareSolverr makes a request on start to make sure the web browser is working. You can change that URL if it is blocked in your country.                      |\r\n| PORT               | 8191                   | Listening port. You don't need to change this if you are running on Docker.                                                                                   |\r\n| HOST               | 0.0.0.0                | Listening interface. You don't need to change this if you are running on Docker.                                                                              |\r\n| PROMETHEUS_ENABLED | false                  | Enable Prometheus exporter. See the Prometheus section below.                                                                                                 |\r\n| PROMETHEUS_PORT    | 8192                   | Listening port for Prometheus exporter. See the Prometheus section below.                                                                                     |\r\n\r\nEnvironment variables are set differently depending on the operating system. Some examples:\r\n* Docker: Take a look at the Docker section in this document. Environment variables can be set in the `docker-compose.yml` file or in the Docker CLI command.\r\n* Linux: Run `export LOG_LEVEL=debug` and then run `flaresolverr` in the same shell.\r\n* Windows: Open `cmd.exe`, run `set LOG_LEVEL=debug` and then run `flaresolverr.exe` in the same shell.\r\n\r\n## Prometheus exporter\r\n\r\nThe Prometheus exporter for FlareSolverr is disabled by default. It can be enabled with the environment variable `PROMETHEUS_ENABLED`. If you are using Docker make sure you expose the `PROMETHEUS_PORT`.\r\n\r\nExample metrics:\r\n```shell\r\n# HELP flaresolverr_request_total Total requests with result\r\n# TYPE flaresolverr_request_total counter\r\nflaresolverr_request_total{domain=\"nowsecure.nl\",result=\"solved\"} 1.0\r\n# HELP flaresolverr_request_created Total requests with result\r\n# TYPE flaresolverr_request_created gauge\r\nflaresolverr_request_created{domain=\"nowsecure.nl\",result=\"solved\"} 1.690141657157109e+09\r\n# HELP flaresolverr_request_duration Request duration in seconds\r\n# TYPE flaresolverr_request_duration histogram\r\nflaresolverr_request_duration_bucket{domain=\"nowsecure.nl\",le=\"0.0\"} 0.0\r\nflaresolverr_request_duration_bucket{domain=\"nowsecure.nl\",le=\"10.0\"} 1.0\r\nflaresolverr_request_duration_bucket{domain=\"nowsecure.nl\",le=\"25.0\"} 1.0\r\nflaresolverr_request_duration_bucket{domain=\"nowsecure.nl\",le=\"50.0\"} 1.0\r\nflaresolverr_request_duration_bucket{domain=\"nowsecure.nl\",le=\"+Inf\"} 1.0\r\nflaresolverr_request_duration_count{domain=\"nowsecure.nl\"} 1.0\r\nflaresolverr_request_duration_sum{domain=\"nowsecure.nl\"} 5.858\r\n# HELP flaresolverr_request_duration_created Request duration in seconds\r\n# TYPE flaresolverr_request_duration_created gauge\r\nflaresolverr_request_duration_created{domain=\"nowsecure.nl\"} 1.6901416571570296e+09\r\n```\r\n\r\n## Captcha Solvers\r\n\r\n> **Warning**\r\n> At this time none of the captcha solvers work. You can check the status in the open issues. Any help is welcome.\r\n\r\nSometimes CloudFlare not only gives mathematical computations and browser tests, sometimes they also require the user to\r\nsolve a captcha.\r\nIf this is the case, FlareSolverr will return the error `Captcha detected but no automatic solver is configured.`\r\n\r\nFlareSolverr can be customized to solve the CAPTCHA automatically by setting the environment variable `CAPTCHA_SOLVER`\r\nto the file name of one of the adapters inside the [/captcha](src/captcha) directory.\r\n\r\n## Related projects\r\n\r\n* C# implementation => https://github.com/FlareSolverr/FlareSolverrSharp\r\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.40625,
          "content": "---\nversion: \"2.1\"\nservices:\n  flaresolverr:\n    # DockerHub mirror flaresolverr/flaresolverr:latest\n    image: ghcr.io/flaresolverr/flaresolverr:latest\n    container_name: flaresolverr\n    environment:\n      - LOG_LEVEL=${LOG_LEVEL:-info}\n      - LOG_HTML=${LOG_HTML:-false}\n      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}\n      - TZ=Europe/London\n    ports:\n      - \"${PORT:-8191}:8191\"\n    restart: unless-stopped\n"
        },
        {
          "name": "html_samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.1904296875,
          "content": "{\n  \"name\": \"flaresolverr\",\n  \"version\": \"3.3.21\",\n  \"description\": \"Proxy server to bypass Cloudflare protection\",\n  \"author\": \"Diego Heras (ngosang / ngosang@hotmail.es)\",\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.3408203125,
          "content": "bottle==0.12.25\nwaitress==3.0.1\nselenium==4.15.2\nfunc-timeout==4.3.5\nprometheus-client==0.17.1\n# required by undetected_chromedriver\nrequests==2.32.3\ncertifi==2024.07.04\nwebsockets==11.0.3\n# only required for linux and macos\nxvfbwrapper==0.2.9; platform_system != \"Windows\"\n# only required for windows\npefile==2023.2.7; platform_system == \"Windows\"\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-requirements.txt",
          "type": "blob",
          "size": 0.0146484375,
          "content": "WebTest==3.0.0\n"
        }
      ]
    }
  ]
}