{
  "metadata": {
    "timestamp": 1736560906184,
    "page": 631,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gaogaotiantian/viztracer",
      "stars": 5816,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.08203125,
          "content": "[run]\ncover_pylib = True\nsource = viztracer\nomit =\n    */viztracer/attach_process/*\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1640625,
          "content": "src/viztracer/html/** linguist-vendored\nexample/json/* linguist-generated\nsrc/viztracer/web_dist/** linguist-vendored\nsrc/viztracer/attach_process/** linguist-vendored\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.7919921875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# Generated data\ntests/data/*.json\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.62890625,
          "content": "# .readthedocs.yml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\n# Required\nversion: 2\n\n# Set the version of Python and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/source/conf.py\n\n# Build documentation with MkDocs\n#mkdocs:\n#  configuration: mkdocs.yml\n\n# Enable pdf download on readthedocs\nformats:\n  - pdf\n\n# Optionally set the version of Python and requirements required to build your docs\npython:\n  install:\n    - requirements: docs/requirements.txt\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.1767578125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   ======================================================================\n\n   VizTracer uses source code or generated code from following components:\n\n     perfetto - https://github.com/google/perfetto (Apache License V2)\n       - /src/web_dist/*\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.255859375,
          "content": "include LICENSE\ninclude NOTICE.txt\ninclude README.md\ninclude setup.py\n\nrecursive-include src/viztracer/html *.css *.js\nrecursive-include src/viztracer/modules *.c *.h\nrecursive-include src/viztracer/web_dist *\nrecursive-include src/viztracer/attach_process *.py\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.71875,
          "content": ".PHONY: refresh build install build_dist json release lint test clean\n\nrefresh: clean build install lint\n\nbuild:\n\tpython -m build\n\ninstall:\n\tpip install .\n\nbuild_dist:\n\tmake clean\n\tpython -m build\n\tpip install dist/*.whl\n\tmake test\n\njson:\n\tpython example/generate_examples.py\n\nrelease:\n\tpython -m twine upload dist/*\n\nlint:\n\tflake8 src/ tests/ example/ --exclude \"src/viztracer/attach_process/*\" --count --ignore=W503 --max-line-length=127 --statistics\n\tmypy src/ --exclude 'src/viztracer/attach_process/.*'\n\ntest:\n\tpython -m unittest\n\nclean:\n\trm -rf __pycache__\n\trm -rf tests/__pycache__\n\trm -rf src/viztracer/__pycache__\n\trm -rf build\n\trm -rf dist\n\trm -rf viztracer.egg-info\n\trm -rf src/viztracer.egg-info\n\tpip uninstall -y viztracer\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.541015625,
          "content": "Copyright 2020-2023 Tian Gao\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.4677734375,
          "content": "# VizTracer\n\n[![build](https://github.com/gaogaotiantian/viztracer/workflows/build/badge.svg)](https://github.com/gaogaotiantian/viztracer/actions?query=workflow%3Abuild)  [![flake8](https://github.com/gaogaotiantian/viztracer/workflows/lint/badge.svg)](https://github.com/gaogaotiantian/viztracer/actions?query=workflow%3ALint)  [![readthedocs](https://img.shields.io/readthedocs/viztracer)](https://viztracer.readthedocs.io/en/stable/)  [![coverage](https://img.shields.io/codecov/c/github/gaogaotiantian/viztracer)](https://codecov.io/gh/gaogaotiantian/viztracer)  [![pypi](https://img.shields.io/pypi/v/viztracer.svg)](https://pypi.org/project/viztracer/)  [![Visual Studio Marketplace Version](https://img.shields.io/visual-studio-marketplace/v/gaogaotiantian.viztracer-vscode?logo=visual-studio)](https://marketplace.visualstudio.com/items?itemName=gaogaotiantian.viztracer-vscode)  [![support-version](https://img.shields.io/pypi/pyversions/viztracer)](https://img.shields.io/pypi/pyversions/viztracer)  [![license](https://img.shields.io/github/license/gaogaotiantian/viztracer)](https://github.com/gaogaotiantian/viztracer/blob/master/LICENSE)  [![commit](https://img.shields.io/github/last-commit/gaogaotiantian/viztracer)](https://github.com/gaogaotiantian/viztracer/commits/master)  [![sponsor](https://img.shields.io/badge/%E2%9D%A4-Sponsor%20me-%23c96198?style=flat&logo=GitHub)](https://github.com/sponsors/gaogaotiantian)\n\nVizTracer is a low-overhead logging/debugging/profiling tool that can trace and visualize your python code execution.\n\nThe front-end UI is powered by [Perfetto](https://perfetto.dev/). **Use \"AWSD\" to zoom/navigate**.\nMore help can be found in \"Support - Controls\".\n\n[![example_img](https://github.com/gaogaotiantian/viztracer/blob/master/img/example.png)](https://github.com/gaogaotiantian/viztracer/blob/master/img/example.png)\n\n\n## Highlights\n\n* Detailed function entry/exit information on timeline with source code\n* Super easy to use, no source code change for most features, no package dependency\n* Low overhead, probably the fastest tracer in the market\n* Supports threading, multiprocessing, subprocess, async and PyTorch\n* Powerful front-end, able to render GB-level trace smoothly\n* Works on Linux/MacOS/Windows\n\n## Install\n\nThe preferred way to install VizTracer is via pip\n\n```sh\npip install viztracer\n```\n\n## Basic Usage\n\n### Command Line\n\n```sh\n# Instead of \"python3 my_script.py arg1 arg2\"\nviztracer my_script.py arg1 arg2\n```\n\n<details>\n\n<summary>\nA <code>result.json</code> file will be generated, which you can open with <code>vizviewer</code>\n</summary>\n\n```sh\n# You can display all the files in a directory and open them in browser too\nvizviewer ./\n# For very large trace files, try external trace processor\nvizviewer --use_external_processor result.json\n```\n\nvizviewer will host an HTTP server on ``http://localhost:9001``. You can also open your browser and use that address.\n\nIf you do not want vizviewer to open the webbrowser automatically, you can use\n\n```sh\nvizviewer --server_only result.json\n```\n\nIf you just need to bring up the trace report once, and do not want the persistent server, use\n\n```sh\nvizviewer --once result.json\n```\n\n</details>\n\n```sh\nvizviewer result.json\n```\n\nA [VS Code Extension](https://marketplace.visualstudio.com/items?itemName=gaogaotiantian.viztracer-vscode)\nis available to make your life even easier.\n\n<p align=\"center\">\n    <img src=\"https://github.com/gaogaotiantian/viztracer-vscode/raw/master/assets/demo.gif\" />\n</p>\n\n<details>\n\n<summary>\nAdd <code>--open</code> to open the reports right after tracing\n</summary>\n\n```sh\nviztracer --open my_script.py arg1 arg2\nviztracer -o result.html --open my_script.py arg1 arg2\n```\n\n</details>\n\n<details>\n\n<summary>\nmodules and console scripts(like <code>flask</code>) are supported as well\n</summary>\n\n```sh\nviztracer -m your_module\n```\n\n```sh\nviztracer flask run\n```\n\n</details>\n\n### Inline\n\nYou can also manually start/stop VizTracer in your script as well.\n\n```python\nfrom viztracer import VizTracer\n\ntracer = VizTracer()\ntracer.start()\n# Something happens here\ntracer.stop()\ntracer.save() # also takes output_file as an optional argument\n```\n\nOr, you can do it with ```with``` statement\n\n```python\nwith VizTracer(output_file=\"optional.json\") as tracer:\n    # Something happens here\n```\n\n### Jupyter\n\nIf you are using Jupyter, you can use viztracer cell magics.\n\n```python\n# You need to load the extension first\n%load_ext viztracer\n```\n\n```python\n%%viztracer\n# Your code after\n```\n\nA ``VizTracer Report`` button will appear after the cell and you can click it to view the results\n\n### PyTorch\n\nVizTracer can log native calls and GPU events of PyTorch (based on `torch.profiler`) with\n``--log_torch``.\n\n```python\nwith VizTracer(log_torch=True) as tracer:\n    # Your torch code\n```\n\n```sh\nviztracer --log_torch your_model.py\n```\n\n## Advanced Usage\n\n### Trace Filter\n\nVizTracer can filter out the data you don't want to reduce overhead and keep info of a longer time period before you dump the log.\n\n* [Min Duration](https://viztracer.readthedocs.io/en/stable/filter.html#min-duration)\n* [Max Stack Depth](https://viztracer.readthedocs.io/en/stable/filter.html#max-stack-depth)\n* [Include Files](https://viztracer.readthedocs.io/en/stable/filter.html#include-files)\n* [Exclude Files](https://viztracer.readthedocs.io/en/stable/filter.html#exclude-files)\n* [Ignore C Function](https://viztracer.readthedocs.io/en/stable/filter.html#ignore-c-function)\n* [Sparse Log](https://viztracer.readthedocs.io/en/stable/filter.html#log-sparse)\n\n### Extra Logs without Code Change\n\nVizTracer can log extra information without changing your source code\n\n* [Any Variable/Attribute with RegEx](https://viztracer.readthedocs.io/en/stable/extra_log.html#log-variable)\n* [Function Entry](https://viztracer.readthedocs.io/en/stable/extra_log.html#log-function-entry)\n* [Variables in Specified Function](https://viztracer.readthedocs.io/en/stable/extra_log.html#log-function-execution)\n* [Garbage Collector Operation](https://viztracer.readthedocs.io/en/stable/extra_log.html#log-garbage-collector)\n* [Function Input Arguments](https://viztracer.readthedocs.io/en/stable/extra_log.html#log-function-arguments)\n* [Function Return Value](https://viztracer.readthedocs.io/en/stable/extra_log.html#log-function-return-value)\n* [Audit Events](https://viztracer.readthedocs.io/en/stable/extra_log.html#log-audit)\n* [Raised Exceptions](https://viztracer.readthedocs.io/en/stable/extra_log.html#log-exception)\n\n### Add Custom Event\n\nVizTracer supports inserting custom events while the program is running. This works like a print debug, but you can know when this print happens while looking at trace data.\n\n* [Instant Event](https://viztracer.readthedocs.io/en/stable/custom_event_intro.html#instant-event)\n* [Variable Event](https://viztracer.readthedocs.io/en/stable/custom_event_intro.html#variable-event)\n* [Duration Event](https://viztracer.readthedocs.io/en/stable/custom_event_intro.html#duration-event)\n\n## Misc\n\n### Multi Thread Support\n\nFor Python3.12+, VizTracer supports Python-level multi-thread tracing without the need to do any modification to your code.\n\nFor versions before 3.12, VizTracer supports python native ```threading``` module. Just start ```VizTracer``` before you create threads and it will just work.\n\nFor other multi-thread scenarios, you can use ``enable_thread_tracing()`` to notice VizTracer about the thread to trace it.\n\n[![example_img](https://github.com/gaogaotiantian/viztracer/blob/master/img/multithread_example.png)](https://github.com/gaogaotiantian/viztracer/blob/master/img/multithread_example.png)\n\nRefer to [multi thread docs](https://viztracer.readthedocs.io/en/stable/concurrency.html) for details\n\n\n### Multi Process Support\n\nVizTracer supports ```subprocess```, ```multiprocessing```, ```os.fork()```, ```concurrent.futures```, and ```loky``` out of the box.\n\nFor more general multi-process cases, VizTracer can support with some extra steps.\n\n[![example_img](https://github.com/gaogaotiantian/viztracer/blob/master/img/multiprocess_example.png)](https://github.com/gaogaotiantian/viztracer/blob/master/img/multiprocess_example.png)\n\nRefer to [multi process docs](https://viztracer.readthedocs.io/en/stable/concurrency.html) for details\n\n### Async Support\n\nVizTracer supports ```asyncio``` natively, but could enhance the report by using ```--log_async```.\n\n[![example_img](https://github.com/gaogaotiantian/viztracer/blob/master/img/async_example.png)](https://github.com/gaogaotiantian/viztracer/blob/master/img/async_example.png)\n\nRefer to [async docs](https://viztracer.readthedocs.io/en/stable/concurrency.html) for details\n\n### Flamegraph\n\nPerfetto supports native flamegraph, just select slices on the UI and choose \"Slice Flamegraph\".\n\n[![example_img](https://github.com/gaogaotiantian/viztracer/blob/master/img/flamegraph.png)](https://github.com/gaogaotiantian/viztracer/blob/master/img/flamegraph.png)\n\n### Remote attach\n\nVizTracer supports remote attach to an arbitrary Python process to trace it, as long as viztracer is importable\n\nRefer to [remote attach docs](https://viztracer.readthedocs.io/en/stable/remote_attach.html)\n\n### JSON alternative\n\nVizTracer needs to dump the internal data to json format. It is recommended for the users to install ```orjson```, which is much faster than the builtin ```json``` library. VizTracer will try to import ```orjson``` and fall back to the builtin ```json``` library if ```orjson``` does not exist.\n\n## Performance\n\nVizTracer puts in a lot of effort to achieve low overhead. The actual performance impact largely depends on your application.\nFor typical codebases, the overhead is expected to be below 1x. If your code has infrequent function calls,\nthe overhead could be minimal.\n\n<details>\n\n<summary>\nDetailed explanation\n</summary>\n\nThe overhead introduced by VizTracer is basically a fixed amount of time during function entry and exit, so the more time spent on\nfunction entries and exits, the more overhead will be observed. A pure recursive ```fib``` function could suffer 3x-4x overhead\non Python3.11+ (when the Python call is optimized, before that Python call was slower so the overhead ratio would be less).\n\nIn the real life scenario, your code should not spend too much time on function calls (they don't really do anything useful), so\nthe overhead would be much smaller.\n\nMany techniques are applied to minimize the overall overhead during code execution to reduce the inevitable skew introduced by\nVizTracer (the report saving part is not as critical). For example, VizTracer tries to use the CPU timestamp counter instead of\na syscall to get the time when available. On Python 3.12+, VizTracer uses ```sys.monitoring``` which has less overhead than\n```sys.setprofile```. All of the efforts made it observably faster than ```cProfile```, the Python stdlib profiler.\n\nHowever, VizTracer is a tracer, which means it has to record every single function entry and exit, so it can't be as fast as\nthe sampling profilers - they are not the same thing. With the extra overhead, VizTracer provides a lot more information than\nnormal sampling profilers.\n\n</details>\n\n## Documentation\n\nFor full documentation, please see [https://viztracer.readthedocs.io/en/stable](https://viztracer.readthedocs.io/en/stable)\n\n## Bugs/Requests\n\nPlease send bug reports and feature requests through [github issue tracker](https://github.com/gaogaotiantian/viztracer/issues). VizTracer is currently under development now and it's open to any constructive suggestions.\n\n## License\n\nCopyright 2020-2024 Tian Gao.\n\nDistributed under the terms of the  [Apache 2.0 license](https://github.com/gaogaotiantian/viztracer/blob/master/LICENSE).\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.3701171875,
          "content": "[build-system]\nrequires = [\"setuptools\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"viztracer\"\nauthors = [{name = \"Tian Gao\", email = \"gaogaotiantian@hotmail.com\"}]\ndescription = \"A debugging and profiling tool that can trace and visualize python code execution\"\ndependencies = [\"objprint>=0.3.0\"]\nreadme = \"README.md\"\nrequires-python = \">=3.9\"\nlicense = {file = \"LICENSE\"}\ndynamic = [\"version\"]\nclassifiers = [\n    \"Development Status :: 4 - Beta\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"Operating System :: MacOS\",\n    \"Operating System :: POSIX :: Linux\",\n    \"Operating System :: Microsoft :: Windows\",\n    \"Topic :: Software Development :: Quality Assurance\",\n    \"Topic :: Software Development :: Bug Tracking\",\n    \"Topic :: System :: Logging\",\n]\n\n[project.urls]\nHomepage = \"https://github.com/gaogaotiantian/viztracer\"\nDocumentation = \"https://viztracer.readthedocs.io\"\n\n[project.optional-dependencies]\nfull = [\"orjson\"]\n\n[project.scripts]\nviztracer = \"viztracer.main:main\"\nvizviewer = \"viztracer.viewer:viewer_main\"\n\n[tool.setuptools.dynamic]\nversion = {attr = \"viztracer.__version__\"}\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.201171875,
          "content": "# Build Packages\nbuild\nsetuptools\nwheel\ntwine\n\n# Lint & Coverage\nflake8\nmypy\ncoverage\n\n# 3rd party packages for test\nipywidgets>8.0.5\nloky>=3.0.0\njaxlib; sys_platform != 'win32' and python_version < '3.11'\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.2294921875,
          "content": "import platform\nimport sys\n\nimport setuptools\n\n# Determine which attach binary to take into package\npackage_data = {\n    \"viztracer\": [\n        \"html/*.js\",\n        \"html/*.css\",\n        \"html/*.html\",\n        \"web_dist/*\",\n        \"web_dist/*/*\",\n        \"web_dist/*/*/*\",\n        \"attach_process/__init__.py\",\n        \"attach_process/add_code_to_python_process.py\",\n        \"attach_process/LICENSE\",\n    ],\n}\n\nif sys.platform == \"win32\":\n    package_data[\"viztracer\"].extend([\n        \"attach_process/attach_x86.dll\",\n        \"attach_process/attach_x86_64.dll\",\n        \"attach_process/inject_dll.exe\",\n        \"attach_process/inject_dll_amd64.exe\",\n        \"attach_process/run_code_on_dllmain_amd64.dll\",\n        \"attach_process/run_code_on_dllmain_x86.dll\",\n    ])\nif sys.platform == \"darwin\":\n    package_data[\"viztracer\"].extend([\n        \"attach_process/attach_x86_64.dylib\",\n    ])\nelif sys.platform in (\"linux\", \"linux2\"):\n    if platform.machine() == \"i686\":\n        package_data[\"viztracer\"].extend([\n            \"attach_process/attach_linux_x86.so\",\n        ])\n    elif platform.machine() == \"x86_64\":\n        package_data[\"viztracer\"].extend([\n            \"attach_process/attach_linux_amd64.so\",\n        ])\n\nsetuptools.setup(\n    packages=setuptools.find_namespace_packages(\"src\"),\n    package_dir={\"\": \"src\"},\n    package_data=package_data,\n    ext_modules=[\n        setuptools.Extension(\n            \"viztracer.snaptrace\",\n            sources=[\n                \"src/viztracer/modules/util.c\",\n                \"src/viztracer/modules/eventnode.c\",\n                \"src/viztracer/modules/quicktime.c\",\n                \"src/viztracer/modules/snaptrace.c\",\n                \"src/viztracer/modules/snaptrace_member.c\",\n            ],\n            extra_compile_args={\"win32\": []}.get(sys.platform, [\"-Werror\", \"-std=c99\"]),\n            extra_link_args={\"win32\": []}.get(sys.platform, [\"-lpthread\"]),\n        ),\n        setuptools.Extension(\n            \"viztracer.vcompressor\",\n            sources=[\n                \"src/viztracer/modules/vcompressor/vcompressor.c\",\n                \"src/viztracer/modules/vcompressor/vc_dump.c\",\n            ],\n            extra_compile_args={\"win32\": []}.get(sys.platform, [\"-Wno-unused-result\", \"-Werror\", \"-std=c99\"]),\n        ),\n    ],\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}