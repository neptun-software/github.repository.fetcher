{
  "metadata": {
    "timestamp": 1736560451959,
    "page": 31,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "doccano/doccano",
      "stars": 9690,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.32421875,
          "content": "junitxml\n.idea\n.mypy_cache\n.pytest_cache\n.vscode\n.git\n.github\n.DS_Store\ndist\n\nbackend/*.sqlite3*\nbackend/junitxml\nbackend/media\nbackend/filepond-temp-uploads\nbackend/stored_uploads\nbackend/staticfiles\nbackend/venv\nbackend/**/__pycache__/\nbackend/.mypy_cache\n\nfrontend/.nuxt/\nfrontend/coverage/\nfrontend/dist/\nfrontend/node_modules/\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.974609375,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### macOS template\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n.idea\n\n# Icon must end with two \\r\nIcon\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n### Python template\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\njunitxml/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\n*.sqlite3\nstaticfiles/\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and Webstorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff:\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/dictionaries\n\n# Sensitive or high-churn files:\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.xml\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n\n# Gradle:\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# CMake\ncmake-build-debug/\n\n# Mongo Explorer plugin:\n.idea/**/mongoSettings.xml\n\n## File-based project format:\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n### VirtualEnv template\n# Virtualenv\n# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/\n[Bb]in\n[Ii]nclude\n[Ll]ib\n[Ll]ib64\n[Ll]ocal\n[Ss]cripts\npyvenv.cfg\npip-selfcheck.json\n\n# ignore webpack state\nnode_modules/\nbundle/\nwebpack-stats.json\n\n.vscode\nbackend/filepond-temp-uploads\nbackend/media\nbackend/*.sqlite3*\nfrontend/assets/fonts\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0400390625,
          "content": "MIT License\n\nCopyright (c) 2018 TIS inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.8271484375,
          "content": "<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/doccano/doccano/master/docs/images/logo/doccano.png\">\n</div>\n\n# doccano\n\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/35ac8625a2bc4eddbff23dbc61bc6abb)](https://www.codacy.com/gh/doccano/doccano/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=doccano/doccano&amp;utm_campaign=Badge_Grade)\n[![doccano CI](https://github.com/doccano/doccano/actions/workflows/ci.yml/badge.svg)](https://github.com/doccano/doccano/actions/workflows/ci.yml)\n\ndoccano is an open-source text annotation tool for humans. It provides annotation features for text classification, sequence labeling, and sequence to sequence tasks. You can create labeled data for sentiment analysis, named entity recognition, text summarization, and so on. Just create a project, upload data, and start annotating. You can build a dataset in hours.\n\n## Demo\n\nTry the [annotation demo](http://doccano.herokuapp.com).\n\n![Demo image](https://raw.githubusercontent.com/doccano/doccano/master/docs/images/demo/demo.gif)\n\n## Documentation\n\nRead the documentation at <https://doccano.github.io/doccano/>.\n\n## Features\n\n- Collaborative annotation\n- Multi-language support\n- Mobile support\n- Emoji :smile: support\n- Dark theme\n- RESTful API\n\n## Usage\n\nThere are three options to run doccano:\n\n- pip (Python 3.8+)\n- Docker\n- Docker Compose\n\n### pip\n\nTo install doccano, run:\n\n```bash\npip install doccano\n```\n\nBy default, SQLite 3 is used for the default database. If you want to use PostgreSQL, install the additional dependencies:\n\n```bash\npip install 'doccano[postgresql]'\n```\n\nand set the `DATABASE_URL` environment variable according to your PostgreSQL credentials:\n\n```bash\nDATABASE_URL=\"postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable\"\n```\n\nAfter installation, run the following commands:\n\n```bash\n# Initialize database.\ndoccano init\n# Create a super user.\ndoccano createuser --username admin --password pass\n# Start a web server.\ndoccano webserver --port 8000\n```\n\nIn another terminal, run the command:\n\n```bash\n# Start the task queue to handle file upload/download.\ndoccano task\n```\n\nGo to <http://127.0.0.1:8000/>.\n\n### Docker\n\nAs a one-time setup, create a Docker container as follows:\n\n```bash\ndocker pull doccano/doccano\ndocker container create --name doccano \\\n  -e \"ADMIN_USERNAME=admin\" \\\n  -e \"ADMIN_EMAIL=admin@example.com\" \\\n  -e \"ADMIN_PASSWORD=password\" \\\n  -v doccano-db:/data \\\n  -p 8000:8000 doccano/doccano\n```\n\nNext, start doccano by running the container:\n\n```bash\ndocker container start doccano\n```\n\nGo to <http://127.0.0.1:8000/>.\n\nTo stop the container, run `docker container stop doccano -t 5`. All data created in the container will persist across restarts.\n\nIf you want to use the latest features, specify the `nightly` tag:\n\n```bash\ndocker pull doccano/doccano:nightly\n```\n\n### Docker Compose\n\nYou need to install Git and clone the repository:\n\n```bash\ngit clone https://github.com/doccano/doccano.git\ncd doccano\n```\n\n_Note for Windows developers:_ Be sure to configure git to correctly handle line endings or you may encounter `status code 127` errors while running the services in future steps. Running with the git config options below will ensure your git directory correctly handles line endings.\n\n```bash\ngit clone https://github.com/doccano/doccano.git --config core.autocrlf=input\n```\n\nThen, create an `.env` file with variables in the following format (see [./docker/.env.example](https://github.com/doccano/doccano/blob/master/docker/.env.example)):\n\n```plain\n# platform settings\nADMIN_USERNAME=admin\nADMIN_PASSWORD=password\nADMIN_EMAIL=admin@example.com\n\n# rabbit mq settings\nRABBITMQ_DEFAULT_USER=doccano\nRABBITMQ_DEFAULT_PASS=doccano\n\n# database settings\nPOSTGRES_USER=doccano\nPOSTGRES_PASSWORD=doccano\nPOSTGRES_DB=doccano\n```\n\nAfter running the following command, access <http://127.0.0.1/>.\n\n```bash\ndocker-compose -f docker/docker-compose.prod.yml --env-file .env up\n```\n\n### One-click Deployment\n\n| Service | Button |\n|---------|---|\n| AWS[^1]   | [![AWS CloudFormation Launch Stack SVG Button](https://cdn.rawgit.com/buildkite/cloudformation-launch-stack-button-svg/master/launch-stack.svg)](https://console.aws.amazon.com/cloudformation/home?#/stacks/new?stackName=doccano&templateURL=https://doccano.s3.amazonaws.com/public/cloudformation/template.aws.yaml)  |\n| Heroku  | [![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://dashboard.heroku.com/new?template=https%3A%2F%2Fgithub.com%2Fdoccano%2Fdoccano)  |\n<!-- | GCP[^2] | [![GCP Cloud Run PNG Button](https://storage.googleapis.com/gweb-cloudblog-publish/images/run_on_google_cloud.max-300x300.png)](https://console.cloud.google.com/cloudshell/editor?shellonly=true&cloudshell_image=gcr.io/cloudrun/button&cloudshell_git_repo=https://github.com/doccano/doccano.git&cloudshell_git_branch=CloudRunButton)  | -->\n\n> [^1]: (1) EC2 KeyPair cannot be created automatically, so make sure you have an existing EC2 KeyPair in one region. Or [create one yourself](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#having-ec2-create-your-key-pair). (2) If you want to access doccano via HTTPS in AWS, here is an [instruction](https://github.com/doccano/doccano/wiki/HTTPS-setting-for-doccano-in-AWS).\n<!-- > [^2]: Although this is a very cheap option, it is only suitable for very small teams (up to 80 concurrent requests). Read more on [Cloud Run docs](https://cloud.google.com/run/docs/concepts). -->\n\n## FAQ\n\n- [How to create a user](https://doccano.github.io/doccano/faq/#how-to-create-a-user)\n- [How to add a user to your project](https://doccano.github.io/doccano/faq/#how-to-add-a-user-to-your-project)\n- [How to change the password](https://doccano.github.io/doccano/faq/#how-to-change-the-password)\n\nSee the [documentation](https://doccano.github.io/doccano/) for details.\n\n## Contribution\n\nAs with any software, doccano is under continuous development. If you have requests for features, please file an issue describing your request. Also, if you want to see work towards a specific feature, feel free to contribute by working towards it. The standard procedure is to fork the repository, add a feature, fix a bug, then file a pull request that your changes are to be merged into the main repository and included in the next release.\n\nHere are some tips might be helpful. [How to Contribute to Doccano Project](https://github.com/doccano/doccano/wiki/How-to-Contribute-to-Doccano-Project)\n\n## Citation\n\n```tex\n@misc{doccano,\n  title={{doccano}: Text Annotation Tool for Human},\n  url={https://github.com/doccano/doccano},\n  note={Software available from https://github.com/doccano/doccano},\n  author={\n    Hiroki Nakayama and\n    Takahiro Kubo and\n    Junya Kamura and\n    Yasufumi Taniguchi and\n    Xu Liang},\n  year={2018},\n}\n```\n\n## Contact\n\nFor help and feedback, feel free to contact [the author](https://github.com/Hironsan).\n"
        },
        {
          "name": "app.json",
          "type": "blob",
          "size": 1.3876953125,
          "content": "{\n    \"name\": \"doccano\",\n    \"description\": \"Open source text annotation tool for machine learning practitioner.\",\n    \"keywords\": [\"Python\", \"Machine Learning\", \"Annotation\"],\n    \"website\": \"https://doccano.herokuapp.com/\",\n    \"repository\": \"https://github.com/doccano/doccano\",\n    \"logo\": \"https://github.com/doccano/doccano/wiki/images/doccano.png\",\n    \"success_url\": \"/\",\n    \"env\": {\n        \"ADMIN_USERNAME\": {\n            \"description\": \"The user name for the admin account.\"\n        },\n        \"ADMIN_EMAIL\": {\n            \"description\": \"The contact email address for the admin account.\"\n        },\n        \"ADMIN_PASSWORD\": {\n            \"description\": \"The password for the admin account.\"\n        },\n        \"SECRET_KEY\": {\n            \"description\": \"The value to use as the Django secret key.\",\n            \"generator\": \"secret\"\n        },\n        \"GOOGLE_TRACKING_ID\": {\n            \"description\": \"Google Analytics tracking id.\",\n            \"required\": false,\n            \"value\": \"\"\n        },\n        \"DJANGO_SETTINGS_MODULE\": {\n            \"description\": \"Django Settings Module. You don't have to change this.\",\n            \"required\": true,\n            \"value\": \"config.settings.heroku\"\n        }\n    },\n    \"stack\": \"container\",\n    \"scripts\": {\n        \"postdeploy\": \"sh /doccano/tools/heroku.sh\"\n    },\n    \"addons\": [\n        {\n            \"plan\": \"heroku-postgresql:mini\"\n        }\n    ]\n}\n"
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "heroku.yml",
          "type": "blob",
          "size": 0.0830078125,
          "content": "build:\n  docker:\n    web: docker/Dockerfile.heroku\nrun:\n  web: /doccano/tools/run.sh\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}