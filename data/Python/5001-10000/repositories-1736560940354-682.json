{
  "metadata": {
    "timestamp": 1736560940354,
    "page": 682,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "i-tu/Hasklig",
      "stars": 5600,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.228515625,
          "content": "# ignore build folder:\ntarget\n\n# ignore font binaries in master branch:\nHasklig*.otf\nHasklig*.ttf\n\nRomanMasters/colors_0\nRomanMasters/colors_1\nRomanMasters/colors_2\nItalicMasters/colors_0\nItalicMasters/colors_1\nItalicMasters/colors_2\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 1.693359375,
          "content": "\n# Release notes\n+ [v1.2](https://github.com/i-tu/Hasklig/releases/tag/v1.2)\n    + Include latest changes from the Source Code Pro repository master branch (adobe-fonts/source-code-pro@14875b7)\n    + Resolves Big Sure issue [#123](https://github.com/i-tu/Hasklig/issues/123)\n+ [v1.1](https://github.com/i-tu/Hasklig/releases/tag/1.1)\n    + New ligatures `->>`, `:::`, `>=>`, `<=<`, `<=>`, `<->`\n    + Switched to newer version of calt code by [Nikita Prokopov](https://github.com/tonsky/FiraCode). It \"doesn’t apply ligatures to long sequences of chars, e.g. !!!!, >>>>, etc\"\n    + Fixed `++` and `+++` line inconsistency in heavy italic weights\n+ [v1.0](https://github.com/i-tu/Hasklig/releases/tag/1.0)\n    + Updates to the latest version of SCP\n    + Hasklig moves to a ligature substitution mechanism borrowed from the excellent [Fira Code by Nikita Prokopov](https://github.com/tonsky/FiraCode)\n+ [v0.9](https://github.com/i-tu/Hasklig/releases/tag/0.9)\n\t+ Converted to UFO format and updated base fonts to benefit from work done on [Source Code Pro](https://github.com/adobe-fonts/source-code-pro/):\n\t\t- ***Italics!***\n\t\t- Greek & Cyrillic script support\n\t\t- Better powerline symbols\n\t\t- [Much, much more](https://github.com/adobe-fonts/source-code-pro/releases/tag/2.010R-ro%2F1.030R-it)\n\t- Added tags that enable support for some IntelliJ IDEA Builds\n+ v0.4: New ligatures: `<*` `<*>` `<+>` `<$>` `***`  `<|>` `!!` `||` `===` `==>`,  [Powerline](https://github.com/powerline/powerline) symbol support\n+ v0.3: New ligatures: `<<<` `>>>` `<>` and `+++`\n+ v0.2: Lengthened `==` and `/=` to match other equals signs\n+ v0.1: Ligatures `<-` `->` `=>` `>>` `<<` `>>=` `=<<` `..` `...` `::` `-<` `>-` `-<<` `>>-` `++` `/=` and `==`\n"
        },
        {
          "name": "FontMenuNameDB",
          "type": "blob",
          "size": 1.8291015625,
          "content": "# [PostScriptName]\r# \tf=FamilyName\r# \ts=StyleName\r# \tl=Windows_Compatible_MenuName\r# \tm=1,Macintosh_Compatible_MenuName\r\r\r# ====================================================================\r# Variable fonts\r\r[HaskligVariable-Roman]\r\tf=Hasklig Variable\r\ts=Roman\r\r[Hasklig_ExtraLight]\r\tf=Hasklig Variable\r\ts=Roman Master 0\r\r[Hasklig_Black]\r\tf=Hasklig Variable\r\ts=Roman Master 2\r\r#---------------------------------------------------------\r\r[HaskligVariable-Italic]\r\tf=Hasklig Variable\r\ts=Italic\r\r[Hasklig_ExtraLight-Italic]\r\tf=Hasklig Variable\r\ts=Italic Master 0\r\r[Hasklig_Black-Italic]\r\tf=Hasklig Variable\r\ts=Italic Master 2\r\r\r# ====================================================================\r# Instance fonts\r\r[Hasklig-ExtraLight]\r\tf=Hasklig\r\ts=ExtraLight\r\tl=Hasklig ExtraLight\r\tm=1,Hasklig ExtraLight\r\r[Hasklig-ExtraLightIt]\r\tf=Hasklig\r\ts=ExtraLight Italic\r\tl=Hasklig ExtraLight\r\tm=1,Hasklig ExtraLight Italic\r\r[Hasklig-Light]\r\tf=Hasklig\r\ts=Light\r\tl=Hasklig Light\r\tm=1,Hasklig Light\r\r[Hasklig-LightIt]\r\tf=Hasklig\r\ts=Light Italic\r\tl=Hasklig Light\r\tm=1,Hasklig Light Italic\r\r[Hasklig-Regular]\r\tf=Hasklig\r\ts=Regular\r\tl=Hasklig\r\tm=1,Hasklig\r\r[Hasklig-It]\r\tf=Hasklig\r\ts=Italic\r\tl=Hasklig\r\tm=1,Hasklig Italic\r\r[Hasklig-Medium]\r\tf=Hasklig\r\ts=Medium\r\tl=Hasklig Medium\r\tm=1,Hasklig Medium\r\r[Hasklig-MediumIt]\r\tf=Hasklig\r\ts=Medium Italic\r\tl=Hasklig Medium\r\tm=1,Hasklig Medium Italic\r\r[Hasklig-Semibold]\r\tf=Hasklig\r\ts=Semibold\r\tl=Hasklig Semibold\r\tm=1,Hasklig Semibold\r\r[Hasklig-SemiboldIt]\r\tf=Hasklig\r\ts=Semibold Italic\r\tl=Hasklig Semibold\r\tm=1,Hasklig Semibold Italic\r\r[Hasklig-Bold]\r\tf=Hasklig\r\ts=Bold\r\tl=Hasklig\r\tm=1,Hasklig Bold\r\r[Hasklig-BoldIt]\r\tf=Hasklig\r\ts=Bold Italic\r\tl=Hasklig\r\tm=1,Hasklig Bold Italic\r\r[Hasklig-Black]\r\tf=Hasklig\r\ts=Black\r\tl=Hasklig Black\r\tm=1,Hasklig Black\r\r[Hasklig-BlackIt]\r\tf=Hasklig\r\ts=Black Italic\r\tl=Hasklig Black\r\tm=1,Hasklig Black Italic\r"
        },
        {
          "name": "Italic",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 4.470703125,
          "content": "Copyright 2010-2019 Adobe (http://www.adobe.com/), with Reserved Font Name 'Source'. All Rights Reserved. Source is a trademark of Adobe in the United States and/or other countries.\r\n\r\nThis Font Software is licensed under the SIL Open Font License, Version 1.1.\r\n\r\nThis license is copied below, and is also available with a FAQ at: http://scripts.sil.org/OFL\r\n\r\n\r\n-----------------------------------------------------------\r\nSIL OPEN FONT LICENSE Version 1.1 - 26 February 2007\r\n-----------------------------------------------------------\r\n\r\nPREAMBLE\r\nThe goals of the Open Font License (OFL) are to stimulate worldwide\r\ndevelopment of collaborative font projects, to support the font creation\r\nefforts of academic and linguistic communities, and to provide a free and\r\nopen framework in which fonts may be shared and improved in partnership\r\nwith others.\r\n\r\nThe OFL allows the licensed fonts to be used, studied, modified and\r\nredistributed freely as long as they are not sold by themselves. The\r\nfonts, including any derivative works, can be bundled, embedded,\r\nredistributed and/or sold with any software provided that any reserved\r\nnames are not used by derivative works. The fonts and derivatives,\r\nhowever, cannot be released under any other type of license. The\r\nrequirement for fonts to remain under this license does not apply\r\nto any document created using the fonts or their derivatives.\r\n\r\nDEFINITIONS\r\n\"Font Software\" refers to the set of files released by the Copyright\r\nHolder(s) under this license and clearly marked as such. This may\r\ninclude source files, build scripts and documentation.\r\n\r\n\"Reserved Font Name\" refers to any names specified as such after the\r\ncopyright statement(s).\r\n\r\n\"Original Version\" refers to the collection of Font Software components as\r\ndistributed by the Copyright Holder(s).\r\n\r\n\"Modified Version\" refers to any derivative made by adding to, deleting,\r\nor substituting -- in part or in whole -- any of the components of the\r\nOriginal Version, by changing formats or by porting the Font Software to a\r\nnew environment.\r\n\r\n\"Author\" refers to any designer, engineer, programmer, technical\r\nwriter or other person who contributed to the Font Software.\r\n\r\nPERMISSION & CONDITIONS\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of the Font Software, to use, study, copy, merge, embed, modify,\r\nredistribute, and sell modified and unmodified copies of the Font\r\nSoftware, subject to the following conditions:\r\n\r\n1) Neither the Font Software nor any of its individual components,\r\nin Original or Modified Versions, may be sold by itself.\r\n\r\n2) Original or Modified Versions of the Font Software may be bundled,\r\nredistributed and/or sold with any software, provided that each copy\r\ncontains the above copyright notice and this license. These can be\r\nincluded either as stand-alone text files, human-readable headers or\r\nin the appropriate machine-readable metadata fields within text or\r\nbinary files as long as those fields can be easily viewed by the user.\r\n\r\n3) No Modified Version of the Font Software may use the Reserved Font\r\nName(s) unless explicit written permission is granted by the corresponding\r\nCopyright Holder. This restriction only applies to the primary font name as\r\npresented to the users.\r\n\r\n4) The name(s) of the Copyright Holder(s) or the Author(s) of the Font\r\nSoftware shall not be used to promote, endorse or advertise any\r\nModified Version, except to acknowledge the contribution(s) of the\r\nCopyright Holder(s) and the Author(s) or with their explicit written\r\npermission.\r\n\r\n5) The Font Software, modified or unmodified, in part or in whole,\r\nmust be distributed entirely under this license, and must not be\r\ndistributed under any other license. The requirement for fonts to\r\nremain under this license does not apply to any document created\r\nusing the Font Software.\r\n\r\nTERMINATION\r\nThis license becomes null and void if any of the above conditions are\r\nnot met.\r\n\r\nDISCLAIMER\r\nTHE FONT SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\r\nOF COPYRIGHT, PATENT, TRADEMARK, OR OTHER RIGHT. IN NO EVENT SHALL THE\r\nCOPYRIGHT HOLDER BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\r\nINCLUDING ANY GENERAL, SPECIAL, INDIRECT, INCIDENTAL, OR CONSEQUENTIAL\r\nDAMAGES, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\r\nFROM, OUT OF THE USE OR INABILITY TO USE THE FONT SOFTWARE OR FROM\r\nOTHER DEALINGS IN THE FONT SOFTWARE.\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.5048828125,
          "content": "### Hasklig – _Ligatures for code_\n\nProgramming languages are limited to relatively few characters. As a result, combined character operators surfaced quite early, such as the widely used arrow (`->`), comprised of a hyphen and greater sign. It looks like an arrow if you know the analogy and squint a bit.\n\nComposite glyphs are problematic in languages such as Haskell which utilize these complicated operators (`=>` `-<` `>>=` etc.) extensively. The readability of such complex code improves with pretty printing. Academic articles featuring Haskell code often use [lhs2tex](https://www.andres-loeh.de/lhs2tex/) to achieve an appealing rendering, but it is of no use when programming.\n\nSome Haskellers have resorted to Unicode symbols (`⇒`, `←` _etc._), which are valid in the <span style=\"font-variant: small-caps\">ghc</span>. However they are one-character-wide and therefore eye-strainingly small. Furthermore, when displayed as substitutes to the underlying multi-character representation, as [vim2hs](https://github.com/dag/vim2hs) does, the characters go out of alignment.\n\nHasklig solves the problem the way typographers have always solved ill-fitting characters which co-occur often: [ligatures](https://en.wikipedia.org/wiki/Typographic_ligature). The underlying code stays the same — only the representation changes.\n\nNot only can multi-character glyphs be rendered more vividly, other problematic things in monospaced fonts, such as spacing can be corrected.\n\n#### Hasklig\n![Hasklig Sample](hasklig_example.png?raw=true)\n\n#### Source Code Pro\n![Source Code Pro Sample](SourceCodeProSample.png?raw=true)\n\n#### Currently implemented symbols\n`<*` `<*>` `<+>` `<$>` `***` `<|` `|>`  `<|>` `!!` `||` `===` `==>` `<<<` `>>>` `<>` `+++` `<-` `->` `=>` `>>` `<<` `>>=` `=<<` `..` `...` `::` `-<` `>-` `-<<` `>>-` `++` `/=` `==`\n\n### Building the fonts from source\n\n#### Requirements\n\nTo build the binary font files from source, you need to have installed the\n[Adobe Font Development Kit for OpenType](http://www.adobe.com/devnet/opentype/afdko.html) (AFDKO). The AFDKO\ntools are widely used for font development today, and are part of most font\neditor applications.\n\nSome SVG glyphs are inserted into the fonts using Python [FontTools](https://pypi.python.org/pypi/FontTools).\n\n#### Building font instances from masters\n\nThis repository only includes so-called *master* weights of the fonts (effectively extralight and black).\nThe shapes of the weights in between these extremities are calculated by `makeInstancesUFO` supplied with `.designspace` files.\nFor convenience, the shell script **makeInstances** is provided, which  executes `makeInstancesUFO`, calculating all the italic and regular font weight shapes.\n\n```sh\n$ ./makeInstances.sh\n```\n\n#### Building one font\n\nThe key to building OTF or TTF fonts is `makeotf`, which is part of the AFDKO toolset.\nInformation and usage instructions can be found by executing `makeotf -h`.\n\nIn this repository, all necessary files are in place for building the OTF and TTF fonts.\nFor example, build a binary OTF font for the Regular style like this:\n\n```sh\n$ cd Roman/Regular/\n$ makeotf -r\n```\n\n#### Building all fonts\n\nFor convenience, a shell script named **build** is provided in the root directory.\nIt builds all OTFs and TTFs, and can be executed by typing:\n\n```sh\n$ ./build.sh\n```\n\nor this on Windows:\n\n```sh\n> build.cmd\n```\n\n\n### Credits\nOriginal idea, design and implementation of code ligatures by Ian Tuomi 2014-2015.\nThis typeface extends [Source Code Pro](https://github.com/adobe-fonts/source-code-pro) with ligatures.\n"
        },
        {
          "name": "Roman",
          "type": "tree",
          "content": null
        },
        {
          "name": "SourceCodeProSample.png",
          "type": "blob",
          "size": 120.1689453125,
          "content": null
        },
        {
          "name": "addSVGtable.py",
          "type": "blob",
          "size": 5.62890625,
          "content": "#!/usr/bin/env python3\n\n\"\"\"\nAdds an SVG table to a TTF or OTF font.\nThe file names of the SVG glyphs need to match their corresponding glyph final names.\n\"\"\"\n\nimport os\nimport sys\nimport re\n\ntry:\n    from fontTools import ttLib\nexcept ImportError:\n    print(\"ERROR: FontTools Python module is not installed.\", file=sys.stderr)\n    sys.exit(1)\n\nTABLE_TAG = 'SVG '\n\n# Regexp patterns\nreSVGelement = re.compile(r\"<svg.+?>.+?</svg>\", re.DOTALL)\nreIDvalue = re.compile(r\"<svg[^>]+?(id=\\\".*?\\\").+?>\", re.DOTALL)\nreViewBox = re.compile(r\"<svg.+?(viewBox=[\\\"|\\'][\\d, ]+[\\\"|\\']).+?>\", re.DOTALL)\nreWhiteSpace = re.compile(r\">\\s+<\", re.DOTALL)\n\n\ndef readFile(filePath):\n    with open(filePath, \"rt\") as f:\n        return f.read()\n\n\ndef setIDvalue(data, gid):\n    id = reIDvalue.search(data)\n    if id:\n        newData = re.sub(id.group(1), 'id=\"glyph{}\"'.format(gid), data)\n    else:\n        newData = re.sub('<svg', '<svg id=\"glyph{}\"'.format(gid), data)\n    return newData\n\n\ndef fixViewBox(data):\n    viewBox = reViewBox.search(data)\n    if not viewBox:\n        return data\n    fixedViewBox = 'viewBox=\\\"0 1000 1000 1000\\\"'\n    fixedData = re.sub(viewBox.group(1), fixedViewBox, data)\n    return fixedData\n\n\ndef getGlyphNameFromFileName(filePath):\n    folderPath, fontFileName = os.path.split(filePath)\n    fileNameNoExtension, fileExtension = os.path.splitext(fontFileName)\n    return fileNameNoExtension\n\n\ndef processFontFile(fontFilePath, svgFilePathsList):\n    font = ttLib.TTFont(fontFilePath)\n\n    # first create a dictionary because the SVG glyphs need to be sorted in the table\n    svgDocsDict = {}\n\n    for svgFilePath in svgFilePathsList:\n        gName = getGlyphNameFromFileName(svgFilePath)\n\n        try:\n            gid = font.getGlyphID(gName)\n        except KeyError:\n            print(\n                \"ERROR: Could not find a glyph named {} in the font {}.\".format(\n                    gName, os.path.split(fontFilePath)[1]\n                ),\n                file=sys.stderr\n            )\n            continue\n\n        svgItemsList = []\n        svgItemData = readFile(svgFilePath)\n        svgItemData = setIDvalue(svgItemData, gid)\n        svgItemData = fixViewBox(svgItemData)\n        # Remove all white space between elements\n        for whiteSpace in set(reWhiteSpace.findall(svgItemData)):\n            svgItemData = svgItemData.replace(whiteSpace, '><')\n        svgItemsList.append(svgItemData.strip())\n        svgItemsList.extend([gid, gid])\n        svgDocsDict[gid] = svgItemsList\n\n    # don't do any changes to the source OTF/TTF font if there's no SVG data\n    if not svgDocsDict:\n        print(\n            \"ERROR: Could not find any artwork files \"\n            \"that can be added to the font.\",\n            file=sys.stderr\n        )\n        return\n\n    svgDocsList = [svgDocsDict[index] for index in sorted(svgDocsDict.keys())]\n\n    svgTable = ttLib.newTable(TABLE_TAG)\n    svgTable.compressed = False  # GZIP the SVG docs\n    svgTable.docList = svgDocsList\n    font[TABLE_TAG] = svgTable\n    font.save(fontFilePath)\n    font.close()\n\n    print(\n        \"SVG table successfully added to {}\".format(fontFilePath),\n        file=sys.stderr\n    )\n\n\ndef validateSVGfiles(svgFilePathsList):\n    \"\"\"\n    Light validation of SVG files.\n    Checks that there is an <svg> element.\n    \"\"\"\n    validatedPaths = []\n\n    for filePath in svgFilePathsList:\n        # skip hidden files (filenames that start with period)\n        fileName = os.path.basename(filePath)\n        if fileName[0] == '.':\n            continue\n\n        # read file\n        data = readFile(filePath)\n\n        # find <svg> blob\n        svg = reSVGelement.search(data)\n        if not svg:\n            print(\n                \"WARNING: Could not find <svg> element in the file. \"\n                \"Skiping {}\".format(filePath)\n            )\n            continue\n\n        validatedPaths.append(filePath)\n\n    return validatedPaths\n\n\ndef getFontFormat(fontFilePath):\n    # these lines were scavenged from fontTools\n    with open(fontFilePath, \"rb\") as f:\n        header = f.read(256)\n        head = header[:4]\n    if head == b\"OTTO\":\n        return \"OTF\"\n    elif head in (b\"\\0\\1\\0\\0\", b\"true\"):\n        return \"TTF\"\n    return None\n\n\ndef run():\n    fontFilePath = os.path.realpath(sys.argv[1])\n    svgFolderPath = os.path.realpath(sys.argv[2])\n\n    # Font file path\n    if os.path.isfile(fontFilePath):\n        if getFontFormat(fontFilePath) not in [\"OTF\", \"TTF\"]:\n            print(\"ERROR: The path is not a valid OTF or TTF font.\",\n                  file=sys.stderr)\n            return\n    else:\n        print(\"ERROR: The path to the font is invalid.\",\n              file=sys.stderr)\n        return\n\n    # SVG folder path\n    if os.path.isdir(svgFolderPath):\n        svgFilePathsList = []\n        for dirName, subdirList, fileList in os.walk(\n                svgFolderPath):  # Support nested folders\n            for file in fileList:\n                svgFilePathsList.append(os.path.join(dirName,\n                                                     file))  # Assemble the full paths, not just file names\n    else:\n        print(\n            \"ERROR: The path to the folder \"\n            \"containing the SVG files is invalid.\",\n            file=sys.stderr\n        )\n        return\n\n    # validate the SVGs\n    svgFilePathsList = validateSVGfiles(svgFilePathsList)\n\n    if not svgFilePathsList:\n        print(\"WARNING: No SVG files were found.\", file=sys.stderr)\n        return\n\n    processFontFile(fontFilePath, svgFilePathsList)\n\n\nif __name__ == \"__main__\":\n    if len(sys.argv) != 3:\n        print(\"To run this script type:\\n  \"\n              \"python {} <path to input OTF/TTF file>  \"\n              \"<path to folder tree containing SVG files>\".format(sys.argv[0]))\n    else:\n        run()\n"
        },
        {
          "name": "all.rtf",
          "type": "blob",
          "size": 3.4560546875,
          "content": "{\\rtf1\\ansi\\ansicpg1252\\cocoartf1504\\cocoasubrtf760\n{\\fonttbl\\f0\\fnil\\fcharset0 Hasklig-ExtraLight;\\f1\\fnil\\fcharset0 Hasklig-Regular;\\f2\\fnil\\fcharset0 Hasklig-Light;\n\\f3\\fnil\\fcharset0 Hasklig-Medium;\\f4\\fnil\\fcharset0 Hasklig-Semibold;\\f5\\fnil\\fcharset0 Hasklig-Bold;\n\\f6\\fnil\\fcharset0 Hasklig-Black;\\f7\\fnil\\fcharset0 Hasklig-BlackIt;\\f8\\fnil\\fcharset0 Hasklig-ExtraLightIt;\n\\f9\\fnil\\fcharset0 Hasklig-It;\\f10\\fnil\\fcharset0 Hasklig-LightIt;\\f11\\fnil\\fcharset0 Hasklig-MediumIt;\n\\f12\\fnil\\fcharset0 Hasklig-SemiboldIt;\\f13\\fnil\\fcharset0 Hasklig-BoldIt;}\n{\\colortbl;\\red255\\green255\\blue255;}\n{\\*\\expandedcolortbl;;}\n\\paperw11900\\paperh16840\\margl1440\\margr1440\\vieww22420\\viewh16300\\viewkind0\n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx6236\\tx6803\\pardirnatural\\partightenfactor0\n\n\\f0\\fs36 \\cf0 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ::: ->> >=> <-> <=> <=<\n\\f1 \\\n\\\n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx6236\\tx6803\\pardirnatural\\partightenfactor0\n\n\\f2 \\cf0 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\n\\f1 \\\n\\\n=== ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\\\n\\\n\n\\f3 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\n\\f1 \\\n\\\n\n\\f4\\b === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\\\n\\\n\n\\f5 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\\\n\\\n\n\\f6 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\\\n\\\n\n\\f7\\i \\\n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx6236\\tx6803\\pardirnatural\\partightenfactor0\n\n\\f8\\b0 \\cf0 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\n\\f9 \\\n\\\n\n\\f10 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\n\\f9 \\\n\\\n=== ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\\\n\\\n\n\\f11 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\n\\f9 \\\n\n\\f12\\b \\\n=== ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\\\n\\\n\n\\f13 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\\\n\\\n\\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx6236\\tx6803\\pardirnatural\\partightenfactor0\n\n\\f7 \\cf0 === ==> =<< >>= >>> >>- -<< <*> <|> <$> <+> <<< ... +++ && || :: == => !!  >= >> >- -> -< <* *> <$ <= <> <- << .. ++ /= <| |> \\\\\\\\ ->> ::: >=> <-> <=> <=<\\\n\n\\f6\\i0 \\\n}"
        },
        {
          "name": "build.cmd",
          "type": "blob",
          "size": 1.7705078125,
          "content": "@echo off\nsetlocal\n\nset FAMILY=Hasklig\nset ROMAN_WEIGHTS=Black Bold ExtraLight Light Medium Regular Semibold\nset ITALIC_WEIGHTS=BlackIt BoldIt ExtraLightIt LightIt MediumIt It SemiboldIt\n\n:: find makeotf\nfor /f %%a in ('where makeotf') do set MAKEOTF_PATH=%%a\nif \"%MAKEOTF_PATH%\" == \"\" goto error_makeotf_not_found\n\ncall :GetDirectoryName PYTHON_PATH \"%MAKEOTF_PATH%\"\nset PYTHON_PATH=%PYTHON_PATH%Python\\AFDKOPython27\\python.exe\n\nset TARGET_PATH=%~dp0\\target\\\nset TARGET_OTF_PATH=%TARGET_PATH%OTF\\\nset TARGET_TTF_PATH=%TARGET_PATH%TTF\\\n\nif exist \"%TARGET_PATH%\" rmdir /s /q \"%TARGET_PATH%\"\nmkdir \"%TARGET_OTF_PATH%\"\nmkdir \"%TARGET_TTF_PATH%\"\n\nset x=%ROMAN_WEIGHTS%\n:loop_roman\nfor /f \"tokens=1*\" %%a in (\"%x%\") do (\n    call :build_font Roman %%a\n    set x=%%b\n)\nif defined x goto :loop_roman\n\nset x=%ITALIC_WEIGHTS%\n:loop_italic\nfor /f \"tokens=1*\" %%a in (\"%x%\") do (\n    call :build_font Italic %%a\n    set x=%%b\n)\nif defined x goto :loop_italic\n\nendlocal\ngoto :eof\n\n:: Build Font\n:: %1 - Roman/Italic\n:: %2 - Weight\n:build_font\ncall makeotf -f \"%~dp0\\%1\\Instances\\%2\\font.ufo\" -r -ci \"%~dp0\\uvs.txt\" -o \"%TARGET_OTF_PATH%\\%FAMILY%-%2.otf\"\ncall makeotf -f \"%~dp0\\%1\\Instances\\%2\\font.ttf\" -r -ci \"%~dp0\\uvs.txt\" -o \"%TARGET_TTF_PATH%\\%FAMILY%-%2.ttf\" -ff \"%~dp0\\%1\\Instances\\%2\\font.ufo\\features.fea\"\n:: \"%PYTHON_PATH%\" \"%~dp0\\addSVGtable.py\" \"%TARGET_OTF_PATH%\\%FAMILY%-%2.otf\" \"%~dp0\\svg\"\n:: \"%PYTHON_PATH%\" \"%~dp0\\addSVGtable.py\" \"%TARGET_TTF_PATH%\\%FAMILY%-%2.ttf\" \"%~dp0\\svg\"\ngoto :eof\n\n:error_makeotf_not_found\necho makeotf command not found. Install Adobe Font Development Kit for OpenType (http://www.adobe.com/devnet/opentype/afdko.html).\nendlocal\nexit /b 1\n\n::\n:: Get directory name from full path name.\n:: Usage:\n::   GetDirectoryName VARIABLE VALUE\n::\n:GetDirectoryName\ncall set %~1=%~dp2\ngoto :eof\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 1.240234375,
          "content": "#!/usr/bin/env sh\n\nset -e\n\nfamily=Hasklig\nroman_weights=(Black Bold ExtraLight Light Medium Regular Semibold)\nitalic_weights=(BlackIt BoldIt ExtraLightIt LightIt MediumIt It SemiboldIt)\n\n# get absolute path to bash script\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null && pwd )\"\n\n# clean existing build artifacts\nrm -rf $DIR/target/\notf_dir=\"$DIR/target/OTF\"\nttf_dir=\"$DIR/target/TTF\"\nmkdir -p $otf_dir $ttf_dir\n\n\nfunction build_font {\n    # $1 is Roman or Italic\n    # $2 is weight name\n    font_dir=$DIR/$1/Instances/$2\n    font_ufo=$font_dir/font.ufo\n    ps_name=$family-$2\n    echo $ps_name\n    echo \"Building OTF ...\"\n    # -r is for \"release mode\" (subroutinization + applied glyph order)\n    # -gs is for filtering the output font to contain only glyphs in the GOADB\n    makeotf -f $font_ufo -r -gs -omitMacNames\n    echo \"Building TTF ...\"\n    otf2ttf $font_dir/$ps_name.otf\n    echo \"Componentizing TTF ...\"\n    ttfcomponentizer $font_dir/$ps_name.ttf\n\n    # move font files to target directory\n    mv $font_dir/$ps_name.otf $otf_dir\n    mv $font_dir/$ps_name.ttf $ttf_dir\n    echo \"Done with $ps_name\"\n    echo \"\"\n    echo \"\"\n}\n\n\nfor w in ${roman_weights[@]}\ndo\n\tbuild_font Roman $w\ndone\n\n\nfor w in ${italic_weights[@]}\ndo\n\tbuild_font Italic $w\ndone\n"
        },
        {
          "name": "buildVFs.sh",
          "type": "blob",
          "size": 1.884765625,
          "content": "#!/usr/bin/env sh\n\nro_name=SourceCodeVariable-Roman\nit_name=SourceCodeVariable-Italic\n\n# get absolute path to bash script\nDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null && pwd )\"\n\n# clean existing build artifacts\nvar_dir=$DIR/target/VAR\nrm -rf $var_dir\nmkdir -p $var_dir\n\n\nfunction build_var_font {\n\t# $1 is Master directory\n\t# $2 is font name\n\techo $2\n\t# build variable OTF\n\t# --mkot gs is for using the makeotf option -gs, which omits glyphs not in the GOADB\n\tbuildmasterotfs --mkot gs -d $1/$2.designspace\n\tbuildcff2vf -d $1/$2.designspace\n\n\t# extract and subroutinize the CFF2 table\n\techo 'Subroutinizing' $2.otf\n\ttx -cff2 +S +b -std $1/$2.otf $1/.tb_cff2 2> /dev/null\n\n\t# replace CFF2 table with subroutinized version\n\tsfntedit -a CFF2=$1/.tb_cff2 $1/$2.otf\n\n\t# comment out STAT feature file which cannot be digested by fontmake\n\tsed -i '' 's/^/#/' $1/STAT.fea\n\n\t# build variable TTF\n\tfontmake -m $1/$2.designspace -o variable --production-names --output-path $1/$2.ttf\n\n\t# use DSIG, name, OS/2, hhea, post, and STAT tables from OTFs\n\tsfntedit -x DSIG=$1/.tb_DSIG,name=$1/.tb_name,OS/2=$1/.tb_os2,hhea=$1/.tb_hhea,post=$1/.tb_post,STAT=$1/.tb_STAT,fvar=$1/.tb_fvar $1/$2.otf\n\tsfntedit -a DSIG=$1/.tb_DSIG,name=$1/.tb_name,OS/2=$1/.tb_os2,hhea=$1/.tb_hhea,post=$1/.tb_post,STAT=$1/.tb_STAT,fvar=$1/.tb_fvar $1/$2.ttf\n\n\t# use cmap, GDEF, GPOS, and GSUB tables from TTFs\n\tsfntedit -x cmap=$1/.tb_cmap,GDEF=$1/.tb_GDEF,GPOS=$1/.tb_GPOS,GSUB=$1/.tb_GSUB $1/$2.ttf\n\tsfntedit -a cmap=$1/.tb_cmap,GDEF=$1/.tb_GDEF,GPOS=$1/.tb_GPOS,GSUB=$1/.tb_GSUB $1/$2.otf\n\n    # move font files to target directory\n    mv $1/$2.otf $var_dir\n    mv $1/$2.ttf $var_dir\n\n\t# delete build artifacts\n\trm $1/.tb_*\n\trm $1/master_*/*.*tf\n\n\t# undo changes to STAT feature file\n\tsed -i '' 's/#//' $1/STAT.fea\n\n    echo \"Done with $2\"\n    echo \"\"\n    echo \"\"\n}\n\nbuild_var_font $DIR/Roman/Masters $ro_name\nbuild_var_font $DIR/Italic/Masters $it_name\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "emoji",
          "type": "tree",
          "content": null
        },
        {
          "name": "familyGPOS.fea",
          "type": "blob",
          "size": 0.169921875,
          "content": "include (../markclasses.fea);\n\nfeature mark {\n\tinclude (../../../../familyWidthsAdjust.fea);\n\tinclude (../mark.fea);\n} mark;\n\n\nfeature mkmk {\n\tinclude (../mkmk.fea);\n} mkmk;\n"
        },
        {
          "name": "familyOS2.fea",
          "type": "blob",
          "size": 0.560546875,
          "content": "# NOTE: For cross-platform consistency, OS/2.TypoAscender and |OS/2.TypoDescender| must add up to the font's UPM value\nTypoAscender 750;\t# Must be the same on all fonts for cross-platform consistency\nTypoDescender -250;\t# Must be the same on all fonts for cross-platform consistency\nTypoLineGap 0;\t\t# Must be zero for cross-platform consistency\nwinAscent 984;\t\t# Must be the same on all fonts for cross-weight consistency\nwinDescent 273;\t\t# Must be the same on all fonts for cross-weight consistency\n\nCapHeight 660;\nWidthClass 5;\t\t# Medium (normal)\nVendor \"ADBO\";\nFSType 0;\n"
        },
        {
          "name": "familyTables.fea",
          "type": "blob",
          "size": 0.556640625,
          "content": "table head {\n\tinclude (../familyVersion.fea);\n} head;\n\n\ntable hhea {\n\t# NOTE: The OS/2.winAscent and OS/2.winDescent values are set by MakeOTF and vary depending on the font's bounding box\n\tAscender 984;\t\t# Must match OS/2.winAscent for cross-platform consistency\n\tDescender -273;\t\t# Must match OS/2.winDescent for cross-platform consistency\n\tLineGap 0;\t\t\t# Must be zero for cross-platform consistency\n} hhea;\n\n\ntable BASE {\n\tHorizAxis.BaseTagList ideo romn;\n\tHorizAxis.BaseScriptList\n\tlatn romn -170 0,\n\tgrek romn -170 0,\n\tcyrl romn -170 0,\n\tDFLT romn -170 0;\n} BASE;\n\n"
        },
        {
          "name": "familyWidthsAdjust.fea",
          "type": "blob",
          "size": 1.3369140625,
          "content": "@MARK_GLYPHS = [gravecmb gravecmb.cap variacmb acutecmb acutecmb.cap tonoscmb circumflexcmb circumflexcmb.cap tildecmb tildecmb.cap macroncmb macroncmb.cap overlinecmb overlinecmb.cap brevecmb brevecmb.cyr brevecmb.cap brevecmb.cyrcap dotaccentcmb dotaccentcmb.cap dieresiscmb dieresiscmb.cap hoicmb hoicmb.cap candrabinducmb candrabinducmb.cap ringcmb ringcmb.cap hungarumlautcmb hungarumlautcmb.cap caroncmb caroncmb.cap dblgravecmb dblgravecmb.cap breveinvertedcmb breveinvertedcmb.cap commaturnedabovecmb aspercmb commaabovecmb leniscmb lefttackbelowcmb righttackbelowcmb leftangleabovecmb horncmb ringhalfleftbelowcmb uptackbelowcmb downtackbelowcmb plusbelowcmb minusbelowcmb dotbelowcmb dieresisbelowcmb ringbelowcmb commabelowcmb commabelowcmb.a cedillacmb cedillacmb.cap ogonekcmb ogonekcmb.cap verticallinebelowcmb bridgebelowcmb caronbelowcmb brevebelowcmb breveinvertedbelowcmb tildebelowcmb macronbelowcmb tildeoverlaycmb ringhalfrightbelowcmb bridgeinvertedbelowcmb squarebelowcmb seagullbelowcmb xabovecmb perispomenicmb perispomenicmb.cap iotasubscriptcmb dieresistonoscmb dialytikagravecmb asperacutecmb aspergravecmb aspertildecmb lenisacutecmb lenisgravecmb lenistildecmb];\n@ZW_GLYPHS = [ZWNBS];\n\nlookup ADJUST_WIDTHS {\n\tpos [@MARK_GLYPHS @ZW_GLYPHS] <0 0 -600 0>;\n\tpos [macrondoublebelowcmb breveinverteddoublecmb] <-300 0 -600 0>;\n} ADJUST_WIDTHS;\n"
        },
        {
          "name": "familynameIDs.fea",
          "type": "blob",
          "size": 0.79296875,
          "content": "nameid 0 \"\\00a9 2010 - 2012 Adobe Systems Incorporated (http://www.adobe.com/), with Reserved Font Name \\2018Source\\2019.\";\nnameid 7 \"Source is a trademark of Adobe Systems Incorporated in the United States and/or other countries.\";\nnameid 8 \"Adobe Systems Incorporated\";\nnameid 9 \"Paul D. Hunt, Teo Tuominen\";\nnameid 11 \"http://www.adobe.com/type\";\nnameid 13 \"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL. This Font Software is distributed on an \\2018AS IS\\2019 BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the SIL Open Font License for the specific language, permissions and limitations governing your use of this Font Software.\";\nnameid 14 \"http://scripts.sil.org/OFL\";\n"
        },
        {
          "name": "features.fea",
          "type": "blob",
          "size": 0.333984375,
          "content": "include (../../../../familyTables.fea);\n\ntable OS/2 {\n\tinclude (../os2.fea);\n\tinclude (../../../familyUnicodeRange.fea);\n\tinclude (../../../../familyOS2.fea);\n} OS/2;\n\ntable name {\n\tinclude (../../../../familynameIDs.fea);\n} name;\n\ninclude (../../../familyGSUB.fea);\ninclude (../../../../familyGPOS.fea);\ninclude (../../../../ligatures.fea);\n"
        },
        {
          "name": "featuresVar.fea",
          "type": "blob",
          "size": 0.154296875,
          "content": "include (../../../familyTables.fea);\n\ntable name {\n\tinclude (../nameIDs.fea);\n\tinclude (../../../familynameIDs.fea);\n} name;\n\ninclude (../../familyGSUB.fea);\n"
        },
        {
          "name": "gen_calt.clj",
          "type": "blob",
          "size": 4.244140625,
          "content": "(comment \"\n  Modified 2016 under the terms of SIL for use in Hasklig.\n  Ian Tuomi\n\n  Copyright (c) 2014, Nikita Prokopov http://tonsky.me\n  with Reserved Font Name Fira Code.\n\n  Copyright (c) 2014, Mozilla Foundation https://mozilla.org/\n  with Reserved Font Name Fira Sans.\n\n  Copyright (c) 2014, Mozilla Foundation https://mozilla.org/\n  with Reserved Font Name Fira Mono.\n\n  Copyright (c) 2014, Telefonica S.A.\n\n  This Font Software is licensed under the SIL Open Font License, Version 1.1.\n  This license is copied below, and is also available with a FAQ at:\n  http://scripts.sil.org/OFL\n\")\n\n\n#^:shebang '[\n              exec java -cp \"$HOME/.m2/repository/org/clojure/clojure/1.7.0/clojure-1.7.0.jar\" clojure.main \"$0\" \"$@\"]\n\n\n(require '[clojure.string :as str])\n\n(def ligas\n   [ [\"asterisk\" \"asterisk\" \"asterisk\"]\n     ;[\"bar\" \"bar\" \"bar\"]\n     [\"colon\" \"colon\" \"colon\"]\n     [\"equal\" \"equal\" \"equal\"]\n     [\"equal\" \"equal\" \"greater\"]\n     [\"equal\" \"less\" \"less\"]\n     [\"greater\" \"greater\" \"equal\"]\n     [\"greater\" \"greater\" \"greater\"]\n     [\"greater\" \"greater\" \"hyphen\"]\n     [\"hyphen\" \"greater\" \"greater\"]\n     [\"hyphen\" \"less\" \"less\"]\n     [\"less\" \"asterisk\" \"greater\"]\n     [\"less\" \"bar\" \"greater\"]\n     [\"less\" \"dollar\" \"greater\"]\n     [\"less\" \"equal\" \"greater\"]\n     [\"less\" \"equal\" \"less\"]\n     [\"less\" \"hyphen\" \"greater\"]\n     [\"less\" \"plus\" \"greater\"]\n     [\"less\" \"less\" \"less\"]\n     [\"period\" \"period\" \"period\"]\n     [\"plus\" \"plus\" \"plus\"]\n     [\"asterisk\" \"greater\"]\n     [\"backslash\" \"backslash\"]\n     [\"bar\" \"bar\"]\n     [\"bar\" \"greater\"]\n     [\"colon\" \"colon\"]\n     [\"equal\" \"equal\"]\n     [\"equal\" \"greater\"]\n     [\"exclam\" \"exclam\"]\n     [\"greater\" \"equal\" \"greater\"]\n     [\"greater\" \"greater\"]\n     [\"greater\" \"hyphen\"]\n     [\"hyphen\" \"greater\"]\n     [\"hyphen\" \"less\"]\n     [\"less\" \"asterisk\"]\n     [\"less\" \"greater\"]\n     [\"less\" \"bar\"]\n     [\"less\" \"hyphen\"]\n     [\"less\" \"less\"]\n     [\"period\" \"period\"]\n     [\"plus\" \"plus\"]\n     [\"slash\" \"equal\"]])\n\n     (def ignores\n       { [\"slash\" \"asterisk\"]\n         (str\n           \"    ignore sub slash' asterisk slash;\\n\"\n           \"    ignore sub asterisk slash' asterisk;\\n\")\n\n         [\"asterisk\" \"slash\"]\n         (str\n           \"    ignore sub slash asterisk' slash;\\n\"\n           \"    ignore sub asterisk' slash asterisk;\\n\")\n\n         [\"asterisk\" \"asterisk\"]\n         (str\n           \"    ignore sub slash asterisk' asterisk;\\n\"\n           \"    ignore sub asterisk' asterisk slash;\\n\")\n\n         [\"asterisk\" \"asterisk\" \"asterisk\"]\n         (str\n           \"    ignore sub slash asterisk' asterisk asterisk;\\n\"\n           \"    ignore sub asterisk' asterisk asterisk slash;\\n\")\n\n         })\n\n     (defn liga->rule\n       \"[f f i] => { [LIG LIG i] f_f_i\n                     [LIG   f i] LIG\n                     [ f    f i] LIG }\"\n       [liga]\n       (case (count liga)\n         2 (let [[a b] liga]\n             (str/replace\n               (str \"  lookup 1_2 {\\n\"\n                    \"    ignore sub 1 1' 2;\\n\"\n                    \"    ignore sub 1' 2 2;\\n\"\n                    (get ignores liga)\n                    \"    sub LIG 2' by 1_2;\\n\"\n                    \"    sub 1'  2  by LIG;\\n\"\n                    \"  } 1_2;\")\n               #\"\\d\" {\"1\" a \"2\" b}))\n         3 (let [[a b c] liga]\n             (str/replace\n               (str \"  lookup 1_2_3 {\\n\"\n                    \"    ignore sub 1 1' 2 3;\\n\"\n                    \"    ignore sub 1' 2 3 3;\\n\"\n                    (get ignores liga)\n                    \"    sub LIG LIG 3' by 1_2_3;\\n\"\n                    \"    sub LIG  2' 3  by LIG;\\n\"\n                    \"    sub 1'   2  3  by LIG;\\n\"\n                    \"  } 1_2_3;\")\n               #\"\\d\" {\"1\" a \"2\" b \"3\" c}))\n         4 (let [[a b c d] liga]\n             (str/replace\n               (str \"  lookup 1_2_3_4 {\\n\"\n                    \"    ignore sub 1 1' 2 3 4;\\n\"\n                    \"    ignore sub 1' 2 3 4 4;\\n\"\n                    (get ignores liga)\n                    \"    sub LIG LIG LIG 4' by 1_2_3_4;\\n\"\n                    \"    sub LIG LIG  3' 4  by LIG;\\n\"\n                    \"    sub LIG  2'  3  4  by LIG;\\n\"\n                    \"    sub 1'   2   3  4  by LIG;\\n\"\n                    \"  } 1_2_3_4;\")\n               #\"\\d\" {\"1\" a \"2\" b \"3\" c \"4\" d}))))\n\n     (println (->> ligas (sort-by count) (reverse) (map liga->rule) (str/join \"\\n\\n\")))\n"
        },
        {
          "name": "hasklig_example.png",
          "type": "blob",
          "size": 14.2763671875,
          "content": null
        },
        {
          "name": "index_to_resources.txt",
          "type": "blob",
          "size": 10.7900390625,
          "content": "Index to resources in repository for Source Code Pro (SCP)\n\n\tThis document’s purpose is to provide a description of the file types and \nfolder structure found in this repository and the tools used to generate and\nprocess them. This index also lays out the workflow from making and editing the \nsources to compiling working fonts.\n\nA.\tKey to File Types:\n\n\t1.\tFiles for type design\n\t\tThe vast majority of files in this repository belong to the Unified Font \n\t\tObject (ufo) storage format, which is an open format and largely XML based. \n\t\tThis document will not describe UFO-related files that are found in the \n\t\tUFO file packages in this repository. For information about these file \n\t\ttypes, please consult the official documentation of the UFO specification, \n\t\tthat can be found online at: \n\t\thttp://unifiedfontobject.org OR\n\t\thttps://github.com/unified-font-object/ufo-spec\n\n\t\t1.1\tMaster UFO files\n\t\t\tA master, in the context of typeface design, is a designed reference \n\t\t\tpoint that defines the bounds of the type design space. Master UFO \n\t\t\tfiles house all the information needed to compile a working font in a \n\t\t\tformat that is easily read by font editors and humans alike. However, \n\t\t\tthis information is stored using XML syntax, whereas the tools used \n\t\t\tto compile fonts for this project use the feature file (.fea) syntax \n\t\t\t(see §3 for more information).\n\t\t\t\tPerhaps most imporatantly, the masters define the paramaters of a \n\t\t\ttypeface family. Each master is a separate design that relates to the \n\t\t\tothers. Basically this means that the the masters must be compatible \n\t\t\twith each other in certain ways: masters must (except for the case of \n\t\t\tintermediate masters) contain the same number of glyphs, each of which \n\t\t\tmust be point-compatible with the corresponding glyph outlines in each\n\t\t\tdesign master. Additionally, \n\t\t\tThese parameters include designed glyph outlines at \n\t\t\tthe extremes of the design space, sometimes with intermediate poles \n\t\t\tthat help with more fine-grained control of the design space. Glyph\n\t\t\toutlines must be point-compatible with all other masters in order to \n\t\t\tenable the interpolation of intermediate instances within the design \n\t\t\tspace that the masters define. Master UFO files are what the designer \n\t\t\tmodifies directly using a font editor that has UFO import / export support.\n\t\t\t\tMaster UFO files will also be the inputs for tools that will ap-\n\t\t\tply kerning and anchor information to the design.\n\t\t\t\tThe master UFO files live in the directories named 'RomanMasters' \n\t\t\tand 'ItalicMasters'. These have the family name, eg. 'SourceCodePro', \n\t\t\tin the UFO file name, to which is appended '-It' for italic masters, \n\t\t\tand '_d' where d is a digit that corresponds to the the master’s \n\t\t\tindex number.\n\n[\t\t1.1\tUFO files in this repository\n\n\t\t\ta.\tDefault UFO data files:\n\t\t\t\tThe UFO files in this repository follow the structure outlined \n\t\t\t\tin the documentation referenced above, however you will also \n\t\t\t\tfind some:\n\t\t\t\n\t\t\tb.\tCustom UFO data files:\n\n\t\t\t\tb.1\tcom.adobe.type.processedHashMap, in 'data' folder\n\t\t\t\t\tThis file stores a hash of the outlines of all glyphs in the \n\t\t\t\t\tdefault layer (glyphs folder). This is for the purpose of \n\t\t\t\t\ttracking which modified glyphs need to be processed by \n\t\t\t\t\tcheckOutlines (FDK) and autohint (FDK).\n\n\t\t1.2\tUFO types in this repository\n]\n\n\t2.\tFiles for interpolation\n\n\t\t2.1\tDesign space file (.designspace)\n\t\t\tThis is a MutatorMath file in XML format that maps the relationships \n\t\t\tbetween the design master UFOs and the instances that will be generated \n\t\t\tby those using the makeInstancesUFO (FDK) tool. The designspace file can \n\t\t\tbe output by Superpolator (3rd party, proprietary tool), or crafted and \n\t\t\tedited by any text editor.\n\t\t2.2\tSuperpolator file (.sp3)\n\t\t\tThis is a Superpolator file that maps the relationships between the \n\t\t\tdesign masters to define the design space and also plots the postions \n\t\t\tof intermediate masters to be interpolated. As stated above, this \n\t\t\tinformation can be exported to a .designspace file.\n\n\t3.\tFiles for font compilation\n\t\tThe entirety of this project leverages a workflow that relies on the \n\t\tAdobe Font Development Kit for OpenType (FDK) to compile the final font \n\t\tsoftware. The FDK is a set of open source tools developed and maintained \n\t\tby Adobe for the purpose of developing, compiling, and processing OpenType \n\t\t(OT) fonts, specifically for Compact Font Format (CFF) fonts, but with \n\t\tsome TrueType (TTF) font support as well.\n\t\tDocumentation on the FDK can be found on Adobe’s website:\n\t\thttp://www.adobe.com/devnet/opentype/afdko.html\n\t\tThe open source version of the toolkit can be found on GitHub:\n\t\thttps://github.com/adobe-type-tools/afdko\n\t\t\tMany of the files in this repository are input files used by the \n\t\tmakeotf tool to compile font software. A full description of these input \n\t\tfiles can be found as part of the FDK distribution package on GitHub:\n\t\thttps://github.com/adobe-type-tools/afdko/blob/master/FDK/Technical%20Documentation/MakeOTFUserGuide.pdf\n\t\tHowever, a brief description of each of these files will follow.\n\n\t\t3.1\tFamily-wide files\n\t\t\tFiles that contain information that applies to the entire type family \n\t\t\t(or sub-family) are typically stored at the top-level directory.\n\n\t\t\ta.\tfamily.fea\n\t\t\t\tThis file contains the OT shaping rules that apply to all fonts \n\t\t\t\tin the family. Because there is currently a discrepancy in the \n\t\t\t\tglyph repritoire of the upright and italic fonts, there is also \n\t\t\t\tan italics.fea file that overrides the family.fea file.\n\t\t\tb.\tFontMenuNameDB\n\t\t\t\tA text file which stores font naming information.\n\t\t\tc.\tGlyphOrderAndAliasDB\n\t\t\t\tA text file which stores relationships between glyph names used \n\t\t\t\tin production and glyph names to be used int he final font. In \n\t\t\t\tgeneral, the production names follow those that can be found in \n\t\t\t\tthe Adobe Glyp Dictionary (AGD.txt), which is part of the FDK \n\t\t\t\tdistribution. Final names follow a strict set of rules laid out \n\t\t\t\tby the Adobe Glyph List Specification:\n\t\t\t\thttps://github.com/adobe-type-tools/agl-specification\n\t\t\t\t\tThis file is also used to set the order of glyphs in the final \n\t\t\t\tfont software.\n\t\t\td.\ttables.fea\n\t\t\t\tFor this project, this file only houses some of the <name> table \n\t\t\t\tinformation that is shared across all fonts in the family and the \n\t\t\t\t<base> table information. However, this file can also be used to \n\t\t\t\thouse other table information as needed.\n\t\t\te.\twidthsAdjust.fea\n\t\t\t\tThis file is specific to this project. Because SCP is a monospace \n\t\t\t\tfont, some interpreters expect strict adherance to a common set \n\t\t\t\twidth for each character, including those which are defined by \n\t\t\t\tUnicode to be non-spacing (have 0 width). To satisfy both these \n\t\t\t\trequirements, the combining diacritics are set on the full width \n\t\t\t\tand then OT positioning features adjust the width of these char-\n\t\t\t\tacters so that they effectively become non-spacing.\n\n\t\t3.2\tFont-specific files\n\t\t\tFiles that contain information that applies to a specific font style. \n\t\t\tThese can be found in the directories that correspond to the font \n\t\t\tstyle names, eg. 'Regular' for the Regular style.\n\n\t\t\ta.\tInstance UFO files\n\t\t\t\tAn instance, in the context of font development, is a input file \n\t\t\t\tthat is automatically interpolated from within the design space of \n\t\t\t\tthe master files. Instance UFOs are generated by the makeInstancesUFO \n\t\t\t\t(FDK) tool, which will also flatten (remove overlaps) and add \n\t\t\t\thinting instructions to all glyphs. Instance UFO files will also \n\t\t\t\tcontain interpolated kerning and anchor infomation if present in the \n\t\t\t\tmaster UFO files. The instance UFO files typically are simply \n\t\t\t\tnamed 'font.ufo'.\n\t\t\t\t\tIn additon to the default UFO structure, these instance UFOs \n\t\t\t\talso inlcude a file named 'com.adobe.type.processedHashMap', in \n\t\t\t\tthe 'data' folder. This file stores a hash of the outlines of all \n\t\t\t\tglyphs in the default layer (glyphs folder). This is for the pur-\n\t\t\t\tpose of tracking which modified glyphs need to be processed by \n\t\t\t\tcheckOutlines (FDK) and autohint (FDK).\n\n\t4.\tFiles for storage of font meta information\n\t\tThese files, although not strictly necessary, are helpful auxilliary files \n\t\tthat can aid in the type design / font development process.\n\n\t\t4.1\tMasters meta information files\n\t\t\ta.\tderivedchars_0\n\t\t\t\tStores information on the relationships of components for \n\t\t\t\tcomposite glyphs.\n\t\t\tb.\tanchors_0\n\t\t\t\tHouses anchor information that is used in generating the various \n\t\t\t\tmark features files that are used by the FDK.\n\n\t\t4.2\tInstances meta information files\n\t\t\ta.\tderivedchars_TT\n\t\t\t\tSimilar to the other derivedchars files previously described, these \n\t\t\t\tfiles are used to regenerate composite glyphs in the font.ttf.\n\t\t\tb.\ttthints\n\t\t\t\tThis is a storage file for TT hinting information.\n\t\t\tc.\tppms\n\t\t\t\tAnother file storing TT hinting parameters.\n\n\t5.\tBuild scripts & misc.\n\t\tThese files do something:\n\t\t5.1\tbuild.sh\n\t\t\tDESCRIPTION GOES HERE.\n\t\t5.2\tpackage.json\n\t\t\tDESCRIPTION GOES HERE.\n\t\t5.3\t.gitignore\n\t\t\tSelf-explanatory.\n\n\t6.\tDocmentation\n\t\tThese are human-readable files and should be self-explanatory:\n\t\t\t6.1\tLICENSE.txt\n\t\t\t6.2\tReadMe.html\n\t\t\t6.3\tREADME.md\n\t\t\t6.4\trelnotes.txt\n\t\t\t6.5\tRoadmap.txt\n\t\t\t6.6\tSourceCodeProReadMe.html\n\n\n\nB.\tKey to Folder Structure*:\n\nSoucrceCodePro\n\t└ RomanMasters\n\t\t└ SourceCodePro_0.ufo\n\t\t\t├ metainfo.plist\n\t\t\t├ lib.plist\n\t\t\t├ fontinfo.plist\n\t\t\t├ features.fea\n\t\t\t├ groups.plist\n\t\t\t└ glyphs\n\t\t\t\t├ contents.plist\n\t\t\t\t├ _notdef.glif\n\t\t\t\t├ a.glif\n\t\t\t\t├ …\n\t\t├ …\n\t\t├ SourceCodePro.designspace\n\t\t├ SourceCodePro.sp3\n\t\t├ anchors_0\n\t\t├ anchors_2\n\t\t├ derivedchars_0\n\t\t└ derivedchars_2\n\t└ ItalicMasters\n\t\t└ do.\n\t└ Roman\n\t\t└ Regular\n\t\t\t└ font.ufo\n\t\t\t\t├ metainfo.plist\n\t\t\t\t├ lib.plist\n\t\t\t\t├ fontinfo.plist\n\t\t\t\t├ groups.plist\n\t\t\t\t├ layercontents.plist\n\t\t\t\t└ glyphs\n\t\t\t\t\t├ contents.plist\n\t\t\t\t\t├ _notdef.glif\n\t\t\t\t\t├ a.glif\n\t\t\t\t\t├ …\n\t\t\t\t└ glyphs.com.adobe.type.processedGlyphs\n\t\t\t\t\t└ do.\n\t\t\t\t└ data\n\t\t\t\t\t└ com.adobe.type.processedHashMap\n\t\t\t├ features\n\t\t\t├ fontinfo\n\t\t\t├ markclasses.fea\n\t\t\t├ mark.fea\n\t\t\t├ mkmk.fea\n\t\t\t├ font.ttf\n\t\t\t├ derivedchars_TT\n\t\t\t├ tthints\n\t\t\t└ ppms\n\t\t├ …\n\t└ Italic\n\t\t└ do.\n\t├ family.fea\n\t├ FontMenuNameDB\n\t├ GlyphOrderAndAliasDB\n\t├ tables.fea\n\t├ widthsAdjust.fea\n\t├ build.sh\n\t├ package.json\n\t├ .gitignore\n\t├ LICENSE.txt\n\t├ ReadMe.html\n\t├ README.md\n\t├ relnotes.txt\n\t├ Roadmap.txt\n\t├ SourceCodeProReadMe.html\n\t└ index_to_resources.txt\n\n* This structure breaks from alphabetical ordering and uses logical order where \nit would help to simplify the the representation of the file structure. The fol-\nlowing conventions are also used to this end: do. to connote that the contents \nare structurally the same as the previous item at the same level (if having dif-\nferent file names), … to connote an ellision of files of the same type as the \nprevious item at the same level.\n\nC.\tWorkflow"
        },
        {
          "name": "ligatures.fea",
          "type": "blob",
          "size": 9.22265625,
          "content": "feature calt {\n  lookup greater_equal_greater {\n    ignore sub greater greater' equal greater;\n    ignore sub greater' equal greater greater;\n    sub LIG LIG greater' by greater_equal_greater;\n    sub LIG  equal' greater  by LIG;\n    sub greater'   equal  greater  by LIG;\n  } greater_equal_greater;\n\n  lookup plus_plus_plus {\n    ignore sub plus plus' plus plus;\n    ignore sub plus' plus plus plus;\n    sub LIG LIG plus' by plus_plus_plus;\n    sub LIG  plus' plus  by LIG;\n    sub plus'   plus  plus  by LIG;\n  } plus_plus_plus;\n\n  lookup period_period_period {\n    ignore sub period period' period period;\n    ignore sub period' period period period;\n    sub LIG LIG period' by period_period_period;\n    sub LIG  period' period  by LIG;\n    sub period'   period  period  by LIG;\n  } period_period_period;\n\n  lookup less_less_less {\n    ignore sub less less' less less;\n    ignore sub less' less less less;\n    sub LIG LIG less' by less_less_less;\n    sub LIG  less' less  by LIG;\n    sub less'   less  less  by LIG;\n  } less_less_less;\n\n  lookup less_plus_greater {\n    ignore sub less less' plus greater;\n    ignore sub less' plus greater greater;\n    sub LIG LIG greater' by less_plus_greater;\n    sub LIG  plus' greater  by LIG;\n    sub less'   plus  greater  by LIG;\n  } less_plus_greater;\n\n  lookup less_hyphen_greater {\n    ignore sub less less' hyphen greater;\n    ignore sub less' hyphen greater greater;\n    sub LIG LIG greater' by less_hyphen_greater;\n    sub LIG  hyphen' greater  by LIG;\n    sub less'   hyphen  greater  by LIG;\n  } less_hyphen_greater;\n\n  lookup less_equal_less {\n    ignore sub less less' equal less;\n    ignore sub less' equal less less;\n    sub LIG LIG less' by less_equal_less;\n    sub LIG  equal' less  by LIG;\n    sub less'   equal  less  by LIG;\n  } less_equal_less;\n\n  lookup less_equal_greater {\n    ignore sub less less' equal greater;\n    ignore sub less' equal greater greater;\n    sub LIG LIG greater' by less_equal_greater;\n    sub LIG  equal' greater  by LIG;\n    sub less'   equal  greater  by LIG;\n  } less_equal_greater;\n\n  lookup less_dollar_greater {\n    ignore sub less less' dollar greater;\n    ignore sub less' dollar greater greater;\n    sub LIG LIG greater' by less_dollar_greater;\n    sub LIG  dollar' greater  by LIG;\n    sub less'   dollar  greater  by LIG;\n  } less_dollar_greater;\n\n  lookup less_bar_greater {\n    ignore sub less less' bar greater;\n    ignore sub less' bar greater greater;\n    sub LIG LIG greater' by less_bar_greater;\n    sub LIG  bar' greater  by LIG;\n    sub less'   bar  greater  by LIG;\n  } less_bar_greater;\n\n  lookup less_asterisk_greater {\n    ignore sub less less' asterisk greater;\n    ignore sub less' asterisk greater greater;\n    sub LIG LIG greater' by less_asterisk_greater;\n    sub LIG  asterisk' greater  by LIG;\n    sub less'   asterisk  greater  by LIG;\n  } less_asterisk_greater;\n\n  lookup hyphen_less_less {\n    ignore sub hyphen hyphen' less less;\n    ignore sub hyphen' less less less;\n    sub LIG LIG less' by hyphen_less_less;\n    sub LIG  less' less  by LIG;\n    sub hyphen'   less  less  by LIG;\n  } hyphen_less_less;\n\n  lookup hyphen_greater_greater {\n    ignore sub hyphen hyphen' greater greater;\n    ignore sub hyphen' greater greater greater;\n    sub LIG LIG greater' by hyphen_greater_greater;\n    sub LIG  greater' greater  by LIG;\n    sub hyphen'   greater  greater  by LIG;\n  } hyphen_greater_greater;\n\n  lookup greater_greater_hyphen {\n    ignore sub greater greater' greater hyphen;\n    ignore sub greater' greater hyphen hyphen;\n    sub LIG LIG hyphen' by greater_greater_hyphen;\n    sub LIG  greater' hyphen  by LIG;\n    sub greater'   greater  hyphen  by LIG;\n  } greater_greater_hyphen;\n\n  lookup greater_greater_greater {\n    ignore sub greater greater' greater greater;\n    ignore sub greater' greater greater greater;\n    sub LIG LIG greater' by greater_greater_greater;\n    sub LIG  greater' greater  by LIG;\n    sub greater'   greater  greater  by LIG;\n  } greater_greater_greater;\n\n  lookup greater_greater_equal {\n    ignore sub greater greater' greater equal;\n    ignore sub greater' greater equal equal;\n    sub LIG LIG equal' by greater_greater_equal;\n    sub LIG  greater' equal  by LIG;\n    sub greater'   greater  equal  by LIG;\n  } greater_greater_equal;\n\n  lookup equal_less_less {\n    ignore sub equal equal' less less;\n    ignore sub equal' less less less;\n    sub LIG LIG less' by equal_less_less;\n    sub LIG  less' less  by LIG;\n    sub equal'   less  less  by LIG;\n  } equal_less_less;\n\n  lookup equal_equal_greater {\n    ignore sub equal equal' equal greater;\n    ignore sub equal' equal greater greater;\n    sub LIG LIG greater' by equal_equal_greater;\n    sub LIG  equal' greater  by LIG;\n    sub equal'   equal  greater  by LIG;\n  } equal_equal_greater;\n\n  lookup equal_equal_equal {\n    ignore sub equal equal' equal equal;\n    ignore sub equal' equal equal equal;\n    sub LIG LIG equal' by equal_equal_equal;\n    sub LIG  equal' equal  by LIG;\n    sub equal'   equal  equal  by LIG;\n  } equal_equal_equal;\n\n  lookup colon_colon_colon {\n    ignore sub colon colon' colon colon;\n    ignore sub colon' colon colon colon;\n    sub LIG LIG colon' by colon_colon_colon;\n    sub LIG  colon' colon  by LIG;\n    sub colon'   colon  colon  by LIG;\n  } colon_colon_colon;\n\n  lookup asterisk_asterisk_asterisk {\n    ignore sub asterisk asterisk' asterisk asterisk;\n    ignore sub asterisk' asterisk asterisk asterisk;\n    ignore sub slash asterisk' asterisk asterisk;\n    ignore sub asterisk' asterisk asterisk slash;\n    sub LIG LIG asterisk' by asterisk_asterisk_asterisk;\n    sub LIG  asterisk' asterisk  by LIG;\n    sub asterisk'   asterisk  asterisk  by LIG;\n  } asterisk_asterisk_asterisk;\n\n  lookup slash_equal {\n    ignore sub slash slash' equal;\n    ignore sub slash' equal equal;\n    sub LIG equal' by slash_equal;\n    sub slash'  equal  by LIG;\n  } slash_equal;\n\n  lookup plus_plus {\n    ignore sub plus plus' plus;\n    ignore sub plus' plus plus;\n    sub LIG plus' by plus_plus;\n    sub plus'  plus  by LIG;\n  } plus_plus;\n\n  lookup period_period {\n    ignore sub period period' period;\n    ignore sub period' period period;\n    sub LIG period' by period_period;\n    sub period'  period  by LIG;\n  } period_period;\n\n  lookup less_less {\n    ignore sub less less' less;\n    ignore sub less' less less;\n    sub LIG less' by less_less;\n    sub less'  less  by LIG;\n  } less_less;\n\n  lookup less_hyphen {\n    ignore sub less less' hyphen;\n    ignore sub less' hyphen hyphen;\n    sub LIG hyphen' by less_hyphen;\n    sub less'  hyphen  by LIG;\n  } less_hyphen;\n\n  lookup less_bar {\n    ignore sub less less' bar;\n    ignore sub less' bar bar;\n    sub LIG bar' by less_bar;\n    sub less'  bar  by LIG;\n  } less_bar;\n\n  lookup less_greater {\n    ignore sub less less' greater;\n    ignore sub less' greater greater;\n    sub LIG greater' by less_greater;\n    sub less'  greater  by LIG;\n  } less_greater;\n\n  lookup less_asterisk {\n    ignore sub less less' asterisk;\n    ignore sub less' asterisk asterisk;\n    sub LIG asterisk' by less_asterisk;\n    sub less'  asterisk  by LIG;\n  } less_asterisk;\n\n  lookup hyphen_less {\n    ignore sub hyphen hyphen' less;\n    ignore sub hyphen' less less;\n    sub LIG less' by hyphen_less;\n    sub hyphen'  less  by LIG;\n  } hyphen_less;\n\n  lookup hyphen_greater {\n    ignore sub hyphen hyphen' greater;\n    ignore sub hyphen' greater greater;\n    sub LIG greater' by hyphen_greater;\n    sub hyphen'  greater  by LIG;\n  } hyphen_greater;\n\n  lookup greater_hyphen {\n    ignore sub greater greater' hyphen;\n    ignore sub greater' hyphen hyphen;\n    sub LIG hyphen' by greater_hyphen;\n    sub greater'  hyphen  by LIG;\n  } greater_hyphen;\n\n  lookup greater_greater {\n    ignore sub greater greater' greater;\n    ignore sub greater' greater greater;\n    sub LIG greater' by greater_greater;\n    sub greater'  greater  by LIG;\n  } greater_greater;\n\n  lookup exclam_exclam {\n    ignore sub exclam exclam' exclam;\n    ignore sub exclam' exclam exclam;\n    sub LIG exclam' by exclam_exclam;\n    sub exclam'  exclam  by LIG;\n  } exclam_exclam;\n\n  lookup equal_greater {\n    ignore sub equal equal' greater;\n    ignore sub equal' greater greater;\n    sub LIG greater' by equal_greater;\n    sub equal'  greater  by LIG;\n  } equal_greater;\n\n  lookup equal_equal {\n    ignore sub equal equal' equal;\n    ignore sub equal' equal equal;\n    sub LIG equal' by equal_equal;\n    sub equal'  equal  by LIG;\n  } equal_equal;\n\n  lookup colon_colon {\n    ignore sub colon colon' colon;\n    ignore sub colon' colon colon;\n    sub LIG colon' by colon_colon;\n    sub colon'  colon  by LIG;\n  } colon_colon;\n\n  lookup bar_greater {\n    ignore sub bar bar' greater;\n    ignore sub bar' greater greater;\n    sub LIG greater' by bar_greater;\n    sub bar'  greater  by LIG;\n  } bar_greater;\n\n  lookup bar_bar {\n    ignore sub bar bar' bar;\n    ignore sub bar' bar bar;\n    sub LIG bar' by bar_bar;\n    sub bar'  bar  by LIG;\n  } bar_bar;\n\n  lookup backslash_backslash {\n    ignore sub backslash backslash' backslash;\n    ignore sub backslash' backslash backslash;\n    sub LIG backslash' by backslash_backslash;\n    sub backslash'  backslash  by LIG;\n  } backslash_backslash;\n\n  lookup asterisk_greater {\n    ignore sub asterisk asterisk' greater;\n    ignore sub asterisk' greater greater;\n    sub LIG greater' by asterisk_greater;\n    sub asterisk'  greater  by LIG;\n  } asterisk_greater;\n} calt;\n"
        },
        {
          "name": "makeInstances.sh",
          "type": "blob",
          "size": 0.1240234375,
          "content": "makeInstancesUFO -d Roman/Masters/SourceCodePro.designspace\nmakeInstancesUFO -d Italic/Masters/SourceCodePro-Italic.designspace"
        },
        {
          "name": "relnotes.txt",
          "type": "blob",
          "size": 4.693359375,
          "content": "\nversion 2.032 (romans) & version 1.052 (italics) created 2020/10/09\n\n\tRemoves SVG table to allow for color-coded text in text editing apps. (issue #250)\n\n\nversion 2.030 (romans) & version 1.050 (italics) created 2016/06/09\n\n\tUpdates outlines for Q to address interpolation issues.\n\n\nversion 2.028 (romans) & version 1.048 (italics) created 2016/06/08\n\n\tUpdates outlines for Q to address CFF hinting issues.\n\tCorrects OpenType feature rules relating to capital figures and alternate 1s.\n\tFixes final names for fi and fl ligatures to f_i and f_l.\n\n\nversion 2.026 (romans) & version 1.046 (italics) created 2016/06/01\n\n\tUpdates the design of 1s in all styles for better character recognition.\n\tAdds alternates for l (lowercase L) and 1. (issue #126)\n\tRemoves colored artwork from default forms of glyphs.\n\tAdds IVSes for emoji representation for pictorial glyphs.\n\t\n\nversion 2.020 (romans) & version 1.040 (italics) created 2016/05/05\n\n\tFixes issue #121 for Italic.\n\tUpdates TT hinting for Block- and Quadrant glyphs (U+2080 -- U+209F).\n\tAdds manual TT hints to specific Box Drawing Characters for improved horizontal connection.\n\t\n\nversion 2.015 (romans) & version 1.035 (italics) created 2016/05/02\n\n\tRedesigns box drawing shades (issue #57).\n\tZeros widths of fraction characters in frac feature (issue #121).\n\tAdds TrueType hints to box drawing characters (issue #122).\n\tRemoves NULL (U+0000) and CR (U+000D) glyphs from TrueType fonts.\n\tGzips SVG table documents.\n\n\nversion 2.010 (romans) & version 1.030 (italics) created 2015/07/07\n\n\tFixes hinting on Regular OE, tugrik in uprights. Corrects path direction on invsmileface.\n\tNudges the dot accent up to prevent from collapsing in CFF fonts. Adjusts design and positioning of cedillas.\n\n\nversion 2.005 (romans) & version 1.025 (italics) created 2015/06/25\n\n\tAdds characters that were missing for Arabic and Hebrew transliteration schemes.\n\tAdds characters for coffee, heartblackheavy, robotface.\n\tUpdates design of ringhalfleftmod, ringhalfrightmod, glottalstopreversedmod, smileface, invsmileface, poopile.\n\tReorders some glyphs.\n\tFixes CVT errors in the italics.\n\tAdds UI names to Character Variants features.\n\tAdds SVG colored versions of these characters: ☑​✓​♪​♫​♥​♦​☺​☻​❤​☕​💩​🤖​🔒\n\n\nversion 2.001 created 2015/06/09\n\n\t(Romans-only release)\n\tUpdates the design of the following glyphs in intermediate weights, thanks to intermediate master:\n\t\tB, M, N, W, e, g, m, w, Bstroke, Hbar, Oslash, Tbar, Eth, ae, bstroke, dcroat, \n\t\teogonek, hbar, oslash, oe, eth, zero.0, zero.0o, zero.0c, e.sups\n\tAdds alternate lowercase i with foot serifs, (ss04).\n\tAdds support for some extended Latin (IPA) in all styles.\n\tAdds support for Greek and Cyrillic in upright styles.  (GitHub issues #48 & #85)\n\tAdds character variants features to fonts (ccXX).\n\tAdds characters to fully support WGL4 standard.\n\tAdds smiling poo emoji (just because).\n\tChanges vendor ID from ADBE to ADBO.  (GitHub issue #80)\n\tUpdates NAME table to remove full license text.  (GitHub issue #83)\n\tAdds Powerline symbols.  (GitHub issue #43)\n\tAdds mathematical operators specifically requested to date.  (GitHub issue #49)\n\tAdds geometric shapes specifically requested to date.  (GitHub issue #51)\n\tIncreases length of em dash.  (GitHub issue #85)\n\n\nversion 1.020 created 2015/06/09\n\n\t(Italics-only release)\n\tFirst release.\n\tAdds italic corresponding italic styles to family. (GitHub issue #6)\n\n\nversion 1.017 created 2013/01/11\n\n\tUpdates the hinting to the default asterisk in some styles that were missed in the previous version.\n\tUpdates the design of the asterisk glyphs, bar, and broken bar.\n\n\nversion 1.016 created 2013/01/09\n\n\tUpdates the hinting to the default asterisk in all styles.\n\tAdds an new Medium weight to the font project.\n\tUpdates design of the following glyphs to center them within glyph height/width:\n\t\tlighttrpldashhorzbxd\n\t\theavytrpldashhorzbxd\n\t\tlighttrpldashvertbxd\n\t\theavytrpldashvertbxd\n\t\tlightquaddashhorzbxd\n\t\theavyquaddashhorzbxd\n\t\tlightquaddashvertbxd\n\t\theavyquaddashvertbxd\n\t\tlightdbldashhorzbxd\n\t\theavydbldashhorzbxd\n\t\tlightdbldashvertbxd\n\t\theavydbldashvertbxd\n\n\nversion 1.013 created 2012/11/29\n\n\tUpdates design of asterisk and hyphen to accommodate coders' preferences.  (GitHub issue #13)\n\tRealigns math and punctuation glyphs.\n\tAdds a stylistic set <ss01> for typographic alternates.\n\tAdds a stylistic set <ss04> for alternate dollar sign.  (GitHub issue #4)\n\tAdds a small number of IPA characters.\n\tAdds box drawing characters and block elements.  (GitHub issue #22)\n\n\nversion 1.011 created 2012/10/19\n\n\tRebuilt fonts with new MakeOTF version.\n\nversion 1.010 created 2012/09/30\n\n\tFixed TrueType hinting problem in Bold ampersand.  (GitHub issue #11)\n\nversion 1.009 created 2012/09/20\n\n\tFirst release.\n"
        },
        {
          "name": "uvs.txt",
          "type": "blob",
          "size": 0.9580078125,
          "content": "# http://www.unicode.org/reports/tr51/index.html#Emoji_Variation_Sequences\n# FE0E text style\n# FE0F emoji style\n\n# Test page\n# http://unicode.org/emoji/charts/emoji-style.html\n\n# Standard variation sequences\n# http://unicode.org/emoji/charts/emoji-variants.html\n\n# Code point / Variation selector / Final glyph name\n\n2611 FE0E; uni2611\n2615 FE0E; uni2615\n2713 FE0E; uni2713\n2764 FE0E; uni2764\n266A FE0E; u1F3B5\n1F3B5 FE0E; u1F3B5\n1F3B6 FE0E; u1F3B6\n266B FE0E; u1F3B6\n1F4A9 FE0E; u1F4A9\n1F512 FE0E; u1F512\n1F916 FE0E; u1F916\n2611 FE0F; uni2611_uniFE0F\n2615 FE0F; uni2615_uniFE0F\n263A FE0F; uni263A_uniFE0F\n263B FE0F; uni263B_uniFE0F\n2660 FE0F; uni2660_uniFE0F\n2663 FE0F; uni2663_uniFE0F\n2665 FE0F; uni2665_uniFE0F\n2666 FE0F; uni2666_uniFE0F\n2713 FE0F; uni2713_uniFE0F\n2764 FE0F; uni2764_uniFE0F\n266A FE0F; u1F3B5_uniFE0F\n1F3B5 FE0F; u1F3B5_uniFE0F\n1F3B6 FE0F; u1F3B6_uniFE0F\n266B FE0F; u1F3B6_uniFE0F\n1F4A9 FE0F; u1F4A9_uniFE0F\n1F512 FE0F; u1F512_uniFE0F\n1F916 FE0F; u1F916_uniFE0F\n"
        }
      ]
    }
  ]
}