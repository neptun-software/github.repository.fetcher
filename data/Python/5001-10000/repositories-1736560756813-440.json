{
  "metadata": {
    "timestamp": 1736560756813,
    "page": 440,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gorakhargosh/watchdog",
      "stars": 6707,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".cirrus.yml",
          "type": "blob",
          "size": 0.6806640625,
          "content": "task:\n  matrix:\n    freebsd_instance:\n      image_family: freebsd-13-0\n    freebsd_instance:\n      image_family: freebsd-12-2\n      \n  install_script:\n    - pkg install -y python39 py39-sqlite3\n    # Print the Python version, only to be sure we are running the version we want\n    - python3.9 -c 'import platform; print(\"Python\", platform.python_version())'\n    # Check SQLite3 is installed\n    - python3.9 -c 'import sqlite3; print(\"SQLite3\", sqlite3.version)'\n  setup_script:\n    - python3.9 -m ensurepip\n    - python3.9 -m pip install -U pip\n    - python3.9 -m pip install -r requirements-tests.txt\n  lint_script:\n    - python3.9 -m ruff src\n  tests_script:\n    - python3.9 -bb -m pytest tests\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.255859375,
          "content": "# Language aware diff headers\n# https://tekin.co.uk/2020/10/better-git-diff-output-for-ruby-python-elixir-and-more\n# https://gist.github.com/tekin/12500956bd56784728e490d8cef9cb81\n# https://github.com/git/git/blob/master/userdiff.c\n*.c diff=cpp\n*.py diff=python\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4951171875,
          "content": "# Ignore temporary files.\n*.bak\n*.bkp\n*.log\n*.py[co]\n*.swp\n*~\n.DS_Store\n.\\#*\n._*\n*.o\n*.so\nDesktop.ini\nThumbs.db\n\\#*\\#\n__MACOSX__\n\n# Ignore generated files and directories.\n*.egg-info/\n*.egg\n.installed.cfg\nbuild/\ndevelop-eggs/\ndist/\neggs/\nparts/\n__pycache__/\nMANIFEST\n\n# Project files for VS Code, idea, eclipse, and netbeans\nnbproject/\n.idea/\n.settings/\n.vscode/\n\n# Generated by tests.\n.coverage\n.coverage.*\nhtmlcov/\n.tox/\n.cache/\n.pytest_cache/\n\n# From virtualenv.\ninclude/\nlib/\n/bootstrap.py\nvenv/\n.venv/\n"
        },
        {
          "name": ".well-known",
          "type": "tree",
          "content": null
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 2.859375,
          "content": "Original Project Lead:\n----------------------\nYesudeep Mangalapilly <yesudeep@google.com>\n\nCurrent Project Lead:\n---------------------\nMickaël Schoentgen <contact@tiger-222.fr>\n\nContributors in alphabetical order:\n-----------------------------------\nAdrian Tejn Kern <tejnkern@gmail.com>\nAndrew Schaaf <andrew@andrewschaaf.com>\nDanilo de Jesus da Silva Bellini <danilo.bellini@gmail.com>\nDavid LaPalomento <dlapalomento@gmail.com>\ndvogel <dvogel@wlscapi.uwsc.wisc.edu>\nFilip Noetzel <filip@j03.de>\nGary van der Merwe <garyvdm@garyvdm.localdomain>\ngfxmonk <tim3d.junk@gmail.com>\nGora Khargosh <gora.khargosh@gmail.com>\nHannu Valtonen <hannu.valtonen@ohmu.fi>\nJesse Printz <jesse@jonypawks.net>\nKurt McKee <contactme@kurtmckee.org>\nLéa Klein <lklein@nuxeo.com>\nLuke McCarthy <luke@iogopro.co.uk>\nLukáš Lalinský <lalinsky@gmail.com>\nMalthe Borch <mborch@gmail.com>\nMartin Kreichgauer <kreichgauer@gmail.com>\nMartin Kreichgauer <martin@kreichgauer.com>\nMike Lundy <mike@fluffypenguin.org>\nNicholas Hairs <info+watchdog@nicholashairs.com>\nRaymond Hettinger <python@rcn.com>\nRoman Ovchinnikov <coolthecold@gmail.com>\nRotem Yaari <vmalloc@gmail.com>\nRyan Kelly <ryan@rfk.id.au>\nSenko Rasic <senko.rasic@dobarkod.hr>\nSenko Rašić <senko@senko.net>\nShane Hathaway <shane@hathawaymix.org>\nSimon Pantzare <simon@pewpewlabs.com>\nSimon Pantzare <simpa395@student.liu.se>\nSteven Samuel Cole <steven.samuel.cole@gmail.com>\nStéphane Klein <stephane@harobed.org>\nThomas Guest <tag@wordaligned.org>\nThomas Heller <theller@ctypes.org>\nTim Cuthbertson <tim+github@gfxmonk.net>\nTodd Whiteman <toddw@activestate.com>\nWill McGugan <will@willmcgugan.com>\nYesudeep Mangalapilly <gora.khargosh@gmail.com>\nYesudeep Mangalapilly <yesudeep@google.com>\n\nWe would like to thank these individuals for ideas:\n---------------------------------------------------\nTim Golden               <mail@timgolden.me.uk>\nSebastien Martini        <seb@dbzteam.org>\n\nInitially we used the flask theme for the documentation which was written by\n----------------------------------------------------------------------------\nArmin Ronacher           <armin.ronacher@active-4.com>\n\n\nWatchdog also includes open source libraries or adapted code\nfrom the following projects:\n\n- MacFSEvents - https://github.com/malthe/macfsevents\n- watch_directory.py - http://timgolden.me.uk/python/downloads/watch_directory.py\n- pyinotify - https://github.com/seb-m/pyinotify\n- fsmonitor - https://github.com/shaurz/fsmonitor\n- echo - http://wordaligned.org/articles/echo\n- Lukáš Lalinský's ordered set queue implementation:\n  https://stackoverflow.com/questions/1581895/how-check-if-a-task-is-already-in-python-queue\n- Armin Ronacher's flask-sphinx-themes for the documentation:\n  https://github.com/mitsuhiko/flask-sphinx-themes\n- pyfilesystem - https://github.com/PyFilesystem/pyfilesystem\n- get_FILE_NOTIFY_INFORMATION - http://blog.gmane.org/gmane.comp.python.ctypes/month=20070901\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 0.6865234375,
          "content": "Copyright 2018-2025 Mickaël Schoentgen & contributors\nCopyright 2014-2018 Thomas Amland & contributors\nCopyright 2012-2014 Google, Inc.\nCopyright 2011-2012 Yesudeep Mangalapilly\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.4755859375,
          "content": "include README.rst\ninclude changelog.rst\ninclude LICENSE\ninclude COPYING\ninclude AUTHORS\nrecursive-include src *.py *.h *.c\ninclude src/watchdog/py.typed\ninclude tox.ini\ninclude docs/*.txt\ninclude docs/*.xml\ninclude docs/Makefile\ninclude docs/make.bat\ninclude requirements-tests.txt\nrecursive-include docs/source *\nrecursive-include tests *.py\n#global-exclude .DS_Store\n#global-exclude Thumbs.db\n#global-exclude Desktop.ini\n#global-exclude *.swp\n#global-exclude *~\n#global-exclude *.bak\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 8.5947265625,
          "content": "Watchdog\n========\n\n|PyPI Version|\n|PyPI Status|\n|PyPI Python Versions|\n|GitHub Build Status|\n|GitHub License|\n\nPython API and shell utilities to monitor file system events.\n\nWorks on 3.9+.\n\nExample API Usage\n-----------------\n\nA simple program that uses watchdog to monitor directories specified\nas command-line arguments and logs events generated:\n\n.. code-block:: python\n\n    import time\n\n    from watchdog.events import FileSystemEvent, FileSystemEventHandler\n    from watchdog.observers import Observer\n\n\n    class MyEventHandler(FileSystemEventHandler):\n        def on_any_event(self, event: FileSystemEvent) -> None:\n            print(event)\n\n\n    event_handler = MyEventHandler()\n    observer = Observer()\n    observer.schedule(event_handler, \".\", recursive=True)\n    observer.start()\n    try:\n        while True:\n            time.sleep(1)\n    finally:\n        observer.stop()\n        observer.join()\n\n\nShell Utilities\n---------------\n\nWatchdog comes with an *optional* utility script called ``watchmedo``.\nPlease type ``watchmedo --help`` at the shell prompt to\nknow more about this tool.\n\nHere is how you can log the current directory recursively\nfor events related only to ``*.py`` and ``*.txt`` files while\nignoring all directory events:\n\n.. code-block:: bash\n\n    watchmedo log \\\n        --patterns='*.py;*.txt' \\\n        --ignore-directories \\\n        --recursive \\\n        --verbose \\\n        .\n\nYou can use the ``shell-command`` subcommand to execute shell commands in\nresponse to events:\n\n.. code-block:: bash\n\n    watchmedo shell-command \\\n        --patterns='*.py;*.txt' \\\n        --recursive \\\n        --command='echo \"${watch_src_path}\"' \\\n        .\n\nPlease see the help information for these commands by typing:\n\n.. code-block:: bash\n\n    watchmedo [command] --help\n\n\nAbout ``watchmedo`` Tricks\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n``watchmedo`` can read ``tricks.yaml`` files and execute tricks within them in\nresponse to file system events. Tricks are actually event handlers that\nsubclass ``watchdog.tricks.Trick`` and are written by plugin authors. Trick\nclasses are augmented with a few additional features that regular event handlers\ndon't need.\n\nAn example ``tricks.yaml`` file:\n\n.. code-block:: yaml\n\n    tricks:\n    - watchdog.tricks.LoggerTrick:\n        patterns: [\"*.py\", \"*.js\"]\n    - watchmedo_webtricks.GoogleClosureTrick:\n        patterns: ['*.js']\n        hash_names: true\n        mappings_format: json                  # json|yaml|python\n        mappings_module: app/javascript_mappings\n        suffix: .min.js\n        compilation_level: advanced            # simple|advanced\n        source_directory: app/static/js/\n        destination_directory: app/public/js/\n        files:\n          index-page:\n          - app/static/js/vendor/jquery*.js\n          - app/static/js/base.js\n          - app/static/js/index-page.js\n          about-page:\n          - app/static/js/vendor/jquery*.js\n          - app/static/js/base.js\n          - app/static/js/about-page/**/*.js\n\nThe directory containing the ``tricks.yaml`` file will be monitored. Each trick\nclass is initialized with its corresponding keys in the ``tricks.yaml`` file as\narguments and events are fed to an instance of this class as they arrive.\n\nInstallation\n------------\nInstall from PyPI using ``pip``:\n\n.. code-block:: bash\n\n    $ python -m pip install -U watchdog\n\n    # or to install the watchmedo utility:\n    $ python -m pip install -U 'watchdog[watchmedo]'\n\nInstall from source:\n\n.. code-block:: bash\n\n    $ python -m pip install -e .\n\n    # or to install the watchmedo utility:\n    $ python -m pip install -e '.[watchmedo]'\n\n\nDocumentation\n-------------\n\nYou can browse the latest release documentation_ online.\n\nContribute\n----------\n\nFork the `repository`_ on GitHub and send a pull request, or file an issue\nticket at the `issue tracker`_. For general help and questions use\n`stackoverflow`_ with tag `python-watchdog`.\n\nCreate and activate your virtual environment, then::\n\n    python -m pip install tox\n    python -m tox [-q] [-e ENV]\n\nIf you are making a substantial change, add an entry to the \"Unreleased\" section\nof the `changelog`_.\n\nSupported Platforms\n-------------------\n\n* Linux 2.6 (inotify)\n* macOS (FSEvents, kqueue)\n* FreeBSD/BSD (kqueue)\n* Windows (ReadDirectoryChangesW with I/O completion ports;\n  ReadDirectoryChangesW worker threads)\n* OS-independent (polling the disk for directory snapshots and comparing them\n  periodically; slow and not recommended)\n\nNote that when using watchdog with kqueue, you need the\nnumber of file descriptors allowed to be opened by programs\nrunning on your system to be increased to more than the\nnumber of files that you will be monitoring. The easiest way\nto do that is to edit your ``~/.profile`` file and add\na line similar to::\n\n    ulimit -n 1024\n\nThis is an inherent problem with kqueue because it uses\nfile descriptors to monitor files. That plus the enormous\namount of bookkeeping that watchdog needs to do in order\nto monitor file descriptors just makes this a painful way\nto monitor files and directories. In essence, kqueue is\nnot a very scalable way to monitor a deeply nested\ndirectory of files and directories with a large number of\nfiles.\n\nAbout using watchdog with editors like Vim\n------------------------------------------\n\nVim does not modify files unless directed to do so.\nIt creates backup files and then swaps them in to replace\nthe files you are editing on the disk. This means that\nif you use Vim to edit your files, the on-modified events\nfor those files will not be triggered by watchdog.\nYou may need to configure Vim appropriately to disable\nthis feature.\n\n\nAbout using watchdog with CIFS\n------------------------------\n\nWhen you want to watch changes in CIFS, you need to explicitly tell watchdog to\nuse ``PollingObserver``, that is, instead of letting watchdog decide an\nappropriate observer like in the example above, do::\n\n    from watchdog.observers.polling import PollingObserver as Observer\n\n\nDependencies\n------------\n\n1. Python 3.9 or above.\n2. XCode_ (only on macOS when installing from sources)\n3. PyYAML_ (only for ``watchmedo``)\n\nLicensing\n---------\n\nWatchdog is licensed under the terms of the `Apache License, version 2.0`_.\n\n- Copyright 2018-2025 Mickaël Schoentgen & contributors\n- Copyright 2014-2018 Thomas Amland & contributors\n- Copyright 2012-2014 Google, Inc.\n- Copyright 2011-2012 Yesudeep Mangalapilly\n\nProject `source code`_ is available at Github. Please report bugs and file\nenhancement requests at the `issue tracker`_.\n\nWhy Watchdog?\n-------------\n\nToo many people tried to do the same thing and none did what I needed Python\nto do:\n\n* pnotify_\n* `unison fsmonitor`_\n* fsmonitor_\n* guard_\n* pyinotify_\n* `inotify-tools`_\n* jnotify_\n* treewatcher_\n* `file.monitor`_\n* pyfilesystem_\n\n.. links:\n.. _Yesudeep Mangalapilly: yesudeep@gmail.com\n.. _source code: https://github.com/gorakhargosh/watchdog\n.. _issue tracker: https://github.com/gorakhargosh/watchdog/issues\n.. _Apache License, version 2.0: https://www.apache.org/licenses/LICENSE-2.0\n.. _documentation: https://python-watchdog.readthedocs.io/\n.. _stackoverflow: https://stackoverflow.com/questions/tagged/python-watchdog\n.. _repository: https://github.com/gorakhargosh/watchdog\n.. _issue tracker: https://github.com/gorakhargosh/watchdog/issues\n.. _changelog: https://github.com/gorakhargosh/watchdog/blob/master/changelog.rst\n\n.. _PyYAML: https://www.pyyaml.org/\n.. _XCode: https://developer.apple.com/technologies/tools/xcode.html\n\n.. _pnotify: http://mark.heily.com/pnotify\n.. _unison fsmonitor: https://webdav.seas.upenn.edu/viewvc/unison/trunk/src/fsmonitor.py?view=markup&pathrev=471\n.. _fsmonitor: https://github.com/shaurz/fsmonitor\n.. _guard: https://github.com/guard/guard\n.. _pyinotify: https://github.com/seb-m/pyinotify\n.. _inotify-tools: https://github.com/rvoicilas/inotify-tools\n.. _jnotify: http://jnotify.sourceforge.net/\n.. _treewatcher: https://github.com/jbd/treewatcher\n.. _file.monitor: https://github.com/pke/file.monitor\n.. _pyfilesystem: https://github.com/PyFilesystem/pyfilesystem\n\n.. |PyPI Version| image:: https://img.shields.io/pypi/v/watchdog.svg\n   :target: https://pypi.python.org/pypi/watchdog/\n.. |PyPI Status| image:: https://img.shields.io/pypi/status/watchdog.svg\n   :target: https://pypi.python.org/pypi/watchdog/\n.. |PyPI Python Versions| image:: https://img.shields.io/pypi/pyversions/watchdog.svg\n   :target: https://pypi.python.org/pypi/watchdog/\n.. |Github Build Status| image:: https://github.com/gorakhargosh/watchdog/workflows/Tests/badge.svg\n   :target: https://github.com/gorakhargosh/watchdog/actions?query=workflow%3ATests\n.. |GitHub License| image:: https://img.shields.io/github/license/gorakhargosh/watchdog.svg\n   :target: https://github.com/gorakhargosh/watchdog/blob/master/LICENSE\n"
        },
        {
          "name": "changelog.rst",
          "type": "blob",
          "size": 32.3994140625,
          "content": ".. :changelog:\n\nChangelog\n---------\n\n6.0.1-dev\n~~~~~~~~~\n\n202x-xx-xx • `full history <https://github.com/gorakhargosh/watchdog/compare/v6.0.0...HEAD>`__\n\n- \n- Thanks to our beloved contributors: @BoboTiG, @\n\n6.0.0\n~~~~~\n\n2024-11-01 • `full history <https://github.com/gorakhargosh/watchdog/compare/v5.0.3...v6.0.0>`__\n\n- Pin test dependecies.\n- [docs] Add typing info to quick start. (`#1082 <https://github.com/gorakhargosh/watchdog/pull/1082>`__)\n- [inotify] Use of ``select.poll()`` instead of deprecated ``select.select()``, if available. (`#1078 <https://github.com/gorakhargosh/watchdog/pull/1078>`__)\n- [inotify] Fix reading inotify file descriptor after closing it. (`#1081 <https://github.com/gorakhargosh/watchdog/pull/1081>`__)\n- [utils] The ``stop_signal`` keyword-argument type of the ``AutoRestartTrick`` class can now be either a ``signal.Signals`` or an ``int``.\n- [utils] Added the ``__repr__()`` method to the ``Trick`` class.\n- [utils] Removed the unused ``echo_class()`` function from the ``echo`` module.\n- [utils] Removed the unused ``echo_instancemethod()`` function from the ``echo`` module.\n- [utils] Removed the unused ``echo_module()`` function from the ``echo`` module.\n- [utils] Removed the unused ``is_class_private_name()`` function from the ``echo`` module.\n- [utils] Removed the unused ``is_classmethod()`` function from the ``echo`` module.\n- [utils] Removed the unused ``ic_method(met()`` function from the ``echo`` module.\n- [utils] Removed the unused ``method_name()`` function from the ``echo`` module.\n- [utils] Removed the unused ``name()`` function from the ``echo`` module.\n- [watchmedo] Fixed Mypy issues.\n- [watchmedo] Added the ``__repr__()`` method to the ``HelpFormatter`` class.\n- [watchmedo] Removed the ``--trace`` CLI argument from the ``watchmedo log`` command, useless since events are logged by default at the ``LoggerTrick`` class level.\n- [windows] Fixed Mypy issues.\n- Thanks to our beloved contributors: @BoboTiG, @g-pichler, @ethan-vanderheijden, @nhairs\n\n5.0.3\n~~~~~\n\n2024-09-27 • `full history <https://github.com/gorakhargosh/watchdog/compare/v5.0.2...v5.0.3>`__\n\n- [inotify] Improve cleaning up ``Inotify`` threads, and add ``eventlet`` test cases (`#1070 <https://github.com/gorakhargosh/watchdog/pull/1070>`__)\n- Thanks to our beloved contributors: @BoboTiG, @ethan-vanderheijden\n\n5.0.2\n~~~~~\n\n2024-09-03 • `full history <https://github.com/gorakhargosh/watchdog/compare/v5.0.1...v5.0.2>`__\n\n- Enable OS specific Mypy checks (`#1064 <https://github.com/gorakhargosh/watchdog/pull/1064>`__)\n- [watchmedo] Fix ``tricks`` argument type of ``schedule_tricks()`` (`#1063 <https://github.com/gorakhargosh/watchdog/pull/1063>`__)\n- Thanks to our beloved contributors: @gnought, @BoboTiG\n\n5.0.1\n~~~~~\n\n2024-09-02 • `full history <https://github.com/gorakhargosh/watchdog/compare/v5.0.0...v5.0.1>`__\n\n- [kqueue] Fix ``TypeError: kqueue.control() only accepts positional parameters``  (`#1062 <https://github.com/gorakhargosh/watchdog/pull/1062>`__)\n- Thanks to our beloved contributors: @apoirier, @BoboTiG\n\n5.0.0\n~~~~~\n\n2024-08-26 • `full history <https://github.com/gorakhargosh/watchdog/compare/v4.0.2...v5.0.0>`__\n\n**Breaking Changes**\n\n- Drop support for Python 3.8 (`#1055 <https://github.com/gorakhargosh/watchdog/pull/1055>`__)\n- [core] Enforced usage of proper keyword-arguments (`#1057 <https://github.com/gorakhargosh/watchdog/pull/1057>`__)\n- [core] Renamed the ``BaseObserverSubclassCallable`` class to ``ObserverType`` (`#1055 <https://github.com/gorakhargosh/watchdog/pull/1055>`__)\n- [inotify] Renamed the ``inotify_event_struct`` class to ``InotifyEventStruct`` (`#1055 <https://github.com/gorakhargosh/watchdog/pull/1055>`__)\n- [inotify] Renamed the ``UnsupportedLibc`` exception to ``UnsupportedLibcError`` (`#1057 <https://github.com/gorakhargosh/watchdog/pull/1057>`__)\n- [inotify] Removed the ``InotifyConstants.IN_CLOSE`` constant (`#1046 <https://github.com/gorakhargosh/watchdog/pull/1046>`__)\n- [watchmedo] Renamed the ``LogLevelException`` exception to ``LogLevelError`` (`#1057 <https://github.com/gorakhargosh/watchdog/pull/1057>`__)\n- [watchmedo] Renamed the ``WatchdogShutdown`` exception to ``WatchdogShutdownError`` (`#1057 <https://github.com/gorakhargosh/watchdog/pull/1057>`__)\n- [windows] Renamed the ``FILE_NOTIFY_INFORMATION`` class to ``FileNotifyInformation`` (`#1055 <https://github.com/gorakhargosh/watchdog/pull/1055>`__)\n- [windows] Removed the unused ``WATCHDOG_TRAVERSE_MOVED_DIR_DELAY`` constant (`#1057 <https://github.com/gorakhargosh/watchdog/pull/1057>`__)\n\n**Other Changes**\n\n- [core] Enable ``disallow_untyped_calls`` Mypy rule (`#1055 <https://github.com/gorakhargosh/watchdog/pull/1055>`__)\n- [core] Enable ``disallow_untyped_defs`` Mypy rule (`#1060 <https://github.com/gorakhargosh/watchdog/pull/1060>`__)\n- [core] Improve typing references for events (`#1040 <https://github.com/gorakhargosh/watchdog/issues/1040>`__)\n- [inotify] Add support for ``IN_CLOSE_NOWRITE`` events. A ``FileClosedNoWriteEvent`` event will be fired, and its ``on_closed_no_write()`` dispatcher has been introduced (`#1046 <https://github.com/gorakhargosh/watchdog/pull/1046>`__)\n- Thanks to our beloved contributors: @BoboTiG\n\n4.0.2\n~~~~~\n\n2024-08-11 • `full history <https://github.com/gorakhargosh/watchdog/compare/v4.0.1...v4.0.2>`__\n\n- Add support for Python 3.13 (`#1052 <https://github.com/gorakhargosh/watchdog/pull/1052>`__)\n- [core] Run ``ruff``, apply several fixes (`#1033 <https://github.com/gorakhargosh/watchdog/pull/1033>`__)\n- [core] Remove execution rights from ``events.py``\n- [documentation] Update ``PatternMatchingEventHandler`` docstrings (`#1048 <https://github.com/gorakhargosh/watchdog/pull/1048>`__)\n- [documentation] Simplify the quickstart example (`#1047 <https://github.com/gorakhargosh/watchdog/pull/1047>`__)\n- [fsevents] Add missing ``event_filter`` keyword-argument to ``FSEventsObserver.schedule()`` (`#1049 <https://github.com/gorakhargosh/watchdog/pull/1049>`__)\n- [utils] Fix a possible race condition in ``AutoRestartTrick`` (`#1002 <https://github.com/gorakhargosh/watchdog/pull/1002>`__)\n- [watchmedo] Remove execution rights from ``watchmedo.py``\n- Thanks to our beloved contributors: @BoboTiG, @nbelakovski, @ivg\n\n4.0.1\n~~~~~\n\n2024-05-23 • `full history <https://github.com/gorakhargosh/watchdog/compare/v4.0.0...v4.0.1>`__\n\n- [inotify] Fix missing ``event_filter`` for the full emitter (`#1032 <https://github.com/gorakhargosh/watchdog/pull/1032>`__)\n- Thanks to our beloved contributors: @mraspaud, @BoboTiG\n\n4.0.0\n~~~~~\n\n2024-02-06 • `full history <https://github.com/gorakhargosh/watchdog/compare/v3.0.0...v4.0.0>`__\n\n- Drop support for Python 3.7.\n- Add support for Python 3.12.\n- [snapshot] Add typing to ``dirsnapshot`` (`#1012 <https://github.com/gorakhargosh/watchdog/pull/1012>`__)\n- [snapshot] Added ``DirectorySnapshotDiff.ContextManager`` (`#1011 <https://github.com/gorakhargosh/watchdog/pull/1011>`__)\n- [events] ``FileSystemEvent``, and subclasses, are now ``dataclass``es, and their ``repr()`` has changed\n- [windows] ``WinAPINativeEvent`` is now a ``dataclass``, and its ``repr()`` has changed\n- [events] Log ``FileOpenedEvent``, and ``FileClosedEvent``, events in ``LoggingEventHandler``\n- [tests] Improve ``FileSystemEvent`` coverage\n- [watchmedo] Log all events in ``LoggerTrick``\n- [windows] The ``observers.read_directory_changes.WATCHDOG_TRAVERSE_MOVED_DIR_DELAY`` hack was removed. The constant will be kept to prevent breaking other softwares.\n- Thanks to our beloved contributors: @BoboTiG, @msabramo\n\n3.0.0\n~~~~~\n\n2023-03-20 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.3.1...v3.0.0>`__\n\n- Drop support for Python 3.6.\n- ``watchdog`` is now PEP 561 compatible, and tested with ``mypy``\n- Fix missing ``>`` in ``FileSystemEvent.__repr__()``  (`#980 <https://github.com/gorakhargosh/watchdog/pull/980>`__)\n- [ci] Lots of improvements\n- [inotify] Return from ``InotifyEmitter.queue_events()`` if not launched when thread is inactive (`#963 <https://github.com/gorakhargosh/watchdog/pull/963>`__)\n- [tests] Stability improvements\n- [utils] Remove handling of ``threading.Event.isSet`` spelling (`#962 <https://github.com/gorakhargosh/watchdog/pull/962>`__)\n- [watchmedo] Fixed tricks YAML generation (`#965 <https://github.com/gorakhargosh/watchdog/pull/965>`__)\n- Thanks to our beloved contributors: @kurtmckee, @altendky, @agroszer, @BoboTiG\n\n2.3.1\n~~~~~\n\n2023-02-28 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.3.0...v2.3.1>`__\n\n- Run ``black`` on the entire source code\n- Bundle the ``requirements-tests.txt`` file in the source distribution (`#939 <https://github.com/gorakhargosh/watchdog/pull/939>`__)\n- [watchmedo] Exclude ``FileOpenedEvent`` events from ``AutoRestartTrick``, and ``ShellCommandTrick``, to restore watchdog < 2.3.0 behavior. A better solution should be found in the future. (`#949 <https://github.com/gorakhargosh/watchdog/pull/949>`__)\n- [watchmedo] Log ``FileOpenedEvent``, and ``FileClosedEvent``, events in ``LoggerTrick``\n- Thanks to our beloved contributors: @BoboTiG\n\n2.3.0\n~~~~~\n\n2023-02-23 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.2.1...v2.3.0>`__\n\n- [inotify] Add support for ``IN_OPEN`` events: a ``FileOpenedEvent`` event will be fired (`#941 <https://github.com/gorakhargosh/watchdog/pull/941>`__)\n- [watchmedo] Add optional event debouncing for ``auto-restart``, only restarting once if many events happen in quick succession (``--debounce-interval``) (`#940 <https://github.com/gorakhargosh/watchdog/pull/940>`__)\n- [watchmedo] Exit gracefully on ``KeyboardInterrupt`` exception (Ctrl+C) (`#945 <https://github.com/gorakhargosh/watchdog/pull/945>`__)\n- [watchmedo] Add option to not auto-restart the command after it exits (``--no-restart-on-command-exit``) (`#946 <https://github.com/gorakhargosh/watchdog/pull/946>`__)\n- Thanks to our beloved contributors: @BoboTiG, @dstaple, @taleinat, @cernekj\n\n2.2.1\n~~~~~\n\n2023-01-01 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.2.0...v2.2.1>`__\n\n- Enable ``mypy`` to discover type hints as specified in PEP 561 (`#933 <https://github.com/gorakhargosh/watchdog/pull/933>`__)\n- [ci] Set the expected Python version when building release files\n- [ci] Update actions versions in use\n- [watchmedo] [regression] Fix usage of missing ``signal.SIGHUP`` attribute on non-Unix OSes (`#935 <https://github.com/gorakhargosh/watchdog/pull/935>`__)\n- Thanks to our beloved contributors: @BoboTiG, @simon04, @piotrpdev\n\n2.2.0\n~~~~~\n\n2022-12-05 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.9...v2.2.0>`__\n\n- [build] Wheels are now available for Python 3.11 (`#932 <https://github.com/gorakhargosh/watchdog/pull/932>`__)\n- [documentation] HTML documentation builds are now tested for errors (`#902 <https://github.com/gorakhargosh/watchdog/pull/902>`__)\n- [documentation] Fix typos here, and there (`#910 <https://github.com/gorakhargosh/watchdog/pull/910>`__)\n- [fsevents2] The ``fsevents2`` observer is now deprecated (`#909 <https://github.com/gorakhargosh/watchdog/pull/909>`__)\n- [tests] The error message returned by musl libc for error code ``-1`` is now allowed (`#923 <https://github.com/gorakhargosh/watchdog/pull/923>`__)\n- [utils] Remove unnecessary code in ``dirsnapshot.py`` (`#930 <https://github.com/gorakhargosh/watchdog/pull/930>`__)\n- [watchmedo] Handle shutdown events from ``SIGHUP`` (`#912 <https://github.com/gorakhargosh/watchdog/pull/912>`__)\n- Thanks to our beloved contributors: @kurtmckee, @babymastodon, @QuantumEnergyE, @timgates42, @BoboTiG\n\n2.1.9\n~~~~~\n\n2022-06-10 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.8...v2.1.9>`__\n\n- [fsevents] Fix flakey test to assert that there are no errors when stopping the emitter.\n- [inotify] Suppress occasional ``OSError: [Errno 9] Bad file descriptor`` at shutdown. (`#805 <https://github.com/gorakhargosh/watchdog/issues/805>`__)\n- [watchmedo] Make ``auto-restart`` restart the sub-process if it terminates. (`#896 <https://github.com/gorakhargosh/watchdog/pull/896>`__)\n- [watchmedo] Avoid zombie sub-processes when running ``shell-command`` without ``--wait``. (`#405 <https://github.com/gorakhargosh/watchdog/issues/405>`__)\n- Thanks to our beloved contributors: @samschott, @taleinat, @altendky, @BoboTiG\n\n2.1.8\n~~~~~\n\n2022-05-15 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.7...v2.1.8>`__\n\n- Fix adding failed emitters on observer schedule. (`#872 <https://github.com/gorakhargosh/watchdog/issues/872>`__)\n- [inotify] Fix hang when unscheduling watch on a path in an unmounted filesystem. (`#869 <https://github.com/gorakhargosh/watchdog/pull/869>`__)\n- [watchmedo] Fix broken parsing of ``--kill-after`` argument for the ``auto-restart`` command. (`#870 <https://github.com/gorakhargosh/watchdog/issues/870>`__)\n- [watchmedo] Fix broken parsing of boolean arguments. (`#887 <https://github.com/gorakhargosh/watchdog/issues/887>`__)\n- [watchmedo] Fix broken parsing of commands from ``auto-restart``, and ``shell-command``. (`#888 <https://github.com/gorakhargosh/watchdog/issues/888>`__)\n- [watchmedo] Support setting verbosity level via ``-q/--quiet`` and ``-v/--verbose`` arguments. (`#889 <https://github.com/gorakhargosh/watchdog/pull/889>`__)\n- Thanks to our beloved contributors: @taleinat, @kianmeng, @palfrey, @IlayRosenberg, @BoboTiG\n\n2.1.7\n~~~~~\n\n2022-03-25 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.6...v2.1.7>`__\n\n- Eliminate timeout in waiting on event queue. (`#861 <https://github.com/gorakhargosh/watchdog/pull/861>`__)\n- [inotify] Fix ``not`` equality implementation for ``InotifyEvent``. (`#848 <https://github.com/gorakhargosh/watchdog/pull/848>`__)\n- [watchmedo] Fix calling commands from within a Python script. (`#879 <https://github.com/gorakhargosh/watchdog/pull/879>`__)\n- [watchmedo] ``PyYAML`` is loaded only when strictly necessary. Simple usages of ``watchmedo`` are possible without the module being installed. (`#847 <https://github.com/gorakhargosh/watchdog/pull/847>`__)\n- Thanks to our beloved contributors: @sattlerc, @JanzenLiu, @BoboTiG\n\n2.1.6\n~~~~~\n\n2021-10-01 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.5...v2.1.6>`__\n\n- [bsd] Fixed returned paths in ``kqueue.py`` and restored the overall results of the test suite. (`#842 <https://github.com/gorakhargosh/watchdog/pull/842>`__)\n- [bsd] Updated FreeBSD CI support .(`#841 <https://github.com/gorakhargosh/watchdog/pull/841>`__)\n- [watchmedo] Removed the ``argh`` dependency in favor of the builtin ``argparse`` module. (`#836 <https://github.com/gorakhargosh/watchdog/pull/836>`__)\n- [watchmedo] Removed unexistant ``WindowsApiAsyncObserver`` references and ``--debug-force-winapi-async`` arguments.\n- [watchmedo] Improved the help output.\n- Thanks to our beloved contributors: @knobix, @AndreaRe9, @BoboTiG\n\n2.1.5\n~~~~~\n\n2021-08-23 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.4...v2.1.5>`__\n\n- Fix regression introduced in 2.1.4 (reverted \"Allow overriding or adding custom event handlers to event dispatch map. (`#814 <https://github.com/gorakhargosh/watchdog/pull/814>`__)\"). (`#830 <https://github.com/gorakhargosh/watchdog/pull/830>`__)\n- Convert regexes of type ``str`` to ``list``. (`831 <https://github.com/gorakhargosh/watchdog/pull/831>`__)\n- Thanks to our beloved contributors: @unique1o1, @BoboTiG\n\n2.1.4\n~~~~~\n\n2021-08-19 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.3...v2.1.4>`__\n\n- [watchmedo] Fix usage of ``os.setsid()`` and ``os.killpg()`` Unix-only functions. (`#809 <https://github.com/gorakhargosh/watchdog/pull/809>`__)\n- [mac] Fix missing ``FileModifiedEvent`` on permission or ownership changes of a file. (`#815 <https://github.com/gorakhargosh/watchdog/pull/815>`__)\n- [mac] Convert absolute watch path in ``FSEeventsEmitter`` with ``os.path.realpath()``. (`#822 <https://github.com/gorakhargosh/watchdog/pull/822>`__)\n- Fix a possible ``AttributeError`` in ``SkipRepeatsQueue._put()``. (`#818 <https://github.com/gorakhargosh/watchdog/pull/818>`__)\n- Allow overriding or adding custom event handlers to event dispatch map. (`#814 <https://github.com/gorakhargosh/watchdog/pull/814>`__)\n- Fix tests on big endian platforms. (`#828 <https://github.com/gorakhargosh/watchdog/pull/828>`__)\n- Thanks to our beloved contributors: @replabrobin, @BoboTiG, @SamSchott, @AndreiB97, @NiklasRosenstein, @ikokollari, @mgorny\n\n2.1.3\n~~~~~\n\n2021-06-26 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.2...v2.1.3>`__\n\n- Publish macOS ``arm64`` and ``universal2`` wheels. (`#740 <https://github.com/gorakhargosh/watchdog/pull/740>`__)\n- Thanks to our beloved contributors: @kainjow, @BoboTiG\n\n2.1.2\n~~~~~\n\n2021-05-19 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.1...v2.1.2>`__\n\n- [mac] Fix relative path handling for non-recursive watch. (`#797 <https://github.com/gorakhargosh/watchdog/pull/797>`__)\n- [windows] On PyPy, events happening right after ``start()`` were missed. Add a workaround for that. (`#796 <https://github.com/gorakhargosh/watchdog/pull/796>`__)\n- Thanks to our beloved contributors: @oprypin, @CCP-Aporia, @BoboTiG\n\n2.1.1\n~~~~~\n\n2021-05-10 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.1.0...v2.1.1>`__\n\n- [mac] Fix callback exceptions when the watcher is deleted but still receiving events (`#786 <https://github.com/gorakhargosh/watchdog/pull/786>`__)\n- Thanks to our beloved contributors: @rom1win, @BoboTiG, @CCP-Aporia\n\n\n2.1.0\n~~~~~\n\n2021-05-04 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.0.3...v2.1.0>`__\n\n- [inotify] Simplify ``libc`` loading (`#776 <https://github.com/gorakhargosh/watchdog/pull/776>`__)\n- [mac] Add support for non-recursive watches in ``FSEventsEmitter`` (`#779 <https://github.com/gorakhargosh/watchdog/pull/779>`__)\n- [watchmedo] Add support for ``--debug-force-*`` arguments to ``tricks`` (`#781 <https://github.com/gorakhargosh/watchdog/pull/781>`__)\n- Thanks to our beloved contributors: @CCP-Aporia, @aodj, @UnitedMarsupials, @BoboTiG\n\n\n2.0.3\n~~~~~\n\n2021-04-22 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.0.2...v2.0.3>`__\n\n- [mac] Use ``logger.debug()`` instead of ``logger.info()`` (`#774 <https://github.com/gorakhargosh/watchdog/pull/774>`__)\n- Updated documentation links (`#777 <https://github.com/gorakhargosh/watchdog/pull/777>`__)\n- Thanks to our beloved contributors: @globau, @imba-tjd, @BoboTiG\n\n\n2.0.2\n~~~~~\n\n2021-02-22 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.0.1...v2.0.2>`__\n\n- [mac] Add missing exception objects (`#766 <https://github.com/gorakhargosh/watchdog/pull/766>`__)\n- Thanks to our beloved contributors: @CCP-Aporia, @BoboTiG\n\n\n2.0.1\n~~~~~\n\n2021-02-17 • `full history <https://github.com/gorakhargosh/watchdog/compare/v2.0.0...v2.0.1>`__\n\n- [mac] Fix a segmentation fault when dealing with unicode paths (`#763 <https://github.com/gorakhargosh/watchdog/pull/763>`__)\n- Moved the CI from Travis-CI to GitHub Actions (`#764 <https://github.com/gorakhargosh/watchdog/pull/764>`__)\n- Thanks to our beloved contributors: @SamSchott, @BoboTiG\n\n\n2.0.0\n~~~~~\n\n2021-02-11 • `full history <https://github.com/gorakhargosh/watchdog/compare/v1.0.2...v2.0.0>`__\n\n- Avoid deprecated ``PyEval_InitThreads`` on Python 3.7+ (`#746 <https://github.com/gorakhargosh/watchdog/pull/746>`__)\n- [inotify] Add support for ``IN_CLOSE_WRITE`` events. A ``FileCloseEvent`` event will be fired. Note that ``IN_CLOSE_NOWRITE`` events are not handled to prevent much noise. (`#184 <https://github.com/gorakhargosh/watchdog/pull/184>`__, `#245 <https://github.com/gorakhargosh/watchdog/pull/245>`__, `#280 <https://github.com/gorakhargosh/watchdog/pull/280>`__, `#313 <https://github.com/gorakhargosh/watchdog/pull/313>`__, `#690 <https://github.com/gorakhargosh/watchdog/pull/690>`__)\n- [inotify] Allow to stop the emitter multiple times (`#760 <https://github.com/gorakhargosh/watchdog/pull/760>`__)\n- [mac] Support coalesced filesystem events (`#734 <https://github.com/gorakhargosh/watchdog/pull/734>`__)\n- [mac] Drop support for macOS 10.12 and earlier (`#750 <https://github.com/gorakhargosh/watchdog/pull/750>`__)\n- [mac] Fix an issue when renaming an item changes only the casing (`#750 <https://github.com/gorakhargosh/watchdog/pull/750>`__)\n- Thanks to our beloved contributors: @bstaletic, @lukassup, @ysard, @SamSchott, @CCP-Aporia, @BoboTiG\n\n\n1.0.2\n~~~~~\n\n2020-12-18 • `full history <https://github.com/gorakhargosh/watchdog/compare/v1.0.1...v1.0.2>`__\n\n- Wheels are published for GNU/Linux, macOS and Windows (`#739 <https://github.com/gorakhargosh/watchdog/pull/739>`__)\n- [mac] Fix missing ``event_id`` attribute in ``fsevents`` (`#721 <https://github.com/gorakhargosh/watchdog/pull/721>`__)\n- [mac] Return byte paths if a byte path was given in ``fsevents`` (`#726 <https://github.com/gorakhargosh/watchdog/pull/726>`__)\n- [mac] Add compatibility with old macOS versions (`#733 <https://github.com/gorakhargosh/watchdog/pull/733>`__)\n- Uniformize event for deletion of watched dir (`#727 <https://github.com/gorakhargosh/watchdog/pull/727>`__)\n- Thanks to our beloved contributors: @SamSchott, @CCP-Aporia, @di, @BoboTiG\n\n\n1.0.1\n~~~~~\n\n2020-12-10 • Fix version with good metadatas.\n\n\n1.0.0\n~~~~~\n\n2020-12-10 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.4...v1.0.0>`__\n\n- Versioning is now following the `semver <https://semver.org/>`__\n- Drop support for Python 2.7, 3.4 and 3.5\n- [mac] Regression fixes for native ``fsevents`` (`#717 <https://github.com/gorakhargosh/watchdog/pull/717>`__)\n- [windows] ``winapi.BUFFER_SIZE`` now defaults to ``64000`` (instead of ``2048``) (`#700 <https://github.com/gorakhargosh/watchdog/pull/700>`__)\n- [windows] Introduced ``winapi.PATH_BUFFER_SIZE`` (defaults to ``2048``) to keep the old behavior with path-realted functions (`#700 <https://github.com/gorakhargosh/watchdog/pull/700>`__)\n- Use ``pathlib`` from the standard library, instead of pathtools (`#556 <https://github.com/gorakhargosh/watchdog/pull/556>`__)\n- Allow file paths on Unix that don't follow the file system encoding (`#703 <https://github.com/gorakhargosh/watchdog/pull/703>`__)\n- Removed the long-time deprecated ``events.LoggingFileSystemEventHandler`` class, use ``LoggingEventHandler`` instead\n- Thanks to our beloved contributors: @SamSchott, @bstaletic, @BoboTiG, @CCP-Aporia\n\n\n0.10.4\n~~~~~~\n\n2020-11-21 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.3...v0.10.4>`__\n\n- Add ``logger`` parameter for the ``LoggingEventHandler`` (`#676 <https://github.com/gorakhargosh/watchdog/pull/676>`__)\n- Replace mutable default arguments with ``if None`` implementation (`#677 <https://github.com/gorakhargosh/watchdog/pull/677>`__)\n- Expand tests to Python 2.7 and 3.5-3.10 for GNU/Linux, macOS and Windows\n- [mac] Performance improvements for the ``fsevents`` module (`#680 <https://github.com/gorakhargosh/watchdog/pull/680>`__)\n- [mac] Prevent compilation of ``watchdog_fsevents.c`` on non-macOS machines (`#687 <https://github.com/gorakhargosh/watchdog/pull/687>`__)\n- [watchmedo] Handle shutdown events from ``SIGTERM`` and ``SIGINT`` more reliably (`#693 <https://github.com/gorakhargosh/watchdog/pull/693>`__)\n- Thanks to our beloved contributors: @Sraw, @CCP-Aporia, @BoboTiG, @maybe-sybr\n\n\n0.10.3\n~~~~~~\n\n2020-06-25 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.2...v0.10.3>`__\n\n- Ensure ``ObservedWatch.path`` is a string (`#651 <https://github.com/gorakhargosh/watchdog/pull/651>`__)\n- [inotify] Allow to monitor single file (`#655 <https://github.com/gorakhargosh/watchdog/pull/655>`__)\n- [inotify] Prevent raising an exception when a file in a monitored folder has no permissions (`#669 <https://github.com/gorakhargosh/watchdog/pull/669>`__, `#670 <https://github.com/gorakhargosh/watchdog/pull/670>`__)\n- Thanks to our beloved contributors: @brant-ruan, @rec, @andfoy, @BoboTiG\n\n\n0.10.2\n~~~~~~\n\n2020-02-08 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.1...v0.10.2>`__\n\n- Fixed the ``build_ext`` command on macOS Catalina (`#628 <https://github.com/gorakhargosh/watchdog/pull/628>`__)\n- Fixed the installation of macOS requirements on non-macOS OSes (`#635 <https://github.com/gorakhargosh/watchdog/pull/635>`__)\n- Refactored ``dispatch()`` method of ``FileSystemEventHandler``,\n  ``PatternMatchingEventHandler`` and ``RegexMatchingEventHandler``\n- [bsd] Improved tests support on non Windows/Linux platforms (`#633 <https://github.com/gorakhargosh/watchdog/pull/633>`__, `#639 <https://github.com/gorakhargosh/watchdog/pull/639>`__)\n- [bsd] Added FreeBSD CI support (`#532 <https://github.com/gorakhargosh/watchdog/pull/532>`__)\n- [bsd] Restored full support (`#638 <https://github.com/gorakhargosh/watchdog/pull/638>`__, `#641 <https://github.com/gorakhargosh/watchdog/pull/641>`__)\n- Thanks to our beloved contributors: @BoboTiG, @evilham, @danilobellini\n\n\n0.10.1\n~~~~~~\n\n2020-01-30 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.10.0...v0.10.1>`__\n\n- Fixed Python 2.7 to 3.6 installation when the OS locale is set to POSIX (`#615 <https://github.com/gorakhargosh/watchdog/pull/615>`__)\n- Fixed the ``build_ext`` command on macOS  (`#618 <https://github.com/gorakhargosh/watchdog/pull/618>`__, `#620 <https://github.com/gorakhargosh/watchdog/pull/620>`__)\n- Moved requirements to ``setup.cfg``  (`#617 <https://github.com/gorakhargosh/watchdog/pull/617>`__)\n- [mac] Removed old C code for Python 2.5 in the `fsevents` C implementation\n- [snapshot] Added ``EmptyDirectorySnapshot`` (`#613 <https://github.com/gorakhargosh/watchdog/pull/613>`__)\n- Thanks to our beloved contributors: @Ajordat, @tehkirill, @BoboTiG\n\n\n0.10.0\n~~~~~~\n\n2020-01-26 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.9.0...v0.10.0>`__\n\n**Breaking Changes**\n\n- Dropped support for Python 2.6, 3.2 and 3.3\n- Emitters that failed to start are now removed\n- [snapshot] Removed the deprecated ``walker_callback`` argument,\n  use ``stat`` instead\n- [watchmedo] The utility is no more installed by default but via the extra\n  ``watchdog[watchmedo]``\n\n**Other Changes**\n\n- Fixed several Python 3 warnings\n- Identify synthesized events with ``is_synthetic`` attribute (`#369 <https://github.com/gorakhargosh/watchdog/pull/369>`__)\n- Use ``os.scandir()`` to improve memory usage (`#503 <https://github.com/gorakhargosh/watchdog/pull/503>`__)\n- [bsd] Fixed flavors of FreeBSD detection (`#529 <https://github.com/gorakhargosh/watchdog/pull/529>`__)\n- [bsd] Skip unprocessable socket files (`#509 <https://github.com/gorakhargosh/watchdog/issue/509>`__)\n- [inotify] Fixed events containing non-ASCII characters (`#516 <https://github.com/gorakhargosh/watchdog/issues/516>`__)\n- [inotify] Fixed the way ``OSError`` are re-raised (`#377 <https://github.com/gorakhargosh/watchdog/issues/377>`__)\n- [inotify] Fixed wrong source path after renaming a top level folder (`#515 <https://github.com/gorakhargosh/watchdog/pull/515>`__)\n- [inotify] Removed  delay from non-move events (`#477 <https://github.com/gorakhargosh/watchdog/pull/477>`__)\n- [mac] Fixed a bug when calling ``FSEventsEmitter.stop()`` twice (`#466 <https://github.com/gorakhargosh/watchdog/pull/466>`__)\n- [mac] Support for unscheduling deleted watch (`#541 <https://github.com/gorakhargosh/watchdog/issue/541>`__)\n- [mac] Fixed missing field initializers and unused parameters in\n  ``watchdog_fsevents.c``\n- [snapshot] Don't walk directories without read permissions (`#408 <https://github.com/gorakhargosh/watchdog/pull/408>`__)\n- [snapshot] Fixed a race condition crash when a directory is swapped for a file (`#513 <https://github.com/gorakhargosh/watchdog/pull/513>`__)\n- [snasphot] Fixed an ``AttributeError`` about forgotten ``path_for_inode`` attr (`#436 <https://github.com/gorakhargosh/watchdog/issues/436>`__)\n- [snasphot] Added the ``ignore_device=False`` parameter to the ctor (`597 <https://github.com/gorakhargosh/watchdog/pull/597>`__)\n- [watchmedo] Fixed the path separator used (`#478 <https://github.com/gorakhargosh/watchdog/pull/478>`__)\n- [watchmedo] Fixed the use of ``yaml.load()`` for ``yaml.safe_load()`` (`#453 <https://github.com/gorakhargosh/watchdog/issues/453>`__)\n- [watchmedo] Handle all available signals (`#549 <https://github.com/gorakhargosh/watchdog/issue/549>`__)\n- [watchmedo] Added the ``--debug-force-polling`` argument (`#404 <https://github.com/gorakhargosh/watchdog/pull/404>`__)\n- [windows] Fixed issues when the observed directory is deleted (`#570 <https://github.com/gorakhargosh/watchdog/issues/570>`__ and `#601 <https://github.com/gorakhargosh/watchdog/pull/601>`__)\n- [windows] ``WindowsApiEmitter`` made easier to subclass (`#344 <https://github.com/gorakhargosh/watchdog/pull/344>`__)\n- [windows] Use separate ctypes DLL instances\n- [windows] Generate sub created events only if ``recursive=True`` (`#454 <https://github.com/gorakhargosh/watchdog/pull/454>`__)\n- Thanks to our beloved contributors: @BoboTiG, @LKleinNux, @rrzaripov,\n  @wildmichael, @TauPan, @segevfiner, @petrblahos, @QuantumEnergyE,\n  @jeffwidman, @kapsh, @nickoala, @petrblahos, @julianolf, @tonybaloney,\n  @mbakiev, @pR0Ps, javaguirre, @skurfer, @exarkun, @joshuaskelly,\n  @danilobellini, @Ajordat\n\n\n0.9.0\n~~~~~\n\n2018-08-28 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.3...v0.9.0>`__\n\n- Deleting the observed directory now emits a ``DirDeletedEvent`` event\n- [bsd] Improved the platform detection (`#378 <https://github.com/gorakhargosh/watchdog/pull/378>`__)\n- [inotify] Fixed a crash when the root directory being watched by was deleted (`#374 <https://github.com/gorakhargosh/watchdog/pull/374>`__)\n- [inotify] Handle systems providing uClibc\n- [linux] Fixed a possible ``DirDeletedEvent`` duplication when\n  deleting a directory\n- [mac] Fixed unicode path handling ``fsevents2.py`` (`#298 <https://github.com/gorakhargosh/watchdog/pull/298>`__)\n- [watchmedo] Added the ``--debug-force-polling`` argument (`#336 <https://github.com/gorakhargosh/watchdog/pull/336>`__)\n- [windows] Fixed the ``FILE_LIST_DIRECTORY`` constant (`#376 <https://github.com/gorakhargosh/watchdog/pull/376>`__)\n- Thanks to our beloved contributors: @vulpeszerda, @hpk42, @tamland, @senden9,\n  @gorakhargosh, @nolsto, @mafrosis, @DonyorM, @anthrotype, @danilobellini,\n  @pierregr, @ShinNoNoir, @adrpar, @gforcada, @pR0Ps, @yegorich, @dhke\n\n\n0.8.3\n~~~~~\n\n2015-02-11 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.2...v0.8.3>`__\n\n- Fixed the use of the root logger (`#274 <https://github.com/gorakhargosh/watchdog/issues/274>`__)\n- [inotify] Refactored libc loading and improved error handling in\n  ``inotify_c.py``\n- [inotify] Fixed a possible unbound local error in ``inotify_c.py``\n- Thanks to our beloved contributors: @mmorearty, @tamland, @tony,\n  @gorakhargosh\n\n\n0.8.2\n~~~~~\n\n2014-10-29 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.1...v0.8.2>`__\n\n- Event emitters are no longer started on schedule if ``Observer`` is not\n  already running\n- [mac] Fixed usued arguments to pass clang compilation (`#265 <https://github.com/gorakhargosh/watchdog/pull/265>`__)\n- [snapshot] Fixed a possible race condition crash on directory deletion (`#281 <https://github.com/gorakhargosh/watchdog/pull/281>`__)\n- [windows] Fixed an error when watching the same folder again (`#270 <https://github.com/gorakhargosh/watchdog/pull/270>`__)\n- Thanks to our beloved contributors: @tamland, @apetrone, @Falldog,\n  @theospears\n\n\n0.8.1\n~~~~~\n\n2014-07-28 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.8.0...v0.8.1>`__\n\n- Fixed ``anon_inode`` descriptors leakage  (`#249 <https://github.com/gorakhargosh/watchdog/pull/249>`__)\n- [inotify] Fixed thread stop dead lock (`#250 <https://github.com/gorakhargosh/watchdog/issues/250>`__)\n- Thanks to our beloved contributors: @Witos, @adiroiban, @tamland\n\n\n0.8.0\n~~~~~\n\n2014-07-02 • `full history <https://github.com/gorakhargosh/watchdog/compare/v0.7.1...v0.8.0>`__\n\n- Fixed ``argh`` deprecation warnings (`#242 <https://github.com/gorakhargosh/watchdog/pull/242>`__)\n- [snapshot] Methods returning internal stats info were replaced by\n  ``mtime()``, ``inode()`` and ``path()`` methods\n- [snapshot] Deprecated the ``walker_callback`` argument\n- [watchmedo] Fixed ``auto-restart`` to terminate all children processes (`#225 <https://github.com/gorakhargosh/watchdog/pull/225>`__)\n- [watchmedo] Added the ``--no-parallel`` argument (`#227 <https://github.com/gorakhargosh/watchdog/issues/227>`__)\n- [windows] Fixed the value of ``INVALID_HANDLE_VALUE`` (`#123 <https://github.com/gorakhargosh/watchdog/issues/123>`__)\n- [windows] Fixed octal usages to work with Python 3 as well (`#223 <https://github.com/gorakhargosh/watchdog/issues/223>`__)\n- Thanks to our beloved contributors: @tamland, @Ormod, @berdario, @cro,\n  @BernieSumption, @pypingou, @gotcha, @tommorris, @frewsxcv\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.171875,
          "content": "[tool.coverage.report]\nexclude_also = [\n    \"if TYPE_CHECKING:\",\n    \"if __name__ == __main__:\",\n]\n\n[tool.mypy]\n# Ensure we know what we do\nwarn_redundant_casts = true\nwarn_unused_ignores = true\nwarn_unused_configs = true\n\n# Imports management\nignore_missing_imports = true\nfollow_imports = \"skip\"\n\n# Ensure full coverage\ndisallow_untyped_defs = true\ndisallow_incomplete_defs = true\ndisallow_untyped_calls = true\n\n# Restrict dynamic typing (a little)\n# e.g. `x: List[Any]` or x: List`\n# disallow_any_generics = true\n\nstrict_equality = true\n\n[tool.pytest.ini_options]\npythonpath = \"src\"\naddopts = \"\"\"\n    --showlocals\n    -vvv\n    --cov=watchdog\n    --cov-report=term-missing:skip-covered\n\"\"\"\n\n[tool.ruff]\nline-length = 120\nindent-width = 4\ntarget-version = \"py39\"\n\n[tool.ruff.lint]\nextend-select = [\"ALL\"]\nignore = [\n    \"ARG\",\n    \"ANN\",  # TODO\n    \"B023\",  # TODO\n    \"BLE001\",\n    \"C90\",\n    \"COM812\",\n    \"D\",\n    \"EM101\",\n    \"EM102\",\n    \"FIX\",\n    \"ISC001\",\n    \"PERF203\",\n    \"PL\",\n    \"PTH\",  # TODO?\n    \"S\",\n    \"TD\",\n]\nfixable = [\"ALL\"]\n\n[tool.ruff.format]\nquote-style = \"double\"\nindent-style = \"space\"\nskip-magic-trailing-comma = false\nline-ending = \"auto\"\ndocstring-code-format = true\n"
        },
        {
          "name": "requirements-tests.txt",
          "type": "blob",
          "size": 0.2353515625,
          "content": "eventlet==0.37.0; python_version < \"3.13\"\nflaky==3.8.1\npytest==8.3.3\npytest-cov==6.0.0\npytest-timeout==2.3.1\nruff==0.7.1\nsphinx==7.4.7; python_version <= \"3.9\"\nsphinx==8.1.3; python_version > \"3.9\"\nmypy==1.13.0\ntypes-PyYAML==6.0.12.20240917\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.44140625,
          "content": "[metadata]\nproject_urls =\n    Documentation=https://python-watchdog.readthedocs.io/en/stable/\n    Source=https://github.com/gorakhargosh/watchdog/\n    Issues=https://github.com/gorakhargosh/watchdog/issues\n    Changelog=https://github.com/gorakhargosh/watchdog/blob/master/changelog.rst\n\n[build_sphinx]\nsource-dir = docs/source\nbuild-dir  = docs/build\nall_files  = 1\n\n[upload_sphinx]\n# Requires sphinx-pypi-upload to work.\nupload-dir = docs/build/html\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.8916015625,
          "content": "import importlib.util\nimport sys\nimport os\nimport os.path\nfrom platform import machine\nfrom setuptools import setup, find_packages\nfrom setuptools.extension import Extension\nfrom setuptools.command.build_ext import build_ext\n\nSRC_DIR = \"src\"\nWATCHDOG_PKG_DIR = os.path.join(SRC_DIR, \"watchdog\")\n\n# Load the module version\nspec = importlib.util.spec_from_file_location(\n    \"version\", os.path.join(WATCHDOG_PKG_DIR, \"version.py\")\n)\nversion = importlib.util.module_from_spec(spec)\nspec.loader.exec_module(version)\n\n# Ignored Apple devices on which compiling watchdog_fsevents.c would fail.\n# The FORCE_MACOS_MACHINE envar, when set to 1, will force the compilation.\n_apple_devices = (\"appletv\", \"iphone\", \"ipod\", \"ipad\", \"watch\")\nis_macos = sys.platform == \"darwin\" and not machine().lower().startswith(_apple_devices)\n\next_modules = []\nif is_macos or os.getenv(\"FORCE_MACOS_MACHINE\", \"0\") == \"1\":\n    ext_modules = [\n        Extension(\n            name=\"_watchdog_fsevents\",\n            sources=[\n                \"src/watchdog_fsevents.c\",\n            ],\n            libraries=[\"m\"],\n            define_macros=[\n                (\"WATCHDOG_VERSION_STRING\", '\"' + version.VERSION_STRING + '\"'),\n                (\"WATCHDOG_VERSION_MAJOR\", version.VERSION_MAJOR),\n                (\"WATCHDOG_VERSION_MINOR\", version.VERSION_MINOR),\n                (\"WATCHDOG_VERSION_BUILD\", version.VERSION_BUILD),\n            ],\n            extra_link_args=[\n                \"-framework\",\n                \"CoreFoundation\",\n                \"-framework\",\n                \"CoreServices\",\n            ],\n            extra_compile_args=[\n                \"-std=c99\",\n                \"-pedantic\",\n                \"-Wall\",\n                \"-Wextra\",\n                \"-fPIC\",\n                # Issue #620\n                \"-Wno-nullability-completeness\",\n                # Issue #628\n                \"-Wno-nullability-extension\",\n                \"-Wno-newline-eof\",\n                # required w/Xcode 5.1+ and above because of '-mno-fused-madd'\n                \"-Wno-error=unused-command-line-argument\",\n            ],\n        ),\n    ]\n\nextras_require = {\n    \"watchmedo\": [\"PyYAML>=3.10\"],\n}\n\nwith open(\"README.rst\", encoding=\"utf-8\") as f:\n    readme = f.read()\n\nwith open(\"changelog.rst\", encoding=\"utf-8\") as f:\n    changelog = f.read()\n\nsetup(\n    name=\"watchdog\",\n    version=version.VERSION_STRING,\n    description=\"Filesystem events monitoring\",\n    long_description=readme + \"\\n\\n\" + changelog,\n    long_description_content_type=\"text/x-rst\",\n    author=\"Mickaël Schoentgen\",\n    author_email=\"contact@tiger-222.fr\",\n    license=\"Apache-2.0\",\n    url=\"https://github.com/gorakhargosh/watchdog\",\n    keywords=\" \".join(\n        [\n            \"python\",\n            \"filesystem\",\n            \"monitoring\",\n            \"monitor\",\n            \"FSEvents\",\n            \"kqueue\",\n            \"inotify\",\n            \"ReadDirectoryChangesW\",\n            \"polling\",\n            \"DirectorySnapshot\",\n        ]\n    ),\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Environment :: Console\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: System Administrators\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Natural Language :: English\",\n        \"Operating System :: POSIX :: Linux\",\n        \"Operating System :: MacOS :: MacOS X\",\n        \"Operating System :: POSIX :: BSD\",\n        \"Operating System :: Microsoft :: Windows :: Windows Vista\",\n        \"Operating System :: Microsoft :: Windows :: Windows 7\",\n        \"Operating System :: Microsoft :: Windows :: Windows 8\",\n        \"Operating System :: Microsoft :: Windows :: Windows 8.1\",\n        \"Operating System :: Microsoft :: Windows :: Windows 10\",\n        \"Operating System :: Microsoft :: Windows :: Windows 11\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python\",\n        \"Programming Language :: Python :: 3\",\n        \"Programming Language :: Python :: 3 :: Only\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n        \"Programming Language :: Python :: Implementation :: CPython\",\n        \"Programming Language :: Python :: Implementation :: PyPy\",\n        \"Programming Language :: C\",\n        \"Topic :: Software Development :: Libraries\",\n        \"Topic :: System :: Monitoring\",\n        \"Topic :: System :: Filesystems\",\n        \"Topic :: Utilities\",\n    ],\n    package_dir={\"\": SRC_DIR},\n    packages=find_packages(SRC_DIR),\n    include_package_data=True,\n    extras_require=extras_require,\n    cmdclass={\n        \"build_ext\": build_ext,\n    },\n    ext_modules=ext_modules,\n    entry_points={\n        \"console_scripts\": [\n            \"watchmedo = watchdog.watchmedo:main [watchmedo]\",\n        ]\n    },\n    python_requires=\">=3.9\",\n    zip_safe=False,\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 1.44921875,
          "content": "[tox]\nenvlist =\n    py3{9,10,11,12,13}\n    pypy3\n    docs\n    types\n    lint\nskip_missing_interpreters = True\n\n[testenv]\nusedevelop = true\ndeps =\n    -r requirements-tests.txt\nextras =\n    watchmedo\ncommands =\n    python -m pytest {posargs}\n\n[testenv:docs]\nusedevelop = true\ndeps =\n    -r requirements-tests.txt\nextras =\n    watchmedo\ncommands =\n    sphinx-build -aEWb html docs/source docs/build/html\n\n[testenv:lint]\nusedevelop = true\ndeps =\n    -r requirements-tests.txt\nextras =\n    watchmedo\ncommands =\n    python -m ruff format docs/source/examples src tests\n    python -m ruff check --fix --unsafe-fixes src docs/source/examples tests\n\n[testenv:types]\nusedevelop = true\ndeps =\n    -r requirements-tests.txt\ncommands =\n    # General\n    python -m mypy docs/source/examples\n    python -m mypy src\n\n    # OS specific\n    python -m mypy --platform darwin --disable-error-code unused-ignore \\\n        src/watchdog/observers/fsevents.py \\\n        src/watchdog/observers/fsevents2.py\n    python -m mypy --platform freebsd --disable-error-code unused-ignore \\\n        src/watchdog/observers/kqueue.py\n    python -m mypy --platform linux --disable-error-code unused-ignore \\\n        src/watchdog/observers/inotify.py \\\n        src/watchdog/observers/inotify_buffer.py \\\n        src/watchdog/observers/inotify_c.py\n    python -m mypy --platform win32 --disable-error-code unused-ignore \\\n        src/watchdog/observers/read_directory_changes.py \\\n        src/watchdog/observers/winapi.py\n"
        }
      ]
    }
  ]
}