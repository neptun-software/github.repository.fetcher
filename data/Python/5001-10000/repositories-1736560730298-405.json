{
  "metadata": {
    "timestamp": 1736560730298,
    "page": 405,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mli/autocut",
      "stars": 6888,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.7607421875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\nlog/"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.2744140625,
          "content": "FROM python:3.9-slim as base\n\nRUN mkdir /autocut\nCOPY ./ /autocut\nWORKDIR /autocut\n\nRUN apt update && \\\n    apt install -y git && \\\n    apt install -y ffmpeg\n\nRUN pip install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cpu && \\\n    pip install ."
        },
        {
          "name": "Dockerfile.cuda",
          "type": "blob",
          "size": 0.1943359375,
          "content": "FROM pytorch/pytorch:1.13.0-cuda11.6-cudnn8-runtime\n\nRUN mkdir /autocut\nCOPY ./ /autocut\nWORKDIR /autocut\n\nRUN apt update && \\\n    apt install -y git && \\\n    apt install -y ffmpeg\n\nRUN pip install ."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.37109375,
          "content": "# AutoCut: 通过字幕来剪切视频\n\nAutoCut 对你的视频自动生成字幕。然后你选择需要保留的句子，AutoCut 将对你视频中对应的片段裁切并保存。你无需使用视频编辑软件，只需要编辑文本文件即可完成剪切。\n\n**2024.10.05更新**：支持 `large-v3-turbo` [模型](https://github.com/openai/whisper/discussions/2363)，提供更快的转录速度。\n\n```shell\nautocut -t xxx --whisper-model large-v3-turbo\n````\n\n**2024.03.10更新**：支持 pip 安装和提供 import 转录相关的功能\n\n```shell\n# Install\npip install autocut-sub\n```\n\n```python\nfrom autocut import Transcribe, load_audio\n```\n\n\n**2023.10.14更新**：支持 faster-whisper 和指定依赖（但由于 Action 限制暂时移除了 faster-whisper 的测试运行）\n\n```shell\n# for whisper only\npip install .\n\n# for whisper and faster-whisper\npip install '.[faster]'\n\n# for whisper and openai-whisper\npip install '.[openai]'\n\n# for all\npip install '.[all]'\n```\n\n```shell\n# using faster-whisper\nautocut -t xxx --whisper-mode=faster\n```\n\n```shell\n# using openai api\nexport OPENAI_API_KEY=sk-xxx\nautocut -t xxx --whisper-mode=openai --openai-rpm=3\n```\n\n**2023.8.13更新**：支持调用 Openai Whisper API\n```shell\nexport OPENAI_API_KEY=sk-xxx\nautocut -t xxx --whisper-mode=openai --openai-rpm=3\n```\n\n## 使用例子\n\n假如你录制的视频放在 `2022-11-04/` 这个文件夹里。那么运行\n\n```bash\nautocut -d 2022-11-04\n```\n\n> 提示：如果你使用 OBS 录屏，可以在 `设置->高级->录像->文件名格式` 中将空格改成 `/`，即 `%CCYY-%MM-%DD/%hh-%mm-%ss`。那么视频文件将放在日期命名的文件夹里。\n\nAutoCut 将持续对这个文件夹里视频进行字幕抽取和剪切。例如，你刚完成一个视频录制，保存在 `11-28-18.mp4`。AutoCut 将生成 `11-28-18.md`。你在里面选择需要保留的句子后，AutoCut 将剪切出 `11-28-18_cut.mp4`，并生成 `11-28-18_cut.md` 来预览结果。\n\n你可以使用任何的 Markdown 编辑器。例如我常用 VS Code 和 Typora。下图是通过 Typora 来对 `11-28-18.md` 编辑。\n\n![](imgs/typora.jpg)\n\n全部完成后在 `autocut.md` 里选择需要拼接的视频后，AutoCut 将输出 `autocut_merged.mp4` 和对应的字幕文件。\n\n## 安装\n\n首先安装 Python 包\n\n```\npip install git+https://github.com/mli/autocut.git\n```\n\n## 本地安装测试\n\n\n```\ngit clone https://github.com/mli/autocut\ncd autocut\npip install .\n```\n\n\n> 上面将安装 [pytorch](https://pytorch.org/)。如果你需要 GPU 运行，且默认安装的版本不匹配的话，你可以先安装 Pytorch。如果安装 Whipser 出现问题，请参考[官方文档](https://github.com/openai/whisper#setup)。\n\n另外需要安装 [ffmpeg](https://ffmpeg.org/)\n\n```\n# on Ubuntu or Debian\nsudo apt update && sudo apt install ffmpeg\n\n# on Arch Linux\nsudo pacman -S ffmpeg\n\n# on MacOS using Homebrew (https://brew.sh/)\nbrew install ffmpeg\n\n# on Windows using Scoop (https://scoop.sh/)\nscoop install ffmpeg\n```\n\n## Docker 安装\n\n首先将项目克隆到本地。\n\n```bash\ngit clone https://github.com/mli/autocut.git\n```\n\n### 安装 CPU 版本\n\n进入项目根目录，然后构建 docker 映像。\n\n```bash\ndocker build -t autocut .\n```\n\n运行下面的命令创建 docker 容器，就可以直接使用了。\n\n```bash\ndocker run -it --rm -v E:\\autocut:/autocut/video autocut /bin/bash\n```\n\n其中 `-v` 是将主机存放视频的文件夹 `E:\\autocut` 映射到虚拟机的 `/autocut/video` 目录。`E:\\autocut` 是主机存放视频的目录，需修改为自己主机存放视频的目录。\n\n### 安装 GPU 版本\n\n使用 GPU 加速需要主机有 Nvidia 的显卡并安装好相应驱动。然后在项目根目录，执行下面的命令构建 docker 映像。\n\n```bash\ndocker build -f ./Dockerfile.cuda -t autocut-gpu .\n```\n\n使用 GPU 加速时，运行 docker 容器需添加参数 `--gpus all`。\n\n```bash\ndocker run --gpus all -it --rm -v E:\\autocut:/autocut/video autocut-gpu\n```\n\n## 更多使用选项\n\n### 转录某个视频生成 `.srt` 和 `.md` 结果。\n\n```bash\nautocut -t 22-52-00.mp4\n```\n\n1. 如果对转录质量不满意，可以使用更大的模型，例如\n\n    ```bash\n    autocut -t 22-52-00.mp4 --whisper-model large\n    ```\n\n    默认是 `small`。更好的模型是 `medium` 和 `large`，但推荐使用 GPU 获得更好的速度。也可以使用更快的 `tiny` 和 `base`，但转录质量会下降。\n\n\n### 剪切某个视频\n\n```bash\nautocut -c 22-52-00.mp4 22-52-00.srt 22-52-00.md\n```\n\n1. 默认视频比特率是 `--bitrate 10m`，你可以根据需要调大调小。\n2. 如果不习惯 Markdown 格式文件，你也可以直接在 `srt` 文件里删除不要的句子，在剪切时不传入 `md` 文件名即可。就是 `autocut -c 22-52-00.mp4 22-52-00.srt`\n3. 如果仅有 `srt` 文件，编辑不方便可以使用如下命令生成 `md` 文件，然后编辑 `md` 文件即可，但此时会完全对照 `srt` 生成，不会出现 `no speech` 等提示文本。\n\n   ```bash\n   autocut -m test.srt test.mp4\n   autocut -m test.mp4 test.srt # 支持视频和字幕乱序传入\n   autocut -m test.srt # 也可以只传入字幕文件\n   ```\n\n\n### 一些小提示\n\n\n1. 讲得流利的视频的转录质量会高一些，这因为是 Whisper 训练数据分布的缘故。对一个视频，你可以先粗选一下句子，然后在剪出来的视频上再剪一次。\n2. 最终视频生成的字幕通常还需要做一些小编辑。但 `srt` 里面空行太多。你可以使用 `autocut -s 22-52-00.srt` 来生成一个紧凑些的版本 `22-52-00_compact.srt` 方便编辑（这个格式不合法，但编辑器，例如 VS Code，还是会进行语法高亮）。编辑完成后，`autocut -s 22-52-00_compact.srt` 转回正常格式。\n3. 用 Typora 和 VS Code 编辑 Markdown 都很方便。他们都有对应的快捷键 mark 一行或者多行。但 VS Code 视频预览似乎有点问题。\n4. 视频是通过 ffmpeg 导出。在 Apple M1 芯片上它用不了 GPU，导致导出速度不如专业视频软件。\n\n### 常见问题\n\n1. **输出的是乱码？**\n\n   AutoCut 默认输出编码是 `utf-8`. 确保你的编辑器也使用了 `utf-8` 解码。你可以通过 `--encoding` 指定其他编码格式。但是需要注意生成字幕文件和使用字幕文件剪辑时的编码格式需要一致。例如使用 `gbk`。\n\n    ```bash\n    autocut -t test.mp4 --encoding=gbk\n    autocut -c test.mp4 test.srt test.md --encoding=gbk\n    ```\n\n    如果使用了其他编码格式（如 `gbk` 等）生成 `md` 文件并用 Typora 打开后，该文件可能会被 Typora 自动转码为其他编码格式，此时再通过生成时指定的编码格式进行剪辑时可能会出现编码不支持等报错。因此可以在使用 Typora 编辑后再通过 VSCode 等修改到你需要的编码格式进行保存后再使用剪辑功能。\n\n2. **如何使用 GPU 来转录？**\n\n   当你有 Nvidia GPU，而且安装了对应版本的 PyTorch 的时候，转录是在 GPU 上进行。你可以通过命令来查看当前是不是支持 GPU。\n\n   ```bash\n   python -c \"import torch; print(torch.cuda.is_available())\"\n   ```\n\n   否则你可以在安装 AutoCut 前手动安装对应的 GPU 版本 PyTorch。\n\n3. **使用 GPU 时报错显存不够。**\n\n   whisper 的大模型需要一定的 GPU 显存。如果你的显存不够，你可以用小一点的模型，例如 `small`。如果你仍然想用大模型，可以通过 `--device` 来强制使用 CPU。例如\n\n   ```bash\n   autocut -t 11-28-18.mp4 --whisper-model large --device cpu\n   ```\n\n4. **能不能使用 `pip` 安装?**\n\n    whisper已经发布到PyPI了，可以直接用`pip install openai-whisper`安装。\n   \n   [https://github.com/openai/whisper#setup](https://github.com/openai/whisper#setup)\n\n   [https://pypi.org/project/openai-whisper/](https://pypi.org/project/openai-whisper/)\n\n## 如何参与贡献\n\n[这里有一些想做的 feature](https://github.com/mli/autocut/issues/22)，欢迎贡献。\n\n### 代码结构\n```text\nautocut\n│  .gitignore\n│  LICENSE\n│  README.md # 一般新增或修改需要让使用者知道就需要对应更新 README.md 内容\n│  setup.py\n│\n└─autocut # 核心代码位于 autocut 文件夹中，新增功能的实现也一般在这里面进行修改或新增\n   │  cut.py\n   │  daemon.py\n   │  main.py\n   │  transcribe.py\n   │  utils.py\n   └─ __init__.py\n\n```\n\n### 安装依赖\n开始安装这个项目的需要的依赖之前，建议先了解一下 Anaconda 或者 venv 的虚拟环境使用，推荐**使用虚拟环境来搭建该项目的开发环境**。\n具体安装方式为在你搭建搭建的虚拟环境之中按照[上方安装步骤](./README.md#安装)进行安装。\n\n> 为什么推荐使用虚拟环境开发？\n>\n> 一方面是保证各种不同的开发环境之间互相不污染。\n>\n> 更重要的是在于这个项目实际上是一个 Python Package，所以在你安装之后 AutoCut 的代码实际也会变成你的环境依赖。\n> **因此在你更新代码之后，你需要让将新代码重新安装到环境中，然后才能调用到新的代码。**\n\n### 开发\n\n1. 代码风格目前遵循 PEP-8，可以使用相关的自动格式化软件完成。\n2. `utils.py` 主要是全局共用的一些工具方法。\n3. `transcribe.py` 是调用模型生成`srt`和`md`的部分。\n4. `cut.py` 提供根据标记后`md`或`srt`进行视频剪切合并的功能。\n5. `daemon.py` 提供的是监听文件夹生成字幕和剪切视频的功能。\n6. `main.py` 声明命令行参数，根据输入参数调用对应功能。\n\n开发过程中请尽量保证修改在正确的地方，以及合理地复用代码，\n同时工具函数请尽可能放在`utils.py`中。\n代码格式目前是遵循 PEP-8，变量命名尽量语义化即可。\n\n在开发完成之后，最重要的一点是需要进行**测试**，请保证提交之前对所有**与你修改直接相关的部分**以及**你修改会影响到的部分**都进行了测试，并保证功能的正常。\n目前使用 `GitHub Actions` CI, Lint 使用 black 提交前请运行 `black`。\n\n### 提交\n\n1. commit 信息用英文描述清楚你做了哪些修改即可，小写字母开头。\n2. 最好可以保证一次的 commit 涉及的修改比较小，可以简短地描述清楚，这样也方便之后有修改时的查找。\n3. PR 的时候 title 简述有哪些修改， contents 可以具体写下修改内容。\n4. run test `pip install pytest` then `pytest test`\n5. run lint `pip install black` then `black .`\n"
        },
        {
          "name": "autocut",
          "type": "tree",
          "content": null
        },
        {
          "name": "imgs",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.3876953125,
          "content": "[metadata]\nname = autocut\nversion = attr: autocut.__version__\nlicense = Apache Software License\ndescription = Cut video by subtitles\nlong_description = file: README.md\nclassifiers =\n    License :: OSI Approved :: Apache Software License\n    Operating System :: OS Independent\n    Programming Language :: Python :: 3\n\n[options]\npackages = find:\ninclude_package_data = True\npython_requires = >= 3.9\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.8359375,
          "content": "from setuptools import setup, find_packages\n\nrequirements = [\n    \"ffmpeg-python\",\n    \"moviepy\",\n    \"openai-whisper\",\n    \"opencc-python-reimplemented\",\n    \"parameterized\",\n    \"pydub\",\n    \"srt\",\n    \"torchaudio\",\n    \"tqdm\",\n]\n\n\nsetup(\n    name=\"autocut-sub\",\n    install_requires=requirements,\n    url=\"https://github.com/mli/autocut\",\n    project_urls={\n        \"source\": \"https://github.com/mli/autocut\",\n    },\n    license=\"Apache License 2.0\",\n    long_description=open(\"README.md\", \"r\", encoding=\"utf-8\").read(),\n    long_description_content_type=\"text/markdown\",\n    extras_require={\n        \"all\": [\"openai\", \"faster-whisper\"],\n        \"openai\": [\"openai\"],\n        \"faster\": [\"faster-whisper\"],\n    },\n    packages=find_packages(),\n    entry_points={\n        \"console_scripts\": [\n            \"autocut = autocut.main:main\",\n        ]\n    },\n)\n"
        },
        {
          "name": "tea.yaml",
          "type": "blob",
          "size": 0.123046875,
          "content": "# https://tea.xyz/what-is-this-file\n---\nversion: 1.0.0\ncodeOwners:\n  - '0x1e292d6f2D09dc8ffDDb5B8Fd6b641e180224D84'\nquorum: 1\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}