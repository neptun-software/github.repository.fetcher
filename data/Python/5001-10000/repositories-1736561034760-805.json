{
  "metadata": {
    "timestamp": 1736561034760,
    "page": 805,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "uber/causalml",
      "stars": 5178,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1787109375,
          "content": ".eggs/\n*.egg-info/\nenv_docs/\n.idea\n.pytest_cache\n.vscode\n*.DS_Store\n__pycache__\nbuild\ndist\nwheelhouse\n*.pyc\n_build/\n.ipynb_checkpoints/\n*.c\n*.cpp\n*.so\n.coverage*\n*.html\n*.prof\n.venv/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.2548828125,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v2.3.0\n    hooks:\n    -   id: check-yaml\n    -   id: end-of-file-fixer\n    -   id: trailing-whitespace\n-   repo: https://github.com/psf/black\n    rev: 22.10.0\n    hooks:\n    -   id: black\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.5068359375,
          "content": "# Required\nversion: 2\n\n# Set the OS, Python version and other tools you might need\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"miniconda3-4.7\"\n\nconda:\n  environment: docs/environment-py39-rtd.yml\n\npython:\n  install:\n    - method: pip\n      path: .\n\n# Build documentation in the docs/ directory with Sphinx\nsphinx:\n  configuration: docs/conf.py\n\n# Optionally build your docs in additional formats such as PDF and ePub\nformats: all\n\n# Optionally set the version of Python and requirements required to build your docs\n"
        },
        {
          "name": "ANTITRUST.md",
          "type": "blob",
          "size": 1.177734375,
          "content": "# Antitrust Policy\n\nParticipants acknowledge that they may compete with other participants in various lines of business and that it is therefore imperative that they and their respective representatives act in a manner that does not violate any applicable antitrust laws, competition laws, or associated regulations. This Policy does not restrict any participant from engaging in other similar projects. Each participant may design, develop, manufacture, acquire or market competitive deliverables, products, and services, and conduct its business, in whatever way it chooses. No participant is obligated to announce or market any products or services. Without limiting the generality of the foregoing, participants agree not to have any discussion relating to any product pricing, methods or channels of product distribution, contracts with third-parties, division or allocation of markets, geographic territories, or customers, or any other topic that relates in any way to limiting or lessening fair competition.\n\n---\nPart of [MVG-0.1-beta](https://github.com/github/MVG/tree/v0.1-beta).\nMade with love by GitHub. Licensed under the [CC-BY 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/).\n"
        },
        {
          "name": "CHARTER.md",
          "type": "blob",
          "size": 4.0576171875,
          "content": "# Charter for the CausalML Organization\n\nThis is the organizational charter for the CausalML Organization (the \"Organization\"). By adding their name to the [Steering Committee.md file](./STEERING_COMMITTEE.md), Steering Committee members agree as follows.\n\n## 1. Mission\n\nCausalML is committed to democratizing causal machine learning through accessible, innovative, and well-documented open-source tools that empower data scientists, researchers, and organizations. At our core, we embrace inclusivity and foster a vibrant community where members exchange ideas, share knowledge, and collaboratively shape a future where CausalML drives advancements across diverse domains.\n\n## 2. Steering Committee\n\n**2.1 Purpose**. The Steering Committee will be responsible for all technical oversight, project approval and oversight, policy oversight, and trademark management for the Organization.\n\n**2.2 Composition**. The Steering Committee voting members are listed in the steering-committee.md file in the repository.\nVoting members may be added or removed by no less than 3/4 affirmative vote of the Steering Committee.\nThe Steering Committee will appoint a Chair responsible for organizing Steering Committee activity.\n\n## 3. Voting\n\n**3.1. Decision Making**. The Steering Committee will strive for all decisions to be made by consensus. While explicit agreement of the entire Steering Committee is preferred, it is not required for consensus. Rather, the Steering Committee will determine consensus based on their good faith consideration of a number of factors, including the dominant view of the Steering Committee and nature of support and objections. The Steering Committee will document evidence of consensus in accordance with these requirements. If consensus cannot be reached, the Steering Committee will make the decision by a vote.\n\n**3.2. Voting**. The Steering Committee Chair will call a vote with reasonable notice to the Steering Committee, setting out a discussion period and a separate voting period. Any discussion may be conducted in person or electronically by text, voice, or video. The discussion will be open to the public. In any vote, each voting representative will have one vote. Except as specifically noted elsewhere in this Charter, decisions by vote require a simple majority vote of all voting members.\n\n## 4. Termination of Membership\n\nIn addition to the method set out in section 2.2, the membership of a Steering Committee member will terminate if any of the following occur:\n\n**4.1 Resignation**. Written notice of resignation to the Steering Committee.\n\n**4.2 Unreachable Member**. If a member is unresponsive at its listed handle for more than three months the Steering Committee may vote to remove the member.\n\n## 5. Trademarks\n\nAny names, trademarks, service marks, logos, mascots, or similar indicators of source or origin and the goodwill associated with them arising out of the Organization's activities or Organization projects' activities (the \"Marks\"), are controlled by the Organization. Steering Committee members may only use the Marks in accordance with the Organization's [trademark policy](./TRADEMARKS.md). If a Steering Committee member is terminated or removed from the Steering Committee, any rights the Steering Committee member may have in the Marks revert to the Organization.\n\n## 6. Antitrust Policy\n\nThe Steering Committee is bound by the Organization's [antitrust policy](./ANTITRUST.md).\n\n## 7. No Confidentiality\n\nInformation disclosed in connection with any of the Organization's activities, including but not limited to meetings, Contributions, and submissions, is not confidential, regardless of any markings or statements to the contrary.\n\n## 8. Amendments\n\nAmendments to this charter, the [antitrust policy](./ANTITRUST.md), the [trademark policy](./TRADEMARKS.md), or the [code of conduct](./CODE_OF_CONDUCT.md) may only be made with at least a 3/4 affirmative vote of the Steering Committee.\n\n---\nAdapted from [MVG-0.1-beta](https://github.com/github/MVG/tree/v0.1-beta).\nMade with love by GitHub. Licensed under the [CC-BY 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/).\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1484375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age,\nbody size, disability, ethnicity, gender identity and expression, level of\nexperience, nationality, personal appearance, race, religion, or sexual\nidentity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an\nappointed representative at an online or offline event. Representation of a\nproject may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at oss-conduct@uber.com. The project\nteam will review and investigate all complaints, and will respond in a way\nthat it deems appropriate to the circumstances. The project team is obligated\nto maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 1.4, available at\n[http://contributor-covenant.org/version/1/4][version].\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.5078125,
          "content": "# Contributing to CausalML\n\nThe **CausalML** project welcome community contributors.\nTo contribute to it, please follow guidelines here.\n\nThe codebase is hosted on Github at https://github.com/uber/causalml.\n\nWe use [`black`](https://black.readthedocs.io/en/stable/index.html) as a formatter to keep the coding style and format across all Python files consistent and compliant with [PEP8](https://www.python.org/dev/peps/pep-0008/). We recommend that you add `black` to your IDE as a formatter (see the [instruction](https://black.readthedocs.io/en/stable/integrations/editors.html)) or run `black` on the command line before submitting a PR as follows:\n```bash\n# move to the top directory of the causalml repository\n$ cd causalml\n$ pip install -U black\n$ black .\n```\n\nAdditionally, you can set up black and other tools we use to run before any commit is made via:\n```bash\nmake setup_local\n```\n\nAs a start, please check out outstanding [issues](https://github.com/uber/causalml/issues).\nIf you'd like to contribute to something else, open a new issue for discussion first.\n\n## Development Workflow :computer:\n\n1. Fork the `causalml` repo. This will create your own copy of the `causalml` repo. For more details about forks, please check [this guide](https://docs.github.com/en/github/collaborating-with-pull-requests/working-with-forks/about-forks) at GitHub.\n2. Clone the forked repo locally\n3. (optional) Complete local installation by running:\n```bash\nmake setup_local\n```\n4. Create a branch for the change:\n```bash\n$ git checkout -b branch_name\n```\n5. Make a change\n6. Test your change as described below in the Test section\n7. Commit the change to your local branch\n```bash\n$ git add file1_changed file2_changed\n$ git commit -m \"Issue number: message to describe the change.\"\n```\n8. Push your local branch to remote\n```bash\n$ git push origin branch_name\n```\n9. Go to GitHub and create PR from your branch in your forked repo to the original `causalml` repo. An instruction to create a PR from a fork is available [here](https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork)\n\n## Documentation :books:\n\n[**CausalML** documentation](https://causalml.readthedocs.io/) is generated with [Sphinx](https://www.sphinx-doc.org/en/master/) and hosted on [Read the Docs](https://readthedocs.org/).\n\n### Docstrings\n\nAll public classes and functions should have docstrings to specify their inputs, outputs, behaviors and/or examples. For docstring conventions in Python, please refer to [PEP257](https://www.python.org/dev/peps/pep-0257/).\n\n**CausalML** supports the NumPy and Google style docstrings in addition to Python's original docstring with [`sphinx.ext.napoleon`](https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html). Google style docstrings are recommended for simplicity. You can find examples of Google style docstrings [here](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html)\n\n### Generating Documentation Locally\n\nYou can generate documentation in HTML locally as follows:\n```bash\n$ cd docs/\n$ pip install -r requirements.txt\n$ make html\n```\n\nDocumentation will be available in `docs/_build/html/index.html`.\n\n## Test :wrench:\n\nIf you added a new inference method, add test code to the `tests/` folder.\n\n### Prerequisites\n\n**CausalML** uses `pytest` for tests. Install `pytest` and `pytest-cov`, and the package dependencies:\n```bash\n$ pip install .[test]\n```\nSee details for test dependencies in `pyproject.toml`\n\n### Building Cython\n\nIn order to run tests, you need to build the Cython modules\n```bash\n$ python setup.py build_ext --inplace\n```\nThis is important because during testing causalml modules are imported from the source code.\n\n### Testing\n\nBefore submitting a PR, make sure the change to pass all tests and test coverage to be at least 70%.\n```bash\n$ pytest -vs tests/ --cov causalml/\n```\n\nTo run tests that require tensorflow (i.e. DragonNet), make sure tensorflow is installed and include the `--runtf` option with the `pytest` command.  For example:\n\n```bash\n$ pytest --runtf -vs tests/test_dragonnet.py\n```\n\nYou can also run tests via make:\n```bash\n$ make test\n```\n\n\n\n## Submission :tada:\n\nIn your PR, please include:\n- Changes made\n- Links to related issues/PRs\n- Tests\n- Dependencies\n- References\n\nPlease add the core Causal ML contributors as reviewers.\n\n## Maintain in `conda-forge`  :snake:\n\nWe are supporting to install the package through `conda`, in order to maintain the packages in conda we need to keep the package's version in conda's recipe repository [here](https://github.com/conda-forge/causalml-feedstock) in sync with `CausalML`. You can follow the [instruction](https://conda-forge.org/#update_recipe) from conda or below steps:\n\n1. After a new release of the package, fork the repo.\n2. Create a new branch from the master branch.\n3. Edit the recipe:\n    - Update the version number [here](https://github.com/conda-forge/causalml-feedstock/blob/main/recipe/meta.yaml#L2) in `meta.yaml`\n    - Generate the new sha256 hash and update it [here](https://github.com/conda-forge/causalml-feedstock/blob/main/recipe/meta.yaml#L11):  the sha256 hash can get from PyPi; look for the SHA256 link next to the download link on PyPi package’s files page, e.g. https://pypi.org/project/causalml/#files\n    - Reset the build number to 0\n    - Update the dependencies if needed\n4. Submit the PR and the recipe will automatically be built;\n\nOnce the recipe is ready it will be merged. The recipe will then automatically be built and uploaded to the conda-forge channel.\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 3.81640625,
          "content": "# Governance Policy\n\nThis document provides the governance policy for the Project. Maintainers agree to this policy and to abide by all Project polices, including the [code of conduct](./CODE_OF_CONDUCT.md), [trademark policy](./TRADEMARKS.md), and [antitrust policy](./ANTITRUST.md) by adding their name to the [maintainers.md file](./MAINTAINERS.md).\n\n## 1. Roles.\n\nThis project may include the following roles. Additional roles may be adopted and documented by the Project.\n\n**1.1. Maintainers**. Maintainers are responsible for organizing activities around developing, maintaining, and updating the Project. Maintainers are also responsible for determining consensus. This Project may add or remove Maintainers with the approval of the current Maintainers.\n\n**1.2. Contributors**. Contributors are those that have made contributions to the Project.\n\n## 2. Decisions.\n\n**2.1. Consensus-Based Decision Making**. Projects make decisions through consensus of the Maintainers. While explicit agreement of all Maintainers is preferred, it is not required for consensus. Rather, the Maintainers will determine consensus based on their good faith consideration of a number of factors, including the dominant view of the Contributors and nature of support and objections. The Maintainers will document evidence of consensus in accordance with these requirements.\n\n**2.2. Appeal Process**. Decisions may be appealed by opening an issue and that appeal will be considered by the Maintainers in good faith, who will respond in writing within a reasonable time. If the Maintainers deny the appeal, the appeal may be brought before the Organization Steering Committee, who will also respond in writing in a reasonable time.\n\n\n## 3. Termination of Membership\n\nThe membership of a Maintainer will terminate if any of the following occur:\n\n**3.1 Resignation**. Written notice of resignation to the Maintainers.\n\n**3.2 Unreachable Member**. If a member is unresponsive at its listed handle for more than three months the Maintainers may vote to remove the member.\n\n## 4. How We Work.\n\n**4.1. Openness**. Participation is open to anyone who is directly and materially affected by the activity in question. There shall be no undue financial barriers to participation.\n\n**4.2. Balance**. The development process should balance the interests of Contributors and other stakeholders. Contributors from diverse interest categories shall be sought with the objective of achieving balance.\n\n**4.3. Coordination and Harmonization**. Good faith efforts shall be made to resolve potential conflicts or incompatibility between releases in this Project.\n\n**4.4. Consideration of Views and Objections**. Prompt consideration shall be given to the written views and objections of all Contributors.\n\n**4.5. Written procedures**. This governance document and other materials documenting this project's development process shall be available to any interested person.\n\n## 5. No Confidentiality.\n\nInformation disclosed in connection with any Project activity, including but not limited to meetings, contributions, and submissions, is not confidential, regardless of any markings or statements to the contrary.\n\n## 6. Trademarks.\n\nAny names, trademarks, logos, or goodwill developed by and associated with the Project (the \"Marks\") are controlled by the Organization. Maintainers may only use these Marks in accordance with the Organization's trademark policy. If a Maintainer resigns or is removed, any rights the Maintainer may have in the Marks revert to the Organization.\n\n## 7. Amendments.\n\nAmendments to this governance policy may be made by affirmative vote of 2/3 of all Maintainers, with approval by the Organization's Steering Committee.\n\n---\nAdapted from [MVG-0.1-beta](https://github.com/github/MVG/tree/v0.1-beta).\nMade with love by GitHub. Licensed under the [CC-BY 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.5478515625,
          "content": "Copyright 2019 Uber Technology, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 1.279296875,
          "content": "# Maintainers\n\nThis document lists the Maintainers of the Project. Maintainers may be added once approved by the existing maintainers as described in the [Governance document](./GOVERNANCE.md). By adding your name to this list you are agreeing to abide by the Project governance documents and to abide by all of the Organization's polices, including the [code of conduct](./CODE-OF-CONDUCT.md), [trademark policy](./TRADEMARKS.md), and [antitrust policy](./ANTITRUST.md). If you are participating because of your affiliation with another organization (designated below), you represent that you have the authority to bind that organization to these policies.\n\n| **NAME** | **Handle** |\n| --- | --- |\n| Huigang Chen | @huigangchen |\n| Totte Harinen | @t-tte |\n| Jeong-Yoon Lee | @jeongyoonlee |\n| Paul Lo | @paullo0106 |\n| Jing Pan | @ppstacy |\n| Alexander Popkov | @alexander-pv |\n| Roland Stevenson | @ras44 |\n| Yifeng Wu | @vincewu51 |\n| Zhenyu Zhao | @zhenyuz0500 |\n\n## Previous Maintainers\n\n| **NAME** | **Handle** |\n| --- | --- |\n| Mike Yung | @yungmsh |\n| Yuchen Luo | @yluogit |\n| Steve Yang | @steveyang90 |\n\n---\nAdapted from [MVG-0.1-beta](https://github.com/github/MVG/tree/v0.1-beta).\nMade with love by GitHub. Licensed under the [CC-BY 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/).\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.15625,
          "content": "# Include the README\ninclude *.txt *.md\nrecursive-include docs *.txt\nrecursive-include causalml *.pyx *.pxd *.c *.h\n\n# Include the license file\ninclude LICENSE\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.5302734375,
          "content": ".PHONY: build_ext\nbuild_ext: clean\n\tpython setup.py build_ext --force --inplace\n\n.PHONY: build\nbuild: build_ext\n\tpython setup.py bdist_wheel\n\n.PHONY: install\ninstall: build_ext\n\tpip install .\n\n.PHONY: test\ntest: build_ext\n\tpytest -vs --cov causalml/\n\tpython setup.py clean --all\n\n.PHONY: clean\nclean:\n\tpython setup.py clean --all\n\trm -rf ./build ./dist ./eggs ./causalml.egg-info\n\tfind ./causalml -type f \\( -name \"*.so\" -o -name \"*.c\" -o -name \"*.html\" \\) -delete\n\n.PHONY: setup_local\nsetup_local:\n\tpip install pre-commit\n\tpre-commit install\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.5126953125,
          "content": "<div align=\"center\">\n  <a href=\"https://github.com/uber/causalml\"><img width=\"380px\" height=\"140px\" src=\"https://raw.githubusercontent.com/uber/causalml/master/docs/_static/img/logo/causalml_logo.png\"></a>\n</div>\n\n------------------------------------------------------\n\n[![PyPI Version](https://badge.fury.io/py/causalml.svg)](https://pypi.org/project/causalml/)\n[![Build Status](https://github.com/uber/causalml/actions/workflows/python-test.yaml/badge.svg)](https://github.com/uber/causalml/actions/workflows/python-test.yaml)\n[![Documentation Status](https://readthedocs.org/projects/causalml/badge/?version=latest)](http://causalml.readthedocs.io/en/latest/?badge=latest)\n[![Downloads](https://static.pepy.tech/badge/causalml)](https://pepy.tech/project/causalml)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/3015/badge)](https://bestpractices.coreinfrastructure.org/projects/3015)\n\n\n# Disclaimer\nThis project is stable and being incubated for long-term support. It may contain new experimental code, for which APIs are subject to change.\n\n\n# Causal ML: A Python Package for Uplift Modeling and Causal Inference with ML\n\n**Causal ML** is a Python package that provides a suite of uplift modeling and causal inference methods using machine learning algorithms based on recent\nresearch [[1]](#Literature). It provides a standard interface that allows user to estimate the Conditional Average Treatment Effect (CATE) or Individual Treatment\n Effect (ITE) from experimental or observational data. Essentially, it estimates the causal impact of intervention `T` on outcome `Y` for users\n with observed features `X`, without strong assumptions on the model form. Typical use cases include\n\n* **Campaign targeting optimization**: An important lever to increase ROI in an advertising campaign is to target the ad to the set of customers who will have a favorable response in a given KPI such as engagement or sales. CATE identifies these customers by estimating the effect of the KPI from ad exposure at the individual level from A/B experiment or historical observational data.\n\n* **Personalized engagement**: A company has multiple options to interact with its customers such as different product choices in up-sell or messaging channels for communications. One can use CATE to estimate the heterogeneous treatment effect for each customer and treatment option combination for an optimal personalized recommendation system.\n\n\n# Documentation\n\nDocumentation is available at:\n\nhttps://causalml.readthedocs.io/en/latest/about.html\n\n\n# Installation\n\nInstallation instructions are available at: \n\nhttps://causalml.readthedocs.io/en/latest/installation.html\n\n\n# Quickstart\n\nQuickstarts with code-snippets are available at: \n\nhttps://causalml.readthedocs.io/en/latest/quickstart.html\n\n\n# Example Notebooks\n\nExample notebooks are available at:\n\nhttps://causalml.readthedocs.io/en/latest/examples.html\n\n\n# Contributing\n\nWe welcome community contributors to the project. Before you start, please read our [code of conduct](https://github.com/uber/causalml/blob/master/CODE_OF_CONDUCT.md) and check out [contributing guidelines](./CONTRIBUTING.md) first.\n\n\n# Versioning\n\nWe document versions and changes in our [changelog](https://github.com/uber/causalml/blob/master/docs/changelog.rst).\n\n\n# License\n\nThis project is licensed under the Apache 2.0 License - see the [LICENSE](https://github.com/uber/causalml/blob/master/LICENSE) file for details.\n\n\n# References\n\n## Documentation\n* [Causal ML API documentation](https://causalml.readthedocs.io/en/latest/about.html)\n\n## Conference Talks and Publications by CausalML Team\n* (Talk) Introduction to CausalML at [Causal Data Science Meeting 2021](https://www.causalscience.org/meeting/program/day-2/)\n* (Talk) Introduction to CausalML at [2021 Conference on Digital Experimentation @ MIT (CODE@MIT)](https://ide.mit.edu/events/2021-conference-on-digital-experimentation-mit-codemit/)\n* (Talk) Causal Inference and Machine Learning in Practice with EconML and CausalML: Industrial Use Cases at Microsoft, TripAdvisor, Uber at [KDD 2021 Tutorials](https://kdd.org/kdd2021/tutorials) ([website and slide links](https://causal-machine-learning.github.io/kdd2021-tutorial/))\n* (Publication) CausalML White Paper [Causalml: Python package for causal machine learning](https://arxiv.org/abs/2002.11631)\n* (Publication) [Uplift Modeling for Multiple Treatments with Cost Optimization](https://ieeexplore.ieee.org/document/8964199) at [2019 IEEE International Conference on Data Science and Advanced Analytics (DSAA)](http://203.170.84.89/~idawis33/dsaa2019/preliminary-program/)\n* (Publication) [Feature Selection Methods for Uplift Modeling](https://arxiv.org/abs/2005.03447)\n\n## Citation\nTo cite CausalML in publications, you can refer to the following sources:\n\nWhitepaper:\n[CausalML: Python Package for Causal Machine Learning](https://arxiv.org/abs/2002.11631)\n\nBibtex:\n> @misc{chen2020causalml,\n>    title={CausalML: Python Package for Causal Machine Learning},\n>    author={Huigang Chen and Totte Harinen and Jeong-Yoon Lee and Mike Yung and Zhenyu Zhao},\n>    year={2020},\n>    eprint={2002.11631},\n>    archivePrefix={arXiv},\n>    primaryClass={cs.CY}\n>}\n\n\n## Literature\n\n1. Chen, Huigang, Totte Harinen, Jeong-Yoon Lee, Mike Yung, and Zhenyu Zhao. \"Causalml: Python package for causal machine learning.\" arXiv preprint arXiv:2002.11631 (2020).\n2. Radcliffe, Nicholas J., and Patrick D. Surry. \"Real-world uplift modelling with significance-based uplift trees.\" White Paper TR-2011-1, Stochastic Solutions (2011): 1-33.\n3. Zhao, Yan, Xiao Fang, and David Simchi-Levi. \"Uplift modeling with multiple treatments and general response types.\" Proceedings of the 2017 SIAM International Conference on Data Mining. Society for Industrial and Applied Mathematics, 2017.\n4. Hansotia, Behram, and Brad Rukstales. \"Incremental value modeling.\" Journal of Interactive Marketing 16.3 (2002): 35-46.\n5. Jannik Rößler, Richard Guse, and Detlef Schoder. \"The Best of Two Worlds: Using Recent Advances from Uplift Modeling and Heterogeneous Treatment Effects to Optimize Targeting Policies\". International Conference on Information Systems (2022)\n6. Su, Xiaogang, et al. \"Subgroup analysis via recursive partitioning.\" Journal of Machine Learning Research 10.2 (2009).\n7. Su, Xiaogang, et al. \"Facilitating score and causal inference trees for large observational studies.\" Journal of Machine Learning Research 13 (2012): 2955.\n8. Athey, Susan, and Guido Imbens. \"Recursive partitioning for heterogeneous causal effects.\" Proceedings of the National Academy of Sciences 113.27 (2016): 7353-7360.\n9. Künzel, Sören R., et al. \"Metalearners for estimating heterogeneous treatment effects using machine learning.\" Proceedings of the national academy of sciences 116.10 (2019): 4156-4165.\n10. Nie, Xinkun, and Stefan Wager. \"Quasi-oracle estimation of heterogeneous treatment effects.\" arXiv preprint arXiv:1712.04912 (2017).\n11. Bang, Heejung, and James M. Robins. \"Doubly robust estimation in missing data and causal inference models.\" Biometrics 61.4 (2005): 962-973.\n12. Van Der Laan, Mark J., and Daniel Rubin. \"Targeted maximum likelihood learning.\" The international journal of biostatistics 2.1 (2006).\n13. Kennedy, Edward H. \"Optimal doubly robust estimation of heterogeneous causal effects.\" arXiv preprint arXiv:2004.14497 (2020).\n14. Louizos, Christos, et al. \"Causal effect inference with deep latent-variable models.\" arXiv preprint arXiv:1705.08821 (2017).\n15. Shi, Claudia, David M. Blei, and Victor Veitch. \"Adapting neural networks for the estimation of treatment effects.\" 33rd Conference on Neural Information Processing Systems (NeurIPS 2019), 2019.\n16. Zhao, Zhenyu, Yumin Zhang, Totte Harinen, and Mike Yung. \"Feature Selection Methods for Uplift Modeling.\" arXiv preprint arXiv:2005.03447 (2020).\n17. Zhao, Zhenyu, and Totte Harinen. \"Uplift modeling for multiple treatments with cost optimization.\" In 2019 IEEE International Conference on Data Science and Advanced Analytics (DSAA), pp. 422-431. IEEE, 2019.\n \n\n## Related projects\n\n* [uplift](https://cran.r-project.org/web/packages/uplift/index.html): uplift models in R\n* [grf](https://cran.r-project.org/web/packages/grf/index.html): generalized random forests that include heterogeneous treatment effect estimation in R\n* [rlearner](https://github.com/xnie/rlearner): A R package that implements R-Learner\n* [DoWhy](https://github.com/Microsoft/dowhy):  Causal inference in Python based on Judea Pearl's do-calculus\n* [EconML](https://github.com/microsoft/EconML): A Python package that implements heterogeneous treatment effect estimators from econometrics and machine learning methods\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.2216796875,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| all     | :white_check_mark: |\n\n## Reporting a Vulnerability\n\nPlease report any vulnerabilities to causalml@uber.com\n"
        },
        {
          "name": "STEERING_COMMITTEE.md",
          "type": "blob",
          "size": 1.072265625,
          "content": "# Steering Committee\n\nThis document lists the members of the Organization's Steering Committee. Voting members may be added once approved by the Steering Committee as described in the [charter](./CHARTER.md). By adding your name to this list you are agreeing to abide by all Organization polices, including the [charter](./CHARTER.md), the [code of conduct](./CODE_OF_CONDUCT.md), the [trademark policy](./TRADEMARKS.md), and the [antitrust policy](./ANTITRUST.md). If you are serving on the Steering Committee because of your affiliation with another organization (designated below), you represent that you have authority to bind that organization to these policies.\n\n| **NAME** | **Handle** | **Affiliated Organization** |\n| --- | --- | --- |\n| Huigang Chen | @huigangchen | Meta |\n| Totte Harinen | @t-tte | AirBnB |\n| Jeong-Yoon Lee | @jeongyoonlee | Uber |\n| Zhenyu Zhao | @zhenyuz0500 | Tencent |\n\n---\nAdapted from [MVG-0.1-beta](https://github.com/github/MVG/tree/v0.1-beta).\nMade with love by GitHub. Licensed under the [CC-BY 4.0 License](https://creativecommons.org/licenses/by-sa/4.0/).\n"
        },
        {
          "name": "TRADEMARKS.md",
          "type": "blob",
          "size": 4.677734375,
          "content": "## Introduction\n\nThis is the Organization's policy for the use of our trademarks. While our work is available under free and open source software licenses, those licenses do not include a license to use our trademarks.\n\nThis policy describes how you may use our trademarks.  Our goal is to strike a balance between: 1) our need to ensure that our trademarks remain reliable indicators of the quality software we release; and 2) our community members' desire to be full participants in our Organization.\n\n## Our Trademarks\n\nThis policy covers the name of the Organization and each of the Organization's projects, as well as any associated names, trademarks, service marks, logos, mascots, or similar indicators of source or origin (our \"Marks\").\n\n## In General\n\nWhenever you use our Marks, you must always do so in a way that does not mislead anyone about exactly who is the source of the software. For example, you cannot say you are distributing the \"Mark\" software when you're distributing a modified version of it because people will believe they are getting the same software that they can get directly from us when they aren't. You also cannot use our Marks on your website in a way that suggests that your website is an official Organization website or that we endorse your website. But, if true, you can say you like the \"Mark\" software, that you participate in the \"Mark\" community, that you are providing an unmodified version of the \"Mark\" software, or that you wrote a book describing how to use the \"Mark\" software.\n\nThis fundamental requirement, that it is always clear to people what they are getting and from whom, is reflected throughout this policy. It should also serve as your guide if you are not sure about how you are using the Marks.\n\nIn addition:\n* You may not use or register, in whole or in part, the Marks as part of your own trademark, service mark, domain name, company name, trade name, product name or service name.\n* Trademark law does not allow your use of names or trademarks that are too similar to ours. You therefore may not use an obvious variation of any of our Marks or any phonetic equivalent, foreign language equivalent, takeoff, or abbreviation for a similar or compatible product or service.\n* You agree that any goodwill generated by your use of the Marks and participation in our community inures solely to our collective benefit.\n\n## Distribution of unmodified source code or unmodified executable code we have compiled\n\nWhen you redistribute an unmodified copy of our software, you are not changing the quality or nature of it. Therefore, you may retain the Marks we have placed on the software to identify your redistribution. This kind of use only applies if you are redistributing an official distribution from this Project that has not been changed in any way.\n\n## Distribution of executable code that you have compiled, or modified code\n\nYou may use any word marks, but not any Organization logos, to truthfully describe the origin of the software that you are providing, that is, that the code you are distributing is a modification of our software. You may say, for example, that \"this software is derived from the source code for 'Mark' software.\"\n\nOf course, you can place your own trademarks or logos on versions of the software to which you have made substantive modifications, because by modifying the software, you have become the origin of that exact version. In that case, you should not use our Marks.\n\nHowever, you may use our Marks for the distribution of code (source or executable) on the condition that any executable is built from the official Project source code and that any modifications are limited to switching on or off features already included in the software, translations into other languages, and incorporating minor bug-fix patches. Use of our Marks on any further modification is not permitted.\n\n## Statements about your software's relation to our software\n\nYou may use the word Marks, but not the Organization's logos, to truthfully describe the relationship between your software and ours. Our Mark should be used after a verb or preposition that describes the relationship between your software and ours. So you may say, for example, \"Bob's software for the 'Mark' platform\" but may not say \"Bob's 'Mark' software.\" Some other examples that may work for you are:\n\n* [Your software] uses \"Mark\" software\n* [Your software] is powered by \"Mark\" software\n* [Your software] runs on \"Mark\" software\n* [Your software] for use with \"Mark\" software\n* [Your software] for Mark software\n\nThese guidelines are based on the [Model Trademark Guidelines](http://www.modeltrademarkguidelines.org), used under a [Creative Commons Attribution 3.0 Unported license](https://creativecommons.org/licenses/by/3.0/deed.en_US)\n"
        },
        {
          "name": "causalml",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.5439453125,
          "content": "[project]\nname = \"causalml\"\nversion = \"0.15.3dev\"\ndescription = \"Python Package for Uplift Modeling and Causal Inference with Machine Learning Algorithms\"\nreadme = { file = \"README.md\", content-type = \"text/markdown\" }\n\nauthors = [\n    { \"name\" = \"Huigang Chen\" },\n    { \"name\" = \"Totte Harinen\" },\n    { \"name\" = \"Jeong-Yoon Lee\" },\n    { \"name\" = \"Jing Pan\" },\n    { \"name\" = \"Mike Yung\" },\n    { \"name\" = \"Zhenyu Zhao\" }\n]\nmaintainers = [\n    { name = \"Jeong-Yoon Lee\" }\n]\nclassifiers = [\n    \"Programming Language :: Python\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"Operating System :: OS Independent\",\n]\n\nrequires-python = \">=3.7\"\ndependencies = [\n    \"forestci==0.6\",\n    \"pathos==0.2.9\",\n    \"pip>=10.0\",\n    \"numpy>=1.18.5, <2\",\n    \"scipy>=1.4.1\",\n    \"matplotlib\",\n    \"pandas>=0.24.1\",\n    \"scikit-learn>=1.5.2, <1.6\",\n    \"statsmodels>=0.9.0\",\n    \"Cython<=0.29.34\",\n    \"seaborn\",\n    \"xgboost\",\n    \"pydotplus\",\n    \"tqdm\",\n    \"shap\",\n    \"dill\",\n    \"lightgbm\",\n    \"pygam\",\n    \"packaging\",\n    \"graphviz\",\n]\n\n[project.optional-dependencies]\ntest = [\n    \"pytest>=4.6\",\n    \"pytest-cov>=4.0\"\n]\ntf = [\n    \"tensorflow>=2.4.0\"\n]\ntorch = [\n    \"torch\",\n    \"pyro-ppl\"\n]\n\n[build-system]\nrequires = [\n    \"setuptools>=18.0\",\n    \"wheel\",\n    \"Cython<=0.29.34\",\n    \"numpy>=1.18.5, <2\",\n    \"scikit-learn>=0.22.0\",\n]\n\n[project.urls]\nhomepage = \"https://github.com/uber/causalml\"\n\n[tool.cibuildwheel]\nbuild = [\"cp38-*\", \"cp39-*\", \"cp310-*\", \"cp311-*\"]\nbuild-verbosity = 1\n# Skip 32-bit builds\nskip = [\"*-win32\", \"*-manylinux_i686\", \"*-musllinux*\"]\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.64453125,
          "content": "[metadata]\n# This includes the license file(s) in the wheel.\n# https://wheel.readthedocs.io/en/stable/user_guide.html#including-license-files-in-the-generated-wheel-file\nlicense_files = LICENSE\n\n[bdist_wheel]\n# This flag says to generate wheels that support both Python 2 and Python\n# 3. If your code will not run unchanged on both Python 2 and 3, you will\n# need to generate separate wheels for each Python version that you\n# support. Removing this line (or setting universal to 0) will prevent\n# bdist_wheel from trying to make a universal wheel. For more see:\n# https://packaging.python.org/guides/distributing-packages-using-setuptools/#wheels\nuniversal=1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.720703125,
          "content": "import multiprocessing as mp\nimport os\nfrom setuptools import dist, setup, find_packages\nfrom setuptools.extension import Extension\n\ntry:\n    from Cython.Build import cythonize\nexcept ImportError:\n    dist.Distribution().fetch_build_eggs([\"cython<=0.29.34\"])\n    from Cython.Build import cythonize\nimport Cython.Compiler.Options\n\nCython.Compiler.Options.annotate = True\ntry:\n    from numpy import get_include as np_get_include\nexcept ImportError:\n    dist.Distribution().fetch_build_eggs([\"numpy\"])\n    from numpy import get_include as np_get_include\n\n# fmt: off\ncython_modules = [\n    (\"causalml.inference.tree._tree._tree\", \"causalml/inference/tree/_tree/_tree.pyx\"),\n    (\"causalml.inference.tree._tree._criterion\", \"causalml/inference/tree/_tree/_criterion.pyx\"),\n    (\"causalml.inference.tree._tree._splitter\", \"causalml/inference/tree/_tree/_splitter.pyx\"),\n    (\"causalml.inference.tree._tree._utils\", \"causalml/inference/tree/_tree/_utils.pyx\"),\n    (\"causalml.inference.tree.causal._criterion\", \"causalml/inference/tree/causal/_criterion.pyx\"),\n    (\"causalml.inference.tree.causal._builder\", \"causalml/inference/tree/causal/_builder.pyx\"),\n    (\"causalml.inference.tree.uplift\", \"causalml/inference/tree/uplift.pyx\"),\n]\n# fmt: on\n\nextensions = [\n    Extension(\n        name,\n        [source],\n        libraries=[],\n        include_dirs=[np_get_include()],\n        extra_compile_args=[\"-O3\"],\n    )\n    for name, source in cython_modules\n]\n\npackages = find_packages(exclude=[\"tests\", \"tests.*\"])\n\nnthreads = mp.cpu_count()\nif os.name == \"nt\":\n    nthreads = 0\nelse:\n    mp.set_start_method(\"fork\", force=True)\n\nsetup(\n    packages=packages,\n    ext_modules=cythonize(extensions, annotate=True, nthreads=nthreads),\n    include_dirs=[np_get_include()],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.2998046875,
          "content": "[tox]\nenvlist = py38\n\n[testenv]\ndeps = pytest\ncommands =\n    pytest -sv\n\n[flake8]\nmax-line-length = 120\nignore = E121,\n         E123,\n         E126,\n         E128,\n         E129,\n         E226,\n         E24,\n         E704,\n         E731,\n         E741,\n         W503,\n         W504\n\nbuiltins = __builtins__\n"
        }
      ]
    }
  ]
}