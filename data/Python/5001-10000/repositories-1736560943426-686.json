{
  "metadata": {
    "timestamp": 1736560943426,
    "page": 686,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Rockyzsu/stock",
      "stars": 5594,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1220703125,
          "content": "*.js linguist-language=python\n*.css linguist-language=python\n*.ipynb linguist-language=python\n*.html linguist-language=python"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3681640625,
          "content": "*.pyc\n.DS_Store\ndata.cfg\n/.idea\n*.xml\n*.html\n/private\n.ipynb_checkpoints/\n*.log\n*.pkl\nstock_list.txt\nbases.csv\n*.csv\n*.xls\n*.xlsx\nconfig.py\nconf.py\nsend_mail.py\nuser.json\ncodes.txt\n.vscode/\nsettings.py\nkeys/\ndata/\nemail_list.py\nconfig.json\n.ipynb_checkpoints\nlog/jsl_monitor\nconfigure/\nrelease/\n/datahub/image_server_dump_model.py\ndatahub/model.h\nninwen_model.h\nvalidate_key.py"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.478515625,
          "content": "Copyright (c) Stock developers.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice,\n       this list of conditions, and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions, and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    3. Neither the name of Stock nor the names of its contributors may be used\n       to endorse or promote products derived from this software without\n       specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "README.MD",
          "type": "blob",
          "size": 7.3154296875,
          "content": "### 更好的帮助自己炒股(亏钱-。-)\n\n#### 2022-12-08 更新\n\n目前正在重构项目代码，目录结构可能与下面描述有些出入，后期会慢慢更新修改，感谢大家的关注与支持。\n\n---\n\n*analysis/ 数据分析部分*\n\n*datahub/ 数据采集部分*\n\n*fund/ 基金相关的分析部分*\n\n*futu/ 富途牛牛接口的基本用法 *\n\n*hk_stock/ 港股部分*\n\n*k-line/ K线技术形态部分*\n\n*machine_learning/ 机器学习预测* \n\n*trader/ 交易部分*\n\n*ptrade/ ptrade自动交易实盘代码*\n\n*log/* 存放日志\n\n*common/* 常用函数与库\n\n*configure* 数据库连接与配置\n\n----\n#### 使用教程：\n* 修改 configure/sample_config.json 配置文件名 为 configure/config.json，根据不同项目，并对着里面的字段进行修改，修改你的mysql，mongodb的用户名和密码，如果项目里面没有用到mysql，mongodb等，则不需要修改。\n对应的映射关系可以看这个文件里面的源码。这个设置主要为了同一套代码便于切换线上和本地的数据库，并没有采用环境变量的方式存储用户密码。需要的朋友也可以自己改动。\n\nconfigure/setting.py\n\n```\n    def config(self, db_type='mysql', local='ubuntu'):\n        db_dict = self.json_data[db_type][local]\n        user = db_dict['user']\n        password = db_dict['password']\n        host = db_dict['host']\n        port = db_dict['port']\n        return (user, password, host, port)\n\n    def get_engine(self, db, type_='ubuntu'):\n        from sqlalchemy import create_engine\n        user, password, host, port = self.config(db_type='mysql', local=type_)\n        try:\n            engine = create_engine(\n                'mysql+pymysql://{}:{}@{}:{}/{}?charset=utf8'.format(user, password, host, port, db))\n        except Exception as e:\n            print(e)\n            return None\n        return engine\n\n    def get_mysql_conn(self, db, type_='ubuntu'):\n        import pymysql\n        user, password, host, port = self.config(db_type='mysql', local=type_)\n        try:\n            conn = pymysql.connect(host=host, port=port, user=user, password=password, db=db, charset='utf8')\n        except Exception as e:\n            print(e)\n            return None\n        else:\n            return conn\n\n    def mongo(self, location_type='ubuntu', async_type=False):\n        user, password, host, port = self.config('mongo', location_type)\n        connect_uri = f'mongodb://{user}:{password}@{host}:{port}'\n        if async_type:\n            from motor.motor_asyncio import AsyncIOMotorClient\n            client = AsyncIOMotorClient(connect_uri)\n        else:\n            import pymongo\n            client = pymongo.MongoClient(connect_uri)\n        return client\n```\n\n#### 文末有券商福利：提供券商自动化下单接口\n\n---\n\n码农的量化交易，把经历写成代码推送到github。代码和策略会一直保持更新，如果你有好的策略或者想法和疑问想要交流，可以加文末微信。\n\n### 新增：\n\n### analysis 目录 数据分析部分\n\n* analysis/get_zt_info 分析次新板块中的涨停强度\n* analysis/diagnose_stock 股票诊断，是否有黑历史和东北股\n* analysis/ipospeed IPO发行速度 与指数的相关性\n* analysis/fd_money A股某段日期内涨停板的封单金额 \n* \n### fund（基金）\n\n* fund/LOFShareDection.py 监控LOF、ETF场内份额变动\n* fund/ark_funds.py 获取ARK ETF每日持仓数据，并写入mongodb\n* fund/fund_share_update.py 上交所，深交所 基金场内基金份额监控\n* fund/fund_share_monitor.py 上交所，深交所 基金基金份额查询，规模变动\n* fund/fund_info_spider.py 集思录基金,腾讯证券基金折价率，溢价率 爬虫\n* fund/etf_info.py 市场指数基金的持仓股监控\n* fund/ttjj.py 天天基金数据获取\n* fund/xueqiu_private_fund.py 雪球私募私募获取\n* fund/danjuan_fund.py 雪球蛋卷基金数据获取\n* fund/danjuan_fund_data_analysis.py 雪球蛋卷基金分析\n\n## datahub（数据源）\n\n* datahub/foreignexchange.py 美元兑人民币汇率监控\n* datahub/niwen.py 宁稳可转债下载\n* datahub/public_private_fund_members.py 公墓私募基金成员数据\n* datahub/jucao_ammouncement.py 巨潮公告批量获取+PDF下载\n* datahub/bond_industry_info.py 可转债行业分布\n* datahub/ceiling_break.py 涨停板封榜监控\n\n## k-line （K线技术形态识别）\n* k-line/recognize_form.py 通过talib识别常见形态，如三只乌鸦等\n* \n### 已有：\n\n* datahub/black_list_sql.py 记录A股市场上所有有黑历史的股票名单，并存入数据库\n* big_deal.py 监控每天A股市场上的大单交易\n* bond_monitor 可转债监控\n* ceiling_break.py 新股一直板开板后多少天能够重新回到开板价格\n* delivery_order.py 把交割单导出到Mysql，便于查找某只清仓股的操作历史痕迹，对自己的操作记录一目了然\n* fetch_each_day.py --获取每天换手率前50的热门股\n* filter_stock.py 通过不同的因子策略选股，常见的如市盈率，流通量，股东数，基金持股数等\n* foreign_exchange.py 获取美元汇率的每天走势并存入Mysql\n* get_break_high.py --获取当天破50天新高的股票。为什么不获取60天呢？ 因为大家都在用，用的人多了就不准了。\n* ipospeed.py 统计每天IPO新股发行速度与大盘的相关性\n* ipo_stock.py 新股统计\n* jisilu.py 获取集思录的可转债行情\n* jubi.py -获取国内山寨币平台的实时数据\n* new_stock_break 分析新股的开板时机\n* new_stock_fund 打新基金获取，并选出中签科创板的基金\n* pledgeed_validation.py 股权质押数据整理\n* push_msn.py -短信提醒自己 设定的某个股票价格或者涨幅达到自己 要求\n* relationship_case.py 每个月的解禁股与大盘指数的关系\n* select_stock.py - 选股策略， 根据自己的经验选出来的个股。\n* SPSIOP_PRICE.py - 华宝油气估值 通过爬虫获取数据然后计算\n* stockInfo.py 爬取市场股票新闻消息，并存储到ElasticSearch数据库中\n* strategy_verify.py 获取雪球的策略并验证\n* simulation.py 记录自己的模拟仓\n* strategy_verify.py -获取雪球的即时交易策略\n* win_or_lost_each_day.py --评估自己每天每只股票的盈亏情况 完成度100%\n* zdt.py --每天股票市场的涨停热度\n\n----\n\n# 福利\n\n### 券商量化下单接口\n\n支持python语言，可云端部署与本地运行两种模式，支持A股市场股票，转债，基金等品种。\n\n![实盘python下单接口](http://xximg.30daydo.com/picgo/ptrade1.png)\n\n### 接口文档\n\n![](http://xximg.30daydo.com/picgo/api%E6%96%87%E6%A1%A3.png)\n\n### 费率\n\n交易费率低：<br>\n股票万一； 可转债万0.4；基金ETF,LOF万0.5\n\n\n----\n\n开通量化接口后是不收取额外费用，可永久使用。\n\n开通条件：\n不同券商门槛不同\n* 券商一：开户后入金1W可开通\n* 券商二：开户后入金2W即可开通\n* \n\n----\n\n当然也有其他主流券商可选，华泰，广发，华宝，招商，国金，银河证券等等，基本可以涵盖主流券商。\n\n----\n\n## 开通方式：\n\n扫码\n\n\n<img src=\"http://xximg.30daydo.com/picgo/ufc200.png\" style=\"zoom:80%;\" />\n<br>注明：开户。\n\n\n----\n关注开发者公众号： 可转债量化分析\n\n----\n\n[![公众号](http://www.30daydo.com/uploads/article/20210329/e42c51f95e6e6b41366ee320c1f01316.jpg)](http://www.30daydo.com/uploads/article/20210329/e42c51f95e6e6b41366ee320c1f01316.jpg)"
        },
        {
          "name": "StockAnalyze.py",
          "type": "blob",
          "size": 7.2744140625,
          "content": "'''\n@author:rocky\n@email:weigesysu@qq.com\n@feature: 收盘事后分析\n'''\n\nfrom configure.settings import DBSelector\nimport pandas as pd\nfrom scipy import stats\nimport tushare as ts\nimport datetime\nimport os\n# import matplotlib.pyplot as plt\nimport numpy as np\n\npd.set_option('display.max_rows', None)\n\n\ndef volume_calculation(code, start, end):\n    '''\n    计算某个股票的某个时间段的累计成交量\n\n    :param start: 开始日期\n    :param end: 结束日期\n    :return: 成交量，占每天比例\n    '''\n\n    df = ts.get_today_ticks(code)\n\n    # 转换str为时间格式，便于下面用来比较时间的大小\n    df['time'] = df['time'].map(lambda x: datetime.datetime.strptime(str(x), '%H:%M:%S'))\n    total = df['volume'].sum()\n    start = datetime.datetime.strptime(start, '%H:%M:%S')\n    end = datetime.datetime.strptime(end, '%H:%M:%S')\n    new_df = df[(df['time'] >= start) & (df['time'] < end)]\n\n    volume = new_df['volume'].sum()\n    rate = round(volume * 1.00 / total * 100, 2)\n\n    return volume, rate\n\n\ndef today_statistics(today):\n    '''\n    :help: 今天涨跌幅的统计分析： 中位数，均值等数据\n    :param today: 日期 2019-01-01\n    :return:None\n    '''\n\n    engine = DBSelector().get_engine('db_daily')\n    df = pd.read_sql(today, engine, index_col='index')\n    # 去除停牌的 成交量=0\n\n    df = df[df['volume'] != 0]\n    median = round(df['changepercent'].median(), 2)\n    mean = round(df['changepercent'].mean(), 2)\n    std = round(df['changepercent'].std(), 2)\n    p_25 = round(stats.scoreatpercentile(df['changepercent'], 25), 2)\n    p_50 = round(stats.scoreatpercentile(df['changepercent'], 50), 2)\n    p_75 = round(stats.scoreatpercentile(df['changepercent'], 75), 2)\n\n    print('中位数: {}'.format(median))\n    print('平均数: {}'.format(mean))\n    print('方差: {}'.format(std))\n    print('25%: {}'.format(p_25))\n    print('50%: {}'.format(p_50))\n    print('75%: {}'.format(p_75))\n\n\ndef zt_location(date):\n    '''\n    :help: 分析涨停的区域分布\n    :param date:日期格式 20180404\n    :return:\n    '''\n    engine_zdt = DBSelector().get_engine('db_zdt')\n    engine_basic = DBSelector().get_engine('db_stock')\n\n    df = pd.read_sql(date + 'zdt', engine_zdt, index_col='index')\n    df_basic = pd.read_sql('tb_basic_info', engine_basic, index_col='index')\n    result = {}\n\n    for code in df['代码'].values:\n        try:\n            area = df_basic[df_basic['code'] == code]['area'].values[0]\n            result.setdefault(area, 0)\n            result[area] += 1\n\n        except Exception as e:\n            print(e)\n\n    new_result = sorted(result.items(), key=lambda x: x[1], reverse=True)\n    for k, v in new_result:\n        print(k, v)\n\n\ndef show_percentage(price):\n    '''\n    :help: 根据收盘价计算每个百分比的价格\n    :param open_price: 开盘价\n    :return:\n    '''\n\n    for i in range(1, 11):\n        print('{}\\t+{}% -> {}'.format(price, i, round(price * (1 + 0.01 * i), 2)))\n\n    for i in range(1, 11):\n        print('{}\\t-{}% -> {}'.format(price, i, round(price * (1 - 0.01 * i), 2)))\n\n\ndef stock_profit(code, start, end):\n    '''\n    :help: 计算某个时间段的收益率\n    :param code: 股票代码\n    :param start: 开始时间\n    :param end: 结束时间\n    :return: 收益率\n    '''\n\n    k_data = ts.get_k_data(start=start, end=end, code=code)\n\n    if len(k_data)==0:\n        return np.nan\n\n    start_price = k_data['close'].values[0]\n    print(\"Start price: \", start_price)\n\n    end_price = k_data['close'].values[-1]\n\n    print(\"End price: \", end_price)\n\n    earn_profit = (end_price - start_price) / start_price * 100\n    print(\"Profit: \", round(earn_profit, 2))\n    return round(earn_profit, 2)\n\n\ndef exclude_kcb(df):\n    '''\n    :help: 去除科创板\n    :param df:\n    :return:\n    '''\n    non_kcb = df[~df['code'].map(lambda x: True if x.startswith('688') else False)]\n    return non_kcb\n\n\ndef plot_percent_distribution(date):\n    '''\n    :help:图形显示某一天的涨跌幅分布\n    :param date:\n    :return:\n    '''\n    import matplotlib.pyplot as plt\n\n    total = []\n    engine = DBSelector().get_engine('db_daily')\n    df = pd.read_sql(date, con=engine)\n    df = exclude_kcb(df)\n\n    count = len(df[(df['changepercent'] >= -11) & (df['changepercent'] <= -9.5)])\n    total.append(count)\n\n    for i in range(-9, 9, 1):\n        count = len(df[(df['changepercent'] >= i * 1.00) & (df['changepercent'] < ((i + 1)) * 1.00)])\n        total.append(count)\n\n    count = len(df[(df['changepercent'] >= 9)])\n    total.append(count)\n    # print(total)\n    df_figure = pd.Series(total)\n    plt.figure(figsize=(16, 10))\n    X = range(-10, 10)\n    plt.bar(X, height=total, color='y')\n    for x, y in zip(X, total):\n        plt.text(x, y + 0.05, y, ha='center', va='bottom')\n    plt.grid()\n    plt.xticks(range(-10, 11))\n    plt.show()\n\n\ndef year_price_change(year,ignore_new_stock=False):\n    '''\n    :year: 年份\n    :ignore_new_stock: 排除当年上市的新股\n    计算某年个股的涨幅排名\n    :return: None 生成excel\n    '''\n\n    year = int(year)\n\n    basic = ts.get_stock_basics()\n    pro = []\n\n    name=''\n    # basic['timeToMarket']=pd.to_datetime(basic['timeToMarket'],format='%Y%m%d')\n\n    # 去除当年的新股\n    if ignore_new_stock:\n        basic=basic[basic['timeToMarket']< int('{}0101'.format(year))]\n        name = '_ignore_new_stock'\n\n    filename='{}_all_price_change{}.xls'.format(year,name)\n\n    for code in basic.index.values:\n        p = stock_profit(code, '{}-01-01'.format(year), '{}-01-01'.format(year+1))\n        pro.append(p)\n\n    basic['p_change_year'] = pro\n    basic=basic.sort_values(by='p_change_year', ascending=False)\n    basic.to_excel(filename, encoding='gbk')\n\n\ndef stock_analysis(filename):\n    '''\n    # 分析年度的数据\n    :return:\n    '''\n\n    df=pd.read_excel(filename,encoding='gbk')\n    print('mean:\\n',df['p_change_year'].mean())\n    print('max:\\n',df['p_change_year'].max())\n    print('min:\\n',df['p_change_year'].min())\n    print('middle\\n',df['p_change_year'].median())\n    # plt.figure()\n    # df['p_change_year'].plot.hist()\n    # plt.show()\n\n\ndef cb_stock_year():\n    '''\n    上一年可转债正股的涨跌幅排名\n    :return:\n    '''\n    engine = get_engine('db_stock')\n    df_cb = pd.read_sql('tb_bond_jisilu', engine)\n    filename='2019_all_price_change_ignore_new_stock.xls'\n    df_all=pd.read_excel(filename,encoding='gbk')\n    zg_codes = list(df_cb['正股代码'].values)\n    df = df_all[df_all['code'].isin(zg_codes)]\n    df.to_excel('2019_cb_zg.xls',encoding='gbk')\n\ndef main():\n    ## 某个股票某个时间段的成交量 ####\n    # code = '000069'\n    # v, ratio = volume_calculation(code,'09:30:00', '10:00:00')\n    # print('\\n')\n    # print(v, ratio)\n\n    ## 涨跌幅分布 #####\n    # TODAY=datetime.datetime.now().strftime(\"%Y-%m-%d\")\n    # today_tendency(TODAY)\n\n    ## 分析涨停的区域分布 ####\n    # TODAY = datetime.datetime.now().strftime(\"%Y%m%d\")\n    # zt_location(TODAY)\n\n    ## 显示百分比价格\n    # show_percentage(121)\n\n    ## 计算某个个股某段时间的收益率\n    # stock_profit('300333','2019-01-01','2020-02-03')\n\n    ## 显示价格分布\n    # date = '2020-02-07'\n    # plot_percent_distribution(date)\n\n    # 某年个股涨幅\n    # year_price_change(2019,True)\n    # stock_analysis('2019_all_price_change_ignore_new_stock.xls')\n\n    cb_stock_year()\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "__init__.py",
          "type": "blob",
          "size": 0.10546875,
          "content": "# -*- coding: utf-8 -*-\n# @Time : 2020/11/21 0:12\n# @File : __init__.py\n# @Author : Rocky C@www.30daydo.com\n"
        },
        {
          "name": "analysis",
          "type": "tree",
          "content": null
        },
        {
          "name": "backtest",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "tree",
          "content": null
        },
        {
          "name": "daily",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "datahub",
          "type": "tree",
          "content": null
        },
        {
          "name": "fund",
          "type": "tree",
          "content": null
        },
        {
          "name": "futu",
          "type": "tree",
          "content": null
        },
        {
          "name": "hk_stock",
          "type": "tree",
          "content": null
        },
        {
          "name": "ios.wav",
          "type": "blob",
          "size": 175.82421875,
          "content": null
        },
        {
          "name": "jisilu_bond_release.py",
          "type": "blob",
          "size": 0.208984375,
          "content": "# -*-coding=utf-8-*-\n\n# @Time : 2018/12/20 0:20\n# @File : jisilu_call.py\nfrom datahub.jisilu import Jisilu\n\n\ndef main():\n    obj = Jisilu(remote='qq')\n    obj.release_data()\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "jisilu_daily.py",
          "type": "blob",
          "size": 0.28125,
          "content": "# -*-coding=utf-8-*-\n\n# @Time : 2018/12/20 0:25\n# @File : jisilu_current.py\nfrom datahub.jisilu import Jisilu\nimport fire\n\ndef run(remote='qq'):\n    obj = Jisilu(remote=remote)\n    obj.daily_update()\n\nif __name__ == '__main__':\n    fire.Fire(run)\n\n# shell :\n# python jisilu.py --remote=qq"
        },
        {
          "name": "jubi.py",
          "type": "blob",
          "size": 7.8681640625,
          "content": "# -*-coding=utf-8-*-\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\n\n## python2代码，网站已经停止更新\nimport random\nimport hashlib\nimport hmac, time\nimport smtplib\nfrom email.mime.text import MIMEText\nfrom email import Utils\nimport threading\nimport requests, itchat\n\nfrom toolkit import Toolkit\n\n\nclass Jubi_web():\n    def __init__(self, send=None):\n        cfg = Toolkit.getUserData('data.cfg')\n        self.public_key = cfg['public_key']\n        self.private_key = cfg['private_key']\n        self.send = send\n        from_mail = cfg['from_mail']\n        password = cfg['password']\n        to_mail = cfg['to_mail']\n        smtp_server = 'smtp.qq.com'\n\n        self.server = smtp_server\n        self.username = from_mail.split(\"@\")[0]\n        self.from_mail = from_mail\n        self.password = password\n        self.to_mail = to_mail\n        self.coin_list = ['IFC', 'DOGE', 'EAC', 'DNC', 'MET', 'ZET', 'SKT', 'YTC', 'PLC', 'LKC',\n                          'JBC', 'MRYC', 'GOOC', 'QEC', 'PEB', 'XRP', 'NXT', 'WDC', 'MAX', 'ZCC',\n                          'HLB', 'RSS', 'PGC', 'RIO', 'XAS', 'TFC', 'BLK', 'FZ', 'ANS', 'XPM', 'VTC',\n                          'KTC', 'VRC', 'XSGS', 'LSK', 'PPC', 'ETC', 'GAME', 'LTC', 'ETH', 'BTC']\n        # 初始化邮箱设置读取需要股票信息\n        # 这样子只登陆一次\n        if self.send == 'msn':\n\n            try:\n                self.smtp = smtplib.SMTP_SSL(port=465)\n                self.smtp.connect(self.server)\n                self.smtp.login(self.username, self.password)\n            except smtplib.SMTPException as e:\n                print(e)\n                return 0\n\n        if send == 'wechat':\n            self.w_name = 'wwwei'\n            self.w_name1 = 'aiweichuangyi'\n            itchat.auto_login(hotReload=True)\n            account = itchat.get_friends(self.w_name)\n            for i in account:\n                if i['PYQuanPin'] == self.w_name:\n                    self.toName = i['UserName']\n                    # print(self.toName)\n                if i['PYQuanPin'] == self.w_name1:\n                    self.toName1 = i['UserName']\n                    # print(self.toName)\n\n    def send_wechat(self, name, content, user):\n        w_content = name + ' ' + content\n        itchat.send(w_content, toUserName=user)\n        time.sleep(1)\n        itchat.send(w_content, toUserName='filehelper')\n\n    def send_text(self, name, content):\n\n        subject = '%s' % name\n        self.msg = MIMEText(content, 'plain', 'utf-8')\n        self.msg['to'] = self.to_mail\n        self.msg['from'] = self.from_mail\n        self.msg['Subject'] = subject\n        self.msg['Date'] = Utils.formatdate(localtime=1)\n        try:\n            self.smtp.sendmail(self.msg['from'], self.msg['to'], self.msg.as_string())\n            self.smtp.quit()\n            print(\"sent\")\n        except smtplib.SMTPException as e:\n            print(e)\n            return 0\n\n    def warming(self, coin, up_price, down_price, user):\n        url = 'https://www.jubi.com/api/v1/ticker/'\n        while 1:\n            time.sleep(5)\n            try:\n                data = requests.post(url, data={'coin': coin}).json()\n            except Exception as e:\n                print(e)\n                print(\"time out. Retry\")\n                time.sleep(15)\n                continue\n\n            current = float(data['last'])\n            if current >= up_price:\n                print(\"Up to \", up_price)\n                print(\"current price \", current)\n\n                if self.send == 'msn':\n                    self.send_text(coin, str(current))\n                if self.send == 'wechat':\n                    self.send_wechat(coin, str(current), user)\n\n                time.sleep(1200)\n            if current <= down_price:\n                print(\"Down to \", down_price)\n                print(\"current price \", current)\n                if self.send == 'msn':\n                    self.send_text(coin, str(current))\n                if self.send == 'wechat':\n                    self.send_wechat(coin, str(current), user)\n                time.sleep(1200)\n\n    # 上面的内容尽量不用修改。\n\n    def getContent(self):\n        url = 'https://www.jubi.com/api/v1/trade_list'\n        params_data = {'key': 'x', 'signature': 'x'}\n        s = requests.get(url=url, params=params_data)\n\n    def getHash(self, s):\n        m = hashlib.md5()\n        m.update(s)\n        return m.hexdigest()\n\n    def sha_convert(self, s):\n        return hashlib.sha256(self.getHash(s)).hexdigest()\n\n    def get_nonce(self):\n        lens = 12\n        return ''.join([str(random.randint(0, 9)) for i in range(lens)])\n\n    def get_signiture(self):\n        url = 'https://www.jubi.com/api/v1/ticker/'\n        coin = 'zet'\n        nonce = self.get_nonce()\n\n        # sha=self.sha_convert(private_key)\n        md5 = self.getHash(self.private_key)\n        message = 'nonce=' + nonce + '&' + 'key=' + self.public_key\n        # print(message)\n        signature = hmac.new(md5, message, digestmod=hashlib.sha256).digest()\n        # print(signature)\n\n        # req=requests.post(stock_url,data={'signature':signature,'key':public_key,'nonce':nonce,'coin':'zet'})\n        req = requests.post(url, data={'coin': coin})\n        print(req.status_code)\n        print(req.text)\n\n    def real_time_ticker(self, coin):\n        url = 'https://www.jubi.com/api/v1/ticker/'\n        try:\n            data = requests.post(url, data={'coin': coin}).json()\n            # print(data)\n        except Exception as e:\n            print(e)\n            data = None\n        return data\n\n    def real_time_depth(self, coin):\n        url = 'https://www.jubi.com/api/v1/depth/'\n        data = requests.post(url, data={'coin': coin}).json()\n        print(data)\n        data_bids = data['bids']\n        data_asks = data['asks']\n        print(\"bids\")\n        for i in data_bids:\n            print(i[0], )\n            print(' ', )\n            print(i[1])\n        print(\"asks\")\n        for j in data_asks:\n            print(j[0], )\n            print(' ', )\n            print(j[1])\n\n    def list_all_price(self):\n        for i in self.coin_list:\n            print(i, )\n            print(\" price: \", )\n            p = self.real_time_ticker(i.lower())\n            if p is not None:\n                print(p['last'])\n\n    def getOrder(self, coin):\n        url = 'https://www.jubi.com/api/v1/orders/'\n        try:\n            req = requests.get(url, params={'coin': coin})\n        except Exception as e:\n            print(e)\n\n        data = req.json()\n        return data\n\n    # recent 100 trade turn over\n    def turnover(self, coin):\n        i = coin.lower()\n        coins = Toolkit.getUserData('coins.csv')\n        total = long(coins[i])\n        p = self.getOrder(i)\n        print(p)\n        amount = 0.00\n        for j in p:\n            t = j['amount']\n            amount = float(t) + amount\n        # current=float(self.real_time_ticker(i)['last'])\n        turn_over = amount * 1.00 / total * 100\n\n        print(turn_over)\n\n    def multi_thread(self, coin_list, price_list, username):\n        thread_num = len(coin_list)\n        thread_list = []\n        for i in range(thread_num):\n            if username[i] == 0:\n                nameID = self.toName\n            if username[i] == 1:\n                nameID = self.toName1\n            t = threading.Thread(target=self.warming, args=(coin_list[i], price_list[i][0], price_list[i][1], nameID), )\n            thread_list.append(t)\n        for j in thread_list:\n            j.start()\n        for k in thread_list:\n            k.join()\n\n\nif __name__ == '__main__':\n    obj = Jubi_web(send='wechat')\n\n    # print(obj.get_signiture())\n    # print(obj.real_time_ticker('zet'))\n    # obj.real_time_depth('zet')\n    # obj.warming('zet',0.23,0.17)\n    # obj.list_all_price()\n    # obj.turnover('doge')\n    # print(obj.getOrder('zet'))\n\n    coin_list = ['zet', 'doge']\n    price_list = [[0.2, 0.11], [0.03, 0.02]]\n    # obj.warming('zet',0.24,0.16)\n    username = [0, 0]\n    obj.multi_thread(coin_list, price_list, username)\n"
        },
        {
          "name": "juejin",
          "type": "tree",
          "content": null
        },
        {
          "name": "k-line",
          "type": "tree",
          "content": null
        },
        {
          "name": "k_line.py",
          "type": "blob",
          "size": 7.7177734375,
          "content": "# -*-coding=utf-8-*-\n# 获取 不同形态的k线\nimport random\nimport time\nimport tushare as ts\nimport pandas as pd\nimport os, datetime, math\nimport numpy as np\nimport logging\nfrom configure.settings import DBSelector, MYSQL_HOST, MYSQL_PORT, MYSQL_USER, MYSQL_PASSWORD, REDIS_HOST\nimport redis\nfrom threading import Thread\nfrom common.BaseService import  BaseService\n\nDB = DBSelector()\nengine = DB.get_engine('history', 'qq')\nconn = ts.get_apis()\nMYSQL_DB = 'history'\ncursor = DB.get_mysql_conn(MYSQL_DB, 'qq').cursor()\n\n\n# pd.set_option('display.max_rows', None)\n\nclass Kline(BaseService):\n    def __init__(self):\n        super(Kline, self).__init__('log/kline.log')\n\n        path = os.path.join(os.getcwd(), 'data')\n        self.today_date = datetime.datetime.now().strftime('%Y-%m-%d')\n\n        if not os.path.exists(path):\n            os.mkdir(path)\n        os.chdir(path)\n\n    def store_base_data(self, target):\n        self.all_info = ts.get_stock_basics()\n        self.all_info = self.all_info.reset_index()\n        print(self.all_info)\n        if target == 'sql':\n            self.all_info.to_sql('tb_baseinfo', engine, if_exists='replace')\n\n        elif target == 'csv':\n            self.all_info.to_csv('baseInfo.csv')\n        else:\n            logging.info('sql or csv option. Not get right argument')\n\n    # 枚举每一个股票代码\n    def store_hist_data(self):\n        read_cmd = 'select * from tb_baseInfo;'\n        df = pd.read_sql(read_cmd, engine)\n        for i in range(len(df)):\n            code, name, start_date = df.loc[i]['code'], df.loc[i]['name'], df.loc[i]['timeToMarket']\n            self.get_hist_data(code, name, start_date)\n            # time.sleep(random.random())\n            print(code, name, start_date)\n\n    # 获取历史行情，前复权 ，使用bar函数，get_hist_data 经常会出错\n    def get_hist_data(self, code, name, start_data):\n        try:\n            start_data = datetime.datetime.strptime(str(start_data), '%Y%m%d').strftime('%Y-%m-%d')\n            df = ts.bar(code, conn=conn, start_date=start_data, adj='qfq')\n            print(df)\n        except Exception as e:\n            print(e)\n            return\n\n        df.insert(1, 'name', name)\n        df = df.reset_index()\n        try:\n            df.to_sql(code, engine, if_exists='append')\n        except Exception as e:\n            print(e)\n\n    def inital_data(self, target):\n        if target == 'sql':\n            self.today = pd.read_csv(self.today_date + '.csv', dtype={'code': np.str})\n            self.all = pd.read_csv('bases.csv', dtype={'code': np.str})\n\n    def _xiayingxian(self, row, ratio):\n        '''\n        下影线的逻辑 ratio 下影线的长度比例，数字越大，下影线越长\n        row: series类型\n        '''\n        open_p = float(row['open'])\n        # print(open_p)\n        closed = float(row['close'])\n        # print(closed)\n        low = float(row['low'])\n        # print(low)\n        high = float(row['high'])\n        p = min(closed, open_p)\n        try:\n            diff = (p - low) * 1.00 / (high - low)\n            diff = round(diff, 3)\n        except ZeroDivisionError:\n            diff = 0\n        if diff > ratio:\n            xiayinxian_engine = DB.get_engine('db_selection','qq')\n            date, code, name, ocupy_ration, standards = row['datetime'], row['code'], row['name'], diff, ratio\n            df = pd.DataFrame(\n                {'datetime': [date], 'code': [code], 'name': [name], 'ocupy_ration': [ocupy_ration],\n                 'standards': [standards]})\n            try:\n                df1 = pd.read_sql_table('xiayingxian', xiayinxian_engine, index_col='index')\n                df = pd.concat([df1, df])\n            except Exception as e:\n                print(e)\n                # return None\n\n            df = df.reset_index(drop=True)\n            df.to_sql('xiayingxian', xiayinxian_engine, if_exists='replace')\n            return row\n\n    def store_data_not(self):\n        df = self._xiayingxian()\n        df.to_csv('xiayinxian.csv')\n\n    # 把股票代码放入redis\n    def redis_init(self):\n        rds = redis.StrictRedis(REDIS_HOST, 6379, db=0)\n        rds_2 = redis.StrictRedis(REDIS_HOST, 6379, db=1)\n        for i in rds.keys():\n            d = dict({i: rds.get(i)})\n            rds_2.lpush('codes', d)\n\n    # 正确的模板\n    def get_hist_line(self, date):\n        print(\"Starting to capture\")\n        cmd = 'select * from `{}` where datetime = \\'{}\\''\n        r0 = redis.StrictRedis(REDIS_HOST, 6379, db=0)\n        for code in r0.keys():\n            try:\n                cursor.execute(cmd.format(code, date))\n            except Exception as e:\n                continue\n            data = cursor.fetchall()\n            #\n            try:\n                data_row = data[0]\n            except Exception as e:\n                continue\n            d = dict(zip(('datetime', 'code', 'name', 'open', 'close', 'high', 'low'), data_row[1:8]))\n            self._xiayingxian(d, 0.7)\n\n\n    # 把股票代码放到redis\n    def add_code_redis(self):\n        rds = redis.StrictRedis(REDIS_HOST, 6379, db=0)\n        rds_1 = redis.StrictRedis(REDIS_HOST, 6379, db=1)\n        df = ts.get_stock_basics()\n        df = df.reset_index()\n\n        # 清理数据库\n        if rds.dbsize() != 0:\n            rds.flushdb()\n        if rds_1.dbsize() != 0:\n            rds_1.flushdb()\n\n        for i in range(len(df)):\n            code, name, timeToMarket = df.loc[i]['code'], df.loc[i]['name'], df.loc[i]['timeToMarket']\n            # print(str(timeToMarket))\n            d = dict({code: ':'.join([name, str(timeToMarket)])})\n            # print(d)\n            rds.set(code, name)\n            rds_1.lpush('codes', d)\n\n\n\n\ndef get_hist_data(code, name, start_data):\n    try:\n        # start_data = datetime.datetime.strptime(str(start_data), '%Y%m%d').strftime('%Y-%m-%d')\n\n        df = ts.bar(code, conn=conn, start_date=start_data, adj='qfq')\n    except Exception as e:\n        print(e)\n        return\n    hist_con = DB.get_engine('history')\n    df.insert(1, 'name', name)\n    df = df.reset_index()\n    df2 = pd.read_sql_table(code, hist_con, index_col='index')\n\n    try:\n        new_df = pd.concat([df, df2])\n        new_df = new_df.reset_index(drop=True)\n        new_df.to_sql(code, engine, if_exists='replace')\n    except Exception as e:\n        print(e)\n        return\n\n\nclass StockThread(Thread):\n    def __init__(self, loop):\n        Thread.__init__(self)\n        self.rds = redis.StrictRedis(REDIS_HOST, 6379, db=1)\n        self.loop_count = loop\n\n    def run(self):\n        self.loops()\n\n    def loops(self):\n        # start_date = datetime.datetime.now().strftime('%Y-%m-%d')\n        start_date = '2017-11-21'\n\n        while 1:\n            try:\n                item = self.rds.lpop('codes')\n                print(item)\n            except Exception as e:\n                print(e)\n                break\n\n            d = eval(item)\n            k = d.keys()[0]\n            v = d[k]\n            name = v.split(':')[0].strip()\n            # start_date=v.split(':')[1].strip()\n\n            get_hist_data(k, name, start_date)\n\n\nTHREAD_NUM = 4\n\n\ndef StoreData():\n    threads = []\n    for i in range(THREAD_NUM):\n        t = StockThread(i)\n        t.start()\n        threads.append(t)\n\n    for j in range(THREAD_NUM):\n        threads[j].join()\n    print('done')\n\n\n# 能够正常运行的函数\ndef main():\n    obj = Kline()\n\n    # obj.get_hist_line('2017-11-17')\n\n    # obj.get_hist_line('2017-11-16')\n    # obj.get_hist_line('2017-11-15')\n    # obj.get_hist_line('2017-11-14')\n    # obj.get_hist_line('2017-11-13')\n\n    # 存储基本面的数据\n    # obj.store_base_data('sql')\n\n    # 获取股票的前复权数据, 使用bar函数\n    # obj.store_hist_data()\n    # 存放股票的代码和名字\n    # add_code_redis()\n    # obj.redis_init()\n    # 保存历史数据\n    # StoreData()\n\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "longhuban.py",
          "type": "blob",
          "size": 1.4921875,
          "content": "#-*-coding=utf-8-*-\n\nimport requests\nimport re\nimport json\ndef get_content(url,retry=5):\n\theaders = {'User-Agent':'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36'}\n\twhile retry >0:\n\t\ttry:\n\t\t\tr = requests.get(url,headers=headers)\n\t\t\tif r.status_code == 200 and len(r.text) >0:\n\t\t\t\treturn r.text\n\t\texcept Exception as e:\n\t\t\tprint(e)\n\t\t\tretry-=1\n\n\t\tif retry == 0 :\n\t\t\treturn None\n\ndef convert_json(url):\n\tcontent =  get_content(url)\n\tif content is None:\n\t\treturn\n\tlhb_date = []\n\ttry:\n\t\t# print(content)\n\t\tjs = re.findall(\"var dateList=(.*?);\",content,re.S)[0]\n\t\t# print(type(js))\n\t\tjs_data = json.loads(js)\n\t\tprint(js_data)\n\t\tlhb_date = js_data.get('data')\n\texcept Exception as e:\n\t\tprint(e)\n\t\treturn\n\ndef convert_json(url,pattern):\n\tcontent =  get_content(url)\n\tif content is None:\n\t\treturn\n\tlhb_date = []\n\ttry:\n\t\t# print(content)\n\t\tjs = re.findall(pattern,content,re.S)[0]\n\t\t# print(type(js))\n\t\tjs_data = json.loads(js)\n\t\t# print(js_data)\n\t\tlhb_date = js_data.get('data')\n\t\t# print(lhb_date)\n\t\treturn lhb_date\n\t\t# for i in lhb_date:\n\t\t\t# print(i)\n\n\texcept Exception as e:\n\t\tprint(e)\n\t\treturn\n\ndef get_result():\n\tcode='300333'\n\tdate='20180424'\n\t# lhb_list_url = 'http://stock.jrj.com.cn/action/lhb/getStockLhbDateList.jspa?vname=dateList&stockcode={}'.format(code)\n\trequestdetailURL=\"http://stock.jrj.com.cn/action/lhb/getStockLhbDetatil.jspa?vname=detailInfo&stockcode={}&date={}\".format(code,date)\n\treturn convert_json(requestdetailURL,'var detailInfo=(.*?);')"
        },
        {
          "name": "machine_learning",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitor",
          "type": "tree",
          "content": null
        },
        {
          "name": "new_stock_break.py",
          "type": "blob",
          "size": 4.740234375,
          "content": "# -*-coding=utf-8-*-\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\n# 分析新股的开板时机\nimport tushare as ts\nimport os\nimport matplotlib.pyplot as plt\n\nclass NewStockBreak():\n    def __init__(self,start_date=20170101,end_date=20170401):\n        #为了文件整齐，新建一个文件夹data用来专门存放数据\n        current = os.getcwd()\n        folder = os.path.join(current, 'new_stock')\n        if os.path.exists(folder) == False:\n            os.mkdir(folder)\n        os.chdir(folder)\n        #调用tushare接口，获取A股信息\n        df0=ts.get_stock_basics()\n        # df0=pd.read_csv('bases.csv',dtype={'code':np.str})\n        self.bases=df0.sort_values('timeToMarket',ascending=False)\n\n        #获取样本， 获取最近一个年的新股情况\n        self.cxg=self.bases[(self.bases['timeToMarket']>start_date) & (self.bases['timeToMarket']<end_date)]\n        # self.codes= self.cxg['code'].values 官方接口修改\n        self.codes = self.cxg.index.values\n\n    def calc_open_by_percent(self,code):\n        # 计算换手率\n        cont=100000000\n        #total_vol=self.bases[self.bases['code']==code]['totals'].values[0]\n        acutal_vol=self.bases.loc[code]['outstanding']\n        all_vol= acutal_vol*cont\n        df_k_data=ts.get_k_data(code)\n        i=1\n        found = False\n        df_k_data=df_k_data.sort_index(axis=0,ascending=True,by=['date'])\n        while i<365:\n            try:\n                s=df_k_data.iloc[i]\n\n            except IndexError:\n                print('single positional indexer is out-of-bounds')\n                break\n            except Exception as e:\n                print(e)\n                break\n            else:\n                if s['high']!=s['low']:\n                    found = True\n                    break\n                i=i+1\n        if found:\n            date_end=df_k_data.iloc[i]['date']\n            date_start=df_k_data.iloc[0]['date']\n            df3=df_k_data[(df_k_data['date']>=date_start) & (df_k_data['date']<=date_end)]\n            v_total_break=df3['volume'].sum()\n            day=len(df3)\n            rate=round(v_total_break*100*100.00/all_vol,2) #手和股 注意\n        else:\n            rate,day = 0,0\n        # 换手率与天数\n        return rate,day\n\n\n    def calc_open_day(self,code):\n        cont=100000000\n        #total_vol=self.bases[self.bases['code']==code]['totals'].values[0]\n        acutal_vol=self.bases[self.bases['code']==code]['outstanding'].values[0]\n        all_vol= acutal_vol*cont\n        #df= ts.get_hist_data(code)\n        df1=ts.get_k_data(code)\n        if len(df1)<3:\n            return None\n        #print(df1.info())\n        #df1=df.reset_index()\n        #print(df1)\n        start=df1['date'].values[0]\n        print('Start day:', start)\n        df2= df1[(df1['close']==df1['low']) & (df1['high']==df1['low'])]\n        print(self.bases[self.bases['code']==code]['name'].values[0])\n        end=df2['date'].values[-1]\n        print(\"Break day\" , end)\n\n        df3=df1[(df1['date']>=start) & (df1['date']<=end)]\n        v_total_break=df3['volume'].sum()\n        l=len(df3)\n        print(l)\n        print(v_total_break)\n        rate=v_total_break*100*100.00/all_vol #手和股 注意\n        print(round(rate,6))\n        return rate,l\n\n    def testcase(self):\n        #self.calc_open_day('603096')\n        result=[]\n        max_line=[]\n        k=[]\n        for i in self.codes:\n            t,l=self.calc_open_day(i)\n            if t is not None:\n                result.append(t)\n                max_line.append({i:l})\n                k.append(l)\n        x=range(len(result))\n        #print(x)\n        #print(result)\n        plt.bar(x,result)\n        plt.show()\n        sum=0\n        for i in result:\n            sum=sum+i\n\n        avg=sum*1.00/len(result)\n        print(avg)\n        max_v=max(k)\n        print(max_v)\n        print(max_line)\n\n    def getData(self,filename):\n        result=[]\n        max_line=[]\n        k=[]\n        for i in self.codes:\n            print(f'正处理{i}')\n            name=self.bases.loc[i]['name']\n            rate,day=self.calc_open_by_percent(i)\n            if rate:\n                result.append(rate)\n                max_line.append([name,day,rate])\n                k.append(day)\n\n        #作图用的\n        #x=range(len(result))\n        #print(x)\n        #print(result)\n        #plt.bar(x,result)\n        #lt.show()\n\n        with open(filename,'w') as f:\n            for x in max_line:\n                #f.write(';'.join(x))\n                f.write(x[0])\n                f.write(';')\n                f.write(str(x[1]))\n                f.write(';')\n                f.write(str(x[2]))\n                f.write('\\n')\n\n\ndef main():\n    obj=NewStockBreak(start_date=20200101,end_date=20200701)\n    obj.getData('cxg.txt')\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "new_stock_fund.py",
          "type": "blob",
          "size": 2.6376953125,
          "content": "# -*- coding: utf-8 -*-\n# website: http://30daydo.com\n# @Time : 2019/10/24 0:03\n# @File : new_stock_fund.py\n\n# 获取打新基金数据\nimport requests\nimport time\nfrom selenium import webdriver\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom selenium.common.exceptions import TimeoutException\nfrom selenium.webdriver.common.keys import Keys\nfrom selenium.webdriver.common.by import By\nimport logging\nfrom scrapy.selector import Selector\n\nlogger = logging.getLogger()\nPATH = r'C:\\OneDrive\\Python\\selenium\\chromedriver.exe'\n\nclass TianTianFund():\n    def __init__(self):\n\n        # 未上市\n\n        self.wss_url='http://fund.eastmoney.com/data/dxgjj_xgccjjyl.html#wss;SUMPLACE;desc;1'\n        options = webdriver.ChromeOptions()\n        options.add_argument(\n            '--user-agent=Mozilla/5.0 (Windows NT 999999.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36')\n\n        self.driver = webdriver.Chrome(executable_path=PATH,\n                                  chrome_options=options)\n\n    def get_fund(self):\n        self.driver.get(self.wss_url)\n        time.sleep(5)\n        text=self.driver.page_source\n        response = Selector(text=text)\n        nodes = response.xpath('//tbody[@id=\"datalistwss_body\"]/tr')\n\n        for node in nodes:\n            code = node.xpath('.//td[2]/a/text()').extract_first()\n            name = node.xpath('.//td[3]/a/text()').extract_first()\n            hit_count = node.xpath('.//td[6]/a[1]/text()').extract_first()\n            fund_url = node.xpath('.//td[6]/a[1]/@href').extract_first()\n            full_url = 'http://fund.eastmoney.com/data/'+fund_url\n            new_stock_amount = node.xpath('.//td[6]/text()').extract_first()\n            self.driver.get(fund_url)\n            time.sleep(5)\n            sub_response = Selector(text=self.driver.page_source)\n            sub_nodes = sub_response.xpath('//tbody[@id=\"datalist_body\"]/tr')\n\n            new_stock_list = []\n            for sub_node in sub_nodes:\n                d={}\n                stock_code = sub_node.xpath('.//td[2]/a/text()').extract_first()\n                stock_name = sub_node.xpath('.//td[3]/a/text()').extract_first()\n                assign_mount = sub_node.xpath('.//td[9]/text()').extract_first()\n                d['新股代码']=stock_code\n                d['新股名称']=stock_name\n                d['中的金额-万元']=assign_mount\n                new_stock_list.append(d)\n\n            print(new_stock_list)\n\n\n\n\n\n    def start(self):\n        self.get_fund()\n\n        self.driver.close()\n\n\nif __name__=='__main__':\n    fund = TianTianFund()\n    fund.start()"
        },
        {
          "name": "pledged_validation.py",
          "type": "blob",
          "size": 1.99609375,
          "content": "#-*-coding=utf-8-*-\nimport json\nimport tushare as ts\nimport pandas as pd\nfrom configure.settings import get_engine\nimport matplotlib.pyplot as plt\n\n# 股权质押数据整理\n\nwith open('codes.txt','r') as f:\n\t# s= f.read()\n\tcodes=json.load(f)\n\nstocks=codes.get('example1')\nengine=get_engine('db_stock')\n\n# for key in codes.get('example1').keys():\n\t# print(key, codes.get('example1').get(key))\n# df1=pd.DataFrame()\ndef pledge_info():\n\tdf=ts.stock_pledged()\n\tdf.to_sql('tb_pledged_base',engine,if_exists='replace')\n\n\tdf_list=[]\n\n\tfor stock in stocks:\n\t\tdf_list.append(df[df['code']==stock])\n\n\tdf=pd.concat(df_list)\n\t# print(df)\n\tdf=df.reset_index(drop=True)\n\t# print(df)\n\tdf= df.sort_values('p_ratio',ascending=False)\n\tdf['code']=df['code'].astype('str')\n\tdf['rest_ratio']=df['rest_pledged']/df['totals']*100\n\tdf['rest_ratio']=map(lambda x:round(x,2),df['rest_ratio'])\n\tdf['unrest_ratio']=df['unrest_pledged']/df['totals']*100\n\tdf['unrest_ratio']=map(lambda x:round(x,2),df['unrest_ratio'])\n\n\t# print(df.info())\n\t# print(df)\n\t# print(df.sort_values('deals',ascending=False))\n\t# df.to_csv('pledge_my_stock.csv')\n\ndef pledged_detail():\n\tdf=ts.pledged_detail()\n\tprint(df.tail(10))\n\t# for stock in stocks:\n\t# \tif len(df[df['code']==stock])!=0:\n\t# \t\tprint(df[df['code']==stock])\n\t# df.to_csv('pledge_all_stock.csv')\n\tdf.to_sql('tb_pledged_detail',engine)\n\ndef do_calculation():\n\tdf=pd.read_sql('tb_pledged_base',engine,index_col='index')\n\t# print(df)\n\t# df['unrest_ratio']=df['unrest_pledged']/df['totals']*100\n\t# df['rest_ratio']=df['rest_pledged']/df['totals']*100\n\t# df['unrest_ratio']=map(lambda x:round(x,2),df['unrest_ratio'])\n\t# df['rest_ratio']=map(lambda x:round(x,2),df['rest_ratio'])\n\t# df.to_sql('tb_pledged_base',engine,if_exists='replace')\n\tprint('median ',df['p_ratio'].median())\n\tprint('mean ',df['p_ratio'].mean())\n\tprint('std ',df['p_ratio'].std())\n\tprint('var ',df['p_ratio'].var())\n\tplt.figure()\n\tplt.hist(df['p_ratio'],20)\n\t# plt.hist(df['p_ratio'],10,normed=True)\n\tplt.show()\n\n# pledge_info()\n# pledged_detail()\ndo_calculation()"
        },
        {
          "name": "plot_line.py",
          "type": "blob",
          "size": 3.990234375,
          "content": "# -*-coding=utf-8-*-\nimport datetime\nimport os\nimport random\nimport time\nfrom optparse import OptionParser\n\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\n\nimport pandas as pd\nimport talib\nimport tushare as ts\nimport matplotlib as mpl\nfrom mpl_finance import candlestick2_ochl, volume_overlay\nimport matplotlib.pyplot as plt\nfrom configure.settings import DBSelector\nimport sys\n\nif sys.platform=='linux':\n    # centos的配置, 根据自定义拷贝的字体\n    mpl.rcParams['font.sans-serif'] = ['Microsoft YaHei']\nelse:\n    mpl.rcParams['font.sans-serif'] = ['simhei']\n\n\nmpl.rcParams['axes.unicode_minus'] = False\n\n\n\ndef get_basic_info():\n    DB = DBSelector()\n    engine = DB.get_engine('db_stock', 'qq')\n    base_info = pd.read_sql('tb_basic_info', engine, index_col='index')\n    return base_info\n\ndef check_path(root_path,current,filename):\n    folder_path = os.path.join(root_path, current)\n    if not os.path.exists(folder_path):\n        os.mkdir(folder_path)\n    full_path = os.path.join(folder_path, filename)\n\n    if os.path.exists(full_path):\n        return None\n    else:\n        return full_path\n\ndef plot_stock_line(api,code, name, table_type, current, root_path,start='2019-10-01', save=False):\n\n    title = '{}_{}_{}_{}'.format(current, code, name, table_type).replace('*', '_')\n    filename = title + '.png'\n    full_path = check_path(root_path,current,filename)\n    if full_path is None:\n        return\n\n    base_info = get_basic_info()\n    if code is None and name is not None:\n        code = base_info[base_info['name'] == name]['code'].values[0]\n\n    df = None\n    for _ in range(4):\n\n        try:\n            df = ts.bar(code, conn=api, start_date=start)\n\n        except Exception as e:\n            ts.close_apis(api)\n            time.sleep(random.random() * 30)\n            api = ts.get_apis()\n\n        else:\n            break\n\n    if df is None:\n        return\n\n    df = df.sort_index()\n\n    if name is None:\n        name = base_info[base_info['code'] == code]['name'].values[0]\n\n    df = df.reset_index()\n    df['datetime'] = df['datetime'].dt.strftime('%Y-%m-%d')\n    sma5 = talib.SMA(df['close'].values, 5)\n    sma20 = talib.SMA(df['close'].values, 10)\n    # ax.set_xticks(range(0,len(df),20))\n    # # ax.set_xticklabels(df['date'][::5])\n    # ax.set_xticklabels(df['datetime'][::20])\n    fig = plt.figure(figsize=(10, 8))\n    # fig,(ax,ax2)=plt.subplots(2,1,sharex=True,figsize=(16,10))\n    ax = fig.add_axes([0, 0.3, 1, 0.50])\n    ax2 = fig.add_axes([0, 0.1, 1, 0.20])\n\n    candlestick2_ochl(ax, df['open'], df['close'], df['high'], df['low'], width=1, colorup='r', colordown='g',\n                      alpha=0.6)\n    ax.grid(True)\n    ax.set_title(title)\n    ax.plot(sma5, label='MA5')\n    ax.legend()\n    ax.plot(sma20, label='MA20')\n    ax.legend(loc=2)\n    ax.grid(True)\n    # df['vol'].plot(kind='bar')\n    volume_overlay(ax2, df['open'], df['close'], df['vol'], width=0.75, alpha=0.8, colordown='g', colorup='r')\n    ax2.set_xticks(range(0, len(df), 20))\n    # ax.set_xticklabels(df['date'][::5])\n    ax2.set_xticklabels(df['datetime'][::20])\n    plt.setp(ax2.get_xticklabels(), rotation=30, horizontalalignment='right')\n    ax2.grid(True)\n    plt.subplots_adjust(hspace=0.3)\n\n    if save:\n        # path = os.path.join(os.path.dirname(__file__),'data',TODAY)\n        fig.savefig(full_path)\n    else:\n        plt.show()\n\n    plt.close()\n\n\n\nif __name__ == '__main__':\n    parser = OptionParser()\n    parser.add_option(\"-c\", \"--code\",\n                      dest=\"code\",\n                      help=\"-c 300141 #using code to find security\")\n    parser.add_option(\"-n\", \"--name\",\n                      dest=\"name\",\n                      help=\"-n  和顺电气 #using code to find security\")\n\n    (options, args) = parser.parse_args()\n\n    if len((sys.argv)) >= 2:\n        code = options.code\n        name = options.name\n        name = name.decode('utf-8')\n    else:\n        code = None\n        name = '泰永长征'\n    plot_stock_line(code=code, name=name, table_name='zdt', current='20180912', start='2018-02-01', save=False)\n"
        },
        {
          "name": "ptrade",
          "type": "tree",
          "content": null
        },
        {
          "name": "real_time_big_deal.py",
          "type": "blob",
          "size": 1.7587890625,
          "content": "# -*-coding=utf-8-*-\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\nimport datetime\nimport tushare as ts\nimport pandas as pd\nimport time,os,threading\nimport numpy as np\nfrom toolkit import Toolkit\npd.set_option('display.max_rows',None)\nclass BigMonitor():\n    def __init__(self):\n        path=os.path.join(os.getcwd(),'data')\n        if os.path.exists(path)==False:\n            os.mkdir(path)\n            print(\"Please put data under data folder\")\n            exit()\n        os.chdir(path)\n        self.stockList=Toolkit.read_stock('mystock.csv')\n        self.bases=pd.read_csv('bases.csv',dtype={'code':np.str})\n\n    def loop(self,code):\n        name=self.bases[self.bases['code']==code]['name'].values[0]\n        print(name)\n        while 1:\n            time.sleep(2)\n            df_t1=ts.get_realtime_quotes(code)\n            v1=long(df_t1['volume'].values[0])\n            p1=float(df_t1['price'].values[0])\n            #print(df_t1)\n            time.sleep(2)\n            df_t2=ts.get_realtime_quotes(code)\n            v2=long(df_t2['volume'].values[0])\n            p2=float(df_t2['price'].values[0])\n            delta_v= (v2-v1)/100\n            #换成手\n            #计算价差\n            price_v=p2-p1\n            if delta_v >1000:\n                print(datetime.datetime.now().strftime('%H:%M:%S'))\n                print(\"Big deal on %s\" %name,)\n                print(delta_v,'price diff',price_v)\n\n\n    def multi_thread(self,code_list):\n        thread_list=[]\n        for i in code_list:\n            t=threading.Thread(target=self.loop,args=(i,))\n            thread_list.append(t)\n\n        for j in thread_list:\n            j.start()\n\n\n    def testcase(self):\n        self.multi_thread(self.stockList)\n\ndef main():\n    obj=BigMonitor()\n    obj.testcase()\n\nmain()"
        },
        {
          "name": "recordMyChoice.py",
          "type": "blob",
          "size": 6.7421875,
          "content": "# -*-coding=utf-8-*-\n# 记录每天选股后的收益，用于跟踪每一只自选股\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\nimport datetime\nimport os\nimport xlrd\nimport time\nfrom xlutils.copy import copy\nimport tushare as ts\nfrom configure.settings import get_mysql_conn\nimport codecs\nfrom configure.settings import LLogger\n\nlogger=LLogger('recordMyChoice.log')\nclass Prediction_rate():\n\n    def __init__(self):\n        self.today_stock = ts.get_today_all()\n        now = datetime.datetime.now()\n        self.today = now.strftime(\"%Y-%m-%d\")\n        # weekday=now+datetime.timedelta(days=-2)\n        # weekday=weekday.strftime(\"%Y-%m-%d\")\n        # print(weekday)\n        # TODAY=now.strftime('%Y-%m-%d')\n        self.path = os.path.join(os.getcwd(), 'data')\n        self.filename = os.path.join(self.path, 'recordMyChoice.xls')\n\n    def stock_pool(self, stock_list):\n        pass\n\n    def first_record(self, stockID):\n        # stockID_list=['000673']\n\n        wb = xlrd.open_workbook(self.filename)\n        table = wb.sheets()[0]\n        nrow = table.nrows\n        ncol = table.ncols\n        print(\"%d*%d\" % (nrow, ncol))\n        row_start = nrow\n        wb_copy = copy(wb)\n        sheet = wb_copy.get_sheet(0)\n        # 调用 write 函数写入 info write(1,1,'Hello')\n\n        # content = []\n        mystock = self.today_stock[self.today_stock['code'] == stockID]\n        name = mystock['name'].values[0]\n        in_price = mystock['trade'].values[0]\n        current_price = in_price\n        profit = 0.0\n        content = [self.today, stockID, name, in_price, current_price, profit]\n\n        for i in range(len(content)):\n            sheet.write(row_start, i, content[i])\n\n        row_start = row_start + 1\n\n        wb_copy.save(self.filename)\n\n    def update(self):\n        # 对已有的进行更新\n        pass\n\n\n'''\n持股信息保存到Mysql数据库, 更新，删除\n'''\n\n\nclass StockRecord:\n\n    def __init__(self):\n        self.conn = get_mysql_conn('db_stock',local=True)\n        self.cur = self.conn.cursor()\n        self.table_name = 'tb_profit'\n        self.today = datetime.datetime.now().strftime('%Y-%m-%d')\n        # self.TODAY = '2018-04-13'\n\n    def holding_stock_sql(self):\n        path = os.path.join(os.path.dirname(__file__), 'data', 'mystock.csv')\n        if not os.path.exists(path):\n            return\n\n        create_table_cmd = 'CREATE TABLE IF NOT EXISTS `tb_profit` (`证券代码` CHAR (6),`证券名称` VARCHAR (16), `保本价` FLOAT,`股票余额` INT,`盈亏比例` FLOAT,`盈亏` FLOAT, `市值` FLOAT);'\n        try:\n            self.cur.execute(create_table_cmd)\n            self.conn.commit()\n        except Exception as e:\n            # print(e)\n            logger.log(e)\n            self.conn.rollback()\n        with codecs.open(path, 'r', encoding='utf-8') as f:\n            content = f.readlines()\n\n        for i in range(1, len(content)):\n            code, name, safe_price, count = content[i].strip().split(',')[:4]\n            print(code, name, safe_price, count)\n            insert_cmd = 'INSERT INTO `tb_profit`  (`证券代码`,`证券名称`,`保本价`,`股票余额`) VALUES(\\\"%s\\\",\\\"%s\\\",\\\"%s\\\",\\\"%s\\\");' % (\n            code.zfill(6), name, safe_price, count)\n            self._exe(insert_cmd)\n\n    def delete(self, content):\n        name = u\"证券名称\"\n        cmd = u\"DELETE FROM `{}` WHERE `{}` = \\\"{}\\\"\".format(self.table_name, name, content)\n        self._exe(cmd)\n\n    def insert(self, code, name, safe_price, count):\n        '''\n\n        :param code: 代码\n        :param name: 名称\n        :param safe_price: 保本价\n        :param count: 股票数目\n        :return: None\n        '''\n        insert_cmd = 'INSERT INTO `tb_profit`  (`证券代码`,`证券名称`,`保本价`,`股票余额`) VALUES(\\\"%s\\\",\\\"%s\\\",\\\"%s\\\",\\\"%s\\\");' % (\n        code.zfill(6), name, safe_price, count)\n        self._exe(insert_cmd)\n\n    # 执行mysql语句\n    def _exe(self, cmd):\n        try:\n            self.cur.execute(cmd)\n            self.conn.commit()\n        except Exception as e:\n            # print(e)\n            logger.log(e)\n            self.conn.rollback()\n\n        return self.cur\n\n    # 更新每天的盈亏情况\n    def update_daily(self):\n\n        add_cols = 'ALTER TABLE `{}` ADD `{}` FLOAT;'.format(self.table_name, self.today)\n        self._exe(add_cols)\n        # self.conn.commit()\n        api = ts.get_apis()\n        cmd = 'SELECT * FROM `{}`'.format(self.table_name)\n        cur = self._exe(cmd)\n        for i in cur.fetchall():\n            (code, name, safe_price, count, profit_ratio, profit, values, current_price,earn) = i[:9]\n            df = ts.quotes(code, conn=api)\n            current_price = round(float(df['price'].values[0]), 2)\n            values = current_price * count\n            last_close = df['last_close'].values[0]\n            earn = (current_price - last_close) * count\n            profit = (current_price - safe_price) * count\n            profit_ratio = round(float(current_price - safe_price) / safe_price * 100, 2)\n\n            update_cmd = 'UPDATE {} SET `盈亏比例`={} ,`盈亏`={}, `市值` ={}, `现价` = {},`{}`={} where `证券代码`= {};'.format(\n                self.table_name, profit_ratio, profit, values, current_price, self.today, earn,code)\n            # print(update_cmd)\n            self._exe(update_cmd)\n        ts.close_apis(api)\n\n    # 删除某行\n    def update_item(self, code, content):\n        cmd = 'UPDATE `{}` SET `保本价`={} where `证券代码`={};'.format(self.table_name, content, code)\n        self._exe(cmd)\n\n    def update_sold(self):\n        cur = self.conn.cursor()\n        tb_name = 'tb_sold_stock'\n        cur.execute('select * from {}'.format(tb_name))\n        content = cur.fetchall()\n        db_daily = get_mysql_conn('db_daily')\n        db_cursor=db_daily.cursor()\n        stock_table = datetime.datetime.now().strftime('%Y-%m-%d')\n        # stock_table = '2018-05-02'\n        for i in content:\n            cmd='select `trade` from `{}` where `code`=\\'{}\\''.format(stock_table,i[0])\n            print(cmd)\n            db_cursor.execute(cmd)\n            ret = db_cursor.fetchone()\n            sold_price = i[3]\n            percentange =round(float(ret[0]- sold_price)/sold_price*100,2)\n            update_cmd = 'update  `{}` set `当前价`={} ,`卖出后涨跌幅`= {} where `代码`=\\'{}\\''.format(tb_name,ret[0],percentange,i[0])\n            print(update_cmd)\n            cur.execute(update_cmd)\n            self.conn.commit()\n\nif __name__ == \"__main__\":\n\n    if ts.is_holiday(datetime.datetime.now().strftime('%Y-%m-%d')):\n        exit(0)\n    # obj=Prediction_rate()\n    # obj.first_recode()\n    # holding_stock_sql()\n    obj = StockRecord()\n    # obj.delete('深F120')\n    # obj.insert('300580','贝斯特',19.88,200)\n    obj.update_daily()\n    obj.update_sold()\n    # obj.update_item('300580',32.568)\n"
        },
        {
          "name": "relationship_case.py",
          "type": "blob",
          "size": 1.7626953125,
          "content": "#-*-coding=utf-8-*-\n\nimport tushare as ts\nfrom pandas import Series\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom pylab import mpl\n#mpl.rcParams['font.sans-serif'] = ['SimHei']\nmpl.rcParams['font.sans-serif'] = ['Microsoft YaHei']    # 指定默认字体：解决plot不能显示中文问题\nmpl.rcParams['axes.unicode_minus'] = False\n# 每个月的解禁股与大盘指数的关系\ndef ban_share(code,name):\n    conn =ts.get_apis()\n    year_2017 = [2629.218,3970.902,2083.032,1720.327,1999.456,1771.074,2417.082,2904.992,2910.946,2971.483,2350.122,3874.328]\n    df = ts.bar(code, conn=conn, freq='M', start_date='2016-12-30', end_date='2017-11-01', asset='INDEX')\n    series = df['close']\n    '''\n    diff_series=[]\n    print(series)\n    l = len(series)\n    for i in range(l-1):\n        print(series[i])\n        d= series[i]-series[i+1]\n        diff_series.append(d)\n    #print(len(diff_series))\n    '''\n\n    #s2=Series(series)\n    s2=series[:len(series)-1]\n    s3 = s2.sort_index(ascending=True)\n    #print(s3)\n    s1 = Series(year_2017[0:len(s3)])\n    s3=s3.reset_index(drop=True)\n    #print(s3)\n    #print(s1)\n    cor = s3.corr(s1)\n    #print(len(s3))\n    #print(len(s1))\n    print(cor)\n    plt.figure()\n    plt.subplot(2,1,1)\n    s1.plot()\n    plt.subplot(2,1,2)\n    s3.plot(title=name)\n    plt.show()\n\n    if abs(cor) >0.5:\n        print('Great factor: ',code)\n\ndef read_index():\n    df = pd.read_excel('data/index_data.xls')\n    df['index_data']=df['index_data'].apply(lambda x:str(x).zfill(6))\n    #print(df)\n    #df['index_data'].apply(lambda x:ban_share(x))\n    for i in range(len(df)):\n        code = df.loc[i]['index_data']\n        name =df.loc[i]['name']\n        ban_share(code,name)\ndef main():\n    read_index()\n    #ban_share('000001')\n    print('Done')\nmain()"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.126953125,
          "content": "easytrader\nloguru\nrsa\nredis\npypinyin\nsqlalchemy\npandas\ntushare\nakshare\nparsel\nloguru\nxlwt\neasyquotation\nloguru\nrsa\npymongo\npymysql"
        },
        {
          "name": "select_stock.py",
          "type": "blob",
          "size": 17.7158203125,
          "content": "# -*-coding=utf-8-*-\n# 适用 tushare 0.7.5\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\nimport tushare as ts\nimport pandas as pd\nimport os, datetime, time, Queue\nfrom toolkit import Toolkit\nfrom threading import Thread\n\nq = Queue.Queue()\n\n# 用来选股用的\npd.set_option('max_rows', None)\n\nfrom configure.settings import get_engine\nengine = get_engine('db_stock')\n# 缺陷： 暂时不能保存为excel\nclass filter_stock():\n    def __init__(self,retry=5,local=False):\n        if local:\n            for i in range(retry):\n                try:\n                    self.bases_save = ts.get_stock_basics()\n                    # print(self.bases_save)\n                    self.bases_save=self.bases_save.reset_index()\n                    self.bases_save.to_csv('bases.csv')\n                    self.bases_save.to_sql('bases',engine,if_exists='replace')\n                    if self.bases_save:\n                        break\n                \n                except Exception as e:\n                    if i>=4:\n                        self.bases_save=pd.DataFrame()\n                        exit()                        \n                    continue                  \n        \n        else:\n            self.bases_save = pd.read_sql('bases',engine,index_col='index')\n            self.base=self.bases_save\n\n        # 因为网速问题，手动从本地抓取\n        self.today = time.strftime(\"%Y-%m-%d\", time.localtime())\n        # self.base = pd.read_csv('bases.csv', dtype={'code': np.str})\n        self.all_code = self.base['code'].values\n        self.working_count = 0\n        self.mystocklist = Toolkit.read_stock('mystock.csv')\n\n    # 保存为excel 文件 这个时候csv 乱码,excel正常.\n    def save_data_excel(self):\n        df = ts.get_stock_basics()\n\n        df.to_csv(self.today + '.csv', encoding='gbk')\n        df_x = pd.read_csv(self.today + '.csv', encoding='gbk')\n        df_x.to_excel(self.today + '.xls', encoding='gbk')\n        os.remove(self.today + '.csv')\n\n    def insert_garbe(self):\n        print('*' * 30)\n        print('\\n')\n\n    def showInfo(self, df):\n        print('*' * 30)\n        print('\\n')\n        print(df.info())\n        print('*' * 30)\n        print('\\n')\n        print(df.dtypes)\n        self.insert_garbe()\n        print(df.describe())\n\n    # 计算每个地区有多少上市公司\n    def count_area(self, writeable=False):\n        count = self.base['area'].value_counts()\n        print(count)\n        print(type(count))\n        if writeable:\n            count.to_csv('各省的上市公司数目.csv')\n        return count\n\n    # 显示你要的某个省的上市公司\n    def get_area(self, area, writeable=False):\n        user_area = self.base[self.base['area'] == area]\n        user_area.sort_values('timeToMarket', inplace=True, ascending=False)\n        if writeable:\n            filename = area + '.csv'\n            user_area.to_csv(filename)\n        return user_area\n\n    # 获取所有地区的分类个股\n    def get_all_location(self):\n        series = self.count_area()\n        index = series.index\n        for i in index:\n            name = unicode(i)\n            self.get_area(name, writeable=True)\n\n    # 找出指定日期后的次新股\n    def fetch_new_ipo(self, start_time, writeable=False):\n        # 需要继续转化为日期类型\n\n        df = self.base.loc[self.base['timeToMarket'] > start_time]\n        df.sort_values('timeToMarket', inplace=True, ascending=False)\n        if writeable == True:\n            df.to_csv(\"New_IPO.csv\")\n        # sum_a=df['pe'].sum()\n\n        pe_av = df[df['pe'] != 0]['pe'].mean()\n        pe_all_av = self.base[self.base['pe'] != 0]['pe'].mean()\n        print(u\"平均市盈率为 \", pe_av)\n        print('A股的平均市盈率为 ', pe_all_av)\n        return df\n\n    # 获取成分股\n    def get_chengfenggu(self, writeable=False):\n        s50 = ts.get_sz50s()\n        if writeable == True:\n            s50.to_excel('sz50.xls')\n        list_s50 = s50['code'].values.tolist()\n        # print(type(s50))\n        # print(type(list_s50))\n        # 返回list类型\n        return list_s50\n\n    # 计算一个票从最高位到目前 下跌多少 计算跌幅\n    def drop_down_from_high(self, start, code):\n\n        end_day = datetime.date(datetime.date.today().year, datetime.date.today().month, datetime.date.today().day)\n        end_day = end_day.strftime(\"%Y-%m-%d\")\n        # print(e)nd_day\n        # print(start)\n        total = ts.get_k_data(code=code, start=start, end=end_day)\n        # print(total)\n        high = total['high'].max()\n        high_day = total.loc[total['high'] == high]['date'].values[0]\n\n        print(high)\n        print(high_day)\n        current = total['close'].values[-1]\n        print(current)\n        percent = round((current - high) / high * 100, 2)\n        print(percent)\n        return percent\n\n    def loop_each_cixin(self):\n        df = self.fetch_new_ipo(20170101, writeable=False)\n        all_code = df['code'].values\n        print(all_code)\n        # exit()\n        percents = []\n        for each in all_code:\n            print(each)\n            # print(type(each))\n            percent = self.drop_down_from_high('2017-01-01', each)\n            percents.append(percent)\n\n        df['Drop_Down'] = percents\n\n        # print(df)\n\n        df.sort_values('Drop_Down', ascending=True, inplace=True)\n        # print(df)\n        df.to_csv(self.today + '_drop_Down_cixin.csv')\n\n    # 获取所有的ma5>ma10\n    def macd(self):\n        # df=self.fetch_new_ipo(writeable=True)\n        # all_code=df['code'].values\n        # all_code=self.get_all_code()\n        # print(all_code)\n        result = []\n        for each_code in self.all_code:\n            print(each_code)\n            try:\n                df_x = ts.get_k_data(code=each_code, start='2017-03-01')\n            # 只找最近一个月的，所以no item的是停牌。\n            except:\n                print(\"Can't get k_data\")\n                continue\n            if len(df_x) < 11:\n                # return\n                print(\"no item\")\n                continue\n            ma5 = df_x['close'][-5:].mean()\n            ma10 = df_x['close'][-10:].mean()\n            if ma5 > ma10:\n                # print(\"m5>m10: \",each_code,\" \",self.base[self.base['code']==each_code]['name'].values[0], \"ma5: \",ma5,' m10: ',ma10)\n                temp = [each_code, self.base[self.base['code'] == each_code]['name'].values[0]]\n                print(temp)\n                result.append(temp)\n        print(result)\n        print(\"Done\")\n        return result\n\n    # 返回所有股票的代码\n    def get_all_code(self):\n        return self.all_code\n\n    # 获取成交量的ma5 或者10\n    def volume_calculate(self, codes):\n        delta_day = 180 * 7 / 5\n        end_day = datetime.date(datetime.date.today().year, datetime.date.today().month, datetime.date.today().day)\n        start_day = end_day - datetime.timedelta(delta_day)\n\n        start_day = start_day.strftime(\"%Y-%m-%d\")\n        end_day = end_day.strftime(\"%Y-%m-%d\")\n        print(start_day)\n        print(end_day)\n        result_m5_large = []\n        result_m5_small = []\n        for each_code in codes:\n            # print(e)ach_code\n            try:\n                df = ts.get_k_data(each_code, start=start_day, end=end_day)\n                print(df)\n            except Exception as e:\n                print(\"Failed to get\")\n                print(e)\n                continue\n\n            if len(df) < 20:\n                # print(\"not long enough\")\n                continue\n            print(each_code)\n            all_mean = df['volume'].mean()\n            m5_volume_m = df['volume'][-5:].mean()\n            m10_volume_m = df['volume'][-10:].mean()\n            last_vol = df['volume'][-1]  # 这里会不会有问题？？？\n            # 在这里分几个分支，放量 180天均量的4倍\n            if m5_volume_m > (4.0 * all_mean):\n                print(\"m5 > m_all_avg \")\n                print(each_code,)\n                temp = self.base[self.base['code'] == each_code]['name'].values[0]\n                print(temp)\n                result_m5_large.append(each_code)\n\n            # 成交量萎缩\n            if last_vol < (m5_volume_m / 3.0):\n                result_m5_small.append(each_code)\n        return result_m5_large, result_m5_large\n\n    def turnover_check(self):\n        delta_day = 60 * 7 / 5\n        end_day = datetime.date(datetime.date.today().year, datetime.date.today().month, datetime.date.today().day)\n        start_day = end_day - datetime.timedelta(delta_day)\n\n        start_day = start_day.strftime(\"%Y-%m-%d\")\n        end_day = end_day.strftime(\"%Y-%m-%d\")\n        print(start_day)\n        print(end_day)\n        for each_code in self.all_code:\n            try:\n                df = ts.get_hist_data(code=each_code, start=start_day, end=end_day)\n            except:\n                print(\"Failed to get data\")\n                continue\n            mv5 = df['v_ma5'][-1]\n            mv20 = df['v_ma20'][-1]\n            mv_all = df['volume'].mean()\n\n\n    # 写入csv文件\n    def write_to_text(self):\n        print(\"On write\")\n        r = self.macd()\n        filename = self.today + \"-macd.csv\"\n        f = open(filename, 'w')\n        for i in r:\n            f.write(i[0])\n            f.write(',')\n            f.write(i[1])\n            f.write('\\n')\n        f.close()\n\n    def saveList(self, l, name):\n        f = open(self.today + name + '.csv', 'w')\n        if len(l) == 0:\n            return False\n        for i in l:\n            f.write(i)\n            f.write(',')\n            name = self.base[self.base['code'] == i]['name'].values[0]\n            f.write(name)\n            f.write('\\n')\n        f.close()\n        return True\n\n    # 读取自己的csv文件\n    def read_csv(self):\n        filename = self.today + \"-macd.csv\"\n        df = pd.read_csv(filename)\n        print(df)\n\n    # 持股从高点下跌幅度\n    def own_drop_down(self):\n        for i in self.mystocklist:\n            print(i)\n            self.drop_down_from_high(code=i, start='2017-01-01')\n            print('\\n')\n\n    # 持股跌破均线\n    def _break_line(self, codes, k_type):\n        delta_day = 60 * 7 / 5\n        end_day = datetime.date(datetime.date.today().year, datetime.date.today().month, datetime.date.today().day)\n        start_day = end_day - datetime.timedelta(delta_day)\n\n        start_day = start_day.strftime(\"%Y-%m-%d\")\n        end_day = end_day.strftime(\"%Y-%m-%d\")\n        print(start_day)\n        print(end_day)\n        all_break = []\n\n        for i in codes:\n            try:\n                df = ts.get_hist_data(code=i, start=start_day, end=end_day)\n                if len(df) == 0:\n                    continue\n            except Exception as e:\n                print(e)\n                continue\n            else:\n                self.working_count = self.working_count + 1\n                current = df['close'][0]\n                ma5 = df['ma5'][0]\n                ma10 = df['ma10'][0]\n                ma20 = df['ma20'][0]\n                ma_dict = {'5': ma5, '10': ma10, '20': ma20}\n                ma_x = ma_dict[k_type]\n                # print(ma_x)\n                if current < ma_x:\n                    print('破位')\n                    print(i, \" current: \", current)\n                    print(self.base[self.base['code'] == i]['name'].values[0], \" \")\n                    print(\"holding place: \", ma_x)\n                    print(\"Break MA\", k_type, \"\\n\")\n                    all_break.append(i)\n        return all_break\n\n    # 检查自己的持仓或者市场所有破位的\n    def break_line(self, code, k_type='20', writeable=False, mystock=False):\n\n        all_break = self._break_line(code, k_type)\n        l = len(all_break)\n        beaking_rate = l * 1.00 / self.working_count * 100\n        print(\"how many break: \", l)\n        print(\"break Line rate \", beaking_rate)\n        if mystock == False:\n            name = '_all_'\n        else:\n            name = '_my__'\n        if writeable:\n            f = open(self.today + name + 'break_line_' + k_type + '.csv', 'w')\n            f.write(\"Breaking rate: %f\\n\\n\" % beaking_rate)\n            f.write('\\n'.join(all_break))\n            f.close()\n\n    def _break_line_thread(self, codes, k_type='5'):\n        delta_day = 60 * 7 / 5\n        end_day = datetime.date(datetime.date.today().year, datetime.date.today().month, datetime.date.today().day)\n        start_day = end_day - datetime.timedelta(delta_day)\n\n        start_day = start_day.strftime(\"%Y-%m-%d\")\n        end_day = end_day.strftime(\"%Y-%m-%d\")\n        print(start_day)\n        print(end_day)\n        all_break = []\n        for i in codes:\n            try:\n                df = ts.get_hist_data(code=i, start=start_day, end=end_day)\n                if len(df) == 0:\n                    continue\n            except Exception as e:\n                print(e)\n                continue\n            else:\n                self.working_count = self.working_count + 1\n                current = df['close'][0]\n                ma5 = df['ma5'][0]\n                ma10 = df['ma10'][0]\n                ma20 = df['ma20'][0]\n                ma_dict = {'5': ma5, '10': ma10, '20': ma20}\n                ma_x = ma_dict[k_type]\n                # print(ma_x)\n                if current > ma_x:\n                    print(i, \" current: \", current)\n                    print(self.base[self.base['code'] == i]['name'].values[0], \" \")\n\n                    print(\"Break MA\", k_type, \"\\n\")\n                    all_break.append(i)\n        q.put(all_break)\n\n    def multi_thread_break_line(self, ktype='20'):\n        total = len(self.all_code)\n        thread_num = 10\n        delta = total / thread_num\n        delta_left = total % thread_num\n        t = []\n        i = 0\n        for i in range(thread_num):\n            sub_code = self.all_code[i * delta:(i + 1) * delta]\n            t_temp = Thread(target=self._break_line_thread, args=(sub_code, ktype))\n            t.append(t_temp)\n        if delta_left != 0:\n            sub_code = self.all_code[i * delta:i * delta + delta_left]\n            t_temp = Thread(target=self._break_line_thread, args=(sub_code, ktype))\n            t.append(t_temp)\n\n        for i in range(len(t)):\n            t[i].start()\n\n        for j in range(len(t)):\n            t[j].join()\n        result = []\n        print(\"working done\")\n        while not q.empty():\n            result.append(q.get())\n        ff = open(self.today + '_high_m%s.csv' % ktype, 'w')\n        for kk in result:\n            print(kk)\n            for k in kk:\n                ff.write(k)\n                ff.write(',')\n                ff.write(self.base[self.base['code'] == k]['name'].values[0])\n                ff.write('\\n')\n\n        ff.close()\n\n        # 计算大盘的相关系，看关系如何\n\n    def relation(self):\n        sh_index = ts.get_k_data('000001', index=True, start='2012-01-01')\n        sh = sh_index['close'].values\n        print(sh)\n        vol_close = sh_index.corr()\n        print(vol_close)\n        '''\n        sz_index=ts.get_k_data('399001',index=True)\n        sz=sz_index['close'].values\n        print(sz)\n\n        cy_index=ts.get_k_data('399006',index=True)\n        s1=Series(sh)\n        s2=Series(sz)\n        print(s1.corr(s2))\n        '''\n\n    # 寻找业绩两年未负的，以防要st\n    def profit(self):\n        df_2016 = ts.get_report_data(2016, 4)\n\n        # 第四季度就是年报\n        # df= df.sort_values('profits_yoy',ascending=False)\n        # df.to_excel('profit.xls')\n        df_2015 = ts.get_report_data(2015, 4)\n        df_2016.to_excel('2016_report.xls')\n        df_2015.to_excel('2015_report.xls')\n        code_2015_lost = df_2015[df_2015['net_profits'] < 0]['code'].values\n        code_2016_lost = df_2016[df_2016['net_profits'] < 0]['code'].values\n\n        print(code_2015_lost)\n        print(code_2016_lost)\n        two_year_lost = []\n        # two_year_lost_name=[]\n        for i in code_2015_lost:\n            if i in code_2016_lost:\n                print(i,)\n                # name=self.base[self.base['code']==i].values[0]\n                two_year_lost.append(i)\n\n        self.saveList(two_year_lost, 'st_dangours.csv')\n\n        # df_2014=ts.get_report_data(2014,4)\n\n    def mydaily_check(self):\n        self.break_line(self.mystocklist, k_type='5', writeable=True, mystock=True)\n\n    def all_stock(self):\n        self.multi_thread_break_line('20')\n\n#破净资产的股票\ndef get_break_bvps():\n    base_info = ts.get_stock_basics()\n    current_prices = ts.get_today_all()\n\n\n    current_prices[current_prices['code'] == '000625']['trade'].values[0]\n    base_info.loc['000625']['bvps']\n\ndef main():\n    folder = os.path.join(os.path.dirname(__file__), 'data')\n    if os.path.exists(folder) == False:\n        os.mkdir(folder)\n    os.chdir(folder)\n\n    obj = filter_stock(local=True)\n    # 留下来的函数都是有用的\n    # obj.count_area(writeable=True)\n    # df=obj.get_area('广东',writeable=True)\n    # obj.showInfo(df)\n    # df=obj.get_area('深圳',writeable=True)\n    # obj.showInfo(df)\n    # obj.get_all_location()\n    # obj.fetch_new_ipo(20170101,writeable=False)\n\n    # obj.drop_down_from_high('2017-01-01','300580')\n    # obj.loop_each_cixin()\n\n    # df=obj.get_all_code()\n    # result=obj.volume_calculate(df)\n    # obj.saveList(result)\n\n    # df=obj.get_chengfenggu()\n    # large,small=obj.volume_calculate(df)\n    # obj.saveList(large,'large')\n    # obj.saveList(small,'small')\n    # obj.write_to_text()\n    # obj.read_csv()\n    # obj.own_drop_down()\n    # obj.volume_calculate()\n    # obj.break_line()\n    # obj.save_data_excel()\n    # obj.break_line(mine=False,k_type='5')\n    # obj.multi_thread()\n    # code=obj.get_chengfenggu()\n    # obj.break_line(code)\n    # obj.big_deal('603918',400,'2017-04-22')\n    # obj.current_day_ticks()\n    # obj.relation()\n    # obj.profit()\n\n    # obj.mydaily_check()\n    # obj.all_stock()\n\n\nif __name__ == \"__main__\":\n    start_time = datetime.datetime.now()\n    print(start_time)\n    main()\n    end_time = datetime.datetime.now()\n    print(end_time)\n    print(\"time use : \", (end_time - start_time).seconds)\n"
        },
        {
          "name": "shareholder_info.py",
          "type": "blob",
          "size": 3.9609375,
          "content": "# -*- coding: utf-8 -*-\n# @Time : 2019/1/19 14:37\n# @File : stockholder_info.py\n# 股东信息获取\nimport re\nimport sys\nimport pandas as pd\nimport time\nimport traceback\nfrom configure.settings import DBSelector\nfrom common.Base import pro\nimport json\n\n\nclass ShareHolderInfo():\n    '''\n    十大股东与十大流通股东\n    '''\n    def __init__(self):\n        self.init_mongo()\n        self.tushare_init()\n\n    def db_init(self):\n        self.conn = DBSelector().get_mysql_conn('db_stock')\n        self.cursor = self.conn.cursor()\n\n    def init_mongo(self):\n        self.client = DBSelector().mongo('qq')\n        self.doc_holder = self.client['db_stock']['shareHolder']  # 十大\n        self.doc_holder_float = self.client['db_stock']['shareHolder_float']  # 十大\n\n    def tushare_init(self):\n        self.pro = pro\n\n    def exists(self, code):\n        result = self.doc_holder.find_one({'ts_code': code})\n        return False if result is None else True\n\n    def get_stock_list(self, exchange):\n        df = self.pro.stock_basic(exchange=exchange, list_status='L')\n        return dict(zip(list(df['ts_code'].values), list(df['name'].values)))\n\n    # 生产日期 2000到2018\n    @staticmethod\n    def create_date():\n        start_date = '20{}0101'\n        end_date = '20{}1231'\n        date_list = []\n        for i in range(18, 0, -1):\n            print(start_date.format(str(i).zfill(2)))\n            print(end_date.format(str(i).zfill(2)))\n            date_list.append(i)\n        return date_list\n\n    # 十大和十大流通\n    def get_stockholder(self, code, start, end):\n        '''\n        stockholder 十大\n        stockfloat 十大流通\n        '''\n        try:\n            stockholder = self.pro.top10_holders(ts_code=code, start_date=start, end_date=end)\n            # time.sleep(1)\n            stockfloat = self.pro.top10_floatholders(ts_code=code, start_date=start, end_date=end)\n            # time.sleep(1)\n\n        except Exception as e:\n            print(e)\n            time.sleep(10)\n            # ts.set_token(config['ts_token'])\n            self.pro = pro\n            stockholder = self.pro.top10_holders(ts_code=code, start_date=start, end_date=end)\n            # time.sleep(1)\n            stockfloat = self.pro.top10_floatholders(ts_code=code, start_date=start, end_date=end)\n            # time.sleep(1)\n        else:\n            if stockholder.empty or stockfloat.empty:\n                print('有空数据----> ', code)\n                return pd.DataFrame(), pd.DataFrame()\n\n            else:\n                return stockholder, stockfloat\n\n    def dumpMongo(self, doc, df):\n        record_list = df.to_json(orient='records', force_ascii=False)\n        record_list = json.loads(record_list)\n        if len(record_list)==0:\n            return\n        try:\n            doc.insert_many(record_list)\n        except Exception as e:\n            exc_type, exc_value, exc_obj = sys.exc_info()\n            traceback.print_exc()\n\n    def valid_code(self, code):\n        return True if re.search('^\\d{6}\\.\\S{2}', code) else False\n\n    def run(self):\n        start_date = '20{}0101'\n        end_date = '20{}1231'\n        exchange_list = ['SSE', 'SZSE']\n        for ex in exchange_list:\n            code_dict = self.get_stock_list(ex)\n            for code, name in code_dict.items():\n                # for i in range(20, 0, -1):\n                i = 21\n                if not self.valid_code(code):\n                    print('invalid code ', code)\n                    continue\n\n                if self.exists(code):\n                    continue\n\n                print('crawling -->', code)\n\n                start = start_date.format(str(i).zfill(2))\n                end = end_date.format(str(i).zfill(2))\n                df_holding, df_float = self.get_stockholder(code, start, end)\n                self.dumpMongo(self.doc_holder, df_holding)\n                self.dumpMongo(self.doc_holder_float, df_float)\n                time.sleep(0.1)\n\n\ndef main():\n    app = ShareHolderInfo()\n    app.run()\n\n\nif __name__ == '__main__':\n    main()\n"
        },
        {
          "name": "snowball.py",
          "type": "blob",
          "size": 2.203125,
          "content": "# -*-coding=utf-8-*-\n#抓取雪球的收藏文章\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\nimport requests,cookielib,re,json,time\nfrom toolkit import Toolkit\nfrom lxml import etree\nurl='https://xueqiu.com/snowman/login'\nsession = requests.session()\n\nsession.cookies = cookielib.LWPCookieJar(filename=\"cookies\")\ntry:\n    session.cookies.load(ignore_discard=True)\nexcept:\n    print(\"Cookie can't load\")\n\nagent = 'Mozilla/5.0 (Windows NT 5.1; rv:33.0) Gecko/20100101 Firefox/33.0'\nheaders = {'Host': 'xueqiu.com',\n           'Referer': 'https://xueqiu.com/',\n           'Origin':'https://xueqiu.com',\n           'User-Agent': agent}\naccount=Toolkit.getUserData('data.cfg')\nprint(account['snowball_user'])\nprint(account['snowball_password'])\n\ndata={'username':account['snowball_user'],'password':account['snowball_password']}\ns=session.post(url,data=data,headers=headers)\nprint(s.status_code)\n#print(s.text)\nsession.cookies.save()\nfav_temp='https://xueqiu.com/favs?page=1'\ncollection=session.get(fav_temp,headers=headers)\nfav_content= collection.text\np=re.compile('\"maxPage\":(\\d+)')\nmaxPage=p.findall(fav_content)[0]\n#目前也只是第一页而已\nprint(maxPage)\nprint(type(maxPage))\nmaxPage=int(maxPage)\nprint(type(maxPage))\nfor i in range(1,maxPage+1):\n    fav='https://xueqiu.com/favs?page=%d' %i\n    collection=session.get(fav,headers=headers)\n    fav_content= collection.text\n    #print(fav_content)\n    p=re.compile('var favs = {(.*?)};',re.S|re.M)\n    result=p.findall(fav_content)[0].strip()\n\n    new_result='{'+result+'}'\n    #print(type(new_result))\n    #print(new_result)\n    data=json.loads(new_result)\n    use_data= data['list']\n    host='https://xueqiu.com'\n    for i in use_data:\n        url=host+ i['target']\n        print(url)\n        txt_content=session.get(url,headers=headers).text\n        #print(txt_content.text)\n\n        tree=etree.HTML(txt_content)\n        title=tree.xpath('//title/text()')[0]\n\n        filename = re.sub('[\\/:*?\"<>|]', '-', title)\n        print(filename)\n\n        content=tree.xpath('//div[@class=\"detail\"]')\n        for i in content:\n            Toolkit.save2filecn(filename, i.xpath('string(.)'))\n        #print(content)\n        #Toolkit.save2file(filename,)\n        time.sleep(10)\n"
        },
        {
          "name": "source_code_reading",
          "type": "tree",
          "content": null
        },
        {
          "name": "statistices.py",
          "type": "blob",
          "size": 0.439453125,
          "content": "#-*-coding=utf-8-*-\n'''\n用于统计数据\n'''\nimport alert\n'''\n计算收益\nsold 卖价\nbuy 买入价\n'''\ndef percentage(sold,buy):\n    x=(sold-buy)*1.00/buy*100\n    print(round(x,2))\n    return x\n\n'''\n计算买入价\nsold: 卖出的价格\n需要的幅度\n'''\ndef plan_buy_price(sold,percent):\n    buy=sold*1.00/(1+percent*1.00/100)\n    print(round(buy,2))\n    return buy\n\n#percentage(0.196,0.188)\n# plan_buy_price(10,10)\n\na=1.567\nprint(round(a,2))\n"
        },
        {
          "name": "stockInfo.py",
          "type": "blob",
          "size": 6.1943359375,
          "content": "# working v1.0\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\nimport json\nimport datetime\nimport time\nimport codecs\nimport os, sys\nimport requests\nimport re\nfrom scrapy.selector import Selector\nfrom elasticsearch import Elasticsearch\nfrom configure.settings import llogger\n\nlogger = llogger('log/stockinfo.log')\n\nmy_useragent = [\n    'Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_8; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50',\n    'Mozilla/5.0 (Windows; U; Windows NT 6.1; en-us) AppleWebKit/534.50 (KHTML, like Gecko) Version/5.1 Safari/534.50',\n    'Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0',\n    'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0)',\n    'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0)',\n    'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:2.0.1) Gecko/20100101 Firefox/4.0.1',\n    'Mozilla/5.0 (Windows NT 6.1; rv:2.0.1) Gecko/20100101 Firefox/4.0.1',\n    'Opera/9.80 (Macintosh; Intel Mac OS X 10.6.8; U; en) Presto/2.8.131 Version/11.11',\n    'Opera/9.80 (Windows NT 6.1; U; en) Presto/2.8.131 Version/11.11',\n    'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Maxthon 2.0)',\n    'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11',\n    'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; 360SE)',\n    'Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; SE 2.X MetaSr 1.0; SE 2.X MetaSr 1.0; .NET CLR 2.0.50727; SE 2.X MetaSr 1.0)'\n]\n\nes = Elasticsearch('10.18.6.102:9200')\n\ndef create_tb(conn):\n    cur = conn.cursor()\n    cmd = '''CREATE TABLE IF NOT EXISTS tb_cnstock(Date DATETIME ,Title VARCHAR (800),URL VARCHAR (100),PRIMARY KEY (URL)) charset=utf8;'''\n    try:\n        cur.execute(cmd)\n        conn.commit()\n        return True\n    except Exception as e:\n        logger.info(e)\n        conn.rollback()\n        return False\n\n\ndef getinfo(days=-30):\n    last_day = datetime.datetime.now() + datetime.timedelta(days=days)\n\n    url = \"http://app.cnstock.com/api/waterfall?callback=jQuery19107348148582372209_1557710326005&colunm=qmt-tjd_ggkx&page={}&num=20&showstock=0\"\n\n    page = 1\n    temp_time = time.strftime(\"[%Y-%m-%d]-[%H-%M]\", time.localtime())\n\n    store_filename = \"StockNews-%s.log\" % temp_time\n\n    f_open = codecs.open(store_filename, 'w', 'utf-8')\n    db_name = 'db_stock'\n\n    conn = get_mysql_conn(db_name, local='local')\n\n    cur = conn.cursor()\n\n    run_flag = True\n\n    while run_flag:\n        headers = {'Referer': 'http://ggjd.cnstock.com/company/scp_ggjd/tjd_ggkx',\n                   'User-Agent': 'Mozilla/5.0 (Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36', }\n\n        retry = 3\n        response = None\n\n        for _ in range(retry):\n            try:\n                response = requests.get(url=url.format(page), headers=headers)\n                response.encoding = 'utf8'\n            except Exception as e:\n                if hasattr(e, 'code'):\n                    logger.info(\"error code %d\" % e.code)\n                elif hasattr(e, 'reason'):\n                    logger.info(\"error reason %s \" % e.reason)\n                time.sleep(5)\n            else:\n                if response.status_code == 200:\n                    break\n\n        try:\n            text = response.text.encode('utf8').decode('unicode_escape')\n            js = re.search('jQuery19107348148582372209_1557710326005\\((.*?)\\)$', text, re.S).group(1)\n            js = re.sub('\\r\\n', '', js)\n            js_data = json.loads(js)\n\n        except Exception as e:\n            logger.error(e)\n            return None\n\n        content = js_data.get('data', {}).get('item', {})\n\n        if content is None:\n            continue\n\n        for item in content:\n            title = item.get('title')\n\n            if '晚间重要公告集锦' in title or '停复牌汇总' in title:\n                continue\n\n            link = item.get('link')\n            link = link.replace('\\\\', '')\n            pubdate_t = item.get('time')\n            pubdate_dtype = datetime.datetime.strptime(pubdate_t, '%Y-%m-%d %H:%M:%S')\n\n            if pubdate_dtype < last_day:\n                run_flag = False\n\n            keyword = item.get('keyword')\n            if keyword:\n                keyword = ' '.join(keyword)\n\n            sub_content = None\n\n            for i in range(2):\n                try:\n                    sub_content = requests.get(url=link, headers=headers)\n\n                except Exception as e:\n                    logger.error(e)\n                    continue\n                    # 重试\n\n                else:\n                    if sub_content.status_code == 200:\n                        break\n\n            root = Selector(text=sub_content.text)\n            detail_content = root.xpath('//div[@id=\"qmt_content_div\"]')[0].xpath('string(.)').extract_first()\n            if detail_content:\n                detail_content = detail_content.strip()\n            temp_tuple = (pubdate_dtype, title, link, detail_content, keyword)\n            insert_sql = 'insert into tb_cnstock (Date,Title,URL,Content,keyword) values (%s,%s,%s,%s,%s)'\n\n            # es\n            try:\n                pubdate_dtype=pubdate_dtype.strftime(\"%Y-%m-%d\"'T'\"%H:%M:%S\")\n                body = {'Title': title, 'ULR': link, 'keyword': keyword, 'content': detail_content, 'Date': pubdate_dtype}\n\n                es.index(index='cnstock',doc_type='doc',body=body)\n\n            except Exception as e:\n                logger.error(e)\n\n            # mysql\n            try:\n                cur.execute(insert_sql, temp_tuple)\n                conn.commit()\n            except Exception as e:\n                logger.error(e)\n                conn.rollback()\n\n            file_content = '{} ---- {}\\n{}\\n\\n'.format(pubdate_t, title, link)\n            f_open.write(file_content)\n\n        page += 1\n\n    f_open.close()\n\n\nif __name__ == \"__main__\":\n\n    sub_folder = DATA_PATH\n    if not os.path.exists(sub_folder):\n        os.mkdir(sub_folder)\n    os.chdir(sub_folder)\n\n    if len(sys.argv) > 1:\n        if re.match('-\\d+', sys.argv[1]):\n            day = int(sys.argv[1])\n        else:\n            day = -3\n    else:\n        day = -3\n\n    getinfo(days=day)\n    # fetch_detail()\n"
        },
        {
          "name": "stock_check.py",
          "type": "blob",
          "size": 6.40234375,
          "content": "# -*-coding=utf-8-*-\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\n\n#查询个股\nimport tushare as ts\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport numpy as np\nfrom threading import Thread\nfrom multiprocessing import Pool,Queue,Process,Manager\nimport multiprocessing\nmultiprocessing.freeze_support()\n\nclass CheckStock():\n    def __init__(self):\n        #self.id=id\n        self.base = pd.read_csv('bases.csv', dtype={'code': np.str})\n\n        '''\n        if len(self.id)!=6:\n            print(\"Wrong stock code\")\n            exit()\n        '''\n\n\n    def multi_thread(self):\n\n        with open('stock_list.txt') as f:\n            stock_list=f.readlines()\n\n        ratio_list=[]\n        for i in stock_list:\n            i=i.strip()\n            ratio_list.append(self.get_info(i))\n        #print(ratio_list)\n        return ratio_list\n\n    def get_info(self,id):\n        print(id)\n        try:\n            df=ts.get_today_ticks(id)\n            print('len of df ',len(df))\n            #print(df)\n            if len(df)==0:\n                print(\"Pause of exchange\")\n                return id,'pause'\n        except Exception as e:\n            print(e)\n            print(\"ERROR\")\n            return id,'pause'\n\n        '''\n        print('\\n')\n        max_p=df['price'].max()\n        print(max_p)\n        min_p=df['price'].min()\n        print(min_p)\n        #print(df)\n        '''\n        buy= df[df['type']=='买盘']['volume'].sum()\n        #print('buy:',buy)\n        sell =df[df['type']=='卖盘']['volume'].sum()\n        #print('sell: ',sell)\n        neutral= df[df['type']=='中性盘']['volume'].sum()\n        #print('neutral: ',neutral)\n        #最后一个是开盘数据\n        start=df[-1:]\n        vol_0=start['volume'].sum()\n        #print('start')\n        #print(start)\n        total=buy+sell+neutral+vol_0\n\n        sum_all=df['volume'].sum()\n\n        #print(total)\n        #print(sum_all)\n\n        ratio=round((buy-sell)*1.00/sell*100,2)\n        #print(\"buy/sell ratio: \",ratio)\n        return id,ratio\n        '''\n        df['price'].plot()\n        plt.grid()\n\n        plt.show()\n        '''\n\n\n\n    #类中不能多进程\n    def multi_process(self):\n        stock_list=[]\n        with open('stock_list.txt') as f:\n            stock_list=f.readlines()\n        #print(stock_list)\n        stock_list=map(lambda x:x.strip(),stock_list)\n        #print(stock_list)\n        '''\n        p=Pool(len(stock_list))\n        result=p.map(self.get_info,stock_list)\n        p.close()\n        p.join()\n        '''\n        p=Pool(len(stock_list))\n        #p_list=[]\n        result=[]\n        for i in stock_list:\n            t=p.apply_async(self.get_info,args=(i,))\n            #p_list.append(Process(target=self.get_info,args=(i)))\n            result.append(t)\n        p.close()\n        p.join()\n        print(result)\n        '''\n        for j in p_list:\n            j.start()\n        for k in p_list:\n            k.join()\n        '''\n\n\n        print(result)\n\n    def show_name(self):\n        #self.all=ts.get_stock_basics()\n        #self.bases_save=ts.get_stock_basics()\n\n        #self.bases_save.to_csv('bases.csv')\n\n        stock_list=self.multi_thread()\n        for st in stock_list:\n\n            print(\"code: \",st[0])\n            name=self.base[self.base['code']==st[0]]['name'].values[0]\n            print('name: ',name)\n            print(\"ratio: \",st[1])\n            if st[1]>30:\n                print(\"WOW, more than 30\")\n            print('\\n')\n\n    def sinle_thread(self,start,end):\n        for i in range(start,end):\n            id,ratio=self.get_info(self.all_code[i])\n            if ratio =='pause':\n                continue\n            if ratio>30:\n                print(self.base[self.base['code']==id]['name'].values[0],' buy more than 30 percent')\n\n    def scan_all(self):\n        self.all_code=self.base['code'].values\n        thread_num=500\n        all_num=len(self.all_code)\n        each_thread=all_num/thread_num\n        #print(type(all_code))\n        thread_list=[]\n        for i in range(thread_num):\n            t=Thread(target=self.sinle_thread,args=(i*each_thread,(i+1)*each_thread))\n            thread_list.append(t)\n\n        for j in thread_list:\n            j.start()\n\n        for k in thread_list:\n            k.join()\n\n\n    def monitor(self):\n        ratio_list=self.multi_thread()\n        for js in ratio_list:\n            if js[1]>30:\n                print(js[0])\n\n\n\n\ndef sub_process_ratio(i,q):\n    print(\"Start\")\n    try:\n        df=ts.get_today_ticks(i)\n        #print('len of df ',len(df))\n        #print(df)\n        if len(df)==0:\n            print(\"Pause of exchange\")\n            return i,'pause'\n    except Exception as e:\n        print(e)\n        print(\"ERROR\")\n        return id,'pause'\n\n    '''\n    print('\\n')\n    max_p=df['price'].max()\n    print(max_p)\n    min_p=df['price'].min()\n    print(min_p)\n    #print(df)\n    '''\n    buy= df[df['type']=='买盘']['volume'].sum()\n    #print('buy:',buy)\n    sell =df[df['type']=='卖盘']['volume'].sum()\n    #print('sell: ',sell)\n    neutral= df[df['type']=='中性盘']['volume'].sum()\n    #print('neutral: ',neutral)\n    #最后一个是开盘数据\n    start=df[-1:]\n    vol_0=start['volume'].sum()\n    #print('start')\n    #print(start)\n    total=buy+sell+neutral+vol_0\n\n    sum_all=df['volume'].sum()\n\n    #print(total)\n    #print(sum_all)\n\n    ratio=round((buy-sell)*1.00/sell*100,2)\n    #print(\"buy/sell ratio: \",ratio)\n    s= [i,ratio]\n    print(s)\n    q.put(s)\n\ndef testcase1(i,j,q):\n    print(i,j)\n    q.put(i)\n\ndef multi_process():\n    #stock_list=[]\n    with open('stock_list.txt') as f:\n        stock_list=f.readlines()\n    #print(stock_list)\n    stock_list=map(lambda x:x.strip(),stock_list)\n    print(stock_list)\n\n    '''\n    p=Pool(len(stock_list))\n    result=p.map(self.get_info,stock_list)\n    p.close()\n    p.join()\n    '''\n    p=Pool(len(stock_list))\n    #p_list=[]\n    result=[]\n    manager=Manager()\n    q=manager.Queue()\n    #p1=Pool(8)\n    #q1=Queue()\n    for i in stock_list:\n        #print(i)\n        p.apply_async(sub_process_ratio,args=(i,q))\n        #p1.apply_async(testcase1,args=(i,i,q1))\n        #p_list.append(Process(target=self.get_info,args=(i)))\n        #result.append(t)\n    p.close()\n    p.join()\n    #print(result)\n\n    while q.empty()==False:\n        print('get')\n        print(q.get())\n\n\nif __name__==\"__main__\":\n    #obj=CheckStock()\n    #obj.get_info('000693')\n    #obj.multi_thread()\n    #obj.show_name()\n    #obj.monitor()\n    #obj.scan_all()\n    #obj.multi_process()\n    multi_process()"
        },
        {
          "name": "store_data.py",
          "type": "blob",
          "size": 0.484375,
          "content": "#-*-coding=utf-8-*-\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\nimport tushare as ts\nimport sqlite3\nclass TS_DB():\n    def __init__(self):\n        self.db=sqlite3.connect(\"testdb.db\")\n\n\n    def save_csv(self,code):\n        df = ts.get_k_data(code,start='2016-01-01',end='2016-12-28')\n        filename=code+\".csv\"\n        #df.to_csv(filename)\n        df.to_sql(\"newtable\",self.db,flavor='sqlite')\n\n\nif __name__==\"__main__\":\n    obj=TS_DB()\n    obj.save_csv('300333')\n"
        },
        {
          "name": "strategy_verify.py",
          "type": "blob",
          "size": 7.96875,
          "content": "# -*-coding=utf-8-*-\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n获取雪球的策略 2017-03-21\n'''\n\nimport requests,time,re,os\nfrom lxml import etree\nfrom pandas import DataFrame\nimport sqlite3\nimport sqlite3,sys,cookielib,datetime\n\n\ndef create_table(strategy):\n    work_path=os.path.join(os.getcwd(),'data')\n\n    if os.path.exists(work_path)==False:\n        os.mkdir(work_path)\n\n    dbname='stragety_%d.db' %strategy\n    dbname=os.path.join(work_path,dbname)\n    conn = sqlite3.connect(dbname)\n    try:\n        create_tb_cmd='''\n            CREATE TABLE IF NOT EXISTS STRATEGY('日期' TEXT,'代码' TEXT,'股票' TEXT,'买入时间' TEXT,'盈亏' TEXT,'买入价格' TEXT,'当前价格' TEXT,'描述' TEXT);\n            '''\n\n        conn.execute(create_tb_cmd)\n        conn.commit()\n        conn.close()\n        print(\"create table successful\")\n    except:\n        print(\"Create table failed\")\n        return False\n\n\n\n\ndef insert(strategy,date_time,code,name,trigger_time,profit,trigger_price,current,desc):\n    work_path=os.path.join(os.getcwd(),'data')\n\n    if os.path.exists(work_path)==False:\n        os.mkdir(work_path)\n\n    dbname='stragety_%d.db' %strategy\n    dbname=os.path.join(work_path,dbname)\n    try:\n        conn = sqlite3.connect(dbname)\n        print(\"open database passed\")\n            #conn.text_factory = str\n        cmd=\"INSERT INTO STRATEGY ('日期','代码', '股票','买入时间' ,'盈亏' ,'买入价格' ,'当前价格','描述' ) VALUES ('%s','%s','%s','%s','%s','%s','%s','%s');\" %(date_time,code,name,trigger_time,profit,trigger_price,current,desc)\n\n        conn.execute(cmd)\n        conn.commit()\n        conn.close()\n        print(\"Insert successful\")\n    except:\n        print(\"Insert Failed\")\n\nclass Strategy():\n\n    def __init__(self):\n        self.base_url='https://xueqiu.com/strategy/'\n        self.headers={'User-Agent':'Mozilla/5.0 (Windows NT 5.1; rv:33.0) Gecko/20100101 Firefox/33.0',\n                      'Host':'xueqiu.com',\n                      }\n        self.headers['X-Requested-With']='XMLHttpRequest'\n        self.headers['DNT']='1'\n        self.s=requests.session()\n\n\n    def getData(self,page):\n        url=self.base_url+str(page)\n        resp=requests.get(url,headers=self.headers)\n        print(resp.status_code)\n        print(resp.text)\n\n\n    def show_strategy(self):\n        Status_Code=200\n        base_url='https://xueqiu.com/strategy/'\n\n        for i in range(100):\n            no_strategy=0\n            url=base_url+str(i)\n            resp=requests.get(url,headers=self.headers)\n            if resp.status_code==200:\n\n                content=resp.text\n                tree=etree.HTML(content)\n                all_contnet=tree.xpath('//div[@class=\"detail-bd\"]')\n                print(tree.xpath('//title/text()')[0])\n                content_str=[]\n                temp=[]\n                p=re.compile('待定')\n                for j in all_contnet:\n                    s= j.xpath('string(.)')\n                    temp.append(s)\n                    if p.findall(s):\n                        no_strategy=1\n\n                if no_strategy==0:\n                    print('%d has strategy' %i)\n                    for it in temp:\n                        print(it)\n            time.sleep(10)\n\n    def getStock(self,strategy,page):\n\n        url='https://xueqiu.com/snowmart/push/stocks.json?product_id=%s&page=%s&count=5' %(str(strategy),str(page))\n        self.headers['Referer']='https://xueqiu.com/strategy/%s' %str(strategy)\n\n        data_up={'product_id':strategy,'page':page,'count':5}\n        self.s.get('https://xueqiu.com',headers=self.headers)\n\n        resp=self.s.get(url,params=data_up,headers=self.headers)\n        #time.sleep(20)\n        return resp.json()\n\n    def dataStore_SQLite(self,strategy,page):\n        json_data=self.getStock(strategy,page)\n        #print(json_data)\n        if len(json_data)==0:\n\n            return 0\n        items=json_data['items']\n        if len(items)==0:\n            return 0\n\n        create_table(strategy)\n\n        for item in items:\n            desc=item['desc'].encode('utf-8')\n            current=item['current']\n            d_time=datetime.datetime.fromtimestamp(item['trigger_time']*1.0/1000)\n            str_time=d_time.strftime('%Y-%m-%d %H:%M')\n\n            #trigger_time=datetime.datetime.fromtimestamp(item['trigger_time']*1.0/1000)\n            trigger_time=str_time\n            name=item['name'].encode('utf-8')\n            trigger_price=item['trigger_price']\n            code=item['symbol'].encode('utf-8')\n            profit=item['change_percent']*100.0\n            #print(profit)\n            date_time=str_time\n            #date_time=time.ctime(item['trigger_time']*1.0/1000)\n            '''\n            print(type(desc))\n            print(type(current))\n            print(type(trigger_price))\n            print(type(trigger_time))\n            print(type(code))\n            print(type(profit))\n            print(type(date_time))\n            print(type(name))\n            '''\n            insert(strategy,date_time,code,name,trigger_time,profit,trigger_price,current,desc)\n\n    def dataFilter(self,strategy,page):\n        json_data=self.getStock(strategy,page)\n        items=json_data['items']\n        colums_dict={'current': '', 'name': '', 'trigger_price': '', 'symbol': '', 'status_id': '', 'trigger_time': '', 'is_new': '', 'change_percent': '', 'flag': '', 'reply_count': '', 'target': '', 'desc': ''}\n\n        df_total=DataFrame(colums_dict,index=['0'])\n        for item in items:\n            #print(item)\n            df=DataFrame(item,index=['0'])\n            print(df)\n            df_total=df_total.append(df,ignore_index=True)\n\n            '''\n            current: 目前价格\n            trigger_price: 入选价\n            change_percent: 盈亏比例 小数，非百分比\n            desc: 描述 帖子\n\n            '''\n\n        df_total.to_excel('stragety.xls')\n\n    def DataDup(self,strategy):\n        work_path=os.path.join(os.getcwd(),'data')\n\n        if os.path.exists(work_path)==False:\n            os.mkdir(work_path)\n\n        dbname='stragety_%d.db' %strategy\n        dbname=os.path.join(work_path,dbname)\n\n        try:\n            conn=sqlite3.connect(dbname)\n            cmd='delete from STRATEGY where rowid not in (select max(rowid) from STRATEGY group by 代码);'\n            conn.execute(cmd)\n            time.sleep(1)\n            conn.commit()\n            time.sleep(1)\n            conn.close()\n            time.sleep(1)\n        except:\n            print(\"remove failed on \",strategy)\n\n    def loops(self):\n        for i in range(1,70):\n                for j in range(20):\n                    print(\"Strategy %d\" %i)\n                    status=self.dataStore_SQLite(i,j)\n                    if status==0:\n                        break\n                    time.sleep(2)\n\n    def monitor(self,strategy):\n        print(\"monitor\")\n        print(\"#\"*20)\n        print('\\n')\n        for i in range(10):\n            json_data=self.getStock(strategy,i)\n            items=json_data['items']\n            for item in items:\n                print('\\n\\n')\n                d_time=datetime.datetime.fromtimestamp(item['trigger_time']*1.00/1000)\n                str_time=d_time.strftime('%Y-%m-%d %H:%M')\n                print('买入时间 ',str_time)\n                #print('买入时间 ',time.ctime(item['trigger_time']*1.00/1000))\n                print('当前价格 ',item['current'])\n                print(item['name'])\n                print('买入价格 ',item['trigger_price'])\n                print('目前盈亏 ',float(item['change_percent'])*100.0)\n                print(item['desc'])\n\n            time.sleep(1)\n\ndef main():\n\n    selection=input(\"Select option :\\n\"\n                    \"1.\\tMonitor the stragegy \\n\"\n                    \"2.\\tStore to Database\\n\"\n                    \"3.\\tRemove duplicate items\\n\")\n\n    obj=Strategy()\n    if selection==1:\n        strategy=input('Strategy:')\n        obj.monitor(strategy)\n\n    elif selection ==2:\n        obj.loops()\n    elif selection==3:\n        for i in range(1,60):\n            obj.DataDup(i)\n\n\nif __name__=='__main__':\n    main()\n"
        },
        {
          "name": "temp",
          "type": "tree",
          "content": null
        },
        {
          "name": "toolkit.py",
          "type": "blob",
          "size": 1.2265625,
          "content": "# -*-coding=utf-8-*-\n#常用的工具集合\n__author__ = 'Rocky'\n'''\nhttp://30daydo.com\nContact: weigesysu@qq.com\n'''\nimport codecs\n\nclass Toolkit():\n    @staticmethod\n    def save2file( filename, content):\n        # 保存为文件\n        filename = filename + \".txt\"\n        f = open(filename, 'a')\n        f.write(content)\n        f.close()\n\n    @staticmethod\n    def save2filecn( filename, content):\n        # 保存为文件\n        #filename = filename + \".txt\"\n        f = codecs.open(filename, 'a',encoding='utf-8')\n        f.write(content)\n        f.close()\n\n    @staticmethod\n    def getUserData(cfg_file):\n        f=open(cfg_file,'r')\n        account={}\n        for i in f.readlines():\n            ctype,passwd=i.split('=')\n            #print(ctype)\n            #print(passwd)\n            account[ctype.strip()]=passwd.strip()\n\n        return account\n\n    @staticmethod\n    def read_stock(cfg_file):\n        result=[]\n        try:\n\n            f=open(cfg_file,'r').readlines()\n            for i in f:\n                i=i.strip()\n                if len(i)!=6:\n                    continue\n                result.append(i)\n                #print(i)\n        except Exception as e:\n            print(e)\n            return None\n        return result"
        },
        {
          "name": "trader",
          "type": "tree",
          "content": null
        },
        {
          "name": "transfer_data_es.py",
          "type": "blob",
          "size": 0.697265625,
          "content": "# -*-coding=utf-8-*-\n\n# @Time : 2019/7/12 18:41\n# @File : transfer_data_es.py\n\nfrom configure.settings import get_mysql_conn\nfrom elasticsearch import Elasticsearch\n\nes = Elasticsearch('10.18.6.102:9200')\nconn = get_mysql_conn('db_stock','local')\ncursor = conn.cursor()\n\nquery_cmd = 'select * from tb_cnstock'\ncursor.execute(query_cmd)\n\nret = cursor.fetchall()\n\nfor item in ret:\n    # print(item)\n    date = item[0]\n    title = item[1]\n    url = item[2]\n    content = item[3]\n    keyword = item[4]\n    body = {'Title':title,'ULR':url,'keyword':keyword,'content':content,'Date':date}\n    try:\n        es.index(index='cnstock',doc_type='doc',body=body)\n    except Exception as e:\n        print(e)\n        print(url)\n"
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "yesterday_zt_monitor.py",
          "type": "blob",
          "size": 2.05859375,
          "content": "# -*-coding=utf-8-*-\n\n'''\n昨日涨停的今日的实时情况\n'''\nimport datetime\nimport matplotlib\nmatplotlib.use(\"Pdf\")\nfrom configure.settings import DBSelector,config_dict\nimport pandas as pd\nimport tushare as ts\nfrom plot_line import plot_stock_line\nfrom common.BaseService import BaseService\nfrom configure.util import send_message_via_wechat\nimport fire\n\n# 绘制k线图，今日涨停的k线图\nclass PlotYesterdayZT(BaseService):\n\n    def __init__(self):\n        super(PlotYesterdayZT, self).__init__('log/yester_zdt.log')\n        self.image_path = config_dict('data_path')\n\n    def get_data(self,table):\n        DB = DBSelector()\n        engine = DB.get_engine('db_zdt', 'qq')\n\n        try:\n            df = pd.read_sql(table, engine)\n        except Exception as e:\n            self.logger.error('table_name >>> {}'.format(table))\n            self.logger.error(e)\n            return None\n        else:\n            return df\n\n    def plot_yesterday_zt(self,api,type_name='zrzt', current=datetime.datetime.now().strftime('%Y%m%d')):\n\n        start_data = datetime.datetime.now() + datetime.timedelta(days=-200)\n        start_data=start_data.strftime('%Y-%m-%d')\n        table = f'{current}{type_name}'\n\n        df = self.get_data(table)\n\n        for i in range(len(df)):\n            code = df.iloc[i]['代码']\n            name = df.iloc[i]['名称']\n            plot_stock_line(api,code, name, table_type=type_name, current=current, root_path=self.image_path,start=start_data, save=True)\n\n\ndef main(current=None):\n    # current='20191016'\n    if current is None:\n        current = datetime.datetime.now().strftime('%Y%m%d')\n    if isinstance(current,int):\n        current=str(current)\n    app = PlotYesterdayZT()\n    api =ts.get_apis()\n    for plot_type in ['zrzt', 'zdt']:\n\n        try:\n            app.plot_yesterday_zt(api,plot_type, current=current)\n        except Exception as e:\n            print(plot_type,'error')\n            print(e)\n            send_message_via_wechat('zdt_plot 出错')\n            continue\n\n    ts.close_apis(conn=api)\n\nif __name__ == '__main__':\n    fire.Fire(main)\n\n\n"
        },
        {
          "name": "收益率曲线绘制.ipynb",
          "type": "blob",
          "size": 3.59375,
          "content": "{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"from setting import get_mysql_conn\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"conn = get_mysql_conn(db='db_stock',local='local')\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"cursor = conn.cursor()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import pandas as pd\\n\",\n    \"import matplotlib.pyplot as plt\\n\",\n    \"%matplotlib inline\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"cmd = 'select Date,NetValue,HS300 from tb_jingzhi'\\n\",\n    \"cursor.execute(cmd)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"ret = cursor.fetchall()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"result = []\\n\",\n    \"for item in ret:\\n\",\n    \"    d={}\\n\",\n    \"    d['Date']=item[0]\\n\",\n    \"    d['NetValue']=item[1]\\n\",\n    \"    d['hs']=item[2]\\n\",\n    \"    result.append(d)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df = pd.DataFrame(result)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df.info()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df = df.set_index('Date',drop=True)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"plt.figure(figsize=(12,10))\\n\",\n    \"df['NetValue'].plot()\\n\",\n    \"df['hs'].plot()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df['NetValue'].mean()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df['NetValue'].std()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df['NetValue'].var()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df['hs'].mean()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df['hs'].std()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df['hs'].var()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.8.3\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n"
        },
        {
          "name": "新闻分析.ipynb",
          "type": "blob",
          "size": 7.80078125,
          "content": "{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"from setting import get_engine\\n\",\n    \"first=get_engine('db_stock')\\n\",\n    \"import pandas as pd\\n\",\n    \"df =pd.read_sql('tb_cnstock',first)\\n\",\n    \"\\n\",\n    \"second = get_engine('db_news')\\n\",\n    \"df2=pd.read_sql('tb_cnstock',second)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>Date</th>\\n\",\n       \"      <th>Title</th>\\n\",\n       \"      <th>URL</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2016-10-18 08:43:00</td>\\n\",\n       \"      <td>欧富源科技1亿拍下深南电两房产公司股权</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>2016-10-25 09:12:00</td>\\n\",\n       \"      <td>净利增速远超营收 兔宝宝回复半年报问询</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2</th>\\n\",\n       \"      <td>2016-10-25 13:06:00</td>\\n\",\n       \"      <td>ST沪科重要事项未公告下午临停</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>3</th>\\n\",\n       \"      <td>2016-11-02 08:56:00</td>\\n\",\n       \"      <td>西王食品收购Kerr 80%股权完成交割</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>4</th>\\n\",\n       \"      <td>2016-11-08 13:42:00</td>\\n\",\n       \"      <td>万福生科11月8日下午开市起停牌</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"                 Date                 Title  \\\\\\n\",\n       \"0 2016-10-18 08:43:00   欧富源科技1亿拍下深南电两房产公司股权   \\n\",\n       \"1 2016-10-25 09:12:00   净利增速远超营收 兔宝宝回复半年报问询   \\n\",\n       \"2 2016-10-25 13:06:00       ST沪科重要事项未公告下午临停   \\n\",\n       \"3 2016-11-02 08:56:00  西王食品收购Kerr 80%股权完成交割   \\n\",\n       \"4 2016-11-08 13:42:00      万福生科11月8日下午开市起停牌   \\n\",\n       \"\\n\",\n       \"                                                 URL  \\n\",\n       \"0  http://company.cnstock.com/company/scp_gsxw/20...  \\n\",\n       \"1  http://company.cnstock.com/company/scp_gsxw/20...  \\n\",\n       \"2  http://company.cnstock.com/company/scp_gsxw/20...  \\n\",\n       \"3  http://company.cnstock.com/company/scp_gsxw/20...  \\n\",\n       \"4  http://company.cnstock.com/company/scp_gsxw/20...  \"\n      ]\n     },\n     \"execution_count\": 2,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 3,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>Date</th>\\n\",\n       \"      <th>Title</th>\\n\",\n       \"      <th>URL</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>2016-10-18 08:43:00</td>\\n\",\n       \"      <td>欧富源科技1亿拍下深南电两房产公司股权</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>2016-10-25 09:12:00</td>\\n\",\n       \"      <td>净利增速远超营收 兔宝宝回复半年报问询</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2</th>\\n\",\n       \"      <td>2016-10-25 13:06:00</td>\\n\",\n       \"      <td>ST沪科重要事项未公告下午临停</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>3</th>\\n\",\n       \"      <td>2016-11-02 08:56:00</td>\\n\",\n       \"      <td>西王食品收购Kerr 80%股权完成交割</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>4</th>\\n\",\n       \"      <td>2016-11-08 13:42:00</td>\\n\",\n       \"      <td>万福生科11月8日下午开市起停牌</td>\\n\",\n       \"      <td>http://company.cnstock.com/company/scp_gsxw/20...</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"                 Date                 Title  \\\\\\n\",\n       \"0 2016-10-18 08:43:00   欧富源科技1亿拍下深南电两房产公司股权   \\n\",\n       \"1 2016-10-25 09:12:00   净利增速远超营收 兔宝宝回复半年报问询   \\n\",\n       \"2 2016-10-25 13:06:00       ST沪科重要事项未公告下午临停   \\n\",\n       \"3 2016-11-02 08:56:00  西王食品收购Kerr 80%股权完成交割   \\n\",\n       \"4 2016-11-08 13:42:00      万福生科11月8日下午开市起停牌   \\n\",\n       \"\\n\",\n       \"                                                 URL  \\n\",\n       \"0  http://company.cnstock.com/company/scp_gsxw/20...  \\n\",\n       \"1  http://company.cnstock.com/company/scp_gsxw/20...  \\n\",\n       \"2  http://company.cnstock.com/company/scp_gsxw/20...  \\n\",\n       \"3  http://company.cnstock.com/company/scp_gsxw/20...  \\n\",\n       \"4  http://company.cnstock.com/company/scp_gsxw/20...  \"\n      ]\n     },\n     \"execution_count\": 3,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df2.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 14,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"0\"\n      ]\n     },\n     \"execution_count\": 14,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df_new[~(df_new['URL'].isin(df_old['URL'].values))]\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.0\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n"
        },
        {
          "name": "选股.ipynb",
          "type": "blob",
          "size": 193.771484375,
          "content": "{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"█\\r\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"#-*-coding=utf-8-*-\\n\",\n    \"# 用来选股的\\n\",\n    \"from setting import get_engine\\n\",\n    \"import pandas as pd\\n\",\n    \"import tushare as ts\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 17,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"engine = get_engine('db_stock')\\n\",\n    \"basic_df = pd.read_sql('tb_basic_info',engine,index_col='index')\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 18,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>code</th>\\n\",\n       \"      <th>name</th>\\n\",\n       \"      <th>industry</th>\\n\",\n       \"      <th>area</th>\\n\",\n       \"      <th>pe</th>\\n\",\n       \"      <th>outstanding</th>\\n\",\n       \"      <th>totals</th>\\n\",\n       \"      <th>totalAssets</th>\\n\",\n       \"      <th>liquidAssets</th>\\n\",\n       \"      <th>fixedAssets</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>pb</th>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th>undp</th>\\n\",\n       \"      <th>perundp</th>\\n\",\n       \"      <th>rev</th>\\n\",\n       \"      <th>profit</th>\\n\",\n       \"      <th>gpr</th>\\n\",\n       \"      <th>npr</th>\\n\",\n       \"      <th>holders</th>\\n\",\n       \"      <th>更新日期</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>index</th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>603897</td>\\n\",\n       \"      <td>N长城</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>25.57</td>\\n\",\n       \"      <td>0.45</td>\\n\",\n       \"      <td>1.78</td>\\n\",\n       \"      <td>131807.23</td>\\n\",\n       \"      <td>117523.63</td>\\n\",\n       \"      <td>10988.37</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.27</td>\\n\",\n       \"      <td>20180410</td>\\n\",\n       \"      <td>35286.05</td>\\n\",\n       \"      <td>1.98</td>\\n\",\n       \"      <td>41.98</td>\\n\",\n       \"      <td>55.84</td>\\n\",\n       \"      <td>8.19</td>\\n\",\n       \"      <td>3.87</td>\\n\",\n       \"      <td>42986.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>300356</td>\\n\",\n       \"      <td>光一科技</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>206.51</td>\\n\",\n       \"      <td>3.69</td>\\n\",\n       \"      <td>4.15</td>\\n\",\n       \"      <td>208679.95</td>\\n\",\n       \"      <td>97810.21</td>\\n\",\n       \"      <td>17068.50</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.49</td>\\n\",\n       \"      <td>20121009</td>\\n\",\n       \"      <td>28831.28</td>\\n\",\n       \"      <td>0.69</td>\\n\",\n       \"      <td>-39.02</td>\\n\",\n       \"      <td>-47.76</td>\\n\",\n       \"      <td>26.05</td>\\n\",\n       \"      <td>4.30</td>\\n\",\n       \"      <td>19839.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2</th>\\n\",\n       \"      <td>600711</td>\\n\",\n       \"      <td>盛屯矿业</td>\\n\",\n       \"      <td>小金属</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>26.15</td>\\n\",\n       \"      <td>14.97</td>\\n\",\n       \"      <td>16.77</td>\\n\",\n       \"      <td>1125400.88</td>\\n\",\n       \"      <td>590581.00</td>\\n\",\n       \"      <td>76470.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.11</td>\\n\",\n       \"      <td>19960531</td>\\n\",\n       \"      <td>104130.27</td>\\n\",\n       \"      <td>0.62</td>\\n\",\n       \"      <td>62.61</td>\\n\",\n       \"      <td>223.67</td>\\n\",\n       \"      <td>6.85</td>\\n\",\n       \"      <td>2.95</td>\\n\",\n       \"      <td>106700.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>3</th>\\n\",\n       \"      <td>002160</td>\\n\",\n       \"      <td>常铝股份</td>\\n\",\n       \"      <td>铝</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>32.31</td>\\n\",\n       \"      <td>4.72</td>\\n\",\n       \"      <td>7.24</td>\\n\",\n       \"      <td>622252.69</td>\\n\",\n       \"      <td>297916.59</td>\\n\",\n       \"      <td>151107.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1.45</td>\\n\",\n       \"      <td>20070821</td>\\n\",\n       \"      <td>27155.90</td>\\n\",\n       \"      <td>0.37</td>\\n\",\n       \"      <td>40.03</td>\\n\",\n       \"      <td>56.07</td>\\n\",\n       \"      <td>17.64</td>\\n\",\n       \"      <td>3.84</td>\\n\",\n       \"      <td>50000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>4</th>\\n\",\n       \"      <td>000717</td>\\n\",\n       \"      <td>韶钢松山</td>\\n\",\n       \"      <td>普钢</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>6.32</td>\\n\",\n       \"      <td>24.20</td>\\n\",\n       \"      <td>24.20</td>\\n\",\n       \"      <td>1441538.00</td>\\n\",\n       \"      <td>440514.44</td>\\n\",\n       \"      <td>801547.88</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.35</td>\\n\",\n       \"      <td>19970508</td>\\n\",\n       \"      <td>-331470.38</td>\\n\",\n       \"      <td>-1.37</td>\\n\",\n       \"      <td>86.35</td>\\n\",\n       \"      <td>2381.13</td>\\n\",\n       \"      <td>13.26</td>\\n\",\n       \"      <td>9.66</td>\\n\",\n       \"      <td>132008.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>5 rows × 24 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"         code  name industry area      pe  outstanding  totals  totalAssets  \\\\\\n\",\n       \"index                                                                         \\n\",\n       \"0      603897   N长城     电气设备   浙江   25.57         0.45    1.78    131807.23   \\n\",\n       \"1      300356  光一科技     电气设备   江苏  206.51         3.69    4.15    208679.95   \\n\",\n       \"2      600711  盛屯矿业      小金属   福建   26.15        14.97   16.77   1125400.88   \\n\",\n       \"3      002160  常铝股份        铝   江苏   32.31         4.72    7.24    622252.69   \\n\",\n       \"4      000717  韶钢松山       普钢   广东    6.32        24.20   24.20   1441538.00   \\n\",\n       \"\\n\",\n       \"       liquidAssets  fixedAssets     ...        pb  timeToMarket       undp  \\\\\\n\",\n       \"index                                ...                                      \\n\",\n       \"0         117523.63     10988.37     ...      4.27      20180410   35286.05   \\n\",\n       \"1          97810.21     17068.50     ...      2.49      20121009   28831.28   \\n\",\n       \"2         590581.00     76470.36     ...      3.11      19960531  104130.27   \\n\",\n       \"3         297916.59    151107.36     ...      1.45      20070821   27155.90   \\n\",\n       \"4         440514.44    801547.88     ...      5.35      19970508 -331470.38   \\n\",\n       \"\\n\",\n       \"       perundp    rev   profit    gpr   npr   holders        更新日期  \\n\",\n       \"index                                                              \\n\",\n       \"0         1.98  41.98    55.84   8.19  3.87   42986.0  2018-04-11  \\n\",\n       \"1         0.69 -39.02   -47.76  26.05  4.30   19839.0  2018-04-11  \\n\",\n       \"2         0.62  62.61   223.67   6.85  2.95  106700.0  2018-04-11  \\n\",\n       \"3         0.37  40.03    56.07  17.64  3.84   50000.0  2018-04-11  \\n\",\n       \"4        -1.37  86.35  2381.13  13.26  9.66  132008.0  2018-04-11  \\n\",\n       \"\\n\",\n       \"[5 rows x 24 columns]\"\n      ]\n     },\n     \"execution_count\": 18,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"basic_df.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 23,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"basic_df=basic_df[basic_df['timeToMarket']!=0]\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 24,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"<class 'pandas.core.frame.DataFrame'>\\n\",\n      \"Int64Index: 3506 entries, 0 to 3509\\n\",\n      \"Data columns (total 24 columns):\\n\",\n      \"code                3506 non-null object\\n\",\n      \"name                3506 non-null object\\n\",\n      \"industry            3506 non-null object\\n\",\n      \"area                3506 non-null object\\n\",\n      \"pe                  3506 non-null float64\\n\",\n      \"outstanding         3506 non-null float64\\n\",\n      \"totals              3506 non-null float64\\n\",\n      \"totalAssets         3506 non-null float64\\n\",\n      \"liquidAssets        3506 non-null float64\\n\",\n      \"fixedAssets         3506 non-null float64\\n\",\n      \"reserved            3506 non-null float64\\n\",\n      \"reservedPerShare    3506 non-null float64\\n\",\n      \"esp                 3506 non-null float64\\n\",\n      \"bvps                3506 non-null float64\\n\",\n      \"pb                  3506 non-null float64\\n\",\n      \"timeToMarket        3506 non-null int64\\n\",\n      \"undp                3506 non-null float64\\n\",\n      \"perundp             3506 non-null float64\\n\",\n      \"rev                 3506 non-null float64\\n\",\n      \"profit              3506 non-null float64\\n\",\n      \"gpr                 3506 non-null float64\\n\",\n      \"npr                 3506 non-null float64\\n\",\n      \"holders             3506 non-null float64\\n\",\n      \"更新日期                3506 non-null object\\n\",\n      \"dtypes: float64(18), int64(1), object(5)\\n\",\n      \"memory usage: 684.8+ KB\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"basic_df.info()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 25,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stderr\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"/usr/local/lib/python2.7/dist-packages/pandas/core/ops.py:816: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison\\n\",\n      \"  result = getattr(x, name)(y)\\n\"\n     ]\n    },\n    {\n     \"ename\": \"TypeError\",\n     \"evalue\": \"invalid type comparison\",\n     \"output_type\": \"error\",\n     \"traceback\": [\n      \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\",\n      \"\\u001b[0;31mTypeError\\u001b[0m                                 Traceback (most recent call last)\",\n      \"\\u001b[0;32m<ipython-input-25-c38b6c9e83f2>\\u001b[0m in \\u001b[0;36m<module>\\u001b[0;34m()\\u001b[0m\\n\\u001b[0;32m----> 1\\u001b[0;31m \\u001b[0mbasic_df\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mbasic_df\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mreset_index\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mbasic_df\\u001b[0m\\u001b[0;34m[\\u001b[0m\\u001b[0;34m'timeToMarket'\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m,\\u001b[0m\\u001b[0mdrop\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0mTrue\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\",\n      \"\\u001b[0;32m/usr/local/lib/python2.7/dist-packages/pandas/core/frame.pyc\\u001b[0m in \\u001b[0;36mreset_index\\u001b[0;34m(self, level, drop, inplace, col_level, col_fill)\\u001b[0m\\n\\u001b[1;32m   3339\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0;32mnot\\u001b[0m \\u001b[0misinstance\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mlevel\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0;34m(\\u001b[0m\\u001b[0mtuple\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mlist\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   3340\\u001b[0m                 \\u001b[0mlevel\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0;34m[\\u001b[0m\\u001b[0mlevel\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 3341\\u001b[0;31m             \\u001b[0mlevel\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0;34m[\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mindex\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_get_level_number\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mlev\\u001b[0m\\u001b[0;34m)\\u001b[0m \\u001b[0;32mfor\\u001b[0m \\u001b[0mlev\\u001b[0m \\u001b[0;32min\\u001b[0m \\u001b[0mlevel\\u001b[0m\\u001b[0;34m]\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   3342\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0misinstance\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mindex\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mMultiIndex\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   3343\\u001b[0m                 \\u001b[0;32mif\\u001b[0m \\u001b[0mlen\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mlevel\\u001b[0m\\u001b[0;34m)\\u001b[0m \\u001b[0;34m<\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mindex\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mnlevels\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m/usr/local/lib/python2.7/dist-packages/pandas/core/indexes/base.pyc\\u001b[0m in \\u001b[0;36m_get_level_number\\u001b[0;34m(self, level)\\u001b[0m\\n\\u001b[1;32m   1618\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1619\\u001b[0m     \\u001b[0;32mdef\\u001b[0m \\u001b[0m_get_level_number\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mself\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mlevel\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m-> 1620\\u001b[0;31m         \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0m_validate_index_level\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mlevel\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   1621\\u001b[0m         \\u001b[0;32mreturn\\u001b[0m \\u001b[0;36m0\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1622\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;32m/usr/local/lib/python2.7/dist-packages/pandas/core/indexes/base.pyc\\u001b[0m in \\u001b[0;36m_validate_index_level\\u001b[0;34m(self, level)\\u001b[0m\\n\\u001b[1;32m   1613\\u001b[0m                                  \\u001b[0;34m\\\" Index has only 1 level, not %d\\\"\\u001b[0m \\u001b[0;34m%\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m   1614\\u001b[0m                                  (level + 1))\\n\\u001b[0;32m-> 1615\\u001b[0;31m         \\u001b[0;32melif\\u001b[0m \\u001b[0mlevel\\u001b[0m \\u001b[0;34m!=\\u001b[0m \\u001b[0mself\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0mname\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m   1616\\u001b[0m             raise KeyError('Level %s must be same as name (%s)' %\\n\\u001b[1;32m   1617\\u001b[0m                            (level, self.name))\\n\",\n      \"\\u001b[0;32m/usr/local/lib/python2.7/dist-packages/pandas/core/ops.pyc\\u001b[0m in \\u001b[0;36mwrapper\\u001b[0;34m(self, other, axis)\\u001b[0m\\n\\u001b[1;32m    877\\u001b[0m \\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    878\\u001b[0m             \\u001b[0;32mwith\\u001b[0m \\u001b[0mnp\\u001b[0m\\u001b[0;34m.\\u001b[0m\\u001b[0merrstate\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mall\\u001b[0m\\u001b[0;34m=\\u001b[0m\\u001b[0;34m'ignore'\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 879\\u001b[0;31m                 \\u001b[0mres\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mna_op\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mvalues\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mother\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    880\\u001b[0m             \\u001b[0;32mif\\u001b[0m \\u001b[0mis_scalar\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mres\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    881\\u001b[0m                 raise TypeError('Could not compare {typ} type with Series'\\n\",\n      \"\\u001b[0;32m/usr/local/lib/python2.7/dist-packages/pandas/core/ops.pyc\\u001b[0m in \\u001b[0;36mna_op\\u001b[0;34m(x, y)\\u001b[0m\\n\\u001b[1;32m    816\\u001b[0m                     \\u001b[0mresult\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mgetattr\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mx\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0mname\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0my\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    817\\u001b[0m                 \\u001b[0;32mif\\u001b[0m \\u001b[0mresult\\u001b[0m \\u001b[0;32mis\\u001b[0m \\u001b[0mNotImplemented\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0;32m--> 818\\u001b[0;31m                     \\u001b[0;32mraise\\u001b[0m \\u001b[0mTypeError\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0;34m\\\"invalid type comparison\\\"\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[0m\\u001b[1;32m    819\\u001b[0m             \\u001b[0;32mexcept\\u001b[0m \\u001b[0mAttributeError\\u001b[0m\\u001b[0;34m:\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\\u001b[1;32m    820\\u001b[0m                 \\u001b[0mresult\\u001b[0m \\u001b[0;34m=\\u001b[0m \\u001b[0mop\\u001b[0m\\u001b[0;34m(\\u001b[0m\\u001b[0mx\\u001b[0m\\u001b[0;34m,\\u001b[0m \\u001b[0my\\u001b[0m\\u001b[0;34m)\\u001b[0m\\u001b[0;34m\\u001b[0m\\u001b[0m\\n\",\n      \"\\u001b[0;31mTypeError\\u001b[0m: invalid type comparison\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"basic_df = basic_df.reset_index(basic_df['timeToMarket'],drop=True)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 26,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>code</th>\\n\",\n       \"      <th>name</th>\\n\",\n       \"      <th>industry</th>\\n\",\n       \"      <th>area</th>\\n\",\n       \"      <th>pe</th>\\n\",\n       \"      <th>outstanding</th>\\n\",\n       \"      <th>totals</th>\\n\",\n       \"      <th>totalAssets</th>\\n\",\n       \"      <th>liquidAssets</th>\\n\",\n       \"      <th>fixedAssets</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>pb</th>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th>undp</th>\\n\",\n       \"      <th>perundp</th>\\n\",\n       \"      <th>rev</th>\\n\",\n       \"      <th>profit</th>\\n\",\n       \"      <th>gpr</th>\\n\",\n       \"      <th>npr</th>\\n\",\n       \"      <th>holders</th>\\n\",\n       \"      <th>更新日期</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>index</th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>603897</td>\\n\",\n       \"      <td>N长城</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>25.57</td>\\n\",\n       \"      <td>0.45</td>\\n\",\n       \"      <td>1.78</td>\\n\",\n       \"      <td>131807.23</td>\\n\",\n       \"      <td>117523.63</td>\\n\",\n       \"      <td>10988.37</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.27</td>\\n\",\n       \"      <td>20180410</td>\\n\",\n       \"      <td>35286.05</td>\\n\",\n       \"      <td>1.98</td>\\n\",\n       \"      <td>41.98</td>\\n\",\n       \"      <td>55.84</td>\\n\",\n       \"      <td>8.19</td>\\n\",\n       \"      <td>3.87</td>\\n\",\n       \"      <td>42986.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>300356</td>\\n\",\n       \"      <td>光一科技</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>206.51</td>\\n\",\n       \"      <td>3.69</td>\\n\",\n       \"      <td>4.15</td>\\n\",\n       \"      <td>208679.95</td>\\n\",\n       \"      <td>97810.21</td>\\n\",\n       \"      <td>17068.50</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.49</td>\\n\",\n       \"      <td>20121009</td>\\n\",\n       \"      <td>28831.28</td>\\n\",\n       \"      <td>0.69</td>\\n\",\n       \"      <td>-39.02</td>\\n\",\n       \"      <td>-47.76</td>\\n\",\n       \"      <td>26.05</td>\\n\",\n       \"      <td>4.30</td>\\n\",\n       \"      <td>19839.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2</th>\\n\",\n       \"      <td>600711</td>\\n\",\n       \"      <td>盛屯矿业</td>\\n\",\n       \"      <td>小金属</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>26.15</td>\\n\",\n       \"      <td>14.97</td>\\n\",\n       \"      <td>16.77</td>\\n\",\n       \"      <td>1125400.88</td>\\n\",\n       \"      <td>590581.00</td>\\n\",\n       \"      <td>76470.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.11</td>\\n\",\n       \"      <td>19960531</td>\\n\",\n       \"      <td>104130.27</td>\\n\",\n       \"      <td>0.62</td>\\n\",\n       \"      <td>62.61</td>\\n\",\n       \"      <td>223.67</td>\\n\",\n       \"      <td>6.85</td>\\n\",\n       \"      <td>2.95</td>\\n\",\n       \"      <td>106700.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>3</th>\\n\",\n       \"      <td>002160</td>\\n\",\n       \"      <td>常铝股份</td>\\n\",\n       \"      <td>铝</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>32.31</td>\\n\",\n       \"      <td>4.72</td>\\n\",\n       \"      <td>7.24</td>\\n\",\n       \"      <td>622252.69</td>\\n\",\n       \"      <td>297916.59</td>\\n\",\n       \"      <td>151107.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1.45</td>\\n\",\n       \"      <td>20070821</td>\\n\",\n       \"      <td>27155.90</td>\\n\",\n       \"      <td>0.37</td>\\n\",\n       \"      <td>40.03</td>\\n\",\n       \"      <td>56.07</td>\\n\",\n       \"      <td>17.64</td>\\n\",\n       \"      <td>3.84</td>\\n\",\n       \"      <td>50000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>4</th>\\n\",\n       \"      <td>000717</td>\\n\",\n       \"      <td>韶钢松山</td>\\n\",\n       \"      <td>普钢</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>6.32</td>\\n\",\n       \"      <td>24.20</td>\\n\",\n       \"      <td>24.20</td>\\n\",\n       \"      <td>1441538.00</td>\\n\",\n       \"      <td>440514.44</td>\\n\",\n       \"      <td>801547.88</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.35</td>\\n\",\n       \"      <td>19970508</td>\\n\",\n       \"      <td>-331470.38</td>\\n\",\n       \"      <td>-1.37</td>\\n\",\n       \"      <td>86.35</td>\\n\",\n       \"      <td>2381.13</td>\\n\",\n       \"      <td>13.26</td>\\n\",\n       \"      <td>9.66</td>\\n\",\n       \"      <td>132008.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>5 rows × 24 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"         code  name industry area      pe  outstanding  totals  totalAssets  \\\\\\n\",\n       \"index                                                                         \\n\",\n       \"0      603897   N长城     电气设备   浙江   25.57         0.45    1.78    131807.23   \\n\",\n       \"1      300356  光一科技     电气设备   江苏  206.51         3.69    4.15    208679.95   \\n\",\n       \"2      600711  盛屯矿业      小金属   福建   26.15        14.97   16.77   1125400.88   \\n\",\n       \"3      002160  常铝股份        铝   江苏   32.31         4.72    7.24    622252.69   \\n\",\n       \"4      000717  韶钢松山       普钢   广东    6.32        24.20   24.20   1441538.00   \\n\",\n       \"\\n\",\n       \"       liquidAssets  fixedAssets     ...        pb  timeToMarket       undp  \\\\\\n\",\n       \"index                                ...                                      \\n\",\n       \"0         117523.63     10988.37     ...      4.27      20180410   35286.05   \\n\",\n       \"1          97810.21     17068.50     ...      2.49      20121009   28831.28   \\n\",\n       \"2         590581.00     76470.36     ...      3.11      19960531  104130.27   \\n\",\n       \"3         297916.59    151107.36     ...      1.45      20070821   27155.90   \\n\",\n       \"4         440514.44    801547.88     ...      5.35      19970508 -331470.38   \\n\",\n       \"\\n\",\n       \"       perundp    rev   profit    gpr   npr   holders        更新日期  \\n\",\n       \"index                                                              \\n\",\n       \"0         1.98  41.98    55.84   8.19  3.87   42986.0  2018-04-11  \\n\",\n       \"1         0.69 -39.02   -47.76  26.05  4.30   19839.0  2018-04-11  \\n\",\n       \"2         0.62  62.61   223.67   6.85  2.95  106700.0  2018-04-11  \\n\",\n       \"3         0.37  40.03    56.07  17.64  3.84   50000.0  2018-04-11  \\n\",\n       \"4        -1.37  86.35  2381.13  13.26  9.66  132008.0  2018-04-11  \\n\",\n       \"\\n\",\n       \"[5 rows x 24 columns]\"\n      ]\n     },\n     \"execution_count\": 26,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"basic_df.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 28,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"basic_df['timeToMarket']=pd.to_datetime(basic_df['timeToMarket'],format='%Y%m%d')\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 29,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>code</th>\\n\",\n       \"      <th>name</th>\\n\",\n       \"      <th>industry</th>\\n\",\n       \"      <th>area</th>\\n\",\n       \"      <th>pe</th>\\n\",\n       \"      <th>outstanding</th>\\n\",\n       \"      <th>totals</th>\\n\",\n       \"      <th>totalAssets</th>\\n\",\n       \"      <th>liquidAssets</th>\\n\",\n       \"      <th>fixedAssets</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>pb</th>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th>undp</th>\\n\",\n       \"      <th>perundp</th>\\n\",\n       \"      <th>rev</th>\\n\",\n       \"      <th>profit</th>\\n\",\n       \"      <th>gpr</th>\\n\",\n       \"      <th>npr</th>\\n\",\n       \"      <th>holders</th>\\n\",\n       \"      <th>更新日期</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>index</th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>603897</td>\\n\",\n       \"      <td>N长城</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>25.57</td>\\n\",\n       \"      <td>0.45</td>\\n\",\n       \"      <td>1.78</td>\\n\",\n       \"      <td>131807.23</td>\\n\",\n       \"      <td>117523.63</td>\\n\",\n       \"      <td>10988.37</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.27</td>\\n\",\n       \"      <td>2018-04-10</td>\\n\",\n       \"      <td>35286.05</td>\\n\",\n       \"      <td>1.98</td>\\n\",\n       \"      <td>41.98</td>\\n\",\n       \"      <td>55.84</td>\\n\",\n       \"      <td>8.19</td>\\n\",\n       \"      <td>3.87</td>\\n\",\n       \"      <td>42986.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>300356</td>\\n\",\n       \"      <td>光一科技</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>206.51</td>\\n\",\n       \"      <td>3.69</td>\\n\",\n       \"      <td>4.15</td>\\n\",\n       \"      <td>208679.95</td>\\n\",\n       \"      <td>97810.21</td>\\n\",\n       \"      <td>17068.50</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.49</td>\\n\",\n       \"      <td>2012-10-09</td>\\n\",\n       \"      <td>28831.28</td>\\n\",\n       \"      <td>0.69</td>\\n\",\n       \"      <td>-39.02</td>\\n\",\n       \"      <td>-47.76</td>\\n\",\n       \"      <td>26.05</td>\\n\",\n       \"      <td>4.30</td>\\n\",\n       \"      <td>19839.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2</th>\\n\",\n       \"      <td>600711</td>\\n\",\n       \"      <td>盛屯矿业</td>\\n\",\n       \"      <td>小金属</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>26.15</td>\\n\",\n       \"      <td>14.97</td>\\n\",\n       \"      <td>16.77</td>\\n\",\n       \"      <td>1125400.88</td>\\n\",\n       \"      <td>590581.00</td>\\n\",\n       \"      <td>76470.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.11</td>\\n\",\n       \"      <td>1996-05-31</td>\\n\",\n       \"      <td>104130.27</td>\\n\",\n       \"      <td>0.62</td>\\n\",\n       \"      <td>62.61</td>\\n\",\n       \"      <td>223.67</td>\\n\",\n       \"      <td>6.85</td>\\n\",\n       \"      <td>2.95</td>\\n\",\n       \"      <td>106700.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>3</th>\\n\",\n       \"      <td>002160</td>\\n\",\n       \"      <td>常铝股份</td>\\n\",\n       \"      <td>铝</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>32.31</td>\\n\",\n       \"      <td>4.72</td>\\n\",\n       \"      <td>7.24</td>\\n\",\n       \"      <td>622252.69</td>\\n\",\n       \"      <td>297916.59</td>\\n\",\n       \"      <td>151107.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1.45</td>\\n\",\n       \"      <td>2007-08-21</td>\\n\",\n       \"      <td>27155.90</td>\\n\",\n       \"      <td>0.37</td>\\n\",\n       \"      <td>40.03</td>\\n\",\n       \"      <td>56.07</td>\\n\",\n       \"      <td>17.64</td>\\n\",\n       \"      <td>3.84</td>\\n\",\n       \"      <td>50000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>4</th>\\n\",\n       \"      <td>000717</td>\\n\",\n       \"      <td>韶钢松山</td>\\n\",\n       \"      <td>普钢</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>6.32</td>\\n\",\n       \"      <td>24.20</td>\\n\",\n       \"      <td>24.20</td>\\n\",\n       \"      <td>1441538.00</td>\\n\",\n       \"      <td>440514.44</td>\\n\",\n       \"      <td>801547.88</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.35</td>\\n\",\n       \"      <td>1997-05-08</td>\\n\",\n       \"      <td>-331470.38</td>\\n\",\n       \"      <td>-1.37</td>\\n\",\n       \"      <td>86.35</td>\\n\",\n       \"      <td>2381.13</td>\\n\",\n       \"      <td>13.26</td>\\n\",\n       \"      <td>9.66</td>\\n\",\n       \"      <td>132008.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>5 rows × 24 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"         code  name industry area      pe  outstanding  totals  totalAssets  \\\\\\n\",\n       \"index                                                                         \\n\",\n       \"0      603897   N长城     电气设备   浙江   25.57         0.45    1.78    131807.23   \\n\",\n       \"1      300356  光一科技     电气设备   江苏  206.51         3.69    4.15    208679.95   \\n\",\n       \"2      600711  盛屯矿业      小金属   福建   26.15        14.97   16.77   1125400.88   \\n\",\n       \"3      002160  常铝股份        铝   江苏   32.31         4.72    7.24    622252.69   \\n\",\n       \"4      000717  韶钢松山       普钢   广东    6.32        24.20   24.20   1441538.00   \\n\",\n       \"\\n\",\n       \"       liquidAssets  fixedAssets     ...        pb  timeToMarket       undp  \\\\\\n\",\n       \"index                                ...                                      \\n\",\n       \"0         117523.63     10988.37     ...      4.27    2018-04-10   35286.05   \\n\",\n       \"1          97810.21     17068.50     ...      2.49    2012-10-09   28831.28   \\n\",\n       \"2         590581.00     76470.36     ...      3.11    1996-05-31  104130.27   \\n\",\n       \"3         297916.59    151107.36     ...      1.45    2007-08-21   27155.90   \\n\",\n       \"4         440514.44    801547.88     ...      5.35    1997-05-08 -331470.38   \\n\",\n       \"\\n\",\n       \"       perundp    rev   profit    gpr   npr   holders        更新日期  \\n\",\n       \"index                                                              \\n\",\n       \"0         1.98  41.98    55.84   8.19  3.87   42986.0  2018-04-11  \\n\",\n       \"1         0.69 -39.02   -47.76  26.05  4.30   19839.0  2018-04-11  \\n\",\n       \"2         0.62  62.61   223.67   6.85  2.95  106700.0  2018-04-11  \\n\",\n       \"3         0.37  40.03    56.07  17.64  3.84   50000.0  2018-04-11  \\n\",\n       \"4        -1.37  86.35  2381.13  13.26  9.66  132008.0  2018-04-11  \\n\",\n       \"\\n\",\n       \"[5 rows x 24 columns]\"\n      ]\n     },\n     \"execution_count\": 29,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"basic_df.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 36,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>code</th>\\n\",\n       \"      <th>name</th>\\n\",\n       \"      <th>industry</th>\\n\",\n       \"      <th>area</th>\\n\",\n       \"      <th>pe</th>\\n\",\n       \"      <th>outstanding</th>\\n\",\n       \"      <th>totals</th>\\n\",\n       \"      <th>totalAssets</th>\\n\",\n       \"      <th>liquidAssets</th>\\n\",\n       \"      <th>fixedAssets</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>pb</th>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th>undp</th>\\n\",\n       \"      <th>perundp</th>\\n\",\n       \"      <th>rev</th>\\n\",\n       \"      <th>profit</th>\\n\",\n       \"      <th>gpr</th>\\n\",\n       \"      <th>npr</th>\\n\",\n       \"      <th>holders</th>\\n\",\n       \"      <th>更新日期</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-04-10</th>\\n\",\n       \"      <td>603897</td>\\n\",\n       \"      <td>N长城</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>25.57</td>\\n\",\n       \"      <td>0.45</td>\\n\",\n       \"      <td>1.78</td>\\n\",\n       \"      <td>131807.23</td>\\n\",\n       \"      <td>117523.63</td>\\n\",\n       \"      <td>10988.37</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.27</td>\\n\",\n       \"      <td>2018-04-10</td>\\n\",\n       \"      <td>35286.05</td>\\n\",\n       \"      <td>1.98</td>\\n\",\n       \"      <td>41.98</td>\\n\",\n       \"      <td>55.84</td>\\n\",\n       \"      <td>8.19</td>\\n\",\n       \"      <td>3.87</td>\\n\",\n       \"      <td>42986.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2012-10-09</th>\\n\",\n       \"      <td>300356</td>\\n\",\n       \"      <td>光一科技</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>206.51</td>\\n\",\n       \"      <td>3.69</td>\\n\",\n       \"      <td>4.15</td>\\n\",\n       \"      <td>208679.95</td>\\n\",\n       \"      <td>97810.21</td>\\n\",\n       \"      <td>17068.50</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.49</td>\\n\",\n       \"      <td>2012-10-09</td>\\n\",\n       \"      <td>28831.28</td>\\n\",\n       \"      <td>0.69</td>\\n\",\n       \"      <td>-39.02</td>\\n\",\n       \"      <td>-47.76</td>\\n\",\n       \"      <td>26.05</td>\\n\",\n       \"      <td>4.30</td>\\n\",\n       \"      <td>19839.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1996-05-31</th>\\n\",\n       \"      <td>600711</td>\\n\",\n       \"      <td>盛屯矿业</td>\\n\",\n       \"      <td>小金属</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>26.15</td>\\n\",\n       \"      <td>14.97</td>\\n\",\n       \"      <td>16.77</td>\\n\",\n       \"      <td>1125400.88</td>\\n\",\n       \"      <td>590581.00</td>\\n\",\n       \"      <td>76470.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.11</td>\\n\",\n       \"      <td>1996-05-31</td>\\n\",\n       \"      <td>104130.27</td>\\n\",\n       \"      <td>0.62</td>\\n\",\n       \"      <td>62.61</td>\\n\",\n       \"      <td>223.67</td>\\n\",\n       \"      <td>6.85</td>\\n\",\n       \"      <td>2.95</td>\\n\",\n       \"      <td>106700.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2007-08-21</th>\\n\",\n       \"      <td>002160</td>\\n\",\n       \"      <td>常铝股份</td>\\n\",\n       \"      <td>铝</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>32.31</td>\\n\",\n       \"      <td>4.72</td>\\n\",\n       \"      <td>7.24</td>\\n\",\n       \"      <td>622252.69</td>\\n\",\n       \"      <td>297916.59</td>\\n\",\n       \"      <td>151107.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1.45</td>\\n\",\n       \"      <td>2007-08-21</td>\\n\",\n       \"      <td>27155.90</td>\\n\",\n       \"      <td>0.37</td>\\n\",\n       \"      <td>40.03</td>\\n\",\n       \"      <td>56.07</td>\\n\",\n       \"      <td>17.64</td>\\n\",\n       \"      <td>3.84</td>\\n\",\n       \"      <td>50000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1997-05-08</th>\\n\",\n       \"      <td>000717</td>\\n\",\n       \"      <td>韶钢松山</td>\\n\",\n       \"      <td>普钢</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>6.32</td>\\n\",\n       \"      <td>24.20</td>\\n\",\n       \"      <td>24.20</td>\\n\",\n       \"      <td>1441538.00</td>\\n\",\n       \"      <td>440514.44</td>\\n\",\n       \"      <td>801547.88</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.35</td>\\n\",\n       \"      <td>1997-05-08</td>\\n\",\n       \"      <td>-331470.38</td>\\n\",\n       \"      <td>-1.37</td>\\n\",\n       \"      <td>86.35</td>\\n\",\n       \"      <td>2381.13</td>\\n\",\n       \"      <td>13.26</td>\\n\",\n       \"      <td>9.66</td>\\n\",\n       \"      <td>132008.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1996-05-03</th>\\n\",\n       \"      <td>600896</td>\\n\",\n       \"      <td>览海投资</td>\\n\",\n       \"      <td>水运</td>\\n\",\n       \"      <td>海南</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>5.77</td>\\n\",\n       \"      <td>8.69</td>\\n\",\n       \"      <td>448937.09</td>\\n\",\n       \"      <td>363976.13</td>\\n\",\n       \"      <td>453.85</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.74</td>\\n\",\n       \"      <td>1996-05-03</td>\\n\",\n       \"      <td>-60134.50</td>\\n\",\n       \"      <td>-0.69</td>\\n\",\n       \"      <td>-94.80</td>\\n\",\n       \"      <td>18.38</td>\\n\",\n       \"      <td>91.85</td>\\n\",\n       \"      <td>-416.75</td>\\n\",\n       \"      <td>43837.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1997-06-25</th>\\n\",\n       \"      <td>000819</td>\\n\",\n       \"      <td>岳阳兴长</td>\\n\",\n       \"      <td>石油加工</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>2.71</td>\\n\",\n       \"      <td>2.71</td>\\n\",\n       \"      <td>81995.88</td>\\n\",\n       \"      <td>59217.63</td>\\n\",\n       \"      <td>17258.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.92</td>\\n\",\n       \"      <td>1997-06-25</td>\\n\",\n       \"      <td>19668.43</td>\\n\",\n       \"      <td>0.72</td>\\n\",\n       \"      <td>16.55</td>\\n\",\n       \"      <td>-132.47</td>\\n\",\n       \"      <td>8.32</td>\\n\",\n       \"      <td>-0.62</td>\\n\",\n       \"      <td>31400.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-03-26</th>\\n\",\n       \"      <td>600929</td>\\n\",\n       \"      <td>湖南盐业</td>\\n\",\n       \"      <td>食品</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>72.52</td>\\n\",\n       \"      <td>1.50</td>\\n\",\n       \"      <td>9.18</td>\\n\",\n       \"      <td>310491.63</td>\\n\",\n       \"      <td>78859.31</td>\\n\",\n       \"      <td>139873.81</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.36</td>\\n\",\n       \"      <td>2018-03-26</td>\\n\",\n       \"      <td>71625.13</td>\\n\",\n       \"      <td>0.78</td>\\n\",\n       \"      <td>1.30</td>\\n\",\n       \"      <td>15.06</td>\\n\",\n       \"      <td>47.71</td>\\n\",\n       \"      <td>7.24</td>\\n\",\n       \"      <td>140295.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2010-04-30</th>\\n\",\n       \"      <td>300076</td>\\n\",\n       \"      <td>GQY视讯</td>\\n\",\n       \"      <td>电脑设备</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>3.68</td>\\n\",\n       \"      <td>4.24</td>\\n\",\n       \"      <td>116227.61</td>\\n\",\n       \"      <td>76413.81</td>\\n\",\n       \"      <td>21807.57</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.35</td>\\n\",\n       \"      <td>2010-04-30</td>\\n\",\n       \"      <td>10759.37</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>-40.70</td>\\n\",\n       \"      <td>-1298.93</td>\\n\",\n       \"      <td>35.65</td>\\n\",\n       \"      <td>-29.91</td>\\n\",\n       \"      <td>41000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2007-08-03</th>\\n\",\n       \"      <td>002144</td>\\n\",\n       \"      <td>宏达高科</td>\\n\",\n       \"      <td>纺织</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>26.28</td>\\n\",\n       \"      <td>1.36</td>\\n\",\n       \"      <td>1.77</td>\\n\",\n       \"      <td>199379.38</td>\\n\",\n       \"      <td>51652.78</td>\\n\",\n       \"      <td>28723.63</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1.51</td>\\n\",\n       \"      <td>2007-08-03</td>\\n\",\n       \"      <td>52805.73</td>\\n\",\n       \"      <td>2.99</td>\\n\",\n       \"      <td>12.73</td>\\n\",\n       \"      <td>-6.03</td>\\n\",\n       \"      <td>29.92</td>\\n\",\n       \"      <td>15.71</td>\\n\",\n       \"      <td>21057.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-16</th>\\n\",\n       \"      <td>300621</td>\\n\",\n       \"      <td>维业股份</td>\\n\",\n       \"      <td>装修装饰</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>37.99</td>\\n\",\n       \"      <td>0.43</td>\\n\",\n       \"      <td>1.39</td>\\n\",\n       \"      <td>186181.06</td>\\n\",\n       \"      <td>169977.59</td>\\n\",\n       \"      <td>2515.88</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.41</td>\\n\",\n       \"      <td>2017-03-16</td>\\n\",\n       \"      <td>26666.50</td>\\n\",\n       \"      <td>1.92</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>13.34</td>\\n\",\n       \"      <td>4.22</td>\\n\",\n       \"      <td>19044.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-09-20</th>\\n\",\n       \"      <td>603106</td>\\n\",\n       \"      <td>恒银金融</td>\\n\",\n       \"      <td>电脑设备</td>\\n\",\n       \"      <td>天津</td>\\n\",\n       \"      <td>45.40</td>\\n\",\n       \"      <td>0.70</td>\\n\",\n       \"      <td>2.80</td>\\n\",\n       \"      <td>212309.42</td>\\n\",\n       \"      <td>190471.27</td>\\n\",\n       \"      <td>16428.07</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.80</td>\\n\",\n       \"      <td>2017-09-20</td>\\n\",\n       \"      <td>27721.10</td>\\n\",\n       \"      <td>0.99</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>33.95</td>\\n\",\n       \"      <td>11.23</td>\\n\",\n       \"      <td>36000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-15</th>\\n\",\n       \"      <td>603811</td>\\n\",\n       \"      <td>诚意药业</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>38.80</td>\\n\",\n       \"      <td>0.57</td>\\n\",\n       \"      <td>0.85</td>\\n\",\n       \"      <td>67298.32</td>\\n\",\n       \"      <td>46722.62</td>\\n\",\n       \"      <td>12191.86</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.48</td>\\n\",\n       \"      <td>2017-03-15</td>\\n\",\n       \"      <td>9561.42</td>\\n\",\n       \"      <td>1.12</td>\\n\",\n       \"      <td>6.12</td>\\n\",\n       \"      <td>1.57</td>\\n\",\n       \"      <td>52.11</td>\\n\",\n       \"      <td>20.31</td>\\n\",\n       \"      <td>10574.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-03-28</th>\\n\",\n       \"      <td>002930</td>\\n\",\n       \"      <td>宏川智慧</td>\\n\",\n       \"      <td>仓储物流</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>62.90</td>\\n\",\n       \"      <td>0.61</td>\\n\",\n       \"      <td>2.43</td>\\n\",\n       \"      <td>187270.80</td>\\n\",\n       \"      <td>13539.20</td>\\n\",\n       \"      <td>103894.40</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.66</td>\\n\",\n       \"      <td>2018-03-28</td>\\n\",\n       \"      <td>38270.21</td>\\n\",\n       \"      <td>1.57</td>\\n\",\n       \"      <td>-0.74</td>\\n\",\n       \"      <td>10.33</td>\\n\",\n       \"      <td>56.59</td>\\n\",\n       \"      <td>25.41</td>\\n\",\n       \"      <td>115500.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-09-22</th>\\n\",\n       \"      <td>603963</td>\\n\",\n       \"      <td>大理药业</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>云南</td>\\n\",\n       \"      <td>73.92</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>62622.20</td>\\n\",\n       \"      <td>44925.30</td>\\n\",\n       \"      <td>10986.69</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.40</td>\\n\",\n       \"      <td>2017-09-22</td>\\n\",\n       \"      <td>9541.13</td>\\n\",\n       \"      <td>0.95</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>63.85</td>\\n\",\n       \"      <td>20.00</td>\\n\",\n       \"      <td>27488.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-03-30</th>\\n\",\n       \"      <td>603214</td>\\n\",\n       \"      <td>爱婴室</td>\\n\",\n       \"      <td>百货</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>49.45</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>76961.15</td>\\n\",\n       \"      <td>61297.16</td>\\n\",\n       \"      <td>7078.72</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>9.27</td>\\n\",\n       \"      <td>2018-03-30</td>\\n\",\n       \"      <td>25456.17</td>\\n\",\n       \"      <td>2.55</td>\\n\",\n       \"      <td>14.06</td>\\n\",\n       \"      <td>26.47</td>\\n\",\n       \"      <td>28.41</td>\\n\",\n       \"      <td>5.18</td>\\n\",\n       \"      <td>26639.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-17</th>\\n\",\n       \"      <td>300595</td>\\n\",\n       \"      <td>欧普康视</td>\\n\",\n       \"      <td>医疗保健</td>\\n\",\n       \"      <td>安徽</td>\\n\",\n       \"      <td>54.16</td>\\n\",\n       \"      <td>0.76</td>\\n\",\n       \"      <td>1.24</td>\\n\",\n       \"      <td>84769.46</td>\\n\",\n       \"      <td>71856.96</td>\\n\",\n       \"      <td>3970.03</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>10.12</td>\\n\",\n       \"      <td>2017-01-17</td>\\n\",\n       \"      <td>20604.49</td>\\n\",\n       \"      <td>1.66</td>\\n\",\n       \"      <td>31.61</td>\\n\",\n       \"      <td>29.56</td>\\n\",\n       \"      <td>76.06</td>\\n\",\n       \"      <td>50.72</td>\\n\",\n       \"      <td>6781.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-21</th>\\n\",\n       \"      <td>300627</td>\\n\",\n       \"      <td>华测导航</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>85.66</td>\\n\",\n       \"      <td>0.50</td>\\n\",\n       \"      <td>1.23</td>\\n\",\n       \"      <td>95269.30</td>\\n\",\n       \"      <td>88869.28</td>\\n\",\n       \"      <td>2105.35</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>9.13</td>\\n\",\n       \"      <td>2017-03-21</td>\\n\",\n       \"      <td>19288.67</td>\\n\",\n       \"      <td>1.56</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>54.56</td>\\n\",\n       \"      <td>14.97</td>\\n\",\n       \"      <td>16380.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-02-08</th>\\n\",\n       \"      <td>603637</td>\\n\",\n       \"      <td>镇海股份</td>\\n\",\n       \"      <td>建筑施工</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>66.69</td>\\n\",\n       \"      <td>0.33</td>\\n\",\n       \"      <td>1.33</td>\\n\",\n       \"      <td>86330.46</td>\\n\",\n       \"      <td>76018.32</td>\\n\",\n       \"      <td>5968.18</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.33</td>\\n\",\n       \"      <td>2017-02-08</td>\\n\",\n       \"      <td>20656.95</td>\\n\",\n       \"      <td>1.55</td>\\n\",\n       \"      <td>-37.75</td>\\n\",\n       \"      <td>-28.91</td>\\n\",\n       \"      <td>31.54</td>\\n\",\n       \"      <td>22.63</td>\\n\",\n       \"      <td>9897.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-10-10</th>\\n\",\n       \"      <td>300705</td>\\n\",\n       \"      <td>九典制药</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>89.94</td>\\n\",\n       \"      <td>0.29</td>\\n\",\n       \"      <td>1.17</td>\\n\",\n       \"      <td>76920.25</td>\\n\",\n       \"      <td>51869.26</td>\\n\",\n       \"      <td>13084.78</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>9.34</td>\\n\",\n       \"      <td>2017-10-10</td>\\n\",\n       \"      <td>12709.62</td>\\n\",\n       \"      <td>1.08</td>\\n\",\n       \"      <td>42.01</td>\\n\",\n       \"      <td>25.76</td>\\n\",\n       \"      <td>51.93</td>\\n\",\n       \"      <td>12.83</td>\\n\",\n       \"      <td>21243.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-10-31</th>\\n\",\n       \"      <td>603289</td>\\n\",\n       \"      <td>泰瑞机器</td>\\n\",\n       \"      <td>专用机械</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>45.82</td>\\n\",\n       \"      <td>0.51</td>\\n\",\n       \"      <td>2.04</td>\\n\",\n       \"      <td>88554.82</td>\\n\",\n       \"      <td>68437.21</td>\\n\",\n       \"      <td>15267.82</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.65</td>\\n\",\n       \"      <td>2017-10-31</td>\\n\",\n       \"      <td>26118.49</td>\\n\",\n       \"      <td>1.28</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>30.63</td>\\n\",\n       \"      <td>12.40</td>\\n\",\n       \"      <td>48514.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-09</th>\\n\",\n       \"      <td>603229</td>\\n\",\n       \"      <td>奥翔药业</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>93.03</td>\\n\",\n       \"      <td>0.40</td>\\n\",\n       \"      <td>1.60</td>\\n\",\n       \"      <td>68624.13</td>\\n\",\n       \"      <td>45903.00</td>\\n\",\n       \"      <td>14470.87</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.22</td>\\n\",\n       \"      <td>2017-05-09</td>\\n\",\n       \"      <td>14151.70</td>\\n\",\n       \"      <td>0.88</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>60.63</td>\\n\",\n       \"      <td>22.65</td>\\n\",\n       \"      <td>14088.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-06-02</th>\\n\",\n       \"      <td>300660</td>\\n\",\n       \"      <td>江苏雷利</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>26.10</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.02</td>\\n\",\n       \"      <td>280316.22</td>\\n\",\n       \"      <td>256656.80</td>\\n\",\n       \"      <td>16994.20</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.21</td>\\n\",\n       \"      <td>2017-06-02</td>\\n\",\n       \"      <td>33226.21</td>\\n\",\n       \"      <td>3.26</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>26.74</td>\\n\",\n       \"      <td>12.07</td>\\n\",\n       \"      <td>18283.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2016-08-02</th>\\n\",\n       \"      <td>300529</td>\\n\",\n       \"      <td>健帆生物</td>\\n\",\n       \"      <td>医疗保健</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>62.99</td>\\n\",\n       \"      <td>1.06</td>\\n\",\n       \"      <td>4.18</td>\\n\",\n       \"      <td>170240.02</td>\\n\",\n       \"      <td>123065.95</td>\\n\",\n       \"      <td>32537.78</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>12.85</td>\\n\",\n       \"      <td>2016-08-02</td>\\n\",\n       \"      <td>48161.67</td>\\n\",\n       \"      <td>1.15</td>\\n\",\n       \"      <td>32.16</td>\\n\",\n       \"      <td>40.72</td>\\n\",\n       \"      <td>84.14</td>\\n\",\n       \"      <td>39.58</td>\\n\",\n       \"      <td>22527.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-09-22</th>\\n\",\n       \"      <td>002900</td>\\n\",\n       \"      <td>哈三联</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>黑龙江</td>\\n\",\n       \"      <td>44.11</td>\\n\",\n       \"      <td>0.53</td>\\n\",\n       \"      <td>2.11</td>\\n\",\n       \"      <td>218374.66</td>\\n\",\n       \"      <td>135898.92</td>\\n\",\n       \"      <td>68163.18</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.35</td>\\n\",\n       \"      <td>2017-09-22</td>\\n\",\n       \"      <td>39189.78</td>\\n\",\n       \"      <td>1.86</td>\\n\",\n       \"      <td>50.99</td>\\n\",\n       \"      <td>3.36</td>\\n\",\n       \"      <td>74.17</td>\\n\",\n       \"      <td>15.76</td>\\n\",\n       \"      <td>38400.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-19</th>\\n\",\n       \"      <td>002873</td>\\n\",\n       \"      <td>新天药业</td>\\n\",\n       \"      <td>中成药</td>\\n\",\n       \"      <td>贵州</td>\\n\",\n       \"      <td>44.54</td>\\n\",\n       \"      <td>0.17</td>\\n\",\n       \"      <td>0.69</td>\\n\",\n       \"      <td>91925.27</td>\\n\",\n       \"      <td>57405.90</td>\\n\",\n       \"      <td>21257.95</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.89</td>\\n\",\n       \"      <td>2017-05-19</td>\\n\",\n       \"      <td>18090.75</td>\\n\",\n       \"      <td>2.63</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>81.09</td>\\n\",\n       \"      <td>11.75</td>\\n\",\n       \"      <td>9615.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2010-02-03</th>\\n\",\n       \"      <td>002350</td>\\n\",\n       \"      <td>北京科锐</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>184.53</td>\\n\",\n       \"      <td>3.76</td>\\n\",\n       \"      <td>3.87</td>\\n\",\n       \"      <td>280886.13</td>\\n\",\n       \"      <td>197356.56</td>\\n\",\n       \"      <td>42124.90</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.11</td>\\n\",\n       \"      <td>2010-02-03</td>\\n\",\n       \"      <td>34932.31</td>\\n\",\n       \"      <td>0.90</td>\\n\",\n       \"      <td>23.04</td>\\n\",\n       \"      <td>-44.28</td>\\n\",\n       \"      <td>23.27</td>\\n\",\n       \"      <td>1.03</td>\\n\",\n       \"      <td>52854.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2008-05-16</th>\\n\",\n       \"      <td>002235</td>\\n\",\n       \"      <td>安妮股份</td>\\n\",\n       \"      <td>造纸</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>58.10</td>\\n\",\n       \"      <td>3.34</td>\\n\",\n       \"      <td>4.16</td>\\n\",\n       \"      <td>272703.47</td>\\n\",\n       \"      <td>126430.06</td>\\n\",\n       \"      <td>19098.98</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.01</td>\\n\",\n       \"      <td>2008-05-16</td>\\n\",\n       \"      <td>5426.16</td>\\n\",\n       \"      <td>0.13</td>\\n\",\n       \"      <td>66.06</td>\\n\",\n       \"      <td>473.50</td>\\n\",\n       \"      <td>31.63</td>\\n\",\n       \"      <td>14.46</td>\\n\",\n       \"      <td>30659.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-08-10</th>\\n\",\n       \"      <td>300688</td>\\n\",\n       \"      <td>创业黑马</td>\\n\",\n       \"      <td>综合类</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>171.33</td>\\n\",\n       \"      <td>0.17</td>\\n\",\n       \"      <td>0.68</td>\\n\",\n       \"      <td>41396.55</td>\\n\",\n       \"      <td>40351.37</td>\\n\",\n       \"      <td>380.64</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>14.13</td>\\n\",\n       \"      <td>2017-08-10</td>\\n\",\n       \"      <td>6212.93</td>\\n\",\n       \"      <td>0.91</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>56.91</td>\\n\",\n       \"      <td>17.97</td>\\n\",\n       \"      <td>15720.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-02-26</th>\\n\",\n       \"      <td>603712</td>\\n\",\n       \"      <td>七一二</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>天津</td>\\n\",\n       \"      <td>363.05</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>7.72</td>\\n\",\n       \"      <td>348015.50</td>\\n\",\n       \"      <td>277392.63</td>\\n\",\n       \"      <td>57633.35</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>21.08</td>\\n\",\n       \"      <td>2018-02-26</td>\\n\",\n       \"      <td>20558.85</td>\\n\",\n       \"      <td>0.27</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>49.57</td>\\n\",\n       \"      <td>8.39</td>\\n\",\n       \"      <td>88473.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2014-09-10</th>\\n\",\n       \"      <td>300392</td>\\n\",\n       \"      <td>腾信股份</td>\\n\",\n       \"      <td>互联网</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>192.02</td>\\n\",\n       \"      <td>1.64</td>\\n\",\n       \"      <td>3.84</td>\\n\",\n       \"      <td>150430.13</td>\\n\",\n       \"      <td>116865.26</td>\\n\",\n       \"      <td>14213.17</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.38</td>\\n\",\n       \"      <td>2014-09-10</td>\\n\",\n       \"      <td>11726.03</td>\\n\",\n       \"      <td>0.31</td>\\n\",\n       \"      <td>17.47</td>\\n\",\n       \"      <td>324.13</td>\\n\",\n       \"      <td>10.24</td>\\n\",\n       \"      <td>1.53</td>\\n\",\n       \"      <td>27346.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1999-03-25</th>\\n\",\n       \"      <td>600209</td>\\n\",\n       \"      <td>罗顿发展</td>\\n\",\n       \"      <td>综合类</td>\\n\",\n       \"      <td>海南</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>4.26</td>\\n\",\n       \"      <td>4.39</td>\\n\",\n       \"      <td>86705.93</td>\\n\",\n       \"      <td>23242.80</td>\\n\",\n       \"      <td>16197.40</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>6.31</td>\\n\",\n       \"      <td>1999-03-25</td>\\n\",\n       \"      <td>5083.85</td>\\n\",\n       \"      <td>0.12</td>\\n\",\n       \"      <td>53.01</td>\\n\",\n       \"      <td>51.86</td>\\n\",\n       \"      <td>4.02</td>\\n\",\n       \"      <td>-30.81</td>\\n\",\n       \"      <td>59619.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1997-06-11</th>\\n\",\n       \"      <td>000735</td>\\n\",\n       \"      <td>罗 牛 山</td>\\n\",\n       \"      <td>农业综合</td>\\n\",\n       \"      <td>海南</td>\\n\",\n       \"      <td>54.68</td>\\n\",\n       \"      <td>10.60</td>\\n\",\n       \"      <td>11.52</td>\\n\",\n       \"      <td>618940.00</td>\\n\",\n       \"      <td>207991.38</td>\\n\",\n       \"      <td>180241.88</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.02</td>\\n\",\n       \"      <td>1997-06-11</td>\\n\",\n       \"      <td>72196.31</td>\\n\",\n       \"      <td>0.63</td>\\n\",\n       \"      <td>116.29</td>\\n\",\n       \"      <td>85.11</td>\\n\",\n       \"      <td>30.92</td>\\n\",\n       \"      <td>13.88</td>\\n\",\n       \"      <td>80000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2010-02-11</th>\\n\",\n       \"      <td>300054</td>\\n\",\n       \"      <td>鼎龙股份</td>\\n\",\n       \"      <td>化工原料</td>\\n\",\n       \"      <td>湖北</td>\\n\",\n       \"      <td>30.93</td>\\n\",\n       \"      <td>6.65</td>\\n\",\n       \"      <td>9.61</td>\\n\",\n       \"      <td>397465.50</td>\\n\",\n       \"      <td>226564.66</td>\\n\",\n       \"      <td>47543.53</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.70</td>\\n\",\n       \"      <td>2010-02-11</td>\\n\",\n       \"      <td>77185.90</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>35.41</td>\\n\",\n       \"      <td>30.84</td>\\n\",\n       \"      <td>36.67</td>\\n\",\n       \"      <td>18.24</td>\\n\",\n       \"      <td>17874.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1997-01-28</th>\\n\",\n       \"      <td>000613</td>\\n\",\n       \"      <td>大东海A</td>\\n\",\n       \"      <td>旅游服务</td>\\n\",\n       \"      <td>海南</td>\\n\",\n       \"      <td>1574.13</td>\\n\",\n       \"      <td>2.66</td>\\n\",\n       \"      <td>3.64</td>\\n\",\n       \"      <td>8746.66</td>\\n\",\n       \"      <td>1382.31</td>\\n\",\n       \"      <td>3908.87</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>58.34</td>\\n\",\n       \"      <td>1997-01-28</td>\\n\",\n       \"      <td>-34110.73</td>\\n\",\n       \"      <td>-0.94</td>\\n\",\n       \"      <td>28.55</td>\\n\",\n       \"      <td>207.44</td>\\n\",\n       \"      <td>60.08</td>\\n\",\n       \"      <td>10.24</td>\\n\",\n       \"      <td>20000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2016-03-22</th>\\n\",\n       \"      <td>300484</td>\\n\",\n       \"      <td>蓝海华腾</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>25.00</td>\\n\",\n       \"      <td>0.94</td>\\n\",\n       \"      <td>2.08</td>\\n\",\n       \"      <td>103367.36</td>\\n\",\n       \"      <td>90467.02</td>\\n\",\n       \"      <td>3893.34</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.06</td>\\n\",\n       \"      <td>2016-03-22</td>\\n\",\n       \"      <td>35972.95</td>\\n\",\n       \"      <td>1.73</td>\\n\",\n       \"      <td>2.54</td>\\n\",\n       \"      <td>0.94</td>\\n\",\n       \"      <td>39.27</td>\\n\",\n       \"      <td>24.14</td>\\n\",\n       \"      <td>14835.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2015-03-18</th>\\n\",\n       \"      <td>300433</td>\\n\",\n       \"      <td>蓝思科技</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>46.39</td>\\n\",\n       \"      <td>4.44</td>\\n\",\n       \"      <td>26.29</td>\\n\",\n       \"      <td>3134060.00</td>\\n\",\n       \"      <td>1093617.13</td>\\n\",\n       \"      <td>1565460.63</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.24</td>\\n\",\n       \"      <td>2015-03-18</td>\\n\",\n       \"      <td>823279.00</td>\\n\",\n       \"      <td>3.13</td>\\n\",\n       \"      <td>41.93</td>\\n\",\n       \"      <td>12.39</td>\\n\",\n       \"      <td>25.00</td>\\n\",\n       \"      <td>5.91</td>\\n\",\n       \"      <td>35003.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-06-06</th>\\n\",\n       \"      <td>300661</td>\\n\",\n       \"      <td>圣邦股份</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>87.02</td>\\n\",\n       \"      <td>0.15</td>\\n\",\n       \"      <td>0.61</td>\\n\",\n       \"      <td>86190.96</td>\\n\",\n       \"      <td>82643.93</td>\\n\",\n       \"      <td>1150.35</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.73</td>\\n\",\n       \"      <td>2017-06-06</td>\\n\",\n       \"      <td>19735.47</td>\\n\",\n       \"      <td>3.24</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>43.62</td>\\n\",\n       \"      <td>16.02</td>\\n\",\n       \"      <td>5677.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-05</th>\\n\",\n       \"      <td>300588</td>\\n\",\n       \"      <td>熙菱信息</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>新疆</td>\\n\",\n       \"      <td>65.77</td>\\n\",\n       \"      <td>0.31</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>84675.42</td>\\n\",\n       \"      <td>79111.96</td>\\n\",\n       \"      <td>736.22</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.19</td>\\n\",\n       \"      <td>2017-01-05</td>\\n\",\n       \"      <td>13293.88</td>\\n\",\n       \"      <td>1.33</td>\\n\",\n       \"      <td>35.56</td>\\n\",\n       \"      <td>85.39</td>\\n\",\n       \"      <td>24.81</td>\\n\",\n       \"      <td>7.47</td>\\n\",\n       \"      <td>10945.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-26</th>\\n\",\n       \"      <td>300603</td>\\n\",\n       \"      <td>立昂技术</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>新疆</td>\\n\",\n       \"      <td>47.46</td>\\n\",\n       \"      <td>0.57</td>\\n\",\n       \"      <td>1.03</td>\\n\",\n       \"      <td>124445.82</td>\\n\",\n       \"      <td>99134.21</td>\\n\",\n       \"      <td>2345.56</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.70</td>\\n\",\n       \"      <td>2017-01-26</td>\\n\",\n       \"      <td>16070.23</td>\\n\",\n       \"      <td>1.57</td>\\n\",\n       \"      <td>247.32</td>\\n\",\n       \"      <td>259.16</td>\\n\",\n       \"      <td>20.03</td>\\n\",\n       \"      <td>8.61</td>\\n\",\n       \"      <td>11752.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-11-09</th>\\n\",\n       \"      <td>300719</td>\\n\",\n       \"      <td>安达维尔</td>\\n\",\n       \"      <td>航空</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>53.58</td>\\n\",\n       \"      <td>0.42</td>\\n\",\n       \"      <td>1.68</td>\\n\",\n       \"      <td>111330.52</td>\\n\",\n       \"      <td>99828.74</td>\\n\",\n       \"      <td>9335.78</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.00</td>\\n\",\n       \"      <td>2017-11-09</td>\\n\",\n       \"      <td>26470.75</td>\\n\",\n       \"      <td>1.58</td>\\n\",\n       \"      <td>10.59</td>\\n\",\n       \"      <td>-1.52</td>\\n\",\n       \"      <td>53.67</td>\\n\",\n       \"      <td>20.42</td>\\n\",\n       \"      <td>25100.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2009-12-16</th>\\n\",\n       \"      <td>002320</td>\\n\",\n       \"      <td>海峡股份</td>\\n\",\n       \"      <td>水运</td>\\n\",\n       \"      <td>海南</td>\\n\",\n       \"      <td>74.69</td>\\n\",\n       \"      <td>4.30</td>\\n\",\n       \"      <td>5.08</td>\\n\",\n       \"      <td>390513.69</td>\\n\",\n       \"      <td>136325.91</td>\\n\",\n       \"      <td>235803.70</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.75</td>\\n\",\n       \"      <td>2009-12-16</td>\\n\",\n       \"      <td>79676.13</td>\\n\",\n       \"      <td>1.57</td>\\n\",\n       \"      <td>26.15</td>\\n\",\n       \"      <td>64.71</td>\\n\",\n       \"      <td>42.13</td>\\n\",\n       \"      <td>23.29</td>\\n\",\n       \"      <td>17700.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-08-03</th>\\n\",\n       \"      <td>300687</td>\\n\",\n       \"      <td>赛意信息</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>52.57</td>\\n\",\n       \"      <td>0.20</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>83921.68</td>\\n\",\n       \"      <td>80942.17</td>\\n\",\n       \"      <td>291.20</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>6.36</td>\\n\",\n       \"      <td>2017-08-03</td>\\n\",\n       \"      <td>14224.57</td>\\n\",\n       \"      <td>1.78</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>31.36</td>\\n\",\n       \"      <td>13.34</td>\\n\",\n       \"      <td>13585.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2010-05-20</th>\\n\",\n       \"      <td>300083</td>\\n\",\n       \"      <td>劲胜智能</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>16.41</td>\\n\",\n       \"      <td>11.91</td>\\n\",\n       \"      <td>14.32</td>\\n\",\n       \"      <td>1144811.25</td>\\n\",\n       \"      <td>728822.63</td>\\n\",\n       \"      <td>176756.77</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>1.64</td>\\n\",\n       \"      <td>2010-05-20</td>\\n\",\n       \"      <td>39800.05</td>\\n\",\n       \"      <td>0.28</td>\\n\",\n       \"      <td>31.86</td>\\n\",\n       \"      <td>424.03</td>\\n\",\n       \"      <td>27.29</td>\\n\",\n       \"      <td>8.96</td>\\n\",\n       \"      <td>47930.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2008-05-08</th>\\n\",\n       \"      <td>002229</td>\\n\",\n       \"      <td>鸿博股份</td>\\n\",\n       \"      <td>广告包装</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>525.65</td>\\n\",\n       \"      <td>4.15</td>\\n\",\n       \"      <td>5.03</td>\\n\",\n       \"      <td>210997.52</td>\\n\",\n       \"      <td>117592.22</td>\\n\",\n       \"      <td>61739.38</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.45</td>\\n\",\n       \"      <td>2008-05-08</td>\\n\",\n       \"      <td>21342.10</td>\\n\",\n       \"      <td>0.42</td>\\n\",\n       \"      <td>-17.88</td>\\n\",\n       \"      <td>-15.14</td>\\n\",\n       \"      <td>24.06</td>\\n\",\n       \"      <td>1.55</td>\\n\",\n       \"      <td>40500.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-10-19</th>\\n\",\n       \"      <td>300709</td>\\n\",\n       \"      <td>精研科技</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>31.01</td>\\n\",\n       \"      <td>0.22</td>\\n\",\n       \"      <td>0.88</td>\\n\",\n       \"      <td>104817.97</td>\\n\",\n       \"      <td>51288.05</td>\\n\",\n       \"      <td>36566.43</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.83</td>\\n\",\n       \"      <td>2017-10-19</td>\\n\",\n       \"      <td>26389.69</td>\\n\",\n       \"      <td>3.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>40.49</td>\\n\",\n       \"      <td>17.04</td>\\n\",\n       \"      <td>16000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-16</th>\\n\",\n       \"      <td>300653</td>\\n\",\n       \"      <td>正海生物</td>\\n\",\n       \"      <td>医疗保健</td>\\n\",\n       \"      <td>山东</td>\\n\",\n       \"      <td>65.83</td>\\n\",\n       \"      <td>0.20</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>53081.60</td>\\n\",\n       \"      <td>45645.28</td>\\n\",\n       \"      <td>2500.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.40</td>\\n\",\n       \"      <td>2017-05-16</td>\\n\",\n       \"      <td>12030.73</td>\\n\",\n       \"      <td>1.50</td>\\n\",\n       \"      <td>21.35</td>\\n\",\n       \"      <td>35.63</td>\\n\",\n       \"      <td>93.67</td>\\n\",\n       \"      <td>33.74</td>\\n\",\n       \"      <td>8714.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-11-27</th>\\n\",\n       \"      <td>300727</td>\\n\",\n       \"      <td>润禾材料</td>\\n\",\n       \"      <td>化工原料</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>90.09</td>\\n\",\n       \"      <td>0.24</td>\\n\",\n       \"      <td>0.98</td>\\n\",\n       \"      <td>43196.92</td>\\n\",\n       \"      <td>25291.61</td>\\n\",\n       \"      <td>12968.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.96</td>\\n\",\n       \"      <td>2017-11-27</td>\\n\",\n       \"      <td>8362.07</td>\\n\",\n       \"      <td>0.86</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>29.56</td>\\n\",\n       \"      <td>10.75</td>\\n\",\n       \"      <td>50562.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2011-01-25</th>\\n\",\n       \"      <td>300166</td>\\n\",\n       \"      <td>东方国信</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>78.81</td>\\n\",\n       \"      <td>8.06</td>\\n\",\n       \"      <td>10.50</td>\\n\",\n       \"      <td>468344.94</td>\\n\",\n       \"      <td>273063.00</td>\\n\",\n       \"      <td>22614.40</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.72</td>\\n\",\n       \"      <td>2011-01-25</td>\\n\",\n       \"      <td>97738.21</td>\\n\",\n       \"      <td>0.93</td>\\n\",\n       \"      <td>18.86</td>\\n\",\n       \"      <td>30.89</td>\\n\",\n       \"      <td>45.86</td>\\n\",\n       \"      <td>19.72</td>\\n\",\n       \"      <td>35285.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2015-03-24</th>\\n\",\n       \"      <td>603729</td>\\n\",\n       \"      <td>龙韵股份</td>\\n\",\n       \"      <td>广告包装</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>176.04</td>\\n\",\n       \"      <td>0.67</td>\\n\",\n       \"      <td>0.67</td>\\n\",\n       \"      <td>97434.93</td>\\n\",\n       \"      <td>82516.06</td>\\n\",\n       \"      <td>7244.75</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.19</td>\\n\",\n       \"      <td>2015-03-24</td>\\n\",\n       \"      <td>46754.80</td>\\n\",\n       \"      <td>7.01</td>\\n\",\n       \"      <td>-6.88</td>\\n\",\n       \"      <td>-53.62</td>\\n\",\n       \"      <td>10.85</td>\\n\",\n       \"      <td>2.04</td>\\n\",\n       \"      <td>5819.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-23</th>\\n\",\n       \"      <td>300657</td>\\n\",\n       \"      <td>弘信电子</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>67.08</td>\\n\",\n       \"      <td>0.26</td>\\n\",\n       \"      <td>1.04</td>\\n\",\n       \"      <td>184841.84</td>\\n\",\n       \"      <td>111414.60</td>\\n\",\n       \"      <td>59763.01</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>6.42</td>\\n\",\n       \"      <td>2017-05-23</td>\\n\",\n       \"      <td>18206.14</td>\\n\",\n       \"      <td>1.75</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>13.57</td>\\n\",\n       \"      <td>3.79</td>\\n\",\n       \"      <td>11765.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2016-03-03</th>\\n\",\n       \"      <td>300502</td>\\n\",\n       \"      <td>新易盛</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>四川</td>\\n\",\n       \"      <td>39.29</td>\\n\",\n       \"      <td>1.25</td>\\n\",\n       \"      <td>2.38</td>\\n\",\n       \"      <td>135900.52</td>\\n\",\n       \"      <td>100870.77</td>\\n\",\n       \"      <td>29193.11</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.65</td>\\n\",\n       \"      <td>2016-03-03</td>\\n\",\n       \"      <td>48375.46</td>\\n\",\n       \"      <td>2.03</td>\\n\",\n       \"      <td>29.88</td>\\n\",\n       \"      <td>20.03</td>\\n\",\n       \"      <td>25.61</td>\\n\",\n       \"      <td>14.60</td>\\n\",\n       \"      <td>21261.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1999-12-09</th>\\n\",\n       \"      <td>000955</td>\\n\",\n       \"      <td>欣龙控股</td>\\n\",\n       \"      <td>纺织</td>\\n\",\n       \"      <td>海南</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>5.38</td>\\n\",\n       \"      <td>5.38</td>\\n\",\n       \"      <td>140784.42</td>\\n\",\n       \"      <td>68316.99</td>\\n\",\n       \"      <td>46174.09</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.76</td>\\n\",\n       \"      <td>1999-12-09</td>\\n\",\n       \"      <td>-40120.17</td>\\n\",\n       \"      <td>-0.75</td>\\n\",\n       \"      <td>36.59</td>\\n\",\n       \"      <td>-155.81</td>\\n\",\n       \"      <td>12.15</td>\\n\",\n       \"      <td>-9.58</td>\\n\",\n       \"      <td>33494.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2011-07-07</th>\\n\",\n       \"      <td>002596</td>\\n\",\n       \"      <td>海南瑞泽</td>\\n\",\n       \"      <td>其他建材</td>\\n\",\n       \"      <td>海南</td>\\n\",\n       \"      <td>76.57</td>\\n\",\n       \"      <td>7.26</td>\\n\",\n       \"      <td>10.74</td>\\n\",\n       \"      <td>498120.41</td>\\n\",\n       \"      <td>292194.84</td>\\n\",\n       \"      <td>59208.46</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.37</td>\\n\",\n       \"      <td>2011-07-07</td>\\n\",\n       \"      <td>63369.16</td>\\n\",\n       \"      <td>0.59</td>\\n\",\n       \"      <td>56.17</td>\\n\",\n       \"      <td>150.94</td>\\n\",\n       \"      <td>19.12</td>\\n\",\n       \"      <td>6.12</td>\\n\",\n       \"      <td>21200.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2011-03-16</th>\\n\",\n       \"      <td>300189</td>\\n\",\n       \"      <td>神农基因</td>\\n\",\n       \"      <td>种植业</td>\\n\",\n       \"      <td>海南</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>8.82</td>\\n\",\n       \"      <td>10.24</td>\\n\",\n       \"      <td>260142.09</td>\\n\",\n       \"      <td>166160.41</td>\\n\",\n       \"      <td>29938.77</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.98</td>\\n\",\n       \"      <td>2011-03-16</td>\\n\",\n       \"      <td>9359.57</td>\\n\",\n       \"      <td>0.09</td>\\n\",\n       \"      <td>148.66</td>\\n\",\n       \"      <td>49.13</td>\\n\",\n       \"      <td>12.07</td>\\n\",\n       \"      <td>-1.20</td>\\n\",\n       \"      <td>62017.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1994-01-03</th>\\n\",\n       \"      <td>600806</td>\\n\",\n       \"      <td>*ST昆机</td>\\n\",\n       \"      <td>机床制造</td>\\n\",\n       \"      <td>云南</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>3.90</td>\\n\",\n       \"      <td>5.31</td>\\n\",\n       \"      <td>193646.66</td>\\n\",\n       \"      <td>121889.97</td>\\n\",\n       \"      <td>45542.53</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>1994-01-03</td>\\n\",\n       \"      <td>-45091.93</td>\\n\",\n       \"      <td>-0.85</td>\\n\",\n       \"      <td>21.07</td>\\n\",\n       \"      <td>-23.37</td>\\n\",\n       \"      <td>3.60</td>\\n\",\n       \"      <td>-51.43</td>\\n\",\n       \"      <td>33099.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2003-09-05</th>\\n\",\n       \"      <td>600432</td>\\n\",\n       \"      <td>*ST吉恩</td>\\n\",\n       \"      <td>小金属</td>\\n\",\n       \"      <td>吉林</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>16.04</td>\\n\",\n       \"      <td>16.04</td>\\n\",\n       \"      <td>1373541.75</td>\\n\",\n       \"      <td>297409.28</td>\\n\",\n       \"      <td>768094.25</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>2003-09-05</td>\\n\",\n       \"      <td>-549617.19</td>\\n\",\n       \"      <td>-3.43</td>\\n\",\n       \"      <td>9.91</td>\\n\",\n       \"      <td>-56.24</td>\\n\",\n       \"      <td>15.12</td>\\n\",\n       \"      <td>-42.86</td>\\n\",\n       \"      <td>70654.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1999-09-16</th>\\n\",\n       \"      <td>000950</td>\\n\",\n       \"      <td>*ST建峰</td>\\n\",\n       \"      <td>农药化肥</td>\\n\",\n       \"      <td>重庆</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>5.99</td>\\n\",\n       \"      <td>17.28</td>\\n\",\n       \"      <td>1562395.13</td>\\n\",\n       \"      <td>1296451.63</td>\\n\",\n       \"      <td>48986.46</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>1999-09-16</td>\\n\",\n       \"      <td>193228.36</td>\\n\",\n       \"      <td>1.12</td>\\n\",\n       \"      <td>1.16</td>\\n\",\n       \"      <td>758.44</td>\\n\",\n       \"      <td>9.07</td>\\n\",\n       \"      <td>5.20</td>\\n\",\n       \"      <td>30624.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1996-11-15</th>\\n\",\n       \"      <td>000629</td>\\n\",\n       \"      <td>*ST钒钛</td>\\n\",\n       \"      <td>普钢</td>\\n\",\n       \"      <td>四川</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>47.67</td>\\n\",\n       \"      <td>85.90</td>\\n\",\n       \"      <td>1047323.31</td>\\n\",\n       \"      <td>429526.09</td>\\n\",\n       \"      <td>468832.44</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>1996-11-15</td>\\n\",\n       \"      <td>-1126974.13</td>\\n\",\n       \"      <td>-1.31</td>\\n\",\n       \"      <td>-11.07</td>\\n\",\n       \"      <td>114.42</td>\\n\",\n       \"      <td>17.74</td>\\n\",\n       \"      <td>9.15</td>\\n\",\n       \"      <td>309055.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1993-05-18</th>\\n\",\n       \"      <td>000511</td>\\n\",\n       \"      <td>*ST烯碳</td>\\n\",\n       \"      <td>矿物制品</td>\\n\",\n       \"      <td>辽宁</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>11.55</td>\\n\",\n       \"      <td>11.55</td>\\n\",\n       \"      <td>346274.91</td>\\n\",\n       \"      <td>312833.03</td>\\n\",\n       \"      <td>2405.45</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>1993-05-18</td>\\n\",\n       \"      <td>-63425.48</td>\\n\",\n       \"      <td>-0.55</td>\\n\",\n       \"      <td>43.62</td>\\n\",\n       \"      <td>-55.46</td>\\n\",\n       \"      <td>0.22</td>\\n\",\n       \"      <td>-14.68</td>\\n\",\n       \"      <td>164822.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>3506 rows × 24 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"                code   name industry area       pe  outstanding  totals  \\\\\\n\",\n       \"timeToMarket                                                              \\n\",\n       \"2018-04-10    603897    N长城     电气设备   浙江    25.57         0.45    1.78   \\n\",\n       \"2012-10-09    300356   光一科技     电气设备   江苏   206.51         3.69    4.15   \\n\",\n       \"1996-05-31    600711   盛屯矿业      小金属   福建    26.15        14.97   16.77   \\n\",\n       \"2007-08-21    002160   常铝股份        铝   江苏    32.31         4.72    7.24   \\n\",\n       \"1997-05-08    000717   韶钢松山       普钢   广东     6.32        24.20   24.20   \\n\",\n       \"1996-05-03    600896   览海投资       水运   海南     0.00         5.77    8.69   \\n\",\n       \"1997-06-25    000819   岳阳兴长     石油加工   湖南     0.00         2.71    2.71   \\n\",\n       \"2018-03-26    600929   湖南盐业       食品   湖南    72.52         1.50    9.18   \\n\",\n       \"2010-04-30    300076  GQY视讯     电脑设备   浙江     0.00         3.68    4.24   \\n\",\n       \"2007-08-03    002144   宏达高科       纺织   浙江    26.28         1.36    1.77   \\n\",\n       \"2017-03-16    300621   维业股份     装修装饰   深圳    37.99         0.43    1.39   \\n\",\n       \"2017-09-20    603106   恒银金融     电脑设备   天津    45.40         0.70    2.80   \\n\",\n       \"2017-03-15    603811   诚意药业     化学制药   浙江    38.80         0.57    0.85   \\n\",\n       \"2018-03-28    002930   宏川智慧     仓储物流   广东    62.90         0.61    2.43   \\n\",\n       \"2017-09-22    603963   大理药业     化学制药   云南    73.92         0.25    1.00   \\n\",\n       \"2018-03-30    603214    爱婴室       百货   上海    49.45         0.25    1.00   \\n\",\n       \"2017-01-17    300595   欧普康视     医疗保健   安徽    54.16         0.76    1.24   \\n\",\n       \"2017-03-21    300627   华测导航     通信设备   上海    85.66         0.50    1.23   \\n\",\n       \"2017-02-08    603637   镇海股份     建筑施工   浙江    66.69         0.33    1.33   \\n\",\n       \"2017-10-10    300705   九典制药     化学制药   湖南    89.94         0.29    1.17   \\n\",\n       \"2017-10-31    603289   泰瑞机器     专用机械   浙江    45.82         0.51    2.04   \\n\",\n       \"2017-05-09    603229   奥翔药业     化学制药   浙江    93.03         0.40    1.60   \\n\",\n       \"2017-06-02    300660   江苏雷利     电气设备   江苏    26.10         0.25    1.02   \\n\",\n       \"2016-08-02    300529   健帆生物     医疗保健   广东    62.99         1.06    4.18   \\n\",\n       \"2017-09-22    002900    哈三联     化学制药  黑龙江    44.11         0.53    2.11   \\n\",\n       \"2017-05-19    002873   新天药业      中成药   贵州    44.54         0.17    0.69   \\n\",\n       \"2010-02-03    002350   北京科锐     电气设备   北京   184.53         3.76    3.87   \\n\",\n       \"2008-05-16    002235   安妮股份       造纸   福建    58.10         3.34    4.16   \\n\",\n       \"2017-08-10    300688   创业黑马      综合类   北京   171.33         0.17    0.68   \\n\",\n       \"2018-02-26    603712    七一二     通信设备   天津   363.05         1.00    7.72   \\n\",\n       \"...              ...    ...      ...  ...      ...          ...     ...   \\n\",\n       \"2014-09-10    300392   腾信股份      互联网   北京   192.02         1.64    3.84   \\n\",\n       \"1999-03-25    600209   罗顿发展      综合类   海南     0.00         4.26    4.39   \\n\",\n       \"1997-06-11    000735  罗 牛 山     农业综合   海南    54.68        10.60   11.52   \\n\",\n       \"2010-02-11    300054   鼎龙股份     化工原料   湖北    30.93         6.65    9.61   \\n\",\n       \"1997-01-28    000613   大东海A     旅游服务   海南  1574.13         2.66    3.64   \\n\",\n       \"2016-03-22    300484   蓝海华腾     电气设备   深圳    25.00         0.94    2.08   \\n\",\n       \"2015-03-18    300433   蓝思科技      元器件   湖南    46.39         4.44   26.29   \\n\",\n       \"2017-06-06    300661   圣邦股份      元器件   北京    87.02         0.15    0.61   \\n\",\n       \"2017-01-05    300588   熙菱信息     软件服务   新疆    65.77         0.31    1.00   \\n\",\n       \"2017-01-26    300603   立昂技术     通信设备   新疆    47.46         0.57    1.03   \\n\",\n       \"2017-11-09    300719   安达维尔       航空   北京    53.58         0.42    1.68   \\n\",\n       \"2009-12-16    002320   海峡股份       水运   海南    74.69         4.30    5.08   \\n\",\n       \"2017-08-03    300687   赛意信息     软件服务   广东    52.57         0.20    0.80   \\n\",\n       \"2010-05-20    300083   劲胜智能      元器件   广东    16.41        11.91   14.32   \\n\",\n       \"2008-05-08    002229   鸿博股份     广告包装   福建   525.65         4.15    5.03   \\n\",\n       \"2017-10-19    300709   精研科技      元器件   江苏    31.01         0.22    0.88   \\n\",\n       \"2017-05-16    300653   正海生物     医疗保健   山东    65.83         0.20    0.80   \\n\",\n       \"2017-11-27    300727   润禾材料     化工原料   浙江    90.09         0.24    0.98   \\n\",\n       \"2011-01-25    300166   东方国信     软件服务   北京    78.81         8.06   10.50   \\n\",\n       \"2015-03-24    603729   龙韵股份     广告包装   上海   176.04         0.67    0.67   \\n\",\n       \"2017-05-23    300657   弘信电子      元器件   福建    67.08         0.26    1.04   \\n\",\n       \"2016-03-03    300502    新易盛     通信设备   四川    39.29         1.25    2.38   \\n\",\n       \"1999-12-09    000955   欣龙控股       纺织   海南     0.00         5.38    5.38   \\n\",\n       \"2011-07-07    002596   海南瑞泽     其他建材   海南    76.57         7.26   10.74   \\n\",\n       \"2011-03-16    300189   神农基因      种植业   海南     0.00         8.82   10.24   \\n\",\n       \"1994-01-03    600806  *ST昆机     机床制造   云南     0.00         3.90    5.31   \\n\",\n       \"2003-09-05    600432  *ST吉恩      小金属   吉林     0.00        16.04   16.04   \\n\",\n       \"1999-09-16    000950  *ST建峰     农药化肥   重庆     0.00         5.99   17.28   \\n\",\n       \"1996-11-15    000629  *ST钒钛       普钢   四川     0.00        47.67   85.90   \\n\",\n       \"1993-05-18    000511  *ST烯碳     矿物制品   辽宁     0.00        11.55   11.55   \\n\",\n       \"\\n\",\n       \"              totalAssets  liquidAssets  fixedAssets     ...         pb  \\\\\\n\",\n       \"timeToMarket                                             ...              \\n\",\n       \"2018-04-10      131807.23     117523.63     10988.37     ...       4.27   \\n\",\n       \"2012-10-09      208679.95      97810.21     17068.50     ...       2.49   \\n\",\n       \"1996-05-31     1125400.88     590581.00     76470.36     ...       3.11   \\n\",\n       \"2007-08-21      622252.69     297916.59    151107.36     ...       1.45   \\n\",\n       \"1997-05-08     1441538.00     440514.44    801547.88     ...       5.35   \\n\",\n       \"1996-05-03      448937.09     363976.13       453.85     ...       2.74   \\n\",\n       \"1997-06-25       81995.88      59217.63     17258.00     ...       4.92   \\n\",\n       \"2018-03-26      310491.63      78859.31    139873.81     ...       5.36   \\n\",\n       \"2010-04-30      116227.61      76413.81     21807.57     ...       2.35   \\n\",\n       \"2007-08-03      199379.38      51652.78     28723.63     ...       1.51   \\n\",\n       \"2017-03-16      186181.06     169977.59      2515.88     ...       3.41   \\n\",\n       \"2017-09-20      212309.42     190471.27     16428.07     ...       4.80   \\n\",\n       \"2017-03-15       67298.32      46722.62     12191.86     ...       4.48   \\n\",\n       \"2018-03-28      187270.80      13539.20    103894.40     ...       3.66   \\n\",\n       \"2017-09-22       62622.20      44925.30     10986.69     ...       8.40   \\n\",\n       \"2018-03-30       76961.15      61297.16      7078.72     ...       9.27   \\n\",\n       \"2017-01-17       84769.46      71856.96      3970.03     ...      10.12   \\n\",\n       \"2017-03-21       95269.30      88869.28      2105.35     ...       9.13   \\n\",\n       \"2017-02-08       86330.46      76018.32      5968.18     ...       4.33   \\n\",\n       \"2017-10-10       76920.25      51869.26     13084.78     ...       9.34   \\n\",\n       \"2017-10-31       88554.82      68437.21     15267.82     ...       5.65   \\n\",\n       \"2017-05-09       68624.13      45903.00     14470.87     ...       7.22   \\n\",\n       \"2017-06-02      280316.22     256656.80     16994.20     ...       3.21   \\n\",\n       \"2016-08-02      170240.02     123065.95     32537.78     ...      12.85   \\n\",\n       \"2017-09-22      218374.66     135898.92     68163.18     ...       4.35   \\n\",\n       \"2017-05-19       91925.27      57405.90     21257.95     ...       5.89   \\n\",\n       \"2010-02-03      280886.13     197356.56     42124.90     ...       3.11   \\n\",\n       \"2008-05-16      272703.47     126430.06     19098.98     ...       2.01   \\n\",\n       \"2017-08-10       41396.55      40351.37       380.64     ...      14.13   \\n\",\n       \"2018-02-26      348015.50     277392.63     57633.35     ...      21.08   \\n\",\n       \"...                   ...           ...          ...     ...        ...   \\n\",\n       \"2014-09-10      150430.13     116865.26     14213.17     ...       7.38   \\n\",\n       \"1999-03-25       86705.93      23242.80     16197.40     ...       6.31   \\n\",\n       \"1997-06-11      618940.00     207991.38    180241.88     ...       3.02   \\n\",\n       \"2010-02-11      397465.50     226564.66     47543.53     ...       2.70   \\n\",\n       \"1997-01-28        8746.66       1382.31      3908.87     ...      58.34   \\n\",\n       \"2016-03-22      103367.36      90467.02      3893.34     ...       5.06   \\n\",\n       \"2015-03-18     3134060.00    1093617.13   1565460.63     ...       3.24   \\n\",\n       \"2017-06-06       86190.96      82643.93      1150.35     ...       8.73   \\n\",\n       \"2017-01-05       84675.42      79111.96       736.22     ...       8.19   \\n\",\n       \"2017-01-26      124445.82      99134.21      2345.56     ...       8.70   \\n\",\n       \"2017-11-09      111330.52      99828.74      9335.78     ...       5.00   \\n\",\n       \"2009-12-16      390513.69     136325.91    235803.70     ...       4.75   \\n\",\n       \"2017-08-03       83921.68      80942.17       291.20     ...       6.36   \\n\",\n       \"2010-05-20     1144811.25     728822.63    176756.77     ...       1.64   \\n\",\n       \"2008-05-08      210997.52     117592.22     61739.38     ...       3.45   \\n\",\n       \"2017-10-19      104817.97      51288.05     36566.43     ...       3.83   \\n\",\n       \"2017-05-16       53081.60      45645.28      2500.00     ...       8.40   \\n\",\n       \"2017-11-27       43196.92      25291.61     12968.00     ...       8.96   \\n\",\n       \"2011-01-25      468344.94     273063.00     22614.40     ...       3.72   \\n\",\n       \"2015-03-24       97434.93      82516.06      7244.75     ...       4.19   \\n\",\n       \"2017-05-23      184841.84     111414.60     59763.01     ...       6.42   \\n\",\n       \"2016-03-03      135900.52     100870.77     29193.11     ...       4.65   \\n\",\n       \"1999-12-09      140784.42      68316.99     46174.09     ...       5.76   \\n\",\n       \"2011-07-07      498120.41     292194.84     59208.46     ...       5.37   \\n\",\n       \"2011-03-16      260142.09     166160.41     29938.77     ...       2.98   \\n\",\n       \"1994-01-03      193646.66     121889.97     45542.53     ...       0.00   \\n\",\n       \"2003-09-05     1373541.75     297409.28    768094.25     ...       0.00   \\n\",\n       \"1999-09-16     1562395.13    1296451.63     48986.46     ...       0.00   \\n\",\n       \"1996-11-15     1047323.31     429526.09    468832.44     ...       0.00   \\n\",\n       \"1993-05-18      346274.91     312833.03      2405.45     ...       0.00   \\n\",\n       \"\\n\",\n       \"              timeToMarket        undp  perundp     rev   profit    gpr  \\\\\\n\",\n       \"timeToMarket                                                              \\n\",\n       \"2018-04-10      2018-04-10    35286.05     1.98   41.98    55.84   8.19   \\n\",\n       \"2012-10-09      2012-10-09    28831.28     0.69  -39.02   -47.76  26.05   \\n\",\n       \"1996-05-31      1996-05-31   104130.27     0.62   62.61   223.67   6.85   \\n\",\n       \"2007-08-21      2007-08-21    27155.90     0.37   40.03    56.07  17.64   \\n\",\n       \"1997-05-08      1997-05-08  -331470.38    -1.37   86.35  2381.13  13.26   \\n\",\n       \"1996-05-03      1996-05-03   -60134.50    -0.69  -94.80    18.38  91.85   \\n\",\n       \"1997-06-25      1997-06-25    19668.43     0.72   16.55  -132.47   8.32   \\n\",\n       \"2018-03-26      2018-03-26    71625.13     0.78    1.30    15.06  47.71   \\n\",\n       \"2010-04-30      2010-04-30    10759.37     0.25  -40.70 -1298.93  35.65   \\n\",\n       \"2007-08-03      2007-08-03    52805.73     2.99   12.73    -6.03  29.92   \\n\",\n       \"2017-03-16      2017-03-16    26666.50     1.92    0.00     0.00  13.34   \\n\",\n       \"2017-09-20      2017-09-20    27721.10     0.99    0.00     0.00  33.95   \\n\",\n       \"2017-03-15      2017-03-15     9561.42     1.12    6.12     1.57  52.11   \\n\",\n       \"2018-03-28      2018-03-28    38270.21     1.57   -0.74    10.33  56.59   \\n\",\n       \"2017-09-22      2017-09-22     9541.13     0.95    0.00     0.00  63.85   \\n\",\n       \"2018-03-30      2018-03-30    25456.17     2.55   14.06    26.47  28.41   \\n\",\n       \"2017-01-17      2017-01-17    20604.49     1.66   31.61    29.56  76.06   \\n\",\n       \"2017-03-21      2017-03-21    19288.67     1.56    0.00     0.00  54.56   \\n\",\n       \"2017-02-08      2017-02-08    20656.95     1.55  -37.75   -28.91  31.54   \\n\",\n       \"2017-10-10      2017-10-10    12709.62     1.08   42.01    25.76  51.93   \\n\",\n       \"2017-10-31      2017-10-31    26118.49     1.28    0.00     0.00  30.63   \\n\",\n       \"2017-05-09      2017-05-09    14151.70     0.88    0.00     0.00  60.63   \\n\",\n       \"2017-06-02      2017-06-02    33226.21     3.26    0.00     0.00  26.74   \\n\",\n       \"2016-08-02      2016-08-02    48161.67     1.15   32.16    40.72  84.14   \\n\",\n       \"2017-09-22      2017-09-22    39189.78     1.86   50.99     3.36  74.17   \\n\",\n       \"2017-05-19      2017-05-19    18090.75     2.63    0.00     0.00  81.09   \\n\",\n       \"2010-02-03      2010-02-03    34932.31     0.90   23.04   -44.28  23.27   \\n\",\n       \"2008-05-16      2008-05-16     5426.16     0.13   66.06   473.50  31.63   \\n\",\n       \"2017-08-10      2017-08-10     6212.93     0.91    0.00     0.00  56.91   \\n\",\n       \"2018-02-26      2018-02-26    20558.85     0.27    0.00     0.00  49.57   \\n\",\n       \"...                    ...         ...      ...     ...      ...    ...   \\n\",\n       \"2014-09-10      2014-09-10    11726.03     0.31   17.47   324.13  10.24   \\n\",\n       \"1999-03-25      1999-03-25     5083.85     0.12   53.01    51.86   4.02   \\n\",\n       \"1997-06-11      1997-06-11    72196.31     0.63  116.29    85.11  30.92   \\n\",\n       \"2010-02-11      2010-02-11    77185.90     0.80   35.41    30.84  36.67   \\n\",\n       \"1997-01-28      1997-01-28   -34110.73    -0.94   28.55   207.44  60.08   \\n\",\n       \"2016-03-22      2016-03-22    35972.95     1.73    2.54     0.94  39.27   \\n\",\n       \"2015-03-18      2015-03-18   823279.00     3.13   41.93    12.39  25.00   \\n\",\n       \"2017-06-06      2017-06-06    19735.47     3.24    0.00     0.00  43.62   \\n\",\n       \"2017-01-05      2017-01-05    13293.88     1.33   35.56    85.39  24.81   \\n\",\n       \"2017-01-26      2017-01-26    16070.23     1.57  247.32   259.16  20.03   \\n\",\n       \"2017-11-09      2017-11-09    26470.75     1.58   10.59    -1.52  53.67   \\n\",\n       \"2009-12-16      2009-12-16    79676.13     1.57   26.15    64.71  42.13   \\n\",\n       \"2017-08-03      2017-08-03    14224.57     1.78    0.00     0.00  31.36   \\n\",\n       \"2010-05-20      2010-05-20    39800.05     0.28   31.86   424.03  27.29   \\n\",\n       \"2008-05-08      2008-05-08    21342.10     0.42  -17.88   -15.14  24.06   \\n\",\n       \"2017-10-19      2017-10-19    26389.69     3.00    0.00     0.00  40.49   \\n\",\n       \"2017-05-16      2017-05-16    12030.73     1.50   21.35    35.63  93.67   \\n\",\n       \"2017-11-27      2017-11-27     8362.07     0.86    0.00     0.00  29.56   \\n\",\n       \"2011-01-25      2011-01-25    97738.21     0.93   18.86    30.89  45.86   \\n\",\n       \"2015-03-24      2015-03-24    46754.80     7.01   -6.88   -53.62  10.85   \\n\",\n       \"2017-05-23      2017-05-23    18206.14     1.75    0.00     0.00  13.57   \\n\",\n       \"2016-03-03      2016-03-03    48375.46     2.03   29.88    20.03  25.61   \\n\",\n       \"1999-12-09      1999-12-09   -40120.17    -0.75   36.59  -155.81  12.15   \\n\",\n       \"2011-07-07      2011-07-07    63369.16     0.59   56.17   150.94  19.12   \\n\",\n       \"2011-03-16      2011-03-16     9359.57     0.09  148.66    49.13  12.07   \\n\",\n       \"1994-01-03      1994-01-03   -45091.93    -0.85   21.07   -23.37   3.60   \\n\",\n       \"2003-09-05      2003-09-05  -549617.19    -3.43    9.91   -56.24  15.12   \\n\",\n       \"1999-09-16      1999-09-16   193228.36     1.12    1.16   758.44   9.07   \\n\",\n       \"1996-11-15      1996-11-15 -1126974.13    -1.31  -11.07   114.42  17.74   \\n\",\n       \"1993-05-18      1993-05-18   -63425.48    -0.55   43.62   -55.46   0.22   \\n\",\n       \"\\n\",\n       \"                 npr   holders        更新日期  \\n\",\n       \"timeToMarket                                \\n\",\n       \"2018-04-10      3.87   42986.0  2018-04-11  \\n\",\n       \"2012-10-09      4.30   19839.0  2018-04-11  \\n\",\n       \"1996-05-31      2.95  106700.0  2018-04-11  \\n\",\n       \"2007-08-21      3.84   50000.0  2018-04-11  \\n\",\n       \"1997-05-08      9.66  132008.0  2018-04-11  \\n\",\n       \"1996-05-03   -416.75   43837.0  2018-04-11  \\n\",\n       \"1997-06-25     -0.62   31400.0  2018-04-11  \\n\",\n       \"2018-03-26      7.24  140295.0  2018-04-11  \\n\",\n       \"2010-04-30    -29.91   41000.0  2018-04-11  \\n\",\n       \"2007-08-03     15.71   21057.0  2018-04-11  \\n\",\n       \"2017-03-16      4.22   19044.0  2018-04-11  \\n\",\n       \"2017-09-20     11.23   36000.0  2018-04-11  \\n\",\n       \"2017-03-15     20.31   10574.0  2018-04-11  \\n\",\n       \"2018-03-28     25.41  115500.0  2018-04-11  \\n\",\n       \"2017-09-22     20.00   27488.0  2018-04-11  \\n\",\n       \"2018-03-30      5.18   26639.0  2018-04-11  \\n\",\n       \"2017-01-17     50.72    6781.0  2018-04-11  \\n\",\n       \"2017-03-21     14.97   16380.0  2018-04-11  \\n\",\n       \"2017-02-08     22.63    9897.0  2018-04-11  \\n\",\n       \"2017-10-10     12.83   21243.0  2018-04-11  \\n\",\n       \"2017-10-31     12.40   48514.0  2018-04-11  \\n\",\n       \"2017-05-09     22.65   14088.0  2018-04-11  \\n\",\n       \"2017-06-02     12.07   18283.0  2018-04-11  \\n\",\n       \"2016-08-02     39.58   22527.0  2018-04-11  \\n\",\n       \"2017-09-22     15.76   38400.0  2018-04-11  \\n\",\n       \"2017-05-19     11.75    9615.0  2018-04-11  \\n\",\n       \"2010-02-03      1.03   52854.0  2018-04-11  \\n\",\n       \"2008-05-16     14.46   30659.0  2018-04-11  \\n\",\n       \"2017-08-10     17.97   15720.0  2018-04-11  \\n\",\n       \"2018-02-26      8.39   88473.0  2018-04-11  \\n\",\n       \"...              ...       ...         ...  \\n\",\n       \"2014-09-10      1.53   27346.0  2018-04-11  \\n\",\n       \"1999-03-25    -30.81   59619.0  2018-04-11  \\n\",\n       \"1997-06-11     13.88   80000.0  2018-04-11  \\n\",\n       \"2010-02-11     18.24   17874.0  2018-04-11  \\n\",\n       \"1997-01-28     10.24   20000.0  2018-04-11  \\n\",\n       \"2016-03-22     24.14   14835.0  2018-04-11  \\n\",\n       \"2015-03-18      5.91   35003.0  2018-04-11  \\n\",\n       \"2017-06-06     16.02    5677.0  2018-04-11  \\n\",\n       \"2017-01-05      7.47   10945.0  2018-04-11  \\n\",\n       \"2017-01-26      8.61   11752.0  2018-04-11  \\n\",\n       \"2017-11-09     20.42   25100.0  2018-04-11  \\n\",\n       \"2009-12-16     23.29   17700.0  2018-04-11  \\n\",\n       \"2017-08-03     13.34   13585.0  2018-04-11  \\n\",\n       \"2010-05-20      8.96   47930.0  2018-04-11  \\n\",\n       \"2008-05-08      1.55   40500.0  2018-04-11  \\n\",\n       \"2017-10-19     17.04   16000.0  2018-04-11  \\n\",\n       \"2017-05-16     33.74    8714.0  2018-04-11  \\n\",\n       \"2017-11-27     10.75   50562.0  2018-04-11  \\n\",\n       \"2011-01-25     19.72   35285.0  2018-04-11  \\n\",\n       \"2015-03-24      2.04    5819.0  2018-04-11  \\n\",\n       \"2017-05-23      3.79   11765.0  2018-04-11  \\n\",\n       \"2016-03-03     14.60   21261.0  2018-04-11  \\n\",\n       \"1999-12-09     -9.58   33494.0  2018-04-11  \\n\",\n       \"2011-07-07      6.12   21200.0  2018-04-11  \\n\",\n       \"2011-03-16     -1.20   62017.0  2018-04-11  \\n\",\n       \"1994-01-03    -51.43   33099.0  2018-04-11  \\n\",\n       \"2003-09-05    -42.86   70654.0  2018-04-11  \\n\",\n       \"1999-09-16      5.20   30624.0  2018-04-11  \\n\",\n       \"1996-11-15      9.15  309055.0  2018-04-11  \\n\",\n       \"1993-05-18    -14.68  164822.0  2018-04-11  \\n\",\n       \"\\n\",\n       \"[3506 rows x 24 columns]\"\n      ]\n     },\n     \"execution_count\": 36,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"basic_df.set_index(basic_df['timeToMarket'],drop=True)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 45,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>code</th>\\n\",\n       \"      <th>name</th>\\n\",\n       \"      <th>industry</th>\\n\",\n       \"      <th>area</th>\\n\",\n       \"      <th>pe</th>\\n\",\n       \"      <th>outstanding</th>\\n\",\n       \"      <th>totals</th>\\n\",\n       \"      <th>totalAssets</th>\\n\",\n       \"      <th>liquidAssets</th>\\n\",\n       \"      <th>fixedAssets</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>pb</th>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th>undp</th>\\n\",\n       \"      <th>perundp</th>\\n\",\n       \"      <th>rev</th>\\n\",\n       \"      <th>profit</th>\\n\",\n       \"      <th>gpr</th>\\n\",\n       \"      <th>npr</th>\\n\",\n       \"      <th>holders</th>\\n\",\n       \"      <th>更新日期</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-04-10</th>\\n\",\n       \"      <td>603897</td>\\n\",\n       \"      <td>N长城</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>25.57</td>\\n\",\n       \"      <td>0.45</td>\\n\",\n       \"      <td>1.78</td>\\n\",\n       \"      <td>131807.23</td>\\n\",\n       \"      <td>117523.63</td>\\n\",\n       \"      <td>10988.37</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.27</td>\\n\",\n       \"      <td>2018-04-10</td>\\n\",\n       \"      <td>35286.05</td>\\n\",\n       \"      <td>1.98</td>\\n\",\n       \"      <td>41.98</td>\\n\",\n       \"      <td>55.84</td>\\n\",\n       \"      <td>8.19</td>\\n\",\n       \"      <td>3.87</td>\\n\",\n       \"      <td>42986.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-03-26</th>\\n\",\n       \"      <td>600929</td>\\n\",\n       \"      <td>湖南盐业</td>\\n\",\n       \"      <td>食品</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>72.52</td>\\n\",\n       \"      <td>1.50</td>\\n\",\n       \"      <td>9.18</td>\\n\",\n       \"      <td>310491.63</td>\\n\",\n       \"      <td>78859.31</td>\\n\",\n       \"      <td>139873.81</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.36</td>\\n\",\n       \"      <td>2018-03-26</td>\\n\",\n       \"      <td>71625.13</td>\\n\",\n       \"      <td>0.78</td>\\n\",\n       \"      <td>1.30</td>\\n\",\n       \"      <td>15.06</td>\\n\",\n       \"      <td>47.71</td>\\n\",\n       \"      <td>7.24</td>\\n\",\n       \"      <td>140295.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-16</th>\\n\",\n       \"      <td>300621</td>\\n\",\n       \"      <td>维业股份</td>\\n\",\n       \"      <td>装修装饰</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>37.99</td>\\n\",\n       \"      <td>0.43</td>\\n\",\n       \"      <td>1.39</td>\\n\",\n       \"      <td>186181.06</td>\\n\",\n       \"      <td>169977.59</td>\\n\",\n       \"      <td>2515.88</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.41</td>\\n\",\n       \"      <td>2017-03-16</td>\\n\",\n       \"      <td>26666.50</td>\\n\",\n       \"      <td>1.92</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>13.34</td>\\n\",\n       \"      <td>4.22</td>\\n\",\n       \"      <td>19044.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-09-20</th>\\n\",\n       \"      <td>603106</td>\\n\",\n       \"      <td>恒银金融</td>\\n\",\n       \"      <td>电脑设备</td>\\n\",\n       \"      <td>天津</td>\\n\",\n       \"      <td>45.40</td>\\n\",\n       \"      <td>0.70</td>\\n\",\n       \"      <td>2.80</td>\\n\",\n       \"      <td>212309.42</td>\\n\",\n       \"      <td>190471.27</td>\\n\",\n       \"      <td>16428.07</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.80</td>\\n\",\n       \"      <td>2017-09-20</td>\\n\",\n       \"      <td>27721.10</td>\\n\",\n       \"      <td>0.99</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>33.95</td>\\n\",\n       \"      <td>11.23</td>\\n\",\n       \"      <td>36000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-15</th>\\n\",\n       \"      <td>603811</td>\\n\",\n       \"      <td>诚意药业</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>38.80</td>\\n\",\n       \"      <td>0.57</td>\\n\",\n       \"      <td>0.85</td>\\n\",\n       \"      <td>67298.32</td>\\n\",\n       \"      <td>46722.62</td>\\n\",\n       \"      <td>12191.86</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.48</td>\\n\",\n       \"      <td>2017-03-15</td>\\n\",\n       \"      <td>9561.42</td>\\n\",\n       \"      <td>1.12</td>\\n\",\n       \"      <td>6.12</td>\\n\",\n       \"      <td>1.57</td>\\n\",\n       \"      <td>52.11</td>\\n\",\n       \"      <td>20.31</td>\\n\",\n       \"      <td>10574.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-03-28</th>\\n\",\n       \"      <td>002930</td>\\n\",\n       \"      <td>宏川智慧</td>\\n\",\n       \"      <td>仓储物流</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>62.90</td>\\n\",\n       \"      <td>0.61</td>\\n\",\n       \"      <td>2.43</td>\\n\",\n       \"      <td>187270.80</td>\\n\",\n       \"      <td>13539.20</td>\\n\",\n       \"      <td>103894.40</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.66</td>\\n\",\n       \"      <td>2018-03-28</td>\\n\",\n       \"      <td>38270.21</td>\\n\",\n       \"      <td>1.57</td>\\n\",\n       \"      <td>-0.74</td>\\n\",\n       \"      <td>10.33</td>\\n\",\n       \"      <td>56.59</td>\\n\",\n       \"      <td>25.41</td>\\n\",\n       \"      <td>115500.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-09-22</th>\\n\",\n       \"      <td>603963</td>\\n\",\n       \"      <td>大理药业</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>云南</td>\\n\",\n       \"      <td>73.92</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>62622.20</td>\\n\",\n       \"      <td>44925.30</td>\\n\",\n       \"      <td>10986.69</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.40</td>\\n\",\n       \"      <td>2017-09-22</td>\\n\",\n       \"      <td>9541.13</td>\\n\",\n       \"      <td>0.95</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>63.85</td>\\n\",\n       \"      <td>20.00</td>\\n\",\n       \"      <td>27488.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-03-30</th>\\n\",\n       \"      <td>603214</td>\\n\",\n       \"      <td>爱婴室</td>\\n\",\n       \"      <td>百货</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>49.45</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>76961.15</td>\\n\",\n       \"      <td>61297.16</td>\\n\",\n       \"      <td>7078.72</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>9.27</td>\\n\",\n       \"      <td>2018-03-30</td>\\n\",\n       \"      <td>25456.17</td>\\n\",\n       \"      <td>2.55</td>\\n\",\n       \"      <td>14.06</td>\\n\",\n       \"      <td>26.47</td>\\n\",\n       \"      <td>28.41</td>\\n\",\n       \"      <td>5.18</td>\\n\",\n       \"      <td>26639.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-17</th>\\n\",\n       \"      <td>300595</td>\\n\",\n       \"      <td>欧普康视</td>\\n\",\n       \"      <td>医疗保健</td>\\n\",\n       \"      <td>安徽</td>\\n\",\n       \"      <td>54.16</td>\\n\",\n       \"      <td>0.76</td>\\n\",\n       \"      <td>1.24</td>\\n\",\n       \"      <td>84769.46</td>\\n\",\n       \"      <td>71856.96</td>\\n\",\n       \"      <td>3970.03</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>10.12</td>\\n\",\n       \"      <td>2017-01-17</td>\\n\",\n       \"      <td>20604.49</td>\\n\",\n       \"      <td>1.66</td>\\n\",\n       \"      <td>31.61</td>\\n\",\n       \"      <td>29.56</td>\\n\",\n       \"      <td>76.06</td>\\n\",\n       \"      <td>50.72</td>\\n\",\n       \"      <td>6781.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-21</th>\\n\",\n       \"      <td>300627</td>\\n\",\n       \"      <td>华测导航</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>85.66</td>\\n\",\n       \"      <td>0.50</td>\\n\",\n       \"      <td>1.23</td>\\n\",\n       \"      <td>95269.30</td>\\n\",\n       \"      <td>88869.28</td>\\n\",\n       \"      <td>2105.35</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>9.13</td>\\n\",\n       \"      <td>2017-03-21</td>\\n\",\n       \"      <td>19288.67</td>\\n\",\n       \"      <td>1.56</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>54.56</td>\\n\",\n       \"      <td>14.97</td>\\n\",\n       \"      <td>16380.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-02-08</th>\\n\",\n       \"      <td>603637</td>\\n\",\n       \"      <td>镇海股份</td>\\n\",\n       \"      <td>建筑施工</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>66.69</td>\\n\",\n       \"      <td>0.33</td>\\n\",\n       \"      <td>1.33</td>\\n\",\n       \"      <td>86330.46</td>\\n\",\n       \"      <td>76018.32</td>\\n\",\n       \"      <td>5968.18</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.33</td>\\n\",\n       \"      <td>2017-02-08</td>\\n\",\n       \"      <td>20656.95</td>\\n\",\n       \"      <td>1.55</td>\\n\",\n       \"      <td>-37.75</td>\\n\",\n       \"      <td>-28.91</td>\\n\",\n       \"      <td>31.54</td>\\n\",\n       \"      <td>22.63</td>\\n\",\n       \"      <td>9897.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-10-10</th>\\n\",\n       \"      <td>300705</td>\\n\",\n       \"      <td>九典制药</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>89.94</td>\\n\",\n       \"      <td>0.29</td>\\n\",\n       \"      <td>1.17</td>\\n\",\n       \"      <td>76920.25</td>\\n\",\n       \"      <td>51869.26</td>\\n\",\n       \"      <td>13084.78</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>9.34</td>\\n\",\n       \"      <td>2017-10-10</td>\\n\",\n       \"      <td>12709.62</td>\\n\",\n       \"      <td>1.08</td>\\n\",\n       \"      <td>42.01</td>\\n\",\n       \"      <td>25.76</td>\\n\",\n       \"      <td>51.93</td>\\n\",\n       \"      <td>12.83</td>\\n\",\n       \"      <td>21243.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-10-31</th>\\n\",\n       \"      <td>603289</td>\\n\",\n       \"      <td>泰瑞机器</td>\\n\",\n       \"      <td>专用机械</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>45.82</td>\\n\",\n       \"      <td>0.51</td>\\n\",\n       \"      <td>2.04</td>\\n\",\n       \"      <td>88554.82</td>\\n\",\n       \"      <td>68437.21</td>\\n\",\n       \"      <td>15267.82</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.65</td>\\n\",\n       \"      <td>2017-10-31</td>\\n\",\n       \"      <td>26118.49</td>\\n\",\n       \"      <td>1.28</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>30.63</td>\\n\",\n       \"      <td>12.40</td>\\n\",\n       \"      <td>48514.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-09</th>\\n\",\n       \"      <td>603229</td>\\n\",\n       \"      <td>奥翔药业</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>93.03</td>\\n\",\n       \"      <td>0.40</td>\\n\",\n       \"      <td>1.60</td>\\n\",\n       \"      <td>68624.13</td>\\n\",\n       \"      <td>45903.00</td>\\n\",\n       \"      <td>14470.87</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.22</td>\\n\",\n       \"      <td>2017-05-09</td>\\n\",\n       \"      <td>14151.70</td>\\n\",\n       \"      <td>0.88</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>60.63</td>\\n\",\n       \"      <td>22.65</td>\\n\",\n       \"      <td>14088.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-06-02</th>\\n\",\n       \"      <td>300660</td>\\n\",\n       \"      <td>江苏雷利</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>26.10</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.02</td>\\n\",\n       \"      <td>280316.22</td>\\n\",\n       \"      <td>256656.80</td>\\n\",\n       \"      <td>16994.20</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.21</td>\\n\",\n       \"      <td>2017-06-02</td>\\n\",\n       \"      <td>33226.21</td>\\n\",\n       \"      <td>3.26</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>26.74</td>\\n\",\n       \"      <td>12.07</td>\\n\",\n       \"      <td>18283.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-09-22</th>\\n\",\n       \"      <td>002900</td>\\n\",\n       \"      <td>哈三联</td>\\n\",\n       \"      <td>化学制药</td>\\n\",\n       \"      <td>黑龙江</td>\\n\",\n       \"      <td>44.11</td>\\n\",\n       \"      <td>0.53</td>\\n\",\n       \"      <td>2.11</td>\\n\",\n       \"      <td>218374.66</td>\\n\",\n       \"      <td>135898.92</td>\\n\",\n       \"      <td>68163.18</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.35</td>\\n\",\n       \"      <td>2017-09-22</td>\\n\",\n       \"      <td>39189.78</td>\\n\",\n       \"      <td>1.86</td>\\n\",\n       \"      <td>50.99</td>\\n\",\n       \"      <td>3.36</td>\\n\",\n       \"      <td>74.17</td>\\n\",\n       \"      <td>15.76</td>\\n\",\n       \"      <td>38400.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-19</th>\\n\",\n       \"      <td>002873</td>\\n\",\n       \"      <td>新天药业</td>\\n\",\n       \"      <td>中成药</td>\\n\",\n       \"      <td>贵州</td>\\n\",\n       \"      <td>44.54</td>\\n\",\n       \"      <td>0.17</td>\\n\",\n       \"      <td>0.69</td>\\n\",\n       \"      <td>91925.27</td>\\n\",\n       \"      <td>57405.90</td>\\n\",\n       \"      <td>21257.95</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.89</td>\\n\",\n       \"      <td>2017-05-19</td>\\n\",\n       \"      <td>18090.75</td>\\n\",\n       \"      <td>2.63</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>81.09</td>\\n\",\n       \"      <td>11.75</td>\\n\",\n       \"      <td>9615.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-08-10</th>\\n\",\n       \"      <td>300688</td>\\n\",\n       \"      <td>创业黑马</td>\\n\",\n       \"      <td>综合类</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>171.33</td>\\n\",\n       \"      <td>0.17</td>\\n\",\n       \"      <td>0.68</td>\\n\",\n       \"      <td>41396.55</td>\\n\",\n       \"      <td>40351.37</td>\\n\",\n       \"      <td>380.64</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>14.13</td>\\n\",\n       \"      <td>2017-08-10</td>\\n\",\n       \"      <td>6212.93</td>\\n\",\n       \"      <td>0.91</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>56.91</td>\\n\",\n       \"      <td>17.97</td>\\n\",\n       \"      <td>15720.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-02-26</th>\\n\",\n       \"      <td>603712</td>\\n\",\n       \"      <td>七一二</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>天津</td>\\n\",\n       \"      <td>363.05</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>7.72</td>\\n\",\n       \"      <td>348015.50</td>\\n\",\n       \"      <td>277392.63</td>\\n\",\n       \"      <td>57633.35</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>21.08</td>\\n\",\n       \"      <td>2018-02-26</td>\\n\",\n       \"      <td>20558.85</td>\\n\",\n       \"      <td>0.27</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>49.57</td>\\n\",\n       \"      <td>8.39</td>\\n\",\n       \"      <td>88473.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-11-21</th>\\n\",\n       \"      <td>300726</td>\\n\",\n       \"      <td>宏达电子</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>86.52</td>\\n\",\n       \"      <td>0.40</td>\\n\",\n       \"      <td>4.00</td>\\n\",\n       \"      <td>100780.30</td>\\n\",\n       \"      <td>80427.53</td>\\n\",\n       \"      <td>8466.57</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>16.70</td>\\n\",\n       \"      <td>2017-11-21</td>\\n\",\n       \"      <td>23141.20</td>\\n\",\n       \"      <td>0.58</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>70.73</td>\\n\",\n       \"      <td>39.73</td>\\n\",\n       \"      <td>79196.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-07-03</th>\\n\",\n       \"      <td>300670</td>\\n\",\n       \"      <td>大烨智能</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>88.13</td>\\n\",\n       \"      <td>0.27</td>\\n\",\n       \"      <td>1.08</td>\\n\",\n       \"      <td>69398.42</td>\\n\",\n       \"      <td>59512.13</td>\\n\",\n       \"      <td>6638.05</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>6.81</td>\\n\",\n       \"      <td>2017-07-03</td>\\n\",\n       \"      <td>14113.52</td>\\n\",\n       \"      <td>1.31</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>31.06</td>\\n\",\n       \"      <td>15.77</td>\\n\",\n       \"      <td>13484.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-04-21</th>\\n\",\n       \"      <td>300554</td>\\n\",\n       \"      <td>三超新材</td>\\n\",\n       \"      <td>矿物制品</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>94.44</td>\\n\",\n       \"      <td>0.13</td>\\n\",\n       \"      <td>0.52</td>\\n\",\n       \"      <td>48783.32</td>\\n\",\n       \"      <td>33910.75</td>\\n\",\n       \"      <td>12251.67</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>10.86</td>\\n\",\n       \"      <td>2017-04-21</td>\\n\",\n       \"      <td>10747.62</td>\\n\",\n       \"      <td>2.07</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>47.15</td>\\n\",\n       \"      <td>24.98</td>\\n\",\n       \"      <td>4538.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-22</th>\\n\",\n       \"      <td>603383</td>\\n\",\n       \"      <td>顶点软件</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>49.79</td>\\n\",\n       \"      <td>0.21</td>\\n\",\n       \"      <td>0.86</td>\\n\",\n       \"      <td>115820.30</td>\\n\",\n       \"      <td>104881.36</td>\\n\",\n       \"      <td>3878.28</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.41</td>\\n\",\n       \"      <td>2017-05-22</td>\\n\",\n       \"      <td>38075.21</td>\\n\",\n       \"      <td>4.43</td>\\n\",\n       \"      <td>19.09</td>\\n\",\n       \"      <td>44.59</td>\\n\",\n       \"      <td>78.78</td>\\n\",\n       \"      <td>41.80</td>\\n\",\n       \"      <td>8928.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-02-23</th>\\n\",\n       \"      <td>002927</td>\\n\",\n       \"      <td>泰永长征</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>贵州</td>\\n\",\n       \"      <td>102.26</td>\\n\",\n       \"      <td>0.23</td>\\n\",\n       \"      <td>0.94</td>\\n\",\n       \"      <td>43605.35</td>\\n\",\n       \"      <td>35037.03</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>12.70</td>\\n\",\n       \"      <td>2018-02-23</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>18.51</td>\\n\",\n       \"      <td>48823.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-02-06</th>\\n\",\n       \"      <td>300644</td>\\n\",\n       \"      <td>南京聚隆</td>\\n\",\n       \"      <td>塑料</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>62.16</td>\\n\",\n       \"      <td>0.16</td>\\n\",\n       \"      <td>0.64</td>\\n\",\n       \"      <td>82547.78</td>\\n\",\n       \"      <td>60597.23</td>\\n\",\n       \"      <td>18706.01</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>6.21</td>\\n\",\n       \"      <td>2018-02-06</td>\\n\",\n       \"      <td>25969.65</td>\\n\",\n       \"      <td>4.06</td>\\n\",\n       \"      <td>13.33</td>\\n\",\n       \"      <td>-28.26</td>\\n\",\n       \"      <td>17.55</td>\\n\",\n       \"      <td>5.51</td>\\n\",\n       \"      <td>31946.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-20</th>\\n\",\n       \"      <td>300598</td>\\n\",\n       \"      <td>诚迈科技</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>111.58</td>\\n\",\n       \"      <td>0.48</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>53850.86</td>\\n\",\n       \"      <td>44918.25</td>\\n\",\n       \"      <td>626.82</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>9.78</td>\\n\",\n       \"      <td>2017-01-20</td>\\n\",\n       \"      <td>17461.71</td>\\n\",\n       \"      <td>2.18</td>\\n\",\n       \"      <td>-3.84</td>\\n\",\n       \"      <td>-22.12</td>\\n\",\n       \"      <td>31.26</td>\\n\",\n       \"      <td>8.10</td>\\n\",\n       \"      <td>9182.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-10</th>\\n\",\n       \"      <td>603266</td>\\n\",\n       \"      <td>天龙股份</td>\\n\",\n       \"      <td>塑料</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>34.03</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>98374.46</td>\\n\",\n       \"      <td>71618.72</td>\\n\",\n       \"      <td>18603.42</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.68</td>\\n\",\n       \"      <td>2017-01-10</td>\\n\",\n       \"      <td>33154.17</td>\\n\",\n       \"      <td>3.32</td>\\n\",\n       \"      <td>8.21</td>\\n\",\n       \"      <td>4.72</td>\\n\",\n       \"      <td>28.05</td>\\n\",\n       \"      <td>10.33</td>\\n\",\n       \"      <td>8819.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-12-18</th>\\n\",\n       \"      <td>002919</td>\\n\",\n       \"      <td>名臣健康</td>\\n\",\n       \"      <td>日用化工</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>69.13</td>\\n\",\n       \"      <td>0.20</td>\\n\",\n       \"      <td>0.81</td>\\n\",\n       \"      <td>46302.28</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>6.24</td>\\n\",\n       \"      <td>2017-12-18</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>7.77</td>\\n\",\n       \"      <td>43677.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-04-21</th>\\n\",\n       \"      <td>603139</td>\\n\",\n       \"      <td>康惠制药</td>\\n\",\n       \"      <td>中成药</td>\\n\",\n       \"      <td>陕西</td>\\n\",\n       \"      <td>61.04</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>94826.35</td>\\n\",\n       \"      <td>81229.31</td>\\n\",\n       \"      <td>5390.80</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.35</td>\\n\",\n       \"      <td>2017-04-21</td>\\n\",\n       \"      <td>33866.51</td>\\n\",\n       \"      <td>3.39</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>57.10</td>\\n\",\n       \"      <td>15.64</td>\\n\",\n       \"      <td>13137.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-03-23</th>\\n\",\n       \"      <td>300634</td>\\n\",\n       \"      <td>彩讯股份</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>81.30</td>\\n\",\n       \"      <td>0.40</td>\\n\",\n       \"      <td>4.00</td>\\n\",\n       \"      <td>100621.55</td>\\n\",\n       \"      <td>65063.45</td>\\n\",\n       \"      <td>1320.74</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>11.01</td>\\n\",\n       \"      <td>2018-03-23</td>\\n\",\n       \"      <td>19710.35</td>\\n\",\n       \"      <td>0.49</td>\\n\",\n       \"      <td>33.46</td>\\n\",\n       \"      <td>44.54</td>\\n\",\n       \"      <td>48.01</td>\\n\",\n       \"      <td>21.36</td>\\n\",\n       \"      <td>77432.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-24</th>\\n\",\n       \"      <td>300629</td>\\n\",\n       \"      <td>新劲刚</td>\\n\",\n       \"      <td>矿物制品</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>137.29</td>\\n\",\n       \"      <td>0.29</td>\\n\",\n       \"      <td>0.67</td>\\n\",\n       \"      <td>48471.40</td>\\n\",\n       \"      <td>36097.23</td>\\n\",\n       \"      <td>8623.61</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>9.68</td>\\n\",\n       \"      <td>2017-03-24</td>\\n\",\n       \"      <td>12290.36</td>\\n\",\n       \"      <td>1.84</td>\\n\",\n       \"      <td>2.26</td>\\n\",\n       \"      <td>-8.10</td>\\n\",\n       \"      <td>32.24</td>\\n\",\n       \"      <td>9.84</td>\\n\",\n       \"      <td>7729.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-11-15</th>\\n\",\n       \"      <td>300721</td>\\n\",\n       \"      <td>怡达股份</td>\\n\",\n       \"      <td>化工原料</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>40.04</td>\\n\",\n       \"      <td>0.20</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>100619.93</td>\\n\",\n       \"      <td>60467.48</td>\\n\",\n       \"      <td>21425.98</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.09</td>\\n\",\n       \"      <td>2017-11-15</td>\\n\",\n       \"      <td>18573.72</td>\\n\",\n       \"      <td>2.32</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>16.71</td>\\n\",\n       \"      <td>5.48</td>\\n\",\n       \"      <td>14138.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-08-22</th>\\n\",\n       \"      <td>300693</td>\\n\",\n       \"      <td>盛弘股份</td>\\n\",\n       \"      <td>电气设备</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>54.61</td>\\n\",\n       \"      <td>0.23</td>\\n\",\n       \"      <td>0.91</td>\\n\",\n       \"      <td>78534.15</td>\\n\",\n       \"      <td>76455.40</td>\\n\",\n       \"      <td>1210.45</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.00</td>\\n\",\n       \"      <td>2017-08-22</td>\\n\",\n       \"      <td>12563.21</td>\\n\",\n       \"      <td>1.38</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>50.40</td>\\n\",\n       \"      <td>11.96</td>\\n\",\n       \"      <td>13821.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-12-29</th>\\n\",\n       \"      <td>300735</td>\\n\",\n       \"      <td>光弘科技</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>43.81</td>\\n\",\n       \"      <td>0.89</td>\\n\",\n       \"      <td>3.55</td>\\n\",\n       \"      <td>106216.22</td>\\n\",\n       \"      <td>48046.23</td>\\n\",\n       \"      <td>48601.87</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.12</td>\\n\",\n       \"      <td>2017-12-29</td>\\n\",\n       \"      <td>22749.50</td>\\n\",\n       \"      <td>0.64</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>27.77</td>\\n\",\n       \"      <td>14.27</td>\\n\",\n       \"      <td>58700.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-12-05</th>\\n\",\n       \"      <td>300730</td>\\n\",\n       \"      <td>科创信息</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>907.52</td>\\n\",\n       \"      <td>0.23</td>\\n\",\n       \"      <td>0.93</td>\\n\",\n       \"      <td>32997.26</td>\\n\",\n       \"      <td>24184.00</td>\\n\",\n       \"      <td>6611.02</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>17.95</td>\\n\",\n       \"      <td>2017-12-05</td>\\n\",\n       \"      <td>8310.85</td>\\n\",\n       \"      <td>0.89</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>36.00</td>\\n\",\n       \"      <td>2.69</td>\\n\",\n       \"      <td>48600.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-10-31</th>\\n\",\n       \"      <td>002910</td>\\n\",\n       \"      <td>庄园牧场</td>\\n\",\n       \"      <td>乳制品</td>\\n\",\n       \"      <td>甘肃</td>\\n\",\n       \"      <td>63.18</td>\\n\",\n       \"      <td>0.47</td>\\n\",\n       \"      <td>1.87</td>\\n\",\n       \"      <td>180371.77</td>\\n\",\n       \"      <td>87209.15</td>\\n\",\n       \"      <td>62579.91</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.83</td>\\n\",\n       \"      <td>2017-10-31</td>\\n\",\n       \"      <td>39948.32</td>\\n\",\n       \"      <td>2.13</td>\\n\",\n       \"      <td>-5.62</td>\\n\",\n       \"      <td>-9.96</td>\\n\",\n       \"      <td>30.71</td>\\n\",\n       \"      <td>10.88</td>\\n\",\n       \"      <td>27589.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-11-01</th>\\n\",\n       \"      <td>300711</td>\\n\",\n       \"      <td>广哈通信</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>85.40</td>\\n\",\n       \"      <td>0.36</td>\\n\",\n       \"      <td>1.44</td>\\n\",\n       \"      <td>34718.62</td>\\n\",\n       \"      <td>30575.38</td>\\n\",\n       \"      <td>1612.71</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>11.25</td>\\n\",\n       \"      <td>2017-11-01</td>\\n\",\n       \"      <td>11660.60</td>\\n\",\n       \"      <td>0.81</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>53.03</td>\\n\",\n       \"      <td>20.22</td>\\n\",\n       \"      <td>71217.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-01-19</th>\\n\",\n       \"      <td>300738</td>\\n\",\n       \"      <td>奥飞数据</td>\\n\",\n       \"      <td>电信运营</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>73.05</td>\\n\",\n       \"      <td>0.16</td>\\n\",\n       \"      <td>0.65</td>\\n\",\n       \"      <td>33440.90</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>14.12</td>\\n\",\n       \"      <td>2018-01-19</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>17.33</td>\\n\",\n       \"      <td>32672.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-08-08</th>\\n\",\n       \"      <td>603535</td>\\n\",\n       \"      <td>嘉诚国际</td>\\n\",\n       \"      <td>仓储物流</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>31.44</td>\\n\",\n       \"      <td>0.38</td>\\n\",\n       \"      <td>1.50</td>\\n\",\n       \"      <td>171046.63</td>\\n\",\n       \"      <td>107917.27</td>\\n\",\n       \"      <td>36970.78</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.71</td>\\n\",\n       \"      <td>2017-08-08</td>\\n\",\n       \"      <td>51971.03</td>\\n\",\n       \"      <td>3.46</td>\\n\",\n       \"      <td>20.47</td>\\n\",\n       \"      <td>14.32</td>\\n\",\n       \"      <td>23.11</td>\\n\",\n       \"      <td>11.49</td>\\n\",\n       \"      <td>16499.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-04-26</th>\\n\",\n       \"      <td>300514</td>\\n\",\n       \"      <td>友讯达</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>62.79</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>68944.21</td>\\n\",\n       \"      <td>66716.28</td>\\n\",\n       \"      <td>1369.74</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.14</td>\\n\",\n       \"      <td>2017-04-26</td>\\n\",\n       \"      <td>13530.61</td>\\n\",\n       \"      <td>1.35</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>41.98</td>\\n\",\n       \"      <td>13.49</td>\\n\",\n       \"      <td>11522.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-01-16</th>\\n\",\n       \"      <td>300733</td>\\n\",\n       \"      <td>西菱动力</td>\\n\",\n       \"      <td>汽车配件</td>\\n\",\n       \"      <td>四川</td>\\n\",\n       \"      <td>47.62</td>\\n\",\n       \"      <td>0.40</td>\\n\",\n       \"      <td>1.60</td>\\n\",\n       \"      <td>102448.71</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.47</td>\\n\",\n       \"      <td>2018-01-16</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>15.61</td>\\n\",\n       \"      <td>77780.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2018-02-01</th>\\n\",\n       \"      <td>300739</td>\\n\",\n       \"      <td>明阳电路</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>39.96</td>\\n\",\n       \"      <td>0.31</td>\\n\",\n       \"      <td>1.23</td>\\n\",\n       \"      <td>96984.00</td>\\n\",\n       \"      <td>54019.57</td>\\n\",\n       \"      <td>36262.06</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.39</td>\\n\",\n       \"      <td>2018-02-01</td>\\n\",\n       \"      <td>14147.72</td>\\n\",\n       \"      <td>1.15</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>32.15</td>\\n\",\n       \"      <td>11.74</td>\\n\",\n       \"      <td>61548.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-07-31</th>\\n\",\n       \"      <td>300679</td>\\n\",\n       \"      <td>电连技术</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>25.50</td>\\n\",\n       \"      <td>0.30</td>\\n\",\n       \"      <td>1.20</td>\\n\",\n       \"      <td>329440.88</td>\\n\",\n       \"      <td>281085.16</td>\\n\",\n       \"      <td>34557.31</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.01</td>\\n\",\n       \"      <td>2017-07-31</td>\\n\",\n       \"      <td>59821.28</td>\\n\",\n       \"      <td>4.99</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>47.23</td>\\n\",\n       \"      <td>26.21</td>\\n\",\n       \"      <td>23866.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-09-26</th>\\n\",\n       \"      <td>603363</td>\\n\",\n       \"      <td>傲农生物</td>\\n\",\n       \"      <td>饲料</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>75.90</td>\\n\",\n       \"      <td>0.60</td>\\n\",\n       \"      <td>4.26</td>\\n\",\n       \"      <td>253808.34</td>\\n\",\n       \"      <td>117686.90</td>\\n\",\n       \"      <td>71882.36</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>10.01</td>\\n\",\n       \"      <td>2017-09-26</td>\\n\",\n       \"      <td>17489.06</td>\\n\",\n       \"      <td>0.41</td>\\n\",\n       \"      <td>-1.52</td>\\n\",\n       \"      <td>18.32</td>\\n\",\n       \"      <td>18.86</td>\\n\",\n       \"      <td>2.21</td>\\n\",\n       \"      <td>32006.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-12-27</th>\\n\",\n       \"      <td>300684</td>\\n\",\n       \"      <td>中石科技</td>\\n\",\n       \"      <td>化工原料</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>79.80</td>\\n\",\n       \"      <td>0.22</td>\\n\",\n       \"      <td>0.87</td>\\n\",\n       \"      <td>83437.31</td>\\n\",\n       \"      <td>56011.80</td>\\n\",\n       \"      <td>24528.76</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>11.84</td>\\n\",\n       \"      <td>2017-12-27</td>\\n\",\n       \"      <td>20423.99</td>\\n\",\n       \"      <td>2.35</td>\\n\",\n       \"      <td>187.49</td>\\n\",\n       \"      <td>123.06</td>\\n\",\n       \"      <td>36.42</td>\\n\",\n       \"      <td>14.42</td>\\n\",\n       \"      <td>17500.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-05</th>\\n\",\n       \"      <td>603032</td>\\n\",\n       \"      <td>德新交运</td>\\n\",\n       \"      <td>公路</td>\\n\",\n       \"      <td>新疆</td>\\n\",\n       \"      <td>175.30</td>\\n\",\n       \"      <td>0.65</td>\\n\",\n       \"      <td>1.33</td>\\n\",\n       \"      <td>49133.62</td>\\n\",\n       \"      <td>40787.21</td>\\n\",\n       \"      <td>4330.50</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>10.94</td>\\n\",\n       \"      <td>2017-01-05</td>\\n\",\n       \"      <td>12899.17</td>\\n\",\n       \"      <td>0.97</td>\\n\",\n       \"      <td>-22.93</td>\\n\",\n       \"      <td>-46.61</td>\\n\",\n       \"      <td>36.61</td>\\n\",\n       \"      <td>13.73</td>\\n\",\n       \"      <td>2328.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-08-22</th>\\n\",\n       \"      <td>300696</td>\\n\",\n       \"      <td>爱乐达</td>\\n\",\n       \"      <td>航空</td>\\n\",\n       \"      <td>四川</td>\\n\",\n       \"      <td>103.57</td>\\n\",\n       \"      <td>0.17</td>\\n\",\n       \"      <td>0.69</td>\\n\",\n       \"      <td>72619.96</td>\\n\",\n       \"      <td>53274.55</td>\\n\",\n       \"      <td>14581.25</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.53</td>\\n\",\n       \"      <td>2017-08-22</td>\\n\",\n       \"      <td>9670.87</td>\\n\",\n       \"      <td>1.40</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>71.14</td>\\n\",\n       \"      <td>52.00</td>\\n\",\n       \"      <td>14938.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-02-20</th>\\n\",\n       \"      <td>300613</td>\\n\",\n       \"      <td>富瀚微</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>68.97</td>\\n\",\n       \"      <td>0.13</td>\\n\",\n       \"      <td>0.45</td>\\n\",\n       \"      <td>97363.90</td>\\n\",\n       \"      <td>85505.56</td>\\n\",\n       \"      <td>1777.51</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.87</td>\\n\",\n       \"      <td>2017-02-20</td>\\n\",\n       \"      <td>26320.40</td>\\n\",\n       \"      <td>5.81</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>49.46</td>\\n\",\n       \"      <td>25.26</td>\\n\",\n       \"      <td>11264.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-09-13</th>\\n\",\n       \"      <td>603648</td>\\n\",\n       \"      <td>畅联股份</td>\\n\",\n       \"      <td>仓储物流</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>48.82</td>\\n\",\n       \"      <td>0.92</td>\\n\",\n       \"      <td>3.69</td>\\n\",\n       \"      <td>181480.97</td>\\n\",\n       \"      <td>129244.95</td>\\n\",\n       \"      <td>28878.70</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.11</td>\\n\",\n       \"      <td>2017-09-13</td>\\n\",\n       \"      <td>20402.98</td>\\n\",\n       \"      <td>0.55</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>27.63</td>\\n\",\n       \"      <td>13.54</td>\\n\",\n       \"      <td>58370.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-12-29</th>\\n\",\n       \"      <td>603329</td>\\n\",\n       \"      <td>上海雅仕</td>\\n\",\n       \"      <td>仓储物流</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>65.33</td>\\n\",\n       \"      <td>0.33</td>\\n\",\n       \"      <td>1.32</td>\\n\",\n       \"      <td>84900.68</td>\\n\",\n       \"      <td>72657.60</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.46</td>\\n\",\n       \"      <td>2017-12-29</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>4.37</td>\\n\",\n       \"      <td>35041.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-12-08</th>\\n\",\n       \"      <td>300731</td>\\n\",\n       \"      <td>科创新源</td>\\n\",\n       \"      <td>橡胶</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>52.75</td>\\n\",\n       \"      <td>0.22</td>\\n\",\n       \"      <td>0.87</td>\\n\",\n       \"      <td>26369.38</td>\\n\",\n       \"      <td>23502.03</td>\\n\",\n       \"      <td>1737.75</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>11.11</td>\\n\",\n       \"      <td>2017-12-08</td>\\n\",\n       \"      <td>5390.14</td>\\n\",\n       \"      <td>0.62</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>48.54</td>\\n\",\n       \"      <td>25.94</td>\\n\",\n       \"      <td>45956.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-06-06</th>\\n\",\n       \"      <td>300661</td>\\n\",\n       \"      <td>圣邦股份</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>87.02</td>\\n\",\n       \"      <td>0.15</td>\\n\",\n       \"      <td>0.61</td>\\n\",\n       \"      <td>86190.96</td>\\n\",\n       \"      <td>82643.93</td>\\n\",\n       \"      <td>1150.35</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.73</td>\\n\",\n       \"      <td>2017-06-06</td>\\n\",\n       \"      <td>19735.47</td>\\n\",\n       \"      <td>3.24</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>43.62</td>\\n\",\n       \"      <td>16.02</td>\\n\",\n       \"      <td>5677.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-05</th>\\n\",\n       \"      <td>300588</td>\\n\",\n       \"      <td>熙菱信息</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>新疆</td>\\n\",\n       \"      <td>65.77</td>\\n\",\n       \"      <td>0.31</td>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>84675.42</td>\\n\",\n       \"      <td>79111.96</td>\\n\",\n       \"      <td>736.22</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.19</td>\\n\",\n       \"      <td>2017-01-05</td>\\n\",\n       \"      <td>13293.88</td>\\n\",\n       \"      <td>1.33</td>\\n\",\n       \"      <td>35.56</td>\\n\",\n       \"      <td>85.39</td>\\n\",\n       \"      <td>24.81</td>\\n\",\n       \"      <td>7.47</td>\\n\",\n       \"      <td>10945.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-01-26</th>\\n\",\n       \"      <td>300603</td>\\n\",\n       \"      <td>立昂技术</td>\\n\",\n       \"      <td>通信设备</td>\\n\",\n       \"      <td>新疆</td>\\n\",\n       \"      <td>47.46</td>\\n\",\n       \"      <td>0.57</td>\\n\",\n       \"      <td>1.03</td>\\n\",\n       \"      <td>124445.82</td>\\n\",\n       \"      <td>99134.21</td>\\n\",\n       \"      <td>2345.56</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.70</td>\\n\",\n       \"      <td>2017-01-26</td>\\n\",\n       \"      <td>16070.23</td>\\n\",\n       \"      <td>1.57</td>\\n\",\n       \"      <td>247.32</td>\\n\",\n       \"      <td>259.16</td>\\n\",\n       \"      <td>20.03</td>\\n\",\n       \"      <td>8.61</td>\\n\",\n       \"      <td>11752.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-11-09</th>\\n\",\n       \"      <td>300719</td>\\n\",\n       \"      <td>安达维尔</td>\\n\",\n       \"      <td>航空</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>53.58</td>\\n\",\n       \"      <td>0.42</td>\\n\",\n       \"      <td>1.68</td>\\n\",\n       \"      <td>111330.52</td>\\n\",\n       \"      <td>99828.74</td>\\n\",\n       \"      <td>9335.78</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.00</td>\\n\",\n       \"      <td>2017-11-09</td>\\n\",\n       \"      <td>26470.75</td>\\n\",\n       \"      <td>1.58</td>\\n\",\n       \"      <td>10.59</td>\\n\",\n       \"      <td>-1.52</td>\\n\",\n       \"      <td>53.67</td>\\n\",\n       \"      <td>20.42</td>\\n\",\n       \"      <td>25100.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-08-03</th>\\n\",\n       \"      <td>300687</td>\\n\",\n       \"      <td>赛意信息</td>\\n\",\n       \"      <td>软件服务</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>52.57</td>\\n\",\n       \"      <td>0.20</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>83921.68</td>\\n\",\n       \"      <td>80942.17</td>\\n\",\n       \"      <td>291.20</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>6.36</td>\\n\",\n       \"      <td>2017-08-03</td>\\n\",\n       \"      <td>14224.57</td>\\n\",\n       \"      <td>1.78</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>31.36</td>\\n\",\n       \"      <td>13.34</td>\\n\",\n       \"      <td>13585.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-10-19</th>\\n\",\n       \"      <td>300709</td>\\n\",\n       \"      <td>精研科技</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>31.01</td>\\n\",\n       \"      <td>0.22</td>\\n\",\n       \"      <td>0.88</td>\\n\",\n       \"      <td>104817.97</td>\\n\",\n       \"      <td>51288.05</td>\\n\",\n       \"      <td>36566.43</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.83</td>\\n\",\n       \"      <td>2017-10-19</td>\\n\",\n       \"      <td>26389.69</td>\\n\",\n       \"      <td>3.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>40.49</td>\\n\",\n       \"      <td>17.04</td>\\n\",\n       \"      <td>16000.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-16</th>\\n\",\n       \"      <td>300653</td>\\n\",\n       \"      <td>正海生物</td>\\n\",\n       \"      <td>医疗保健</td>\\n\",\n       \"      <td>山东</td>\\n\",\n       \"      <td>65.83</td>\\n\",\n       \"      <td>0.20</td>\\n\",\n       \"      <td>0.80</td>\\n\",\n       \"      <td>53081.60</td>\\n\",\n       \"      <td>45645.28</td>\\n\",\n       \"      <td>2500.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.40</td>\\n\",\n       \"      <td>2017-05-16</td>\\n\",\n       \"      <td>12030.73</td>\\n\",\n       \"      <td>1.50</td>\\n\",\n       \"      <td>21.35</td>\\n\",\n       \"      <td>35.63</td>\\n\",\n       \"      <td>93.67</td>\\n\",\n       \"      <td>33.74</td>\\n\",\n       \"      <td>8714.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-11-27</th>\\n\",\n       \"      <td>300727</td>\\n\",\n       \"      <td>润禾材料</td>\\n\",\n       \"      <td>化工原料</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>90.09</td>\\n\",\n       \"      <td>0.24</td>\\n\",\n       \"      <td>0.98</td>\\n\",\n       \"      <td>43196.92</td>\\n\",\n       \"      <td>25291.61</td>\\n\",\n       \"      <td>12968.00</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>8.96</td>\\n\",\n       \"      <td>2017-11-27</td>\\n\",\n       \"      <td>8362.07</td>\\n\",\n       \"      <td>0.86</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>29.56</td>\\n\",\n       \"      <td>10.75</td>\\n\",\n       \"      <td>50562.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-23</th>\\n\",\n       \"      <td>300657</td>\\n\",\n       \"      <td>弘信电子</td>\\n\",\n       \"      <td>元器件</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>67.08</td>\\n\",\n       \"      <td>0.26</td>\\n\",\n       \"      <td>1.04</td>\\n\",\n       \"      <td>184841.84</td>\\n\",\n       \"      <td>111414.60</td>\\n\",\n       \"      <td>59763.01</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>6.42</td>\\n\",\n       \"      <td>2017-05-23</td>\\n\",\n       \"      <td>18206.14</td>\\n\",\n       \"      <td>1.75</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>13.57</td>\\n\",\n       \"      <td>3.79</td>\\n\",\n       \"      <td>11765.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>477 rows × 24 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"                code  name industry area      pe  outstanding  totals  \\\\\\n\",\n       \"timeToMarket                                                            \\n\",\n       \"2018-04-10    603897   N长城     电气设备   浙江   25.57         0.45    1.78   \\n\",\n       \"2018-03-26    600929  湖南盐业       食品   湖南   72.52         1.50    9.18   \\n\",\n       \"2017-03-16    300621  维业股份     装修装饰   深圳   37.99         0.43    1.39   \\n\",\n       \"2017-09-20    603106  恒银金融     电脑设备   天津   45.40         0.70    2.80   \\n\",\n       \"2017-03-15    603811  诚意药业     化学制药   浙江   38.80         0.57    0.85   \\n\",\n       \"2018-03-28    002930  宏川智慧     仓储物流   广东   62.90         0.61    2.43   \\n\",\n       \"2017-09-22    603963  大理药业     化学制药   云南   73.92         0.25    1.00   \\n\",\n       \"2018-03-30    603214   爱婴室       百货   上海   49.45         0.25    1.00   \\n\",\n       \"2017-01-17    300595  欧普康视     医疗保健   安徽   54.16         0.76    1.24   \\n\",\n       \"2017-03-21    300627  华测导航     通信设备   上海   85.66         0.50    1.23   \\n\",\n       \"2017-02-08    603637  镇海股份     建筑施工   浙江   66.69         0.33    1.33   \\n\",\n       \"2017-10-10    300705  九典制药     化学制药   湖南   89.94         0.29    1.17   \\n\",\n       \"2017-10-31    603289  泰瑞机器     专用机械   浙江   45.82         0.51    2.04   \\n\",\n       \"2017-05-09    603229  奥翔药业     化学制药   浙江   93.03         0.40    1.60   \\n\",\n       \"2017-06-02    300660  江苏雷利     电气设备   江苏   26.10         0.25    1.02   \\n\",\n       \"2017-09-22    002900   哈三联     化学制药  黑龙江   44.11         0.53    2.11   \\n\",\n       \"2017-05-19    002873  新天药业      中成药   贵州   44.54         0.17    0.69   \\n\",\n       \"2017-08-10    300688  创业黑马      综合类   北京  171.33         0.17    0.68   \\n\",\n       \"2018-02-26    603712   七一二     通信设备   天津  363.05         1.00    7.72   \\n\",\n       \"2017-11-21    300726  宏达电子      元器件   湖南   86.52         0.40    4.00   \\n\",\n       \"2017-07-03    300670  大烨智能     电气设备   江苏   88.13         0.27    1.08   \\n\",\n       \"2017-04-21    300554  三超新材     矿物制品   江苏   94.44         0.13    0.52   \\n\",\n       \"2017-05-22    603383  顶点软件     软件服务   福建   49.79         0.21    0.86   \\n\",\n       \"2018-02-23    002927  泰永长征     电气设备   贵州  102.26         0.23    0.94   \\n\",\n       \"2018-02-06    300644  南京聚隆       塑料   江苏   62.16         0.16    0.64   \\n\",\n       \"2017-01-20    300598  诚迈科技     软件服务   江苏  111.58         0.48    0.80   \\n\",\n       \"2017-01-10    603266  天龙股份       塑料   浙江   34.03         0.25    1.00   \\n\",\n       \"2017-12-18    002919  名臣健康     日用化工   广东   69.13         0.20    0.81   \\n\",\n       \"2017-04-21    603139  康惠制药      中成药   陕西   61.04         0.25    1.00   \\n\",\n       \"2018-03-23    300634  彩讯股份     软件服务   深圳   81.30         0.40    4.00   \\n\",\n       \"...              ...   ...      ...  ...     ...          ...     ...   \\n\",\n       \"2017-03-24    300629   新劲刚     矿物制品   广东  137.29         0.29    0.67   \\n\",\n       \"2017-11-15    300721  怡达股份     化工原料   江苏   40.04         0.20    0.80   \\n\",\n       \"2017-08-22    300693  盛弘股份     电气设备   深圳   54.61         0.23    0.91   \\n\",\n       \"2017-12-29    300735  光弘科技     通信设备   广东   43.81         0.89    3.55   \\n\",\n       \"2017-12-05    300730  科创信息     软件服务   湖南  907.52         0.23    0.93   \\n\",\n       \"2017-10-31    002910  庄园牧场      乳制品   甘肃   63.18         0.47    1.87   \\n\",\n       \"2017-11-01    300711  广哈通信     通信设备   广东   85.40         0.36    1.44   \\n\",\n       \"2018-01-19    300738  奥飞数据     电信运营   广东   73.05         0.16    0.65   \\n\",\n       \"2017-08-08    603535  嘉诚国际     仓储物流   广东   31.44         0.38    1.50   \\n\",\n       \"2017-04-26    300514   友讯达     通信设备   深圳   62.79         0.25    1.00   \\n\",\n       \"2018-01-16    300733  西菱动力     汽车配件   四川   47.62         0.40    1.60   \\n\",\n       \"2018-02-01    300739  明阳电路      元器件   深圳   39.96         0.31    1.23   \\n\",\n       \"2017-07-31    300679  电连技术      元器件   深圳   25.50         0.30    1.20   \\n\",\n       \"2017-09-26    603363  傲农生物       饲料   福建   75.90         0.60    4.26   \\n\",\n       \"2017-12-27    300684  中石科技     化工原料   北京   79.80         0.22    0.87   \\n\",\n       \"2017-01-05    603032  德新交运       公路   新疆  175.30         0.65    1.33   \\n\",\n       \"2017-08-22    300696   爱乐达       航空   四川  103.57         0.17    0.69   \\n\",\n       \"2017-02-20    300613   富瀚微      半导体   上海   68.97         0.13    0.45   \\n\",\n       \"2017-09-13    603648  畅联股份     仓储物流   上海   48.82         0.92    3.69   \\n\",\n       \"2017-12-29    603329  上海雅仕     仓储物流   上海   65.33         0.33    1.32   \\n\",\n       \"2017-12-08    300731  科创新源       橡胶   深圳   52.75         0.22    0.87   \\n\",\n       \"2017-06-06    300661  圣邦股份      元器件   北京   87.02         0.15    0.61   \\n\",\n       \"2017-01-05    300588  熙菱信息     软件服务   新疆   65.77         0.31    1.00   \\n\",\n       \"2017-01-26    300603  立昂技术     通信设备   新疆   47.46         0.57    1.03   \\n\",\n       \"2017-11-09    300719  安达维尔       航空   北京   53.58         0.42    1.68   \\n\",\n       \"2017-08-03    300687  赛意信息     软件服务   广东   52.57         0.20    0.80   \\n\",\n       \"2017-10-19    300709  精研科技      元器件   江苏   31.01         0.22    0.88   \\n\",\n       \"2017-05-16    300653  正海生物     医疗保健   山东   65.83         0.20    0.80   \\n\",\n       \"2017-11-27    300727  润禾材料     化工原料   浙江   90.09         0.24    0.98   \\n\",\n       \"2017-05-23    300657  弘信电子      元器件   福建   67.08         0.26    1.04   \\n\",\n       \"\\n\",\n       \"              totalAssets  liquidAssets  fixedAssets     ...         pb  \\\\\\n\",\n       \"timeToMarket                                             ...              \\n\",\n       \"2018-04-10      131807.23     117523.63     10988.37     ...       4.27   \\n\",\n       \"2018-03-26      310491.63      78859.31    139873.81     ...       5.36   \\n\",\n       \"2017-03-16      186181.06     169977.59      2515.88     ...       3.41   \\n\",\n       \"2017-09-20      212309.42     190471.27     16428.07     ...       4.80   \\n\",\n       \"2017-03-15       67298.32      46722.62     12191.86     ...       4.48   \\n\",\n       \"2018-03-28      187270.80      13539.20    103894.40     ...       3.66   \\n\",\n       \"2017-09-22       62622.20      44925.30     10986.69     ...       8.40   \\n\",\n       \"2018-03-30       76961.15      61297.16      7078.72     ...       9.27   \\n\",\n       \"2017-01-17       84769.46      71856.96      3970.03     ...      10.12   \\n\",\n       \"2017-03-21       95269.30      88869.28      2105.35     ...       9.13   \\n\",\n       \"2017-02-08       86330.46      76018.32      5968.18     ...       4.33   \\n\",\n       \"2017-10-10       76920.25      51869.26     13084.78     ...       9.34   \\n\",\n       \"2017-10-31       88554.82      68437.21     15267.82     ...       5.65   \\n\",\n       \"2017-05-09       68624.13      45903.00     14470.87     ...       7.22   \\n\",\n       \"2017-06-02      280316.22     256656.80     16994.20     ...       3.21   \\n\",\n       \"2017-09-22      218374.66     135898.92     68163.18     ...       4.35   \\n\",\n       \"2017-05-19       91925.27      57405.90     21257.95     ...       5.89   \\n\",\n       \"2017-08-10       41396.55      40351.37       380.64     ...      14.13   \\n\",\n       \"2018-02-26      348015.50     277392.63     57633.35     ...      21.08   \\n\",\n       \"2017-11-21      100780.30      80427.53      8466.57     ...      16.70   \\n\",\n       \"2017-07-03       69398.42      59512.13      6638.05     ...       6.81   \\n\",\n       \"2017-04-21       48783.32      33910.75     12251.67     ...      10.86   \\n\",\n       \"2017-05-22      115820.30     104881.36      3878.28     ...       5.41   \\n\",\n       \"2018-02-23       43605.35      35037.03         0.00     ...      12.70   \\n\",\n       \"2018-02-06       82547.78      60597.23     18706.01     ...       6.21   \\n\",\n       \"2017-01-20       53850.86      44918.25       626.82     ...       9.78   \\n\",\n       \"2017-01-10       98374.46      71618.72     18603.42     ...       3.68   \\n\",\n       \"2017-12-18       46302.28          0.00         0.00     ...       6.24   \\n\",\n       \"2017-04-21       94826.35      81229.31      5390.80     ...       3.35   \\n\",\n       \"2018-03-23      100621.55      65063.45      1320.74     ...      11.01   \\n\",\n       \"...                   ...           ...          ...     ...        ...   \\n\",\n       \"2017-03-24       48471.40      36097.23      8623.61     ...       9.68   \\n\",\n       \"2017-11-15      100619.93      60467.48     21425.98     ...       3.09   \\n\",\n       \"2017-08-22       78534.15      76455.40      1210.45     ...       5.00   \\n\",\n       \"2017-12-29      106216.22      48046.23     48601.87     ...       5.12   \\n\",\n       \"2017-12-05       32997.26      24184.00      6611.02     ...      17.95   \\n\",\n       \"2017-10-31      180371.77      87209.15     62579.91     ...       3.83   \\n\",\n       \"2017-11-01       34718.62      30575.38      1612.71     ...      11.25   \\n\",\n       \"2018-01-19       33440.90          0.00         0.00     ...      14.12   \\n\",\n       \"2017-08-08      171046.63     107917.27     36970.78     ...       2.71   \\n\",\n       \"2017-04-26       68944.21      66716.28      1369.74     ...       8.14   \\n\",\n       \"2018-01-16      102448.71          0.00         0.00     ...       5.47   \\n\",\n       \"2018-02-01       96984.00      54019.57     36262.06     ...       7.39   \\n\",\n       \"2017-07-31      329440.88     281085.16     34557.31     ...       3.01   \\n\",\n       \"2017-09-26      253808.34     117686.90     71882.36     ...      10.01   \\n\",\n       \"2017-12-27       83437.31      56011.80     24528.76     ...      11.84   \\n\",\n       \"2017-01-05       49133.62      40787.21      4330.50     ...      10.94   \\n\",\n       \"2017-08-22       72619.96      53274.55     14581.25     ...       7.53   \\n\",\n       \"2017-02-20       97363.90      85505.56      1777.51     ...       7.87   \\n\",\n       \"2017-09-13      181480.97     129244.95     28878.70     ...       5.11   \\n\",\n       \"2017-12-29       84900.68      72657.60         0.00     ...       8.46   \\n\",\n       \"2017-12-08       26369.38      23502.03      1737.75     ...      11.11   \\n\",\n       \"2017-06-06       86190.96      82643.93      1150.35     ...       8.73   \\n\",\n       \"2017-01-05       84675.42      79111.96       736.22     ...       8.19   \\n\",\n       \"2017-01-26      124445.82      99134.21      2345.56     ...       8.70   \\n\",\n       \"2017-11-09      111330.52      99828.74      9335.78     ...       5.00   \\n\",\n       \"2017-08-03       83921.68      80942.17       291.20     ...       6.36   \\n\",\n       \"2017-10-19      104817.97      51288.05     36566.43     ...       3.83   \\n\",\n       \"2017-05-16       53081.60      45645.28      2500.00     ...       8.40   \\n\",\n       \"2017-11-27       43196.92      25291.61     12968.00     ...       8.96   \\n\",\n       \"2017-05-23      184841.84     111414.60     59763.01     ...       6.42   \\n\",\n       \"\\n\",\n       \"              timeToMarket      undp  perundp     rev  profit    gpr    npr  \\\\\\n\",\n       \"timeToMarket                                                                  \\n\",\n       \"2018-04-10      2018-04-10  35286.05     1.98   41.98   55.84   8.19   3.87   \\n\",\n       \"2018-03-26      2018-03-26  71625.13     0.78    1.30   15.06  47.71   7.24   \\n\",\n       \"2017-03-16      2017-03-16  26666.50     1.92    0.00    0.00  13.34   4.22   \\n\",\n       \"2017-09-20      2017-09-20  27721.10     0.99    0.00    0.00  33.95  11.23   \\n\",\n       \"2017-03-15      2017-03-15   9561.42     1.12    6.12    1.57  52.11  20.31   \\n\",\n       \"2018-03-28      2018-03-28  38270.21     1.57   -0.74   10.33  56.59  25.41   \\n\",\n       \"2017-09-22      2017-09-22   9541.13     0.95    0.00    0.00  63.85  20.00   \\n\",\n       \"2018-03-30      2018-03-30  25456.17     2.55   14.06   26.47  28.41   5.18   \\n\",\n       \"2017-01-17      2017-01-17  20604.49     1.66   31.61   29.56  76.06  50.72   \\n\",\n       \"2017-03-21      2017-03-21  19288.67     1.56    0.00    0.00  54.56  14.97   \\n\",\n       \"2017-02-08      2017-02-08  20656.95     1.55  -37.75  -28.91  31.54  22.63   \\n\",\n       \"2017-10-10      2017-10-10  12709.62     1.08   42.01   25.76  51.93  12.83   \\n\",\n       \"2017-10-31      2017-10-31  26118.49     1.28    0.00    0.00  30.63  12.40   \\n\",\n       \"2017-05-09      2017-05-09  14151.70     0.88    0.00    0.00  60.63  22.65   \\n\",\n       \"2017-06-02      2017-06-02  33226.21     3.26    0.00    0.00  26.74  12.07   \\n\",\n       \"2017-09-22      2017-09-22  39189.78     1.86   50.99    3.36  74.17  15.76   \\n\",\n       \"2017-05-19      2017-05-19  18090.75     2.63    0.00    0.00  81.09  11.75   \\n\",\n       \"2017-08-10      2017-08-10   6212.93     0.91    0.00    0.00  56.91  17.97   \\n\",\n       \"2018-02-26      2018-02-26  20558.85     0.27    0.00    0.00  49.57   8.39   \\n\",\n       \"2017-11-21      2017-11-21  23141.20     0.58    0.00    0.00  70.73  39.73   \\n\",\n       \"2017-07-03      2017-07-03  14113.52     1.31    0.00    0.00  31.06  15.77   \\n\",\n       \"2017-04-21      2017-04-21  10747.62     2.07    0.00    0.00  47.15  24.98   \\n\",\n       \"2017-05-22      2017-05-22  38075.21     4.43   19.09   44.59  78.78  41.80   \\n\",\n       \"2018-02-23      2018-02-23      0.00     0.00    0.00    0.00   0.00  18.51   \\n\",\n       \"2018-02-06      2018-02-06  25969.65     4.06   13.33  -28.26  17.55   5.51   \\n\",\n       \"2017-01-20      2017-01-20  17461.71     2.18   -3.84  -22.12  31.26   8.10   \\n\",\n       \"2017-01-10      2017-01-10  33154.17     3.32    8.21    4.72  28.05  10.33   \\n\",\n       \"2017-12-18      2017-12-18      0.00     0.00    0.00    0.00   0.00   7.77   \\n\",\n       \"2017-04-21      2017-04-21  33866.51     3.39    0.00    0.00  57.10  15.64   \\n\",\n       \"2018-03-23      2018-03-23  19710.35     0.49   33.46   44.54  48.01  21.36   \\n\",\n       \"...                    ...       ...      ...     ...     ...    ...    ...   \\n\",\n       \"2017-03-24      2017-03-24  12290.36     1.84    2.26   -8.10  32.24   9.84   \\n\",\n       \"2017-11-15      2017-11-15  18573.72     2.32    0.00    0.00  16.71   5.48   \\n\",\n       \"2017-08-22      2017-08-22  12563.21     1.38    0.00    0.00  50.40  11.96   \\n\",\n       \"2017-12-29      2017-12-29  22749.50     0.64    0.00    0.00  27.77  14.27   \\n\",\n       \"2017-12-05      2017-12-05   8310.85     0.89    0.00    0.00  36.00   2.69   \\n\",\n       \"2017-10-31      2017-10-31  39948.32     2.13   -5.62   -9.96  30.71  10.88   \\n\",\n       \"2017-11-01      2017-11-01  11660.60     0.81    0.00    0.00  53.03  20.22   \\n\",\n       \"2018-01-19      2018-01-19      0.00     0.00    0.00    0.00   0.00  17.33   \\n\",\n       \"2017-08-08      2017-08-08  51971.03     3.46   20.47   14.32  23.11  11.49   \\n\",\n       \"2017-04-26      2017-04-26  13530.61     1.35    0.00    0.00  41.98  13.49   \\n\",\n       \"2018-01-16      2018-01-16      0.00     0.00    0.00    0.00   0.00  15.61   \\n\",\n       \"2018-02-01      2018-02-01  14147.72     1.15    0.00    0.00  32.15  11.74   \\n\",\n       \"2017-07-31      2017-07-31  59821.28     4.99    0.00    0.00  47.23  26.21   \\n\",\n       \"2017-09-26      2017-09-26  17489.06     0.41   -1.52   18.32  18.86   2.21   \\n\",\n       \"2017-12-27      2017-12-27  20423.99     2.35  187.49  123.06  36.42  14.42   \\n\",\n       \"2017-01-05      2017-01-05  12899.17     0.97  -22.93  -46.61  36.61  13.73   \\n\",\n       \"2017-08-22      2017-08-22   9670.87     1.40    0.00    0.00  71.14  52.00   \\n\",\n       \"2017-02-20      2017-02-20  26320.40     5.81    0.00    0.00  49.46  25.26   \\n\",\n       \"2017-09-13      2017-09-13  20402.98     0.55    0.00    0.00  27.63  13.54   \\n\",\n       \"2017-12-29      2017-12-29      0.00     0.00    0.00    0.00   0.00   4.37   \\n\",\n       \"2017-12-08      2017-12-08   5390.14     0.62    0.00    0.00  48.54  25.94   \\n\",\n       \"2017-06-06      2017-06-06  19735.47     3.24    0.00    0.00  43.62  16.02   \\n\",\n       \"2017-01-05      2017-01-05  13293.88     1.33   35.56   85.39  24.81   7.47   \\n\",\n       \"2017-01-26      2017-01-26  16070.23     1.57  247.32  259.16  20.03   8.61   \\n\",\n       \"2017-11-09      2017-11-09  26470.75     1.58   10.59   -1.52  53.67  20.42   \\n\",\n       \"2017-08-03      2017-08-03  14224.57     1.78    0.00    0.00  31.36  13.34   \\n\",\n       \"2017-10-19      2017-10-19  26389.69     3.00    0.00    0.00  40.49  17.04   \\n\",\n       \"2017-05-16      2017-05-16  12030.73     1.50   21.35   35.63  93.67  33.74   \\n\",\n       \"2017-11-27      2017-11-27   8362.07     0.86    0.00    0.00  29.56  10.75   \\n\",\n       \"2017-05-23      2017-05-23  18206.14     1.75    0.00    0.00  13.57   3.79   \\n\",\n       \"\\n\",\n       \"               holders        更新日期  \\n\",\n       \"timeToMarket                        \\n\",\n       \"2018-04-10     42986.0  2018-04-11  \\n\",\n       \"2018-03-26    140295.0  2018-04-11  \\n\",\n       \"2017-03-16     19044.0  2018-04-11  \\n\",\n       \"2017-09-20     36000.0  2018-04-11  \\n\",\n       \"2017-03-15     10574.0  2018-04-11  \\n\",\n       \"2018-03-28    115500.0  2018-04-11  \\n\",\n       \"2017-09-22     27488.0  2018-04-11  \\n\",\n       \"2018-03-30     26639.0  2018-04-11  \\n\",\n       \"2017-01-17      6781.0  2018-04-11  \\n\",\n       \"2017-03-21     16380.0  2018-04-11  \\n\",\n       \"2017-02-08      9897.0  2018-04-11  \\n\",\n       \"2017-10-10     21243.0  2018-04-11  \\n\",\n       \"2017-10-31     48514.0  2018-04-11  \\n\",\n       \"2017-05-09     14088.0  2018-04-11  \\n\",\n       \"2017-06-02     18283.0  2018-04-11  \\n\",\n       \"2017-09-22     38400.0  2018-04-11  \\n\",\n       \"2017-05-19      9615.0  2018-04-11  \\n\",\n       \"2017-08-10     15720.0  2018-04-11  \\n\",\n       \"2018-02-26     88473.0  2018-04-11  \\n\",\n       \"2017-11-21     79196.0  2018-04-11  \\n\",\n       \"2017-07-03     13484.0  2018-04-11  \\n\",\n       \"2017-04-21      4538.0  2018-04-11  \\n\",\n       \"2017-05-22      8928.0  2018-04-11  \\n\",\n       \"2018-02-23     48823.0  2018-04-11  \\n\",\n       \"2018-02-06     31946.0  2018-04-11  \\n\",\n       \"2017-01-20      9182.0  2018-04-11  \\n\",\n       \"2017-01-10      8819.0  2018-04-11  \\n\",\n       \"2017-12-18     43677.0  2018-04-11  \\n\",\n       \"2017-04-21     13137.0  2018-04-11  \\n\",\n       \"2018-03-23     77432.0  2018-04-11  \\n\",\n       \"...                ...         ...  \\n\",\n       \"2017-03-24      7729.0  2018-04-11  \\n\",\n       \"2017-11-15     14138.0  2018-04-11  \\n\",\n       \"2017-08-22     13821.0  2018-04-11  \\n\",\n       \"2017-12-29     58700.0  2018-04-11  \\n\",\n       \"2017-12-05     48600.0  2018-04-11  \\n\",\n       \"2017-10-31     27589.0  2018-04-11  \\n\",\n       \"2017-11-01     71217.0  2018-04-11  \\n\",\n       \"2018-01-19     32672.0  2018-04-11  \\n\",\n       \"2017-08-08     16499.0  2018-04-11  \\n\",\n       \"2017-04-26     11522.0  2018-04-11  \\n\",\n       \"2018-01-16     77780.0  2018-04-11  \\n\",\n       \"2018-02-01     61548.0  2018-04-11  \\n\",\n       \"2017-07-31     23866.0  2018-04-11  \\n\",\n       \"2017-09-26     32006.0  2018-04-11  \\n\",\n       \"2017-12-27     17500.0  2018-04-11  \\n\",\n       \"2017-01-05      2328.0  2018-04-11  \\n\",\n       \"2017-08-22     14938.0  2018-04-11  \\n\",\n       \"2017-02-20     11264.0  2018-04-11  \\n\",\n       \"2017-09-13     58370.0  2018-04-11  \\n\",\n       \"2017-12-29     35041.0  2018-04-11  \\n\",\n       \"2017-12-08     45956.0  2018-04-11  \\n\",\n       \"2017-06-06      5677.0  2018-04-11  \\n\",\n       \"2017-01-05     10945.0  2018-04-11  \\n\",\n       \"2017-01-26     11752.0  2018-04-11  \\n\",\n       \"2017-11-09     25100.0  2018-04-11  \\n\",\n       \"2017-08-03     13585.0  2018-04-11  \\n\",\n       \"2017-10-19     16000.0  2018-04-11  \\n\",\n       \"2017-05-16      8714.0  2018-04-11  \\n\",\n       \"2017-11-27     50562.0  2018-04-11  \\n\",\n       \"2017-05-23     11765.0  2018-04-11  \\n\",\n       \"\\n\",\n       \"[477 rows x 24 columns]\"\n      ]\n     },\n     \"execution_count\": 45,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"basic_df['2017':'2018']\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 48,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"dfs = basic_df['2016':'2018']\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 49,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>code</th>\\n\",\n       \"      <th>name</th>\\n\",\n       \"      <th>industry</th>\\n\",\n       \"      <th>area</th>\\n\",\n       \"      <th>pe</th>\\n\",\n       \"      <th>outstanding</th>\\n\",\n       \"      <th>totals</th>\\n\",\n       \"      <th>totalAssets</th>\\n\",\n       \"      <th>liquidAssets</th>\\n\",\n       \"      <th>fixedAssets</th>\\n\",\n       \"      <th>...</th>\\n\",\n       \"      <th>pb</th>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th>undp</th>\\n\",\n       \"      <th>perundp</th>\\n\",\n       \"      <th>rev</th>\\n\",\n       \"      <th>profit</th>\\n\",\n       \"      <th>gpr</th>\\n\",\n       \"      <th>npr</th>\\n\",\n       \"      <th>holders</th>\\n\",\n       \"      <th>更新日期</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>timeToMarket</th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-05-04</th>\\n\",\n       \"      <td>603501</td>\\n\",\n       \"      <td>韦尔股份</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>137.28</td>\\n\",\n       \"      <td>0.42</td>\\n\",\n       \"      <td>4.56</td>\\n\",\n       \"      <td>204200.45</td>\\n\",\n       \"      <td>169034.19</td>\\n\",\n       \"      <td>17705.68</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>14.75</td>\\n\",\n       \"      <td>2017-05-04</td>\\n\",\n       \"      <td>47177.93</td>\\n\",\n       \"      <td>1.04</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>19.10</td>\\n\",\n       \"      <td>6.20</td>\\n\",\n       \"      <td>22079.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-07-05</th>\\n\",\n       \"      <td>300671</td>\\n\",\n       \"      <td>富满电子</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>95.24</td>\\n\",\n       \"      <td>0.25</td>\\n\",\n       \"      <td>1.01</td>\\n\",\n       \"      <td>68242.43</td>\\n\",\n       \"      <td>51843.62</td>\\n\",\n       \"      <td>14202.12</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.73</td>\\n\",\n       \"      <td>2017-07-05</td>\\n\",\n       \"      <td>10927.21</td>\\n\",\n       \"      <td>1.08</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>27.95</td>\\n\",\n       \"      <td>11.63</td>\\n\",\n       \"      <td>10100.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-17</th>\\n\",\n       \"      <td>300625</td>\\n\",\n       \"      <td>三雄极光</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>广东</td>\\n\",\n       \"      <td>29.17</td>\\n\",\n       \"      <td>0.91</td>\\n\",\n       \"      <td>2.80</td>\\n\",\n       \"      <td>271604.44</td>\\n\",\n       \"      <td>225907.66</td>\\n\",\n       \"      <td>23129.76</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>2.96</td>\\n\",\n       \"      <td>2017-03-17</td>\\n\",\n       \"      <td>60387.82</td>\\n\",\n       \"      <td>2.16</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>33.28</td>\\n\",\n       \"      <td>10.85</td>\\n\",\n       \"      <td>44932.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-04-06</th>\\n\",\n       \"      <td>300632</td>\\n\",\n       \"      <td>光莆股份</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>福建</td>\\n\",\n       \"      <td>41.73</td>\\n\",\n       \"      <td>0.37</td>\\n\",\n       \"      <td>1.16</td>\\n\",\n       \"      <td>66851.96</td>\\n\",\n       \"      <td>43581.01</td>\\n\",\n       \"      <td>19568.85</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>4.80</td>\\n\",\n       \"      <td>2017-04-06</td>\\n\",\n       \"      <td>19050.15</td>\\n\",\n       \"      <td>1.65</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>30.13</td>\\n\",\n       \"      <td>12.38</td>\\n\",\n       \"      <td>11562.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2016-10-12</th>\\n\",\n       \"      <td>002815</td>\\n\",\n       \"      <td>崇达技术</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>深圳</td>\\n\",\n       \"      <td>32.88</td>\\n\",\n       \"      <td>1.06</td>\\n\",\n       \"      <td>4.10</td>\\n\",\n       \"      <td>494307.56</td>\\n\",\n       \"      <td>244897.22</td>\\n\",\n       \"      <td>177228.13</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.78</td>\\n\",\n       \"      <td>2016-10-12</td>\\n\",\n       \"      <td>114256.76</td>\\n\",\n       \"      <td>2.79</td>\\n\",\n       \"      <td>38.10</td>\\n\",\n       \"      <td>18.14</td>\\n\",\n       \"      <td>32.61</td>\\n\",\n       \"      <td>14.31</td>\\n\",\n       \"      <td>27600.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2016-12-28</th>\\n\",\n       \"      <td>300582</td>\\n\",\n       \"      <td>英飞特</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>浙江</td>\\n\",\n       \"      <td>83.81</td>\\n\",\n       \"      <td>1.21</td>\\n\",\n       \"      <td>2.03</td>\\n\",\n       \"      <td>136238.97</td>\\n\",\n       \"      <td>45586.10</td>\\n\",\n       \"      <td>56919.20</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.62</td>\\n\",\n       \"      <td>2016-12-28</td>\\n\",\n       \"      <td>20920.55</td>\\n\",\n       \"      <td>1.03</td>\\n\",\n       \"      <td>18.08</td>\\n\",\n       \"      <td>-34.88</td>\\n\",\n       \"      <td>30.55</td>\\n\",\n       \"      <td>5.69</td>\\n\",\n       \"      <td>17911.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-03-14</th>\\n\",\n       \"      <td>300623</td>\\n\",\n       \"      <td>捷捷微电</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>42.11</td>\\n\",\n       \"      <td>0.37</td>\\n\",\n       \"      <td>0.94</td>\\n\",\n       \"      <td>133111.38</td>\\n\",\n       \"      <td>91724.80</td>\\n\",\n       \"      <td>25565.35</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>5.18</td>\\n\",\n       \"      <td>2017-03-14</td>\\n\",\n       \"      <td>33622.19</td>\\n\",\n       \"      <td>3.59</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>56.49</td>\\n\",\n       \"      <td>35.61</td>\\n\",\n       \"      <td>14861.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2016-08-18</th>\\n\",\n       \"      <td>603986</td>\\n\",\n       \"      <td>兆易创新</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>北京</td>\\n\",\n       \"      <td>85.62</td>\\n\",\n       \"      <td>1.47</td>\\n\",\n       \"      <td>2.03</td>\\n\",\n       \"      <td>213397.97</td>\\n\",\n       \"      <td>169092.52</td>\\n\",\n       \"      <td>9192.86</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>24.17</td>\\n\",\n       \"      <td>2016-08-18</td>\\n\",\n       \"      <td>73909.36</td>\\n\",\n       \"      <td>3.65</td>\\n\",\n       \"      <td>44.69</td>\\n\",\n       \"      <td>134.74</td>\\n\",\n       \"      <td>38.57</td>\\n\",\n       \"      <td>22.38</td>\\n\",\n       \"      <td>16098.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-12-01</th>\\n\",\n       \"      <td>002913</td>\\n\",\n       \"      <td>奥士康</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>41.27</td>\\n\",\n       \"      <td>0.36</td>\\n\",\n       \"      <td>1.44</td>\\n\",\n       \"      <td>190226.63</td>\\n\",\n       \"      <td>104183.22</td>\\n\",\n       \"      <td>81802.18</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>3.15</td>\\n\",\n       \"      <td>2017-12-01</td>\\n\",\n       \"      <td>36008.44</td>\\n\",\n       \"      <td>2.50</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>23.97</td>\\n\",\n       \"      <td>9.18</td>\\n\",\n       \"      <td>30331.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-07-12</th>\\n\",\n       \"      <td>300672</td>\\n\",\n       \"      <td>国科微</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>湖南</td>\\n\",\n       \"      <td>1273.88</td>\\n\",\n       \"      <td>0.28</td>\\n\",\n       \"      <td>1.12</td>\\n\",\n       \"      <td>96894.68</td>\\n\",\n       \"      <td>71145.50</td>\\n\",\n       \"      <td>7825.18</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.97</td>\\n\",\n       \"      <td>2017-07-12</td>\\n\",\n       \"      <td>10634.24</td>\\n\",\n       \"      <td>0.95</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>48.04</td>\\n\",\n       \"      <td>2.52</td>\\n\",\n       \"      <td>16331.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-10-16</th>\\n\",\n       \"      <td>300708</td>\\n\",\n       \"      <td>聚灿光电</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>江苏</td>\\n\",\n       \"      <td>67.73</td>\\n\",\n       \"      <td>0.64</td>\\n\",\n       \"      <td>2.57</td>\\n\",\n       \"      <td>147835.27</td>\\n\",\n       \"      <td>75164.55</td>\\n\",\n       \"      <td>46085.87</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>10.45</td>\\n\",\n       \"      <td>2017-10-16</td>\\n\",\n       \"      <td>18079.84</td>\\n\",\n       \"      <td>0.70</td>\\n\",\n       \"      <td>29.32</td>\\n\",\n       \"      <td>81.53</td>\\n\",\n       \"      <td>28.97</td>\\n\",\n       \"      <td>17.72</td>\\n\",\n       \"      <td>36514.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2017-02-20</th>\\n\",\n       \"      <td>300613</td>\\n\",\n       \"      <td>富瀚微</td>\\n\",\n       \"      <td>半导体</td>\\n\",\n       \"      <td>上海</td>\\n\",\n       \"      <td>68.97</td>\\n\",\n       \"      <td>0.13</td>\\n\",\n       \"      <td>0.45</td>\\n\",\n       \"      <td>97363.90</td>\\n\",\n       \"      <td>85505.56</td>\\n\",\n       \"      <td>1777.51</td>\\n\",\n       \"      <td>...</td>\\n\",\n       \"      <td>7.87</td>\\n\",\n       \"      <td>2017-02-20</td>\\n\",\n       \"      <td>26320.40</td>\\n\",\n       \"      <td>5.81</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>0.00</td>\\n\",\n       \"      <td>49.46</td>\\n\",\n       \"      <td>25.26</td>\\n\",\n       \"      <td>11264.0</td>\\n\",\n       \"      <td>2018-04-11</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"<p>12 rows × 24 columns</p>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"                code  name industry area       pe  outstanding  totals  \\\\\\n\",\n       \"timeToMarket                                                             \\n\",\n       \"2017-05-04    603501  韦尔股份      半导体   上海   137.28         0.42    4.56   \\n\",\n       \"2017-07-05    300671  富满电子      半导体   深圳    95.24         0.25    1.01   \\n\",\n       \"2017-03-17    300625  三雄极光      半导体   广东    29.17         0.91    2.80   \\n\",\n       \"2017-04-06    300632  光莆股份      半导体   福建    41.73         0.37    1.16   \\n\",\n       \"2016-10-12    002815  崇达技术      半导体   深圳    32.88         1.06    4.10   \\n\",\n       \"2016-12-28    300582   英飞特      半导体   浙江    83.81         1.21    2.03   \\n\",\n       \"2017-03-14    300623  捷捷微电      半导体   江苏    42.11         0.37    0.94   \\n\",\n       \"2016-08-18    603986  兆易创新      半导体   北京    85.62         1.47    2.03   \\n\",\n       \"2017-12-01    002913   奥士康      半导体   湖南    41.27         0.36    1.44   \\n\",\n       \"2017-07-12    300672   国科微      半导体   湖南  1273.88         0.28    1.12   \\n\",\n       \"2017-10-16    300708  聚灿光电      半导体   江苏    67.73         0.64    2.57   \\n\",\n       \"2017-02-20    300613   富瀚微      半导体   上海    68.97         0.13    0.45   \\n\",\n       \"\\n\",\n       \"              totalAssets  liquidAssets  fixedAssets     ...         pb  \\\\\\n\",\n       \"timeToMarket                                             ...              \\n\",\n       \"2017-05-04      204200.45     169034.19     17705.68     ...      14.75   \\n\",\n       \"2017-07-05       68242.43      51843.62     14202.12     ...       7.73   \\n\",\n       \"2017-03-17      271604.44     225907.66     23129.76     ...       2.96   \\n\",\n       \"2017-04-06       66851.96      43581.01     19568.85     ...       4.80   \\n\",\n       \"2016-10-12      494307.56     244897.22    177228.13     ...       5.78   \\n\",\n       \"2016-12-28      136238.97      45586.10     56919.20     ...       3.62   \\n\",\n       \"2017-03-14      133111.38      91724.80     25565.35     ...       5.18   \\n\",\n       \"2016-08-18      213397.97     169092.52      9192.86     ...      24.17   \\n\",\n       \"2017-12-01      190226.63     104183.22     81802.18     ...       3.15   \\n\",\n       \"2017-07-12       96894.68      71145.50      7825.18     ...       7.97   \\n\",\n       \"2017-10-16      147835.27      75164.55     46085.87     ...      10.45   \\n\",\n       \"2017-02-20       97363.90      85505.56      1777.51     ...       7.87   \\n\",\n       \"\\n\",\n       \"              timeToMarket       undp  perundp    rev  profit    gpr    npr  \\\\\\n\",\n       \"timeToMarket                                                                  \\n\",\n       \"2017-05-04      2017-05-04   47177.93     1.04   0.00    0.00  19.10   6.20   \\n\",\n       \"2017-07-05      2017-07-05   10927.21     1.08   0.00    0.00  27.95  11.63   \\n\",\n       \"2017-03-17      2017-03-17   60387.82     2.16   0.00    0.00  33.28  10.85   \\n\",\n       \"2017-04-06      2017-04-06   19050.15     1.65   0.00    0.00  30.13  12.38   \\n\",\n       \"2016-10-12      2016-10-12  114256.76     2.79  38.10   18.14  32.61  14.31   \\n\",\n       \"2016-12-28      2016-12-28   20920.55     1.03  18.08  -34.88  30.55   5.69   \\n\",\n       \"2017-03-14      2017-03-14   33622.19     3.59   0.00    0.00  56.49  35.61   \\n\",\n       \"2016-08-18      2016-08-18   73909.36     3.65  44.69  134.74  38.57  22.38   \\n\",\n       \"2017-12-01      2017-12-01   36008.44     2.50   0.00    0.00  23.97   9.18   \\n\",\n       \"2017-07-12      2017-07-12   10634.24     0.95   0.00    0.00  48.04   2.52   \\n\",\n       \"2017-10-16      2017-10-16   18079.84     0.70  29.32   81.53  28.97  17.72   \\n\",\n       \"2017-02-20      2017-02-20   26320.40     5.81   0.00    0.00  49.46  25.26   \\n\",\n       \"\\n\",\n       \"              holders        更新日期  \\n\",\n       \"timeToMarket                       \\n\",\n       \"2017-05-04    22079.0  2018-04-11  \\n\",\n       \"2017-07-05    10100.0  2018-04-11  \\n\",\n       \"2017-03-17    44932.0  2018-04-11  \\n\",\n       \"2017-04-06    11562.0  2018-04-11  \\n\",\n       \"2016-10-12    27600.0  2018-04-11  \\n\",\n       \"2016-12-28    17911.0  2018-04-11  \\n\",\n       \"2017-03-14    14861.0  2018-04-11  \\n\",\n       \"2016-08-18    16098.0  2018-04-11  \\n\",\n       \"2017-12-01    30331.0  2018-04-11  \\n\",\n       \"2017-07-12    16331.0  2018-04-11  \\n\",\n       \"2017-10-16    36514.0  2018-04-11  \\n\",\n       \"2017-02-20    11264.0  2018-04-11  \\n\",\n       \"\\n\",\n       \"[12 rows x 24 columns]\"\n      ]\n     },\n     \"execution_count\": 49,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"dfs[dfs['industry']==u'半导体']\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df = ts.get_day_all()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"engine =get_engine('db_rocky')\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df.to_sql('tb_temp',engine)\"\n   ]\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.0\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n"
        },
        {
          "name": "雪球赏金.ipynb",
          "type": "blob",
          "size": 12.5791015625,
          "content": "{\n \"cells\": [\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 1,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"# 元卫南 赏金分析\\n\",\n    \"import pandas as pd\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 2,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"import pymongo\\n\",\n    \"client = pymongo.MongoClient('10.18.6.46',27001)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 3,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"doc=client['xueqiu']['reward']\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 4,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"result =[]\\n\",\n    \"for i in doc.find({},{'_id':0}):\\n\",\n    \"    result.append(i)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 5,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"8968\"\n      ]\n     },\n     \"execution_count\": 5,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"len(result)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 6,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df = pd.DataFrame(result)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 7,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>amount</th>\\n\",\n       \"      <th>been_reward</th>\\n\",\n       \"      <th>created_at</th>\\n\",\n       \"      <th>description</th>\\n\",\n       \"      <th>name</th>\\n\",\n       \"      <th>origin_post_id</th>\\n\",\n       \"      <th>user_id</th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>0</th>\\n\",\n       \"      <td>6.00</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>2019-08-13 21:31:36</td>\\n\",\n       \"      <td>None</td>\\n\",\n       \"      <td>慕狼为友</td>\\n\",\n       \"      <td>131085314</td>\\n\",\n       \"      <td>1880162437</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>1</th>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>2019-08-13 22:03:16</td>\\n\",\n       \"      <td>价值兜底，趋势赚钱，分批买卖，组合选股。</td>\\n\",\n       \"      <td>秦韬</td>\\n\",\n       \"      <td>131085314</td>\\n\",\n       \"      <td>9644764163</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2</th>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>2019-08-13 21:51:36</td>\\n\",\n       \"      <td>比较懒，有钱就定期买入一些，现在主要买入一些指数基金</td>\\n\",\n       \"      <td>Betula11</td>\\n\",\n       \"      <td>131085314</td>\\n\",\n       \"      <td>3256958535</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>3</th>\\n\",\n       \"      <td>66.66</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>2019-08-13 08:09:38</td>\\n\",\n       \"      <td></td>\\n\",\n       \"      <td>Shero冉冉7</td>\\n\",\n       \"      <td>131039085</td>\\n\",\n       \"      <td>4102521305</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>4</th>\\n\",\n       \"      <td>19.99</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>2019-08-13 15:11:39</td>\\n\",\n       \"      <td>失去的会以另外的方式永远存在</td>\\n\",\n       \"      <td>babyluo</td>\\n\",\n       \"      <td>131039085</td>\\n\",\n       \"      <td>8941786191</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"   amount been_reward           created_at                 description  \\\\\\n\",\n       \"0    6.00         元卫南  2019-08-13 21:31:36                        None   \\n\",\n       \"1    1.00         元卫南  2019-08-13 22:03:16        价值兜底，趋势赚钱，分批买卖，组合选股。   \\n\",\n       \"2    1.00         元卫南  2019-08-13 21:51:36  比较懒，有钱就定期买入一些，现在主要买入一些指数基金   \\n\",\n       \"3   66.66         元卫南  2019-08-13 08:09:38                               \\n\",\n       \"4   19.99         元卫南  2019-08-13 15:11:39              失去的会以另外的方式永远存在   \\n\",\n       \"\\n\",\n       \"       name  origin_post_id     user_id  \\n\",\n       \"0      慕狼为友       131085314  1880162437  \\n\",\n       \"1        秦韬       131085314  9644764163  \\n\",\n       \"2  Betula11       131085314  3256958535  \\n\",\n       \"3  Shero冉冉7       131039085  4102521305  \\n\",\n       \"4   babyluo       131039085  8941786191  \"\n      ]\n     },\n     \"execution_count\": 7,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 8,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"<class 'pandas.core.frame.DataFrame'>\\n\",\n      \"RangeIndex: 8968 entries, 0 to 8967\\n\",\n      \"Data columns (total 7 columns):\\n\",\n      \"amount            8968 non-null float64\\n\",\n      \"been_reward       8968 non-null object\\n\",\n      \"created_at        8968 non-null object\\n\",\n      \"description       6536 non-null object\\n\",\n      \"name              8968 non-null object\\n\",\n      \"origin_post_id    8968 non-null int64\\n\",\n      \"user_id           8968 non-null int64\\n\",\n      \"dtypes: float64(1), int64(2), object(4)\\n\",\n      \"memory usage: 490.5+ KB\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df.info()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 9,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df['created_at']=pd.to_datetime(df['created_at'])\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 13,\n   \"metadata\": {\n    \"scrolled\": false\n   },\n   \"outputs\": [\n    {\n     \"name\": \"stdout\",\n     \"output_type\": \"stream\",\n     \"text\": [\n      \"<class 'pandas.core.frame.DataFrame'>\\n\",\n      \"RangeIndex: 8968 entries, 0 to 8967\\n\",\n      \"Data columns (total 7 columns):\\n\",\n      \"amount            8968 non-null float64\\n\",\n      \"been_reward       8968 non-null object\\n\",\n      \"created_at        8968 non-null datetime64[ns]\\n\",\n      \"description       6536 non-null object\\n\",\n      \"name              8968 non-null object\\n\",\n      \"origin_post_id    8968 non-null int64\\n\",\n      \"user_id           8968 non-null int64\\n\",\n      \"dtypes: datetime64[ns](1), float64(1), int64(2), object(3)\\n\",\n      \"memory usage: 490.5+ KB\\n\"\n     ]\n    }\n   ],\n   \"source\": [\n    \"df.info()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 15,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": [\n    \"df=df.set_index('created_at',drop=True)\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 16,\n   \"metadata\": {\n    \"scrolled\": true\n   },\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/html\": [\n       \"<div>\\n\",\n       \"<style scoped>\\n\",\n       \"    .dataframe tbody tr th:only-of-type {\\n\",\n       \"        vertical-align: middle;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe tbody tr th {\\n\",\n       \"        vertical-align: top;\\n\",\n       \"    }\\n\",\n       \"\\n\",\n       \"    .dataframe thead th {\\n\",\n       \"        text-align: right;\\n\",\n       \"    }\\n\",\n       \"</style>\\n\",\n       \"<table border=\\\"1\\\" class=\\\"dataframe\\\">\\n\",\n       \"  <thead>\\n\",\n       \"    <tr style=\\\"text-align: right;\\\">\\n\",\n       \"      <th></th>\\n\",\n       \"      <th>amount</th>\\n\",\n       \"      <th>been_reward</th>\\n\",\n       \"      <th>description</th>\\n\",\n       \"      <th>name</th>\\n\",\n       \"      <th>origin_post_id</th>\\n\",\n       \"      <th>user_id</th>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>created_at</th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"      <th></th>\\n\",\n       \"    </tr>\\n\",\n       \"  </thead>\\n\",\n       \"  <tbody>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2019-08-13 21:31:36</th>\\n\",\n       \"      <td>6.00</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>None</td>\\n\",\n       \"      <td>慕狼为友</td>\\n\",\n       \"      <td>131085314</td>\\n\",\n       \"      <td>1880162437</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2019-08-13 22:03:16</th>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>价值兜底，趋势赚钱，分批买卖，组合选股。</td>\\n\",\n       \"      <td>秦韬</td>\\n\",\n       \"      <td>131085314</td>\\n\",\n       \"      <td>9644764163</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2019-08-13 21:51:36</th>\\n\",\n       \"      <td>1.00</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>比较懒，有钱就定期买入一些，现在主要买入一些指数基金</td>\\n\",\n       \"      <td>Betula11</td>\\n\",\n       \"      <td>131085314</td>\\n\",\n       \"      <td>3256958535</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2019-08-13 08:09:38</th>\\n\",\n       \"      <td>66.66</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td></td>\\n\",\n       \"      <td>Shero冉冉7</td>\\n\",\n       \"      <td>131039085</td>\\n\",\n       \"      <td>4102521305</td>\\n\",\n       \"    </tr>\\n\",\n       \"    <tr>\\n\",\n       \"      <th>2019-08-13 15:11:39</th>\\n\",\n       \"      <td>19.99</td>\\n\",\n       \"      <td>元卫南</td>\\n\",\n       \"      <td>失去的会以另外的方式永远存在</td>\\n\",\n       \"      <td>babyluo</td>\\n\",\n       \"      <td>131039085</td>\\n\",\n       \"      <td>8941786191</td>\\n\",\n       \"    </tr>\\n\",\n       \"  </tbody>\\n\",\n       \"</table>\\n\",\n       \"</div>\"\n      ],\n      \"text/plain\": [\n       \"                     amount been_reward                 description      name  \\\\\\n\",\n       \"created_at                                                                      \\n\",\n       \"2019-08-13 21:31:36    6.00         元卫南                        None      慕狼为友   \\n\",\n       \"2019-08-13 22:03:16    1.00         元卫南        价值兜底，趋势赚钱，分批买卖，组合选股。        秦韬   \\n\",\n       \"2019-08-13 21:51:36    1.00         元卫南  比较懒，有钱就定期买入一些，现在主要买入一些指数基金  Betula11   \\n\",\n       \"2019-08-13 08:09:38   66.66         元卫南                              Shero冉冉7   \\n\",\n       \"2019-08-13 15:11:39   19.99         元卫南              失去的会以另外的方式永远存在   babyluo   \\n\",\n       \"\\n\",\n       \"                     origin_post_id     user_id  \\n\",\n       \"created_at                                       \\n\",\n       \"2019-08-13 21:31:36       131085314  1880162437  \\n\",\n       \"2019-08-13 22:03:16       131085314  9644764163  \\n\",\n       \"2019-08-13 21:51:36       131085314  3256958535  \\n\",\n       \"2019-08-13 08:09:38       131039085  4102521305  \\n\",\n       \"2019-08-13 15:11:39       131039085  8941786191  \"\n      ]\n     },\n     \"execution_count\": 16,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df.head()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 22,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"31851.6\"\n      ]\n     },\n     \"execution_count\": 22,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df['2019']['amount'].sum()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": 21,\n   \"metadata\": {},\n   \"outputs\": [\n    {\n     \"data\": {\n      \"text/plain\": [\n       \"0.0\"\n      ]\n     },\n     \"execution_count\": 21,\n     \"metadata\": {},\n     \"output_type\": \"execute_result\"\n    }\n   ],\n   \"source\": [\n    \"df['2018']['amount'].sum()\"\n   ]\n  },\n  {\n   \"cell_type\": \"code\",\n   \"execution_count\": null,\n   \"metadata\": {},\n   \"outputs\": [],\n   \"source\": []\n  }\n ],\n \"metadata\": {\n  \"kernelspec\": {\n   \"display_name\": \"Python 3\",\n   \"language\": \"python\",\n   \"name\": \"python3\"\n  },\n  \"language_info\": {\n   \"codemirror_mode\": {\n    \"name\": \"ipython\",\n    \"version\": 3\n   },\n   \"file_extension\": \".py\",\n   \"mimetype\": \"text/x-python\",\n   \"name\": \"python\",\n   \"nbconvert_exporter\": \"python\",\n   \"pygments_lexer\": \"ipython3\",\n   \"version\": \"3.7.0\"\n  }\n },\n \"nbformat\": 4,\n \"nbformat_minor\": 2\n}\n"
        }
      ]
    }
  ]
}