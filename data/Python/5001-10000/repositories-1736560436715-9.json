{
  "metadata": {
    "timestamp": 1736560436715,
    "page": 9,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "neuml/txtai",
      "stars": 9917,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.166015625,
          "content": "[run]\nsource = src/python\nconcurrency = multiprocessing,thread\ndisable_warnings = no-data-collected\nomit = **/__main__.py\n\n[combine]\ndisable_warnings = no-data-collected\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0966796875,
          "content": "build/\ndist/\ndocker/**/*.yml\nhtmlcov/\n*egg-info/\n__pycache__/\n.coverage\n.coverage.*\n*.pyc\n.vscode/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.3046875,
          "content": "repos:\n  - repo: https://github.com/pycqa/pylint\n    rev: v3.3.1\n    hooks:\n    - id: pylint\n      args:\n      - -d import-error\n      - -d duplicate-code\n      - -d too-many-positional-arguments\n  - repo: https://github.com/ambv/black\n    rev: 24.10.0\n    hooks:\n    - id: black\n      language_version: python3\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 0.345703125,
          "content": "[BASIC]\nmodule-rgx=[a-z_][a-zA-Z0-9_]{2,30}$\nmethod-rgx=[a-z_][a-zA-Z0-9_]{2,30}$\nfunction-rgx=[a-z_][a-zA-Z0-9_]{2,30}$\nargument-rgx=[a-z_][a-zA-Z0-9_]{0,30}$\nvariable-rgx=[a-z_][a-zA-Z0-9_]{0,30}$\nattr-rgx=[a-z_][a-zA-Z0-9_]{0,30}$\n\n[DESIGN]\nmax-args=10\nmax-locals=40\nmax-returns=10\nmax-attributes=20\nmin-public-methods=0\n\n[FORMAT]\nmax-line-length=150\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.4208984375,
          "content": "cff-version: 1.2.0\ndate-released: 2020-08-11\nmessage: \"If you use this software, please cite it as below.\"\ntitle: \"txtai: the all-in-one embeddings database\"\nabstract: \"txtai is an all-in-one open-source embeddings database for semantic search, LLM orchestration and language model workflows\"\nurl: \"https://github.com/neuml/txtai\"\nauthors:\n- family-names: \"Mezzetti\"\n  given-names: \"David\"\n  affiliation: NeuML\nlicense: Apache-2.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.501953125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2020- NeuML LLC\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.359375,
          "content": "# Project utility scripts\n.PHONY: test\n\n# Setup environment\nexport SRC_DIR := ./src/python\nexport TEST_DIR := ./test/python\nexport PYTHONPATH := ${SRC_DIR}:${TEST_DIR}:${PYTHONPATH}\nexport PATH := ${TEST_DIR}:${PATH}\nexport PYTHONWARNINGS := ignore\n\n# Disable tokenizer parallelism for tests\nexport TOKENIZERS_PARALLELISM := false\n\n# Default python executable if not provided\nPYTHON ?= python\n\n# Check for wget\nWGET := $(shell wget --version 2> /dev/null)\nifndef WGET\n    $(error \"Required binary `wget` not found, please install wget OS package\")\nendif\n\n# Download test data\ndata:\n\tmkdir -p /tmp/txtai\n\twget -N https://github.com/neuml/txtai/releases/download/v6.2.0/tests.tar.gz -P /tmp\n\ttar -xvzf /tmp/tests.tar.gz -C /tmp\n\n# Unit tests\ntest:\n\t${PYTHON} -m unittest discover -v -s ${TEST_DIR}\n\n# Run tests while calculating code coverage\ncoverage:\n\tcoverage run -m unittest discover -v -k testagent -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testann -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testapi -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testapp -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testarchive -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testcloud -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testconsole -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testdatabase -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testembeddings -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testgraph -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testmodels -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testoptional -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testpipeline.testaudio -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testpipeline.testdata -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testpipeline.testimage -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testpipeline.testllm -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testpipeline.testtext -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testpipeline.testtrain -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testscoring -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testserialize -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testvectors -s ${TEST_DIR}\n\tcoverage run -m unittest discover -v -k testworkflow -s ${TEST_DIR}\n\tcoverage combine\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.4091796875,
          "content": "<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/neuml/txtai/master/logo.png\"/>\n</p>\n\n<p align=\"center\">\n    <b>All-in-one embeddings database</b>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/neuml/txtai/releases\">\n        <img src=\"https://img.shields.io/github/release/neuml/txtai.svg?style=flat&color=success\" alt=\"Version\"/>\n    </a>\n    <a href=\"https://github.com/neuml/txtai\">\n        <img src=\"https://img.shields.io/github/last-commit/neuml/txtai.svg?style=flat&color=blue\" alt=\"GitHub last commit\"/>\n    </a>\n    <a href=\"https://github.com/neuml/txtai/issues\">\n        <img src=\"https://img.shields.io/github/issues/neuml/txtai.svg?style=flat&color=success\" alt=\"GitHub issues\"/>\n    </a>\n    <a href=\"https://join.slack.com/t/txtai/shared_invite/zt-1cagya4yf-DQeuZbd~aMwH5pckBU4vPg\">\n        <img src=\"https://img.shields.io/badge/slack-join-blue?style=flat&logo=slack&logocolor=white\" alt=\"Join Slack\"/>\n    </a>\n    <a href=\"https://github.com/neuml/txtai/actions?query=workflow%3Abuild\">\n        <img src=\"https://github.com/neuml/txtai/workflows/build/badge.svg\" alt=\"Build Status\"/>\n    </a>\n    <a href=\"https://coveralls.io/github/neuml/txtai?branch=master\">\n        <img src=\"https://img.shields.io/coverallsCoverage/github/neuml/txtai\" alt=\"Coverage Status\">\n    </a>\n</p>\n\ntxtai is an all-in-one embeddings database for semantic search, LLM orchestration and language model workflows.\n\n![architecture](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/architecture.png#gh-light-mode-only)\n![architecture](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/architecture-dark.png#gh-dark-mode-only)\n\nEmbeddings databases are a union of vector indexes (sparse and dense), graph networks and relational databases.\n\nThis foundation enables vector search and/or serves as a powerful knowledge source for large language model (LLM) applications.\n\nBuild autonomous agents, retrieval augmented generation (RAG) processes, multi-model workflows and more.\n\nSummary of txtai features:\n\n- 🔎 Vector search with SQL, object storage, topic modeling, graph analysis and multimodal indexing\n- 📄 Create embeddings for text, documents, audio, images and video\n- 💡 Pipelines powered by language models that run LLM prompts, question-answering, labeling, transcription, translation, summarization and more\n- ↪️️ Workflows to join pipelines together and aggregate business logic. txtai processes can be simple microservices or multi-model workflows.\n- 🤖 Agents that intelligently connect embeddings, pipelines, workflows and other agents together to autonomously solve complex problems\n- ⚙️ Build with Python or YAML. API bindings available for [JavaScript](https://github.com/neuml/txtai.js), [Java](https://github.com/neuml/txtai.java), [Rust](https://github.com/neuml/txtai.rs) and [Go](https://github.com/neuml/txtai.go).\n- 🔋 Batteries included with defaults to get up and running fast\n- ☁️ Run local or scale out with container orchestration\n\ntxtai is built with Python 3.9+, [Hugging Face Transformers](https://github.com/huggingface/transformers), [Sentence Transformers](https://github.com/UKPLab/sentence-transformers) and [FastAPI](https://github.com/tiangolo/fastapi). txtai is open-source under an Apache 2.0 license.\n\n*Interested in an easy and secure way to run hosted txtai applications? Then join the [txtai.cloud](https://txtai.cloud) preview to learn more.*\n\n## Why txtai?\n\n![why](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/why.png#gh-light-mode-only)\n![why](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/why-dark.png#gh-dark-mode-only)\n\nNew vector databases, LLM frameworks and everything in between are sprouting up daily. Why build with txtai?\n\n- Up and running in minutes with [pip](https://neuml.github.io/txtai/install/) or [Docker](https://neuml.github.io/txtai/cloud/)\n```python\n# Get started in a couple lines\nimport txtai\n\nembeddings = txtai.Embeddings()\nembeddings.index([\"Correct\", \"Not what we hoped\"])\nembeddings.search(\"positive\", 1)\n#[(0, 0.29862046241760254)]\n```\n- Built-in API makes it easy to develop applications using your programming language of choice\n```yaml\n# app.yml\nembeddings:\n    path: sentence-transformers/all-MiniLM-L6-v2\n```\n```bash\nCONFIG=app.yml uvicorn \"txtai.api:app\"\ncurl -X GET \"http://localhost:8000/search?query=positive\"\n```\n- Run local - no need to ship data off to disparate remote services\n- Work with micromodels all the way up to large language models (LLMs)\n- Low footprint - install additional dependencies and scale up when needed\n- [Learn by example](https://neuml.github.io/txtai/examples) - notebooks cover all available functionality\n\n## Use Cases\n\nThe following sections introduce common txtai use cases. A comprehensive set of over 60 [example notebooks and applications](https://neuml.github.io/txtai/examples) are also available.\n\n### Semantic Search\n\nBuild semantic/similarity/vector/neural search applications.\n\n![demo](https://raw.githubusercontent.com/neuml/txtai/master/demo.gif)\n\nTraditional search systems use keywords to find data. Semantic search has an understanding of natural language and identifies results that have the same meaning, not necessarily the same keywords.\n\n![search](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/search.png#gh-light-mode-only)\n![search](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/search-dark.png#gh-dark-mode-only)\n\nGet started with the following examples.\n\n| Notebook  | Description  |       |\n|:----------|:-------------|------:|\n| [Introducing txtai](https://github.com/neuml/txtai/blob/master/examples/01_Introducing_txtai.ipynb) [▶️](https://www.youtube.com/watch?v=SIezMnVdmMs) | Overview of the functionality provided by txtai | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/01_Introducing_txtai.ipynb) |\n| [Similarity search with images](https://github.com/neuml/txtai/blob/master/examples/13_Similarity_search_with_images.ipynb) | Embed images and text into the same space for search | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/13_Similarity_search_with_images.ipynb) |\n| [Build a QA database](https://github.com/neuml/txtai/blob/master/examples/34_Build_a_QA_database.ipynb) | Question matching with semantic search | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/34_Build_a_QA_database.ipynb) |\n| [Semantic Graphs](https://github.com/neuml/txtai/blob/master/examples/38_Introducing_the_Semantic_Graph.ipynb) | Explore topics, data connectivity and run network analysis| [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/38_Introducing_the_Semantic_Graph.ipynb) |\n\n### LLM Orchestration\n\nAutonomous agents, retrieval augmented generation (RAG), chat with your data, pipelines and workflows that interface with large language models (LLMs).\n\n![llm](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/llm.png)\n\nSee below to learn more.\n\n| Notebook  | Description  |       |\n|:----------|:-------------|------:|\n| [Prompt templates and task chains](https://github.com/neuml/txtai/blob/master/examples/44_Prompt_templates_and_task_chains.ipynb) | Build model prompts and connect tasks together with workflows | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/44_Prompt_templates_and_task_chains.ipynb) |\n| [Integrate LLM frameworks](https://github.com/neuml/txtai/blob/master/examples/53_Integrate_LLM_Frameworks.ipynb) | Integrate llama.cpp, LiteLLM and custom generation frameworks | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/53_Integrate_LLM_Frameworks.ipynb) |\n| [Build knowledge graphs with LLMs](https://github.com/neuml/txtai/blob/master/examples/57_Build_knowledge_graphs_with_LLM_driven_entity_extraction.ipynb) | Build knowledge graphs with LLM-driven entity extraction | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/57_Build_knowledge_graphs_with_LLM_driven_entity_extraction.ipynb) |\n\n#### Agents\n\nAgents connect embeddings, pipelines, workflows and other agents together to autonomously solve complex problems.\n\n![agent](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/agent.png)\n\ntxtai agents are built on top of the Transformers Agent framework. This supports all LLMs txtai supports (Hugging Face, llama.cpp, OpenAI / Claude / AWS Bedrock via LiteLLM).\n\nSee the link below to learn more.\n\n| Notebook  | Description  |       |\n|:----------|:-------------|------:|\n| [What's new in txtai 8.0](https://github.com/neuml/txtai/blob/master/examples/67_Whats_new_in_txtai_8_0.ipynb) | Agents with txtai | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/67_Whats_new_in_txtai_8_0.ipynb) |\n| [Analyzing Hugging Face Posts with Graphs and Agents](https://github.com/neuml/txtai/blob/master/examples/68_Analyzing_Hugging_Face_Posts_with_Graphs_and_Agents.ipynb) | Explore a rich dataset with Graph Analysis and Agents | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/68_Analyzing_Hugging_Face_Posts_with_Graphs_and_Agents.ipynb) |\n| [Granting autonomy to agents](https://github.com/neuml/txtai/blob/master/examples/69_Granting_autonomy_to_agents.ipynb) | Agents that iteratively solve problems as they see fit | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/69_Granting_autonomy_to_agents.ipynb) |\n\n#### Retrieval augmented generation\n\nRetrieval augmented generation (RAG) reduces the risk of LLM hallucinations by constraining the output with a knowledge base as context. RAG is commonly used to \"chat with your data\".\n\n![rag](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/rag.png#gh-light-mode-only)\n![rag](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/rag-dark.png#gh-dark-mode-only)\n\nA novel feature of txtai is that it can provide both an answer and source citation.\n\n| Notebook  | Description  |       |\n|:----------|:-------------|------:|\n| [Build RAG pipelines with txtai](https://github.com/neuml/txtai/blob/master/examples/52_Build_RAG_pipelines_with_txtai.ipynb) | Guide on retrieval augmented generation including how to create citations | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/52_Build_RAG_pipelines_with_txtai.ipynb) |\n| [How RAG with txtai works](https://github.com/neuml/txtai/blob/master/examples/63_How_RAG_with_txtai_works.ipynb) | Create RAG processes, API services and Docker instances | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/63_How_RAG_with_txtai_works.ipynb) |\n| [Advanced RAG with graph path traversal](https://github.com/neuml/txtai/blob/master/examples/58_Advanced_RAG_with_graph_path_traversal.ipynb) | Graph path traversal to collect complex sets of data for advanced RAG | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/58_Advanced_RAG_with_graph_path_traversal.ipynb) |\n| [Speech to Speech RAG](https://github.com/neuml/txtai/blob/master/examples/65_Speech_to_Speech_RAG.ipynb) [▶️](https://www.youtube.com/watch?v=tH8QWwkVMKA) | Full cycle speech to speech workflow with RAG | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/65_Speech_to_Speech_RAG.ipynb) |\n\n### Language Model Workflows\n\nLanguage model workflows, also known as semantic workflows, connect language models together to build intelligent applications.\n\n![flows](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/flows.png#gh-light-mode-only)\n![flows](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/flows-dark.png#gh-dark-mode-only)\n\nWhile LLMs are powerful, there are plenty of smaller, more specialized models that work better and faster for specific tasks. This includes models for extractive question-answering, automatic summarization, text-to-speech, transcription and translation.\n\n| Notebook  | Description  |       |\n|:----------|:-------------|------:|\n| [Run pipeline workflows](https://github.com/neuml/txtai/blob/master/examples/14_Run_pipeline_workflows.ipynb) [▶️](https://www.youtube.com/watch?v=UBMPDCn1gEU) | Simple yet powerful constructs to efficiently process data | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/14_Run_pipeline_workflows.ipynb) |\n| [Building abstractive text summaries](https://github.com/neuml/txtai/blob/master/examples/09_Building_abstractive_text_summaries.ipynb) | Run abstractive text summarization | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/09_Building_abstractive_text_summaries.ipynb) |\n| [Transcribe audio to text](https://github.com/neuml/txtai/blob/master/examples/11_Transcribe_audio_to_text.ipynb) | Convert audio files to text | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/11_Transcribe_audio_to_text.ipynb) |\n| [Translate text between languages](https://github.com/neuml/txtai/blob/master/examples/12_Translate_text_between_languages.ipynb) | Streamline machine translation and language detection | [![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/neuml/txtai/blob/master/examples/12_Translate_text_between_languages.ipynb) |\n\n## Installation\n\n![install](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/install.png#gh-light-mode-only)\n![install](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/install-dark.png#gh-dark-mode-only)\n\nThe easiest way to install is via pip and PyPI\n\n```\npip install txtai\n```\n\nPython 3.9+ is supported. Using a Python [virtual environment](https://docs.python.org/3/library/venv.html) is recommended.\n\nSee the detailed [install instructions](https://neuml.github.io/txtai/install) for more information covering [optional dependencies](https://neuml.github.io/txtai/install/#optional-dependencies), [environment specific prerequisites](https://neuml.github.io/txtai/install/#environment-specific-prerequisites), [installing from source](https://neuml.github.io/txtai/install/#install-from-source), [conda support](https://neuml.github.io/txtai/install/#conda) and how to [run with containers](https://neuml.github.io/txtai/cloud).\n\n## Model guide\n\n![models](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/models.png)\n\nSee the table below for the current recommended models. These models all allow commercial use and offer a blend of speed and performance.\n\n| Component                                                                     | Model(s)                                                                 |\n| ----------------------------------------------------------------------------- | ------------------------------------------------------------------------ |\n| [Embeddings](https://neuml.github.io/txtai/embeddings)                        | [all-MiniLM-L6-v2](https://hf.co/sentence-transformers/all-MiniLM-L6-v2) | \n| [Image Captions](https://neuml.github.io/txtai/pipeline/image/caption)        | [BLIP](https://hf.co/Salesforce/blip-image-captioning-base)              |\n| [Labels - Zero Shot](https://neuml.github.io/txtai/pipeline/text/labels)      | [BART-Large-MNLI](https://hf.co/facebook/bart-large)                     |\n| [Labels - Fixed](https://neuml.github.io/txtai/pipeline/text/labels)          | Fine-tune with [training pipeline](https://neuml.github.io/txtai/pipeline/train/trainer)          |\n| [Large Language Model (LLM)](https://neuml.github.io/txtai/pipeline/text/llm) | [Llama 3.1 Instruct](https://hf.co/meta-llama/Llama-3.1-8B-Instruct)     |\n| [Summarization](https://neuml.github.io/txtai/pipeline/text/summary)          | [DistilBART](https://hf.co/sshleifer/distilbart-cnn-12-6)                |\n| [Text-to-Speech](https://neuml.github.io/txtai/pipeline/audio/texttospeech)   | [ESPnet JETS](https://hf.co/NeuML/ljspeech-jets-onnx)                    |\n| [Transcription](https://neuml.github.io/txtai/pipeline/audio/transcription)   | [Whisper](https://hf.co/openai/whisper-base)                             | \n| [Translation](https://neuml.github.io/txtai/pipeline/text/translation)        | [OPUS Model Series](https://hf.co/Helsinki-NLP)                          |\n\nModels can be loaded as either a path from the Hugging Face Hub or a local directory. Model paths are optional, defaults are loaded when not specified. For tasks with no recommended model, txtai uses the default models as shown in the Hugging Face Tasks guide.\n\nSee the following links to learn more.\n\n- [Hugging Face Tasks](https://hf.co/tasks)\n- [Hugging Face Model Hub](https://hf.co/models)\n- [MTEB Leaderboard](https://hf.co/spaces/mteb/leaderboard)\n- [LMSYS LLM Leaderboard](https://chat.lmsys.org/?leaderboard)\n- [Open LLM Leaderboard](https://hf.co/spaces/HuggingFaceH4/open_llm_leaderboard)\n\n## Powered by txtai\n\nThe following applications are powered by txtai.\n\n![apps](https://raw.githubusercontent.com/neuml/txtai/master/apps.jpg)\n\n| Application  | Description  |\n|:------------ |:-------------|\n| [rag](https://github.com/neuml/rag) | Retrieval Augmented Generation (RAG) application |\n| [ragdata](https://github.com/neuml/ragdata) | Build knowledge bases for RAG |\n| [paperai](https://github.com/neuml/paperai) | Semantic search and workflows for medical/scientific papers |\n| [annotateai](https://github.com/neuml/annotateai) | Automatically annotate papers with LLMs |\n\nIn addition to this list, there are also many other [open-source projects](https://github.com/neuml/txtai/network/dependents), [published research](https://scholar.google.com/scholar?q=txtai&hl=en&as_ylo=2022) and closed proprietary/commercial projects that have built on txtai in production.\n\n## Further Reading\n\n![further](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/further.png#gh-light-mode-only)\n![further](https://raw.githubusercontent.com/neuml/txtai/master/docs/images/further-ghdark.png#gh-dark-mode-only)\n\n- [Introducing txtai, the all-in-one embeddings database](https://medium.com/neuml/introducing-txtai-the-all-in-one-embeddings-database-c721f4ff91ad)\n- [Tutorial series on Hashnode](https://neuml.hashnode.dev/series/txtai-tutorial) | [dev.to](https://dev.to/neuml/tutorial-series-on-txtai-ibg)\n- [What's new in txtai 8.0](https://medium.com/neuml/whats-new-in-txtai-8-0-2d7d0ab4506b) | [7.0](https://medium.com/neuml/whats-new-in-txtai-7-0-855ad6a55440) | [6.0](https://medium.com/neuml/whats-new-in-txtai-6-0-7d93eeedf804) | [5.0](https://medium.com/neuml/whats-new-in-txtai-5-0-e5c75a13b101) | [4.0](https://medium.com/neuml/whats-new-in-txtai-4-0-bbc3a65c3d1c)\n- [Getting started with semantic search](https://medium.com/neuml/getting-started-with-semantic-search-a9fd9d8a48cf) | [workflows](https://medium.com/neuml/getting-started-with-semantic-workflows-2fefda6165d9) | [rag](https://medium.com/neuml/getting-started-with-rag-9a0cca75f748)\n- [Running txtai at scale](https://medium.com/neuml/running-at-scale-with-txtai-71196cdd99f9)\n- [Vector search & RAG Landscape: A review with txtai](https://medium.com/neuml/vector-search-rag-landscape-a-review-with-txtai-a7f37ad0e187)\n\n## Documentation\n\n[Full documentation on txtai](https://neuml.github.io/txtai) including configuration settings for embeddings, pipelines, workflows, API and a FAQ with common questions/issues is available.\n\n## Contributing\n\nFor those who would like to contribute to txtai, please see [this guide](https://github.com/neuml/.github/blob/master/CONTRIBUTING.md).\n"
        },
        {
          "name": "apps.jpg",
          "type": "blob",
          "size": 207.919921875,
          "content": null
        },
        {
          "name": "demo.gif",
          "type": "blob",
          "size": 40.5625,
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 16.5751953125,
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 4.7138671875,
          "content": "#\n# txtai Material for MkDocs configuration\n#\n\nsite_name: txtai\nsite_description: \"txtai is an all-in-one open-source embeddings database for semantic search, LLM orchestration and language model workflows\"\nrepo_name: neuml/txtai\nrepo_url: https://github.com/neuml/txtai\ncopyright: © NeuML LLC, Apache-2.0 License\ntheme:\n    name: material\n    logo: images/logo.png\n    favicon: images/logo.png\n    custom_dir: docs/overrides\n    icon:\n        repo: fontawesome/brands/github\n    palette:\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: blue\n      accent: blue\n      toggle:\n        icon: material/toggle-switch-off-outline\n        name: Switch to dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: light blue\n      accent: light blue\n      toggle:\n        icon: material/toggle-switch\n        name: Switch to light mode\n    features:\n        - navigation.indexes\n        - navigation.instant\nplugins:\n    - search\n    - mkdocstrings:\n        handlers:\n            python:\n                options:\n                    show_root_full_path: false\n                    show_root_heading: true\n                    show_root_toc_entry: false\n    - redirects:\n        redirect_maps:\n            \"pipeline/text/extractor.md\": \"pipeline/text/rag.md\"\n            \"pipeline/text/generator.md\": \"pipeline/text/llm.md\"\n            \"pipeline/text/sequences.md\": \"pipeline/text/llm.md\"\n\nmarkdown_extensions:\n    - pymdownx.highlight\n    - pymdownx.superfences\nnav:\n    - Home: index.md\n    - Why txtai?: why.md\n    - Use Cases: usecases.md\n    - Installation: install.md\n    - Model Guide: models.md\n    - Embeddings:\n        - embeddings/index.md\n        - Configuration:\n            - embeddings/configuration/index.md\n            - ANN: embeddings/configuration/ann.md\n            - Cloud: embeddings/configuration/cloud.md\n            - Database: embeddings/configuration/database.md\n            - General: embeddings/configuration/general.md\n            - Graph: embeddings/configuration/graph.md\n            - Scoring: embeddings/configuration/scoring.md\n            - Vectors: embeddings/configuration/vectors.md\n        - Index Format: embeddings/format.md\n        - Index Guide: embeddings/indexing.md\n        - Methods: embeddings/methods.md\n        - Query Guide: embeddings/query.md\n    - Agent:\n        - agent/index.md\n        - Configuration: agent/configuration.md\n        - Methods: agent/methods.md\n    - Pipeline:\n        - pipeline/index.md\n        - Audio:\n            - Audio Mixer: pipeline/audio/audiomixer.md\n            - Audio Stream: pipeline/audio/audiostream.md\n            - Microphone: pipeline/audio/microphone.md\n            - Text To Audio: pipeline/audio/texttoaudio.md\n            - Text To Speech: pipeline/audio/texttospeech.md\n            - Transcription: pipeline/audio/transcription.md\n        - Data:\n            - File To HTML: pipeline/data/filetohtml.md\n            - HTML To Markdown: pipeline/data/htmltomd.md\n            - Segmentation: pipeline/data/segmentation.md\n            - Tabular: pipeline/data/tabular.md\n            - Textractor: pipeline/data/textractor.md\n        - Image:\n            - Caption: pipeline/image/caption.md\n            - Image Hash: pipeline/image/imagehash.md\n            - Objects: pipeline/image/objects.md\n        - Text:\n            - Entity: pipeline/text/entity.md\n            - Labels: pipeline/text/labels.md\n            - LLM: pipeline/text/llm.md\n            - RAG: pipeline/text/rag.md\n            - Similarity: pipeline/text/similarity.md\n            - Summary: pipeline/text/summary.md\n            - Translation: pipeline/text/translation.md\n        - Train:\n            - HF ONNX: pipeline/train/hfonnx.md\n            - ML ONNX: pipeline/train/mlonnx.md\n            - Trainer: pipeline/train/trainer.md\n    - Workflow:\n        - workflow/index.md\n        - Schedule: workflow/schedule.md\n        - Tasks:\n            - workflow/task/index.md\n            - Console: workflow/task/console.md\n            - Export: workflow/task/export.md\n            - File: workflow/task/file.md\n            - Image: workflow/task/image.md\n            - Retrieve: workflow/task/retrieve.md\n            - Service: workflow/task/service.md\n            - Storage: workflow/task/storage.md\n            - Template: workflow/task/template.md\n            - Url: workflow/task/url.md\n            - Workflow: workflow/task/workflow.md\n    - API:\n        - api/index.md\n        - Cluster: api/cluster.md\n        - Configuration: api/configuration.md\n        - Customization: api/customization.md\n        - Methods: api/methods.md\n        - Security: api/security.md\n    - Cloud: cloud.md\n    - Examples: examples.md\n    - FAQ: faq.md\n    - Powered by txtai: poweredby.md\n    - Further Reading: further.md\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[tool.black]\nline-length = 150\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.3466796875,
          "content": "# pylint: disable = C0111\nfrom setuptools import find_packages, setup\n\nwith open(\"README.md\", \"r\", encoding=\"utf-8\") as f:\n    # Remove GitHub dark mode images\n    DESCRIPTION = \"\".join([line for line in f if \"gh-dark-mode-only\" not in line])\n\n# Required dependencies\ninstall = [\"faiss-cpu>=1.7.1.post2\", \"msgpack>=1.0.7\", \"torch>=1.12.1\", \"transformers>=4.45.0\"]\n\n# Required dependencies that are also transformers dependencies\ninstall += [\"huggingface-hub>=0.19.0\", \"numpy>=1.18.4\", \"pyyaml>=5.3\", \"regex>=2022.8.17\"]\n\n# Optional dependencies\nextras = {}\n\n# Development dependencies - not included in \"all\" install\nextras[\"dev\"] = [\n    \"black\",\n    \"coverage\",\n    \"coveralls\",\n    \"httpx\",\n    \"mkdocs-material\",\n    \"mkdocs-redirects\",\n    \"mkdocstrings[python]\",\n    \"pre-commit\",\n    \"pylint\",\n]\n\nextras[\"ann\"] = [\n    \"annoy>=1.16.3\",\n    \"hnswlib>=0.5.0\",\n    \"pgvector>=0.3.0\",\n    \"sqlalchemy>=2.0.20\",\n    \"sqlite-vec>=0.1.1\",\n]\n\nextras[\"api\"] = [\n    \"aiohttp>=3.8.1\",\n    \"fastapi>=0.94.0\",\n    \"pillow>=7.1.2\",\n    \"python-multipart>=0.0.7\",\n    \"uvicorn>=0.12.1\",\n]\n\nextras[\"cloud\"] = [\"apache-libcloud>=3.3.1\"]\n\nextras[\"console\"] = [\"rich>=12.0.1\"]\n\nextras[\"database\"] = [\"duckdb>=0.7.1\", \"pillow>=7.1.2\", \"sqlalchemy>=2.0.20\"]\n\nextras[\"graph\"] = [\"grand-cypher>=0.6.0\", \"grand-graph>=0.6.0\", \"networkx>=2.6.3\", \"python-louvain>=0.16\", \"sqlalchemy>=2.0.20\"]\n\nextras[\"model\"] = [\"onnx>=1.11.0\", \"onnxruntime>=1.11.0\"]\n\nextras[\"pipeline-audio\"] = [\n    \"onnx>=1.11.0\",\n    \"onnxruntime>=1.11.0\",\n    \"scipy>=1.4.1\",\n    \"sounddevice>=0.5.0\",\n    \"soundfile>=0.10.3.post1\",\n    \"ttstokenizer>=1.0.0\",\n    \"webrtcvad-wheels>=2.0.14\",\n]\n\nextras[\"pipeline-data\"] = [\"beautifulsoup4>=4.9.3\", \"docling>=2.8.2\", \"nltk>=3.5\", \"pandas>=1.1.0\", \"tika>=1.24\"]\n\nextras[\"pipeline-image\"] = [\"imagehash>=4.2.1\", \"pillow>=7.1.2\", \"timm>=0.4.12\"]\n\nextras[\"pipeline-llm\"] = [\"litellm>=1.37.16\", \"llama-cpp-python>=0.2.75\"]\n\nextras[\"pipeline-text\"] = [\"fasttext>=0.9.2\", \"sentencepiece>=0.1.91\"]\n\nextras[\"pipeline-train\"] = [\n    \"accelerate>=0.26.0\",\n    \"bitsandbytes>=0.42.0\",\n    \"onnx>=1.11.0\",\n    \"onnxmltools>=1.9.1\",\n    \"onnxruntime>=1.11.0\",\n    \"peft>=0.8.1\",\n    \"skl2onnx>=1.9.1\",\n]\n\nextras[\"pipeline\"] = (\n    extras[\"pipeline-audio\"]\n    + extras[\"pipeline-data\"]\n    + extras[\"pipeline-image\"]\n    + extras[\"pipeline-llm\"]\n    + extras[\"pipeline-text\"]\n    + extras[\"pipeline-train\"]\n)\n\nextras[\"scoring\"] = [\"sqlalchemy>=2.0.20\"]\n\nextras[\"vectors\"] = [\n    \"fasttext>=0.9.2\",\n    \"litellm>=1.37.16\",\n    \"llama-cpp-python>=0.2.75\",\n    \"model2vec>=0.3.0\",\n    \"pymagnitude-lite>=0.1.43\",\n    \"scikit-learn>=0.23.1\",\n    \"sentence-transformers>=2.2.0\",\n    \"skops>=0.9.0\",\n]\n\nextras[\"workflow\"] = [\n    \"apache-libcloud>=3.3.1\",\n    \"croniter>=1.2.0\",\n    \"openpyxl>=3.0.9\",\n    \"pandas>=1.1.0\",\n    \"pillow>=7.1.2\",\n    \"requests>=2.26.0\",\n    \"xmltodict>=0.12.0\",\n]\n\n# Backwards-compatible combination of ann and vectors extra\nextras[\"similarity\"] = extras[\"ann\"] + extras[\"vectors\"]\n\nextras[\"all\"] = (\n    extras[\"api\"]\n    + extras[\"cloud\"]\n    + extras[\"console\"]\n    + extras[\"database\"]\n    + extras[\"graph\"]\n    + extras[\"model\"]\n    + extras[\"pipeline\"]\n    + extras[\"scoring\"]\n    + extras[\"similarity\"]\n    + extras[\"workflow\"]\n)\n\nsetup(\n    name=\"txtai\",\n    version=\"8.3.0\",\n    author=\"NeuML\",\n    description=\"All-in-one open-source embeddings database for semantic search, LLM orchestration and language model workflows\",\n    long_description=DESCRIPTION,\n    long_description_content_type=\"text/markdown\",\n    url=\"https://github.com/neuml/txtai\",\n    project_urls={\n        \"Documentation\": \"https://github.com/neuml/txtai\",\n        \"Issue Tracker\": \"https://github.com/neuml/txtai/issues\",\n        \"Source Code\": \"https://github.com/neuml/txtai\",\n    },\n    license=\"Apache 2.0: http://www.apache.org/licenses/LICENSE-2.0\",\n    packages=find_packages(where=\"src/python\"),\n    package_dir={\"\": \"src/python\"},\n    keywords=\"search embedding machine-learning nlp\",\n    python_requires=\">=3.9\",\n    install_requires=install,\n    extras_require=extras,\n    classifiers=[\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Operating System :: OS Independent\",\n        \"Programming Language :: Python :: 3\",\n        \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n        \"Topic :: Software Development\",\n        \"Topic :: Text Processing :: Indexing\",\n        \"Topic :: Utilities\",\n    ],\n)\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}