{
  "metadata": {
    "timestamp": 1736561019575,
    "page": 782,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Shawn-Shan/fawkes",
      "stars": 5262,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.23828125,
          "content": "*.DS_Store\n*.pyc\n*.swp\ndist/*\nbuild/*\nkeras/datasets/data/*\nkeras/datasets/temp/*\ntags\nfawkes.egg-info\n\n# test-related\n.coverage\n.cache\n.pytest_cache\nfawkes_dev/api_key.txt\nfawkes_dev/protect_personId.txt\n\n# developer environments\n.idea\n.vscode"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.4833984375,
          "content": "Copyright (c) 2020, SANDLAB, University of Chicago\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that\nthe following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other materials provided with the distribution.\n\n* Neither the name of the SANDLAB, University of Chicago nor the names of its contributors may be used to endorse or promote\n  products derived from this software without specific prior written permission.\n\n*THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE\nUSE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.*"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.0537109375,
          "content": "Fawkes\n------\n:warning: Check out our MacOS/Windows Software on our official [webpage](https://sandlab.cs.uchicago.edu/fawkes/#code).\n\nFawkes is a privacy protection system developed by researchers at [SANDLab](https://sandlab.cs.uchicago.edu/),\nUniversity of Chicago. For more information about the project, please refer to our\nproject [webpage](https://sandlab.cs.uchicago.edu/fawkes/). Contact us at fawkes-team@googlegroups.com.\n\nWe published an academic paper to summarize our\nwork \"[Fawkes: Protecting Personal Privacy against Unauthorized Deep Learning Models](https://www.shawnshan.com/files/publication/fawkes.pdf)\"\nat *USENIX Security 2020*.\n\n\nCopyright\n---------\nThis code is intended only for personal privacy protection or academic research.\n\nUsage\n-----\n\n`$ fawkes`\n\nOptions:\n\n* `-m`, `--mode`       : the tradeoff between privacy and perturbation size. Select from `low`, `mid`, `high`. The\n  higher the mode is, the more perturbation will add to the image and provide stronger protection.\n* `-d`, `--directory`  : the directory with images to run protection.\n* `-g`, `--gpu`        : the GPU id when using GPU for optimization.\n* `--batch-size`       : number of images to run optimization together. Change to >1 only if you have extremely powerful\n  compute power.\n* `--format`      : format of the output image (png or jpg).\n\n### Example\n\n`fawkes -d ./imgs --mode low`\n\nor `python3 protection.py -d ./imgs --mode low`\n\n\n### Tips\n\n- The perturbation generation takes ~60 seconds per image on a CPU machine, and it would be much faster on a GPU\n  machine. Use `batch-size=1` on CPU and `batch-size>1` on GPUs.\n- Run on GPU. The current Fawkes package and binary does not support GPU. To use GPU, you need to clone this repo, install\n  the required packages in `setup.py`, and replace tensorflow with tensorflow-gpu. Then you can run Fawkes\n  by `python3 fawkes/protection.py [args]`.\n\n![](http://sandlab.cs.uchicago.edu/fawkes/files/obama.png)\n\n### How do I know my images are secure?\n\nWe are actively working on this. Python scripts that can test the protection effectiveness will be ready shortly.\n\nQuick Installation\n------------------\n\nInstall from [PyPI](https://pypi.org/project/fawkes/):\n\n```\npip install fawkes\n```\n\nIf you don't have root privilege, please try to install on user namespace: `pip install --user fawkes`.\n\n\nAcademic Research Usage\n-----------------------\nFor academic researchers, whether seeking to improve fawkes or to explore potential vunerability, please refer to the\nfollowing guide to test Fawkes.\n\nTo protect a class in a dataset, first move the label's image to a separate location and run Fawkes. Please\nuse `--debug` option and set `batch-size` to a reasonable number (i.e 16, 32). If the images are already cropped and\naligned, then also use the `no-align` option.\n\n### Citation\n\n```\n@inproceedings{shan2020fawkes,\n  title={Fawkes: Protecting Personal Privacy against Unauthorized Deep Learning Models},\n  author={Shan, Shawn and Wenger, Emily and Zhang, Jiayun and Li, Huiying and Zheng, Haitao and Zhao, Ben Y},\n  booktitle={Proc. of {USENIX} Security},\n  year={2020}\n}\n```\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "fawkes",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.0458984375,
          "content": "import os\nimport re\nimport sys\n\nfrom setuptools import setup, Command\n\n__PATH__ = os.path.abspath(os.path.dirname(__file__))\n\nwith open(\"README.md\", \"r\") as fh:\n    long_description = fh.read()\n\n\ndef read_version():\n    __PATH__ = os.path.abspath(os.path.dirname(__file__))\n    with open(os.path.join(__PATH__, 'fawkes/__init__.py')) as f:\n        version_match = re.search(r\"^__version__ = ['\\\"]([^'\\\"]*)['\\\"]\",\n                                  f.read(), re.M)\n    if version_match:\n        return version_match.group(1)\n    raise RuntimeError(\"Unable to find __version__ string\")\n\n\n__version__ = read_version()\n\n\n# brought from https://github.com/kennethreitz/setup.py\nclass DeployCommand(Command):\n    description = 'Build and deploy the package to PyPI.'\n    user_options = []\n\n    def initialize_options(self):\n        pass\n\n    def finalize_options(self):\n        pass\n\n    @staticmethod\n    def status(s):\n        print(s)\n\n    def run(self):\n\n        assert 'dev' not in __version__, (\n            \"Only non-devel versions are allowed. \"\n            \"__version__ == {}\".format(__version__))\n\n        with os.popen(\"git status --short\") as fp:\n            git_status = fp.read().strip()\n            if git_status:\n                print(\"Error: git repository is not clean.\\n\")\n                os.system(\"git status --short\")\n                sys.exit(1)\n\n        try:\n            from shutil import rmtree\n            self.status('Removing previous builds ...')\n            rmtree(os.path.join(__PATH__, 'dist'))\n        except OSError:\n            pass\n\n        self.status('Building Source and Wheel (universal) distribution ...')\n        os.system('{0} setup.py sdist'.format(sys.executable))\n\n        self.status('Uploading the package to PyPI via Twine ...')\n        ret = os.system('twine upload dist/*')\n        if ret != 0:\n            sys.exit(ret)\n\n        self.status('Creating git tags ...')\n        os.system('git tag v{0}'.format(__version__))\n        os.system('git tag --list')\n        sys.exit()\n\n\nsetup_requires = []\n\ninstall_requires = [\n    'numpy>=1.19.5',\n    'tensorflow==2.4.1',\n    'keras==2.4.3',\n    'mtcnn',\n    'pillow>=7.0.0',\n    'bleach>=2.1.0'\n]\n\nsetup(\n    name='fawkes',\n    version=__version__,\n    license='BSD',\n    description='An utility to protect user privacy',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    url=\"https://github.com/Shawn-Shan/fawkes\",\n    author='Shawn Shan',\n    author_email='shawnshan@cs.uchicago.edu',\n    keywords='fawkes privacy ML',\n    classifiers=[\n        'Development Status :: 3 - Alpha',\n        'License :: OSI Approved :: MIT License',\n        \"Operating System :: OS Independent\",\n        'Programming Language :: Python :: 3',\n        'Topic :: System :: Monitoring',\n    ],\n    packages=['fawkes'],\n    install_requires=install_requires,\n    setup_requires=setup_requires,\n    entry_points={\n        'console_scripts': ['fawkes=fawkes:main'],\n    },\n    cmdclass={\n        'deploy': DeployCommand,\n    },\n    include_package_data=True,\n    zip_safe=False,\n    python_requires='>=3.5',\n)\n"
        }
      ]
    }
  ]
}