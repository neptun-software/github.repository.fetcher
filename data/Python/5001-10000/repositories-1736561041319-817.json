{
  "metadata": {
    "timestamp": 1736561041319,
    "page": 817,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebook/PathPicker",
      "stars": 5146,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.197265625,
          "content": "[flake8]\nmax-line-length = 88\nextend-ignore = E203, W503\ncopyright-check = True\ncopyright-min-file-size = 1\ncopyright-regexp = Copyright \\(c\\) Facebook\\, Inc\\. and its affiliates\\.\nselect = E,F,W,B,I,C\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1640625,
          "content": "# Vim swaps\n*.swo\n*.swp\n# python compiled files\n*.pyc\n# hg merge conflicts\n*.orig\ndist/*\nfpp.deb\nfpp*.deb\ndebian/usr/\npathpicker*.deb\n# man page leftovers\nmanpage.adoc\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.16015625,
          "content": "# Open Source Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\nUsing welcoming and inclusive language\nBeing respectful of differing viewpoints and experiences\nGracefully accepting constructive criticism\nFocusing on what is best for the community\nShowing empathy towards other community members\nExamples of unacceptable behavior by participants include:\n\nThe use of sexualized language or imagery and unwelcome sexual attention or advances\nTrolling, insulting/derogatory comments, and personal or political attacks\nPublic or private harassment\nPublishing others’ private information, such as a physical or electronic address, without explicit permission\nOther conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when an individual is representing the project or its community in public spaces. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at opensource-conduct@fb.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project’s leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.255859375,
          "content": "# Contributing to Facebook PathPicker\n\nWelcome to the community and thanks for stopping by! Facebook PathPicker is actually quite\neasy to contribute to -- it has minimal external and internal dependencies and just some\nsimple input-output tests to run.\n\nThe easiest way to get set up is to:\n* First, clone the repo with:\n  * `git clone https://github.com/facebook/PathPicker.git`\n* Second, ensure you have Python 3 installed:\n  * `python3 --version`\n* Go ahead and execute the script!\n  * `cd PathPicker; ./fpp`\n\nThe three areas to contribute to are:\n* Regex parsing (for detecting filenames and ignoring normal code)\n* UI functionality (either bug fixes with curses or new functionality)\n* General pipeline work related to our bash scripts.\n\n### Pull Requests\n\nSend them over! Our bot will ask you to sign the CLA and after that someone\nfrom the team will start reviewing.\n\nBefore sending them over, make sure the tests pass with:\n`./scripts/runTests.sh`\n\n### Test dependencies\n\n* Install [poetry](https://github.com/python-poetry/poetry).\n* Select poetry environment with `poetry env use 3.6`. Some linters depend on Python version and it's better to check on the same version as we use in CI.\n\n### PyCharm project\nYou can open PathPicker in PyCharm. You will also need to install [poetry plugin](https://plugins.jetbrains.com/plugin/14307-poetry) for using poetry environment.\n\n### Contributor License Agreement (\"CLA\")\n\nIn order to accept your pull request, we need you to submit a CLA. You only need to do this once, so if you've done this for another Facebook open source project, you're good to go. If you are submitting a pull request for the first time, just let us know that you have completed the CLA and we can cross-check with your GitHub username.\n[Complete your CLA here](https://code.facebook.com/cla)\n\n## Bugs\n\n### Where to Find Known Issues\n\nWe will be using GitHub Issues for our public bugs. It's worth checking there before reporting your own issue.\n\n### Reporting New Issues\n\nAlways try to provide a minimal test case that repros the bug.\n\n### Documentation\n\n* Do not wrap lines at 80 characters - configure your editor to soft-wrap when editing documentation.\n\n## License\n\nBy contributing to Facebook PathPicker, you agree that your contributions will be licensed under its MIT license.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0595703125,
          "content": "MIT License\n\nCopyright (c) Facebook, Inc. and its affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.4697265625,
          "content": "# PathPicker\n\n[![tests](https://github.com/facebook/PathPicker/workflows/tests/badge.svg)](https://github.com/facebook/PathPicker/actions) [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\nFacebook PathPicker is a simple command line tool that solves the perpetual\nproblem of selecting files out of bash output. PathPicker will:\n* Parse all incoming lines for entries that look like files\n* Present the piped input in a convenient selector UI\n* Allow you to either:\n    * Edit the selected files in your favorite `$EDITOR`\n    * Execute an arbitrary command with them\n\nIt is easiest to understand by watching a simple demo:\n\n<a href=\"https://asciinema.org/a/19519\" target=\"_blank\"><img src=\"https://asciinema.org/a/19519.png\" width=\"597\"/></a>\n\n## Examples\n\nAfter installing PathPicker, using it is as easy as piping into `fpp`. It takes\na wide variety of input -- try it with all the options below:\n\n* `git status | fpp`\n* `hg status | fpp`\n* `git grep \"FooBar\" | fpp`\n* `grep -r \"FooBar\" . | fpp`\n* `git diff HEAD~1 --stat | fpp`\n* `find . -iname \"*.js\" | fpp`\n* `arc inlines | fpp`\n\nand anything else you can dream up!\n\n## Requirements\n\nPathPicker requires Python 3.\n\n### Supported Shells\n\n* Bash is fully supported and works the best.\n* ZSH is supported as well, but won't have a few features like alias expansion in command line mode.\n* csh/fish/rc are supported in the latest version, but might have quirks or issues in older versions of PathPicker. Note: if your default shell and current shell is not in the same family (bash/zsh... v.s. fish/rc), you need to manually export environment variable `$SHELL` to your current shell.\n\n## Installing PathPicker\n\n### Homebrew\n\nInstalling PathPicker is easiest with [Homebrew for mac](http://brew.sh/):\n\n* `brew update` (to pull down the recipe since it is new)\n* `brew install fpp`\n\n### Linux\n\nOn Debian-based systems, run these steps:\n[fakeroot](https://wiki.debian.org/FakeRoot):\n\n```\n$ git clone https://github.com/facebook/PathPicker.git\n$ cd PathPicker/debian\n$ ./package.sh\n$ ls ../pathpicker_*_all.deb\n```\n\nOn Arch Linux, PathPicker can be installed from Arch User Repository (AUR).\n([The AUR fpp-git package](https://aur.archlinux.org/packages/fpp-git/).)\n\nIf you are on another system, or prefer manual installation, please\nfollow the instructions given below.\n\n### Manual Installation\n\nIf you are on a system without Homebrew, it's still quite easy to install\nPathPicker, since it's essentially just a bash script that calls some Python. These\nsteps more-or-less outline the process:\n\n* `cd /usr/local/ # or wherever you install apps`\n* `git clone https://github.com/facebook/PathPicker.git`\n* `cd PathPicker/`\n\nHere we create a symbolic link from the bash script in the repo\nto `/usr/local/bin/` which is assumed to be in the current\n`$PATH`:\n\n* `ln -s \"$(pwd)/fpp\" /usr/local/bin/fpp`\n* `fpp --help # should work!`\n\n### Add-ons\n\nFor tmux users, you can additionally install `tmux-fpp` which adds a key combination to run PathPicker on the last received `stdout`.\nThis makes jumping into file selection mode even easier. ([Check it out here!](https://github.com/tmux-plugins/tmux-fpp))\n\n\n## Advanced Functionality\n\nAs mentioned above, PathPicker allows you to also execute arbitrary commands using the specified files.\nHere is an example showing a `git checkout` command executed against the selected files:\n\n<a href=\"https://asciinema.org/a/19520\" target=\"_blank\"><img src=\"https://asciinema.org/a/19520.png\" width=\"597\"/></a>\n\nThe selected files are appended to the command prefix to form the final command. If you need the files\nin the middle of your command, you can use the `$F` token instead, like:\n\n`cat $F | wc -l`\n\nAnother important note is that PathPicker, by default, only selects files that exist on the filesystem. If you\nwant to skip this (perhaps to selected deleted files in `git status`), just run PathPicker with the `--no-file-checks` (or `-nfc`, for short) flag.\n\n## How PathPicker works\n\nPathPicker is a combination of a bash script and some small Python modules.\nIt essentially has three steps:\n\n* Firstly, the bash script redirects all standards out into a python module that\nparses and extracts out filename candidates. These candidates are extracted with a series of\nregular expressions, since the input to PathPicker can be any `stdout` from another program. Rather\nthan make specialized parsers for each program, we treat everything as noisy input, and select candidates via\nregexes. To limit the number of calls to the filesystem (to check existence), we are fairly restrictive on the\ncandidates we extract.\n\nThe downside to this is that files that are single words, with no extension (like `test`), that are not prepended by\na directory will fail to match. This is a known limitation to PathPicker, and means that it will sometimes fail to find valid files in the input.\n\n* Next, a selector UI built with `curses` is presented to the user. At this point you can select a few files to edit, or input a command\nto execute.\n\n* Lastly, the python script outputs a command to a bash file that is later\nexecuted by the original bash script.\n\nIt's not the most elegant architecture in the world but, in our opinion, it provides a lot of utility.\n\n## Documentation & Configuration\n\nFor all documentation and configuration options, see the output of `fpp --help`.\n\n## Join the PathPicker community\n\nSee the [CONTRIBUTING.md](https://github.com/facebook/PathPicker/blob/master/CONTRIBUTING.md) file for how to help out.\n\n## License\n\nPathPicker is MIT licensed.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "fpp",
          "type": "blob",
          "size": 3.341796875,
          "content": "#!/bin/bash\n# Copyright (c) Facebook, Inc. and its affiliates.\n#\n# This source code is licensed under the MIT license found in the\n# LICENSE file in the root directory of this source tree.\n\n# get the directory of this script so we can execute the related python\n# http://stackoverflow.com/a/246128/212110\nSOURCE=$0\n# resolve $SOURCE until the file is no longer a symlink\nwhile [ -h \"$SOURCE\" ]; do\n  BASEDIR=\"$(cd -P \"$(dirname \"$SOURCE\")\" && pwd)\"\n  SOURCE=\"$(readlink \"$SOURCE\")\"\n  # if $SOURCE was a relative symlink, we need to resolve it relative to\n  # the path where the symlink file was located\n  [[ $SOURCE != /* ]] && SOURCE=\"$BASEDIR/$SOURCE\"\ndone\nBASEDIR=\"$(cd -P \"$(dirname \"$SOURCE\")\" && pwd)\"\n\nPYTHONCMD=\"python3\"\nNONINTERACTIVE=false\n\n# Setup according to XDG/Freedesktop standards as specified by\n# https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html\nif [ -z \"$FPP_DIR\" ]; then\n  if [ -z \"$XDG_CACHE_HOME\" ]; then\n    FPP_DIR=\"$HOME/.cache/fpp\"\n  else\n    FPP_DIR=\"$XDG_CACHE_HOME/fpp\"\n  fi\nfi\n\nfunction doProgram {\n  # process input from pipe and store as pickled file\n  $PYTHONCMD \"$BASEDIR/src/process_input.py\" \"$@\"\n  # if it failed, just fail now and exit the script\n  # this works for the looping -ko case as well\n  if [[ $? != 0 ]]; then exit $?; fi\n  # now close stdin and choose input...\n  exec 0<&-\n\n  $PYTHONCMD \"$BASEDIR/src/choose.py\" \"$@\" < /dev/tty\n  # Determine if running from within vim shell\n  IFLAG=\"\"\n  if [ -z \"$VIMRUNTIME\" -a \"$NONINTERACTIVE\" = false ]; then\n    IFLAG=\"-i\"\n  fi\n  # execute the output bash script. For zsh or bash\n  # shells, we delegate to $SHELL, but for all others\n  # (fish, csh, etc) we delegate to bash.\n  #\n  # We use the following heuristics from\n  # http://stackoverflow.com/questions/3327013/\n  # in order to determine which shell we are on\n  if [ -n \"$BASH\" -o -n \"$ZSH_NAME\" ]; then\n    if [ -e \"${SHELL}\" ]; then\n      $SHELL $IFLAG \"$FPP_DIR/.fpp.sh\" < /dev/tty\n    else\n      (>&2 echo \"Your SHELL bash variable ${SHELL} does not exist, please export it explicitly\");\n      $BASH $IFLAG \"$FPP_DIR/.fpp.sh\" < /dev/tty\n    fi\n  else\n    /bin/bash $IFLAG \"$FPP_DIR/.fpp.sh\" < /dev/tty\n  fi\n}\n\n# we need to handle the --help option outside the python\n# flow since otherwise we will move into input selection...\nfor opt in \"$@\"; do\n  if [ \"$opt\" == \"--debug\" ]; then\n    echo \"Executing from '$BASEDIR'\"\n  elif [ \"$opt\" == \"--version\" ]; then\n    VERSION=\"$($PYTHONCMD \"$BASEDIR/src/version.py\")\"\n    echo \"fpp version $VERSION\"\n    exit 0\n  elif [ \"$opt\" == \"--python2\" ]; then\n    echo \"Python 2 is no longer supported. Please use Python 3.\"\n    exit 1\n  elif [ \"$opt\" == \"--help\" -o \"$opt\" == \"-h\" ]; then\n    $PYTHONCMD \"$BASEDIR/src/print_help.py\"\n    exit 0\n  elif [ \"$opt\" == \"--record\" -o \"$opt\" == \"-r\" ]; then\n    echo \"Recording input and output...\"\n  elif [ \"$opt\" == \"--non-interactive\" -o \"$opt\" == \"-ni\" ]; then\n    NONINTERACTIVE=true\n  elif [ \"$opt\" == \"--keep-open\" -o \"$opt\" == \"-ko\" ]; then\n    # allow control-c to exit the loop\n    # http://unix.stackexchange.com/a/48432\n    trap \"exit\" INT\n    while true; do\n      doProgram \"$@\"\n      # connect tty back to stdin since we closed it\n      # earlier. this also works since we will only read\n      # from stdin once and then go permanent interactive mode\n      # http://stackoverflow.com/a/1992967/948126\n      exec 0</dev/tty\n    done\n  fi\ndone\n\ndoProgram \"$@\"\n"
        },
        {
          "name": "fpp.rb",
          "type": "blob",
          "size": 0.8388671875,
          "content": "# Copyright (c) Facebook, Inc. and its affiliates.\n#\n# This source code is licensed under the MIT license found in the\n# LICENSE file in the root directory of this source tree.\nclass Fpp < Formula\n  desc \"CLI program that accepts piped input and presents files for selection\"\n  homepage \"https://facebook.github.io/PathPicker/\"\n  url \"https://github.com/facebook/PathPicker/releases/download/0.9.2/fpp.0.9.2.tar.gz\"\n  sha256 \"f2b233b1e18bdafb1cd1728305e926aabe217406e65091f1e58589e6157e1952\"\n  head \"https://github.com/facebook/pathpicker.git\"\n\n  bottle :unneeded\n\n  depends_on \"python3\" if MacOS.version <= :snow_leopard\n\n  def install\n    # we need to copy the bash file and source python files\n    libexec.install Dir[\"*\"]\n    # and then symlink the bash file\n    bin.install_symlink libexec/\"fpp\"\n  end\n\n  test do\n    system bin/\"fpp\", \"--help\"\n  end\nend\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 9.0712890625,
          "content": "<!DOCTYPE html>\n<!--\nCopyright (c) Facebook, Inc. and its affiliates.\n\nThis source code is licensed under the MIT license found in the\nLICENSE file in the root directory of this source tree.\n -->\n<html lang=\"en\">\n  <head>\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n    <meta charset=\"utf-8\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <meta name=\"author\" content=\"Facebook / Peter Cottle\">\n\n    <meta property=\"og:title\" content=\"Facebook PathPicker\"/>\n    <meta property=\"og:type\" content=\"website\"/>\n    <meta property=\"og:url\" content=\"https://facebook.github.io/pathpicker/\" />\n    <meta property=\"og:image\" content=\"https://facebook.github.io/PathPicker/assets/og-image.png\" />\n    <meta property=\"og:description\" content=\"PathPicker is a command line tool to easily select files from piped input.\"/>\n    <meta name=\"description\" content=\"PathPicker is a command line tool to easily select files from piped input.\"/>\n\n    <link rel=\"icon\" href=\"assets/fpp-favicon.ico\">\n\n    <title>Facebook PathPicker</title>\n\n    <!-- Bootstrap core CSS -->\n    <link href=\"assets/bootstrap.min.css\" rel=\"stylesheet\">\n    <!-- our overrides -->\n    <link href=\"assets/launch_page.css\" rel=\"stylesheet\">\n    <!-- font awesome for the copy button -->\n    <link rel=\"stylesheet\" href=\"assets/font-awesome.css\" type=\"text/css\" charset=\"utf-8\">\n\n  </head>\n\n  <body cz-shortcut-listen=\"true\">\n    <div  style=\"padding: 0 0; background-color: #000;\">\n      <div style=\"   font-weight: bold; font-size: 20px; padding: 20px; max-width: 768px; margin: 0 auto; text-align: center; color: white;\">\n        Support Ukraine 🇺🇦 \n        <a href=\"https://opensource.fb.com/support-ukraine\">\n          Help Provide Humanitarian Aid to Ukraine\n        </a>\n        .\n      </div>\n    </div>\n    <nav class=\"navbar navbar-inverse\">\n      <div class=\"container\">\n        <div class=\"navbar-header\">\n          <a class=\"navbar-brand\" href=\"https://facebook.github.io/PathPicker/\">Facebook PathPicker</a>\n          <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar\" aria-expanded=\"false\" aria-controls=\"navbar\">\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n            <span class=\"icon-bar\"></span>\n          </button>\n        </div>\n        <div id=\"navbar\" class=\"collapse navbar-collapse\">\n          <ul class=\"nav navbar-nav\">\n            <li class=\"active\"><a href=\"#\">Facebook PathPicker</a></li>\n            <li><a href=\"https://github.com/facebook/pathpicker/\">View on GitHub</a></li>\n          </ul>\n          <ul class=\"nav navbar-nav navbar-right\">\n            <li class=\"github-counter\">\n              <iframe\n                src=\"https://ghbtns.com/github-btn.html?user=facebook&repo=pathpicker&type=star&count=true\"\n                frameborder=\"0\"\n                scrolling=\"0\"\n                width=\"94px\"\n                height=\"30px\"\n                align=\"right\">\n              </iframe>\n            </li>\n          </ul>\n        </div><!--/.nav-collapse -->\n      </div>\n    </nav>\n\n    <div class=\"jumbotron pathPickerHeader\">\n      <div class=\"container\">\n        <div class=\"heading\">\n          <img id=\"logo\" src=\"assets/heading@2x.png\" />\n          <p class=\"lead\">Why Pipe when you can Pick?</p>\n        </div>\n      </div>\n      <div class=\"callToAction\">\n        <p>\n          brew update; brew install fpp; fpp\n          <button\n            id=\"brew-install-button\"\n            class=\"btn btn-success\"\n            data-toggle=\"tooltip\"\n            data-placement=\"bottom\"\n            data-clipboard-text=\"brew update; brew install fpp; fpp\"\n            title=\"Copy to Clipboard\">\n            <i class=\"icon-paste\"></i>\n          </button>\n        </p>\n      </div>\n    </div>\n    <div class=\"container\">\n      <br/>\n      <div align=\"center\">\n        <h3>Watch Introductory Video</h3>\n        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/oWTCeNRUNVo\" \n        title=\"Explain Like I'm 5: PathPicker\" frameBorder=\"0\" \n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" \n        allowFullScreen ></iframe>\n      </div>\n      <br/>\n      <hr>\n      <div class=\"row\">\n        <div class=\"col-md-6 content\">\n          <h2>Any Input</h2>\n          <p>\n            PathPicker accepts a wide range of input -- output from git commands, grep results, searches -- pretty much anything.\n          </p>\n          <p>\n            After parsing the input, PathPicker presents you with a nice UI to select which files you're interested in. After that\n            you can open them in your favorite editor or execute arbitrary commands.\n          </p>\n          <p><a class=\"btn btn-success\" href=\"https://github.com/facebook/pathpicker/\" role=\"button\">More on GitHub</a></p>\n        </div>\n        <div class=\"asciiDemo col-md-6\">\n          <!-- <script type=\"text/javascript\" src=\"https://asciinema.org/a/19519.js\" id=\"asciicast-19519\" async> -->\n          <!-- </script>   -->\n          <a class=\"mobile-show\" href=\"https://asciinema.org/a/19519\" target=\"_blank\"><img src=\"https://asciinema.org/a/19519.png\" /></a>\n          <div class=\"mobile-hide\">\n          <script id=\"asciicast-19519\" src=\"https://asciinema.org/a/19519.js\" async></script>\n          </div>\n        </div>\n      </div>\n      <hr>\n      <div class=\"row\">\n        <div class=\"col-md-6 content\">\n          <h2>Arbitrary Commands</h2>\n          <p>\n            Besides opening files in your editor, PathPicker also allows you to execute arbitrary commands with the selected\n            files.\n          </p>\n          <p>\n            You can use your selection to add files to version control, change permissions, scp, delete -- pretty much\n            whatever you want!\n          </p>\n          <a class=\"btn btn-success\" href=\"https://github.com/facebook/pathpicker/\" role=\"button\">More on GitHub</a>\n        </div>\n        <div class=\"asciiDemo col-md-6\">\n          <!-- <script type=\"text/javascript\" src=\"https://asciinema.org/a/19520.js\" id=\"asciicast-19520\" async></script> -->\n          <a class=\"mobile-show\" href=\"https://asciinema.org/a/19520\" target=\"_blank\"><img src=\"https://asciinema.org/a/19520.png\" /></a>\n          <div class=\"mobile-hide\">\n          <script id=\"asciicast-19520\" src=\"https://asciinema.org/a/19520.js\" async></script>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!--\n    ==================================================\n    Bootstrap core JavaScript\n    ==================================================\n    -->\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.4/js/bootstrap.min.js\"></script>\n    <script src=\"assets/ZeroClipboard.min.js\"></script>\n    <script>\n      $(window).resize(function() {\n        if ($(window).width() < 768) {\n          $(\"nav\").addClass(\"navbar-fixed-top\");\n        } else {\n          $(\"nav\").removeClass(\"navbar-fixed-top\");\n        }\n      });\n      $(function () {\n        $('[data-toggle=\"tooltip\"]').tooltip()\n      })\n\n      // also wire up the clipboard listener\n      var client = new ZeroClipboard(\n        document.getElementById('brew-install-button')\n      );\n\n      client.on('ready', function() {\n        client.on('aftercopy', function() {\n          // I weep at how manual this is :(\n          var toolTip = $('div.tooltip-inner');\n          toolTip.text('Copied!');\n          var parentLeft = toolTip.parent().css('left');\n          // we have to shift over the whole thing manually\n          parentLeft = parseInt(parentLeft, 10) + 30 + 'px';\n          toolTip.parent().css('left', parentLeft);\n        });\n      });\n    </script>\n    <!--\n    ==================================================\n    GA tracking and FB pixel\n    ==================================================\n    -->\n    <script>\n      (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\n      m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n      })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\n      ga('create', 'UA-37500646-4', 'auto');\n      ga('send', 'pageview');\n    </script>\n    <script>(function() {\n      var _fbq = window._fbq || (window._fbq = []);\n      if (!_fbq.loaded) {\n        var fbds = document.createElement('script');\n        fbds.async = true;\n        fbds.src = '//connect.facebook.net/en_US/fbds.js';\n        var s = document.getElementsByTagName('script')[0];\n        s.parentNode.insertBefore(fbds, s);\n        _fbq.loaded = true;\n      }\n      _fbq.push(['addPixelId', '1376649522580546']);\n    })();\n    window._fbq = window._fbq || [];\n    window._fbq.push(['track', '6025101274956', {'value':'0.00','currency':'USD'}]);\n    </script>\n    <noscript>\n    <img height=\"1\" width=\"1\" alt=\"\" style=\"display:none\"\n      src=\"https://www.facebook.com/tr?ev=6025101274956&amp;cd[value]=0.00&amp;cd[currency]=USD&amp;noscript=1\"\n    />\n    </noscript>\n  </body>\n</html>\n"
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.3935546875,
          "content": "[mypy]\ncheck_untyped_defs = true\ndisallow_any_explicit = true\ndisallow_any_unimported = true\ndisallow_subclassing_any = true\nno_implicit_optional = true\nwarn_no_return = true\nwarn_redundant_casts = true\nwarn_return_any = true\nwarn_unreachable = true\nwarn_unused_ignores = true\ndisallow_untyped_calls = true\ndisallow_incomplete_defs = true\ndisallow_untyped_defs = true\ndisallow_untyped_decorators = true\n"
        },
        {
          "name": "poetry.lock",
          "type": "blob",
          "size": 38.08984375,
          "content": "[[package]]\nname = \"appdirs\"\nversion = \"1.4.4\"\ndescription = \"A small Python module for determining appropriate platform-specific dirs, e.g. a \\\"user data dir\\\".\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"astroid\"\nversion = \"2.4.2\"\ndescription = \"An abstract syntax tree for Python with inference support.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.5\"\n\n[package.dependencies]\nlazy-object-proxy = \">=1.4.0,<1.5.0\"\nsix = \">=1.12,<2.0\"\ntyped-ast = {version = \">=1.4.0,<1.5\", markers = \"implementation_name == \\\"cpython\\\" and python_version < \\\"3.8\\\"\"}\nwrapt = \">=1.11,<2.0\"\n\n[[package]]\nname = \"atomicwrites\"\nversion = \"1.4.0\"\ndescription = \"Atomic file writes.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[[package]]\nname = \"attrs\"\nversion = \"20.3.0\"\ndescription = \"Classes Without Boilerplate\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[package.extras]\ndev = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pympler\", \"pytest (>=4.3.0)\", \"six\", \"zope.interface\", \"furo\", \"sphinx\", \"pre-commit\"]\ndocs = [\"furo\", \"sphinx\", \"zope.interface\"]\ntests = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pympler\", \"pytest (>=4.3.0)\", \"six\", \"zope.interface\"]\ntests_no_zope = [\"coverage[toml] (>=5.0.2)\", \"hypothesis\", \"pympler\", \"pytest (>=4.3.0)\", \"six\"]\n\n[[package]]\nname = \"black\"\nversion = \"20.8b1\"\ndescription = \"The uncompromising code formatter.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\nappdirs = \"*\"\nclick = \">=7.1.2\"\ndataclasses = {version = \">=0.6\", markers = \"python_version < \\\"3.7\\\"\"}\nmypy-extensions = \">=0.4.3\"\npathspec = \">=0.6,<1\"\nregex = \">=2020.1.8\"\ntoml = \">=0.10.1\"\ntyped-ast = \">=1.4.0\"\ntyping-extensions = \">=3.7.4\"\n\n[package.extras]\ncolorama = [\"colorama (>=0.4.3)\"]\nd = [\"aiohttp (>=3.3.2)\", \"aiohttp-cors\"]\n\n[[package]]\nname = \"click\"\nversion = \"7.1.2\"\ndescription = \"Composable command line interface toolkit\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\n\n[[package]]\nname = \"colorama\"\nversion = \"0.4.4\"\ndescription = \"Cross-platform colored terminal text.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\n\n[[package]]\nname = \"dataclasses\"\nversion = \"0.8\"\ndescription = \"A backport of the dataclasses module for Python 3.6\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6, <3.7\"\n\n[[package]]\nname = \"eradicate\"\nversion = \"2.0.0\"\ndescription = \"Removes commented-out code.\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"flake8\"\nversion = \"3.8.4\"\ndescription = \"the modular source code checker: pep8 pyflakes and co\"\ncategory = \"dev\"\noptional = false\npython-versions = \"!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7\"\n\n[package.dependencies]\nimportlib-metadata = {version = \"*\", markers = \"python_version < \\\"3.8\\\"\"}\nmccabe = \">=0.6.0,<0.7.0\"\npycodestyle = \">=2.6.0a1,<2.7.0\"\npyflakes = \">=2.2.0,<2.3.0\"\n\n[[package]]\nname = \"flake8-black\"\nversion = \"0.2.1\"\ndescription = \"flake8 plugin to call black as a code style validator\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[package.dependencies]\nblack = \"*\"\nflake8 = \">=3.0.0\"\n\n[[package]]\nname = \"flake8-bugbear\"\nversion = \"20.11.1\"\ndescription = \"A plugin for flake8 finding likely bugs and design problems in your program. Contains warnings that don't belong in pyflakes and pycodestyle.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\nattrs = \">=19.2.0\"\nflake8 = \">=3.0.0\"\n\n[package.extras]\ndev = [\"coverage\", \"black\", \"hypothesis\", \"hypothesmith\"]\n\n[[package]]\nname = \"flake8-comprehensions\"\nversion = \"3.3.1\"\ndescription = \"A flake8 plugin to help you write better list/set/dict comprehensions.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\nflake8 = \">=3.0,<3.2.0 || >3.2.0,<4\"\nimportlib-metadata = {version = \"*\", markers = \"python_version < \\\"3.8\\\"\"}\n\n[[package]]\nname = \"flake8-copyright\"\nversion = \"0.2.2\"\ndescription = \"Adds copyright checks to flake8\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"flake8-eradicate\"\nversion = \"1.0.0\"\ndescription = \"Flake8 plugin to find commented out code\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6,<4.0\"\n\n[package.dependencies]\nattrs = \"*\"\neradicate = \">=2.0,<3.0\"\nflake8 = \">=3.5,<4.0\"\n\n[[package]]\nname = \"flake8-isort\"\nversion = \"4.0.0\"\ndescription = \"flake8 plugin that integrates isort .\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[package.dependencies]\nflake8 = \">=3.2.1,<4\"\nisort = \">=4.3.5,<6\"\ntestfixtures = \">=6.8.0,<7\"\n\n[package.extras]\ntest = [\"pytest (>=4.0.2,<6)\", \"toml\"]\n\n[[package]]\nname = \"flake8-use-fstring\"\nversion = \"1.1\"\ndescription = \"Flake8 plugin for string formatting style.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\nflake8 = \">=3.0.0,<4.0.0\"\n\n[package.extras]\nci = [\"coverage (>=4.0.0,<5.0.0)\", \"pytest (>=4)\", \"pytest-cov (>=2)\", \"flake8-builtins\", \"flake8-commas\", \"flake8-fixme\", \"flake8-print\", \"flake8-quotes\", \"flake8-todo\", \"python-coveralls\"]\ndev = [\"coverage (>=4.0.0,<5.0.0)\", \"pytest (>=4)\", \"pytest-cov (>=2)\", \"flake8-builtins\", \"flake8-commas\", \"flake8-fixme\", \"flake8-print\", \"flake8-quotes\", \"flake8-todo\"]\ntest = [\"coverage (>=4.0.0,<5.0.0)\", \"pytest (>=4)\", \"pytest-cov (>=2)\", \"flake8-builtins\", \"flake8-commas\", \"flake8-fixme\", \"flake8-print\", \"flake8-quotes\", \"flake8-todo\"]\n\n[[package]]\nname = \"importlib-metadata\"\nversion = \"3.4.0\"\ndescription = \"Read metadata from Python packages\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\ntyping-extensions = {version = \">=3.6.4\", markers = \"python_version < \\\"3.8\\\"\"}\nzipp = \">=0.5\"\n\n[package.extras]\ndocs = [\"sphinx\", \"jaraco.packaging (>=8.2)\", \"rst.linker (>=1.9)\"]\ntesting = [\"pytest (>=3.5,!=3.7.3)\", \"pytest-checkdocs (>=1.2.3)\", \"pytest-flake8\", \"pytest-cov\", \"pytest-enabler\", \"packaging\", \"pep517\", \"pyfakefs\", \"flufl.flake8\", \"pytest-black (>=0.3.7)\", \"pytest-mypy\", \"importlib-resources (>=1.3)\"]\n\n[[package]]\nname = \"iniconfig\"\nversion = \"1.1.1\"\ndescription = \"iniconfig: brain-dead simple config-ini parsing\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"isort\"\nversion = \"5.7.0\"\ndescription = \"A Python utility / library to sort Python imports.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6,<4.0\"\n\n[package.extras]\npipfile_deprecated_finder = [\"pipreqs\", \"requirementslib\"]\nrequirements_deprecated_finder = [\"pipreqs\", \"pip-api\"]\ncolors = [\"colorama (>=0.4.3,<0.5.0)\"]\n\n[[package]]\nname = \"lazy-object-proxy\"\nversion = \"1.4.3\"\ndescription = \"A fast and thorough lazy object proxy.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[[package]]\nname = \"mccabe\"\nversion = \"0.6.1\"\ndescription = \"McCabe checker, plugin for flake8\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"mypy\"\nversion = \"0.800\"\ndescription = \"Optional static typing for Python\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.5\"\n\n[package.dependencies]\nmypy-extensions = \">=0.4.3,<0.5.0\"\ntyped-ast = \">=1.4.0,<1.5.0\"\ntyping-extensions = \">=3.7.4\"\n\n[package.extras]\ndmypy = [\"psutil (>=4.0)\"]\n\n[[package]]\nname = \"mypy-extensions\"\nversion = \"0.4.3\"\ndescription = \"Experimental type system extensions for programs checked with the mypy typechecker.\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"packaging\"\nversion = \"20.9\"\ndescription = \"Core utilities for Python packages\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[package.dependencies]\npyparsing = \">=2.0.2\"\n\n[[package]]\nname = \"pathspec\"\nversion = \"0.8.1\"\ndescription = \"Utility library for gitignore style pattern matching of file paths.\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*\"\n\n[[package]]\nname = \"pluggy\"\nversion = \"0.13.1\"\ndescription = \"plugin and hook calling mechanisms for python\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[package.dependencies]\nimportlib-metadata = {version = \">=0.12\", markers = \"python_version < \\\"3.8\\\"\"}\n\n[package.extras]\ndev = [\"pre-commit\", \"tox\"]\n\n[[package]]\nname = \"py\"\nversion = \"1.10.0\"\ndescription = \"library with cross-python path, ini-parsing, io, code, log facilities\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[[package]]\nname = \"pycodestyle\"\nversion = \"2.6.0\"\ndescription = \"Python style guide checker\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[[package]]\nname = \"pyflakes\"\nversion = \"2.2.0\"\ndescription = \"passive checker of Python programs\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*\"\n\n[[package]]\nname = \"pylint\"\nversion = \"2.6.2\"\ndescription = \"python code static checker\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.5.*\"\n\n[package.dependencies]\nastroid = \">=2.4.0,<2.5\"\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\nisort = \">=4.2.5,<6\"\nmccabe = \">=0.6,<0.7\"\ntoml = \">=0.7.1\"\n\n[[package]]\nname = \"pyparsing\"\nversion = \"2.4.7\"\ndescription = \"Python parsing module\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*\"\n\n[[package]]\nname = \"pytest\"\nversion = \"6.2.2\"\ndescription = \"pytest: simple powerful testing with Python\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\natomicwrites = {version = \">=1.0\", markers = \"sys_platform == \\\"win32\\\"\"}\nattrs = \">=19.2.0\"\ncolorama = {version = \"*\", markers = \"sys_platform == \\\"win32\\\"\"}\nimportlib-metadata = {version = \">=0.12\", markers = \"python_version < \\\"3.8\\\"\"}\niniconfig = \"*\"\npackaging = \"*\"\npluggy = \">=0.12,<1.0.0a1\"\npy = \">=1.8.2\"\ntoml = \"*\"\n\n[package.extras]\ntesting = [\"argcomplete\", \"hypothesis (>=3.56)\", \"mock\", \"nose\", \"requests\", \"xmlschema\"]\n\n[[package]]\nname = \"regex\"\nversion = \"2020.11.13\"\ndescription = \"Alternative regular expression module, to replace re.\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"six\"\nversion = \"1.15.0\"\ndescription = \"Python 2 and 3 compatibility utilities\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.7, !=3.0.*, !=3.1.*, !=3.2.*\"\n\n[[package]]\nname = \"testfixtures\"\nversion = \"6.17.1\"\ndescription = \"A collection of helpers and mock objects for unit tests and doc tests.\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[package.extras]\nbuild = [\"setuptools-git\", \"wheel\", \"twine\"]\ndocs = [\"sphinx\", \"zope.component\", \"sybil\", \"twisted\", \"mock\", \"django (<2)\", \"django\"]\ntest = [\"pytest (>=3.6)\", \"pytest-cov\", \"pytest-django\", \"zope.component\", \"sybil\", \"twisted\", \"mock\", \"django (<2)\", \"django\"]\n\n[[package]]\nname = \"toml\"\nversion = \"0.10.2\"\ndescription = \"Python Library for Tom's Obvious, Minimal Language\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=2.6, !=3.0.*, !=3.1.*, !=3.2.*\"\n\n[[package]]\nname = \"typed-ast\"\nversion = \"1.4.2\"\ndescription = \"a fork of Python 2 and 3 ast modules with type comment support\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"typing-extensions\"\nversion = \"3.7.4.3\"\ndescription = \"Backported and Experimental Type Hints for Python 3.5+\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"vulture\"\nversion = \"2.3\"\ndescription = \"Find dead code\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.dependencies]\ntoml = \"*\"\n\n[[package]]\nname = \"wrapt\"\nversion = \"1.12.1\"\ndescription = \"Module for decorators, wrappers and monkey patching.\"\ncategory = \"dev\"\noptional = false\npython-versions = \"*\"\n\n[[package]]\nname = \"zipp\"\nversion = \"3.4.0\"\ndescription = \"Backport of pathlib-compatible object wrapper for zip files\"\ncategory = \"dev\"\noptional = false\npython-versions = \">=3.6\"\n\n[package.extras]\ndocs = [\"sphinx\", \"jaraco.packaging (>=3.2)\", \"rst.linker (>=1.9)\"]\ntesting = [\"pytest (>=3.5,!=3.7.3)\", \"pytest-checkdocs (>=1.2.3)\", \"pytest-flake8\", \"pytest-cov\", \"jaraco.test (>=3.2.0)\", \"jaraco.itertools\", \"func-timeout\", \"pytest-black (>=0.3.7)\", \"pytest-mypy\"]\n\n[metadata]\nlock-version = \"1.1\"\npython-versions = \"^3.6\"\ncontent-hash = \"82aeaac8ba145e13bfaca684ffd3f082a8ec0baade4e1f55cfb0dc115574d69a\"\n\n[metadata.files]\nappdirs = [\n    {file = \"appdirs-1.4.4-py2.py3-none-any.whl\", hash = \"sha256:a841dacd6b99318a741b166adb07e19ee71a274450e68237b4650ca1055ab128\"},\n    {file = \"appdirs-1.4.4.tar.gz\", hash = \"sha256:7d5d0167b2b1ba821647616af46a749d1c653740dd0d2415100fe26e27afdf41\"},\n]\nastroid = [\n    {file = \"astroid-2.4.2-py3-none-any.whl\", hash = \"sha256:bc58d83eb610252fd8de6363e39d4f1d0619c894b0ed24603b881c02e64c7386\"},\n    {file = \"astroid-2.4.2.tar.gz\", hash = \"sha256:2f4078c2a41bf377eea06d71c9d2ba4eb8f6b1af2135bec27bbbb7d8f12bb703\"},\n]\natomicwrites = [\n    {file = \"atomicwrites-1.4.0-py2.py3-none-any.whl\", hash = \"sha256:6d1784dea7c0c8d4a5172b6c620f40b6e4cbfdf96d783691f2e1302a7b88e197\"},\n    {file = \"atomicwrites-1.4.0.tar.gz\", hash = \"sha256:ae70396ad1a434f9c7046fd2dd196fc04b12f9e91ffb859164193be8b6168a7a\"},\n]\nattrs = [\n    {file = \"attrs-20.3.0-py2.py3-none-any.whl\", hash = \"sha256:31b2eced602aa8423c2aea9c76a724617ed67cf9513173fd3a4f03e3a929c7e6\"},\n    {file = \"attrs-20.3.0.tar.gz\", hash = \"sha256:832aa3cde19744e49938b91fea06d69ecb9e649c93ba974535d08ad92164f700\"},\n]\nblack = [\n    {file = \"black-20.8b1.tar.gz\", hash = \"sha256:1c02557aa099101b9d21496f8a914e9ed2222ef70336404eeeac8edba836fbea\"},\n]\nclick = [\n    {file = \"click-7.1.2-py2.py3-none-any.whl\", hash = \"sha256:dacca89f4bfadd5de3d7489b7c8a566eee0d3676333fbb50030263894c38c0dc\"},\n    {file = \"click-7.1.2.tar.gz\", hash = \"sha256:d2b5255c7c6349bc1bd1e59e08cd12acbbd63ce649f2588755783aa94dfb6b1a\"},\n]\ncolorama = [\n    {file = \"colorama-0.4.4-py2.py3-none-any.whl\", hash = \"sha256:9f47eda37229f68eee03b24b9748937c7dc3868f906e8ba69fbcbdd3bc5dc3e2\"},\n    {file = \"colorama-0.4.4.tar.gz\", hash = \"sha256:5941b2b48a20143d2267e95b1c2a7603ce057ee39fd88e7329b0c292aa16869b\"},\n]\ndataclasses = [\n    {file = \"dataclasses-0.8-py3-none-any.whl\", hash = \"sha256:0201d89fa866f68c8ebd9d08ee6ff50c0b255f8ec63a71c16fda7af82bb887bf\"},\n    {file = \"dataclasses-0.8.tar.gz\", hash = \"sha256:8479067f342acf957dc82ec415d355ab5edb7e7646b90dc6e2fd1d96ad084c97\"},\n]\neradicate = [\n    {file = \"eradicate-2.0.0.tar.gz\", hash = \"sha256:27434596f2c5314cc9b31410c93d8f7e8885747399773cd088d3adea647a60c8\"},\n]\nflake8 = [\n    {file = \"flake8-3.8.4-py2.py3-none-any.whl\", hash = \"sha256:749dbbd6bfd0cf1318af27bf97a14e28e5ff548ef8e5b1566ccfb25a11e7c839\"},\n    {file = \"flake8-3.8.4.tar.gz\", hash = \"sha256:aadae8761ec651813c24be05c6f7b4680857ef6afaae4651a4eccaef97ce6c3b\"},\n]\nflake8-black = [\n    {file = \"flake8-black-0.2.1.tar.gz\", hash = \"sha256:f26651bc10db786c03f4093414f7c9ea982ed8a244cec323c984feeffdf4c118\"},\n]\nflake8-bugbear = [\n    {file = \"flake8-bugbear-20.11.1.tar.gz\", hash = \"sha256:528020129fea2dea33a466b9d64ab650aa3e5f9ffc788b70ea4bc6cf18283538\"},\n    {file = \"flake8_bugbear-20.11.1-py36.py37.py38-none-any.whl\", hash = \"sha256:f35b8135ece7a014bc0aee5b5d485334ac30a6da48494998cc1fabf7ec70d703\"},\n]\nflake8-comprehensions = [\n    {file = \"flake8-comprehensions-3.3.1.tar.gz\", hash = \"sha256:e734bf03806bb562886d9bf635d23a65a1a995c251b67d7e007a7b608af9bd22\"},\n    {file = \"flake8_comprehensions-3.3.1-py3-none-any.whl\", hash = \"sha256:6d80dfafda0d85633f88ea5bc7de949485f71f1e28db7af7719563fe5f62dcb1\"},\n]\nflake8-copyright = [\n    {file = \"flake8-copyright-0.2.2.tar.gz\", hash = \"sha256:5c3632dd8c586547b25fff4272282005fdbcba56eeb77b7487564aa636b6e533\"},\n    {file = \"flake8_copyright-0.2.2-py2.py3-none-any.whl\", hash = \"sha256:616a960c9602ad2d0136bf3f12564e253caffe82f151d2982f78a12a42e1faa0\"},\n    {file = \"flake8_copyright-0.2.2-py3-none-any.whl\", hash = \"sha256:dbad92ee5f51398722cd571b6e36cc3651914bf1b286b0e638bba1f4af0b6f5b\"},\n]\nflake8-eradicate = [\n    {file = \"flake8-eradicate-1.0.0.tar.gz\", hash = \"sha256:fe7167226676823d50cf540532302a6f576c5a398c5260692571a05ef72c5f5b\"},\n    {file = \"flake8_eradicate-1.0.0-py3-none-any.whl\", hash = \"sha256:0fc4ab858a18c7ed630621b5345254c8f55be6060ea5c44a25e384d613618d1f\"},\n]\nflake8-isort = [\n    {file = \"flake8-isort-4.0.0.tar.gz\", hash = \"sha256:2b91300f4f1926b396c2c90185844eb1a3d5ec39ea6138832d119da0a208f4d9\"},\n    {file = \"flake8_isort-4.0.0-py2.py3-none-any.whl\", hash = \"sha256:729cd6ef9ba3659512dee337687c05d79c78e1215fdf921ed67e5fe46cce2f3c\"},\n]\nflake8-use-fstring = [\n    {file = \"flake8-use-fstring-1.1.tar.gz\", hash = \"sha256:a0eea849ffe33fb6903c210c243c0f418da86a530e46cb13e64f1bdb045f22dc\"},\n]\nimportlib-metadata = [\n    {file = \"importlib_metadata-3.4.0-py3-none-any.whl\", hash = \"sha256:ace61d5fc652dc280e7b6b4ff732a9c2d40db2c0f92bc6cb74e07b73d53a1771\"},\n    {file = \"importlib_metadata-3.4.0.tar.gz\", hash = \"sha256:fa5daa4477a7414ae34e95942e4dd07f62adf589143c875c133c1e53c4eff38d\"},\n]\niniconfig = [\n    {file = \"iniconfig-1.1.1-py2.py3-none-any.whl\", hash = \"sha256:011e24c64b7f47f6ebd835bb12a743f2fbe9a26d4cecaa7f53bc4f35ee9da8b3\"},\n    {file = \"iniconfig-1.1.1.tar.gz\", hash = \"sha256:bc3af051d7d14b2ee5ef9969666def0cd1a000e121eaea580d4a313df4b37f32\"},\n]\nisort = [\n    {file = \"isort-5.7.0-py3-none-any.whl\", hash = \"sha256:fff4f0c04e1825522ce6949973e83110a6e907750cd92d128b0d14aaaadbffdc\"},\n    {file = \"isort-5.7.0.tar.gz\", hash = \"sha256:c729845434366216d320e936b8ad6f9d681aab72dc7cbc2d51bedc3582f3ad1e\"},\n]\nlazy-object-proxy = [\n    {file = \"lazy-object-proxy-1.4.3.tar.gz\", hash = \"sha256:f3900e8a5de27447acbf900b4750b0ddfd7ec1ea7fbaf11dfa911141bc522af0\"},\n    {file = \"lazy_object_proxy-1.4.3-cp27-cp27m-macosx_10_13_x86_64.whl\", hash = \"sha256:a2238e9d1bb71a56cd710611a1614d1194dc10a175c1e08d75e1a7bcc250d442\"},\n    {file = \"lazy_object_proxy-1.4.3-cp27-cp27m-win32.whl\", hash = \"sha256:efa1909120ce98bbb3777e8b6f92237f5d5c8ea6758efea36a473e1d38f7d3e4\"},\n    {file = \"lazy_object_proxy-1.4.3-cp27-cp27m-win_amd64.whl\", hash = \"sha256:4677f594e474c91da97f489fea5b7daa17b5517190899cf213697e48d3902f5a\"},\n    {file = \"lazy_object_proxy-1.4.3-cp27-cp27mu-manylinux1_x86_64.whl\", hash = \"sha256:0c4b206227a8097f05c4dbdd323c50edf81f15db3b8dc064d08c62d37e1a504d\"},\n    {file = \"lazy_object_proxy-1.4.3-cp34-cp34m-manylinux1_x86_64.whl\", hash = \"sha256:d945239a5639b3ff35b70a88c5f2f491913eb94871780ebfabb2568bd58afc5a\"},\n    {file = \"lazy_object_proxy-1.4.3-cp34-cp34m-win32.whl\", hash = \"sha256:9651375199045a358eb6741df3e02a651e0330be090b3bc79f6d0de31a80ec3e\"},\n    {file = \"lazy_object_proxy-1.4.3-cp34-cp34m-win_amd64.whl\", hash = \"sha256:eba7011090323c1dadf18b3b689845fd96a61ba0a1dfbd7f24b921398affc357\"},\n    {file = \"lazy_object_proxy-1.4.3-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:48dab84ebd4831077b150572aec802f303117c8cc5c871e182447281ebf3ac50\"},\n    {file = \"lazy_object_proxy-1.4.3-cp35-cp35m-win32.whl\", hash = \"sha256:ca0a928a3ddbc5725be2dd1cf895ec0a254798915fb3a36af0964a0a4149e3db\"},\n    {file = \"lazy_object_proxy-1.4.3-cp35-cp35m-win_amd64.whl\", hash = \"sha256:194d092e6f246b906e8f70884e620e459fc54db3259e60cf69a4d66c3fda3449\"},\n    {file = \"lazy_object_proxy-1.4.3-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:97bb5884f6f1cdce0099f86b907aa41c970c3c672ac8b9c8352789e103cf3156\"},\n    {file = \"lazy_object_proxy-1.4.3-cp36-cp36m-win32.whl\", hash = \"sha256:cb2c7c57005a6804ab66f106ceb8482da55f5314b7fcb06551db1edae4ad1531\"},\n    {file = \"lazy_object_proxy-1.4.3-cp36-cp36m-win_amd64.whl\", hash = \"sha256:8d859b89baf8ef7f8bc6b00aa20316483d67f0b1cbf422f5b4dc56701c8f2ffb\"},\n    {file = \"lazy_object_proxy-1.4.3-cp37-cp37m-macosx_10_13_x86_64.whl\", hash = \"sha256:1be7e4c9f96948003609aa6c974ae59830a6baecc5376c25c92d7d697e684c08\"},\n    {file = \"lazy_object_proxy-1.4.3-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:d74bb8693bf9cf75ac3b47a54d716bbb1a92648d5f781fc799347cfc95952383\"},\n    {file = \"lazy_object_proxy-1.4.3-cp37-cp37m-win32.whl\", hash = \"sha256:9b15f3f4c0f35727d3a0fba4b770b3c4ebbb1fa907dbcc046a1d2799f3edd142\"},\n    {file = \"lazy_object_proxy-1.4.3-cp37-cp37m-win_amd64.whl\", hash = \"sha256:9254f4358b9b541e3441b007a0ea0764b9d056afdeafc1a5569eee1cc6c1b9ea\"},\n    {file = \"lazy_object_proxy-1.4.3-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:a6ae12d08c0bf9909ce12385803a543bfe99b95fe01e752536a60af2b7797c62\"},\n    {file = \"lazy_object_proxy-1.4.3-cp38-cp38-win32.whl\", hash = \"sha256:5541cada25cd173702dbd99f8e22434105456314462326f06dba3e180f203dfd\"},\n    {file = \"lazy_object_proxy-1.4.3-cp38-cp38-win_amd64.whl\", hash = \"sha256:59f79fef100b09564bc2df42ea2d8d21a64fdcda64979c0fa3db7bdaabaf6239\"},\n]\nmccabe = [\n    {file = \"mccabe-0.6.1-py2.py3-none-any.whl\", hash = \"sha256:ab8a6258860da4b6677da4bd2fe5dc2c659cff31b3ee4f7f5d64e79735b80d42\"},\n    {file = \"mccabe-0.6.1.tar.gz\", hash = \"sha256:dd8d182285a0fe56bace7f45b5e7d1a6ebcbf524e8f3bd87eb0f125271b8831f\"},\n]\nmypy = [\n    {file = \"mypy-0.800-cp35-cp35m-macosx_10_9_x86_64.whl\", hash = \"sha256:e1c84c65ff6d69fb42958ece5b1255394714e0aac4df5ffe151bc4fe19c7600a\"},\n    {file = \"mypy-0.800-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:947126195bfe4709c360e89b40114c6746ae248f04d379dca6f6ab677aa07641\"},\n    {file = \"mypy-0.800-cp35-cp35m-manylinux2010_x86_64.whl\", hash = \"sha256:b95068a3ce3b50332c40e31a955653be245666a4bc7819d3c8898aa9fb9ea496\"},\n    {file = \"mypy-0.800-cp35-cp35m-win_amd64.whl\", hash = \"sha256:ca7ad5aed210841f1e77f5f2f7d725b62c78fa77519312042c719ed2ab937876\"},\n    {file = \"mypy-0.800-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:e32b7b282c4ed4e378bba8b8dfa08e1cfa6f6574067ef22f86bee5b1039de0c9\"},\n    {file = \"mypy-0.800-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:e497a544391f733eca922fdcb326d19e894789cd4ff61d48b4b195776476c5cf\"},\n    {file = \"mypy-0.800-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:5615785d3e2f4f03ab7697983d82c4b98af5c321614f51b8f1034eb9ebe48363\"},\n    {file = \"mypy-0.800-cp36-cp36m-win_amd64.whl\", hash = \"sha256:2b216eacca0ec0ee124af9429bfd858d5619a0725ee5f88057e6e076f9eb1a7b\"},\n    {file = \"mypy-0.800-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:e3b8432f8df19e3c11235c4563a7250666dc9aa7cdda58d21b4177b20256ca9f\"},\n    {file = \"mypy-0.800-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:d16c54b0dffb861dc6318a8730952265876d90c5101085a4bc56913e8521ba19\"},\n    {file = \"mypy-0.800-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:0d2fc8beb99cd88f2d7e20d69131353053fbecea17904ee6f0348759302c52fa\"},\n    {file = \"mypy-0.800-cp37-cp37m-win_amd64.whl\", hash = \"sha256:aa9d4901f3ee1a986a3a79fe079ffbf7f999478c281376f48faa31daaa814e86\"},\n    {file = \"mypy-0.800-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:319ee5c248a7c3f94477f92a729b7ab06bf8a6d04447ef3aa8c9ba2aa47c6dcf\"},\n    {file = \"mypy-0.800-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:74f5aa50d0866bc6fb8e213441c41e466c86678c800700b87b012ed11c0a13e0\"},\n    {file = \"mypy-0.800-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:a301da58d566aca05f8f449403c710c50a9860782148332322decf73a603280b\"},\n    {file = \"mypy-0.800-cp38-cp38-win_amd64.whl\", hash = \"sha256:b9150db14a48a8fa114189bfe49baccdff89da8c6639c2717750c7ae62316738\"},\n    {file = \"mypy-0.800-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:f5fdf935a46aa20aa937f2478480ebf4be9186e98e49cc3843af9a5795a49a25\"},\n    {file = \"mypy-0.800-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:6f8425fecd2ba6007e526209bb985ce7f49ed0d2ac1cc1a44f243380a06a84fb\"},\n    {file = \"mypy-0.800-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:5ff616787122774f510caeb7b980542a7cc2222be3f00837a304ea85cd56e488\"},\n    {file = \"mypy-0.800-cp39-cp39-win_amd64.whl\", hash = \"sha256:90b6f46dc2181d74f80617deca611925d7e63007cf416397358aa42efb593e07\"},\n    {file = \"mypy-0.800-py3-none-any.whl\", hash = \"sha256:3e0c159a7853e3521e3f582adb1f3eac66d0b0639d434278e2867af3a8c62653\"},\n    {file = \"mypy-0.800.tar.gz\", hash = \"sha256:e0202e37756ed09daf4b0ba64ad2c245d357659e014c3f51d8cd0681ba66940a\"},\n]\nmypy-extensions = [\n    {file = \"mypy_extensions-0.4.3-py2.py3-none-any.whl\", hash = \"sha256:090fedd75945a69ae91ce1303b5824f428daf5a028d2f6ab8a299250a846f15d\"},\n    {file = \"mypy_extensions-0.4.3.tar.gz\", hash = \"sha256:2d82818f5bb3e369420cb3c4060a7970edba416647068eb4c5343488a6c604a8\"},\n]\npackaging = [\n    {file = \"packaging-20.9-py2.py3-none-any.whl\", hash = \"sha256:67714da7f7bc052e064859c05c595155bd1ee9f69f76557e21f051443c20947a\"},\n    {file = \"packaging-20.9.tar.gz\", hash = \"sha256:5b327ac1320dc863dca72f4514ecc086f31186744b84a230374cc1fd776feae5\"},\n]\npathspec = [\n    {file = \"pathspec-0.8.1-py2.py3-none-any.whl\", hash = \"sha256:aa0cb481c4041bf52ffa7b0d8fa6cd3e88a2ca4879c533c9153882ee2556790d\"},\n    {file = \"pathspec-0.8.1.tar.gz\", hash = \"sha256:86379d6b86d75816baba717e64b1a3a3469deb93bb76d613c9ce79edc5cb68fd\"},\n]\npluggy = [\n    {file = \"pluggy-0.13.1-py2.py3-none-any.whl\", hash = \"sha256:966c145cd83c96502c3c3868f50408687b38434af77734af1e9ca461a4081d2d\"},\n    {file = \"pluggy-0.13.1.tar.gz\", hash = \"sha256:15b2acde666561e1298d71b523007ed7364de07029219b604cf808bfa1c765b0\"},\n]\npy = [\n    {file = \"py-1.10.0-py2.py3-none-any.whl\", hash = \"sha256:3b80836aa6d1feeaa108e046da6423ab8f6ceda6468545ae8d02d9d58d18818a\"},\n    {file = \"py-1.10.0.tar.gz\", hash = \"sha256:21b81bda15b66ef5e1a777a21c4dcd9c20ad3efd0b3f817e7a809035269e1bd3\"},\n]\npycodestyle = [\n    {file = \"pycodestyle-2.6.0-py2.py3-none-any.whl\", hash = \"sha256:2295e7b2f6b5bd100585ebcb1f616591b652db8a741695b3d8f5d28bdc934367\"},\n    {file = \"pycodestyle-2.6.0.tar.gz\", hash = \"sha256:c58a7d2815e0e8d7972bf1803331fb0152f867bd89adf8a01dfd55085434192e\"},\n]\npyflakes = [\n    {file = \"pyflakes-2.2.0-py2.py3-none-any.whl\", hash = \"sha256:0d94e0e05a19e57a99444b6ddcf9a6eb2e5c68d3ca1e98e90707af8152c90a92\"},\n    {file = \"pyflakes-2.2.0.tar.gz\", hash = \"sha256:35b2d75ee967ea93b55750aa9edbbf72813e06a66ba54438df2cfac9e3c27fc8\"},\n]\npylint = [\n    {file = \"pylint-2.6.2-py3-none-any.whl\", hash = \"sha256:e71c2e9614a4f06e36498f310027942b0f4f2fde20aebb01655b31edc63b9eaf\"},\n    {file = \"pylint-2.6.2.tar.gz\", hash = \"sha256:718b74786ea7ed07aa0c58bf572154d4679f960d26e9641cc1de204a30b87fc9\"},\n]\npyparsing = [\n    {file = \"pyparsing-2.4.7-py2.py3-none-any.whl\", hash = \"sha256:ef9d7589ef3c200abe66653d3f1ab1033c3c419ae9b9bdb1240a85b024efc88b\"},\n    {file = \"pyparsing-2.4.7.tar.gz\", hash = \"sha256:c203ec8783bf771a155b207279b9bccb8dea02d8f0c9e5f8ead507bc3246ecc1\"},\n]\npytest = [\n    {file = \"pytest-6.2.2-py3-none-any.whl\", hash = \"sha256:b574b57423e818210672e07ca1fa90aaf194a4f63f3ab909a2c67ebb22913839\"},\n    {file = \"pytest-6.2.2.tar.gz\", hash = \"sha256:9d1edf9e7d0b84d72ea3dbcdfd22b35fb543a5e8f2a60092dd578936bf63d7f9\"},\n]\nregex = [\n    {file = \"regex-2020.11.13-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:8b882a78c320478b12ff024e81dc7d43c1462aa4a3341c754ee65d857a521f85\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:a63f1a07932c9686d2d416fb295ec2c01ab246e89b4d58e5fa468089cab44b70\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:6e4b08c6f8daca7d8f07c8d24e4331ae7953333dbd09c648ed6ebd24db5a10ee\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-manylinux2010_i686.whl\", hash = \"sha256:bba349276b126947b014e50ab3316c027cac1495992f10e5682dc677b3dfa0c5\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-manylinux2010_x86_64.whl\", hash = \"sha256:56e01daca75eae420bce184edd8bb341c8eebb19dd3bce7266332258f9fb9dd7\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:6a8ce43923c518c24a2579fda49f093f1397dad5d18346211e46f134fc624e31\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-manylinux2014_i686.whl\", hash = \"sha256:1ab79fcb02b930de09c76d024d279686ec5d532eb814fd0ed1e0051eb8bd2daa\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-manylinux2014_x86_64.whl\", hash = \"sha256:9801c4c1d9ae6a70aeb2128e5b4b68c45d4f0af0d1535500884d644fa9b768c6\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-win32.whl\", hash = \"sha256:49cae022fa13f09be91b2c880e58e14b6da5d10639ed45ca69b85faf039f7a4e\"},\n    {file = \"regex-2020.11.13-cp36-cp36m-win_amd64.whl\", hash = \"sha256:749078d1eb89484db5f34b4012092ad14b327944ee7f1c4f74d6279a6e4d1884\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:b2f4007bff007c96a173e24dcda236e5e83bde4358a557f9ccf5e014439eae4b\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:38c8fd190db64f513fe4e1baa59fed086ae71fa45083b6936b52d34df8f86a88\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:5862975b45d451b6db51c2e654990c1820523a5b07100fc6903e9c86575202a0\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-manylinux2010_i686.whl\", hash = \"sha256:262c6825b309e6485ec2493ffc7e62a13cf13fb2a8b6d212f72bd53ad34118f1\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-manylinux2010_x86_64.whl\", hash = \"sha256:bafb01b4688833e099d79e7efd23f99172f501a15c44f21ea2118681473fdba0\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:e32f5f3d1b1c663af7f9c4c1e72e6ffe9a78c03a31e149259f531e0fed826512\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-manylinux2014_i686.whl\", hash = \"sha256:3bddc701bdd1efa0d5264d2649588cbfda549b2899dc8d50417e47a82e1387ba\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-manylinux2014_x86_64.whl\", hash = \"sha256:02951b7dacb123d8ea6da44fe45ddd084aa6777d4b2454fa0da61d569c6fa538\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-win32.whl\", hash = \"sha256:0d08e71e70c0237883d0bef12cad5145b84c3705e9c6a588b2a9c7080e5af2a4\"},\n    {file = \"regex-2020.11.13-cp37-cp37m-win_amd64.whl\", hash = \"sha256:1fa7ee9c2a0e30405e21031d07d7ba8617bc590d391adfc2b7f1e8b99f46f444\"},\n    {file = \"regex-2020.11.13-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:baf378ba6151f6e272824b86a774326f692bc2ef4cc5ce8d5bc76e38c813a55f\"},\n    {file = \"regex-2020.11.13-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:e3faaf10a0d1e8e23a9b51d1900b72e1635c2d5b0e1bea1c18022486a8e2e52d\"},\n    {file = \"regex-2020.11.13-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:2a11a3e90bd9901d70a5b31d7dd85114755a581a5da3fc996abfefa48aee78af\"},\n    {file = \"regex-2020.11.13-cp38-cp38-manylinux2010_i686.whl\", hash = \"sha256:d1ebb090a426db66dd80df8ca85adc4abfcbad8a7c2e9a5ec7513ede522e0a8f\"},\n    {file = \"regex-2020.11.13-cp38-cp38-manylinux2010_x86_64.whl\", hash = \"sha256:b2b1a5ddae3677d89b686e5c625fc5547c6e492bd755b520de5332773a8af06b\"},\n    {file = \"regex-2020.11.13-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:2c99e97d388cd0a8d30f7c514d67887d8021541b875baf09791a3baad48bb4f8\"},\n    {file = \"regex-2020.11.13-cp38-cp38-manylinux2014_i686.whl\", hash = \"sha256:c084582d4215593f2f1d28b65d2a2f3aceff8342aa85afd7be23a9cad74a0de5\"},\n    {file = \"regex-2020.11.13-cp38-cp38-manylinux2014_x86_64.whl\", hash = \"sha256:a3d748383762e56337c39ab35c6ed4deb88df5326f97a38946ddd19028ecce6b\"},\n    {file = \"regex-2020.11.13-cp38-cp38-win32.whl\", hash = \"sha256:7913bd25f4ab274ba37bc97ad0e21c31004224ccb02765ad984eef43e04acc6c\"},\n    {file = \"regex-2020.11.13-cp38-cp38-win_amd64.whl\", hash = \"sha256:6c54ce4b5d61a7129bad5c5dc279e222afd00e721bf92f9ef09e4fae28755683\"},\n    {file = \"regex-2020.11.13-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:1862a9d9194fae76a7aaf0150d5f2a8ec1da89e8b55890b1786b8f88a0f619dc\"},\n    {file = \"regex-2020.11.13-cp39-cp39-manylinux1_i686.whl\", hash = \"sha256:4902e6aa086cbb224241adbc2f06235927d5cdacffb2425c73e6570e8d862364\"},\n    {file = \"regex-2020.11.13-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:7a25fcbeae08f96a754b45bdc050e1fb94b95cab046bf56b016c25e9ab127b3e\"},\n    {file = \"regex-2020.11.13-cp39-cp39-manylinux2010_i686.whl\", hash = \"sha256:d2d8ce12b7c12c87e41123997ebaf1a5767a5be3ec545f64675388970f415e2e\"},\n    {file = \"regex-2020.11.13-cp39-cp39-manylinux2010_x86_64.whl\", hash = \"sha256:f7d29a6fc4760300f86ae329e3b6ca28ea9c20823df123a2ea8693e967b29917\"},\n    {file = \"regex-2020.11.13-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:717881211f46de3ab130b58ec0908267961fadc06e44f974466d1887f865bd5b\"},\n    {file = \"regex-2020.11.13-cp39-cp39-manylinux2014_i686.whl\", hash = \"sha256:3128e30d83f2e70b0bed9b2a34e92707d0877e460b402faca908c6667092ada9\"},\n    {file = \"regex-2020.11.13-cp39-cp39-manylinux2014_x86_64.whl\", hash = \"sha256:8f6a2229e8ad946e36815f2a03386bb8353d4bde368fdf8ca5f0cb97264d3b5c\"},\n    {file = \"regex-2020.11.13-cp39-cp39-win32.whl\", hash = \"sha256:f8f295db00ef5f8bae530fc39af0b40486ca6068733fb860b42115052206466f\"},\n    {file = \"regex-2020.11.13-cp39-cp39-win_amd64.whl\", hash = \"sha256:a15f64ae3a027b64496a71ab1f722355e570c3fac5ba2801cafce846bf5af01d\"},\n    {file = \"regex-2020.11.13.tar.gz\", hash = \"sha256:83d6b356e116ca119db8e7c6fc2983289d87b27b3fac238cfe5dca529d884562\"},\n]\nsix = [\n    {file = \"six-1.15.0-py2.py3-none-any.whl\", hash = \"sha256:8b74bedcbbbaca38ff6d7491d76f2b06b3592611af620f8426e82dddb04a5ced\"},\n    {file = \"six-1.15.0.tar.gz\", hash = \"sha256:30639c035cdb23534cd4aa2dd52c3bf48f06e5f4a941509c8bafd8ce11080259\"},\n]\ntestfixtures = [\n    {file = \"testfixtures-6.17.1-py2.py3-none-any.whl\", hash = \"sha256:9ed31e83f59619e2fa17df053b241e16e0608f4580f7b5a9333a0c9bdcc99137\"},\n    {file = \"testfixtures-6.17.1.tar.gz\", hash = \"sha256:5ec3a0dd6f71cc4c304fbc024a10cc293d3e0b852c868014b9f233203e149bda\"},\n]\ntoml = [\n    {file = \"toml-0.10.2-py2.py3-none-any.whl\", hash = \"sha256:806143ae5bfb6a3c6e736a764057db0e6a0e05e338b5630894a5f779cabb4f9b\"},\n    {file = \"toml-0.10.2.tar.gz\", hash = \"sha256:b3bda1d108d5dd99f4a20d24d9c348e91c4db7ab1b749200bded2f839ccbe68f\"},\n]\ntyped-ast = [\n    {file = \"typed_ast-1.4.2-cp35-cp35m-manylinux1_i686.whl\", hash = \"sha256:7703620125e4fb79b64aa52427ec192822e9f45d37d4b6625ab37ef403e1df70\"},\n    {file = \"typed_ast-1.4.2-cp35-cp35m-manylinux1_x86_64.whl\", hash = \"sha256:c9aadc4924d4b5799112837b226160428524a9a45f830e0d0f184b19e4090487\"},\n    {file = \"typed_ast-1.4.2-cp35-cp35m-manylinux2014_aarch64.whl\", hash = \"sha256:9ec45db0c766f196ae629e509f059ff05fc3148f9ffd28f3cfe75d4afb485412\"},\n    {file = \"typed_ast-1.4.2-cp35-cp35m-win32.whl\", hash = \"sha256:85f95aa97a35bdb2f2f7d10ec5bbdac0aeb9dafdaf88e17492da0504de2e6400\"},\n    {file = \"typed_ast-1.4.2-cp35-cp35m-win_amd64.whl\", hash = \"sha256:9044ef2df88d7f33692ae3f18d3be63dec69c4fb1b5a4a9ac950f9b4ba571606\"},\n    {file = \"typed_ast-1.4.2-cp36-cp36m-macosx_10_9_x86_64.whl\", hash = \"sha256:c1c876fd795b36126f773db9cbb393f19808edd2637e00fd6caba0e25f2c7b64\"},\n    {file = \"typed_ast-1.4.2-cp36-cp36m-manylinux1_i686.whl\", hash = \"sha256:5dcfc2e264bd8a1db8b11a892bd1647154ce03eeba94b461effe68790d8b8e07\"},\n    {file = \"typed_ast-1.4.2-cp36-cp36m-manylinux1_x86_64.whl\", hash = \"sha256:8db0e856712f79c45956da0c9a40ca4246abc3485ae0d7ecc86a20f5e4c09abc\"},\n    {file = \"typed_ast-1.4.2-cp36-cp36m-manylinux2014_aarch64.whl\", hash = \"sha256:d003156bb6a59cda9050e983441b7fa2487f7800d76bdc065566b7d728b4581a\"},\n    {file = \"typed_ast-1.4.2-cp36-cp36m-win32.whl\", hash = \"sha256:4c790331247081ea7c632a76d5b2a265e6d325ecd3179d06e9cf8d46d90dd151\"},\n    {file = \"typed_ast-1.4.2-cp36-cp36m-win_amd64.whl\", hash = \"sha256:d175297e9533d8d37437abc14e8a83cbc68af93cc9c1c59c2c292ec59a0697a3\"},\n    {file = \"typed_ast-1.4.2-cp37-cp37m-macosx_10_9_x86_64.whl\", hash = \"sha256:cf54cfa843f297991b7388c281cb3855d911137223c6b6d2dd82a47ae5125a41\"},\n    {file = \"typed_ast-1.4.2-cp37-cp37m-manylinux1_i686.whl\", hash = \"sha256:b4fcdcfa302538f70929eb7b392f536a237cbe2ed9cba88e3bf5027b39f5f77f\"},\n    {file = \"typed_ast-1.4.2-cp37-cp37m-manylinux1_x86_64.whl\", hash = \"sha256:987f15737aba2ab5f3928c617ccf1ce412e2e321c77ab16ca5a293e7bbffd581\"},\n    {file = \"typed_ast-1.4.2-cp37-cp37m-manylinux2014_aarch64.whl\", hash = \"sha256:37f48d46d733d57cc70fd5f30572d11ab8ed92da6e6b28e024e4a3edfb456e37\"},\n    {file = \"typed_ast-1.4.2-cp37-cp37m-win32.whl\", hash = \"sha256:36d829b31ab67d6fcb30e185ec996e1f72b892255a745d3a82138c97d21ed1cd\"},\n    {file = \"typed_ast-1.4.2-cp37-cp37m-win_amd64.whl\", hash = \"sha256:8368f83e93c7156ccd40e49a783a6a6850ca25b556c0fa0240ed0f659d2fe496\"},\n    {file = \"typed_ast-1.4.2-cp38-cp38-macosx_10_9_x86_64.whl\", hash = \"sha256:963c80b583b0661918718b095e02303d8078950b26cc00b5e5ea9ababe0de1fc\"},\n    {file = \"typed_ast-1.4.2-cp38-cp38-manylinux1_i686.whl\", hash = \"sha256:e683e409e5c45d5c9082dc1daf13f6374300806240719f95dc783d1fc942af10\"},\n    {file = \"typed_ast-1.4.2-cp38-cp38-manylinux1_x86_64.whl\", hash = \"sha256:84aa6223d71012c68d577c83f4e7db50d11d6b1399a9c779046d75e24bed74ea\"},\n    {file = \"typed_ast-1.4.2-cp38-cp38-manylinux2014_aarch64.whl\", hash = \"sha256:a38878a223bdd37c9709d07cd357bb79f4c760b29210e14ad0fb395294583787\"},\n    {file = \"typed_ast-1.4.2-cp38-cp38-win32.whl\", hash = \"sha256:a2c927c49f2029291fbabd673d51a2180038f8cd5a5b2f290f78c4516be48be2\"},\n    {file = \"typed_ast-1.4.2-cp38-cp38-win_amd64.whl\", hash = \"sha256:c0c74e5579af4b977c8b932f40a5464764b2f86681327410aa028a22d2f54937\"},\n    {file = \"typed_ast-1.4.2-cp39-cp39-macosx_10_9_x86_64.whl\", hash = \"sha256:07d49388d5bf7e863f7fa2f124b1b1d89d8aa0e2f7812faff0a5658c01c59aa1\"},\n    {file = \"typed_ast-1.4.2-cp39-cp39-manylinux1_i686.whl\", hash = \"sha256:240296b27397e4e37874abb1df2a608a92df85cf3e2a04d0d4d61055c8305ba6\"},\n    {file = \"typed_ast-1.4.2-cp39-cp39-manylinux1_x86_64.whl\", hash = \"sha256:d746a437cdbca200622385305aedd9aef68e8a645e385cc483bdc5e488f07166\"},\n    {file = \"typed_ast-1.4.2-cp39-cp39-manylinux2014_aarch64.whl\", hash = \"sha256:14bf1522cdee369e8f5581238edac09150c765ec1cb33615855889cf33dcb92d\"},\n    {file = \"typed_ast-1.4.2-cp39-cp39-win32.whl\", hash = \"sha256:cc7b98bf58167b7f2db91a4327da24fb93368838eb84a44c472283778fc2446b\"},\n    {file = \"typed_ast-1.4.2-cp39-cp39-win_amd64.whl\", hash = \"sha256:7147e2a76c75f0f64c4319886e7639e490fee87c9d25cb1d4faef1d8cf83a440\"},\n    {file = \"typed_ast-1.4.2.tar.gz\", hash = \"sha256:9fc0b3cb5d1720e7141d103cf4819aea239f7d136acf9ee4a69b047b7986175a\"},\n]\ntyping-extensions = [\n    {file = \"typing_extensions-3.7.4.3-py2-none-any.whl\", hash = \"sha256:dafc7639cde7f1b6e1acc0f457842a83e722ccca8eef5270af2d74792619a89f\"},\n    {file = \"typing_extensions-3.7.4.3-py3-none-any.whl\", hash = \"sha256:7cb407020f00f7bfc3cb3e7881628838e69d8f3fcab2f64742a5e76b2f841918\"},\n    {file = \"typing_extensions-3.7.4.3.tar.gz\", hash = \"sha256:99d4073b617d30288f569d3f13d2bd7548c3a7e4c8de87db09a9d29bb3a4a60c\"},\n]\nvulture = [\n    {file = \"vulture-2.3-py2.py3-none-any.whl\", hash = \"sha256:f39de5e6f1df1f70c3b50da54f1c8d494159e9ca3d01a9b89eac929600591703\"},\n    {file = \"vulture-2.3.tar.gz\", hash = \"sha256:03d5a62bcbe9ceb9a9b0575f42d71a2d414070229f2e6f95fa6e7c71aaaed967\"},\n]\nwrapt = [\n    {file = \"wrapt-1.12.1.tar.gz\", hash = \"sha256:b62ffa81fb85f4332a4f609cab4ac40709470da05643a082ec1eb88e6d9b97d7\"},\n]\nzipp = [\n    {file = \"zipp-3.4.0-py3-none-any.whl\", hash = \"sha256:102c24ef8f171fd729d46599845e95c7ab894a4cf45f5de11a44cc7444fb1108\"},\n    {file = \"zipp-3.4.0.tar.gz\", hash = \"sha256:ed5eee1974372595f9e416cc7bbeeb12335201d8081ca8a0743c954d4446e5cb\"},\n]\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.3154296875,
          "content": "[tool.isort]\nprofile = \"black\"\nmulti_line_output = 3\n\n[tool.pylint.messages_control]\ndisable = [\n    \"fixme\",\n    \"missing-class-docstring\",\n    \"missing-function-docstring\",\n    \"missing-module-docstring\",\n    \"no-self-use\",\n    \"too-many-arguments\",\n    \"too-many-branches\",\n    \"too-many-instance-attributes\",\n    \"too-many-public-methods\",\n    \"too-many-return-statements\",\n]\n\n[tool.pylint.format]\nmax-line-length = \"88\"\n\n[tool.poetry]\nname = \"pathpicker\"\nversion = \"0.9.5\"\ndescription = \"PathPicker accepts a wide range of input -- output from git commands, grep results, searches -- pretty much anything. After parsing the input, PathPicker presents you with a nice UI to select which files you're interested in. After that you can open them in your favorite editor or execute arbitrary commands.\"\nauthors = [\"Peter Cottle <pcottle@fb.com>\"]\nlicense = \"MIT\"\n\n[tool.poetry.dependencies]\npython = \"^3.6\"\n\n[tool.poetry.dev-dependencies]\nblack = \"^20.8b1\"\nflake8 = \"^3.8.4\"\nflake8-black = \"^0.2.1\"\nflake8-bugbear = \"^20.11.1\"\nflake8-comprehensions = \"^3.3.1\"\nflake8-copyright = \"^0.2.2\"\nflake8-eradicate = \"^1.0.0\"\nflake8-isort = \"^4.0.0\"\nflake8-use-fstring = \"^1.1\"\nisort = \"^5.7.0\"\nmypy = \"^0.800\"\npylint = \"^2.6.2\"\npytest = \"^6.2.2\"\nvulture = \"^2.3\"\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}