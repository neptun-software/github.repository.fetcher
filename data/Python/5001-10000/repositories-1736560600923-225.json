{
  "metadata": {
    "timestamp": 1736560600923,
    "page": 225,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kellyjonbrazil/jc",
      "stars": 7995,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0771484375,
          "content": "__pycache__\n*.pyc\ndist/\nbuild/\n*.egg-info/\n.github/\n.vscode/\n_config.yml\n.venv\n"
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 37.248046875,
          "content": "jc changelog\n\n20241125 v1.25.4\n- Add `ipconfig` command parser (`ipconfig` for Windows)\n- Add `pacman` command parser\n- Add `wg show` command parser\n- Enhance `ethtool` parser to support `link_partner_advertised_link_modes`\n- Enhance `ifconfig` parser to support `utun` interfaces with assigned IPv4 addresses on macOS\n- Enhance `nsd-control` parser with additional state fields\n- Enhance `ping-s` streaming parser to support error replies\n- Fix `bluetoothctl` parser when extra attributes like `manufacturer` and `version` exist\n- Fix `df` parser to correctly output binary vs. decimal size outputs\n- Fix `ip-address` parser for Python 3.13 changes to IPv4 mapped IPv6 addresses\n- Fix `iw-scan` parser to output more fields (still beta quality)\n- Fix `mount` parser for cases where there are spaces in the filesystem name\n- Fix `netstat` parser for cases where there are spaces in the program name\n- Fix `pkg-index-deb`, `apt-cache-show`, and  `rpm-qi` parsers to correctly convert contiguous packages with the same name\n- Fix `traceroute` parser to support extreme IPv6 cases\n- Fix `uptime` parser for data that contains `user` instead of `users`\n- Fix `yaml` parser to support values that start with an equal sign\n- Enhance `jc.utils.convert_size_to_int()` to add `posix_mode` and `decimal_bias` parameters\n- Enhance cli to coerce any non-JSON-serializable objects to a string\n\n20240609 v1.25.3\n- Enhance `bluetoothctl` parser with added `battery_percentage` field\n- Enhance `git-log` standard and streaming parsers with added `lines_changed` field under `file_stats`\n- Fix `lspci` parser to handle `physlot` fields with a range value\n- Fix `pci-ids` parser to correctly handle multiple subdevices\n- Fix `pip-show` parser to handle multi-line fields with a beginning blank line\n- Fix `ss` parser to correctly handle the `Recv-Q` field being too close to the `Status` field\n- Fix `top` parsers to quiet uptime info parsing\n- Fix `traceroute` parser to correctly handle hops with multiple IPs\n- Fix `zpool-status` parser for config items lacking data values\n- Optimize some tests by removing timezone settings and using quiet=True\n- Documentation updates\n\n20240323 v1.25.2\n- Add `apt-cache-show` command parser\n- Add `apt-get-sqq` command parser\n- Add `ethtool` command parser\n- Add `needrestart` command parser\n- Enhance `df` parser to add human readable output support. Note: the `size`\n  field has been changed to an integer and all size values have been normalized\n  to bytes.\n- Enhance `free` parser to add human readable output support. All size values\n  have been normalizd to bytes.\n- Enhance `iptables` parser to handle -x output\n- Enhance `/proc/pid/stat` parser to support \"Idle\" state\n- Enhance `rpm_qi` and `pkg_index_deb` parsers to split list fields into arrays\n- Fix `iwconfig` parser to handle more special characters in the SSID name\n- Fix `xrandr` parser to ignore extra horizontal and vertical stats lines\n- Add aarch64 binaries to Releases for macOS and Linux\n- Documentation and doc build updates\n\n20240212 v1.25.1\n- Fix for crash when optional libraries are not installed (e.g. xmltodict)\n- Fix for `ini` parser crashing with some keys with no values\n- Fix `xrandr` parser to extract more EDID data\n- Enhance `uptime` parser to support output with no user information\n- Enhance `--quiet` CLI option to cover more warning messages\n- Add tests for missing optional libraries\n- Documentation updates\n\n20240204 v1.25.0\n- Add `--slurp` functionality to wrap output from multiple lines into a single array.\n  Note, this only works with single-line input parsers. (e.g. `date`, `ip-address`, `url`, etc.)\n  Streaming parsers are not supported. Use `jc -hhh` to find parsers compatible with the slurp option.\n- Enhance `/proc` file magic syntax to allow slurping when multiple files are selected\n  and to include the `_file` metadata field in the data\n- Enhance `--meta-out` functionality to include a list of the input data when using `--slurp`\n  or `/proc` file magic syntax. For slurpable parsers, this is a list of string inputs in order.\n  For `/proc` file magic syntax, this is a list of `/proc` filenames in order. This can help with\n  identifying which input matches to which output when using `--slurp` or when converting multiple\n  files via `/proc` file magic syntax.\n- Add `curl-head` command parser for `curl --head` or `curl -I` with verbose support\n- Add `efibootmgr` command parser\n- Add `http-headers` parser for plain HTTP header output\n- Add `kv-dup` parser for Key/Value files with duplicate keys\n- Add `path` string parser to parse posix path\n- Add `path-list` string parser to parse path list strings found in env variables\n- Add source link to online parser documentation\n- Add snap package build scripts\n- Add `remove_quotes` function to `utils.py`\n- Add `normalize_key` function to `utils.py`\n- Add `line_slice` function to `utils.py`\n- Add `get_parser` function to `lib.py`\n- Enhance `nsd-control` parser to support more zone information\n- Enhance `ping` and `ping-s` parsers to support the `-I` command option\n- Enhance `proc-net-tcp` parser to add opposite endian support for architectures\n  like the s390x\n- Enhance `url` parser to add `parent`, `filename`, `stem`, and `extension` fields\n- Fix `ini` and `ini-dup` parsers to consistently handle null values as empty strings\n- Fix line slicer to not skip blank lines\n- Refactor parser aliases for `kv`, `pkg_index_deb`, `lsb_release`, and `os-release`\n- Update copyright date\n\n20231216 v1.24.0\n- Add `debconf-show` command parser\n- Add `iftop` command parser\n- Add `pkg-index-apk` parser for Alpine Linux Package Index files\n- Add `pkg-index-deb` parser for Debian/Ubuntu Package Index files\n- Add `proc-cmdline` parser for `/proc/cmdline` file\n- Add `swapon` command parser\n- Add `tune2fs` command parser\n- Remove `iso-datetime` parser deprecated since v1.22.1. (use `datetime-iso` instead)\n- Update timezone change in Github Actions for node v16 requirement\n- Add Python 3.12 tests to Github Actions\n- Refactor `acpi` command parser for code cleanup\n- Refactor vendored libraries to remove Python 2 support\n- Fix `iptables` parser for cases where the `target` field is blank in a rule\n- Fix `vmstat` parsers for some cases where wide output is used\n- Fix `mount` parser for cases with spaces in the mount point name\n- Fix `xrandr` parser for infinite loop issues\n\n20231023 v1.23.6\n- Fix XML parser for xmltodict library versions < 0.13.0\n- Fix `who` command parser for cases when the from field contains spaces\n\n20231021 v1.23.5\n- Add `host` command parser\n- Add `nsd-control` command parser\n- Add `lsb_release` command parser\n- Add `/etc/os-release` file parser\n- Enhance `env` command parser to support multi-line values\n- Enhance `ping` and `ping-s` parsers to add error and corrupted support\n- Enhance `xml` parser to include comments in the JSON output\n- Fix `pidstat` command parser when using `-T ALL`\n- Fix `x509-cert` parser to allow negative serial numbers\n- Fix `x509-cert` parser for cases when bitstrings are larger than standard\n- Fix `xrandr` command parser for associated device issues\n- Fix error when pygments library is not installed\n\n20230730 v1.23.4\n- Add `/etc/resolve.conf` file parser\n- Add `/proc/net/tcp` and `/proc/net/tcp6` file parser\n- Add `find` command parser\n- Add `ip route` command parser\n- Fix `certbot` command parser to be more robust with different line endings\n\n20230621 v1.23.3\n- Add `lsattr` command parser\n- Add `srt` file parser\n- Add `veracrypt` command parser\n- Add X509 Certificate Request file parser\n- Enhance X509 Certificate parser to allow non-compliant email addresses with a warning\n- Enhance `dig` command parser to support the `+nsid` option\n- Enhance `last` and `lastb` command parser to support the `-x` option\n- Enhance `route` command parser to add Windows support\n- Enhnace `netstat` command parser to add Windows support\n- Enhance `ss` command parser to support extended options\n- Enhance the compatibility warning message\n- Fix `bluetoothctl` command parser for some mouse devices\n- Fix `ping` command parsers for output with missing hostname\n- Fix `stat` command parser for older versions that may not contain all fields\n- Fix deprecated option in `setup.cfg`\n\n20230429 v1.23.2\n- Add `bluetoothctl` command parser\n- Add `certbot` command parser for `certificates` and `show_account` options\n- Fix `acpi` command parser for \"Not charging\" battery status lines\n- Fix `iwconfig` command parser for SSIDs with dashes in the name\n- Fix `crontab` command parsers for incorrect variable parsing in some cases\n- Fix `git-log` and `git-log-s` command parsers for incorrect insertion/deletion parsing\n- Fix `ufw-appinfo` command parser for parsing errors on multiline description fields\n- Fix pytest warnings\n\n20230323 v1.23.1\n- Fix `zpool-status` command parser for lines that start with tab\n- Fix `timedatectl` command parser when RTC set to local\n- Fix to ensure `py.typed` file is included in the package wheel\n- Fix `lsusb` command parser to support CDC MBIM and CDC MBIM Extended fields\n- Add support for the `timesync-status` for the `timedatectl` command parser\n- Fix to ignore non-parser-plugins in the parser plugin directory\n\n20230227 v1.23.0\n- Add input slicing as a `jc` command-line option\n- Add `ssh` configuration file parser\n- Add `ver` Version string parser\n- Add `zpool iostat` command parser\n- Add `zpool status` command parser\n- Fix `acpi` command parser for \"will never fully discharge\" battery state\n- Fix `crontab` and `crontab-u` command and file parsers for cases where only\n  shortcut schedule items exist\n- Fix `ifconfig` command parser for older-style linux output\n- Fix `xrandr` command parser for proper `is_current` output\n- Fix `xrandr` command parser for infinite loop with some device configurations\n- Add `reflection` key to `xrandr` parser schema\n- Add display model info from EDID to `xrandr` parser\n- Add `MPX-specific VMA` support for VM Flags in `/proc/<pid>/smaps` parser\n\n20230111 v1.22.5\n- Add TOML file parser\n- Add INI with duplicate key support file parser\n- Add AIX support for the `arp` command parser\n- Add AIX support for the `mount` command parser\n- Fix `lsusb` command parser when extra hub port status information is output\n- Refactor `lsusb` command parser for more code reuse\n- Fix INI file parser to include top-level values with no section header\n- Fix INI file parser to not specially handle the [DEFAULT] section\n- Fix INI file and Key/Value parsers to only remove one quotation mark from the\n  beginning and end of values.\n- Update copyright dates\n\n20221230 v1.22.4\n- Add `iwconfig` command parser\n- Add NeXTSTEP format support to the PLIST file parser\n- Fix `proc` parser magic signature detection for `/proc/pid/stat` hacks\n- Fix `x509-cert` parser for string serial numbers\n- Add category tags to parser metadata: generic, standard, file, string, binary, command\n- Add \"list parsers by category\" view to help\n- Fix python 3.6-related issues\n- Add python 3.6 to automated tests\n\n20221216 v1.22.3\n- Add Common Log Format and Combined Log Format file parser (standard and streaming)\n- Add PostgreSQL password file parser\n- Add openvpn-status.log file parser\n- Add `cbt` command parser (Google Big Table)\n- Enhance `ifconfig` parser with interface lane information on BSD\n- Enhance `ifconfig` parser with additional IPv6 `scope_id` info for BSD\n- Fix `ifconfig` parser to capture some IPv6 addresses missed on BSD\n- Fix `git-log` and `git-log-s` parsers for failure on empty author name\n- Update `os-prober` parser with split EFI partition fields\n- Add ISO string attribute (`.iso`) to `jc.utils.timestamp()`\n- Fix several documentation typos\n\n20221107 v1.22.2\n- add `sshd_conf` parser for `sshd` configuration files and `sshd -T` output\n- add `findmnt` command parser\n- add `git ls-remote` command parser\n- add `os-prober` command parser\n- add SemVer string parser\n- enhance the `ifconfig` parser so it can output multiple IPv4 and IPv6 addresses\n- enhance the `ifconfig` parser so it can output additional fields common on BSD\n- enhance `xml` parser with optional `_` prefix for attributes instead of\n  `@` by using the `--raw` option. This can make it easier to filter the\n  JSON output in some tools.\n- fix the `xml` parser to output a normal Dictionary instead of OrderdDict.\n  This cleans up YAML output. (No `!!omap` comments)\n- fix `csv` and `csv-s` parsers for UTF-8 encoded CSV files with leading BOM bytes\n- fix exit code to be non-zero on interrupt\n- allow parser module objects to be used as arguments to `jc.get_help()` and `jc.parser_info()`\n- catch unexpected exceptions in the CLI\n- add error message on interrupt to STDERR\n- add python 3.11 tests to github actions\n\n20221024 v1.22.1\n- add `udevadm` command parser\n- add `lspci` command parser\n- add `pci.ids` file parser\n- fix `proc-pid-stat` parser for command names with spaces and newlines\n- enhance `ip-address` parser to add `ip_split` field\n- rename `iso-datetime` parser to `datetime-iso`. A deprecation warning will\n  display until `iso-datetime` is removed in a future version.\n- refactor cli module\n- optimize performance of calculated timestamps\n- add more type annotations\n- add support for deprecating parsers\n- move jc-web demo site from heroku to render.com\n\n20220926 v1.22.0\n- Add /proc file parsers for linux. Support for the following files:\n  `/proc/buddyinfo`\n  `/proc/consoles`\n  `/proc/cpuinfo`\n  `/proc/crypto`\n  `/proc/devices`\n  `/proc/diskstats`\n  `/proc/filesystems`\n  `/proc/interrupts`\n  `/proc/iomem`\n  `/proc/ioports`\n  `/proc/loadavg`\n  `/proc/locks`\n  `/proc/meminfo`\n  `/proc/modules`\n  `/proc/mtrr`\n  `/proc/pagetypeinfo`\n  `/proc/partitions`\n  `/proc/slabinfo`\n  `/proc/softirqs`\n  `/proc/stat`\n  `/proc/swaps`\n  `/proc/uptime`\n  `/proc/version`\n  `/proc/vmallocinfo`\n  `/proc/vmstat`\n  `/proc/zoneinfo`\n  `/proc/driver/rtc`\n  `/proc/net/arp`\n  `/proc/net/dev`\n  `/proc/net/dev_mcast`\n  `/proc/net/if_inet6`\n  `/proc/net/igmp`\n  `/proc/net/igmp6`\n  `/proc/net/ipv6_route`\n  `/proc/net/netlink`\n  `/proc/net/netstat`\n  `/proc/net/packet`\n  `/proc/net/protocols`\n  `/proc/net/route`\n  `/proc/net/unix`\n  `/proc/<pid>/fdinfo/<fd>`\n  `/proc/<pid>/io`\n  `/proc/<pid>/maps`\n  `/proc/<pid>/mountinfo`\n  `/proc/<pid>/numa_maps`\n  `/proc/<pid>/smaps`\n  `/proc/<pid>/stat`\n  `/proc/<pid>/statm`\n  `/proc/<pid>/status`\n- Magic syntax support for `/proc` files\n- Enhance bash and zsh autocompletions for `/proc` files\n- Enhance `free` parser to support `-w` option integer conversions\n- Fix `ini` and `kv` parsers so they don't change keynames to lower case\n  NOTE: This can be a breaking change in your scripts\n- Fix `id` command parser to allow usernames and groupnames with spaces\n- Enhance metadata output to output metadata even when results are empty\n- Optimize tests\n- Optimize documentation build script\n\n20220829 v1.21.2\n- Fix IP Address string parser for older python versions that don't cleanly\n  accept decimal input format - IPv6 fix (e.g. python 3.6)\n\n20220828 v1.21.1\n- Fix IP Address string parser for older python versions that don't cleanly\n  accept decimal input format - IPv4 fix (e.g. python 3.6)\n- Fix `arp -a` parser for cases where incomplete hardware addresses are found\n  in the arp table on linux\n\n20220821 v1.21.0\n- Add IP Address string parser\n- Add Syslog standard and streaming string parsers (RFC 3164 and RFC 5424)\n- Add CEF standard and streaming string parser\n- Add PLIST file parser (XML and binary support)\n- Add `-n` support to the `traceroute` parser\n- Add `mdadm` command parser tested on linux\n- Add `--meta-out` or `-M` option to add metadata to the JSON output, including\n  a UTC timestamp, parser name, magic command, and magic command exit code\n- Fix `lsusb` command parser for output containing a `Device Qualifier` and\n  `Binary Object Store Descriptor` sections\n- Change `LANG=C` to `LC_ALL=C` in locale instructions\n- Add `__main__.py` to package allowing `python -m jc` usage\n- Add an enclosing top-level folder inside the windows.zip package\n\n20220723 v1.20.4\n- Fix URL string parser path list for URLs ending in a forward slash\n\n20220723 v1.20.3\n- Add URL string parser\n- Add Email Address string parser\n- Add JWT string parser\n- Add ISO 8601 Datetime string parser\n- Add UNIX Epoch Timestamp string parser\n- Add M3U/M3U8 file parser\n- Add pager functionality to help (parser documentation only)\n- Minor parser performance optimizations\n\n20220705 v1.20.2\n- Add `gpg --with-colons` parser tested on linux\n- Add DER and PEM encoded X.509 Certificate parser\n- Add Bash and Zsh completion scripts to DEB and RPM packages\n\n20220615 v1.20.1\n- Add `postconf -M` parser tested on linux\n- Update `asciitable` and `asciitable-m` parsers to preserve case in key\n  names when using the `-r` or `raw=True` options.\n- Add long options (e.g. `--help`, `--about`, `--pretty`, etc.)\n- Add shell completions for Bash and Zsh\n- Fix `id` parser for cases where the user or group name is not present\n\n20220531 v1.20.0\n- Add YAML output option with `-y`\n- Add `top -b` standard and streaming parsers tested on linux\n- Add `plugin_parser_count`, `standard_parser_count`, and `streaming_parser_count`\n  keys to `jc -a` output\n- Add `is_compatible` function to the `utils` module\n- Fix `pip-show` parser for packages with a multi-line license field\n- Fix ASCII Table parser for cases where centered headers cause mis-aligned fields\n\n20220513 v1.19.0\n- Add `chage --list` command parser tested on linux\n- Add `git log` command streaming parser\n- Fix `git log` standard parser for corner-cases where hash values are in messages\n- Fix `df` command parser for rare instances when a newline is found at the end\n- Allow jc to pip install on unsupported python version 3.6\n- Fix `asciitable-m` parser to skip some rows that contain column separator\n  characters in cell data. A warning message will be printed to STDERR\n  unless `-q` or `quiet=True` is used.\n\n20220427 v1.18.8\n- Fix `update-alternatives --query` parser for cases where `slaves` are not present\n- Fix UnicodeEncodeError on some systems where LANG=C is set and unicode\n  characters are in the output\n- Update `history` parser: do not drop non-ASCII characters if the system\n  is configured for UTF-8 encoding\n- Enhance \"magic syntax\" to always use UTF-8 encoding\n\n20220425 v1.18.7\n- Add `git log` command parser\n- Add `update-alternatives --query` parser\n- Add `update-alternatives --get-selections` parser\n- Fix key/value and ini parsers to allow duplicate keys\n- Fix yaml file parser for files including timestamp objects\n- Update `xrandr` parser: add a 'rotation' field\n- Fix failing tests by moving template files\n- Add python interpreter version and path to -v and -a output\n\n20220325 v1.18.6\n- Add `pidstat` command parser tested on linux\n- Add `pidstat` command streaming parser tested on linux\n- Add `mpstat` command parser tested on linux\n- Add `mpstat` command streaming parser tested on linux\n- Add single-line ASCII and Unicode table parser\n- Add multi-line ASCII and Unicode table parser\n- Add documentation option to `parser_info()` and `all_parser_info()`\n\n20220305 v1.18.5\n- Fix date parser to ensure AM/PM period string is always uppercase\n\n20220304 v1.18.4\n- Add nmcli command parser tested on linux\n- Enhance parse error messages at the cli\n- Add standard and streaming parser list functions to the public API\n- Enhance python developer documentation formatting\n\n20220214 v1.18.3\n- Add rsync command and log file parser tested on linux and macOS\n- Add rsync command and log file streaming parser tested on linux and macOS\n- Add xrandr command parser tested on linux\n- Enhance timestamp performance with caching and format hints\n- Refactor ignore_exceptions functionality in streaming parsers\n- Fix man page in packages\n\n20220127 v1.18.2\n- Fix for plugin parsers with underscores in the name\n- Add type hints to public API functions\n- Add plugin attribute to plugin parser metadata\n- Add C locale hint to parsing error messages\n- Refactor more cli code into lib\n\n20220121 v1.18.1\n- Minor fix for MacOS binary\n\n20220121 v1.18.0\n- Add high-level parse API for built-in and plugin parsers\n- Add python module developer documentation\n- Enhance magic syntax exception messages\n- Enhance documentation formatting\n\n20220106 v1.17.7\n- Add stat command streaming parser tested on linux and macOS\n\n20220103 v1.17.6\n- Add jar-manifest file parser (for MANIFEST.MF files)\n- Fix CSV parsers for some files that include doublequotes\n\n20211221 v1.17.5\n- Add zipinfo parser tested on linux and macOS\n\n20211207 v1.17.4\n- Add support for the NO_COLOR environment variable to set mono (http://no-color.org/)\n- Add -C option to force color output even when using pipes (overrides -m and NO_COLOR)\n\n20211202 v1.17.3\n- Update parsers to exit with error if non-string input is detected (raise TypeError)\n- Update streaming parsers to exit with error if non-iterable input is detected (raise TypeError)\n- Simplify quiet-checking in parsers\n- Add iostat parser tested on linux\n- Add iostat streaming parser tested on linux\n\n20211117 v1.17.2\n- Fix ping parser to add Alpine linux support\n- Fix netstat parser for older versions of netstat on linux\n- Fix df parser for cases where the filesystem field overflows the column length\n\n20211030 v1.17.1\n- Fix file parser for gzip files\n- Fix uname parser for cases where the 'processor' and/or 'hardware_platform' fields are missing on linux\n- Fix uname parser on FreeBSD\n- Add lsusb parser tested on linux\n- Add CSV file streaming parser\n- Add testing for Python 3.10.0\n\n20210923 v1.17.0\n- Note to Package Maintainers: please see note at 20210720 v1.16.0\n- Add wrapping of warning and error messages\n- Add vmstat parser tested on linux\n- Add support for streaming parsers\n- Add ls command streaming parser tested on linux, macOS, and freeBSD\n- Add ping command streaming parser tested on linux, macOS, and freeBSD\n- Add vmstat command streaming parser tested on linux\n- Add -u option to allow unbuffered output\n\n20210830 v1.16.2\n- Note to Package Maintainers: please see note at 20210720 v1.16.0\n- Update sfdisk parser to support the -F option and newer versions of sfdisk\n\n20210813 v1.16.1\n- Note to Package Maintainers: please see note at 20210720 v1.16.0\n- Fix issue with process substitution with the magic syntax\n- Fix issue with globs not including filenames with spaces with magic syntax\n- Fix stat parser to properly handle filenames with spaces on macOS/BSD\n\n20210720 v1.16.0\n- Note to Package Maintainers:\n    TL;DR: `/man/jc.1.gz` and `/jc/man/jc.1.gz` are deprecated and only `/man/jc.1` should be used.\n\n    The Man page in the PyPi source packages will be moving from `/jc/man/jc.1.gz` to `/man/jc.1`\n    in version 1.17.0. For now the Man pages will be available in both locations, but be aware that\n    the Man page at `/jc/man/jc.1.gz` is now considered deprecated.\n\n    Also, starting in v1.17.0, the Man page will no longer be compressed in the source package,\n    therefore `/man/jc.1.gz` should also be considered deprecated and will no longer be available\n    after v1.17.0. Please use `/man/jc.1` and compress downstream if you would like.\n- Include CHANGELOG in source distribution\n- Fix Man page location in source packages\n- Add sfdisk command parser tested on linux\n- Update unit test files to change the timezone when needed (POSIX only)\n- Binaries and DEB/RPM/MSI packages now include Python 3.9.5 interpreter\n\n20210628 v1.15.6\n- Fix issue to only load local plugin parsers that have filenames that end in .py\n\n20210520 v1.15.5\n- Fix issue where help and about information would not display if a 3rd party parser library was missing. (e.g. xmltodict)\n- Add more error message detail when encountering ParseError and LibraryNotFound exceptions\n\n20210517 v1.15.4\n- Update ping parser to support error responses in OSX and BSD\n- Update ping parser to be more resilient against parsing errors for unknown error types\n- Update dig parser to support `+noall +answer` use case\n- Update dig parser compatibility to all platforms\n- Fix colors in Windows terminals (cmd.exe and PowerShell)\n- Fix epoch calculations when UTC is referenced as \"Coordinated Universal Time\"\n- Add Windows time format for systeminfo output\n- Add exceptions module to standardize parser exceptions\n- JC no longer swallows exit codes when using the \"magic\" syntax. See the Exit Codes section of the README and man page for details\n\n20210426 v1.15.3\n- Add ufw status command parser tested on linux\n- Add ufw-appinfo command parser tested on linux\n- Fix deb package name to conform to standard\n- Add Caveats section to readme and manpage\n\n20210418 v1.15.2\n- Add systeminfo parser tested on Windows\n- Update dig parser to fix an issue with IPv6 addresses in the server field\n- Update dig parser to fix an issue when axfr entries contain a semicolon\n- Update dig parser to add support for Additional Section and Opt Pseudosection\n- Update dig parser to add query_size field\n- Use dig parser as the main example in readme, documentation, and man page\n- Standardize int, float, and boolean conversion rules with functions in jc.utils\n\n20210413 v1.15.1\n- New feature to show parser documentation interactively with -h --parser_name\n  for example: $ jc -h --arp\n- Add man page to pypi package for easier packaging in homebrew\n- Update rpm-qi parser to add two calculated timestamp fields: install_date_epoch and install_date_epoch_utc\n- Clean up documentation and autogenerate the Parser Information section from metadata\n\n20210407 v1.15.0\n- Add acpi command parser tested on linux\n- Add upower command parser tested on linux\n- Add /usr/bin/time command parser tested on linux and macOS\n- Add dpkg -l command parser tested on linux\n- Add rpm -qi command parser tested on linux\n- Add finger command parser tested on linux and macOS\n- Add dir command parser tested on Windows 10\n- Update date parser: complete rewrite (v2.0) providing many enhancements:\n    - Make weekday numbering ISO 8601 compliant\n    - Add a calculated naive timestamp field\n    - Add a calculated UTC timestamp field (only if date output is in UTC)\n    - Add several fields, including: hour_24, utc_offset, day_of_year, week_of_year, iso, and timezone_aware\n- Update uptime parser to add uptime_days, uptime_hours, uptime_minutes, uptime_total_seconds, time_hour,\n      time_minute, and time_second fields\n- Update last parser to use new timestamp function\n- Update stat parser to add access_time_epoch, access_time_epoch_utc, modify_time_epoch, modify_time_epoch_utc,\n      change_time_epoch, change_time_epoch_utc, birth_time_epoch, birth_time_epoch_utc fields\n- Update timedatectl parser to add epoch_utc field\n- Update who parser to add epoch field\n- Update dig parser to add when_epoch and when_epoch_utc fields\n- Update ls parser to add epoch and epoch_utc fields\n- Add -h option to display the help text. Piping errors no longer show the help text.\n- Add -v option to display version information.\n- Add contributing information to project root\n- Make all external python library dependencies optional: pygments, ruamel.yaml, xmltodict\n- JSON output now supports unencoded unicode characters\n- JSON output is now more compact unless the -p (pretty) option is used\n- Developer scripts added and enhanced to automate documentation and man page creation\n- Enhanced man page\n\n20210305 v1.14.4\n- Packaging fix only for binaries and RPMs hosted on https://github.com/kellyjonbrazil/jc-packaging.\n  Packages from PyPi and OS repositories are not affected. This fixes an issue that kept the YAML\n  parser from initializing.\n\n20210210 v1.14.3\n- Add hciconfig parser tested on linux\n- Update dig parser to simplify answer data logic\n\n20210205 v1.14.2\n- Update dig parser to fix cases where there are spaces in the answer data (e.g. TXT records)\n\n20210106 v1.14.1\n- Add iw-scan parser tested on linux (beta)\n- Update date parser for Ubuntu 20.04 support\n- Update last parser for last -F support\n- Update last parser to add convenience fields and augment data for easier parsing\n- Update man page\n- Minor documentation updates\n\n20201231 v1.14.0\n- Add hashsum parser tested on linux, macos\n- Add hash parser tested on linux, macos\n- Add cksum parser tested on linux, macos\n- Add wc parser tested on linux, macos\n- Add printenv support under env parser\n- Add vdir support under ls parser\n- Add python 3.9 to github automation tests\n\n20200805 v1.13.4\n- Update crontab and crontab-u parsers to tighten up variable detection\n- Update ping parser to tighten linux/bsd detection\n\n20200804 v1.13.3\n- Update ping parser for Raspberry Pi compatibility\n\n20200803 v1.13.2\n- Add key/value file parser (wrapper for ini parser)\n- Add date command parser\n- Update traceroute parser to more gracefully handle missing header row\n- Update traceroute parser to handle annotations\n- Update traceroute parser to only return successful probes\n\n20200727 v1.13.1\n- Add route -6 tests\n\n20200727 v1.13.0\n- Add ping and ping6 command parser tested on linux, macos, and freebsd\n- Add traceroute and traceroute6 command parser tested on linux, macos, and freebsd\n- Add tracepath command parser tested on linux\n- Update ini parser to support files only containing key/value pairs\n- Update uname parser exception with a hint to use \"uname -a\"\n- Update route parser to support IPv6 tables\n\n20200711 v1.12.1\n- Fix tests when using older version of pygments library\n\n20200710 v1.12.0\n- Add sysctl command parser tested on linux, macOS, and freebsd\n- Update the cli code to allow older versions of the pygments library (2.3.0) for debian packaging\n- Code cleanup on the cli\n- Add tests for the cli\n- Vendorize cgitb as tracebackplus for verbose debug messages\n\n20200625 v1.11.8\n- Add verbose debug option using -dd argument\n\n20200622 v1.11.7\n- Fix iptables parser issue which would not output the last chain\n\n20200614 v1.11.6\n- Improve and standardize empty data check for all parsers\n\n20200612 v1.11.5\n- Update airport_s parser to fix error on parsing empty data\n- Update arp parser to fix error on parsing empty data\n- Update blkid parser to fix error on parsing empty data\n- Update crontab parser to fix error on parsing empty data\n- Update crontab_u parser to fix error on parsing empty data\n- Update df parser to fix error on parsing empty data\n- Update free parser to fix error on parsing empty data\n- Update lsblk parser to fix error on parsing empty data\n- Update lsmod parser to fix error on parsing empty data\n- Update mount parser to fix error on parsing empty data\n- Update netstat parser to fix error on parsing empty data\n- Update ntpq parser to fix error on parsing empty data\n- Update ps parser to fix error on parsing empty data\n- Update route parser to fix error on parsing empty data\n- Update systemctl parser to fix error on parsing empty data\n- Update systemctl_lj parser to fix error on parsing empty data\n- Update systemctl_ls parser to fix error on parsing empty data\n- Update systemctl_luf parser to fix error on parsing empty data\n- Update uptime parser to fix error on parsing empty data\n- Update w parser to fix error on parsing empty data\n- Update xml parser to fix error on parsing empty data\n- Add tests to all parsers for no data condition\n- Update ss parser to fix integer fields\n\n20200610 v1.11.4\n- Update ls parser to fix error on parsing an empty directory\n\n20200609 v1.11.3\n- Add local parser plugin feature (contributed by Dean Serenevy)\n\n20200530 v1.11.2\n- Update netstat parser to add freebsd support\n- Update netstat parser to add route_flags_pretty field\n- Update netstat parser to change osx_inode field name to unix_inode\n- Update netstat parser to change osx_flags field name to unix_flags\n- Update netstat parser to strip whitespace from state field\n- Update route parser to add flags_pretty field\n- Update arp parser to add permanent field (freebsd and osx)\n- Update arp parser to add expires field (freebsd)\n- Update w parser to strip whitespace from what field\n- Update last parser to fix FreeBSD issues\n- Update stat parser to change osx_flags field name to unix_flags\n- Update stat parser to add unix_device field for freebsd and osx\n- Fix freebsd compatibility message for df, fstab, mount, ntpq, stat, and uname parsers\n- Fix compatibility message for platforms that include the version number at the end (e.g. freebsd12)\n\n20200523 v1.11.1\n- Update stat command parser to change osx_flags field to string\n\n20200522 v1.11.0\n- Add dmidecode command parser\n- Update stat command parser to add OSX support\n- Update netstat command parser to add OSX support\n- Update netstat command parser to add -r (route) functionality for linux and OSX\n- Update netstat command parser to add -i (interface) functionality for linux and OSX\n\n20200511 v1.10.12\n- Remove shebang from jc/cli.py for Fedora packaging\n\n20200511 v1.10.11\n- Change file permissions for Fedora packaging\n\n20200509 v1.10.10\n- Fix ls parser issue where the first file was skipped for ls -R on some platforms\n- Update last parser to handle 'gone - no logout' condition\n- Update netstat parser to handle bluetooth section (ignore gracefully for now)\n\n20200508 v1.10.9\n- Add license info to vendorized ifconfig-parser class\n\n20200508 v1.10.8\n- Add license file to dist for Fedora RPM packaging requirements\n- Remove tests from package to keep from polluting the global site-packages\n\n20200501 v1.10.7\n- Requirements modifications for Fedora RPM packaging requirements\n\n20200420 v1.10.6\n- Remove homebrew shim references from du osx tests\n\n20200414 v1.10.5\n- Minor change of using sys.exit(0) instead of exit()\n\n20200412 v1.10.4\n- Add color customization via JC_COLORS env variable\n\n20200409 v1.10.3\n- Fix break on pipe error\n\n20200409 v1.10.2\n- Change colors to ansi and match jello colors\n\n20200402 v1.10.1\n- Code cleanup\n\n20200402 v1.10.0\n- Add color output by default when not piping data to another program\n- Add -m option for monochrome output\n\n20200326 v1.9.3\n- Add axfr support for dig command parser\n\n20200312 v1.9.2\n- Update arp parser to fix OSX detection for some edge cases\n\n20200312 v1.9.1\n- Update file command parser to make filename splitting more robust\n\n20200311 v1.9.0\n- Add ntpq command parser\n- Add timedatectl status command parser\n- Add airport -I and airport -s command parser\n- Add file command parser\n- Optimized history command parser by https://github.com/philippeitis\n- Magic syntax fix for certain edge cases\n\n20200308 v1.8.1\n- CLI optimizations by https://github.com/philippeitis\n- Refactored magic syntax function and added tests (https://github.com/philippeitis)\n- Github actions for CI testing on multiple platforms by https://github.com/philippeitis\n- Update ls parser to fix parsing error in OSX with -lR when there are empty folders\n\n20200303 v1.8.0\n- Add blkid command parser\n- Add last and lastb command parser\n- Add who command parser\n- Add CSV file parser\n- Add /etc/passwd file parser\n- Add /etc/shadow file parser\n- Add /etc/group file parser\n- Add /etc/gshadow file parser\n\n20200227 v1.7.5\n- Update ls parser to support filenames with newline characters\n\n20200219 v1.7.4\n- Update ls parser to support multiple directories, globbing, and -R (recursive)\n\n20200211 v1.7.3\n- Add alternative 'magic' syntax: e.g. `jc ls -al`\n- Options can now be condensed (e.g. -prq is equivalent to -p -r -q)\n\n20200208 v1.7.2\n- Include test fixtures in wheel and sdist\n\n20200205 v1.7.1\n- Add YAML file parser\n- Add INI file parser\n- Add XML file parser\n- Add id parser (tested on linux and OSX)\n- Add crontab file parser with user support (tested on linux)\n- Add __version__ variable to parser modules\n- Add exit code on error\n- Update history parser to output \"line\" as an integer\n- Update compatibility list for some parsers\n- Bugfix in crontab file parser: header insertion was clobbering first row\n- Just-in-time loading of parser modules instead of loading all at start\n\n20191217 v1.6.1\n- Add du parser (tested on linux and OSX)\n- Add crontab parser (tested on linux and OSX)\n- Add pip list parser (tested on linux and OSX)\n- Add pip show parser (tested on linux and OSX)\n- Add OSX support for the ifconfig, arp, df, mount, and uname parsers\n- Add tests for ls, dig, ps, w, uptime on OSX\n- Add about option\n- Add universal parsers to refactor repetitive code\n- Update ifconfig parser to output 'state' as an array\n\n20191117 v1.5.1\n- Add ss parser\n- Add stat parser\n- Add /etc/hosts parser\n- Add /etc/fstab parser\n- Add systemctl parser (includes list-jobs, list-sockets, and list-unit-files)\n- Add -r and raw=True options. By default, jc will now convert numbers and boolean, if possible, and add other semantic information, while the raw output will keep all values as text and provide a more literal JSON output\n- Add -q and quiet=True options to suppress warnings to stderr\n- Add -d option to debug parsing issues\n- Add compatibility warnings to stderr\n- Add documentation\n- Update iptables parser to allow --line-numbers option\n- Update lsblk parser to allow parsing of added columns\n- Update mount parser: changed 'access' field name to 'options'\n- Update netstat parser to allow parsing of unix sockets and raw network connections\n- Update w parser to fix unaligned data where blanks are possible\n- Clean up code and reorganize package\n\n20191031 v1.1.1\n- Add arp parser\n- Add dig parser\n- Add unit tests\n- fix netstat parser (remove side effects due to global variable)\n\n20191025 v1.0.1\n- Add w parser\n- Add uptime parser\n- Add history parser\n- Flatten env parser output\n- Remove problematic characters from key names in: df, free, history, lsblk, lsof, and w\n- Where possible, lowercase all keys (except cases like env where the key is the variable name)\n- Remove integer values\n- Handle CTRL-C gracefully\n\n20191023 v0.9.1\n- Add jobs parser\n- Add lsof parser\n- Add lsmod parser\n- No blocking if no piped data\n- Better help text\n- Clean up iptables parser code\n\n20191022 v0.8.1\n- Add env parser\n- Add df parser\n- Add free parser\n- Add lsblk parser\n- Add mount parser\n- Add uname parser\n- Add iptables parser\n\n20191021 v0.6.4\n- Flatten netstat parser output\n- Clean up argument parsing\n- Fix command help\n\n20191018 v0.5.5\n- Fix netstat -p parsing for Ubuntu\n- Add ps parser\n- Add route parser\n- ls parser fixes\n\n20191017 v0.2.0\n- ifconfig, ls, and netstat support\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.8330078125,
          "content": "# Contributing to jc\nWe love your input! We want to make contributing to this project as easy and\ntransparent as possible, whether it's:\n\n- Reporting a bug\n- Discussing the current state of the code\n- Submitting a fix\n- Proposing new features\n- Proposing a new parser\n\n## We Develop with Github\nWe use github to host code, to track issues and feature requests, as well as\naccept pull requests.\n\n## We Use Github Flow, So All Code Changes Happen Through Pull Requests\nPull requests are the best way to propose changes to the codebase (we use\n[Github Flow](https://guides.github.com/introduction/flow/index.html)). We\nactively welcome your pull requests:\n\n1. Open an issue to discuss the new feature, bug fix, or parser before opening\n   a pull request. For new parsers, it is important to agree upon a schema\n   before developing the parser.\n2. Fork the repo and create your branch from `dev`, if available, otherwise\n   `master`.\n3. For new parsers:\n   - Templates: Use the [`jc/parsers/foo.py`](https://github.com/kellyjonbrazil/jc/blob/master/jc/parsers/foo.py)\n     or [`jc/parsers/foo_s.py (streaming)`](https://github.com/kellyjonbrazil/jc/blob/master/jc/parsers/foo_s.py)\n     parsers as a template to get started.\n   - Local development: You can even place a new parser python module file in\n     the [parser plugin directory](https://github.com/kellyjonbrazil/jc#parser-plugins)\n     to get started right away with just a standard `jc` installation.\n   - Parser registry: Add the parser name to the [jc/lib.py](https://github.com/kellyjonbrazil/jc/blob/master/jc/lib.py)\n     file.\n4. If you've added code that should be tested, add tests. All new parsers should\n   have several sample outputs and tests.\n   - Templates:\n     - **Recommended:** [tests/templates/_test_foo_simple.py](https://github.com/kellyjonbrazil/jc/tree/master/tests/templates/_test_foo_simple.py) as a template if you only have test with fixtures.\n       Execute these steps for standard tests:\n       - Save this file as `test_{parser_name}.py` since the helper methods extract parser names from the filename. Use underscores instead of dashes for the parser name.\n       - Organize fixtures in `tests/fixtures` for optimal structure.\n       - Format fixtures as follows (using double dashes):\n           - `{parser_name}--{some_test_description}.out` for command output. (no dots in the filename except for the `.out` suffix)\n           - `{parser_name}--{some_test_description}.json` for expected JSON after parsing. (no dots in the filename except for the `.json` suffix)\n     - Custom: [tests/templates/_test_foo.py](https://github.com/kellyjonbrazil/jc/blob/master/tests/templates/_test_foo.py) as a template for tests.\n     - Custom: [tests/templates/_test_foo_s.py](https://github.com/kellyjonbrazil/jc/tree/master/tests/templates/_test_foo_s.py) as a template for **streaming parser** tests.\n   - Fixtures: Tests typically consist of an input file and an expected output\n     JSON file. Add the data files to the appropriate folder under [tests/fixtures](https://github.com/kellyjonbrazil/jc/tree/master/tests/fixtures)\n5. Documentation is auto-generated from docstrings, so ensure they are clear and\n   accurate.\n6. Ensure the test suite passes. (Note: \"**America/Los_Angeles**\" timezone\n   should be configured on the test system)\n7. Make sure your code lints.\n8. Issue that pull request!\n\n## Documentation And Completions\n\nNo need to worry about documentation and completions as those are auto generated\nvia the python doc strings.\n\n## Parser Schema Guidelines\n- Try to keep the schema as flat as possible - typically a list of flat\n  dictionaries\n- Keys should be lowercase, contain no special characters, and spaces should be\n  converted to underscores\n- Keys should be static, if possible. If they have to be dynamic, then they\n  should not contain lists or dictionaries\n\nThis will make it easier to use tools like `jq` without requiring escaping of\nspecial characters, encapsulating key names in `[\"\"]`, keeps paths predictable,\nand makes iterating and searching for values easier.\n\n**Examples**\n\nBad:\n```json\n{\n  \"Interface 1\": [\n    \"192.168.1.1\",\n    \"172.16.1.1\"\n  ],\n  \"Wifi Interface 1\": [\n    \"10.1.1.1\"\n  ]\n}\n```\nGood:\n```json\n[\n  {\n    \"interface\": \"Interface 1\",\n    \"ip_addresses\": [\n      \"192.168.1.1\",\n      \"172.16.1.1\"\n    ]\n  },\n  {\n    \"interface\": \"Wifi Interface 1\",\n    \"ip_addresses\": [\n      \"10.1.1.1\"\n    ]\n  }\n]\n```\n\n## Development Environment\nUse the following steps to set up the development environment.\n\n### Virtual Environment\nSet up a Python virtual environment for `jc` development so you won't have to\nworry about library conflicts. This can be done with something like\n[pyenv](https://github.com/pyenv/pyenv) and/or\n[venv](https://docs.python.org/3/library/venv.html)\n\n### Clone the repo\nOnce the virtual environment is set up, clone the `jc` repository inside:\n\n```bash\ngit clone https://github.com/kellyjonbrazil/jc.git\n```\n\n### Install In Developer Mode\nNext, use the `./install.sh` script to install `jc` and the requirements in\ndeveloper mode (code chages take effect immediately). This will install the\nconsole-script entry point to `$HOME/.local/bin` so you may need to add this\nto your path.\n\n## Tests\nIt is essential to have good command output sample coverage and tests to keep\nthe `jc` parser quality high.\n\nMany parsers include calculated timestamp fields using the `jc.utils.timestamp`\nclass. Naive timestamps created with this class should be generated on a system\nconfigured with the \"**America/Los_Angeles**\" timezone on linux/macOS/unix and\n\"**Pacific Standard Time**\" timezone on Windows for tests to pass on the Github\nActions CI tests. This timezone should be configured on your local system before\nrunning the tests locally, as well.\n\nYou can run all tests by running the `./runtests.sh` script.\n\n## Debug Messages\n\nUse `--debug` or `-d` to see debug error messages (double to see more):\n\n```shell\necho 'abc' | jc --parser-with-error -dd\n```\n\n## Any contributions you make will be under the MIT Software License\nIn short, when you submit code changes, your submissions are understood to be\nunder the same [MIT License](http://choosealicense.com/licenses/mit/) that\ncovers the project. Feel free to contact the maintainers if that's a concern.\n\n## Report bugs using Github's Issues\nWe use GitHub issues to track public bugs. Report a bug by\n[opening a new issue](https://github.com/kellyjonbrazil/jc/issues); it's that\neasy!\n\n## Write bug reports with detail, background, and sample code\n\n**Great Bug Reports** tend to have:\n\n- A quick summary and/or background\n- Steps to reproduce\n  - Be specific!\n  - Give sample code if you can.\n- What you expected would happen\n- What actually happens\n- Notes (possibly including why you think this might be happening, or stuff you\n  tried that didn't work)\n\n## Use a Consistent Coding Style\n\n* 4 spaces for indentation rather than tabs\n* Use a Python linter that will enforce PEP 8 and other best practices\n"
        },
        {
          "name": "EXAMPLES.md",
          "type": "blob",
          "size": 95.9833984375,
          "content": "## JC Examples\n### acpi\n```bash\nacpi -V | jc --acpi -p          # or:  jc -p acpi -V\n```\n```json\n[\n  {\n    \"type\": \"Battery\",\n    \"id\": 0,\n    \"state\": \"Charging\",\n    \"charge_percent\": 71,\n    \"until_charged\": \"00:29:20\",\n    \"design_capacity_mah\": 2110,\n    \"last_full_capacity\": 2271,\n    \"last_full_capacity_percent\": 100,\n    \"until_charged_hours\": 0,\n    \"until_charged_minutes\": 29,\n    \"until_charged_seconds\": 20,\n    \"until_charged_total_seconds\": 1760\n  },\n  {\n    \"type\": \"Adapter\",\n    \"id\": 0,\n    \"on-line\": true\n  },\n  {\n    \"type\": \"Thermal\",\n    \"id\": 0,\n    \"mode\": \"ok\",\n    \"temperature\": 46.0,\n    \"temperature_unit\": \"C\",\n    \"trip_points\": [\n      {\n        \"id\": 0,\n        \"switches_to_mode\": \"critical\",\n        \"temperature\": 127.0,\n        \"temperature_unit\": \"C\"\n      },\n      {\n        \"id\": 1,\n        \"switches_to_mode\": \"hot\",\n        \"temperature\": 127.0,\n        \"temperature_unit\": \"C\"\n      }\n    ]\n  },\n  {\n    \"type\": \"Cooling\",\n    \"id\": 0,\n    \"messages\": [\n      \"Processor 0 of 10\"\n    ]\n  },\n  {\n    \"type\": \"Cooling\",\n    \"id\": 1,\n    \"messages\": [\n      \"Processor 0 of 10\"\n    ]\n  },\n  {\n    \"type\": \"Cooling\",\n    \"id\": 2,\n    \"messages\": [\n      \"x86_pkg_temp no state information available\"\n    ]\n  },\n  {\n    \"type\": \"Cooling\",\n    \"id\": 3,\n    \"messages\": [\n      \"Processor 0 of 10\"\n    ]\n  },\n  {\n    \"type\": \"Cooling\",\n    \"id\": 4,\n    \"messages\": [\n      \"intel_powerclamp no state information available\"\n    ]\n  },\n  {\n    \"type\": \"Cooling\",\n    \"id\": 5,\n    \"messages\": [\n      \"Processor 0 of 10\"\n    ]\n  }\n]\n```\n### airport -I\n```bash\nairport -I | jc --airport -p          # or:  jc -p airport -I\n```\n```json\n{\n  \"agrctlrssi\": -66,\n  \"agrextrssi\": 0,\n  \"agrctlnoise\": -90,\n  \"agrextnoise\": 0,\n  \"state\": \"running\",\n  \"op_mode\": \"station\",\n  \"lasttxrate\": 195,\n  \"maxrate\": 867,\n  \"lastassocstatus\": 0,\n  \"802_11_auth\": \"open\",\n  \"link_auth\": \"wpa2-psk\",\n  \"bssid\": \"3c:37:86:15:ad:f9\",\n  \"ssid\": \"SnazzleDazzle\",\n  \"mcs\": 0,\n  \"channel\": \"48,80\"\n}\n```\n### airport -s\n```bash\nairport -s | jc --airport-s -p          # or:  jc -p airport -s\n```\n```json\n[\n  {\n    \"ssid\": \"DIRECT-4A-HP OfficeJet 3830\",\n    \"bssid\": \"00:67:eb:2a:a7:3b\",\n    \"rssi\": -90,\n    \"channel\": \"6\",\n    \"ht\": true,\n    \"cc\": \"--\",\n    \"security\": [\n      \"WPA2(PSK/AES/AES)\"\n    ]\n  },\n  {\n    \"ssid\": \"Latitude38\",\n    \"bssid\": \"c0:ff:d5:d2:7a:f3\",\n    \"rssi\": -85,\n    \"channel\": \"11\",\n    \"ht\": true,\n    \"cc\": \"US\",\n    \"security\": [\n      \"WPA2(PSK/AES/AES)\"\n    ]\n  },\n  {\n    \"ssid\": \"xfinitywifi\",\n    \"bssid\": \"6e:e3:0e:b8:45:99\",\n    \"rssi\": -83,\n    \"channel\": \"11\",\n    \"ht\": true,\n    \"cc\": \"US\",\n    \"security\": [\n      \"NONE\"\n    ]\n  }\n]\n```\n### arp\n```bash\narp | jc --arp -p          # or:  jc -p arp\n```\n```json\n[\n  {\n    \"address\": \"gateway\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:f7:4a:fc\",\n    \"flags_mask\": \"C\",\n    \"iface\": \"ens33\"\n  },\n  {\n    \"address\": \"192.168.71.1\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:c0:00:08\",\n    \"flags_mask\": \"C\",\n    \"iface\": \"ens33\"\n  },\n  {\n    \"address\": \"192.168.71.254\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:fe:7a:b4\",\n    \"flags_mask\": \"C\",\n    \"iface\": \"ens33\"\n  }\n]\n```\n```bash\narp -a | jc --arp -p          # or:  jc -p arp -a\n```\n```json\n[\n  {\n    \"name\": null,\n    \"address\": \"192.168.71.1\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:c0:00:08\",\n    \"iface\": \"ens33\",\n    \"permanent\": true\n  },\n  {\n    \"name\": null,\n    \"address\": \"192.168.71.254\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:fe:7a:b4\",\n    \"iface\": \"ens33\",\n    \"permanent\": true\n  },\n  {\n    \"name\": \"_gateway\",\n    \"address\": \"192.168.71.2\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:f7:4a:fc\",\n    \"iface\": \"ens33\",\n    \"permanent\": false,\n    \"expires\": 110\n  }\n]\n```\n### blkid\n```bash\nblkid | jc --blkid -p          # or:  jc -p blkid\n```\n```json\n[\n  {\n    \"device\": \"/dev/sda1\",\n    \"uuid\": \"05d927ab-5875-49e4-ada1-7f46cb32c932\",\n    \"type\": \"xfs\"\n  },\n  {\n    \"device\": \"/dev/sda2\",\n    \"uuid\": \"3klkIj-w1kk-DkJi-0XBJ-y3i7-i2Ac-vHqWBM\",\n    \"type\": \"LVM2_member\"\n  },\n  {\n    \"device\": \"/dev/mapper/centos-root\",\n    \"uuid\": \"07d718ff-950c-4e5b-98f0-42a1147c77d9\",\n    \"type\": \"xfs\"\n  },\n  {\n    \"device\": \"/dev/mapper/centos-swap\",\n    \"uuid\": \"615eb89a-bcbf-46fd-80e3-c483ff5c931f\",\n    \"type\": \"swap\"\n  }\n]\n```\n```bash\nblkid -o udev -ip /dev/sda2 | jc --blkid -p          # or:  jc -p blkid -o udev -ip /dev/sda2\n```\n```json\n[\n  {\n    \"id_fs_uuid\": \"3klkIj-w1kk-DkJi-0XBJ-y3i7-i2Ac-vHqWBM\",\n    \"id_fs_uuid_enc\": \"3klkIj-w1kk-DkJi-0XBJ-y3i7-i2Ac-vHqWBM\",\n    \"id_fs_version\": \"LVM220001\",\n    \"id_fs_type\": \"LVM2_member\",\n    \"id_fs_usage\": \"raid\",\n    \"id_iolimit_minimum_io_size\": 512,\n    \"id_iolimit_physical_sector_size\": 512,\n    \"id_iolimit_logical_sector_size\": 512,\n    \"id_part_entry_scheme\": \"dos\",\n    \"id_part_entry_type\": \"0x8e\",\n    \"id_part_entry_number\": 2,\n    \"id_part_entry_offset\": 2099200,\n    \"id_part_entry_size\": 39843840,\n    \"id_part_entry_disk\": \"8:0\"\n  }\n]\n```\n### CEF strings\n```bash\ncat cef.log | jc --cef -p\n```\n```json\n[\n  {\n    \"deviceVendor\": \"Trend Micro\",\n    \"deviceProduct\": \"Deep Security Agent\",\n    \"deviceVersion\": \"<DSA version>\",\n    \"deviceEventClassId\": \"4000000\",\n    \"name\": \"Eicar_test_file\",\n    \"agentSeverity\": 6,\n    \"CEFVersion\": 0,\n    \"dvchost\": \"hostname\",\n    \"string\": \"hello \\\"world\\\"!\",\n    \"start\": \"Nov 08 2020 12:30:00.111 UTC\",\n    \"start_epoch\": 1604867400,\n    \"start_epoch_utc\": 1604838600,\n    \"Host_ID\": 1,\n    \"Quarantine\": 205,\n    \"myDate\": \"Nov 08 2022 12:30:00.111\",\n    \"myDate_epoch\": 1667939400,\n    \"myDate_epoch_utc\": null,\n    \"myFloat\": 3.14,\n    \"deviceEventClassIdNum\": 4000000,\n    \"agentSeverityString\": \"Medium\",\n    \"agentSeverityNum\": 6\n  }\n]\n```\n### chage --list\n```bash\nchage --list joeuser | jc --chage -p          # or:  jc -p chage --list joeuser\n```\n```json\n{\n  \"password_last_changed\": \"never\",\n  \"password_expires\": \"never\",\n  \"password_inactive\": \"never\",\n  \"account_expires\": \"never\",\n  \"min_days_between_password_change\": 0,\n  \"max_days_between_password_change\": 99999,\n  \"warning_days_before_password_expires\": 7\n}\n```\n### cksum\n```bash\ncksum * | jc --cksum -p          # or:  jc -p cksum *\n```\n```json\n[\n  {\n    \"filename\": \"__init__.py\",\n    \"checksum\": 4294967295,\n    \"blocks\": 0\n  },\n  {\n    \"filename\": \"airport.py\",\n    \"checksum\": 2208551092,\n    \"blocks\": 3745\n  },\n  {\n    \"filename\": \"airport_s.py\",\n    \"checksum\": 1113817598,\n    \"blocks\": 4572\n  }\n]\n```\n### crontab\n```bash\ncat /etc/crontab | jc --crontab -p          # or:  jc -p crontab -l\n```\n```json\n{\n  \"variables\": [\n    {\n      \"name\": \"MAILTO\",\n      \"value\": \"root\"\n    },\n    {\n      \"name\": \"PATH\",\n      \"value\": \"/sbin:/bin:/usr/sbin:/usr/bin\"\n    },\n    {\n      \"name\": \"SHELL\",\n      \"value\": \"/bin/bash\"\n    }\n  ],\n  \"schedule\": [\n    {\n      \"minute\": [\n        \"5\"\n      ],\n      \"hour\": [\n        \"10-11\",\n        \"22\"\n      ],\n      \"day_of_month\": [\n        \"*\"\n      ],\n      \"month\": [\n        \"*\"\n      ],\n      \"day_of_week\": [\n        \"*\"\n      ],\n      \"command\": \"/var/www/devdaily.com/bin/mk-new-links.php\"\n    },\n    {\n      \"minute\": [\n        \"30\"\n      ],\n      \"hour\": [\n        \"4/2\"\n      ],\n      \"day_of_month\": [\n        \"*\"\n      ],\n      \"month\": [\n        \"*\"\n      ],\n      \"day_of_week\": [\n        \"*\"\n      ],\n      \"command\": \"/var/www/devdaily.com/bin/create-all-backups.sh\"\n    },\n    {\n      \"occurrence\": \"yearly\",\n      \"command\": \"/home/maverick/bin/annual-maintenance\"\n    },\n    {\n      \"occurrence\": \"reboot\",\n      \"command\": \"/home/cleanup\"\n    },\n    {\n      \"occurrence\": \"monthly\",\n      \"command\": \"/home/maverick/bin/tape-backup\"\n    }\n  ]\n}\n```\n### crontab-u (with user support)\n```bash\ncat /etc/crontab | jc --crontab-u -p\n```\n```json\n{\n  \"variables\": [\n    {\n      \"name\": \"MAILTO\",\n      \"value\": \"root\"\n    },\n    {\n      \"name\": \"PATH\",\n      \"value\": \"/sbin:/bin:/usr/sbin:/usr/bin\"\n    },\n    {\n      \"name\": \"SHELL\",\n      \"value\": \"/bin/bash\"\n    }\n  ],\n  \"schedule\": [\n    {\n      \"minute\": [\n        \"5\"\n      ],\n      \"hour\": [\n        \"10-11\",\n        \"22\"\n      ],\n      \"day_of_month\": [\n        \"*\"\n      ],\n      \"month\": [\n        \"*\"\n      ],\n      \"day_of_week\": [\n        \"*\"\n      ],\n      \"user\": \"root\",\n      \"command\": \"/var/www/devdaily.com/bin/mk-new-links.php\"\n    },\n    {\n      \"minute\": [\n        \"30\"\n      ],\n      \"hour\": [\n        \"4/2\"\n      ],\n      \"day_of_month\": [\n        \"*\"\n      ],\n      \"month\": [\n        \"*\"\n      ],\n      \"day_of_week\": [\n        \"*\"\n      ],\n      \"user\": \"root\",\n      \"command\": \"/var/www/devdaily.com/bin/create-all-backups.sh\"\n    },\n    {\n      \"occurrence\": \"yearly\",\n      \"user\": \"root\",\n      \"command\": \"/home/maverick/bin/annual-maintenance\"\n    },\n    {\n      \"occurrence\": \"reboot\",\n      \"user\": \"root\",\n      \"command\": \"/home/cleanup\"\n    },\n    {\n      \"occurrence\": \"monthly\",\n      \"user\": \"root\",\n      \"command\": \"/home/maverick/bin/tape-backup\"\n    }\n  ]\n}\n```\n### CSV files\n```bash\ncat homes.csv\n```\n```\n\"Sell\", \"List\", \"Living\", \"Rooms\", \"Beds\", \"Baths\", \"Age\", \"Acres\", \"Taxes\"\n142, 160, 28, 10, 5, 3,  60, 0.28,  3167\n175, 180, 18,  8, 4, 1,  12, 0.43,  4033\n129, 132, 13,  6, 3, 1,  41, 0.33,  1471\n...\n```\n```bash\ncat homes.csv | jc --csv -p\n```\n```json\n[\n  {\n    \"Sell\": \"142\",\n    \"List\": \"160\",\n    \"Living\": \"28\",\n    \"Rooms\": \"10\",\n    \"Beds\": \"5\",\n    \"Baths\": \"3\",\n    \"Age\": \"60\",\n    \"Acres\": \"0.28\",\n    \"Taxes\": \"3167\"\n  },\n  {\n    \"Sell\": \"175\",\n    \"List\": \"180\",\n    \"Living\": \"18\",\n    \"Rooms\": \"8\",\n    \"Beds\": \"4\",\n    \"Baths\": \"1\",\n    \"Age\": \"12\",\n    \"Acres\": \"0.43\",\n    \"Taxes\": \"4033\"\n  },\n  {\n    \"Sell\": \"129\",\n    \"List\": \"132\",\n    \"Living\": \"13\",\n    \"Rooms\": \"6\",\n    \"Beds\": \"3\",\n    \"Baths\": \"1\",\n    \"Age\": \"41\",\n    \"Acres\": \"0.33\",\n    \"Taxes\": \"1471\"\n  }\n]\n```\n### date\n```bash\ndate | jc --date -p          # or:  jc -p date\n```\n```json\n{\n  \"year\": 2021,\n  \"month\": \"Mar\",\n  \"month_num\": 3,\n  \"day\": 25,\n  \"weekday\": \"Thu\",\n  \"weekday_num\": 4,\n  \"hour\": 2,\n  \"hour_24\": 2,\n  \"minute\": 2,\n  \"second\": 26,\n  \"period\": \"AM\",\n  \"timezone\": \"UTC\",\n  \"utc_offset\": \"+0000\",\n  \"day_of_year\": 84,\n  \"week_of_year\": 12,\n  \"iso\": \"2021-03-25T02:02:26+00:00\",\n  \"epoch\": 1616662946,\n  \"epoch_utc\": 1616637746,\n  \"timezone_aware\": true\n}\n```\n### df\n```bash\ndf | jc --df -p          # or:  jc -p df\n```\n```json\n[\n  {\n    \"filesystem\": \"devtmpfs\",\n    \"1k_blocks\": 1918816,\n    \"used\": 0,\n    \"available\": 1918816,\n    \"use_percent\": 0,\n    \"mounted_on\": \"/dev\"\n  },\n  {\n    \"filesystem\": \"tmpfs\",\n    \"1k_blocks\": 1930664,\n    \"used\": 0,\n    \"available\": 1930664,\n    \"use_percent\": 0,\n    \"mounted_on\": \"/dev/shm\"\n  }\n]\n```\n### dig\n```bash\ndig cnn.com www.cnn.com @205.251.194.64 | jc --dig -p          # or:  jc -p dig cnn.com www.cnn.com @205.251.194.64\n```\n```json\n[\n  {\n    \"id\": 10267,\n    \"opcode\": \"QUERY\",\n    \"status\": \"NOERROR\",\n    \"flags\": [\n      \"qr\",\n      \"rd\",\n      \"ra\"\n    ],\n    \"query_num\": 1,\n    \"answer_num\": 4,\n    \"authority_num\": 0,\n    \"additional_num\": 1,\n    \"opt_pseudosection\": {\n      \"edns\": {\n        \"version\": 0,\n        \"flags\": [],\n        \"udp\": 4096\n      }\n    },\n    \"question\": {\n      \"name\": \"cnn.com.\",\n      \"class\": \"IN\",\n      \"type\": \"A\"\n    },\n    \"answer\": [\n      {\n        \"name\": \"cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"A\",\n        \"ttl\": 17,\n        \"data\": \"151.101.65.67\"\n      },\n      {\n        \"name\": \"cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"A\",\n        \"ttl\": 17,\n        \"data\": \"151.101.129.67\"\n      },\n      {\n        \"name\": \"cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"A\",\n        \"ttl\": 17,\n        \"data\": \"151.101.1.67\"\n      },\n      {\n        \"name\": \"cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"A\",\n        \"ttl\": 17,\n        \"data\": \"151.101.193.67\"\n      }\n    ],\n    \"query_time\": 51,\n    \"server\": \"2600:1700:bab0:d40::1#53(2600:1700:bab0:d40::1)\",\n    \"when\": \"Fri Apr 16 16:24:32 PDT 2021\",\n    \"rcvd\": 100,\n    \"when_epoch\": 1618615472,\n    \"when_epoch_utc\": null\n  },\n  {\n    \"id\": 56207,\n    \"opcode\": \"QUERY\",\n    \"status\": \"NOERROR\",\n    \"flags\": [\n      \"qr\",\n      \"aa\",\n      \"rd\"\n    ],\n    \"query_num\": 1,\n    \"answer_num\": 1,\n    \"authority_num\": 4,\n    \"additional_num\": 1,\n    \"opt_pseudosection\": {\n      \"edns\": {\n        \"version\": 0,\n        \"flags\": [],\n        \"udp\": 4096\n      }\n    },\n    \"question\": {\n      \"name\": \"www.cnn.com.\",\n      \"class\": \"IN\",\n      \"type\": \"A\"\n    },\n    \"answer\": [\n      {\n        \"name\": \"www.cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"CNAME\",\n        \"ttl\": 300,\n        \"data\": \"turner-tls.map.fastly.net.\"\n      }\n    ],\n    \"authority\": [\n      {\n        \"name\": \"cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"NS\",\n        \"ttl\": 3600,\n        \"data\": \"ns-1086.awsdns-07.org.\"\n      },\n      {\n        \"name\": \"cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"NS\",\n        \"ttl\": 3600,\n        \"data\": \"ns-1630.awsdns-11.co.uk.\"\n      },\n      {\n        \"name\": \"cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"NS\",\n        \"ttl\": 3600,\n        \"data\": \"ns-47.awsdns-05.com.\"\n      },\n      {\n        \"name\": \"cnn.com.\",\n        \"class\": \"IN\",\n        \"type\": \"NS\",\n        \"ttl\": 3600,\n        \"data\": \"ns-576.awsdns-08.net.\"\n      }\n    ],\n    \"query_time\": 22,\n    \"server\": \"205.251.194.64#53(205.251.194.64)\",\n    \"when\": \"Fri Apr 16 16:24:32 PDT 2021\",\n    \"rcvd\": 212,\n    \"when_epoch\": 1618615472,\n    \"when_epoch_utc\": null\n  }\n]\n```\n```bash\ndig -x 1.1.1.1 | jc --dig -p          # or:  jc -p dig -x 1.1.1.1\n```\n```json\n[\n  {\n    \"id\": 20785,\n    \"opcode\": \"QUERY\",\n    \"status\": \"NOERROR\",\n    \"flags\": [\n      \"qr\",\n      \"rd\",\n      \"ra\"\n    ],\n    \"query_num\": 1,\n    \"answer_num\": 1,\n    \"authority_num\": 0,\n    \"additional_num\": 1,\n    \"opt_pseudosection\": {\n      \"edns\": {\n        \"version\": 0,\n        \"flags\": [],\n        \"udp\": 4096\n      }\n    },\n    \"question\": {\n      \"name\": \"1.1.1.1.in-addr.arpa.\",\n      \"class\": \"IN\",\n      \"type\": \"PTR\"\n    },\n    \"answer\": [\n      {\n        \"name\": \"1.1.1.1.in-addr.arpa.\",\n        \"class\": \"IN\",\n        \"type\": \"PTR\",\n        \"ttl\": 1800,\n        \"data\": \"one.one.one.one.\"\n      }\n    ],\n    \"query_time\": 40,\n    \"server\": \"2600:1700:bab0:d40::1#53(2600:1700:bab0:d40::1)\",\n    \"when\": \"Sat Apr 17 14:50:50 PDT 2021\",\n    \"rcvd\": 78,\n    \"when_epoch\": 1618696250,\n    \"when_epoch_utc\": null\n  }\n]\n```\n### dir\n```bash\ndir | jc --dir -p\n```\n```json\n[\n  {\n    \"date\": \"03/24/2021\",\n    \"time\": \"03:15 PM\",\n    \"dir\": true,\n    \"size\": null,\n    \"filename\": \".\",\n    \"parent\": \"C:\\\\Program Files\\\\Internet Explorer\",\n    \"epoch\": 1616624100\n  },\n  {\n    \"date\": \"03/24/2021\",\n    \"time\": \"03:15 PM\",\n    \"dir\": true,\n    \"size\": null,\n    \"filename\": \"..\",\n    \"parent\": \"C:\\\\Program Files\\\\Internet Explorer\",\n    \"epoch\": 1616624100\n  },\n  {\n    \"date\": \"12/07/2019\",\n    \"time\": \"02:49 AM\",\n    \"dir\": true,\n    \"size\": null,\n    \"filename\": \"en-US\",\n    \"parent\": \"C:\\\\Program Files\\\\Internet Explorer\",\n    \"epoch\": 1575715740\n  },\n  {\n    \"date\": \"12/07/2019\",\n    \"time\": \"02:09 AM\",\n    \"dir\": false,\n    \"size\": 54784,\n    \"filename\": \"ExtExport.exe\",\n    \"parent\": \"C:\\\\Program Files\\\\Internet Explorer\",\n    \"epoch\": 1575713340\n  }\n]\n```\n### dmidecode\n```bash\ndmidecode | jc --dmidecode -p          # or:  jc -p dmidecode\n```\n```json\n[\n  {\n    \"handle\": \"0x0000\",\n    \"type\": 0,\n    \"bytes\": 24,\n    \"description\": \"BIOS Information\",\n    \"values\": {\n      \"vendor\": \"Phoenix Technologies LTD\",\n      \"version\": \"6.00\",\n      \"release_date\": \"04/13/2018\",\n      \"address\": \"0xEA490\",\n      \"runtime_size\": \"88944 bytes\",\n      \"rom_size\": \"64 kB\",\n      \"characteristics\": [\n        \"ISA is supported\",\n        \"PCI is supported\",\n        \"PC Card (PCMCIA) is supported\",\n        \"PNP is supported\",\n        \"APM is supported\",\n        \"BIOS is upgradeable\",\n        \"BIOS shadowing is allowed\",\n        \"ESCD support is available\",\n        \"Boot from CD is supported\",\n        \"Selectable boot is supported\",\n        \"EDD is supported\",\n        \"Print screen service is supported (int 5h)\",\n        \"8042 keyboard services are supported (int 9h)\",\n        \"Serial services are supported (int 14h)\",\n        \"Printer services are supported (int 17h)\",\n        \"CGA/mono video services are supported (int 10h)\",\n        \"ACPI is supported\",\n        \"Smart battery is supported\",\n        \"BIOS boot specification is supported\",\n        \"Function key-initiated network boot is supported\",\n        \"Targeted content distribution is supported\"\n      ],\n      \"bios_revision\": \"4.6\",\n      \"firmware_revision\": \"0.0\"\n    }\n  }\n]\n```\n### dpkg -l\n```bash\ndpkg -l | jc --dpkg-l -p          # or:  jc -p dpkg -l\n```\n```json\n[\n  {\n    \"codes\": \"ii\",\n    \"name\": \"accountsservice\",\n    \"version\": \"0.6.45-1ubuntu1.3\",\n    \"architecture\": \"amd64\",\n    \"description\": \"query and manipulate user account information\",\n    \"desired\": \"install\",\n    \"status\": \"installed\"\n  },\n  {\n    \"codes\": \"rc\",\n    \"name\": \"acl\",\n    \"version\": \"2.2.52-3build1\",\n    \"architecture\": \"amd64\",\n    \"description\": \"Access control list utilities\",\n    \"desired\": \"remove\",\n    \"status\": \"config-files\"\n  },\n  {\n    \"codes\": \"uWR\",\n    \"name\": \"acpi\",\n    \"version\": \"1.7-1.1\",\n    \"architecture\": \"amd64\",\n    \"description\": \"displays information on ACPI devices\",\n    \"desired\": \"unknown\",\n    \"status\": \"trigger await\",\n    \"error\": \"reinstall required\"\n  },\n  {\n    \"codes\": \"rh\",\n    \"name\": \"acpid\",\n    \"version\": \"1:2.0.28-1ubuntu1\",\n    \"architecture\": \"amd64\",\n    \"description\": \"Advanced Configuration and Power Interface event daemon\",\n    \"desired\": \"remove\",\n    \"status\": \"half installed\"\n  },\n  {\n    \"codes\": \"pn\",\n    \"name\": \"adduser\",\n    \"version\": \"3.116ubuntu1\",\n    \"architecture\": \"all\",\n    \"description\": \"add and remove users and groups\",\n    \"desired\": \"purge\",\n    \"status\": \"not installed\"\n  }\n]\n```\n### du\n```bash\ndu /usr | jc --du -p          # or:  jc -p du /usr\n```\n```json\n[\n  {\n    \"size\": 104608,\n    \"name\": \"/usr/bin\"\n  },\n  {\n    \"size\": 56,\n    \"name\": \"/usr/standalone/firmware/iBridge1_1Customer.bundle/Contents/_CodeSignature\"\n  },\n  {\n    \"size\": 0,\n    \"name\": \"/usr/standalone/firmware/iBridge1_1Customer.bundle/Contents/Resources/Firmware/usr/local/standalone\"\n  },\n  {\n    \"size\": 0,\n    \"name\": \"/usr/standalone/firmware/iBridge1_1Customer.bundle/Contents/Resources/Firmware/usr/local\"\n  },\n  {\n    \"size\": 0,\n    \"name\": \"/usr/standalone/firmware/iBridge1_1Customer.bundle/Contents/Resources/Firmware/usr\"\n  },\n  {\n    \"size\": 1008,\n    \"name\": \"/usr/standalone/firmware/iBridge1_1Customer.bundle/Contents/Resources/Firmware/dfu\"\n  }\n]\n```\n### Email Address string\n```bash\necho 'joe.user@gmail.com' | jc --email-address -p\n```\n```json\n{\n  \"username\": \"joe.user\",\n  \"domain\": \"gmail.com\",\n  \"local\": \"joe.user\",\n  \"local_plus_suffix\": null\n}\n```\n### env\n```bash\nenv | jc --env -p          # or:  jc -p env\n```\n```json\n[\n  {\n    \"name\": \"XDG_SESSION_ID\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"HOSTNAME\",\n    \"value\": \"localhost.localdomain\"\n  },\n  {\n    \"name\": \"TERM\",\n    \"value\": \"vt220\"\n  },\n  {\n    \"name\": \"SHELL\",\n    \"value\": \"/bin/bash\"\n  },\n  {\n    \"name\": \"HISTSIZE\",\n    \"value\": \"1000\"\n  }\n]\n```\n### file\n```bash\nfile * | jc --file -p          # or:  jc -p file *\n```\n```json\n[\n  {\n    \"filename\": \"Applications\",\n    \"type\": \"directory\"\n  },\n  {\n    \"filename\": \"another file with spaces\",\n    \"type\": \"empty\"\n  },\n  {\n    \"filename\": \"argstest.py\",\n    \"type\": \"Python script text executable, ASCII text\"\n  },\n  {\n    \"filename\": \"blkid-p.out\",\n    \"type\": \"ASCII text\"\n  },\n  {\n    \"filename\": \"blkid-pi.out\",\n    \"type\": \"ASCII text, with very long lines\"\n  },\n  {\n    \"filename\": \"cd_catalog.xml\",\n    \"type\": \"XML 1.0 document text, ASCII text, with CRLF line terminators\"\n  },\n  {\n    \"filename\": \"centosserial.sh\",\n    \"type\": \"Bourne-Again shell script text executable, UTF-8 Unicode text\"\n  }\n]\n```\n### finger\n```bash\nfinger | jc --finger -p          # or:  jc -p finger\n```\n```json\n[\n  {\n    \"login\": \"jdoe\",\n    \"name\": \"John Doe\",\n    \"tty\": \"tty1\",\n    \"idle\": \"14d\",\n    \"login_time\": \"Mar 22 21:14\",\n    \"tty_writeable\": false,\n    \"idle_minutes\": 0,\n    \"idle_hours\": 0,\n    \"idle_days\": 14,\n    \"total_idle_minutes\": 20160\n  },\n  {\n    \"login\": \"jdoe\",\n    \"name\": \"John Doe\",\n    \"tty\": \"pts/0\",\n    \"idle\": null,\n    \"login_time\": \"Apr  5 15:33\",\n    \"details\": \"(192.168.1.22)\",\n    \"tty_writeable\": true,\n    \"idle_minutes\": 0,\n    \"idle_hours\": 0,\n    \"idle_days\": 0,\n    \"total_idle_minutes\": 0\n  }\n]\n```\n### free\n```bash\nfree | jc --free -p          # or:  jc -p free\n```\n```json\n[\n  {\n    \"type\": \"Mem\",\n    \"total\": 3861340,\n    \"used\": 220508,\n    \"free\": 3381972,\n    \"shared\": 11800,\n    \"buff_cache\": 258860,\n    \"available\": 3397784\n  },\n  {\n    \"type\": \"Swap\",\n    \"total\": 2097148,\n    \"used\": 0,\n    \"free\": 2097148\n  }\n]\n```\n### /etc/fstab file\n```bash\ncat /etc/fstab | jc --fstab -p\n```\n```json\n[\n  {\n    \"fs_spec\": \"/dev/mapper/centos-root\",\n    \"fs_file\": \"/\",\n    \"fs_vfstype\": \"xfs\",\n    \"fs_mntops\": \"defaults\",\n    \"fs_freq\": 0,\n    \"fs_passno\": 0\n  },\n  {\n    \"fs_spec\": \"UUID=05d927bb-5875-49e3-ada1-7f46cb31c932\",\n    \"fs_file\": \"/boot\",\n    \"fs_vfstype\": \"xfs\",\n    \"fs_mntops\": \"defaults\",\n    \"fs_freq\": 0,\n    \"fs_passno\": 0\n  },\n  {\n    \"fs_spec\": \"/dev/mapper/centos-swap\",\n    \"fs_file\": \"swap\",\n    \"fs_vfstype\": \"swap\",\n    \"fs_mntops\": \"defaults\",\n    \"fs_freq\": 0,\n    \"fs_passno\": 0\n  }\n]\n```\n### git log\n```bash\ngit log --stat | jc --git-log -p          or:  jc -p git log --stat\n```\n```json\n[\n  {\n    \"commit\": \"728d882ed007b3c8b785018874a0eb06e1143b66\",\n    \"author\": \"Kelly Brazil\",\n    \"author_email\": \"kellyjonbrazil@gmail.com\",\n    \"date\": \"Wed Apr 20 09:50:19 2022 -0400\",\n    \"stats\": {\n      \"files_changed\": 2,\n      \"insertions\": 90,\n      \"deletions\": 12,\n      \"files\": [\n        \"docs/parsers/git_log.md\",\n        \"jc/parsers/git_log.py\"\n      ]\n    },\n    \"message\": \"add timestamp docs and examples\",\n    \"epoch\": 1650462619,\n    \"epoch_utc\": null\n  },\n  {\n    \"commit\": \"b53e42aca623181aa9bc72194e6eeef1e9a3a237\",\n    \"author\": \"Kelly Brazil\",\n    \"author_email\": \"kellyjonbrazil@gmail.com\",\n    \"date\": \"Wed Apr 20 09:44:42 2022 -0400\",\n    \"stats\": {\n      \"files_changed\": 5,\n      \"insertions\": 29,\n      \"deletions\": 6,\n      \"files\": [\n        \"docs/parsers/git_log.md\",\n        \"docs/utils.md\",\n        \"jc/parsers/git_log.py\",\n        \"jc/utils.py\",\n        \"man/jc.1\"\n      ]\n    },\n    \"message\": \"add calculated timestamp\",\n    \"epoch\": 1650462282,\n    \"epoch_utc\": null\n  }\n]\n```\n### gpg --with-colons\n```bash\ngpg --with-colons --show-keys file.gpg | jc --gpg -p          # or  jc -p gpg --with-colons --show-keys file.gpg\n```\n```json\n[\n  {\n    \"type\": \"pub\",\n    \"validity\": \"f\",\n    \"key_length\": \"1024\",\n    \"pub_key_alg\": \"17\",\n    \"key_id\": \"6C7EE1B8621CC013\",\n    \"creation_date\": \"899817715\",\n    \"expiration_date\": \"1055898235\",\n    \"certsn_uidhash_trustinfo\": null,\n    \"owner_trust\": \"m\",\n    \"user_id\": null,\n    \"signature_class\": null,\n    \"key_capabilities\": \"scESC\",\n    \"cert_fingerprint_other\": null,\n    \"flag\": null,\n    \"token_sn\": null,\n    \"hash_alg\": null,\n    \"curve_name\": null,\n    \"compliance_flags\": null,\n    \"last_update_date\": null,\n    \"origin\": null,\n    \"comment\": null\n  }\n]\n```\n### /etc/group file\n```bash\ncat /etc/group | jc --group -p\n```\n```json\n[\n  {\n    \"group_name\": \"nobody\",\n    \"password\": \"*\",\n    \"gid\": -2,\n    \"members\": []\n  },\n  {\n    \"group_name\": \"nogroup\",\n    \"password\": \"*\",\n    \"gid\": -1,\n    \"members\": []\n  },\n  {\n    \"group_name\": \"wheel\",\n    \"password\": \"*\",\n    \"gid\": 0,\n    \"members\": [\n      \"root\"\n    ]\n  },\n  {\n    \"group_name\": \"certusers\",\n    \"password\": \"*\",\n    \"gid\": 29,\n    \"members\": [\n      \"root\",\n      \"_jabber\",\n      \"_postfix\",\n      \"_cyrus\",\n      \"_calendar\",\n      \"_dovecot\"\n    ]\n  }\n]\n```\n### /etc/gshadow file\n```bash\ncat /etc/gshadow | jc --gshadow -p\n```\n```json\n[\n  {\n    \"group_name\": \"root\",\n    \"password\": \"*\",\n    \"administrators\": [],\n    \"members\": []\n  },\n  {\n    \"group_name\": \"adm\",\n    \"password\": \"*\",\n    \"administrators\": [],\n    \"members\": [\n      \"syslog\",\n      \"joeuser\"\n    ]\n  }\n]\n```\n### hash\n```bash\nhash | jc --hash -p\n```\n```json\n[\n  {\n    \"hits\": 2,\n    \"command\": \"/bin/cat\"\n  },\n  {\n    \"hits\": 1,\n    \"command\": \"/bin/ls\"\n  }\n]\n```\n### hashsum\n```bash\nmd5sum * | jc --hashsum -p           # or:  jc -p md5sum *\n```\n```json\n[\n  {\n    \"filename\": \"devtoolset-3-gcc-4.9.2-6.el7.x86_64.rpm\",\n    \"hash\": \"65fc958c1add637ec23c4b137aecf3d3\"\n  },\n  {\n    \"filename\": \"digout\",\n    \"hash\": \"5b9312ee5aff080927753c63a347707d\"\n  },\n  {\n    \"filename\": \"dmidecode.out\",\n    \"hash\": \"716fd11c2ac00db109281f7110b8fb9d\"\n  },\n  {\n    \"filename\": \"file with spaces in the name\",\n    \"hash\": \"d41d8cd98f00b204e9800998ecf8427e\"\n  },\n  {\n    \"filename\": \"id-centos.out\",\n    \"hash\": \"4295be239a14ad77ef3253103de976d2\"\n  },\n  {\n    \"filename\": \"ifcfg.json\",\n    \"hash\": \"01fda0d9ba9a75618b072e64ff512b43\"\n  }\n]\n```\n### hciconfig\n```bash\nhciconfig -a | jc --hciconfig -p           # or:  jc -p hciconfig -a\n```\n```json\n[\n  {\n    \"device\": \"hci0\",\n    \"type\": \"Primary\",\n    \"bus\": \"USB\",\n    \"bd_address\": \"00:1A:7D:DA:71:13\",\n    \"acl_mtu\": 310,\n    \"acl_mtu_packets\": 10,\n    \"sco_mtu\": 64,\n    \"sco_mtu_packets\": 8,\n    \"state\": [\n      \"UP\",\n      \"RUNNING\"\n    ],\n    \"rx_bytes\": 13905869,\n    \"rx_acl\": 0,\n    \"rx_sco\": 0,\n    \"rx_events\": 393300,\n    \"rx_errors\": 0,\n    \"tx_bytes\": 62629,\n    \"tx_acl\": 0,\n    \"tx_sco\": 0,\n    \"tx_commands\": 3893,\n    \"tx_errors\": 0,\n    \"features\": [\n      \"0xff\",\n      \"0xff\",\n      \"0x8f\",\n      \"0xfe\",\n      \"0xdb\",\n      \"0xff\",\n      \"0x5b\",\n      \"0x87\"\n    ],\n    \"packet_type\": [\n      \"DM1\",\n      \"DM3\",\n      \"DM5\",\n      \"DH1\",\n      \"DH3\",\n      \"DH5\",\n      \"HV1\",\n      \"HV2\",\n      \"HV3\"\n    ],\n    \"link_policy\": [\n      \"RSWITCH\",\n      \"HOLD\",\n      \"SNIFF\",\n      \"PARK\"\n    ],\n    \"link_mode\": [\n      \"SLAVE\",\n      \"ACCEPT\"\n    ],\n    \"name\": \"CSR8510 A10\",\n    \"class\": \"0x000000\",\n    \"service_classes\": null,\n    \"device_class\": \"Miscellaneous\",\n    \"hci_version\": \"4.0 (0x6)\",\n    \"hci_revision\": \"0x22bb\",\n    \"lmp_version\": \"4.0 (0x6)\",\n    \"lmp_subversion\": \"0x22bb\",\n    \"manufacturer\": \"Cambridge Silicon Radio (10)\"\n  },\n  {\n    \"device\": \"hci1\",\n    \"type\": \"Primary\",\n    \"bus\": \"USB\",\n    \"bd_address\": \"00:1A:7D:DA:71:13\",\n    \"acl_mtu\": 310,\n    \"acl_mtu_packets\": 10,\n    \"sco_mtu\": 64,\n    \"sco_mtu_packets\": 8,\n    \"state\": [\n      \"DOWN\"\n    ],\n    \"rx_bytes\": 4388363,\n    \"rx_acl\": 0,\n    \"rx_sco\": 0,\n    \"rx_events\": 122021,\n    \"rx_errors\": 0,\n    \"tx_bytes\": 52350,\n    \"tx_acl\": 0,\n    \"tx_sco\": 0,\n    \"tx_commands\": 3480,\n    \"tx_errors\": 2,\n    \"features\": [\n      \"0xff\",\n      \"0xff\",\n      \"0x8f\",\n      \"0xfe\",\n      \"0xdb\",\n      \"0xff\",\n      \"0x5b\",\n      \"0x87\"\n    ],\n    \"packet_type\": [\n      \"DM1\",\n      \"DM3\",\n      \"DM5\",\n      \"DH1\",\n      \"DH3\",\n      \"DH5\",\n      \"HV1\",\n      \"HV2\",\n      \"HV3\"\n    ],\n    \"link_policy\": [\n      \"RSWITCH\",\n      \"HOLD\",\n      \"SNIFF\",\n      \"PARK\"\n    ],\n    \"link_mode\": [\n      \"SLAVE\",\n      \"ACCEPT\"\n    ]\n  }\n]\n```\n### history\n```bash\nhistory | jc --history -p\n```\n```json\n[\n  {\n    \"line\": 118,\n    \"command\": \"sleep 100\"\n  },\n  {\n    \"line\": 119,\n    \"command\": \"ls /bin\"\n  },\n  {\n    \"line\": 120,\n    \"command\": \"echo \\\"hello\\\"\"\n  },\n  {\n    \"line\": 121,\n    \"command\": \"docker images\"\n  }\n]\n```\n### /etc/hosts file\n```bash\ncat /etc/hosts | jc --hosts -p\n```\n```json\n[\n  {\n    \"ip\": \"127.0.0.1\",\n    \"hostname\": [\n      \"localhost\"\n    ]\n  },\n  {\n    \"ip\": \"127.0.1.1\",\n    \"hostname\": [\n      \"root-ubuntu\"\n    ]\n  },\n  {\n    \"ip\": \"::1\",\n    \"hostname\": [\n      \"ip6-localhost\",\n      \"ip6-loopback\"\n    ]\n  },\n  {\n    \"ip\": \"fe00::0\",\n    \"hostname\": [\n      \"ip6-localnet\"\n    ]\n  },\n  {\n    \"ip\": \"ff00::0\",\n    \"hostname\": [\n      \"ip6-mcastprefix\"\n    ]\n  },\n  {\n    \"ip\": \"ff02::1\",\n    \"hostname\": [\n      \"ip6-allnodes\"\n    ]\n  },\n  {\n    \"ip\": \"ff02::2\",\n    \"hostname\": [\n      \"ip6-allrouters\"\n    ]\n  }\n]\n```\n### id\n```bash\nid | jc --id -p          # or:  jc -p id\n```\n```json\n{\n  \"uid\": {\n    \"id\": 1000,\n    \"name\": \"joeuser\"\n  },\n  \"gid\": {\n    \"id\": 1000,\n    \"name\": \"joeuser\"\n  },\n  \"groups\": [\n    {\n      \"id\": 1000,\n      \"name\": \"joeuser\"\n    },\n    {\n      \"id\": 10,\n      \"name\": \"wheel\"\n    }\n  ],\n  \"context\": {\n    \"user\": \"unconfined_u\",\n    \"role\": \"unconfined_r\",\n    \"type\": \"unconfined_t\",\n    \"level\": \"s0-s0:c0.c1023\"\n  }\n}\n```\n### ifconfig\n```bash\nifconfig | jc --ifconfig -p          # or:  jc -p ifconfig\n```\n```json\n[\n  {\n    \"name\": \"ens33\",\n    \"flags\": 4163,\n    \"state\": [\n      \"UP\",\n      \"BROADCAST\",\n      \"RUNNING\",\n      \"MULTICAST\"\n    ],\n    \"mtu\": 1500,\n    \"ipv4_addr\": \"192.168.71.137\",\n    \"ipv4_mask\": \"255.255.255.0\",\n    \"ipv4_bcast\": \"192.168.71.255\",\n    \"ipv6_addr\": \"fe80::c1cb:715d:bc3e:b8a0\",\n    \"ipv6_mask\": 64,\n    \"ipv6_scope\": \"0x20\",\n    \"mac_addr\": \"00:0c:29:3b:58:0e\",\n    \"type\": \"Ethernet\",\n    \"rx_packets\": 8061,\n    \"rx_bytes\": 1514413,\n    \"rx_errors\": 0,\n    \"rx_dropped\": 0,\n    \"rx_overruns\": 0,\n    \"rx_frame\": 0,\n    \"tx_packets\": 4502,\n    \"tx_bytes\": 866622,\n    \"tx_errors\": 0,\n    \"tx_dropped\": 0,\n    \"tx_overruns\": 0,\n    \"tx_carrier\": 0,\n    \"tx_collisions\": 0,\n    \"metric\": null\n  },\n  {\n    \"name\": \"lo\",\n    \"flags\": 73,\n    \"state\": [\n      \"UP\",\n      \"LOOPBACK\",\n      \"RUNNING\"\n    ],\n    \"mtu\": 65536,\n    \"ipv4_addr\": \"127.0.0.1\",\n    \"ipv4_mask\": \"255.0.0.0\",\n    \"ipv4_bcast\": null,\n    \"ipv6_addr\": \"::1\",\n    \"ipv6_mask\": 128,\n    \"ipv6_scope\": \"0x10\",\n    \"mac_addr\": null,\n    \"type\": \"Local Loopback\",\n    \"rx_packets\": 73,\n    \"rx_bytes\": 6009,\n    \"rx_errors\": 0,\n    \"rx_dropped\": 0,\n    \"rx_overruns\": 0,\n    \"rx_frame\": 0,\n    \"tx_packets\": 73,\n    \"tx_bytes\": 6009,\n    \"tx_errors\": 0,\n    \"tx_dropped\": 0,\n    \"tx_overruns\": 0,\n    \"tx_carrier\": 0,\n    \"tx_collisions\": 0,\n    \"metric\": null\n  }\n]\n```\n### INI files\n```bash\ncat example.ini\n```\n```\n[DEFAULT]\nServerAliveInterval = 45\nCompression = yes\nCompressionLevel = 9\nForwardX11 = yes\n\n[bitbucket.org]\nUser = hg\n\n[topsecret.server.com]\nPort = 50022\nForwardX11 = no\n```\n```bash\ncat example.ini | jc --ini -p\n```\n```json\n{\n  \"DEFAULT\": {\n    \"ServerAliveInterval\": \"45\",\n    \"Compression\": \"yes\",\n    \"CompressionLevel\": \"9\",\n    \"ForwardX11\": \"yes\"\n  },\n  \"bitbucket.org\": {\n    \"User\": \"hg\"\n  },\n  \"topsecret.server.com\": {\n    \"Port\": \"50022\",\n    \"ForwardX11\": \"no\"\n  }\n}\n\n```\n### iostat\n```bash\n$ iostat | jc --iostat -p          # or:  jc -p iostat\n```\n```json\n[\n  {\n      \"percent_user\": 0.15,\n      \"percent_nice\": 0.0,\n      \"percent_system\": 0.18,\n      \"percent_iowait\": 0.0,\n      \"percent_steal\": 0.0,\n      \"percent_idle\": 99.67,\n      \"type\": \"cpu\"\n  },\n  {\n      \"device\": \"sda\",\n      \"tps\": 0.29,\n      \"kb_read_s\": 7.22,\n      \"kb_wrtn_s\": 1.25,\n      \"kb_read\": 194341,\n      \"kb_wrtn\": 33590,\n      \"type\": \"device\"\n  },\n  {\n      \"device\": \"dm-0\",\n      \"tps\": 0.29,\n      \"kb_read_s\": 5.99,\n      \"kb_wrtn_s\": 1.17,\n      \"kb_read\": 161361,\n      \"kb_wrtn\": 31522,\n      \"type\": \"device\"\n  },\n  {\n      \"device\": \"dm-1\",\n      \"tps\": 0.0,\n      \"kb_read_s\": 0.08,\n      \"kb_wrtn_s\": 0.0,\n      \"kb_read\": 2204,\n      \"kb_wrtn\": 0,\n      \"type\": \"device\"\n  }\n]\n```\n### IP Address strings\n```bash\necho 192.168.2.10/24 | jc --ip-address -p\n```\n```json\n{\n  \"version\": 4,\n  \"max_prefix_length\": 32,\n  \"ip\": \"192.168.2.10\",\n  \"ip_compressed\": \"192.168.2.10\",\n  \"ip_exploded\": \"192.168.2.10\",\n  \"ip_split\": [\n    \"192\",\n    \"168\",\n    \"2\",\n    \"10\"\n  ],\n  \"scope_id\": null,\n  \"ipv4_mapped\": null,\n  \"six_to_four\": null,\n  \"teredo_client\": null,\n  \"teredo_server\": null,\n  \"dns_ptr\": \"10.2.168.192.in-addr.arpa\",\n  \"network\": \"192.168.2.0\",\n  \"broadcast\": \"192.168.2.255\",\n  \"hostmask\": \"0.0.0.255\",\n  \"netmask\": \"255.255.255.0\",\n  \"cidr_netmask\": 24,\n  \"hosts\": 254,\n  \"first_host\": \"192.168.2.1\",\n  \"last_host\": \"192.168.2.254\",\n  \"is_multicast\": false,\n  \"is_private\": true,\n  \"is_global\": false,\n  \"is_link_local\": false,\n  \"is_loopback\": false,\n  \"is_reserved\": false,\n  \"is_unspecified\": false,\n  \"int\": {\n    \"ip\": 3232236042,\n    \"network\": 3232236032,\n    \"broadcast\": 3232236287,\n    \"first_host\": 3232236033,\n    \"last_host\": 3232236286\n  },\n  \"hex\": {\n    \"ip\": \"c0:a8:02:0a\",\n    \"network\": \"c0:a8:02:00\",\n    \"broadcast\": \"c0:a8:02:ff\",\n    \"hostmask\": \"00:00:00:ff\",\n    \"netmask\": \"ff:ff:ff:00\",\n    \"first_host\": \"c0:a8:02:01\",\n    \"last_host\": \"c0:a8:02:fe\"\n  },\n  \"bin\": {\n    \"ip\": \"11000000101010000000001000001010\",\n    \"network\": \"11000000101010000000001000000000\",\n    \"broadcast\": \"11000000101010000000001011111111\",\n    \"hostmask\": \"00000000000000000000000011111111\",\n    \"netmask\": \"11111111111111111111111100000000\",\n    \"first_host\": \"11000000101010000000001000000001\",\n    \"last_host\": \"11000000101010000000001011111110\"\n  }\n}\n```\n### iptables\n```bash\niptables --line-numbers -v -L -t nat | jc --iptables -p          # or:  jc -p iptables --line-numbers -v -L -t nat\n```\n```json\n[\n  {\n    \"chain\": \"PREROUTING\",\n    \"rules\": [\n      {\n        \"num\": 1,\n        \"pkts\": 2183,\n        \"bytes\": 186000,\n        \"target\": \"PREROUTING_direct\",\n        \"prot\": \"all\",\n        \"opt\": null,\n        \"in\": \"any\",\n        \"out\": \"any\",\n        \"source\": \"anywhere\",\n        \"destination\": \"anywhere\"\n      },\n      {\n        \"num\": 2,\n        \"pkts\": 2183,\n        \"bytes\": 186000,\n        \"target\": \"PREROUTING_ZONES_SOURCE\",\n        \"prot\": \"all\",\n        \"opt\": null,\n        \"in\": \"any\",\n        \"out\": \"any\",\n        \"source\": \"anywhere\",\n        \"destination\": \"anywhere\"\n      },\n      {\n        \"num\": 3,\n        \"pkts\": 2183,\n        \"bytes\": 186000,\n        \"target\": \"PREROUTING_ZONES\",\n        \"prot\": \"all\",\n        \"opt\": null,\n        \"in\": \"any\",\n        \"out\": \"any\",\n        \"source\": \"anywhere\",\n        \"destination\": \"anywhere\"\n      },\n      {\n        \"num\": 4,\n        \"pkts\": 0,\n        \"bytes\": 0,\n        \"target\": \"DOCKER\",\n        \"prot\": \"all\",\n        \"opt\": null,\n        \"in\": \"any\",\n        \"out\": \"any\",\n        \"source\": \"anywhere\",\n        \"destination\": \"anywhere\",\n        \"options\": \"ADDRTYPE match dst-type LOCAL\"\n      }\n    ]\n  }\n]\n```\n### ISO Datetime string\n```bash\necho \"2022-07-20T14:52:45Z\" | jc --datetime-iso -p\n```\n```json\n{\n  \"year\": 2022,\n  \"month\": \"Jul\",\n  \"month_num\": 7,\n  \"day\": 20,\n  \"weekday\": \"Wed\",\n  \"weekday_num\": 3,\n  \"hour\": 2,\n  \"hour_24\": 14,\n  \"minute\": 52,\n  \"second\": 45,\n  \"microsecond\": 0,\n  \"period\": \"PM\",\n  \"utc_offset\": \"+0000\",\n  \"day_of_year\": 201,\n  \"week_of_year\": 29,\n  \"iso\": \"2022-07-20T14:52:45+00:00\",\n  \"timestamp\": 1658328765\n}\n```\n### iw dev `device` scan\n```bash\niw dev wlan0 scan | jc --iw-scan -p          # or:  jc -p iw dev wlan0 scan\n```\n```json\n[\n  {\n    \"bssid\": \"71:31:72:65:e1:a2\",\n    \"interface\": \"wlan0\",\n    \"freq\": 2462,\n    \"capability\": \"ESS Privacy ShortSlotTime (0x0411)\",\n    \"ssid\": \"WLAN-1234\",\n    \"supported_rates\": [\n      1.0,\n      2.0,\n      5.5,\n      11.0,\n      18.0,\n      24.0,\n      36.0,\n      54.0\n    ],\n    \"erp\": \"<no flags>\",\n    \"erp_d4.0\": \"<no flags>\",\n    \"rsn\": \"Version: 1\",\n    \"group_cipher\": \"CCMP\",\n    \"pairwise_ciphers\": \"CCMP\",\n    \"authentication_suites\": \"PSK\",\n    \"capabilities\": \"0x186c\",\n    \"extended_supported_rates\": [\n      6.0,\n      9.0,\n      12.0,\n      48.0\n    ],\n    \"ht_rx_mcs_rate_indexes_supported\": \"0-15\",\n    \"primary_channel\": 11,\n    \"secondary_channel_offset\": \"no secondary\",\n    \"rifs\": 1,\n    \"ht_protection\": \"no\",\n    \"non-gf_present\": 1,\n    \"obss_non-gf_present\": 0,\n    \"dual_beacon\": 0,\n    \"dual_cts_protection\": 0,\n    \"stbc_beacon\": 0,\n    \"l-sig_txop_prot\": 0,\n    \"pco_active\": 0,\n    \"pco_phase\": 0,\n    \"bss_width_channel_transition_delay_factor\": 5,\n    \"extended_capabilities\": \"HT Information Exchange Supported\",\n    \"wmm\": \"Parameter version 1\",\n    \"be\": \"CW 15-1023, AIFSN 3\",\n    \"bk\": \"CW 15-1023, AIFSN 7\",\n    \"vi\": \"CW 7-15, AIFSN 2, TXOP 3008 usec\",\n    \"vo\": \"CW 3-7, AIFSN 2, TXOP 1504 usec\",\n    \"wps\": \"Version: 1.0\",\n    \"wi-fi_protected_setup_state\": \"2 (Configured)\",\n    \"selected_registrar\": \"0x0\",\n    \"response_type\": \"3 (AP)\",\n    \"uuid\": \"00000000-0000-0003-0000-75317074f1a2\",\n    \"manufacturer\": \"Corporation\",\n    \"model\": \"VGV8539JW\",\n    \"model_number\": \"1.47.000\",\n    \"serial_number\": \"J144024542\",\n    \"primary_device_type\": \"6-0050f204-1\",\n    \"device_name\": \"Wireless Router(WFA)\",\n    \"config_methods\": \"Label, PBC\",\n    \"rf_bands\": \"0x3\",\n    \"tsf_usec\": 212098649788,\n    \"sta_channel_width_mhz\": 20,\n    \"passive_dwell_tus\": 20,\n    \"active_dwell_tus\": 10,\n    \"channel_width_trigger_scan_interval_s\": 300,\n    \"scan_passive_total_per_channel_tus\": 200,\n    \"scan_active_total_per_channel_tus\": 20,\n    \"beacon_interval_tus\": 100,\n    \"signal_dbm\": -80.0,\n    \"last_seen_ms\": 11420,\n    \"selected_rates\": [\n      1.0,\n      2.0,\n      5.5,\n      11.0\n    ],\n    \"obss_scan_activity_threshold_percent\": 0.25,\n    \"ds_parameter_set_channel\": 11,\n    \"max_amsdu_length_bytes\": 7935,\n    \"minimum_rx_ampdu_time_spacing_usec\": 16\n  }\n]\n```\n### jar-manifest\n```bash\ncat MANIFEST.MF | jc --jar-manifest -p\n```\n```json\n[\n  {\n    \"Import_Package\": \"com.conversantmedia.util.concurrent;resolution:=optional,com.fasterxml.jackson.annotation;version=\\\"[2.12,3)\\\";resolution:=optional,com.fasterxml.jackson.core;version=\\\"[2.12,3)\\\";resolution:=optional,com.fasterxml.jackson.core.type;version=\\\"[2.12,3)\\\";resolution:=optional,com.fasterxml.jackson.cor...\",\n    \"Export_Package\": \"org.apache.logging.log4j.core;uses:=\\\"org.apache.logging.log4j,org.apache.logging.log4j.core.config,org.apache.logging.log4j.core.impl,org.apache.logging.log4j.core.layout,org.apache.logging.log4j.core.time,org.apache.logging.log4j.message,org.apache.logging.log4j.spi,org.apache.logging.log4j.status...\",\n    \"Manifest_Version\": \"1.0\",\n    \"Bundle_License\": \"https://www.apache.org/licenses/LICENSE-2.0.txt\",\n    \"Bundle_SymbolicName\": \"org.apache.logging.log4j.core\",\n    \"Built_By\": \"matt\",\n    \"Bnd_LastModified\": \"1639373735804\",\n    \"Implementation_Vendor_Id\": \"org.apache.logging.log4j\",\n    \"Specification_Title\": \"Apache Log4j Core\",\n    \"Log4jReleaseManager\": \"Matt Sicker\",\n    ...\n  }\n]\n```\n### jobs\n```bash\njobs -l | jc --jobs -p\n```\n```json\n[\n  {\n    \"job_number\": 1,\n    \"pid\": 5283,\n    \"status\": \"Running\",\n    \"command\": \"sleep 10000 &\"\n  },\n  {\n    \"job_number\": 2,\n    \"pid\": 5284,\n    \"status\": \"Running\",\n    \"command\": \"sleep 10100 &\"\n  },\n  {\n    \"job_number\": 3,\n    \"pid\": 5285,\n    \"history\": \"previous\",\n    \"status\": \"Running\",\n    \"command\": \"sleep 10001 &\"\n  },\n  {\n    \"job_number\": 4,\n    \"pid\": 5286,\n    \"history\": \"current\",\n    \"status\": \"Running\",\n    \"command\": \"sleep 10112 &\"\n  }\n]\n```\n### JWT string\n```bash\necho 'eyJhbGciOiJIUzI1N...' | jc --jwt -p\n```\n```json\n{\n  \"header\": {\n    \"alg\": \"HS256\",\n    \"typ\": \"JWT\"\n  },\n  \"payload\": {\n    \"sub\": \"1234567890\",\n    \"name\": \"John Doe\",\n    \"iat\": 1516239022\n  },\n  \"signature\": \"49:f9:4a:c7:04:49:48:c7:8a:28:5d:90:4f:87:f0:a4:c7...\"\n}\n```\n### Key/Value files\n```bash\ncat keyvalue.txt\n```\n```\n# this file contains key/value pairs\nname = John Doe\naddress=555 California Drive\nage: 34\n; comments can include # or ;\n# delimiter can be = or :\n# quoted values have quotation marks stripped by default\n# but can be preserved with the -r argument\noccupation:\"Engineer\"\n```\n```bash\ncat keyvalue.txt | jc --kv -p\n```\n```json\n{\n  \"name\": \"John Doe\",\n  \"address\": \"555 California Drive\",\n  \"age\": \"34\",\n  \"occupation\": \"Engineer\"\n}\n```\n### last and lastb\n```bash\nlast -F | jc --last -p          # or:  jc -p last -F\n```\n```json\n[\n  {\n    \"user\": \"kbrazil\",\n    \"tty\": \"pts/0\",\n    \"hostname\": \"kbrazil-mac.attlocal.net\",\n    \"login\": \"Tue Jan 5 14:29:24 2021\",\n    \"logout\": \"still logged in\",\n    \"login_epoch\": 1609885764\n  },\n  {\n    \"user\": \"kbrazil\",\n    \"tty\": \"tty1\",\n    \"hostname\": null,\n    \"login\": \"Tue Jan 5 14:28:41 2021\",\n    \"logout\": \"still logged in\",\n    \"login_epoch\": 1609885721\n  },\n  {\n    \"user\": \"reboot\",\n    \"tty\": \"system boot\",\n    \"hostname\": \"3.10.0-1062.1.2.el7.x86_64\",\n    \"login\": \"Tue Jan 5 14:28:28 2021\",\n    \"logout\": \"Tue Jan 5 14:29:36 2021\",\n    \"duration\": \"00:01\",\n    \"login_epoch\": 1609885708,\n    \"logout_epoch\": 1609885776,\n    \"duration_seconds\": 68\n  }\n]\n```\n### ls\n```bash\n$ ls -l /usr/bin | jc --ls -p          # or:  jc -p ls -l /usr/bin\n```\n```json\n[\n  {\n    \"filename\": \"apropos\",\n    \"link_to\": \"whatis\",\n    \"flags\": \"lrwxrwxrwx.\",\n    \"links\": 1,\n    \"owner\": \"root\",\n    \"group\": \"root\",\n    \"size\": 6,\n    \"date\": \"Aug 15 10:53\"\n  },\n  {\n    \"filename\": \"ar\",\n    \"flags\": \"-rwxr-xr-x.\",\n    \"links\": 1,\n    \"owner\": \"root\",\n    \"group\": \"root\",\n    \"size\": 62744,\n    \"date\": \"Aug 8 16:14\"\n  },\n  {\n    \"filename\": \"arch\",\n    \"flags\": \"-rwxr-xr-x.\",\n    \"links\": 1,\n    \"owner\": \"root\",\n    \"group\": \"root\",\n    \"size\": 33080,\n    \"date\": \"Aug 19 23:25\"\n  }\n]\n```\n### lsblk\n```bash\nlsblk | jc --lsblk -p          # or:  jc -p lsblk\n```\n```json\n[\n  {\n    \"name\": \"sda\",\n    \"maj_min\": \"8:0\",\n    \"rm\": false,\n    \"size\": \"20G\",\n    \"ro\": false,\n    \"type\": \"disk\",\n    \"mountpoint\": null\n  },\n  {\n    \"name\": \"sda1\",\n    \"maj_min\": \"8:1\",\n    \"rm\": false,\n    \"size\": \"1G\",\n    \"ro\": false,\n    \"type\": \"part\",\n    \"mountpoint\": \"/boot\"\n  }\n]\n```\n### lsmod\n```bash\nlsmod | jc --lsmod -p          # or:  jc -p lsmod\n```\n```json\n[\n  {\n    \"module\": \"nf_nat\",\n    \"size\": 26583,\n    \"used\": 3,\n    \"by\": [\n      \"nf_nat_ipv4\",\n      \"nf_nat_ipv6\",\n      \"nf_nat_masquerade_ipv4\"\n    ]\n  },\n  {\n    \"module\": \"iptable_mangle\",\n    \"size\": 12695,\n    \"used\": 1\n  },\n  {\n    \"module\": \"iptable_security\",\n    \"size\": 12705,\n    \"used\": 1\n  },\n  {\n    \"module\": \"iptable_raw\",\n    \"size\": 12678,\n    \"used\": 1\n  },\n  {\n    \"module\": \"nf_conntrack\",\n    \"size\": 139224,\n    \"used\": 7,\n    \"by\": [\n      \"nf_nat\",\n      \"nf_nat_ipv4\",\n      \"nf_nat_ipv6\",\n      \"xt_conntrack\",\n      \"nf_nat_masquerade_ipv4\",\n      \"nf_conntrack_ipv4\",\n      \"nf_conntrack_ipv6\"\n    ]\n  }\n]\n```\n### lsof\n```bash\nlsof | jc --lsof -p          # or:  jc -p lsof\n```\n```json\n[\n  {\n    \"command\": \"systemd\",\n    \"pid\": 1,\n    \"tid\": null,\n    \"user\": \"root\",\n    \"fd\": \"cwd\",\n    \"type\": \"DIR\",\n    \"device\": \"253,0\",\n    \"size_off\": 224,\n    \"node\": 64,\n    \"name\": \"/\"\n  },\n  {\n    \"command\": \"systemd\",\n    \"pid\": 1,\n    \"tid\": null,\n    \"user\": \"root\",\n    \"fd\": \"rtd\",\n    \"type\": \"DIR\",\n    \"device\": \"253,0\",\n    \"size_off\": 224,\n    \"node\": 64,\n    \"name\": \"/\"\n  },\n  {\n    \"command\": \"systemd\",\n    \"pid\": 1,\n    \"tid\": null,\n    \"user\": \"root\",\n    \"fd\": \"txt\",\n    \"type\": \"REG\",\n    \"device\": \"253,0\",\n    \"size_off\": 1624520,\n    \"node\": 50360451,\n    \"name\": \"/usr/lib/systemd/systemd\"\n  }\n]\n```\n### lsusb\n```bash\nlsusb -v | jc --lsusb -p          # or: jc -p lsusb -v\n```\n```json\n[\n  {\n    \"bus\": \"002\",\n    \"device\": \"001\",\n    \"id\": \"1d6b:0001\",\n    \"description\": \"Linux Foundation 1.1 root hub\",\n    \"device_descriptor\": {\n      \"bLength\": {\n        \"value\": \"18\"\n      },\n      \"bDescriptorType\": {\n        \"value\": \"1\"\n      },\n      \"bcdUSB\": {\n        \"value\": \"1.10\"\n      },\n      ...\n      \"bNumConfigurations\": {\n        \"value\": \"1\"\n      },\n      \"configuration_descriptor\": {\n        \"bLength\": {\n          \"value\": \"9\"\n        },\n        ...\n        \"iConfiguration\": {\n          \"value\": \"0\"\n        },\n        \"bmAttributes\": {\n          \"value\": \"0xe0\",\n          \"attributes\": [\n            \"Self Powered\",\n            \"Remote Wakeup\"\n          ]\n        },\n        \"MaxPower\": {\n          \"description\": \"0mA\"\n        },\n        \"interface_descriptors\": [\n          {\n            \"bLength\": {\n              \"value\": \"9\"\n            },\n            ...\n            \"bInterfaceProtocol\": {\n              \"value\": \"0\",\n              \"description\": \"Full speed (or root) hub\"\n            },\n            \"iInterface\": {\n              \"value\": \"0\"\n            },\n            \"endpoint_descriptors\": [\n              {\n                \"bLength\": {\n                  \"value\": \"7\"\n                },\n                ...\n                \"bmAttributes\": {\n                  \"value\": \"3\",\n                  \"attributes\": [\n                    \"Transfer Type  Interrupt\",\n                    \"Synch Type  None\",\n                    \"Usage Type  Data\"\n                  ]\n                },\n                \"wMaxPacketSize\": {\n                  \"value\": \"0x0002\",\n                  \"description\": \"1x 2 bytes\"\n                },\n                \"bInterval\": {\n                  \"value\": \"255\"\n                }\n              }\n            ]\n          }\n        ]\n      }\n    },\n    \"hub_descriptor\": {\n      \"bLength\": {\n        \"value\": \"9\"\n      },\n      ...\n      \"wHubCharacteristic\": {\n        \"value\": \"0x000a\",\n        \"attributes\": [\n          \"No power switching (usb 1.0)\",\n          \"Per-port overcurrent protection\"\n        ]\n      },\n      ...\n      \"hub_port_status\": {\n        \"Port 1\": {\n          \"value\": \"0000.0103\",\n          \"attributes\": [\n            \"power\",\n            \"enable\",\n            \"connect\"\n          ]\n        },\n        \"Port 2\": {\n          \"value\": \"0000.0103\",\n          \"attributes\": [\n            \"power\",\n            \"enable\",\n            \"connect\"\n          ]\n        }\n      }\n    },\n    \"device_status\": {\n      \"value\": \"0x0001\",\n      \"description\": \"Self Powered\"\n    }\n  }\n]\n```\n### M3U and M3U8 files\n```bash\ncat playlist.m3u | jc --m3u -p\n```\n```json\n[\n  {\n    \"runtime\": 105,\n    \"display\": \"Example artist - Example title\",\n    \"path\": \"C:\\\\Files\\\\My Music\\\\Example.mp3\"\n  },\n  {\n    \"runtime\": 321,\n    \"display\": \"Example Artist2 - Example title2\",\n    \"path\": \"C:\\\\Files\\\\My Music\\\\Favorites\\\\Example2.ogg\"\n  }\n]\n```\n### mount\n```bash\nmount | jc --mount -p          # or:  jc -p mount\n```\n```json\n[\n  {\n    \"filesystem\": \"sysfs\",\n    \"mount_point\": \"/sys\",\n    \"type\": \"sysfs\",\n    \"options\": [\n      \"rw\",\n      \"nosuid\",\n      \"nodev\",\n      \"noexec\",\n      \"relatime\"\n    ]\n  },\n  {\n    \"filesystem\": \"proc\",\n    \"mount_point\": \"/proc\",\n    \"type\": \"proc\",\n    \"options\": [\n      \"rw\",\n      \"nosuid\",\n      \"nodev\",\n      \"noexec\",\n      \"relatime\"\n    ]\n  },\n  {\n    \"filesystem\": \"udev\",\n    \"mount_point\": \"/dev\",\n    \"type\": \"devtmpfs\",\n    \"options\": [\n      \"rw\",\n      \"nosuid\",\n      \"relatime\",\n      \"size=977500k\",\n      \"nr_inodes=244375\",\n      \"mode=755\"\n    ]\n  }\n]\n```\n### mpstat\n```bash\nmpstat | jc --mpstat -p          # or  jc -p mpstat\n```\n```json\n[\n  {\n    \"cpu\": \"all\",\n    \"percent_usr\": 12.94,\n    \"percent_nice\": 0.0,\n    \"percent_sys\": 26.42,\n    \"percent_iowait\": 0.43,\n    \"percent_irq\": 0.0,\n    \"percent_soft\": 0.16,\n    \"percent_steal\": 0.0,\n    \"percent_guest\": 0.0,\n    \"percent_gnice\": 0.0,\n    \"percent_idle\": 60.05,\n    \"type\": \"cpu\",\n    \"time\": \"01:58:14 PM\"\n  }\n]\n```\n### netstat\n```bash\nnetstat -apee | jc --netstat -p          # or:  jc -p netstat -apee\n```\n```json\n[\n  {\n    \"proto\": \"tcp\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"localhost\",\n    \"foreign_address\": \"0.0.0.0\",\n    \"state\": \"LISTEN\",\n    \"user\": \"systemd-resolve\",\n    \"inode\": 26958,\n    \"program_name\": \"systemd-resolve\",\n    \"kind\": \"network\",\n    \"pid\": 887,\n    \"local_port\": \"domain\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": \"tcp\",\n    \"network_protocol\": \"ipv4\"\n  },\n  {\n    \"proto\": \"tcp\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"0.0.0.0\",\n    \"foreign_address\": \"0.0.0.0\",\n    \"state\": \"LISTEN\",\n    \"user\": \"root\",\n    \"inode\": 30499,\n    \"program_name\": \"sshd\",\n    \"kind\": \"network\",\n    \"pid\": 1186,\n    \"local_port\": \"ssh\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": \"tcp\",\n    \"network_protocol\": \"ipv4\"\n  },\n  {\n    \"proto\": \"tcp\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"localhost\",\n    \"foreign_address\": \"localhost\",\n    \"state\": \"ESTABLISHED\",\n    \"user\": \"root\",\n    \"inode\": 46829,\n    \"program_name\": \"sshd: root\",\n    \"kind\": \"network\",\n    \"pid\": 2242,\n    \"local_port\": \"ssh\",\n    \"foreign_port\": \"52186\",\n    \"transport_protocol\": \"tcp\",\n    \"network_protocol\": \"ipv4\",\n    \"foreign_port_num\": 52186\n  },\n  {\n    \"proto\": \"tcp\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"localhost\",\n    \"foreign_address\": \"localhost\",\n    \"state\": \"ESTABLISHED\",\n    \"user\": \"root\",\n    \"inode\": 46828,\n    \"program_name\": \"ssh\",\n    \"kind\": \"network\",\n    \"pid\": 2241,\n    \"local_port\": \"52186\",\n    \"foreign_port\": \"ssh\",\n    \"transport_protocol\": \"tcp\",\n    \"network_protocol\": \"ipv4\",\n    \"local_port_num\": 52186\n  },\n  {\n    \"proto\": \"tcp6\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"[::]\",\n    \"foreign_address\": \"[::]\",\n    \"state\": \"LISTEN\",\n    \"user\": \"root\",\n    \"inode\": 30510,\n    \"program_name\": \"sshd\",\n    \"kind\": \"network\",\n    \"pid\": 1186,\n    \"local_port\": \"ssh\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": \"tcp\",\n    \"network_protocol\": \"ipv6\"\n  },\n  {\n    \"proto\": \"udp\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"localhost\",\n    \"foreign_address\": \"0.0.0.0\",\n    \"state\": null,\n    \"user\": \"systemd-resolve\",\n    \"inode\": 26957,\n    \"program_name\": \"systemd-resolve\",\n    \"kind\": \"network\",\n    \"pid\": 887,\n    \"local_port\": \"domain\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": \"udp\",\n    \"network_protocol\": \"ipv4\"\n  },\n  {\n    \"proto\": \"raw6\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"[::]\",\n    \"foreign_address\": \"[::]\",\n    \"state\": \"7\",\n    \"user\": \"systemd-network\",\n    \"inode\": 27001,\n    \"program_name\": \"systemd-network\",\n    \"kind\": \"network\",\n    \"pid\": 867,\n    \"local_port\": \"ipv6-icmp\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": null,\n    \"network_protocol\": \"ipv6\"\n  },\n  {\n    \"proto\": \"unix\",\n    \"refcnt\": 2,\n    \"flags\": null,\n    \"type\": \"DGRAM\",\n    \"state\": null,\n    \"inode\": 33322,\n    \"program_name\": \"systemd\",\n    \"path\": \"/run/user/1000/systemd/notify\",\n    \"kind\": \"socket\",\n    \"pid\": 1607\n  },\n  {\n    \"proto\": \"unix\",\n    \"refcnt\": 2,\n    \"flags\": \"ACC\",\n    \"type\": \"SEQPACKET\",\n    \"state\": \"LISTENING\",\n    \"inode\": 20835,\n    \"program_name\": \"init\",\n    \"path\": \"/run/udev/control\",\n    \"kind\": \"socket\",\n    \"pid\": 1\n  }\n]\n```\n```bash\nnetstat -r | jc --netstat -p          # or:  jc -p netstat -r\n```\n```json\n[\n  {\n    \"destination\": \"default\",\n    \"gateway\": \"gateway\",\n    \"genmask\": \"0.0.0.0\",\n    \"route_flags\": \"UG\",\n    \"mss\": 0,\n    \"window\": 0,\n    \"irtt\": 0,\n    \"iface\": \"ens33\",\n    \"kind\": \"route\",\n    \"route_flags_pretty\": [\n      \"UP\",\n      \"GATEWAY\"\n    ]\n  },\n  {\n    \"destination\": \"172.17.0.0\",\n    \"gateway\": \"0.0.0.0\",\n    \"genmask\": \"255.255.0.0\",\n    \"route_flags\": \"U\",\n    \"mss\": 0,\n    \"window\": 0,\n    \"irtt\": 0,\n    \"iface\": \"docker0\",\n    \"kind\": \"route\",\n    \"route_flags_pretty\": [\n      \"UP\"\n    ]\n  },\n  {\n    \"destination\": \"192.168.71.0\",\n    \"gateway\": \"0.0.0.0\",\n    \"genmask\": \"255.255.255.0\",\n    \"route_flags\": \"U\",\n    \"mss\": 0,\n    \"window\": 0,\n    \"irtt\": 0,\n    \"iface\": \"ens33\",\n    \"kind\": \"route\",\n    \"route_flags_pretty\": [\n      \"UP\"\n    ]\n  }\n]\n```\n```bash\nnetstat -i | jc --netstat -p          # or:  jc -p netstat -i\n```\n```json\n[\n  {\n    \"iface\": \"ens33\",\n    \"mtu\": 1500,\n    \"rx_ok\": 476,\n    \"rx_err\": 0,\n    \"rx_drp\": 0,\n    \"rx_ovr\": 0,\n    \"tx_ok\": 312,\n    \"tx_err\": 0,\n    \"tx_drp\": 0,\n    \"tx_ovr\": 0,\n    \"flg\": \"BMRU\",\n    \"kind\": \"interface\"\n  },\n  {\n    \"iface\": \"lo\",\n    \"mtu\": 65536,\n    \"rx_ok\": 0,\n    \"rx_err\": 0,\n    \"rx_drp\": 0,\n    \"rx_ovr\": 0,\n    \"tx_ok\": 0,\n    \"tx_err\": 0,\n    \"tx_drp\": 0,\n    \"tx_ovr\": 0,\n    \"flg\": \"LRU\",\n    \"kind\": \"interface\"\n  }\n]\n```\n### nmcli\n```bash\nnmcli connection show ens33 | jc --nmcli -p          # or jc -p nmcli connection show ens33\n```\n```json\n[\n  {\n    \"connection_id\": \"ens33\",\n    \"connection_uuid\": \"d92ece08-9e02-47d5-b2d2-92c80e155744\",\n    \"connection_stable_id\": null,\n    \"connection_type\": \"802-3-ethernet\",\n    \"connection_interface_name\": \"ens33\",\n    \"connection_autoconnect\": \"yes\",\n    \"ip4_address_1\": \"192.168.71.180/24\",\n    \"ip4_gateway\": \"192.168.71.2\",\n    \"ip4_route_1\": {\n      \"dst\": \"0.0.0.0/0\",\n      \"nh\": \"192.168.71.2\",\n      \"mt\": 100\n    },\n    \"ip4_route_2\": {\n      \"dst\": \"192.168.71.0/24\",\n      \"nh\": \"0.0.0.0\",\n      \"mt\": 100\n    },\n    \"ip4_dns_1\": \"192.168.71.2\",\n    \"ip4_domain_1\": \"localdomain\",\n    \"dhcp4_option_1\": {\n      \"name\": \"broadcast_address\",\n      \"value\": \"192.168.71.255\"\n    },\n    \"ip6_address_1\": \"fe80::c1cb:715d:bc3e:b8a0/64\",\n    \"ip6_gateway\": null,\n    \"ip6_route_1\": {\n      \"dst\": \"fe80::/64\",\n      \"nh\": \"::\",\n      \"mt\": 100\n    }\n  }\n]\n```\n### ntpq\n```bash\nntpq -p | jc --ntpq -p          # or:  jc -p ntpq -p\n```\n```json\n[\n  {\n    \"remote\": \"44.190.6.254\",\n    \"refid\": \"127.67.113.92\",\n    \"st\": 2,\n    \"t\": \"u\",\n    \"when\": 1,\n    \"poll\": 64,\n    \"reach\": 1,\n    \"delay\": 23.399,\n    \"offset\": -2.805,\n    \"jitter\": 2.131,\n    \"state\": null\n  },\n  {\n    \"remote\": \"mirror1.sjc02.s\",\n    \"refid\": \"216.218.254.202\",\n    \"st\": 2,\n    \"t\": \"u\",\n    \"when\": 2,\n    \"poll\": 64,\n    \"reach\": 1,\n    \"delay\": 29.325,\n    \"offset\": 1.044,\n    \"jitter\": 4.069,\n    \"state\": null\n  }\n]\n```\n### /etc/passwd file\n```bash\ncat /etc/passwd | jc --passwd -p\n```\n```json\n[\n  {\n    \"username\": \"nobody\",\n    \"password\": \"*\",\n    \"uid\": -2,\n    \"gid\": -2,\n    \"comment\": \"Unprivileged User\",\n    \"home\": \"/var/empty\",\n    \"shell\": \"/usr/bin/false\"\n  },\n  {\n    \"username\": \"root\",\n    \"password\": \"*\",\n    \"uid\": 0,\n    \"gid\": 0,\n    \"comment\": \"System Administrator\",\n    \"home\": \"/var/root\",\n    \"shell\": \"/bin/sh\"\n  },\n  {\n    \"username\": \"daemon\",\n    \"password\": \"*\",\n    \"uid\": 1,\n    \"gid\": 1,\n    \"comment\": \"System Services\",\n    \"home\": \"/var/root\",\n    \"shell\": \"/usr/bin/false\"\n  }\n]\n```\n### pidstat\n```bash\npidstat -hl | jc --pidstat -p          # or  jc -p pidstat -hl\n```\n```json\n[\n  {\n    \"time\": 1646859134,\n    \"uid\": 0,\n    \"pid\": 1,\n    \"percent_usr\": 0.0,\n    \"percent_system\": 0.03,\n    \"percent_guest\": 0.0,\n    \"percent_cpu\": 0.03,\n    \"cpu\": 0,\n    \"command\": \"/usr/lib/systemd/systemd --switched-root --system...\"\n  },\n  {\n    \"time\": 1646859134,\n    \"uid\": 0,\n    \"pid\": 6,\n    \"percent_usr\": 0.0,\n    \"percent_system\": 0.0,\n    \"percent_guest\": 0.0,\n    \"percent_cpu\": 0.0,\n    \"cpu\": 0,\n    \"command\": \"ksoftirqd/0\"\n  },\n  {\n    \"time\": 1646859134,\n    \"uid\": 0,\n    \"pid\": 2263,\n    \"percent_usr\": 0.0,\n    \"percent_system\": 0.0,\n    \"percent_guest\": 0.0,\n    \"percent_cpu\": 0.0,\n    \"cpu\": 0,\n    \"command\": \"kworker/0:0\"\n  }\n]\n```\n### ping\n```bash\nping 8.8.8.8 -c 3 | jc --ping -p          # or:  jc -p ping 8.8.8.8 -c 3\n```\n```json\n{\n  \"destination_ip\": \"8.8.8.8\",\n  \"data_bytes\": 56,\n  \"pattern\": null,\n  \"destination\": \"8.8.8.8\",\n  \"packets_transmitted\": 3,\n  \"packets_received\": 3,\n  \"packet_loss_percent\": 0.0,\n  \"duplicates\": 0,\n  \"time_ms\": 2005.0,\n  \"round_trip_ms_min\": 23.835,\n  \"round_trip_ms_avg\": 30.46,\n  \"round_trip_ms_max\": 34.838,\n  \"round_trip_ms_stddev\": 4.766,\n  \"responses\": [\n    {\n      \"type\": \"reply\",\n      \"timestamp\": null,\n      \"bytes\": 64,\n      \"response_ip\": \"8.8.8.8\",\n      \"icmp_seq\": 1,\n      \"ttl\": 118,\n      \"time_ms\": 23.8,\n      \"duplicate\": false\n    },\n    {\n      \"type\": \"reply\",\n      \"timestamp\": null,\n      \"bytes\": 64,\n      \"response_ip\": \"8.8.8.8\",\n      \"icmp_seq\": 2,\n      \"ttl\": 118,\n      \"time_ms\": 34.8,\n      \"duplicate\": false\n    },\n    {\n      \"type\": \"reply\",\n      \"timestamp\": null,\n      \"bytes\": 64,\n      \"response_ip\": \"8.8.8.8\",\n      \"icmp_seq\": 3,\n      \"ttl\": 118,\n      \"time_ms\": 32.7,\n      \"duplicate\": false\n    }\n  ]\n}\n```\n### pip list\n```bash\npip list | jc --pip-list -p          # or:  jc -p pip list          # or:  jc -p pip3 list\n```\n```json\n[\n  {\n    \"package\": \"ansible\",\n    \"version\": \"2.8.5\"\n  },\n  {\n    \"package\": \"antlr4-python3-runtime\",\n    \"version\": \"4.7.2\"\n  },\n  {\n    \"package\": \"asn1crypto\",\n    \"version\": \"0.24.0\"\n  }\n]\n```\n### pip show\n```bash\npip show wrapt wheel | jc --pip-show -p          # or:  jc -p pip show wrapt wheel          # or:  jc -p pip3 show wrapt wheel\n```\n```json\n[\n  {\n    \"name\": \"wrapt\",\n    \"version\": \"1.11.2\",\n    \"summary\": \"Module for decorators, wrappers and monkey patching.\",\n    \"home_page\": \"https://github.com/GrahamDumpleton/wrapt\",\n    \"author\": \"Graham Dumpleton\",\n    \"author_email\": \"Graham.Dumpleton@gmail.com\",\n    \"license\": \"BSD\",\n    \"location\": \"/usr/local/lib/python3.7/site-packages\",\n    \"requires\": null,\n    \"required_by\": \"astroid\"\n  },\n  {\n    \"name\": \"wheel\",\n    \"version\": \"0.33.4\",\n    \"summary\": \"A built-package format for Python.\",\n    \"home_page\": \"https://github.com/pypa/wheel\",\n    \"author\": \"Daniel Holth\",\n    \"author_email\": \"dholth@fastmail.fm\",\n    \"license\": \"MIT\",\n    \"location\": \"/usr/local/lib/python3.7/site-packages\",\n    \"requires\": null,\n    \"required_by\": null\n  }\n]\n```\n### PLIST files\n```bash\ncat info.plist | jc --plist -p\n```\n```json\n{\n  \"NSAppleScriptEnabled\": true,\n  \"LSMultipleInstancesProhibited\": true,\n  \"CFBundleInfoDictionaryVersion\": \"6.0\",\n  \"DTPlatformVersion\": \"GM\",\n  \"CFBundleIconFile\": \"GarageBand.icns\",\n  \"CFBundleName\": \"GarageBand\",\n  \"DTSDKName\": \"macosx10.13internal\",\n  \"NSSupportsAutomaticGraphicsSwitching\": true,\n  \"RevisionDate\": \"2018-12-03_14:10:56\",\n  \"UTImportedTypeDeclarations\": [\n    {\n      \"UTTypeConformsTo\": [\n        \"public.data\",\n        \"public.content\"\n      ]\n    }\n  ]\n}\n```\n### postconf -M\n```bash\npostconf -M | jc --postconf -p          # or jc -p postconf -M\n```\n```json\n[\n  {\n    \"service_name\": \"smtp\",\n    \"service_type\": \"inet\",\n    \"private\": false,\n    \"unprivileged\": null,\n    \"chroot\": true,\n    \"wake_up_time\": null,\n    \"process_limit\": null,\n    \"command\": \"smtpd\",\n    \"no_wake_up_before_first_use\": null\n  },\n  {\n    \"service_name\": \"pickup\",\n    \"service_type\": \"unix\",\n    \"private\": false,\n    \"unprivileged\": null,\n    \"chroot\": true,\n    \"wake_up_time\": 60,\n    \"process_limit\": 1,\n    \"command\": \"pickup\",\n    \"no_wake_up_before_first_use\": false\n  }\n]\n```\n### ps\n```bash\nps -ef | jc --ps -p          # or:  jc -p ps -ef\n```\n```json\n[\n  {\n    \"uid\": \"root\",\n    \"pid\": 1,\n    \"ppid\": 0,\n    \"c\": 0,\n    \"stime\": \"Nov01\",\n    \"tty\": null,\n    \"time\": \"00:00:11\",\n    \"cmd\": \"/usr/lib/systemd/systemd --switched-root --system --deserialize 22\"\n  },\n  {\n    \"uid\": \"root\",\n    \"pid\": 2,\n    \"ppid\": 0,\n    \"c\": 0,\n    \"stime\": \"Nov01\",\n    \"tty\": null,\n    \"time\": \"00:00:00\",\n    \"cmd\": \"[kthreadd]\"\n  },\n  {\n    \"uid\": \"root\",\n    \"pid\": 4,\n    \"ppid\": 2,\n    \"c\": 0,\n    \"stime\": \"Nov01\",\n    \"tty\": null,\n    \"time\": \"00:00:00\",\n    \"cmd\": \"[kworker/0:0H]\"\n  }\n]\n```\n```bash\nps axu | jc --ps -p          # or:  jc -p ps axu\n```\n```json\n[\n  {\n    \"user\": \"root\",\n    \"pid\": 1,\n    \"cpu_percent\": 0.0,\n    \"mem_percent\": 0.1,\n    \"vsz\": 128072,\n    \"rss\": 6784,\n    \"tty\": null,\n    \"stat\": \"Ss\",\n    \"start\": \"Nov09\",\n    \"time\": \"0:08\",\n    \"command\": \"/usr/lib/systemd/systemd --switched-root --system --deserialize 22\"\n  },\n  {\n    \"user\": \"root\",\n    \"pid\": 2,\n    \"cpu_percent\": 0.0,\n    \"mem_percent\": 0.0,\n    \"vsz\": 0,\n    \"rss\": 0,\n    \"tty\": null,\n    \"stat\": \"S\",\n    \"start\": \"Nov09\",\n    \"time\": \"0:00\",\n    \"command\": \"[kthreadd]\"\n  },\n  {\n    \"user\": \"root\",\n    \"pid\": 4,\n    \"cpu_percent\": 0.0,\n    \"mem_percent\": 0.0,\n    \"vsz\": 0,\n    \"rss\": 0,\n    \"tty\": null,\n    \"stat\": \"S<\",\n    \"start\": \"Nov09\",\n    \"time\": \"0:00\",\n    \"command\": \"[kworker/0:0H]\"\n  }\n]\n```\n### route\n```bash\nroute -ee | jc --route -p          # or:  jc -p route -ee\n```\n```json\n[\n  {\n    \"destination\": \"default\",\n    \"gateway\": \"_gateway\",\n    \"genmask\": \"0.0.0.0\",\n    \"flags\": \"UG\",\n    \"metric\": 202,\n    \"ref\": 0,\n    \"use\": 0,\n    \"iface\": \"ens33\",\n    \"mss\": 0,\n    \"window\": 0,\n    \"irtt\": 0,\n    \"flags_pretty\": [\n      \"UP\",\n      \"GATEWAY\"\n    ]\n  },\n  {\n    \"destination\": \"192.168.71.0\",\n    \"gateway\": \"0.0.0.0\",\n    \"genmask\": \"255.255.255.0\",\n    \"flags\": \"U\",\n    \"metric\": 202,\n    \"ref\": 0,\n    \"use\": 0,\n    \"iface\": \"ens33\",\n    \"mss\": 0,\n    \"window\": 0,\n    \"irtt\": 0,\n    \"flags_pretty\": [\n      \"UP\"\n    ]\n  }\n]\n```\n### rpm -qi\n```bash\nrpm_qia | jc --rpm_qi -p          # or:  jc -p rpm -qia\n```\n```json\n[\n  {\n    \"name\": \"make\",\n    \"epoch\": 1,\n    \"version\": \"3.82\",\n    \"release\": \"24.el7\",\n    \"architecture\": \"x86_64\",\n    \"install_date\": \"Wed 16 Oct 2019 09:21:42 AM PDT\",\n    \"group\": \"Development/Tools\",\n    \"size\": 1160660,\n    \"license\": \"GPLv2+\",\n    \"signature\": \"RSA/SHA256, Thu 22 Aug 2019 02:34:59 PM PDT, Key ID 24c6a8a7f4a80eb5\",\n    \"source_rpm\": \"make-3.82-24.el7.src.rpm\",\n    \"build_date\": \"Thu 08 Aug 2019 05:47:25 PM PDT\",\n    \"build_host\": \"x86-01.bsys.centos.org\",\n    \"relocations\": \"(not relocatable)\",\n    \"packager\": \"CentOS BuildSystem <http://bugs.centos.org>\",\n    \"vendor\": \"CentOS\",\n    \"url\": \"http://www.gnu.org/software/make/\",\n    \"summary\": \"A GNU tool which simplifies the build process for users\",\n    \"description\": \"A GNU tool for controlling the generation of executables and other...\",\n    \"build_epoch\": 1565311645,\n    \"build_epoch_utc\": null,\n    \"install_date_epoch\": 1571242902,\n    \"install_date_epoch_utc\": null\n  },\n  {\n    \"name\": \"kbd-legacy\",\n    \"version\": \"1.15.5\",\n    \"release\": \"15.el7\",\n    \"architecture\": \"noarch\",\n    \"install_date\": \"Thu 15 Aug 2019 10:53:08 AM PDT\",\n    \"group\": \"System Environment/Base\",\n    \"size\": 503608,\n    \"license\": \"GPLv2+\",\n    \"signature\": \"RSA/SHA256, Mon 12 Nov 2018 07:17:49 AM PST, Key ID 24c6a8a7f4a80eb5\",\n    \"source_rpm\": \"kbd-1.15.5-15.el7.src.rpm\",\n    \"build_date\": \"Tue 30 Oct 2018 03:40:00 PM PDT\",\n    \"build_host\": \"x86-01.bsys.centos.org\",\n    \"relocations\": \"(not relocatable)\",\n    \"packager\": \"CentOS BuildSystem <http://bugs.centos.org>\",\n    \"vendor\": \"CentOS\",\n    \"url\": \"http://ftp.altlinux.org/pub/people/legion/kbd\",\n    \"summary\": \"Legacy data for kbd package\",\n    \"description\": \"The kbd-legacy package contains original keymaps for kbd package...\",\n    \"build_epoch\": 1540939200,\n    \"build_epoch_utc\": null,\n    \"install_date_epoch\": 1565891588,\n    \"install_date_epoch_utc\": null\n  }\n]\n```\n### rsync\n```bash\nrsync -i -a source/ dest | jc --rsync -p          # or jc -p rsync -i -a source/ dest\n```\n```json\n[\n  {\n    \"summary\": {\n      \"sent\": 1708,\n      \"received\": 8209,\n      \"bytes_sec\": 19834.0,\n      \"total_size\": 235,\n      \"speedup\": 0.02\n    },\n    \"files\": [\n      {\n        \"filename\": \"./\",\n        \"metadata\": \".d..t......\",\n        \"update_type\": \"not updated\",\n        \"file_type\": \"directory\",\n        \"checksum_or_value_different\": false,\n        \"size_different\": false,\n        \"modification_time_different\": true,\n        \"permissions_different\": false,\n        \"owner_different\": false,\n        \"group_different\": false,\n        \"acl_different\": false,\n        \"extended_attribute_different\": false\n      }\n    ]\n  }\n]\n```\n### sfdisk\n```bash\nsfdisk -l | jc --sfdisk -p          # or jc -p sfdisk -l\n```\n```json\n[\n  {\n    \"disk\": \"/dev/sda\",\n    \"cylinders\": 2610,\n    \"heads\": 255,\n    \"sectors_per_track\": 63,\n    \"units\": \"cylinders of 8225280 bytes, blocks of 1024 bytes, counting from 0\",\n    \"partitions\": [\n      {\n        \"device\": \"/dev/sda1\",\n        \"boot\": true,\n        \"start\": 0,\n        \"end\": 130,\n        \"cyls\": 131,\n        \"blocks\": 1048576,\n        \"id\": \"83\",\n        \"system\": \"Linux\"\n      },\n      {\n        \"device\": \"/dev/sda2\",\n        \"boot\": false,\n        \"start\": 130,\n        \"end\": 2610,\n        \"cyls\": 2481,\n        \"blocks\": 19921920,\n        \"id\": \"8e\",\n        \"system\": \"Linux LVM\"\n      },\n      {\n        \"device\": \"/dev/sda3\",\n        \"boot\": false,\n        \"start\": 0,\n        \"end\": null,\n        \"cyls\": 0,\n        \"blocks\": 0,\n        \"id\": \"0\",\n        \"system\": \"Empty\"\n      },\n      {\n        \"device\": \"/dev/sda4\",\n        \"boot\": false,\n        \"start\": 0,\n        \"end\": null,\n        \"cyls\": 0,\n        \"blocks\": 0,\n        \"id\": \"0\",\n        \"system\": \"Empty\"\n      }\n    ]\n  },\n  {\n    \"disk\": \"/dev/mapper/centos-root\",\n    \"cylinders\": 2218,\n    \"heads\": 255,\n    \"sectors_per_track\": 63\n  },\n  {\n    \"disk\": \"/dev/mapper/centos-swap\",\n    \"cylinders\": 261,\n    \"heads\": 255,\n    \"sectors_per_track\": 63\n  }\n]\n```\n### /etc/shadow file\n```bash\ncat /etc/shadow | jc --shadow -p\n```\n```json\n[\n  {\n    \"username\": \"root\",\n    \"password\": \"*\",\n    \"last_changed\": 18113,\n    \"minimum\": 0,\n    \"maximum\": 99999,\n    \"warn\": 7,\n    \"inactive\": null,\n    \"expire\": null\n  },\n  {\n    \"username\": \"daemon\",\n    \"password\": \"*\",\n    \"last_changed\": 18113,\n    \"minimum\": 0,\n    \"maximum\": 99999,\n    \"warn\": 7,\n    \"inactive\": null,\n    \"expire\": null\n  },\n  {\n    \"username\": \"bin\",\n    \"password\": \"*\",\n    \"last_changed\": 18113,\n    \"minimum\": 0,\n    \"maximum\": 99999,\n    \"warn\": 7,\n    \"inactive\": null,\n    \"expire\": null\n  }\n]\n```\n### ss\n```bash\nss -a | jc --ss -p          # or:  jc -p ss -a\n```\n```json\n[\n  {\n    \"netid\": \"nl\",\n    \"state\": \"UNCONN\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"peer_address\": \"*\",\n    \"channel\": \"rtnl:kernel\"\n  },\n  {\n    \"netid\": \"nl\",\n    \"state\": \"UNCONN\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"peer_address\": \"*\",\n    \"pid\": 893,\n    \"channel\": \"rtnl:systemd-resolve\"\n  },\n  {\n    \"netid\": \"p_raw\",\n    \"state\": \"UNCONN\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"peer_address\": \"*\",\n    \"link_layer\": \"LLDP\",\n    \"interface\": \"ens33\"\n  },\n  {\n    \"netid\": \"u_dgr\",\n    \"state\": \"UNCONN\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_port\": \"93066\",\n    \"peer_address\": \"*\",\n    \"peer_port\": \"0\",\n    \"path\": \"/run/user/1000/systemd/notify\"\n  },\n  {\n    \"netid\": \"u_seq\",\n    \"state\": \"LISTEN\",\n    \"recv_q\": 0,\n    \"send_q\": 128,\n    \"local_port\": \"20699\",\n    \"peer_address\": \"*\",\n    \"peer_port\": \"0\",\n    \"path\": \"/run/udev/control\"\n  },\n  {\n    \"netid\": \"icmp6\",\n    \"state\": \"UNCONN\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"*\",\n    \"local_port\": \"ipv6-icmp\",\n    \"peer_address\": \"*\",\n    \"peer_port\": \"*\",\n    \"interface\": \"ens33\"\n  },\n  {\n    \"netid\": \"udp\",\n    \"state\": \"UNCONN\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"127.0.0.53\",\n    \"local_port\": \"domain\",\n    \"peer_address\": \"0.0.0.0\",\n    \"peer_port\": \"*\",\n    \"interface\": \"lo\"\n  },\n  {\n    \"netid\": \"tcp\",\n    \"state\": \"LISTEN\",\n    \"recv_q\": 0,\n    \"send_q\": 128,\n    \"local_address\": \"127.0.0.53\",\n    \"local_port\": \"domain\",\n    \"peer_address\": \"0.0.0.0\",\n    \"peer_port\": \"*\",\n    \"interface\": \"lo\"\n  },\n  {\n    \"netid\": \"tcp\",\n    \"state\": \"LISTEN\",\n    \"recv_q\": 0,\n    \"send_q\": 128,\n    \"local_address\": \"0.0.0.0\",\n    \"local_port\": \"ssh\",\n    \"peer_address\": \"0.0.0.0\",\n    \"peer_port\": \"*\"\n  },\n  {\n    \"netid\": \"tcp\",\n    \"state\": \"LISTEN\",\n    \"recv_q\": 0,\n    \"send_q\": 128,\n    \"local_address\": \"[::]\",\n    \"local_port\": \"ssh\",\n    \"peer_address\": \"[::]\",\n    \"peer_port\": \"*\"\n  },\n  {\n    \"netid\": \"v_str\",\n    \"state\": \"ESTAB\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"999900439\",\n    \"local_port\": \"1023\",\n    \"peer_address\": \"0\",\n    \"peer_port\": \"976\",\n    \"local_port_num\": 1023,\n    \"peer_port_num\": 976\n  }\n]\n```\n### stat\n```bash\nstat /bin/* | jc --stat -p          # or:  jc -p stat /bin/*\n```\n```json\n[\n  {\n    \"file\": \"/bin/bash\",\n    \"size\": 1113504,\n    \"blocks\": 2176,\n    \"io_blocks\": 4096,\n    \"type\": \"regular file\",\n    \"device\": \"802h/2050d\",\n    \"inode\": 131099,\n    \"links\": 1,\n    \"access\": \"0755\",\n    \"flags\": \"-rwxr-xr-x\",\n    \"uid\": 0,\n    \"user\": \"root\",\n    \"gid\": 0,\n    \"group\": \"root\",\n    \"access_time\": \"2019-11-14 08:18:03.509681766 +0000\",\n    \"modify_time\": \"2019-06-06 22:28:15.000000000 +0000\",\n    \"change_time\": \"2019-08-12 17:21:29.521945390 +0000\",\n    \"birth_time\": null,\n    \"access_time_epoch\": 1573748283,\n    \"access_time_epoch_utc\": 1573719483,\n    \"modify_time_epoch\": 1559885295,\n    \"modify_time_epoch_utc\": 1559860095,\n    \"change_time_epoch\": 1565655689,\n    \"change_time_epoch_utc\": 1565630489,\n    \"birth_time_epoch\": null,\n    \"birth_time_epoch_utc\": null\n  },\n  {\n    \"file\": \"/bin/btrfs\",\n    \"size\": 716464,\n    \"blocks\": 1400,\n    \"io_blocks\": 4096,\n    \"type\": \"regular file\",\n    \"device\": \"802h/2050d\",\n    \"inode\": 131100,\n    \"links\": 1,\n    \"access\": \"0755\",\n    \"flags\": \"-rwxr-xr-x\",\n    \"uid\": 0,\n    \"user\": \"root\",\n    \"gid\": 0,\n    \"group\": \"root\",\n    \"access_time\": \"2019-11-14 08:18:28.990834276 +0000\",\n    \"modify_time\": \"2018-03-12 23:04:27.000000000 +0000\",\n    \"change_time\": \"2019-08-12 17:21:29.545944399 +0000\",\n    \"birth_time\": null,\n    \"access_time_epoch\": 1573748308,\n    \"access_time_epoch_utc\": 1573719508,\n    \"modify_time_epoch\": 1520921067,\n    \"modify_time_epoch_utc\": 1520895867,\n    \"change_time_epoch\": 1565655689,\n    \"change_time_epoch_utc\": 1565630489,\n    \"birth_time_epoch\": null,\n    \"birth_time_epoch_utc\": null\n  }\n]\n```\n### sysctl\n```bash\nsysctl -a | jc --sysctl -p          # or:  jc -p sysctl -a\n```\n```json\n{\n  \"user.cs_path\": \"/usr/bin:/bin:/usr/sbin:/sbin\",\n  \"user.bc_base_max\": 99,\n  \"user.bc_dim_max\": 2048,\n  \"user.bc_scale_max\": 99,\n  \"user.bc_string_max\": 1000,\n  \"user.coll_weights_max\": 2,\n  \"user.expr_nest_max\": 32\n}\n```\n### Syslog strings (RFC 5424)\n```bash\ncat syslog.txt | jc --syslog -p\n```\n```json\n[\n  {\n    \"priority\": 35,\n    \"version\": 1,\n    \"timestamp\": \"2003-10-11T22:14:15.003Z\",\n    \"hostname\": \"mymachine.example.com\",\n    \"appname\": \"evntslog\",\n    \"proc_id\": null,\n    \"msg_id\": \"ID47\",\n    \"structured_data\": [\n      {\n        \"identity\": \"exampleSDID@32473\",\n        \"parameters\": {\n          \"iut\": \"3\",\n          \"eventSource\": \"Application\",\n          \"eventID\": \"1011\"\n        }\n      },\n      {\n        \"identity\": \"examplePriority@32473\",\n        \"parameters\": {\n          \"class\": \"high\"\n        }\n      }\n    ],\n    \"message\": \"unauthorized attempt\",\n    \"timestamp_epoch\": 1065935655,\n    \"timestamp_epoch_utc\": 1065910455\n  }\n]\n```\n### Syslog strings (RFC 3164)\n```bash\ncat syslog.txt | jc --syslog-bsd -p\n```\n```json\n[\n  {\n    \"priority\": 34,\n    \"date\": \"Oct 11 22:14:15\",\n    \"hostname\": \"mymachine\",\n    \"tag\": \"su\",\n    \"content\": \"'su root' failed for lonvick on /dev/pts/8\"\n  }\n]\n```\n### systemctl\n```bash\nsystemctl -a | jc --systemctl -p          # or:  jc -p systemctl -a\n```\n```json\n[\n  {\n    \"unit\": \"proc-sys-fs-binfmt_misc.automount\",\n    \"load\": \"loaded\",\n    \"active\": \"active\",\n    \"sub\": \"waiting\",\n    \"description\": \"Arbitrary Executable File Formats File System Automount Point\"\n  },\n  {\n    \"unit\": \"dev-block-8:2.device\",\n    \"load\": \"loaded\",\n    \"active\": \"active\",\n    \"sub\": \"plugged\",\n    \"description\": \"LVM PV 3klkIj-w1qk-DkJi-0XBJ-y3o7-i2Ac-vHqWBM on /dev/sda2 2\"\n  },\n  {\n    \"unit\": \"dev-cdrom.device\",\n    \"load\": \"loaded\",\n    \"active\": \"active\",\n    \"sub\": \"plugged\",\n    \"description\": \"VMware_Virtual_IDE_CDROM_Drive\"\n  }\n]\n```\n### systemctl list-jobs\n```bash\nsystemctl list-jobs | jc --systemctl-lj -p          # or:  jc -p systemctl list-jobs\n```\n```json\n[\n  {\n    \"job\": 3543,\n    \"unit\": \"nginxAfterGlusterfs.service\",\n    \"type\": \"start\",\n    \"state\": \"waiting\"\n  },\n  {\n    \"job\": 3545,\n    \"unit\": \"glusterReadyForLocalhostMount.service\",\n    \"type\": \"start\",\n    \"state\": \"running\"\n  },\n  {\n    \"job\": 3506,\n    \"unit\": \"nginx.service\",\n    \"type\": \"start\",\n    \"state\": \"waiting\"\n  }\n]\n```\n### systemctl list-sockets\n```bash\nsystemctl list-sockets | jc --systemctl-ls -p          # or:  jc -p systemctl list-sockets\n```\n```json\n[\n  {\n    \"listen\": \"/dev/log\",\n    \"unit\": \"systemd-journald.socket\",\n    \"activates\": \"systemd-journald.service\"\n  },\n  {\n    \"listen\": \"/run/dbus/system_bus_socket\",\n    \"unit\": \"dbus.socket\",\n    \"activates\": \"dbus.service\"\n  },\n  {\n    \"listen\": \"/run/dmeventd-client\",\n    \"unit\": \"dm-event.socket\",\n    \"activates\": \"dm-event.service\"\n  }\n]\n```\n### systemctl list-unit-files\n```bash\nsystemctl list-unit-files | jc --systemctl-luf -p          # or:  jc -p systemctl list-unit-files\n```\n```json\n[\n  {\n    \"unit_file\": \"proc-sys-fs-binfmt_misc.automount\",\n    \"state\": \"static\"\n  },\n  {\n    \"unit_file\": \"dev-hugepages.mount\",\n    \"state\": \"static\"\n  },\n  {\n    \"unit_file\": \"dev-mqueue.mount\",\n    \"state\": \"static\"\n  }\n]\n```\n### systeminfo\n```bash\nsysteminfo | jc --systeminfo -p          # or:  jc -p systeminfo\n```\n```json\n{\n  \"host_name\": \"TESTLAPTOP\",\n  \"os_name\": \"Microsoft Windows 10 Enterprise\",\n  \"os_version\": \"10.0.17134 N/A Build 17134\",\n  \"os_manufacturer\": \"Microsoft Corporation\",\n  \"os_configuration\": \"Member Workstation\",\n  \"os_build_type\": \"Multiprocessor Free\",\n  \"registered_owner\": \"Test, Inc.\",\n  \"registered_organization\": \"Test, Inc.\",\n  \"product_id\": \"11111-11111-11111-AA111\",\n  \"original_install_date\": \"3/26/2019, 3:51:30 PM\",\n  \"system_boot_time\": \"3/30/2021, 6:13:59 AM\",\n  \"system_manufacturer\": \"Dell Inc.\",\n  \"system_model\": \"Precision 5530\",\n  \"system_type\": \"x64-based PC\",\n  \"processors\": [\n    \"Intel64 Family 6 Model 158 Stepping 10 GenuineIntel ~2592 Mhz\"\n  ],\n  \"bios_version\": \"Dell Inc. 1.16.2, 4/21/2020\",\n  \"windows_directory\": \"C:\\\\WINDOWS\",\n  \"system_directory\": \"C:\\\\WINDOWS\\\\system32\",\n  \"boot_device\": \"\\\\Device\\\\HarddiskVolume2\",\n  \"system_locale\": \"en-us;English (United States)\",\n  \"input_locale\": \"en-us;English (United States)\",\n  \"time_zone\": \"(UTC+00:00) UTC\",\n  \"total_physical_memory_mb\": 32503,\n  \"available_physical_memory_mb\": 19743,\n  \"virtual_memory_max_size_mb\": 37367,\n  \"virtual_memory_available_mb\": 22266,\n  \"virtual_memory_in_use_mb\": 15101,\n  \"page_file_locations\": \"C:\\\\pagefile.sys\",\n  \"domain\": \"test.com\",\n  \"logon_server\": \"\\\\\\\\TESTDC01\",\n  \"hotfixs\": [\n    \"KB2693643\",\n    \"KB4601054\"\n  ],\n  \"network_cards\": [\n    {\n      \"name\": \"Intel(R) Wireless-AC 9260 160MHz\",\n      \"connection_name\": \"Wi-Fi\",\n      \"status\": null,\n      \"dhcp_enabled\": true,\n      \"dhcp_server\": \"192.168.2.1\",\n      \"ip_addresses\": [\n        \"192.168.2.219\"\n      ]\n    }\n  ],\n  \"hyperv_requirements\": {\n    \"vm_monitor_mode_extensions\": true,\n    \"virtualization_enabled_in_firmware\": true,\n    \"second_level_address_translation\": false,\n    \"data_execution_prevention_available\": true\n  },\n  \"original_install_date_epoch\": 1553640690,\n  \"original_install_date_epoch_utc\": 1553615490,\n  \"system_boot_time_epoch\": 1617110039,\n  \"system_boot_time_epoch_utc\": 1617084839\n}\n```\n### /usr/bin/time\n```bash\n/usr/bin/time --verbose -o timefile.out sleep 2.5; cat timefile.out | jc --time -p\n```\n```json\n{\n  \"command_being_timed\": \"sleep 2.5\",\n  \"user_time\": 0.0,\n  \"system_time\": 0.0,\n  \"cpu_percent\": 0,\n  \"elapsed_time\": \"0:02.50\",\n  \"average_shared_text_size\": 0,\n  \"average_unshared_data_size\": 0,\n  \"average_stack_size\": 0,\n  \"average_total_size\": 0,\n  \"maximum_resident_set_size\": 2084,\n  \"average_resident_set_size\": 0,\n  \"major_pagefaults\": 0,\n  \"minor_pagefaults\": 72,\n  \"voluntary_context_switches\": 2,\n  \"involuntary_context_switches\": 1,\n  \"swaps\": 0,\n  \"block_input_operations\": 0,\n  \"block_output_operations\": 0,\n  \"messages_sent\": 0,\n  \"messages_received\": 0,\n  \"signals_delivered\": 0,\n  \"page_size\": 4096,\n  \"exit_status\": 0,\n  \"elapsed_time_hours\": 0,\n  \"elapsed_time_minutes\": 0,\n  \"elapsed_time_seconds\": 2,\n  \"elapsed_time_centiseconds\": 50,\n  \"elapsed_time_total_seconds\": 2.5\n}\n```\n### timedatectl status\n```bash\ntimedatectl | jc --timedatectl -p          # or: jc -p timedatectl\n```\n```json\n{\n  \"local_time\": \"Tue 2020-03-10 17:53:21 PDT\",\n  \"universal_time\": \"Wed 2020-03-11 00:53:21 UTC\",\n  \"rtc_time\": \"Wed 2020-03-11 00:53:21\",\n  \"time_zone\": \"America/Los_Angeles (PDT, -0700)\",\n  \"ntp_enabled\": true,\n  \"ntp_synchronized\": true,\n  \"rtc_in_local_tz\": false,\n  \"dst_active\": true,\n  \"epoch_utc\": 1583888001\n}\n```\n### Timestamp strings (UNIX Epoch)\n```bash\necho '1658599410' | jc --timestamp -p\n```\n```json\n{\n  \"naive\": {\n    \"year\": 2022,\n    \"month\": \"Jul\",\n    \"month_num\": 7,\n    \"day\": 23,\n    \"weekday\": \"Sat\",\n    \"weekday_num\": 6,\n    \"hour\": 11,\n    \"hour_24\": 11,\n    \"minute\": 3,\n    \"second\": 30,\n    \"period\": \"AM\",\n    \"day_of_year\": 204,\n    \"week_of_year\": 29,\n    \"iso\": \"2022-07-23T11:03:30\"\n  },\n  \"utc\": {\n    \"year\": 2022,\n    \"month\": \"Jul\",\n    \"month_num\": 7,\n    \"day\": 23,\n    \"weekday\": \"Sat\",\n    \"weekday_num\": 6,\n    \"hour\": 6,\n    \"hour_24\": 18,\n    \"minute\": 3,\n    \"second\": 30,\n    \"period\": \"PM\",\n    \"utc_offset\": \"+0000\",\n    \"day_of_year\": 204,\n    \"week_of_year\": 29,\n    \"iso\": \"2022-07-23T18:03:30+00:00\"\n  }\n}\n```\n### tob -b\n```bash\ntop -b -n 1 | jc --top -p          # or jc -p tob -b -n 1\n```\n```json\n[\n  {\n    \"time\": \"11:20:43\",\n    \"uptime\": 118,\n    \"users\": 2,\n    \"load_1m\": 0.0,\n    \"load_5m\": 0.01,\n    \"load_15m\": 0.05,\n    \"tasks_total\": 108,\n    \"tasks_running\": 2,\n    \"tasks_sleeping\": 106,\n    \"tasks_stopped\": 0,\n    \"tasks_zombie\": 0,\n    \"cpu_user\": 5.6,\n    \"cpu_sys\": 11.1,\n    \"cpu_nice\": 0.0,\n    \"cpu_idle\": 83.3,\n    \"cpu_wait\": 0.0,\n    \"cpu_hardware\": 0.0,\n    \"cpu_software\": 0.0,\n    \"cpu_steal\": 0.0,\n    \"mem_total\": 3.7,\n    \"mem_free\": 3.3,\n    \"mem_used\": 0.2,\n    \"mem_buff_cache\": 0.2,\n    \"swap_total\": 2.0,\n    \"swap_free\": 2.0,\n    \"swap_used\": 0.0,\n    \"mem_available\": 3.3,\n    \"processes\": [\n      {\n        \"pid\": 2225,\n        \"user\": \"kbrazil\",\n        \"priority\": 20,\n        \"nice\": 0,\n        \"virtual_mem\": 158.1,\n        \"resident_mem\": 2.2,\n        \"shared_mem\": 1.6,\n        \"status\": \"running\",\n        \"percent_cpu\": 12.5,\n        \"percent_mem\": 0.1,\n        \"time_hundredths\": \"0:00.02\",\n        \"command\": \"top\",\n        \"parent_pid\": 1884,\n        \"uid\": 1000,\n        \"real_uid\": 1000,\n        \"real_user\": \"kbrazil\",\n        \"saved_uid\": 1000,\n        \"saved_user\": \"kbrazil\",\n        \"gid\": 1000,\n        \"group\": \"kbrazil\",\n        \"pgrp\": 2225,\n        \"tty\": \"pts/0\",\n        \"tty_process_gid\": 2225,\n        \"session_id\": 1884,\n        \"thread_count\": 1,\n        \"last_used_processor\": 0,\n        \"time\": \"0:00\",\n        \"swap\": 0.0,\n        \"code\": 0.1,\n        \"data\": 1.0,\n        \"major_page_fault_count\": 0,\n        \"minor_page_fault_count\": 736,\n        \"dirty_pages_count\": 0,\n        \"sleeping_in_function\": null,\n        \"flags\": \"..4.2...\",\n        \"cgroups\": \"1:name=systemd:/user.slice/user-1000.+\",\n        \"supplementary_gids\": [\n          10,\n          1000\n        ],\n        \"supplementary_groups\": [\n          \"wheel\",\n          \"kbrazil\"\n        ],\n        \"thread_gid\": 2225,\n        \"environment_variables\": [\n          \"XDG_SESSION_ID=2\",\n          \"HOSTNAME=localhost\"\n        ],\n        \"major_page_fault_count_delta\": 0,\n        \"minor_page_fault_count_delta\": 4,\n        \"used\": 2.2,\n        \"ipc_namespace_inode\": 4026531839,\n        \"mount_namespace_inode\": 4026531840,\n        \"net_namespace_inode\": 4026531956,\n        \"pid_namespace_inode\": 4026531836,\n        \"user_namespace_inode\": 4026531837,\n        \"nts_namespace_inode\": 4026531838\n      }\n    ]\n  }\n]\n```\n### tracepath\n```bash\ntracepath6 3ffe:2400:0:109::2 | jc --tracepath -p\n```\n```json\n{\n  \"pmtu\": 1480,\n  \"forward_hops\": 2,\n  \"return_hops\": 2,\n  \"hops\": [\n    {\n      \"ttl\": 1,\n      \"guess\": true,\n      \"host\": \"[LOCALHOST]\",\n      \"reply_ms\": null,\n      \"pmtu\": 1500,\n      \"asymmetric_difference\": null,\n      \"reached\": false\n    },\n    {\n      \"ttl\": 1,\n      \"guess\": false,\n      \"host\": \"dust.inr.ac.ru\",\n      \"reply_ms\": 0.411,\n      \"pmtu\": null,\n      \"asymmetric_difference\": null,\n      \"reached\": false\n    },\n    {\n      \"ttl\": 2,\n      \"guess\": false,\n      \"host\": \"dust.inr.ac.ru\",\n      \"reply_ms\": 0.39,\n      \"pmtu\": 1480,\n      \"asymmetric_difference\": 1,\n      \"reached\": false\n    },\n    {\n      \"ttl\": 2,\n      \"guess\": false,\n      \"host\": \"3ffe:2400:0:109::2\",\n      \"reply_ms\": 463.514,\n      \"pmtu\": null,\n      \"asymmetric_difference\": null,\n      \"reached\": true\n    }\n  ]\n}\n```\n### traceroute\n```bash\ntraceroute -m 3 8.8.8.8 | jc --traceroute -p          # or:  jc -p traceroute -m 3 8.8.8.8\n```\n```json\n{\n  \"destination_ip\": \"8.8.8.8\",\n  \"destination_name\": \"8.8.8.8\",\n  \"hops\": [\n    {\n      \"hop\": 1,\n      \"probes\": [\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"192.168.1.254\",\n          \"name\": \"dsldevice.local.net\",\n          \"rtt\": 6.616\n        },\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"192.168.1.254\",\n          \"name\": \"dsldevice.local.net\",\n          \"rtt\": 6.413\n        },\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"192.168.1.254\",\n          \"name\": \"dsldevice.local.net\",\n          \"rtt\": 6.308\n        }\n      ]\n    },\n    {\n      \"hop\": 2,\n      \"probes\": [\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"76.220.24.1\",\n          \"name\": \"76-220-24-1.lightspeed.sntcca.sbcglobal.net\",\n          \"rtt\": 29.367\n        },\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"76.220.24.1\",\n          \"name\": \"76-220-24-1.lightspeed.sntcca.sbcglobal.net\",\n          \"rtt\": 40.197\n        },\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"76.220.24.1\",\n          \"name\": \"76-220-24-1.lightspeed.sntcca.sbcglobal.net\",\n          \"rtt\": 29.162\n        }\n      ]\n    },\n    {\n      \"hop\": 3,\n      \"probes\": []\n    }\n  ]\n}\n```\n### ufw status\n```bash\nufw status verbose  | jc --ufw -p          # or jc -p ufw status verbose\n```\n```json\n{\n  \"status\": \"active\",\n  \"logging\": \"on\",\n  \"logging_level\": \"low\",\n  \"default\": \"deny (incoming), allow (outgoing), disabled (routed)\",\n  \"new_profiles\": \"skip\",\n  \"rules\": [\n    {\n      \"action\": \"ALLOW\",\n      \"action_direction\": \"IN\",\n      \"index\": null,\n      \"network_protocol\": \"ipv4\",\n      \"to_interface\": \"any\",\n      \"to_transport\": \"any\",\n      \"to_service\": null,\n      \"to_ports\": [\n        22\n      ],\n      \"to_ip\": \"0.0.0.0\",\n      \"to_ip_prefix\": 0,\n      \"comment\": null,\n      \"from_ip\": \"0.0.0.0\",\n      \"from_ip_prefix\": 0,\n      \"from_interface\": \"any\",\n      \"from_transport\": \"any\",\n      \"from_port_ranges\": [\n        {\n          \"start\": 0,\n          \"end\": 65535\n        }\n      ],\n      \"from_service\": null\n    },\n    {\n      \"action\": \"ALLOW\",\n      \"action_direction\": \"IN\",\n      \"index\": null,\n      \"network_protocol\": \"ipv4\",\n      \"to_interface\": \"any\",\n      \"to_transport\": \"tcp\",\n      \"to_service\": null,\n      \"to_ports\": [\n        80,\n        443\n      ],\n      \"to_ip\": \"0.0.0.0\",\n      \"to_ip_prefix\": 0,\n      \"comment\": null,\n      \"from_ip\": \"0.0.0.0\",\n      \"from_ip_prefix\": 0,\n      \"from_interface\": \"any\",\n      \"from_transport\": \"any\",\n      \"from_port_ranges\": [\n        {\n          \"start\": 0,\n          \"end\": 65535\n        }\n      ],\n      \"from_service\": null\n    }\n  ]\n}\n```\n### ufw app info [application]\n```bash\nufw app info MSN | jc --ufw-appinfo -p          # or:  jc -p ufw app info MSN\n```\n```json\n[\n  {\n    \"profile\": \"MSN\",\n    \"title\": \"MSN Chat\",\n    \"description\": \"MSN chat protocol (with file transfer and voice)\",\n    \"tcp_list\": [\n      1863,\n      6901\n    ],\n    \"udp_list\": [\n      1863,\n      6901\n    ],\n    \"tcp_ranges\": [\n      {\n        \"start\": 6891,\n        \"end\": 6900\n      }\n    ],\n    \"normalized_tcp_list\": [\n      1863,\n      6901\n    ],\n    \"normalized_tcp_ranges\": [\n      {\n        \"start\": 6891,\n        \"end\": 6900\n      }\n    ],\n    \"normalized_udp_list\": [\n      1863,\n      6901\n    ]\n  }\n]\n```\n### uname -a\n```bash\nuname -a | jc --uname -p          # or:  jc -p uname -a\n```\n```json\n{\n  \"kernel_name\": \"Linux\",\n  \"node_name\": \"user-ubuntu\",\n  \"kernel_release\": \"4.15.0-65-generic\",\n  \"operating_system\": \"GNU/Linux\",\n  \"hardware_platform\": \"x86_64\",\n  \"processor\": \"x86_64\",\n  \"machine\": \"x86_64\",\n  \"kernel_version\": \"#74-Ubuntu SMP Tue Sep 17 17:06:04 UTC 2019\"\n}\n```\n### update-alternatives --get-selections\n```bash\nupdate-alternatives --get-selections | jc --update-alt-gs -p          # or:  jc -p update-alternatives --get-selections\n```\n```json\n[\n  {\n    \"name\": \"arptables\",\n    \"status\": \"auto\",\n    \"current\": \"/usr/sbin/arptables-nft\"\n  },\n  {\n    \"name\": \"awk\",\n    \"status\": \"auto\",\n    \"current\": \"/usr/bin/gawk\"\n  }\n]\n```\n### update-alternatives --query\n```bash\nupdate-alternatives --query editor | jc --update-alt-q -p          # or:  jc -p update-alternatives --query editor\n```\n```json\n{\n  \"name\": \"editor\",\n  \"link\": \"/usr/bin/editor\",\n  \"slaves\": [\n    {\n      \"name\": \"editor.1.gz\",\n      \"path\": \"/usr/share/man/man1/editor.1.gz\"\n    },\n    {\n      \"name\": \"editor.da.1.gz\",\n      \"path\": \"/usr/share/man/da/man1/editor.1.gz\"\n    }\n  ],\n  \"status\": \"auto\",\n  \"best\": \"/bin/nano\",\n  \"value\": \"/bin/nano\",\n  \"alternatives\": [\n    {\n      \"name\": \"/bin/ed\",\n      \"priority\": -100,\n      \"slaves\": [\n        {\n          \"name\": \"editor.1.gz\",\n          \"path\": \"/usr/share/man/man1/ed.1.gz\"\n        }\n      ]\n    },\n    {\n      \"name\": \"/bin/nano\",\n      \"priority\": 40,\n      \"slaves\": [\n        {\n          \"name\": \"editor.1.gz\",\n          \"path\": \"/usr/share/man/man1/nano.1.gz\"\n        }\n      ]\n    }\n  ]\n}\n```\n### upower\n```bash\nupower -i /org/freedesktop/UPower/devices/battery | jc --upower -p          # or jc -p upower -i /org/freedesktop/UPower/devices/battery\n```\n```json\n[\n  {\n    \"native_path\": \"/sys/devices/LNXSYSTM:00/device:00/PNP0C0A:00/power_supply/BAT0\",\n    \"vendor\": \"NOTEBOOK\",\n    \"model\": \"BAT\",\n    \"serial\": \"0001\",\n    \"power_supply\": true,\n    \"updated\": \"Thu 11 Mar 2021 06:28:08 PM UTC\",\n    \"has_history\": true,\n    \"has_statistics\": true,\n    \"detail\": {\n      \"type\": \"battery\",\n      \"present\": true,\n      \"rechargeable\": true,\n      \"state\": \"charging\",\n      \"energy\": 22.3998,\n      \"energy_empty\": 0.0,\n      \"energy_full\": 52.6473,\n      \"energy_full_design\": 62.16,\n      \"energy_rate\": 31.6905,\n      \"voltage\": 12.191,\n      \"time_to_full\": 57.3,\n      \"percentage\": 42.5469,\n      \"capacity\": 84.6964,\n      \"technology\": \"lithium-ion\",\n      \"energy_unit\": \"Wh\",\n      \"energy_empty_unit\": \"Wh\",\n      \"energy_full_unit\": \"Wh\",\n      \"energy_full_design_unit\": \"Wh\",\n      \"energy_rate_unit\": \"W\",\n      \"voltage_unit\": \"V\",\n      \"time_to_full_unit\": \"minutes\"\n    },\n    \"history_charge\": [\n      {\n        \"time\": 1328809335,\n        \"percent_charged\": 42.547,\n        \"status\": \"charging\"\n      },\n      {\n        \"time\": 1328809305,\n        \"percent_charged\": 42.02,\n        \"status\": \"charging\"\n      }\n    ],\n    \"history_rate\": [\n      {\n        \"time\": 1328809335,\n        \"percent_charged\": 31.691,\n        \"status\": \"charging\"\n      }\n    ],\n    \"updated_seconds_ago\": 441975,\n    \"updated_epoch\": 1615516088,\n    \"updated_epoch_utc\": 1615487288\n  }\n]\n```\n### uptime\n```bash\nuptime | jc --uptime -p          # or:  jc -p uptime\n```\n```json\n{\n  \"time\": \"11:35\",\n  \"uptime\": \"3 days, 4:03\",\n  \"users\": 5,\n  \"load_1m\": 1.88,\n  \"load_5m\": 2.0,\n  \"load_15m\": 1.94,\n  \"time_hour\": 11,\n  \"time_minute\": 35,\n  \"time_second\": null,\n  \"uptime_days\": 3,\n  \"uptime_hours\": 4,\n  \"uptime_minutes\": 3,\n  \"uptime_total_seconds\": 273780\n}\n```\n### URL string\n```bash\necho \"http://example.com/test/path?q1=foo&q1=bar&q2=baz#frag\" \\\\\n     | jc --url -p\n```\n```json\n{\n  \"url\": \"http://example.com/test/path?q1=foo&q1=bar&q2=baz#frag\",\n  \"scheme\": \"http\",\n  \"netloc\": \"example.com\",\n  \"path\": \"/test/path\",\n  \"path_list\": [\n    \"test\",\n    \"path\"\n  ],\n  \"query\": \"q1=foo&q1=bar&q2=baz\",\n  \"query_obj\": {\n    \"q1\": [\n      \"foo\",\n      \"bar\"\n    ],\n    \"q2\": [\n      \"baz\"\n    ]\n  },\n  \"fragment\": \"frag\",\n  \"username\": null,\n  \"password\": null,\n  \"hostname\": \"example.com\",\n  \"port\": null,\n  \"encoded\": {\n    \"url\": \"http://example.com/test/path?q1=foo&q1=bar&q2=baz#frag\",\n    \"scheme\": \"http\",\n    \"netloc\": \"example.com\",\n    \"path\": \"/test/path\",\n    \"path_list\": [\n      \"test\",\n      \"path\"\n    ],\n    \"query\": \"q1=foo&q1=bar&q2=baz\",\n    \"fragment\": \"frag\",\n    \"username\": null,\n    \"password\": null,\n    \"hostname\": \"example.com\",\n    \"port\": null\n  },\n  \"decoded\": {\n    \"url\": \"http://example.com/test/path?q1=foo&q1=bar&q2=baz#frag\",\n    \"scheme\": \"http\",\n    \"netloc\": \"example.com\",\n    \"path\": \"/test/path\",\n    \"path_list\": [\n      \"test\",\n      \"path\"\n    ],\n    \"query\": \"q1=foo&q1=bar&q2=baz\",\n    \"fragment\": \"frag\",\n    \"username\": null,\n    \"password\": null,\n    \"hostname\": \"example.com\",\n    \"port\": null\n  }\n}\n```\n### w\n```bash\nw | jc --w -p          # or:  jc -p w\n```\n```json\n[\n  {\n    \"user\": \"root\",\n    \"tty\": \"tty1\",\n    \"from\": null,\n    \"login_at\": \"07:49\",\n    \"idle\": \"1:15m\",\n    \"jcpu\": \"0.00s\",\n    \"pcpu\": \"0.00s\",\n    \"what\": \"-bash\"\n  },\n  {\n    \"user\": \"root\",\n    \"tty\": \"ttyS0\",\n    \"from\": null,\n    \"login_at\": \"06:24\",\n    \"idle\": \"0.00s\",\n    \"jcpu\": \"0.43s\",\n    \"pcpu\": \"0.00s\",\n    \"what\": \"w\"\n  },\n  {\n    \"user\": \"root\",\n    \"tty\": \"pts/0\",\n    \"from\": \"192.168.71.1\",\n    \"login_at\": \"06:29\",\n    \"idle\": \"2:35m\",\n    \"jcpu\": \"0.00s\",\n    \"pcpu\": \"0.00s\",\n    \"what\": \"-bash\"\n  }\n]\n```\n### wc\n```bash\nwc * | jc --wc -p          # or:  jc -p wc *\n```\n```json\n[\n      {\n        \"filename\": \"airport-I.json\",\n        \"lines\": 1,\n        \"words\": 30,\n        \"characters\": 307\n      },\n      {\n        \"filename\": \"airport-I.out\",\n        \"lines\": 15,\n        \"words\": 33,\n        \"characters\": 348\n      },\n      {\n        \"filename\": \"airport-s.json\",\n        \"lines\": 1,\n        \"words\": 202,\n        \"characters\": 2152\n      }\n    ]\n```\n### who\n```bash\nwho | jc --who -p          # or:  jc -p who\n```\n```json\n[\n  {\n    \"user\": \"joeuser\",\n    \"tty\": \"ttyS0\",\n    \"time\": \"2020-03-02 02:52\",\n    \"epoch\": 1583146320\n  },\n  {\n    \"user\": \"joeuser\",\n    \"tty\": \"pts/0\",\n    \"time\": \"2020-03-02 05:15\",\n    \"from\": \"192.168.71.1\",\n    \"epoch\": 1583154900\n  }\n]\n```\n```bash\nwho -a | jc --who -p          # or:  jc -p who -a\n```\n```json\n[\n  {\n    \"event\": \"reboot\",\n    \"time\": \"Feb 7 23:31\",\n    \"pid\": 1,\n    \"epoch\": null\n  },\n  {\n    \"user\": \"joeuser\",\n    \"writeable_tty\": \"+\",\n    \"tty\": \"ttys004\",\n    \"time\": \"Mar 1 16:35\",\n    \"idle\": \".\",\n    \"pid\": 15679,\n    \"from\": \"192.168.1.5\",\n    \"epoch\": null\n  }\n]\n```\n### X.509 PEM and DER certificate files\n```bash\ncat entrust.pem | jc --x509-cert -p\n```\n```json\n[\n  {\n    \"tbs_certificate\": {\n      \"version\": \"v3\",\n      \"serial_number\": \"a6:8b:79:29:00:00:00:00:50:d0:91:f9\",\n      \"signature\": {\n        \"algorithm\": \"sha384_ecdsa\",\n        \"parameters\": null\n      },\n      \"issuer\": {\n        \"country_name\": \"US\",\n        \"organization_name\": \"Entrust, Inc.\",\n        \"organizational_unit_name\": [\n          \"See www.entrust.net/legal-terms\",\n          \"(c) 2012 Entrust, Inc. - for authorized use only\"\n        ],\n        \"common_name\": \"Entrust Root Certification Authority - EC1\"\n      },\n      \"validity\": {\n        \"not_before\": 1355844336,\n        \"not_after\": 2144764536,\n        \"not_before_iso\": \"2012-12-18T15:25:36+00:00\",\n        \"not_after_iso\": \"2037-12-18T15:55:36+00:00\"\n      },\n      \"subject\": {\n        \"country_name\": \"US\",\n        \"organization_name\": \"Entrust, Inc.\",\n        \"organizational_unit_name\": [\n          \"See www.entrust.net/legal-terms\",\n          \"(c) 2012 Entrust, Inc. - for authorized use only\"\n        ],\n        \"common_name\": \"Entrust Root Certification Authority - EC1\"\n      },\n      \"subject_public_key_info\": {\n        \"algorithm\": {\n          \"algorithm\": \"ec\",\n          \"parameters\": \"secp384r1\"\n        },\n        \"public_key\": \"04:84:13:c9:d0:ba:6d:41:7b:e2:6c:d0:eb:55:5f:66:02:1a:24:f4:5b:89:69:47:e3:b8:c2:7d:f1:f2:02:c5:9f:a0:f6:5b:d5:8b:06:19:86:4f:53:10:6d:07:24:27:a1:a0:f8:d5:47:19:61:4c:7d:ca:93:27:ea:74:0c:ef:6f:96:09:fe:63:ec:70:5d:36:ad:67:77:ae:c9:9d:7c:55:44:3a:a2:63:51:1f:f5:e3:62:d4:a9:47:07:3e:cc:20\"\n      },\n      \"issuer_unique_id\": null,\n      \"subject_unique_id\": null,\n      \"extensions\": [\n        {\n          \"extn_id\": \"key_usage\",\n          \"critical\": true,\n          \"extn_value\": [\n            \"key_cert_sign\",\n            \"crl_sign\"\n          ]\n        },\n        {\n          \"extn_id\": \"basic_constraints\",\n          \"critical\": true,\n          \"extn_value\": {\n            \"ca\": true,\n            \"path_len_constraint\": null\n          }\n        },\n        {\n          \"extn_id\": \"key_identifier\",\n          \"critical\": false,\n          \"extn_value\": \"b7:63:e7:1a:dd:8d:e9:08:a6:55:83:a4:e0:6a:50:41:65:11:42:49\"\n        }\n      ]\n    },\n    \"signature_algorithm\": {\n      \"algorithm\": \"sha384_ecdsa\",\n      \"parameters\": null\n    },\n    \"signature_value\": \"30:64:02:30:61:79:d8:e5:42:47:df:1c:ae:53:99:17:b6:6f:1c:7d:e1:bf:11:94:d1:03:88:75:e4:8d:89:a4:8a:77:46:de:6d:61:ef:02:f5:fb:b5:df:cc:fe:4e:ff:fe:a9:e6:a7:02:30:5b:99:d7:85:37:06:b5:7b:08:fd:eb:27:8b:4a:94:f9:e1:fa:a7:8e:26:08:e8:7c:92:68:6d:73:d8:6f:26:ac:21:02:b8:99:b7:26:41:5b:25:60:ae:d0:48:1a:ee:06\"\n  }\n]\n```\n### X.509 PEM and DER certificate request files\n```bash\ncat myserver.csr | jc --x509-csr -p\n```\n```json\n[\n  {\n    \"certification_request_info\": {\n      \"version\": \"v1\",\n      \"subject\": {\n        \"common_name\": \"myserver.for.example\"\n      },\n      \"subject_pk_info\": {\n        \"algorithm\": {\n          \"algorithm\": \"ec\",\n          \"parameters\": \"secp256r1\"\n        },\n        \"public_key\": \"04:40:33:c0:91:8f:e9:46:ea:d0:dc:d0:f9:63:2c:a4:35:1f:0f:54:c8:a9:9b:e3:9e:d4:f3:64:b8:60:cc:7f:39:75:dd:a7:61:31:02:7c:9e:89:c6:db:45:15:f2:5f:b0:65:29:0b:42:d2:6e:c2:ea:a6:23:bd:fc:65:e5:7d:4e\"\n      },\n      \"attributes\": [\n        {\n          \"type\": \"extension_request\",\n          \"values\": [\n            [\n              {\n                \"extn_id\": \"extended_key_usage\",\n                \"critical\": false,\n                \"extn_value\": [\n                  \"server_auth\"\n                ]\n              },\n              {\n                \"extn_id\": \"subject_alt_name\",\n                \"critical\": false,\n                \"extn_value\": [\n                  \"myserver.for.example\"\n                ]\n              }\n            ]\n          ]\n        }\n      ]\n    },\n    \"signature_algorithm\": {\n      \"algorithm\": \"sha384_ecdsa\",\n      \"parameters\": null\n    },\n    \"signature\": \"30:45:02:20:77:ac:5b:51:bf:c5:f5:43:02:52:ae:66:8a:fe:95:98:98:98:a9:45:34:31:08:ff:2c:cc:92:d9:1c:70:28:74:02:21:00:97:79:7b:e7:45:18:76:cf:d7:3b:79:34:56:d2:69:b5:73:41:9b:8a:b7:ad:ec:80:23:c1:2f:64:da:e5:28:19\"\n  }\n]\n```\n### XML files\n```bash\ncat cd_catalog.xml\n```\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CATALOG>\n  <CD>\n    <TITLE>Empire Burlesque</TITLE>\n    <ARTIST>Bob Dylan</ARTIST>\n    <COUNTRY>USA</COUNTRY>\n    <COMPANY>Columbia</COMPANY>\n    <PRICE>10.90</PRICE>\n    <YEAR>1985</YEAR>\n  </CD>\n  <CD>\n    <TITLE>Hide your heart</TITLE>\n    <ARTIST>Bonnie Tyler</ARTIST>\n    <COUNTRY>UK</COUNTRY>\n    <COMPANY>CBS Records</COMPANY>\n    <PRICE>9.90</PRICE>\n    <YEAR>1988</YEAR>\n  </CD>\n  ...\n```\n```bash\ncat cd_catalog.xml | jc --xml -p\n```\n```json\n{\n  \"CATALOG\": {\n    \"CD\": [\n      {\n        \"TITLE\": \"Empire Burlesque\",\n        \"ARTIST\": \"Bob Dylan\",\n        \"COUNTRY\": \"USA\",\n        \"COMPANY\": \"Columbia\",\n        \"PRICE\": \"10.90\",\n        \"YEAR\": \"1985\"\n      },\n      {\n        \"TITLE\": \"Hide your heart\",\n        \"ARTIST\": \"Bonnie Tyler\",\n        \"COUNTRY\": \"UK\",\n        \"COMPANY\": \"CBS Records\",\n        \"PRICE\": \"9.90\",\n        \"YEAR\": \"1988\"\n      }\n    ]\n  }\n}\n```\n### xrandr\n```bash\n$ xrandr | jc --xrandr -p          # or  jc -p xrandr\n```\n```json\n{\n  \"screens\": [\n    {\n      \"screen_number\": 0,\n      \"minimum_width\": 8,\n      \"minimum_height\": 8,\n      \"current_width\": 1920,\n      \"current_height\": 1080,\n      \"maximum_width\": 32767,\n      \"maximum_height\": 32767,\n      \"associated_device\": {\n        \"associated_modes\": [\n          {\n            \"resolution_width\": 1920,\n            \"resolution_height\": 1080,\n            \"is_high_resolution\": false,\n            \"frequencies\": [\n              {\n                \"frequency\": 60.03,\n                \"is_current\": true,\n                \"is_preferred\": true\n              },\n              {\n                \"frequency\": 59.93,\n                \"is_current\": false,\n                \"is_preferred\": false\n              }\n            ]\n          },\n          {\n            \"resolution_width\": 1680,\n            \"resolution_height\": 1050,\n            \"is_high_resolution\": false,\n            \"frequencies\": [\n              {\n                \"frequency\": 59.88,\n                \"is_current\": false,\n                \"is_preferred\": false\n              }\n            ]\n          }\n        ],\n        \"is_connected\": true,\n        \"is_primary\": true,\n        \"device_name\": \"eDP1\",\n        \"resolution_width\": 1920,\n        \"resolution_height\": 1080,\n        \"offset_width\": 0,\n        \"offset_height\": 0,\n        \"dimension_width\": 310,\n        \"dimension_height\": 170\n      }\n    }\n  ],\n  \"unassociated_devices\": []\n}\n```\n### YAML files\n```bash\ncat istio.yaml \n```\n```yaml\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind: \"Policy\"\nmetadata:\n  name: \"default\"\n  namespace: \"default\"\nspec:\n  peers:\n  - mtls: {}\n---\napiVersion: \"networking.istio.io/v1alpha3\"\nkind: \"DestinationRule\"\nmetadata:\n  name: \"default\"\n  namespace: \"default\"\nspec:\n  host: \"*.default.svc.cluster.local\"\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n```\n```bash\ncat istio.yaml | jc --yaml -p\n```\n```json\n[\n  {\n    \"apiVersion\": \"authentication.istio.io/v1alpha1\",\n    \"kind\": \"Policy\",\n    \"metadata\": {\n      \"name\": \"default\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"peers\": [\n        {\n          \"mtls\": {}\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"networking.istio.io/v1alpha3\",\n    \"kind\": \"DestinationRule\",\n    \"metadata\": {\n      \"name\": \"default\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"host\": \"*.default.svc.cluster.local\",\n      \"trafficPolicy\": {\n        \"tls\": {\n          \"mode\": \"ISTIO_MUTUAL\"\n        }\n      }\n    }\n  }\n]\n```\n### zipinfo\n```bash\nzipinfo file.zip | jc --zipinfo -p          # or:  jc -p zipinfo file.zip\n```\n```json\n[\n  {\n    \"archive\": \"file.zip\",\n    \"size\": 4116,\n    \"size_unit\": \"bytes\",\n    \"number_entries\": 1,\n    \"number_files\": 1,\n    \"bytes_uncompressed\": 11837,\n    \"bytes_compressed\": 3966,\n    \"percent_compressed\": 66.5,\n    \"files\": [\n      {\n        \"flags\": \"-rw-r--r--\",\n        \"zipversion\": \"2.1\",\n        \"zipunder\": \"unx\",\n        \"filesize\": 11837,\n        \"type\": \"bX\",\n        \"method\": \"defN\",\n        \"date\": \"21-Dec-08\",\n        \"time\": \"20:50\",\n        \"filename\": \"compressed_file\"\n      }\n    ]\n  }\n]\n```\n\n© 2019-2021 Kelly Brazil\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2020 Kelly Brazil\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.0537109375,
          "content": "include jc/py.typed\ninclude man/jc.1\ninclude CHANGELOG\n"
        },
        {
          "name": "README-snap.md",
          "type": "blob",
          "size": 1.1552734375,
          "content": "# How to use `jc` with `snap`\n\n## How to build `snap` package\n\n- Install `snapd`. [One](https://snapcraft.io/docs/installing-snapd) or [two](https://github.com/don-rumata/ansible-role-install-snap).\n\n- Install `snapcraft`:\n\n```bash\n$ sudo snap install snapcraft --classic\n```\n\n- Update snapd:\n\n```bash\n$ sudo snap refresh snapcraft --edge\n```\n\n- Clone the repo:\n\n```bash\n$ git clone https://github.com/kellyjonbrazil/jc\n```\n\n- Change the directory:\n\n```bash\n$ cd ./jc\n```\n\n- Select branch:\n\n```bash\n$ git checkout snap-support\n```\n\n- Initialize LXD:\n\n```bash\n$ lxd init --auto\n```\n\n- Build `.snap` file:\n\n```bash\n$ snapcraft\n```\n\n## How to install local snap file\n\n```bash\n$ snap install --dangerous ./jc_*_amd64.snap\n```\n\n## How to use `jc` with plugins\n\n- Put your plugin in the `\"$HOME/.local/share/jc\"` directory.\n\n- To connect the directory, run:\n\n```bash\nsnap connect jc:dot-jc-plugins snapd\n```\n\n## Urls\n\n- <https://snapcraft.io/docs/supported-interfaces>\n\n- <https://snapcraft.io/docs/interface-management>\n\n- <https://snapcraft.io/docs/personal-files-interface>\n\n- <https://snapcraft.io/docs/python-apps>\n\n- <https://documentation.ubuntu.com/lxd/en/latest/getting_started/>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 63.25,
          "content": "[![Tests](https://github.com/kellyjonbrazil/jc/workflows/Tests/badge.svg?branch=master)](https://github.com/kellyjonbrazil/jc/actions)\n[![Pypi](https://img.shields.io/pypi/v/jc.svg)](https://pypi.org/project/jc/)\n\n> Check out the `jc` Python [package documentation](https://github.com/kellyjonbrazil/jc/tree/master/docs) for developers\n\n> Try the `jc` [web demo](https://jc-web.onrender.com/) and [REST API](https://github.com/kellyjonbrazil/jc-restapi)\n\n> `jc` is available as an\n[Ansible filter plugin](https://docs.ansible.com/ansible/latest/collections/community/general/jc_filter.html#ansible-collections-community-general-jc-filter)\nin the `community.general` collection. See this\n[blog post](https://blog.kellybrazil.com/2020/08/30/parsing-command-output-in-ansible-with-jc/)\nfor an example.\n\n# JC\nJSON Convert\n\n`jc` JSONifies the output of many CLI tools, file-types, and common strings\nfor easier parsing in scripts. See the [**Parsers**](#parsers) section for\nsupported commands, file-types, and strings.\n```bash\ndig example.com | jc --dig\n```\n```json\n[{\"id\":38052,\"opcode\":\"QUERY\",\"status\":\"NOERROR\",\"flags\":[\"qr\",\"rd\",\"ra\"],\n\"query_num\":1,\"answer_num\":1,\"authority_num\":0,\"additional_num\":1,\n\"opt_pseudosection\":{\"edns\":{\"version\":0,\"flags\":[],\"udp\":4096}},\"question\":\n{\"name\":\"example.com.\",\"class\":\"IN\",\"type\":\"A\"},\"answer\":[{\"name\":\n\"example.com.\",\"class\":\"IN\",\"type\":\"A\",\"ttl\":39049,\"data\":\"93.184.216.34\"}],\n\"query_time\":49,\"server\":\"2600:1700:bab0:d40::1#53(2600:1700:bab0:d40::1)\",\n\"when\":\"Fri Apr 16 16:09:00 PDT 2021\",\"rcvd\":56,\"when_epoch\":1618614540,\n\"when_epoch_utc\":null}]\n```\n\nThis allows further command-line processing of output with tools like `jq`\nor [`jello`](https://github.com/kellyjonbrazil/jello) by piping commands:\n```bash\n$ dig example.com | jc --dig | jq -r '.[].answer[].data'\n93.184.216.34\n```\n\nor using the alternative \"magic\" syntax:\n\n```bash\n$ jc dig example.com | jq -r '.[].answer[].data'\n93.184.216.34\n```\n\n`jc` can also be used as a python library. In this case the returned value\nwill be a python dictionary, a list of dictionaries, or even a\n[lazy iterable of dictionaries](#using-streaming-parsers-as-python-modules)\ninstead of JSON:\n```python\n>>> import subprocess\n>>> import jc\n>>>\n>>> cmd_output = subprocess.check_output(['dig', 'example.com'], text=True)\n>>> data = jc.parse('dig', cmd_output)\n>>>\n>>> data[0]['answer']\n[{'name': 'example.com.', 'class': 'IN', 'type': 'A', 'ttl': 29658, 'data':\n'93.184.216.34'}]\n```\n\n> For `jc` Python package documentation, use `help('jc')`, `help('jc.lib')`, or\nsee the [online documentation](https://github.com/kellyjonbrazil/jc/tree/master/docs).\n\nTwo representations of the data are available. The default representation uses a\nstrict schema per parser and converts known numbers to int/float JSON values.\nCertain known values of `None` are converted to JSON `null`, known boolean\nvalues are converted, and, in some cases, additional semantic context fields are\nadded.\n\nTo access the raw, pre-processed JSON, use the `-r` cli option or the `raw=True`\nfunction parameter in `parse()` when using `jc` as a python library.\n\nSchemas for each parser can be found at the documentation link beside each\n[**Parser**](#parsers) below.\n\nRelease notes can be found in the [Releases section](https://github.com/kellyjonbrazil/jc/releases) on Github.\n\n## Why Would Anyone Do This!?\nFor more information on the motivations for this project, please see my blog\npost on [Bringing the Unix Philosophy to the 21st Century](https://blog.kellybrazil.com/2019/11/26/bringing-the-unix-philosophy-to-the-21st-century/) and my [interview with Console](https://console.substack.com/p/console-89).\n\nSee also:\n- [libxo on FreeBSD](http://juniper.github.io/libxo/libxo-manual.html)\n- [powershell](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/convertto-json?view=powershell-7)\n- [blog: linux apps should have a json flag](https://thomashunter.name/posts/2012-06-06-linux-cli-apps-should-have-a-json-flag)\n- [Hacker News discussion](https://news.ycombinator.com/item?id=28266193)\n- [Reddit discussion](https://www.reddit.com/r/programming/comments/pa4cbb/bringing_the_unix_philosophy_to_the_21st_century/)\n\nUse Cases:\n- [Bash scripting](https://blog.kellybrazil.com/2021/04/12/practical-json-at-the-command-line/)\n- [Ansible command output parsing](https://blog.kellybrazil.com/2020/08/30/parsing-command-output-in-ansible-with-jc/)\n- [Saltstack command output parsing](https://blog.kellybrazil.com/2020/09/15/parsing-command-output-in-saltstack-with-jc/)\n- [Nornir command output parsing](https://blog.kellybrazil.com/2020/12/09/parsing-command-output-in-nornir-with-jc/)\n- [FortiSOAR command output parsing](https://docs.fortinet.com/document/fortisoar/1.0.0/jc-parse-command-output/323/jc-parse-command-output-v1-0-0)\n\n## Installation\nThere are several ways to get `jc`. You can install via `pip`, OS package\n[repositories](https://repology.org/project/jc/versions), or by downloading the\ncorrect [binary](https://github.com/kellyjonbrazil/jc/releases) for your\narchitecture and running it anywhere on your filesystem.\n\n### Pip (macOS, linux, unix, Windows)\n[![Pypi](https://img.shields.io/pypi/v/jc.svg)](https://pypi.org/project/jc/)\n```bash\npip3 install jc\n```\n\n### OS Package Repositories\n\n| OS                                   | Command                                                                       |\n|--------------------------------------|-------------------------------------------------------------------------------|\n| Debian/Ubuntu linux                  | `apt-get install jc`                                                          |\n| Fedora linux                         | `dnf install jc`                                                              |\n| openSUSE linux                       | `zypper install jc`                                                           |\n| Arch linux                           | `pacman -S jc`                                                                |\n| NixOS linux                          | `nix-env -iA nixpkgs.jc` or `nix-env -iA nixos.jc`                            |\n| Guix System linux                    | `guix install jc`                                                             |\n| Gentoo Linux                         | `emerge dev-python/jc`                                                        |\n| Photon linux                         | `tdnf install jc`                                                             |\n| macOS                                | `brew install jc`                                                             |\n| FreeBSD                              | `portsnap fetch update && cd /usr/ports/textproc/py-jc && make install clean` |\n| Ansible filter plugin                | `ansible-galaxy collection install community.general`                         |\n| FortiSOAR connector                  | Install from FortiSOAR Connector Marketplace                                  |\n\n> For more OS Packages, see https://repology.org/project/jc/versions.\n\n### Binaries\nFor precompiled binaries, see [Releases](https://github.com/kellyjonbrazil/jc/releases)\non Github.\n\n## Usage\n`jc` accepts piped input from `STDIN` and outputs a JSON representation of the\nprevious command's output to `STDOUT`.\n```bash\nCOMMAND | jc [SLICE] [OPTIONS] PARSER\ncat FILE | jc [SLICE] [OPTIONS] PARSER\necho STRING | jc [SLICE] [OPTIONS] PARSER\n```\n\nAlternatively, the \"magic\" syntax can be used by prepending `jc` to the command\nto be converted or in front of the absolute path for Proc files. Options can be\npassed to `jc` immediately before the command or Proc file path is given.\n(Note: command aliases and shell builtins are not supported)\n```bash\njc [SLICE] [OPTIONS] COMMAND\njc [SLICE] [OPTIONS] /proc/<path-to-procfile>\n```\n\nThe JSON output can be compact (default) or pretty formatted with the `-p`\noption.\n\n### Parsers\n\n| Argument          | Command or Filetype                                     | Documentation                                                              |\n|-------------------|---------------------------------------------------------|----------------------------------------------------------------------------|\n|          `--acpi` | `acpi` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/acpi)           |\n|       `--airport` | `airport -I` command parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/airport)        |\n|     `--airport-s` | `airport -s` command parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/airport_s)      |\n| `--apt-cache-show` | `apt-cache show` command parser                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/apt_cache_show) |\n|   `--apt-get-sqq` | `apt-get -sqq` command parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/apt_get_sqq)    |\n|           `--arp` | `arp` command parser                                    | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/arp)            |\n|    `--asciitable` | ASCII and Unicode table parser                          | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/asciitable)     |\n|  `--asciitable-m` | multi-line ASCII and Unicode table parser               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/asciitable_m)   |\n|         `--blkid` | `blkid` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/blkid)          |\n|  `--bluetoothctl` | `bluetoothctl` command parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/bluetoothctl)   |\n|           `--cbt` | `cbt` (Google Bigtable) command parser                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/cbt)            |\n|           `--cef` | CEF string parser                                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/cef)            |\n|         `--cef-s` | CEF string streaming parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/cef_s)          |\n|       `--certbot` | `certbot` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/certbot)        |\n|         `--chage` | `chage --list` command parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/chage)          |\n|         `--cksum` | `cksum` and `sum` command parser                        | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/cksum)          |\n|           `--clf` | Common and Combined Log Format file parser              | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/clf)            |\n|         `--clf-s` | Common and Combined Log Format file streaming parser    | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/clf_s)          |\n|       `--crontab` | `crontab` command and file parser                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/crontab)        |\n|     `--crontab-u` | `crontab` file parser with user support                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/crontab_u)      |\n|           `--csv` | CSV file parser                                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/csv)            |\n|         `--csv-s` | CSV file streaming parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/csv_s)          |\n|     `--curl-head` | `curl --head` command parser                            | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/curl_head)      |\n|          `--date` | `date` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/date)           |\n|  `--datetime-iso` | ISO 8601 Datetime string parser                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/datetime_iso)   |\n|  `--debconf-show` | `debconf-show` command parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/debconf_show)   |\n|            `--df` | `df` command parser                                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/df)             |\n|           `--dig` | `dig` command parser                                    | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/dig)            |\n|           `--dir` | `dir` command parser                                    | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/dir)            |\n|     `--dmidecode` | `dmidecode` command parser                              | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/dmidecode)      |\n|        `--dpkg-l` | `dpkg -l` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/dpkg_l)         |\n|            `--du` | `du` command parser                                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/du)             |\n|    `--efibootmgr` | `efibootmgr` command parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/efibootmgr)     |\n| `--email-address` | Email Address string parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/email_address)  |\n|           `--env` | `env` command parser                                    | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/env)            |\n|       `--ethtool` | `ethtool` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ethtool)        |\n|          `--file` | `file` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/file)           |\n|          `--find` | `find` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/find)           |\n|       `--findmnt` | `findmnt` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/findmnt)        |\n|        `--finger` | `finger` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/finger)         |\n|          `--free` | `free` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/free)           |\n|         `--fstab` | `/etc/fstab` file parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/fstab)          |\n|       `--git-log` | `git log` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/git_log)        |\n|     `--git-log-s` | `git log` command streaming parser                      | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/git_log_s)      |\n| `--git-ls-remote` | `git ls-remote` command parser                          | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/git_ls_remote)  |\n|           `--gpg` | `gpg --with-colons` command parser                      | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/gpg)            |\n|         `--group` | `/etc/group` file parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/group)          |\n|       `--gshadow` | `/etc/gshadow` file parser                              | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/gshadow)        |\n|          `--hash` | `hash` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/hash)           |\n|       `--hashsum` | hashsum command parser (`md5sum`, `shasum`, etc.)       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/hashsum)        |\n|     `--hciconfig` | `hciconfig` command parser                              | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/hciconfig)      |\n|       `--history` | `history` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/history)        |\n|          `--host` | `host` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/host)           |\n|         `--hosts` | `/etc/hosts` file parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/hosts)          |\n|  `--http-headers` | HTTP headers parser                                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/http_headers)   |\n|            `--id` | `id` command parser                                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/id)             |\n|      `--ifconfig` | `ifconfig` command parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ifconfig)       |\n|           `--ini` | INI file parser                                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ini)            |\n|       `--ini-dup` | INI with duplicate key file parser                      | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ini_dup)        |\n|        `--iostat` | `iostat` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/iostat)         |\n|      `--iostat-s` | `iostat` command streaming parser                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/iostat_s)       |\n|    `--ip-address` | IPv4 and IPv6 Address string parser                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ip_address)     |\n|      `--ipconfig` | `ipconfig` Windows command parser                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ipconfig)       |\n|      `--iptables` | `iptables` command parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/iptables)       |\n|      `--ip-route` | `ip route` command parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ip_route)       |\n|       `--iw-scan` | `iw dev [device] scan` command parser                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/iw_scan)        |\n|      `--iwconfig` | `iwconfig` command parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/iwconfig)       |\n|  `--jar-manifest` | Java MANIFEST.MF file parser                            | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/jar_manifest)   |\n|          `--jobs` | `jobs` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/jobs)           |\n|           `--jwt` | JWT string parser                                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/jwt)            |\n|            `--kv` | Key/Value file and string parser                        | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/kv)             |\n|        `--kv-dup` | Key/Value with duplicate key file and string parser     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/kv_dup)         |\n|          `--last` | `last` and `lastb` command parser                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/last)           |\n|            `--ls` | `ls` command parser                                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ls)             |\n|          `--ls-s` | `ls` command streaming parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ls_s)           |\n|        `--lsattr` | `lsattr` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/lsattr)         |\n|   `--lsb-release` | `lsb_release` command parser                            | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/lsb_release)    |\n|         `--lsblk` | `lsblk` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/lsblk)          |\n|         `--lsmod` | `lsmod` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/lsmod)          |\n|          `--lsof` | `lsof` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/lsof)           |\n|         `--lspci` | `lspci -mmv` command parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/lspci)          |\n|         `--lsusb` | `lsusb` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/lsusb)          |\n|           `--m3u` | M3U and M3U8 file parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/m3u)            |\n|         `--mdadm` | `mdadm` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/mdadm)          |\n|         `--mount` | `mount` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/mount)          |\n|        `--mpstat` | `mpstat` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/mpstat)         |\n|      `--mpstat-s` | `mpstat` command streaming parser                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/mpstat_s)       |\n|   `--needrestart` | `needrestart -b` command parser                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/needrestart)    |\n|       `--netstat` | `netstat` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/netstat)        |\n|         `--nmcli` | `nmcli` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/nmcli)          |\n|   `--nsd-control` | `nsd-control` command parser                            | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/nsd_control)    |\n|          `--ntpq` | `ntpq -p` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ntpq)           |\n|       `--openvpn` | openvpn-status.log file parser                          | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/openvpn)        |\n|     `--os-prober` | `os-prober` command parser                              | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/os_prober)      |\n|    `--os-release` | `/etc/os-release` file parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/os_release)     |\n|        `--pacman` | `pacman` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pacman)         |\n|        `--passwd` | `/etc/passwd` file parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/passwd)         |\n|          `--path` | POSIX path string parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/path)           |\n|     `--path-list` | POSIX path list string parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/path_list)      |\n|       `--pci-ids` | `pci.ids` file parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pci_ids)        |\n|        `--pgpass` | PostgreSQL password file parser                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pgpass)         |\n|       `--pidstat` | `pidstat -H` command parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pidstat)        |\n|     `--pidstat-s` | `pidstat -H` command streaming parser                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pidstat_s)      |\n|          `--ping` | `ping` and `ping6` command parser                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ping)           |\n|        `--ping-s` | `ping` and `ping6` command streaming parser             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ping_s)         |\n|      `--pip-list` | `pip list` command parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pip_list)       |\n|      `--pip-show` | `pip show` command parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pip_show)       |\n| `--pkg-index-apk` | Alpine Linux Package Index file parser                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pkg_index_apk)  |\n| `--pkg-index-deb` | Debian Package Index file parser                        | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/pkg_index_deb)  |\n|         `--plist` | PLIST file parser                                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/plist)          |\n|      `--postconf` | `postconf -M` command parser                            | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/postconf)       |\n|          `--proc` | `/proc/` file parser                                    | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/proc)           |\n|            `--ps` | `ps` command parser                                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ps)             |\n|  `--resolve-conf` | `/etc/resolve.conf` file parser                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/resolve_conf)   |\n|         `--route` | `route` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/route)          |\n|        `--rpm-qi` | `rpm -qi` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/rpm_qi)         |\n|         `--rsync` | `rsync` command parser                                  | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/rsync)          |\n|       `--rsync-s` | `rsync` command streaming parser                        | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/rsync_s)        |\n|        `--semver` | Semantic Version string parser                          | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/semver)         |\n|        `--sfdisk` | `sfdisk` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/sfdisk)         |\n|        `--shadow` | `/etc/shadow` file parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/shadow)         |\n|           `--srt` | SRT file parser                                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/srt)            |\n|            `--ss` | `ss` command parser                                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ss)             |\n|      `--ssh-conf` | `ssh` config file and `ssh -G` command parser           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ssh_conf)       |\n|     `--sshd-conf` | `sshd` config file and `sshd -T` command parser         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/sshd_conf)      |\n|          `--stat` | `stat` command parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/stat)           |\n|        `--stat-s` | `stat` command streaming parser                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/stat_s)         |\n|        `--swapon` | `swapon` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/swapon)         |\n|        `--sysctl` | `sysctl` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/sysctl)         |\n|        `--syslog` | Syslog RFC 5424 string parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/syslog)         |\n|      `--syslog-s` | Syslog RFC 5424 string streaming parser                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/syslog_s)       |\n|    `--syslog-bsd` | Syslog RFC 3164 string parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/syslog_bsd)     |\n|  `--syslog-bsd-s` | Syslog RFC 3164 string streaming parser                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/syslog_bsd_s)   |\n|     `--systemctl` | `systemctl` command parser                              | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/systemctl)      |\n|  `--systemctl-lj` | `systemctl list-jobs` command parser                    | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/systemctl_lj)   |\n|  `--systemctl-ls` | `systemctl list-sockets` command parser                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/systemctl_ls)   |\n| `--systemctl-luf` | `systemctl list-unit-files` command parser              | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/systemctl_luf)  |\n|    `--systeminfo` | `systeminfo` command parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/systeminfo)     |\n|          `--time` | `/usr/bin/time` command parser                          | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/time)           |\n|   `--timedatectl` | `timedatectl status` command parser                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/timedatectl)    |\n|     `--timestamp` | Unix Epoch Timestamp string parser                      | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/timestamp)      |\n|          `--toml` | TOML file parser                                        | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/toml)           |\n|           `--top` | `top -b` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/top)            |\n|         `--top-s` | `top -b` command streaming parser                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/top_s)          |\n|     `--tracepath` | `tracepath` and `tracepath6` command parser             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/tracepath)      |\n|    `--traceroute` | `traceroute` and `traceroute6` command parser           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/traceroute)     |\n|       `--tune2fs` | `tune2fs -l` command parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/tune2fs)        |\n|       `--udevadm` | `udevadm info` command parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/udevadm)        |\n|           `--ufw` | `ufw status` command parser                             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ufw)            |\n|   `--ufw-appinfo` | `ufw app info [application]` command parser             | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ufw_appinfo)    |\n|         `--uname` | `uname -a` command parser                               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/uname)          |\n| `--update-alt-gs` | `update-alternatives --get-selections` command parser   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/update_alt_gs)  |\n|  `--update-alt-q` | `update-alternatives --query` command parser            | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/update_alt_q)   |\n|        `--upower` | `upower` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/upower)         |\n|        `--uptime` | `uptime` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/uptime)         |\n|           `--url` | URL string parser                                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/url)            |\n|           `--ver` | Version string parser                                   | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/ver)            |\n|     `--veracrypt` | `veracrypt` command parser                              | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/veracrypt)      |\n|        `--vmstat` | `vmstat` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/vmstat)         |\n|      `--vmstat-s` | `vmstat` command streaming parser                       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/vmstat_s)       |\n|             `--w` | `w` command parser                                      | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/w)              |\n|            `--wc` | `wc` command parser                                     | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/wc)             |\n|       `--wg-show` | `wg show` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/wg_show)        |\n|           `--who` | `who` command parser                                    | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/who)            |\n|     `--x509-cert` | X.509 PEM and DER certificate file parser               | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/x509_cert)      |\n|      `--x509-csr` | X.509 PEM and DER certificate request file parser       | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/x509_csr)       |\n|           `--xml` | XML file parser                                         | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/xml)            |\n|        `--xrandr` | `xrandr` command parser                                 | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/xrandr)         |\n|          `--yaml` | YAML file parser                                        | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/yaml)           |\n|       `--zipinfo` | `zipinfo` command parser                                | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/zipinfo)        |\n|  `--zpool-iostat` | `zpool iostat` command parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/zpool_iostat)   |\n|  `--zpool-status` | `zpool status` command parser                           | [details](https://kellyjonbrazil.github.io/jc/docs/parsers/zpool_status)   |\n\n### Options\n\n| Short | Long            | Description                                                                                                                                                  |\n|-------|-----------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `-a`  | `--about`       | About `jc`. Prints information about `jc` and the parsers (in JSON or YAML, of course!)                                                                      |\n| `-C`  | `--force-color` | Force color output even when using pipes (overrides `-m` and the `NO_COLOR` env variable)                                                                    |\n| `-d`  | `--debug`       | Debug mode. Prints trace messages if parsing issues are encountered (use`-dd` for verbose debugging)                                                         |\n| `-h`  | `--help`        | Help. Use `jc -h --parser_name` for parser documentation. Use twice to show hidden parsers (e.g. `-hh`). Use thrice to show parser categories (e.g. `-hhh`). |\n| `-m`  | `--monochrome`  | Monochrome output                                                                                                                                            |\n| `-M`  | `--meta-out`    | Add metadata to output including timestamp, parser name, magic command, magic command exit code, etc.                                                        |                                                                        |\n| `-p`  | `--pretty`      | Pretty format the JSON output                                                                                                                                |\n| `-q`  | `--quiet`       | Quiet mode. Suppresses parser warning messages (use `-qq` to ignore streaming parser errors)                                                                 |\n| `-r`  | `--raw`         | Raw output. Provides more literal output, typically with string values and no additional semantic processing                                                 |\n| `-s`  | `--slurp`       | Slurp multiple lines into an array. (use `-hhh` to find compatible parsers)                                                                                  |\n| `-u`  | `--unbuffer`    | Unbuffer output                                                                                                                                              |\n| `-v`  | `--version`     | Version information                                                                                                                                          |\n| `-y`  | `--yaml-out`    | YAML output                                                                                                                                                  |\n| `-B`  | `--bash-comp`   | Generate Bash shell completion script ([more info](https://github.com/kellyjonbrazil/jc/wiki/Shell-Completions))                                             |\n| `-Z`  | `--zsh-comp`    | Generate Zsh shell completion script ([more info](https://github.com/kellyjonbrazil/jc/wiki/Shell-Completions))                                              |\n\n### Slice\nLine slicing is supported using the `START:STOP` syntax similar to Python\nslicing. This allows you to skip lines at the beginning and/or end of the\n`STDIN` input you would like `jc` to convert.\n\n`START` and `STOP` can be positive or negative integers or blank and allow\nyou to specify how many lines to skip and how many lines to process.\nPositive and blank slices are the most memory efficient. Any negative\nintegers in the slice will use more memory.\n\nFor example, to skip the first and last line of the following text, you\ncould express the slice in a couple ways:\n\n```bash\n$ cat table.txt\n      ### We want to skip this header ###\n          col1       col2\n          foo        1\n          bar        2\n      ### We want to skip this footer ###\n$ cat table.txt | jc 1:-1 --asciitable\n[{\"col1\":\"foo\",\"col2\":\"1\"},{\"col1\":\"bar\",\"col2\":\"2\"}]\n$ cat table.txt | jc 1:4 --asciitable\n[{\"col1\":\"foo\",\"col2\":\"1\"},{\"col1\":\"bar\",\"col2\":\"2\"}]\n```\nIn this example `1:-1` and `1:4` line slices provide the same output.\n\nWhen using positive integers the index location of `STOP` is non-inclusive.\nPositive slices count from the first line of the input toward the end\nstarting at `0` as the first line. Negative slices count from the last line\ntoward the beginning starting at `-1` as the last line. This is also the way\n[Python's slicing](https://stackoverflow.com/questions/509211/understanding-slicing)\nfeature works.\n\nHere is a breakdown of line slice options:\n\n| Slice Notation | Input Lines Processed                                        |\n|----------------|--------------------------------------------------------------|\n| `START:STOP`   | lines `START` through `STOP - 1`                             |\n| `START:`       | lines `START` through the rest of the output                 |\n| `:STOP`        | lines from the beginning through `STOP - 1`                  |\n| `-START:STOP`  | `START` lines from the end through `STOP - 1`                |\n| `START:-STOP`  | lines `START` through `STOP` lines from the end              |\n| `-START:-STOP` | `START` lines from the end through `STOP` lines from the end |\n| `-START:`      | `START` lines from the end through the rest of the output    |\n| `:-STOP`       | lines from the beginning through `STOP` lines from the end   |\n| `:`            | all lines                                                    |\n\n### Slurp\nSome parsers support multi-item input and can output an array of results in a\nsingle pass. Slurping works for string parsers that accept a single line of\ninput. (e.g. `url` and `ip-address`) To see a list of parsers that support\nthe `--slurp` option, use `jc -hhh`.\n\nFor example, you can send a file with multiple IP addresses (one per line) to\n`jc` with the `--slurp` option and an array of results will output:\n\n```bash\n$ cat ip-addresses.txt | jc --slurp --ip-address\n[<multiple output objects>]\n```\n\nThe magic syntax for `/proc` files automatically supports slurping of multiple\nfiles (no need to use the `--slurp` option). For example, you can convert many\nPID files at once:\n\n```bash\n$ jc /proc/*/status\n[<multiple output objects>]\n```\n\nWhen the `/proc` magic syntax is used and multiple files are selected, an\nadditional `_file` field is inserted in the output so it is easier to tell what\nfile each output object refers to.\n\nFinally, the `--meta-out` option can be used in conjunction with slurped output.\nIn this case, the slurped output is wrapped in an object with the following\nstructure:\n\n```json\n{\n  \"result\": [<multiple output objects>],\n  \"_jc_meta\": {\n    \"parser\": \"url\",\n    \"timestamp\": 1706235558.654576,\n    \"slice_start\": null,\n    \"slice_end\": null,\n    \"input_list\": [\n      \"http://www.google.com\",\n      \"https://www.apple.com\",\n      \"https://www.microsoft.com\"\n    ]\n  }\n}\n```\n\nWith `--meta-out`, `input_list` contains a list of inputs (actual input strings\nor `/proc` filenames) so you can identify which output object relates to each\ninput string or `/proc` filename.\n\n### Exit Codes\nAny fatal errors within `jc` will generate an exit code of `100`, otherwise the\nexit code will be `0`.\n\nWhen using the \"magic\" syntax (e.g. `jc ifconfig eth0`),\n`jc` will store the exit code of the program being parsed and add it to the `jc`\nexit code. This way it is easier to determine if an error was from the parsed\nprogram or `jc`.\n\nConsider the following examples using `ifconfig`:\n\n| `ifconfig` exit code | `jc` exit code | Combined exit code | Interpretation                     |\n|----------------------|----------------|--------------------|------------------------------------|\n| `0`                  | `0`            | `0`                | No errors                          |\n| `1`                  | `0`            | `1`                | Error in  `ifconfig`               |\n| `0`                  | `100`          | `100`              | Error in  `jc`                     |\n| `1`                  | `100`          | `101`              | Error in  both `ifconfig` and `jc` |\n\nWhen using the \"magic\" syntax you can also retrieve the exit code of the called\nprogram by using the `--meta-out` or `-M` option. This will append a `_jc_meta`\nobject to the output that will include the magic command information, including\nthe exit code.\n\nHere is an example with `ping`:\n```bash\n$ jc --meta-out -p ping -c2 192.168.1.252\n{\n  \"destination_ip\": \"192.168.1.252\",\n  \"data_bytes\": 56,\n  \"pattern\": null,\n  \"destination\": \"192.168.1.252\",\n  \"packets_transmitted\": 2,\n  \"packets_received\": 0,\n  \"packet_loss_percent\": 100.0,\n  \"duplicates\": 0,\n  \"responses\": [\n    {\n      \"type\": \"timeout\",\n      \"icmp_seq\": 0,\n      \"duplicate\": false\n    }\n  ],\n  \"_jc_meta\": {\n    \"parser\": \"ping\",\n    \"timestamp\": 1661357115.27949,\n    \"magic_command\": [\n      \"ping\",\n      \"-c2\",\n      \"192.168.1.252\"\n    ],\n    \"magic_command_exit\": 2\n  }\n}\n$ echo $?\n2\n```\n\n### Setting Custom Colors via Environment Variable\nYou can specify custom colors via the `JC_COLORS` environment variable. The\n`JC_COLORS` environment variable takes four comma separated string values in\nthe following format:\n```bash\nJC_COLORS=<keyname_color>,<keyword_color>,<number_color>,<string_color>\n```\n\nWhere colors are: `black`, `red`, `green`, `yellow`, `blue`, `magenta`, `cyan`,\n`gray`, `brightblack`, `brightred`, `brightgreen`, `brightyellow`, `brightblue`,\n`brightmagenta`, `brightcyan`, `white`, or  `default`\n\nFor example, to set to the default colors:\n```bash\nJC_COLORS=blue,brightblack,magenta,green\n```\nor\n```bash\nJC_COLORS=default,default,default,default\n```\n\n### Disable Colors via Environment Variable\nYou can set the [`NO_COLOR`](http://no-color.org/) environment variable to any\nvalue to disable color output in `jc`. Note that using the `-C` option to force\ncolor output will override both the `NO_COLOR` environment variable and the `-m`\noption.\n\n### Streaming Parsers\nMost parsers load all of the data from `STDIN`, parse it, then output the entire\nJSON document serially. There are some streaming parsers (e.g. `ls-s` and\n`ping-s`) that immediately start processing and outputting the data line-by-line\nas [JSON Lines](https://jsonlines.org/) (aka [NDJSON](http://ndjson.org/)) while\nit is being received from `STDIN`. This can significantly reduce the amount of\nmemory required to parse large amounts of command output (e.g. `ls -lR /`) and\ncan sometimes process the data more quickly. Streaming parsers have slightly\ndifferent behavior than standard parsers as outlined below.\n\n> Note: Streaming parsers cannot be used with the \"magic\" syntax\n\n#### Ignoring Errors\n\nYou may want to ignore parsing errors when using streaming parsers since these\nmay be used in long-lived processing pipelines and errors can break the pipe. To\nignore parsing errors, use the `-qq` cli option or the `ignore_exceptions=True`\nargument with the `parse()` function. This will add a `_jc_meta` object to the\nJSON output with a `success` attribute. If `success` is `true`, then there were\nno issues parsing the line. If `success` is `false`, then a parsing issue was\nfound and `error` and `line` fields will be added to include a short error\ndescription and the contents of the unparsable line, respectively:\n\nSuccessfully parsed line with `-qq` option:\n```json\n{\n  \"command_data\": \"data\",\n  \"_jc_meta\": {\n    \"success\": true\n  }\n}\n```\n\nUnsuccessfully parsed line with `-qq` option:\n```json\n{\n  \"_jc_meta\": {\n    \"success\": false,\n    \"error\": \"error message\",\n    \"line\": \"original line data\"\n  }\n}\n```\n\n#### Unbuffering Output\n\nMost operating systems will buffer output that is being piped from process to\nprocess. The buffer is usually around 4KB. When viewing the output in the\nterminal the OS buffer is not engaged so output is immediately displayed on the\nscreen. When piping multiple processes together, though, it may seem as if the\noutput is hanging when the input data is very slow (e.g. `ping`):\n```\n$ ping 1.1.1.1 | jc --ping-s | jq\n<slow output>\n```\n\nThis is because the OS engages the 4KB buffer between `jc` and `jq` in this\nexample. To display the data on the terminal in realtime, you can disable the\nbuffer with the `-u` (unbuffer) cli option:\n```\n$ ping 1.1.1.1 | jc --ping-s -u | jq\n{\"type\":\"reply\",\"pattern\":null,\"timestamp\":null,\"bytes\":\"64\",\"respons...}\n{\"type\":\"reply\",\"pattern\":null,\"timestamp\":null,\"bytes\":\"64\",\"respons...}\n...\n```\n\n> Note: Unbuffered output can be slower for large data streams.\n\n#### Using Streaming Parsers as Python Modules\n\nStreaming parsers accept any iterable object and return an iterable object\nallowing lazy processing of the data. The input data should iterate on lines\nof string data. Examples of good input data are `sys.stdin` or\n`str.splitlines()`.\n\nTo use the returned iterable object in your code, simply loop through it or\nuse the [next()](https://docs.python.org/3/library/functions.html#next)\nbuiltin function:\n```python\nimport jc\n\nresult = jc.parse('ls_s', ls_command_output.splitlines())\nfor item in result:\n    print(item[\"filename\"])\n```\n\n### Parser Plugins\nParser plugins may be placed in a `jc/jcparsers` folder in your local\n**\"App data directory\"**:\n\n- Linux/unix: `$HOME/.local/share/jc/jcparsers`\n- macOS: `$HOME/Library/Application Support/jc/jcparsers`\n- Windows: `$LOCALAPPDATA\\jc\\jc\\jcparsers`\n\nParser plugins are standard python module files. Use the\n[`jc/parsers/foo.py`](https://github.com/kellyjonbrazil/jc/blob/master/jc/parsers/foo.py)\nor [`jc/parsers/foo_s.py (streaming)`](https://github.com/kellyjonbrazil/jc/blob/master/jc/parsers/foo_s.py)\nparser as a template and simply place a `.py` file in the `jcparsers` subfolder.\nAny dependencies can be placed in the `jc` folder above `jcparsers` and can\nbe imported in the parser code.\n\nParser plugin filenames must be valid python module names and therefore must\nstart with a letter and consist entirely of alphanumerics and underscores.\nLocal plugins may override default parsers.\n\n> Note: The application data directory follows the\n[XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html)\n\n### Caveats\n\n#### Locale\n\nFor best results set the locale environment variables to `C` or\n`en_US.UTF-8` by modifying the `LC_ALL` variable:\n```\n$ LC_ALL=C date | jc --date\n```\n\nYou can also set the locale variables individually:\n```\n$ export LANG=C\n$ export LC_NUMERIC=C\n```\n\nOn some older systems UTF-8 output will be downgraded to ASCII with `\\\\u`\nescape sequences if the `C` locale does not support UTF-8 encoding.\n\n#### Timezones\n\nSome parsers have calculated epoch timestamp fields added to the output. Unless\na timestamp field name has a `_utc` suffix it is considered naive. (i.e. based\non the local timezone of the system the `jc` parser was run on).\n\nIf a UTC timezone can be detected in the text of the command output, the\ntimestamp will be timezone aware and have a `_utc` suffix on the key name.\n(e.g. `epoch_utc`) No other timezones are supported for aware timestamps.\n\n## Use In Other Shells\n`jc` can be used in most any shell. Some modern shells have JSON deserialization\nand filtering capabilities built-in which makes using `jc` even more convenient.\n\nFor example, the following is possible in [NGS](https://ngs-lang.org/)\n(Next Generation Shell):\n```bash\nmyvar = ``jc dig www.google.com``[0].answer[0].data\n```\nThis runs `jc`, parses the output JSON, and assigs the resulting data structure\nto a variable in a single line of code.\n\nFor more examples of how to use `jc` in other shells, see this\n[wiki page](https://github.com/kellyjonbrazil/jc/wiki/Using-jc-With-Different-Shells).\n\n## Compatibility\nSome parsers like `dig`, `xml`, `csv`, etc. will work on any platform. Other\nparsers that convert platform-specific output will generate a warning message if\nthey are run on an unsupported platform. To see all parser information,\nincluding compatibility, run `jc -ap`.\n\nYou may still use a parser on an unsupported platform - for example, you may\nwant to parse a file with linux `lsof` output on a macOS or Windows laptop. In\nthat case you can suppress the warning message with the `-q` cli option or the\n`quiet=True` function parameter in `parse()`:\n\nmacOS:\n```bash\ncat lsof.out | jc -q --lsof\n```\n\nor Windows:\n```bash\ntype lsof.out | jc -q --lsof\n```\n\nTested on:\n- Centos 7.7\n- Ubuntu 18.04\n- Ubuntu 20.04\n- Fedora32\n- macOS 10.11.6\n- macOS 10.14.6\n- NixOS\n- FreeBSD12\n- Windows 10\n- Windows 2016 Server\n- Windows 2019 Server\n\n## Contributions\nFeel free to add/improve code or parsers! You can use the\n[`jc/parsers/foo.py`](https://github.com/kellyjonbrazil/jc/blob/master/jc/parsers/foo.py)\nor [`jc/parsers/foo_s.py (streaming)`](https://github.com/kellyjonbrazil/jc/blob/master/jc/parsers/foo_s.py) parsers as a template and submit your parser with a pull\nrequest.\n\nPlease see the [Contributing Guidelines](https://github.com/kellyjonbrazil/jc/blob/master/CONTRIBUTING.md) for more information.\n\n## Acknowledgments\n- Local parser plugin feature contributed by [Dean Serenevy](https://github.com/duelafn)\n- CI automation and code optimizations by [philippeitis](https://github.com/philippeitis)\n- [`ifconfig-parser`](https://github.com/KnightWhoSayNi/ifconfig-parser) module\n  by KnightWhoSayNi\n- [`xmltodict`](https://github.com/martinblech/xmltodict) module by Martín Blech\n- [`ruamel.yaml`](https://pypi.org/project/ruamel.yaml) module by Anthon van\n  der Neut\n- [`trparse`](https://github.com/lbenitez000/trparse) module by Luis Benitez\n- Parsing [code](https://gist.github.com/cahna/43a1a3ff4d075bcd71f9d7120037a501)\n  from Conor Heine adapted for some parsers\n- Excellent constructive feedback from [Ilya Sher](https://github.com/ilyash-b)\n\n## Examples\nHere are some examples of `jc` output. For more examples, see\n[here](https://kellyjonbrazil.github.io/jc/EXAMPLES) or the parser\ndocumentation.\n\n### arp\n```bash\narp | jc -p --arp          # or:  jc -p arp\n```\n```json\n[\n  {\n    \"address\": \"gateway\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:f7:4a:fc\",\n    \"flags_mask\": \"C\",\n    \"iface\": \"ens33\"\n  },\n  {\n    \"address\": \"192.168.71.1\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:c0:00:08\",\n    \"flags_mask\": \"C\",\n    \"iface\": \"ens33\"\n  },\n  {\n    \"address\": \"192.168.71.254\",\n    \"hwtype\": \"ether\",\n    \"hwaddress\": \"00:50:56:fe:7a:b4\",\n    \"flags_mask\": \"C\",\n    \"iface\": \"ens33\"\n  }\n]\n```\n### CSV files\n```bash\ncat homes.csv\n```\n```\n\"Sell\", \"List\", \"Living\", \"Rooms\", \"Beds\", \"Baths\", \"Age\", \"Acres\", \"Taxes\"\n142, 160, 28, 10, 5, 3,  60, 0.28,  3167\n175, 180, 18,  8, 4, 1,  12, 0.43,  4033\n129, 132, 13,  6, 3, 1,  41, 0.33,  1471\n...\n```\n```bash\ncat homes.csv | jc -p --csv\n```\n```json\n[\n  {\n    \"Sell\": \"142\",\n    \"List\": \"160\",\n    \"Living\": \"28\",\n    \"Rooms\": \"10\",\n    \"Beds\": \"5\",\n    \"Baths\": \"3\",\n    \"Age\": \"60\",\n    \"Acres\": \"0.28\",\n    \"Taxes\": \"3167\"\n  },\n  {\n    \"Sell\": \"175\",\n    \"List\": \"180\",\n    \"Living\": \"18\",\n    \"Rooms\": \"8\",\n    \"Beds\": \"4\",\n    \"Baths\": \"1\",\n    \"Age\": \"12\",\n    \"Acres\": \"0.43\",\n    \"Taxes\": \"4033\"\n  },\n  {\n    \"Sell\": \"129\",\n    \"List\": \"132\",\n    \"Living\": \"13\",\n    \"Rooms\": \"6\",\n    \"Beds\": \"3\",\n    \"Baths\": \"1\",\n    \"Age\": \"41\",\n    \"Acres\": \"0.33\",\n    \"Taxes\": \"1471\"\n  }\n]\n```\n### /etc/hosts file\n```bash\ncat /etc/hosts | jc -p --hosts\n```\n```json\n[\n  {\n    \"ip\": \"127.0.0.1\",\n    \"hostname\": [\n      \"localhost\"\n    ]\n  },\n  {\n    \"ip\": \"::1\",\n    \"hostname\": [\n      \"ip6-localhost\",\n      \"ip6-loopback\"\n    ]\n  },\n  {\n    \"ip\": \"fe00::0\",\n    \"hostname\": [\n      \"ip6-localnet\"\n    ]\n  }\n]\n```\n### ifconfig\n```bash\nifconfig | jc -p --ifconfig          # or:  jc -p ifconfig\n```\n```json\n[\n  {\n    \"name\": \"ens33\",\n    \"flags\": 4163,\n    \"state\": [\n      \"UP\",\n      \"BROADCAST\",\n      \"RUNNING\",\n      \"MULTICAST\"\n    ],\n    \"mtu\": 1500,\n    \"ipv4_addr\": \"192.168.71.137\",\n    \"ipv4_mask\": \"255.255.255.0\",\n    \"ipv4_bcast\": \"192.168.71.255\",\n    \"ipv6_addr\": \"fe80::c1cb:715d:bc3e:b8a0\",\n    \"ipv6_mask\": 64,\n    \"ipv6_scope\": \"0x20\",\n    \"mac_addr\": \"00:0c:29:3b:58:0e\",\n    \"type\": \"Ethernet\",\n    \"rx_packets\": 8061,\n    \"rx_bytes\": 1514413,\n    \"rx_errors\": 0,\n    \"rx_dropped\": 0,\n    \"rx_overruns\": 0,\n    \"rx_frame\": 0,\n    \"tx_packets\": 4502,\n    \"tx_bytes\": 866622,\n    \"tx_errors\": 0,\n    \"tx_dropped\": 0,\n    \"tx_overruns\": 0,\n    \"tx_carrier\": 0,\n    \"tx_collisions\": 0,\n    \"metric\": null\n  }\n]\n```\n### INI files\n```bash\ncat example.ini\n```\n```\nfoo = fiz\nbar = buz\n\n[section1]\nfruit = apple\ncolor = blue\n\n[section2]\nfruit = pear\ncolor = green\n```\n```bash\ncat example.ini | jc -p --ini\n```\n```json\n{\n  \"foo\": \"fiz\",\n  \"bar\": \"buz\",\n  \"section1\": {\n    \"fruit\": \"apple\",\n    \"color\": \"blue\"\n  },\n  \"section2\": {\n    \"fruit\": \"pear\",\n    \"color\": \"green\"\n  }\n}\n```\n### ls\n```bash\n$ ls -l /usr/bin | jc -p --ls          # or:  jc -p ls -l /usr/bin\n```\n```json\n[\n  {\n    \"filename\": \"apropos\",\n    \"link_to\": \"whatis\",\n    \"flags\": \"lrwxrwxrwx.\",\n    \"links\": 1,\n    \"owner\": \"root\",\n    \"group\": \"root\",\n    \"size\": 6,\n    \"date\": \"Aug 15 10:53\"\n  },\n  {\n    \"filename\": \"ar\",\n    \"flags\": \"-rwxr-xr-x.\",\n    \"links\": 1,\n    \"owner\": \"root\",\n    \"group\": \"root\",\n    \"size\": 62744,\n    \"date\": \"Aug 8 16:14\"\n  },\n  {\n    \"filename\": \"arch\",\n    \"flags\": \"-rwxr-xr-x.\",\n    \"links\": 1,\n    \"owner\": \"root\",\n    \"group\": \"root\",\n    \"size\": 33080,\n    \"date\": \"Aug 19 23:25\"\n  }\n]\n```\n### netstat\n```bash\nnetstat -apee | jc -p --netstat          # or:  jc -p netstat -apee\n```\n```json\n[\n  {\n    \"proto\": \"tcp\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"localhost\",\n    \"foreign_address\": \"0.0.0.0\",\n    \"state\": \"LISTEN\",\n    \"user\": \"systemd-resolve\",\n    \"inode\": 26958,\n    \"program_name\": \"systemd-resolve\",\n    \"kind\": \"network\",\n    \"pid\": 887,\n    \"local_port\": \"domain\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": \"tcp\",\n    \"network_protocol\": \"ipv4\"\n  },\n  {\n    \"proto\": \"tcp6\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"[::]\",\n    \"foreign_address\": \"[::]\",\n    \"state\": \"LISTEN\",\n    \"user\": \"root\",\n    \"inode\": 30510,\n    \"program_name\": \"sshd\",\n    \"kind\": \"network\",\n    \"pid\": 1186,\n    \"local_port\": \"ssh\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": \"tcp\",\n    \"network_protocol\": \"ipv6\"\n  },\n  {\n    \"proto\": \"udp\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"localhost\",\n    \"foreign_address\": \"0.0.0.0\",\n    \"state\": null,\n    \"user\": \"systemd-resolve\",\n    \"inode\": 26957,\n    \"program_name\": \"systemd-resolve\",\n    \"kind\": \"network\",\n    \"pid\": 887,\n    \"local_port\": \"domain\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": \"udp\",\n    \"network_protocol\": \"ipv4\"\n  },\n  {\n    \"proto\": \"raw6\",\n    \"recv_q\": 0,\n    \"send_q\": 0,\n    \"local_address\": \"[::]\",\n    \"foreign_address\": \"[::]\",\n    \"state\": \"7\",\n    \"user\": \"systemd-network\",\n    \"inode\": 27001,\n    \"program_name\": \"systemd-network\",\n    \"kind\": \"network\",\n    \"pid\": 867,\n    \"local_port\": \"ipv6-icmp\",\n    \"foreign_port\": \"*\",\n    \"transport_protocol\": null,\n    \"network_protocol\": \"ipv6\"\n  },\n  {\n    \"proto\": \"unix\",\n    \"refcnt\": 2,\n    \"flags\": null,\n    \"type\": \"DGRAM\",\n    \"state\": null,\n    \"inode\": 33322,\n    \"program_name\": \"systemd\",\n    \"path\": \"/run/user/1000/systemd/notify\",\n    \"kind\": \"socket\",\n    \"pid\": 1607\n  }\n]\n```\n### /etc/passwd file\n```bash\ncat /etc/passwd | jc -p --passwd\n```\n```json\n[\n  {\n    \"username\": \"root\",\n    \"password\": \"*\",\n    \"uid\": 0,\n    \"gid\": 0,\n    \"comment\": \"System Administrator\",\n    \"home\": \"/var/root\",\n    \"shell\": \"/bin/sh\"\n  },\n  {\n    \"username\": \"daemon\",\n    \"password\": \"*\",\n    \"uid\": 1,\n    \"gid\": 1,\n    \"comment\": \"System Services\",\n    \"home\": \"/var/root\",\n    \"shell\": \"/usr/bin/false\"\n  }\n]\n```\n### ping\n```bash\nping 8.8.8.8 -c 3 | jc -p --ping          # or:  jc -p ping 8.8.8.8 -c 3\n```\n```json\n{\n  \"destination_ip\": \"8.8.8.8\",\n  \"data_bytes\": 56,\n  \"pattern\": null,\n  \"destination\": \"8.8.8.8\",\n  \"packets_transmitted\": 3,\n  \"packets_received\": 3,\n  \"packet_loss_percent\": 0.0,\n  \"duplicates\": 0,\n  \"time_ms\": 2005.0,\n  \"round_trip_ms_min\": 23.835,\n  \"round_trip_ms_avg\": 30.46,\n  \"round_trip_ms_max\": 34.838,\n  \"round_trip_ms_stddev\": 4.766,\n  \"responses\": [\n    {\n      \"type\": \"reply\",\n      \"timestamp\": null,\n      \"bytes\": 64,\n      \"response_ip\": \"8.8.8.8\",\n      \"icmp_seq\": 1,\n      \"ttl\": 118,\n      \"time_ms\": 23.8,\n      \"duplicate\": false\n    },\n    {\n      \"type\": \"reply\",\n      \"timestamp\": null,\n      \"bytes\": 64,\n      \"response_ip\": \"8.8.8.8\",\n      \"icmp_seq\": 2,\n      \"ttl\": 118,\n      \"time_ms\": 34.8,\n      \"duplicate\": false\n    },\n    {\n      \"type\": \"reply\",\n      \"timestamp\": null,\n      \"bytes\": 64,\n      \"response_ip\": \"8.8.8.8\",\n      \"icmp_seq\": 3,\n      \"ttl\": 118,\n      \"time_ms\": 32.7,\n      \"duplicate\": false\n    }\n  ]\n}\n```\n### ps\n```bash\nps axu | jc -p --ps          # or:  jc -p ps axu\n```\n```json\n[\n  {\n    \"user\": \"root\",\n    \"pid\": 1,\n    \"cpu_percent\": 0.0,\n    \"mem_percent\": 0.1,\n    \"vsz\": 128072,\n    \"rss\": 6784,\n    \"tty\": null,\n    \"stat\": \"Ss\",\n    \"start\": \"Nov09\",\n    \"time\": \"0:08\",\n    \"command\": \"/usr/lib/systemd/systemd --switched-root --system --deseria...\"\n  },\n  {\n    \"user\": \"root\",\n    \"pid\": 2,\n    \"cpu_percent\": 0.0,\n    \"mem_percent\": 0.0,\n    \"vsz\": 0,\n    \"rss\": 0,\n    \"tty\": null,\n    \"stat\": \"S\",\n    \"start\": \"Nov09\",\n    \"time\": \"0:00\",\n    \"command\": \"[kthreadd]\"\n  },\n  {\n    \"user\": \"root\",\n    \"pid\": 4,\n    \"cpu_percent\": 0.0,\n    \"mem_percent\": 0.0,\n    \"vsz\": 0,\n    \"rss\": 0,\n    \"tty\": null,\n    \"stat\": \"S<\",\n    \"start\": \"Nov09\",\n    \"time\": \"0:00\",\n    \"command\": \"[kworker/0:0H]\"\n  }\n]\n```\n### traceroute\n```bash\ntraceroute -m 2 8.8.8.8 | jc -p --traceroute\n# or:  jc -p traceroute -m 2 8.8.8.8\n```\n```json\n{\n  \"destination_ip\": \"8.8.8.8\",\n  \"destination_name\": \"8.8.8.8\",\n  \"hops\": [\n    {\n      \"hop\": 1,\n      \"probes\": [\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"192.168.1.254\",\n          \"name\": \"dsldevice.local.net\",\n          \"rtt\": 6.616\n        },\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"192.168.1.254\",\n          \"name\": \"dsldevice.local.net\",\n          \"rtt\": 6.413\n        },\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"192.168.1.254\",\n          \"name\": \"dsldevice.local.net\",\n          \"rtt\": 6.308\n        }\n      ]\n    },\n    {\n      \"hop\": 2,\n      \"probes\": [\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"76.220.24.1\",\n          \"name\": \"76-220-24-1.lightspeed.sntcca.sbcglobal.net\",\n          \"rtt\": 29.367\n        },\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"76.220.24.1\",\n          \"name\": \"76-220-24-1.lightspeed.sntcca.sbcglobal.net\",\n          \"rtt\": 40.197\n        },\n        {\n          \"annotation\": null,\n          \"asn\": null,\n          \"ip\": \"76.220.24.1\",\n          \"name\": \"76-220-24-1.lightspeed.sntcca.sbcglobal.net\",\n          \"rtt\": 29.162\n        }\n      ]\n    }\n  ]\n}\n```\n### uptime\n```bash\nuptime | jc -p --uptime          # or:  jc -p uptime\n```\n```json\n{\n  \"time\": \"11:35\",\n  \"uptime\": \"3 days, 4:03\",\n  \"users\": 5,\n  \"load_1m\": 1.88,\n  \"load_5m\": 2.0,\n  \"load_15m\": 1.94,\n  \"time_hour\": 11,\n  \"time_minute\": 35,\n  \"time_second\": null,\n  \"uptime_days\": 3,\n  \"uptime_hours\": 4,\n  \"uptime_minutes\": 3,\n  \"uptime_total_seconds\": 273780\n}\n```\n### XML files\n```bash\ncat cd_catalog.xml\n```\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CATALOG>\n  <CD>\n    <TITLE>Empire Burlesque</TITLE>\n    <ARTIST>Bob Dylan</ARTIST>\n    <COUNTRY>USA</COUNTRY>\n    <COMPANY>Columbia</COMPANY>\n    <PRICE>10.90</PRICE>\n    <YEAR>1985</YEAR>\n  </CD>\n  <CD>\n    <TITLE>Hide your heart</TITLE>\n    <ARTIST>Bonnie Tyler</ARTIST>\n    <COUNTRY>UK</COUNTRY>\n    <COMPANY>CBS Records</COMPANY>\n    <PRICE>9.90</PRICE>\n    <YEAR>1988</YEAR>\n  </CD>\n  ...\n```\n```bash\ncat cd_catalog.xml | jc -p --xml\n```\n```json\n{\n  \"CATALOG\": {\n    \"CD\": [\n      {\n        \"TITLE\": \"Empire Burlesque\",\n        \"ARTIST\": \"Bob Dylan\",\n        \"COUNTRY\": \"USA\",\n        \"COMPANY\": \"Columbia\",\n        \"PRICE\": \"10.90\",\n        \"YEAR\": \"1985\"\n      },\n      {\n        \"TITLE\": \"Hide your heart\",\n        \"ARTIST\": \"Bonnie Tyler\",\n        \"COUNTRY\": \"UK\",\n        \"COMPANY\": \"CBS Records\",\n        \"PRICE\": \"9.90\",\n        \"YEAR\": \"1988\"\n      }\n    ]\n  }\n}\n```\n### YAML files\n```bash\ncat istio.yaml \n```\n```yaml\napiVersion: \"authentication.istio.io/v1alpha1\"\nkind: \"Policy\"\nmetadata:\n  name: \"default\"\n  namespace: \"default\"\nspec:\n  peers:\n  - mtls: {}\n---\napiVersion: \"networking.istio.io/v1alpha3\"\nkind: \"DestinationRule\"\nmetadata:\n  name: \"default\"\n  namespace: \"default\"\nspec:\n  host: \"*.default.svc.cluster.local\"\n  trafficPolicy:\n    tls:\n      mode: ISTIO_MUTUAL\n```\n```bash\ncat istio.yaml | jc -p --yaml\n```\n```json\n[\n  {\n    \"apiVersion\": \"authentication.istio.io/v1alpha1\",\n    \"kind\": \"Policy\",\n    \"metadata\": {\n      \"name\": \"default\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"peers\": [\n        {\n          \"mtls\": {}\n        }\n      ]\n    }\n  },\n  {\n    \"apiVersion\": \"networking.istio.io/v1alpha3\",\n    \"kind\": \"DestinationRule\",\n    \"metadata\": {\n      \"name\": \"default\",\n      \"namespace\": \"default\"\n    },\n    \"spec\": {\n      \"host\": \"*.default.svc.cluster.local\",\n      \"trafficPolicy\": {\n        \"tls\": {\n          \"mode\": \"ISTIO_MUTUAL\"\n        }\n      }\n    }\n  }\n]\n```\n\n© 2019-2024 Kelly Brazil"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0400390625,
          "content": "theme: jekyll-theme-cayman\nmarkdown: GFM\n"
        },
        {
          "name": "build-completions.py",
          "type": "blob",
          "size": 0.34375,
          "content": "#!/usr/bin/env python3\n# build Bash and Zsh completion scripts and add to the completions folder\nfrom jc.shell_completions import bash_completion, zsh_completion\n\nwith open('completions/jc_bash_completion.sh', 'w') as f:\n    print(bash_completion(), file=f)\n\nwith open('completions/jc_zsh_completion.sh', 'w') as f:\n    print(zsh_completion(), file=f)\n"
        },
        {
          "name": "build-package.sh",
          "type": "blob",
          "size": 0.1240234375,
          "content": "#!/bin/bash\n# build jc PIP package\n# to install locally, run:   pip3 install jc-x.x.tar.gz\n\npython3 setup.py sdist bdist_wheel\n"
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc2md.py",
          "type": "blob",
          "size": 2.6552734375,
          "content": "#!/usr/bin/env python3\n\n\"\"\"\nConvert parser doc string to markdown\n\"\"\"\nimport sys\nimport importlib\nfrom inspect import isfunction, signature, cleandoc\nimport yapf  # type: ignore\n\nignore_lib_functions = [\n    'cast',\n    'wraps',\n    'lru_cache',\n    'namedtuple'\n]\n\nmod_path = sys.argv[1]\nmod_name = mod_path.split('.')[-1]\nmodule = importlib.import_module(f'{mod_path}')\n\n######## HEADER ########\nheader = f'''[Home](https://kellyjonbrazil.github.io/jc/)\n<a id=\"{mod_path}\"></a>\n\n# {mod_path}\n'''\n\nsummary = module.__doc__ or ''\n\nfunctions = []\nfor attribute in dir(module):\n    if isfunction(getattr(module, attribute)) \\\n        and not getattr(module, attribute).__name__.startswith('_'):\n\n        if 'jc.parsers.' in mod_path and not 'universal' in mod_path:\n            if attribute == 'parse':\n                functions.append(attribute)\n\n        else:\n            if not attribute in ignore_lib_functions:\n                functions.append(attribute)\n\n######## TABLE OF CONTENTS ########\ntoc = f'## Table of Contents\\n\\n* [{mod_path}](#{mod_path})\\n'\nfor api in functions:\n    toc = f'{toc}  * [{api}](#{mod_path}.{api})\\n'\n\n######## API DOCS ########\napi_docs = ''\nfor api in functions:\n    api_function = getattr(module, api)\n\n    this_header = f'<a id=\"{mod_path}.{api}\"></a>\\n\\n### {api}\\n'\n    this_sig = str(signature(api_function))\n    formatted_sig = yapf.yapf_api.FormatCode(f'def {api_function.__name__}{this_sig}:\\n    pass' )\n    formatted_sig = formatted_sig[0].split(':\\n    pass')[0]\n    this_name_and_sig = f'{this_header}\\n```python\\n{formatted_sig}\\n```'\n\n    this_doc = cleandoc(api_function.__doc__)\n    api_docs = api_docs + this_name_and_sig + '\\n\\n' + this_doc + '\\n\\n'\n\n######## FOOTER ########\nfooter = ''\nif 'jc.parsers.' in mod_path and not 'universal' in mod_path:\n    footer = '### Parser Information\\n'\n    comp = ', '.join(module.info.compatible)\n    ver = module.info.version\n    author = module.info.author\n    author_email = module.info.author_email\n    slurpable = 'slurpable' in module.info.tags\n    footer = footer + f'Compatibility:  {comp}\\n\\n'\n    footer = footer + f'Source: [`jc/parsers/{mod_name}.py`](https://github.com/kellyjonbrazil/jc/blob/master/jc/parsers/{mod_name}.py)\\n\\n'\n    if slurpable:\n        footer = footer + 'This parser can be used with the `--slurp` command-line option.\\n\\n'\n    footer = footer + f'Version {ver} by {author} ({author_email})'\n\nfinal_doc = ''\nif 'jc.parsers.' in mod_path and not 'universal' in mod_path:\n    final_doc = header + '\\n' + summary + '\\n' + api_docs + footer\nelif mod_path == 'jc':\n    final_doc = header + '\\n' + summary\nelse:\n    final_doc = header + '\\n' + toc + '\\n' + summary + '\\n\\n' + api_docs\n\nprint(final_doc)\n"
        },
        {
          "name": "docgen.sh",
          "type": "blob",
          "size": 1.771484375,
          "content": "#!/bin/bash\n# Generate markdown document files (*.md)\n# Requires the yapf python library\n# use ./docgen all to generate all docs\n\ncd jc\n(\n    echo Building docs for: package\n    ../doc2md.py jc > ../docs/readme.md && echo \"+++ package docs complete\" || echo \"*** PACKAGE DOCS FAILED ***\"\n) &\n\n(\n    echo Building docs for: lib\n    ../doc2md.py jc.lib > ../docs/lib.md && echo \"+++ lib docs complete\" || echo \"*** LIB DOCS FAILED ***\"\n) &\n\n(\n    echo Building docs for: utils\n    ../doc2md.py jc.utils > ../docs/utils.md && echo \"+++ utils docs complete\" || echo \"*** UTILS DOCS FAILED ***\"\n) &\n\n(\n    echo Building docs for: streaming\n    ../doc2md.py jc.streaming > ../docs/streaming.md && echo \"+++ streaming docs complete\" || echo \"*** STREAMING DOCS FAILED ***\"\n) &\n\n(\n    echo Building docs for: universal parser\n    ../doc2md.py jc.parsers.universal > ../docs/parsers/universal.md && echo \"+++ universal parser docs complete\" || echo \"*** UNIVERSAL PARSER DOCS FAILED ***\"\n) &\n\n# a bit of inception here... jc is being used to help\n# automate the generation of its own documentation. :)\n\n# pull jc parser objects into a bash array from jq\n# filter out any plugin parsers\nparsers=()\nwhile read -r value\ndo\n    parsers+=(\"$value\")\ndone < <(jc -a | jq -c '.parsers[] | select(.plugin != true)')\n\nfor parser in \"${parsers[@]}\"; do\n    parser_name=$(jq -r '.name' <<< \"$parser\")\n        {\n            if [[ $1 == \"all\" ]] || ! git diff --quiet --exit-code HEAD~5 -- \"parsers/${parser_name}.py\"; then\n                echo \"Building docs for: ${parser_name}\"\n                ../doc2md.py jc.parsers.\"${parser_name}\" > ../docs/parsers/\"${parser_name}\".md && echo \"+++ ${parser_name} docs complete\" || echo \"*** ${parser_name} DOCS FAILED ***\"\n            fi\n        } &\ndone\nwait\necho \"Document Generation Complete\"\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "install.sh",
          "type": "blob",
          "size": 0.044921875,
          "content": "#!/bin/bash\npip3 install --upgrade --user -e ."
        },
        {
          "name": "jc",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "mangen.py",
          "type": "blob",
          "size": 0.4443359375,
          "content": "#!/usr/bin/env python3\n# Generate man page from jc metadata using jinja2 templates\nfrom datetime import date\nimport jc.cli\nfrom jinja2 import Environment, FileSystemLoader\n\nfile_loader = FileSystemLoader('templates')\nenv = Environment(loader=file_loader)\ntemplate = env.get_template('manpage_template')\noutput = template.render(today=date.today(),\n                         jc=jc.cli.JcCli.about_jc())\n\nwith open('man/jc.1', 'w') as f:\n    f.write(output)\n"
        },
        {
          "name": "pypi-upload.sh",
          "type": "blob",
          "size": 0.0302734375,
          "content": "#!/bin/bash\ntwine upload dist/*"
        },
        {
          "name": "readmegen.py",
          "type": "blob",
          "size": 0.44921875,
          "content": "#!/usr/bin/env python3\n# Generate README.md from jc metadata using jinja2 templates\nimport jc.cli\nimport jc.lib\nfrom jinja2 import Environment, FileSystemLoader\n\nfile_loader = FileSystemLoader('templates')\nenv = Environment(loader=file_loader)\ntemplate = env.get_template('readme_template')\noutput = template.render(parsers=jc.lib.all_parser_info(),\n                         info=jc.cli.JcCli.about_jc())\n\nwith open('README.md', 'w') as f:\n    f.write(output)\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.052734375,
          "content": "ruamel.yaml>=0.15.0\nxmltodict>=0.12.0\nPygments>=2.3.0\n"
        },
        {
          "name": "runtests-missing-libs.sh",
          "type": "blob",
          "size": 0.267578125,
          "content": "#!/bin/bash\n# system should be in \"America/Los_Angeles\" timezone for all tests to pass\n# ensure no local plugin parsers are installed for all tests to pass\n\npip uninstall pygments ruamel.yaml xmltodict --yes\npython3 -m unittest -v\npip install pygments ruamel.yaml xmltodict\n"
        },
        {
          "name": "runtests.sh",
          "type": "blob",
          "size": 0.1982421875,
          "content": "#!/bin/bash\n# system should be in \"America/Los_Angeles\" timezone for all tests to pass\n# ensure no local plugin parsers are installed for all tests to pass\n\nTZ=America/Los_Angeles python3 -m unittest -v\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.037109375,
          "content": "[metadata]\nlicense_files = LICENSE.md\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.0078125,
          "content": "import setuptools\n\nwith open('README.md', 'r') as f:\n    long_description = f.read()\n\nsetuptools.setup(\n    name='jc',\n    version='1.25.4',\n    author='Kelly Brazil',\n    author_email='kellyjonbrazil@gmail.com',\n    description='Converts the output of popular command-line tools and file-types to JSON.',\n    install_requires=[\n        'ruamel.yaml>=0.15.0',\n        'xmltodict>=0.12.0',\n        'Pygments>=2.3.0'\n    ],\n    license='MIT',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    python_requires='>=3.6',\n    url='https://github.com/kellyjonbrazil/jc',\n    packages=setuptools.find_packages(exclude=['*.tests', '*.tests.*', 'tests.*', 'tests']),\n    package_data={'jc': ['py.typed']},\n    entry_points={\n        'console_scripts': [\n            'jc=jc.cli:main'\n        ]\n    },\n    classifiers=[\n        'Programming Language :: Python :: 3',\n        'License :: OSI Approved :: MIT License',\n        'Operating System :: OS Independent',\n        'Topic :: Utilities'\n    ]\n)\n"
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "updatedocs.sh",
          "type": "blob",
          "size": 0.6806640625,
          "content": "#!/bin/bash\n# Update all documentation (README.md, Man page, Doc files)\n\n(\n    echo === Building README.md\n    ./readmegen.py && echo \"++++ README.md build successful\" || echo \"---- README.md build failed\"\n) &\n\n(\n    echo === Building man page\n    ./mangen.py && echo \"++++ man page build successful\" || echo \"---- man page build failed\"\n) &\n\n(\n    echo === Building documentation\n    ./docgen.sh && echo \"++++ documentation build successful\" || echo \"---- documentation build failed\"\n) &\n\nwait\necho\necho \"All documentation updated\"\n\necho\necho \"Building shell completion scripts\"\n./build-completions.py && echo \"++++ shell completion build successful\" || echo \"---- shell completion build failed\"\n"
        }
      ]
    }
  ]
}