{
  "metadata": {
    "timestamp": 1736560580977,
    "page": 198,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "iGhibli/iOS-DeviceSupport",
      "stars": 8142,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.017578125,
          "content": "# Mac OS\n.DS_Store"
        },
        {
          "name": "DeviceSupport",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.81640625,
          "content": "# iOS-DeviceSupport\n\nThis repository holds the device support files for the iOS, and I will update it regularly.\n\n## Usage\n\nSee docs: [https://ighibli.github.io/2017/03/28/Could-not-locate-device-support-files/](https://ighibli.github.io/2017/03/28/Could-not-locate-device-support-files/)\n\nBelow command will try to unzip all new device support files to `/Applications/Xcode.app`.\n\n```sh\nsudo ./deploy.py\n```\n\nYou can use `-t` if your Xcode is not in `/Applications/` or has different name.\n\n```sh\nsudo ./deploy.py -t /Applications/Xcode\\ 9.app\n```\n\n```sh\n./deploy.py -h\nusage: deploy.py [-h] [-t TARGET]\n\noptional arguments:\n  -h, --help  show this help message and exit\n  -t TARGET   The path for Xcode\n```\n\n## Supported versions\n\n1. iOS8\n   * 8.0 `2017/04/07`\n   * 8.1 `2017/04/07`\n   * 8.2 `2017/04/07`\n   * 8.3 `2017/04/07`\n   * 8.4 `2017/04/07`\n2. iOS9\n   * 9.0 `2017/04/07`\n   * 9.1 `2017/04/07`\n   * 9.2 `2017/04/07`\n   * 9.3 `2017/04/07`\n3. iOS10\n   * 10.0 (14A345) `2017/04/07`\n   * 10.0 `2017/12/05`\n   * 10.1 (14B72) `2017/04/07`\n   * 10.1 `2017/12/05`\n   * 10.2 (14C92) `2017/04/07`\n   * 10.2 `2017/12/05`\n   * 10.3 (14E269) `2017/04/07`\n   * 10.3 `2017/12/05`\n4. iOS11\n   * 11.0 `2017/12/05`\n   * 11.1 (15B87) `2017/12/05`\n   * 11.1 `2017/12/11`\n   * 11.2 (15C107) `2017/12/11`\n   * 11.2 `2018/03/06`\n   * 11.3 (15E5167d) `2018/01/30`\n   * 11.3 (15E5201e) `2018/03/06`\n   * 11.3 `2018/04/09`\n   * 11.4 (15F5037c) `2018/04/09`\n   * 11.4 (15F5061c) `2018/07/29`\n   * 11.4 (15F79) `2018/07/29`\n   * 11.4 `2018/06/07`\n5. iOS12\n   * 12.0 (16A5288q) `2018/06/07`\n   * 12.0 (16A5308d) `2018/06/19`\n   * 12.0 (16A5318d) `2018/06/29`\n   * 12.0 (16A5327d) `2018/07/20`\n   * 12.0 (16A5339e) `2018/07/31`\n   * 12.0 (16A5354b) `2018/08/15`\n   * 12.0 (16A366) `2018/09/18`\n   * 12.0 `2019/01/29`\n   * 12.1 (16B5059d) `2018/09/21`\n   * 12.1 (16B5068g) `2018/10/08`\n   * 12.1 (16B5084a) `2018/10/16`\n   * 12.1 (16B91) `2018/10/31`\n   * 12.1 (16B5084a) `2018/10/16`\n   * 12.1 `2019/01/29`\n   * 12.2 (16E5181e) `2019/01/29`\n   * 12.2 (16E5212e) `2019/03/07`\n   * 12.2 (16E226) `2019/03/27`\n   * 12.3 `2019/06/04`\n   * 12.4 (16G73) `2019/07/22`\n   * 12.4 (FromXcode_11_Beta_7_xip) `2019/09/03`\n6. iOS13\n   * 13.0 `2019/06/04`\n   * 13.0 (FromXcode_11_Beta_7_xip) `2019/09/03`\n   * 13.1 `2019/08/28`\n   * 13.2 `2019/10/02`\n   * 13.2 (FromXcode_11.2.1_GM_Seed) `2019/11/11`\n   * 13.2 (FromXcode11.2.1(11B500)) `2019/11/15`\n   * 13.2 (FromXcode11.3(11C29)) `2019/12/23`\n   * 13.3 (FromXcode_12_GM_seed_xip) `2020/09/16`\n   * 13.4 (FromXcode_11.4_beta_3_xip) `2020/03/19`\n   * 13.4 (FromXcode11.5 (11E608c)) `2020/05/22`\n   * 13.5 (FromXocde_Beta_11.5) `2020/05/16`\n   * 13.5 (FromXcode11.5 (11E608c)) `2020/05/22`\n   * 13.5 (FromXcode_12_beta_2_xip) `2020/07/10`\n   * 13.6 (FromXcode_12_beta_2_xip `2020/07/10`\n   * 13.6 (FromXcode_12_beta_4_xip `2020/08/07`\n   * 13.7 (FromXcode_11_7_xip `2020/09/02`\n   * 13.7 (FromXcode_12_GM_seed_xip) `2020/09/16`\n7. iOS14\n   * 14.0 (FromXcode_12_beta.xip) `2020/06/23`\n   * 14.0 (FromXcode_12_beta_2_xip `2020/07/10`\n   * 14.0 (FromXcode_12_beta_3_xip `2020/07/24`\n   * 14.0 (FromXcode_12_beta_4_xip `2020/08/07`\n   * 14.0 (FromXcode_12_beta_5_xip `2020/08/18`\n   * 14.0 (FromXcode_12_beta_6_xip `2020/08/28`\n   * 14.0 (FromXcode_12_GM_seed_xip) `2020/09/16`\n   * 14.0 (FromXcode_12.2_beta_xip) `2020/09/21`\n   * 14.1 (FromXcode_12.2_beta_3_xip) `2020/10/15`\n   * 14.1 (FromXcode12.1(12A7403)) `2020/10/23`\n   * 14.2 (FromXcode_12.2_beta_xip) `2020/09/21`\n   * 14.2 (FromXcode_12.2_beta_3_xip) `2020/10/15`\n   * 14.2 (FromXcode_12.2_Release_Candidate_xip) `2020/11/09`\n   * 14.2 (FromXcode_12.3_beta_xip) `2020/11/20`\n   * 14.2 (FromXcode_12.4(12D4e)) `2021/01/28`\n   * 14.3 (FromXcode_12.3_beta_xip) `2020/11/20`\n   * 14.3 (FromXcode_12.3_Release_Candidate_xip) `2020/12/09`\n   * 14.3 (FromXcode_12.4(12D4e)) `2021/01/28`\n   * 14.4 (FromXcode_12.4_Release_Candidate_xip) `2021/01/27`\n   * 14.4 (FromXcode_12.4(12D4e)) `2021/01/28`\n   * 14.4 (FromXcode_12.5_beta.xip) `2021/02/08`\n   * 14.4 (FromXcode_12.5_Release_Candidate.xip) `2021/04/25`\n   * 14.5 (FromXcode_12.5_beta_12E5220o)) `2021/02/02`\n   * 14.5 (FromXcode_12.5_beta_2.xip) `2021/02/18`\n   * 14.5 (FromXcode_12.5_beta_3.xip) `2021/03/09`\n   * 14.5 (FromXcode_12.5_Release_Candidate.xip) `2021/04/25`\n   * 14.5 (FromXcode_13_beta.xip) `2021/06/08`\n   * 14.6 (FromXcode_12.4(12D4e)) `2021/07/16`\n8. iOS15\n   * 15.0 (FromXcode_13_beta.xip) `2021/06/08`\n   * 15.0 (FromXcode_13_beta_2.xip) `2021/07/01`\n   * 15.0 (FromXcode_13_beta_3.xip) `2021/07/16`\n   * 15.0 (FromXcode_13_beta_4.xip) `2021/08/03`\n   * 15.0 (FromXcode_13_beta_5.xip) `2021/08/20`\n   * 15.0 (FromXcode_13_Release_Candidate.xip) `2021/09/16`\n   * 15.0 (FromXcode_13.2.1(13C100)) `2022/02/15`\n   * 15.2 (FromXcode_13.2.1(13C100)) `2022/02/15`\n   * 15.2 (FromXcode_13.3_beta_2.xip) `2022/02/16`\n   * 15.4 (FromXcode_13.3_beta_2.xip) `2022/02/16`\n   * 15.4 (FromXcode_13.3(13E113)) `2022/03/17`\n   * 15.4 (FromXcode_13.4(13F17a)) `2022/05/27`\n   * 15.5 (FromXcode_13.4(13F17a)) `2022/05/27`\n   * 15.5 (FromXcode_14.0.1_Release_Candidate.xip) `2022/09/20`\n   * 15.6 (FromXcode_13.3)\n   * 15.6 (FromXcode_14.1_Release_Candidate.xip) `2022/10/20`\n   * 15.7 (FromXcode_14.1_Release_Candidate.xip) `2022/10/20`\n9. iOS16\n   * 16.0 (FromXcode_14_beta.xip) `2022/06/07`\n   * 16.0 (FromXcode_14_beta_2.xip) `2022/06/27`\n   * 16.0 (FromXcode_14_beta_4.xip (14A5270f)) `2022/07/24`\n   * 16.0 (FromXcode_14.xip) `2022/09/12`\n   * 16.0 (FromXcode_14.0.1_Release_Candidate.xip) `2022/09/20`\n   * 16.0 (FromXcode_14.1_Release_Candidate.xip) `2022/10/20`\n   * 16.1 (FromXcode_14.1_beta.xip) `2022/09/14`\n   * 16.1 (FromXCode_14.1(14B5024h)) `2022/09/16`\n   * 16.1 (FromXcode_14.1_Release_Candidate.xip) `2022/10/20`\n   * 16.1 (FromXcode_14.3_beta_2.xip) `2023/03/03`\n   * 16.4 (FromXcode_14.3_beta_2.xip) `2023/03/03`\n   * 16.4 (FromXcode_14.3(14E222b)) `2023/04/04`\n   * 16.4 (FromXcode_15_beta.xip) `2023/06/07`\n\n---\n"
        },
        {
          "name": "deploy.py",
          "type": "blob",
          "size": 1.2421875,
          "content": "#!/usr/bin/env python3 \nimport argparse\nimport zipfile\nfrom os import listdir, path\n\nSRC = path.join(path.dirname(path.abspath(__file__)), 'DeviceSupport')\nDEVICE_SUPPORT_PATH='Contents/Developer/Platforms/iPhoneOS.platform/DeviceSupport'\n\ndef unzip_file(name, target):\n  f = path.join(SRC, name + '.zip')\n  zip_ref = zipfile.ZipFile(f, 'r')\n  zip_ref.extractall(target)\n  zip_ref.close()\n\ndef process(xcode, version):\n  target = path.join(xcode, DEVICE_SUPPORT_PATH)\n  exist = listdir(target)\n  all_files = [i.replace('.zip', '') for i in listdir(SRC) if i.endswith('.zip')]\n  new_files = list(set(all_files) - set(exist))\n\n  if version:\n      new_files = list(filter(lambda x : version in x, new_files))\n\n  for i in new_files:\n    print ('Unzip file \"{}.zip\" to {}'.format(i, target))\n    unzip_file(i, target)\n  print ('\\nUpdate successfully for {}'.format(xcode))\n\nif __name__ == '__main__':\n  parser = argparse.ArgumentParser()\n  parser.add_argument(\n    '-t',\n    type=str,\n    dest='target',\n    default='/Applications/Xcode.app',\n    help='The path for Xcode'\n  )\n  parser.add_argument(\n    '-v',\n    type=str,\n    dest='version',\n    default=None,\n    help='Specific version (default is all)'\n  )\n  args = parser.parse_args()\n  process(args.target, args.version)\n"
        }
      ]
    }
  ]
}