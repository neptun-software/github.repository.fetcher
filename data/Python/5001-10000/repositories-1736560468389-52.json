{
  "metadata": {
    "timestamp": 1736560468389,
    "page": 52,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FunAudioLLM/CosyVoice",
      "stars": 9392,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.546875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# Visual Studio Code files\n.vscode\n.vs\n\n# PyCharm files\n.idea\n\n# Eclipse Project settings\n*.*project\n.settings\n\n# Sublime Text settings\n*.sublime-workspace\n*.sublime-project\n\n# Editor temporaries\n*.swn\n*.swo\n*.swp\n*.swm\n*~\n\n# IPython notebook checkpoints\n.ipynb_checkpoints\n\n# macOS dir files\n.DS_Store\n\nexp\ndata\nraw_wav\ntensorboard\n**/*build*\n\n# Clangd files\n.cache\ncompile_commands.json\n\n# train/inference files\n*.wav\n*.m4a\n*.aac\n*.pt\npretrained_models/*\n*_pb2_grpc.py\n*_pb2.py\n*.tar"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1201171875,
          "content": "[submodule \"third_party/Matcha-TTS\"]\n\tpath = third_party/Matcha-TTS\n\turl = https://github.com/shivammehta25/Matcha-TTS.git\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.271484375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at mikelei@mobvoi.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 0.6552734375,
          "content": "## ModuleNotFoundError: No module named 'matcha'\n\nMatcha-TTS is a third_party module. Please check `third_party` directory. If there is no `Matcha-TTS`, execute `git submodule update --init --recursive`.\n\nrun `export PYTHONPATH=third_party/Matcha-TTS` if you want to use `from cosyvoice.cli.cosyvoice import CosyVoice` in python script.\n\n## cannot find resource.zip or cannot unzip resource.zip\n\nPlease make sure you have git-lfs installed. Execute\n\n```sh\ngit clone https://www.modelscope.cn/iic/CosyVoice-ttsfrd.git pretrained_models/CosyVoice-ttsfrd\ncd pretrained_models/CosyVoice-ttsfrd/\nunzip resource.zip -d .\npip install ttsfrd-0.3.6-cp38-cp38-linux_x86_64.whl\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.8046875,
          "content": "[![SVG Banners](https://svg-banners.vercel.app/api?type=origin&text1=CosyVoice🤠&text2=Text-to-Speech%20💖%20Large%20Language%20Model&width=800&height=210)](https://github.com/Akshay090/svg-banners)\n\n## 👉🏻 CosyVoice 👈🏻\n**CosyVoice 2.0**: [Demos](https://funaudiollm.github.io/cosyvoice2/); [Paper](https://arxiv.org/abs/2412.10117); [Modelscope](https://www.modelscope.cn/studios/iic/CosyVoice2-0.5B); [HuggingFace](https://huggingface.co/spaces/FunAudioLLM/CosyVoice2-0.5B)\n\n**CosyVoice 1.0**: [Demos](https://fun-audio-llm.github.io); [Paper](https://funaudiollm.github.io/pdf/CosyVoice_v1.pdf); [Modelscope](https://www.modelscope.cn/studios/iic/CosyVoice-300M)\n\n## Highlight🔥\n\n**CosyVoice 2.0** has been released! Compared to version 1.0, the new version offers more accurate, more stable, faster, and better speech generation capabilities.\n### Multilingual\n- **Supported Language**: Chinese, English, Japanese, Korean, Chinese dialects (Cantonese, Sichuanese, Shanghainese, Tianjinese, Wuhanese, etc.)\n- **Crosslingual & Mixlingual**：Support zero-shot voice cloning for cross-lingual and code-switching scenarios.\n### Ultra-Low Latency\n- **Bidirectional Streaming Support**: CosyVoice 2.0 integrates offline and streaming modeling technologies.\n- **Rapid First Packet Synthesis**: Achieves latency as low as 150ms while maintaining high-quality audio output.\n### High Accuracy\n- **Improved Pronunciation**: Reduces pronunciation errors by 30% to 50% compared to CosyVoice 1.0.\n- **Benchmark Achievements**: Attains the lowest character error rate on the hard test set of the Seed-TTS evaluation set.\n### Strong Stability\n- **Consistency in Timbre**: Ensures reliable voice consistency for zero-shot and cross-language speech synthesis.\n- **Cross-language Synthesis**: Marked improvements compared to version 1.0.\n### Natural Experience\n- **Enhanced Prosody and Sound Quality**: Improved alignment of synthesized audio, raising MOS evaluation scores from 5.4 to 5.53.\n- **Emotional and Dialectal Flexibility**: Now supports more granular emotional controls and accent adjustments.\n\n## Roadmap\n\n- [x] 2024/12\n\n    - [x] 25hz cosyvoice 2.0 released\n\n- [x] 2024/09\n\n    - [x] 25hz cosyvoice base model\n    - [x] 25hz cosyvoice voice conversion model\n\n- [x] 2024/08\n\n    - [x] Repetition Aware Sampling(RAS) inference for llm stability\n    - [x] Streaming inference mode support, including kv cache and sdpa for rtf optimization\n\n- [x] 2024/07\n\n    - [x] Flow matching training support\n    - [x] WeTextProcessing support when ttsfrd is not available\n    - [x] Fastapi server and client\n\n\n## Install\n\n**Clone and install**\n\n- Clone the repo\n``` sh\ngit clone --recursive https://github.com/FunAudioLLM/CosyVoice.git\n# If you failed to clone submodule due to network failures, please run following command until success\ncd CosyVoice\ngit submodule update --init --recursive\n```\n\n- Install Conda: please see https://docs.conda.io/en/latest/miniconda.html\n- Create Conda env:\n\n``` sh\nconda create -n cosyvoice -y python=3.10\nconda activate cosyvoice\n# pynini is required by WeTextProcessing, use conda to install it as it can be executed on all platform.\nconda install -y -c conda-forge pynini==2.1.5\npip install -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com\n\n# If you encounter sox compatibility issues\n# ubuntu\nsudo apt-get install sox libsox-dev\n# centos\nsudo yum install sox sox-devel\n```\n\n**Model download**\n\nWe strongly recommend that you download our pretrained `CosyVoice2-0.5B` `CosyVoice-300M` `CosyVoice-300M-SFT` `CosyVoice-300M-Instruct` model and `CosyVoice-ttsfrd` resource.\n\n``` python\n# SDK模型下载\nfrom modelscope import snapshot_download\nsnapshot_download('iic/CosyVoice2-0.5B', local_dir='pretrained_models/CosyVoice2-0.5B')\nsnapshot_download('iic/CosyVoice-300M', local_dir='pretrained_models/CosyVoice-300M')\nsnapshot_download('iic/CosyVoice-300M-25Hz', local_dir='pretrained_models/CosyVoice-300M-25Hz')\nsnapshot_download('iic/CosyVoice-300M-SFT', local_dir='pretrained_models/CosyVoice-300M-SFT')\nsnapshot_download('iic/CosyVoice-300M-Instruct', local_dir='pretrained_models/CosyVoice-300M-Instruct')\nsnapshot_download('iic/CosyVoice-ttsfrd', local_dir='pretrained_models/CosyVoice-ttsfrd')\n```\n\n``` sh\n# git模型下载，请确保已安装git lfs\nmkdir -p pretrained_models\ngit clone https://www.modelscope.cn/iic/CosyVoice2-0.5B.git pretrained_models/CosyVoice2-0.5B\ngit clone https://www.modelscope.cn/iic/CosyVoice-300M.git pretrained_models/CosyVoice-300M\ngit clone https://www.modelscope.cn/iic/CosyVoice-300M-25Hz.git pretrained_models/CosyVoice-300M-25Hz\ngit clone https://www.modelscope.cn/iic/CosyVoice-300M-SFT.git pretrained_models/CosyVoice-300M-SFT\ngit clone https://www.modelscope.cn/iic/CosyVoice-300M-Instruct.git pretrained_models/CosyVoice-300M-Instruct\ngit clone https://www.modelscope.cn/iic/CosyVoice-ttsfrd.git pretrained_models/CosyVoice-ttsfrd\n```\n\nOptionally, you can unzip `ttsfrd` resouce and install `ttsfrd` package for better text normalization performance.\n\nNotice that this step is not necessary. If you do not install `ttsfrd` package, we will use WeTextProcessing by default.\n\n``` sh\ncd pretrained_models/CosyVoice-ttsfrd/\nunzip resource.zip -d .\npip install ttsfrd_dependency-0.1-py3-none-any.whl\npip install ttsfrd-0.4.2-cp310-cp310-linux_x86_64.whl\n```\n\n**Basic Usage**\n\nWe strongly recommend using `CosyVoice2-0.5B` for better performance.\nFollow code below for detailed usage of each model.\n\n``` python\nimport sys\nsys.path.append('third_party/Matcha-TTS')\nfrom cosyvoice.cli.cosyvoice import CosyVoice, CosyVoice2\nfrom cosyvoice.utils.file_utils import load_wav\nimport torchaudio\n```\n\n**CosyVoice2 Usage**\n```python\ncosyvoice = CosyVoice2('pretrained_models/CosyVoice2-0.5B', load_jit=False, load_trt=False, fp16=False)\n\n# NOTE if you want to reproduce the results on https://funaudiollm.github.io/cosyvoice2, please add text_frontend=False during inference\n# zero_shot usage\nprompt_speech_16k = load_wav('./asset/zero_shot_prompt.wav', 16000)\nfor i, j in enumerate(cosyvoice.inference_zero_shot('收到好友从远方寄来的生日礼物，那份意外的惊喜与深深的祝福让我心中充满了甜蜜的快乐，笑容如花儿般绽放。', '希望你以后能够做的比我还好呦。', prompt_speech_16k, stream=False)):\n    torchaudio.save('zero_shot_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n\n# fine grained control, for supported control, check cosyvoice/tokenizer/tokenizer.py#L248\nfor i, j in enumerate(cosyvoice.inference_cross_lingual('在他讲述那个荒诞故事的过程中，他突然[laughter]停下来，因为他自己也被逗笑了[laughter]。', prompt_speech_16k, stream=False)):\n    torchaudio.save('fine_grained_control_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n\n# instruct usage\nfor i, j in enumerate(cosyvoice.inference_instruct2('收到好友从远方寄来的生日礼物，那份意外的惊喜与深深的祝福让我心中充满了甜蜜的快乐，笑容如花儿般绽放。', '用四川话说这句话', prompt_speech_16k, stream=False)):\n    torchaudio.save('instruct_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n```\n\n**CosyVoice Usage**\n```python\ncosyvoice = CosyVoice('pretrained_models/CosyVoice-300M-SFT', load_jit=False, load_trt=False, fp16=False)\n# sft usage\nprint(cosyvoice.list_available_spks())\n# change stream=True for chunk stream inference\nfor i, j in enumerate(cosyvoice.inference_sft('你好，我是通义生成式语音大模型，请问有什么可以帮您的吗？', '中文女', stream=False)):\n    torchaudio.save('sft_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n\ncosyvoice = CosyVoice('pretrained_models/CosyVoice-300M') # or change to pretrained_models/CosyVoice-300M-25Hz for 25Hz inference\n# zero_shot usage, <|zh|><|en|><|jp|><|yue|><|ko|> for Chinese/English/Japanese/Cantonese/Korean\nprompt_speech_16k = load_wav('./asset/zero_shot_prompt.wav', 16000)\nfor i, j in enumerate(cosyvoice.inference_zero_shot('收到好友从远方寄来的生日礼物，那份意外的惊喜与深深的祝福让我心中充满了甜蜜的快乐，笑容如花儿般绽放。', '希望你以后能够做的比我还好呦。', prompt_speech_16k, stream=False)):\n    torchaudio.save('zero_shot_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n# cross_lingual usage\nprompt_speech_16k = load_wav('./asset/cross_lingual_prompt.wav', 16000)\nfor i, j in enumerate(cosyvoice.inference_cross_lingual('<|en|>And then later on, fully acquiring that company. So keeping management in line, interest in line with the asset that\\'s coming into the family is a reason why sometimes we don\\'t buy the whole thing.', prompt_speech_16k, stream=False)):\n    torchaudio.save('cross_lingual_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n# vc usage\nprompt_speech_16k = load_wav('./asset/zero_shot_prompt.wav', 16000)\nsource_speech_16k = load_wav('./asset/cross_lingual_prompt.wav', 16000)\nfor i, j in enumerate(cosyvoice.inference_vc(source_speech_16k, prompt_speech_16k, stream=False)):\n    torchaudio.save('vc_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n\ncosyvoice = CosyVoice('pretrained_models/CosyVoice-300M-Instruct')\n# instruct usage, support <laughter></laughter><strong></strong>[laughter][breath]\nfor i, j in enumerate(cosyvoice.inference_instruct('在面对挑战时，他展现了非凡的<strong>勇气</strong>与<strong>智慧</strong>。', '中文男', 'Theo \\'Crimson\\', is a fiery, passionate rebel leader. Fights with fervor for justice, but struggles with impulsiveness.', stream=False)):\n    torchaudio.save('instruct_{}.wav'.format(i), j['tts_speech'], cosyvoice.sample_rate)\n```\n\n**Start web demo**\n\nYou can use our web demo page to get familiar with CosyVoice quickly.\n\nPlease see the demo website for details.\n\n``` python\n# change iic/CosyVoice-300M-SFT for sft inference, or iic/CosyVoice-300M-Instruct for instruct inference\npython3 webui.py --port 50000 --model_dir pretrained_models/CosyVoice-300M\n```\n\n**Advanced Usage**\n\nFor advanced user, we have provided train and inference scripts in `examples/libritts/cosyvoice/run.sh`.\n\n**Build for deployment**\n\nOptionally, if you want service deployment,\nyou can run following steps.\n\n``` sh\ncd runtime/python\ndocker build -t cosyvoice:v1.0 .\n# change iic/CosyVoice-300M to iic/CosyVoice-300M-Instruct if you want to use instruct inference\n# for grpc usage\ndocker run -d --runtime=nvidia -p 50000:50000 cosyvoice:v1.0 /bin/bash -c \"cd /opt/CosyVoice/CosyVoice/runtime/python/grpc && python3 server.py --port 50000 --max_conc 4 --model_dir iic/CosyVoice-300M && sleep infinity\"\ncd grpc && python3 client.py --port 50000 --mode <sft|zero_shot|cross_lingual|instruct>\n# for fastapi usage\ndocker run -d --runtime=nvidia -p 50000:50000 cosyvoice:v1.0 /bin/bash -c \"cd /opt/CosyVoice/CosyVoice/runtime/python/fastapi && python3 server.py --port 50000 --model_dir iic/CosyVoice-300M && sleep infinity\"\ncd fastapi && python3 client.py --port 50000 --mode <sft|zero_shot|cross_lingual|instruct>\n```\n\n## Discussion & Communication\n\nYou can directly discuss on [Github Issues](https://github.com/FunAudioLLM/CosyVoice/issues).\n\nYou can also scan the QR code to join our official Dingding chat group.\n\n<img src=\"./asset/dingding.png\" width=\"250px\">\n\n## Acknowledge\n\n1. We borrowed a lot of code from [FunASR](https://github.com/modelscope/FunASR).\n2. We borrowed a lot of code from [FunCodec](https://github.com/modelscope/FunCodec).\n3. We borrowed a lot of code from [Matcha-TTS](https://github.com/shivammehta25/Matcha-TTS).\n4. We borrowed a lot of code from [AcademiCodec](https://github.com/yangdongchao/AcademiCodec).\n5. We borrowed a lot of code from [WeNet](https://github.com/wenet-e2e/wenet).\n\n## Disclaimer\nThe content provided above is for academic purposes only and is intended to demonstrate technical capabilities. Some examples are sourced from the internet. If any content infringes on your rights, please contact us to request its removal.\n"
        },
        {
          "name": "asset",
          "type": "tree",
          "content": null
        },
        {
          "name": "cosyvoice",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 1.0576171875,
          "content": "--extra-index-url https://download.pytorch.org/whl/cu121\n--extra-index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/onnxruntime-cuda-12/pypi/simple/ # https://github.com/microsoft/onnxruntime/issues/21684\nconformer==0.3.2\ndeepspeed==0.14.2; sys_platform == 'linux'\ndiffusers==0.27.2\ngdown==5.1.0\ngradio==5.4.0\ngrpcio==1.57.0\ngrpcio-tools==1.57.0\nhuggingface-hub==0.25.2\nhydra-core==1.3.2\nHyperPyYAML==1.2.2\ninflect==7.3.1\nlibrosa==0.10.2\nlightning==2.2.4\nmatplotlib==3.7.5\nmodelscope==1.15.0\nnetworkx==3.1\nomegaconf==2.3.0\nonnx==1.16.0\nonnxruntime-gpu==1.18.0; sys_platform == 'linux'\nonnxruntime==1.18.0; sys_platform == 'darwin' or sys_platform == 'windows'\nopenai-whisper==20231117\nprotobuf==4.25\npydantic==2.7.0\nrich==13.7.1\nsoundfile==0.12.1\ntensorboard==2.14.0\ntensorrt-cu12==10.0.1; sys_platform == 'linux'\ntensorrt-cu12-bindings==10.0.1; sys_platform == 'linux'\ntensorrt-cu12-libs==10.0.1; sys_platform == 'linux'\ntorch==2.3.1\ntorchaudio==2.3.1\ntransformers==4.40.1\nuvicorn==0.30.0\nwget==3.2\nfastapi==0.115.6\nfastapi-cli==0.0.4\nWeTextProcessing==1.0.3\n"
        },
        {
          "name": "runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "webui.py",
          "type": "blob",
          "size": 10.6630859375,
          "content": "# Copyright (c) 2024 Alibaba Inc (authors: Xiang Lyu, Liu Yue)\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nimport os\nimport sys\nimport argparse\nimport gradio as gr\nimport numpy as np\nimport torch\nimport torchaudio\nimport random\nimport librosa\nROOT_DIR = os.path.dirname(os.path.abspath(__file__))\nsys.path.append('{}/third_party/Matcha-TTS'.format(ROOT_DIR))\nfrom cosyvoice.cli.cosyvoice import CosyVoice, CosyVoice2\nfrom cosyvoice.utils.file_utils import load_wav, logging\nfrom cosyvoice.utils.common import set_all_random_seed\n\ninference_mode_list = ['预训练音色', '3s极速复刻', '跨语种复刻', '自然语言控制']\ninstruct_dict = {'预训练音色': '1. 选择预训练音色\\n2. 点击生成音频按钮',\n                 '3s极速复刻': '1. 选择prompt音频文件，或录入prompt音频，注意不超过30s，若同时提供，优先选择prompt音频文件\\n2. 输入prompt文本\\n3. 点击生成音频按钮',\n                 '跨语种复刻': '1. 选择prompt音频文件，或录入prompt音频，注意不超过30s，若同时提供，优先选择prompt音频文件\\n2. 点击生成音频按钮',\n                 '自然语言控制': '1. 选择预训练音色\\n2. 输入instruct文本\\n3. 点击生成音频按钮'}\nstream_mode_list = [('否', False), ('是', True)]\nmax_val = 0.8\n\n\ndef generate_seed():\n    seed = random.randint(1, 100000000)\n    return {\n        \"__type__\": \"update\",\n        \"value\": seed\n    }\n\n\ndef postprocess(speech, top_db=60, hop_length=220, win_length=440):\n    speech, _ = librosa.effects.trim(\n        speech, top_db=top_db,\n        frame_length=win_length,\n        hop_length=hop_length\n    )\n    if speech.abs().max() > max_val:\n        speech = speech / speech.abs().max() * max_val\n    speech = torch.concat([speech, torch.zeros(1, int(cosyvoice.sample_rate * 0.2))], dim=1)\n    return speech\n\n\ndef change_instruction(mode_checkbox_group):\n    return instruct_dict[mode_checkbox_group]\n\n\ndef generate_audio(tts_text, mode_checkbox_group, sft_dropdown, prompt_text, prompt_wav_upload, prompt_wav_record, instruct_text,\n                   seed, stream, speed):\n    if prompt_wav_upload is not None:\n        prompt_wav = prompt_wav_upload\n    elif prompt_wav_record is not None:\n        prompt_wav = prompt_wav_record\n    else:\n        prompt_wav = None\n    # if instruct mode, please make sure that model is iic/CosyVoice-300M-Instruct and not cross_lingual mode\n    if mode_checkbox_group in ['自然语言控制']:\n        if cosyvoice.instruct is False:\n            gr.Warning('您正在使用自然语言控制模式, {}模型不支持此模式, 请使用iic/CosyVoice-300M-Instruct模型'.format(args.model_dir))\n            yield (cosyvoice.sample_rate, default_data)\n        if instruct_text == '':\n            gr.Warning('您正在使用自然语言控制模式, 请输入instruct文本')\n            yield (cosyvoice.sample_rate, default_data)\n        if prompt_wav is not None or prompt_text != '':\n            gr.Info('您正在使用自然语言控制模式, prompt音频/prompt文本会被忽略')\n    # if cross_lingual mode, please make sure that model is iic/CosyVoice-300M and tts_text prompt_text are different language\n    if mode_checkbox_group in ['跨语种复刻']:\n        if cosyvoice.instruct is True:\n            gr.Warning('您正在使用跨语种复刻模式, {}模型不支持此模式, 请使用iic/CosyVoice-300M模型'.format(args.model_dir))\n            yield (cosyvoice.sample_rate, default_data)\n        if instruct_text != '':\n            gr.Info('您正在使用跨语种复刻模式, instruct文本会被忽略')\n        if prompt_wav is None:\n            gr.Warning('您正在使用跨语种复刻模式, 请提供prompt音频')\n            yield (cosyvoice.sample_rate, default_data)\n        gr.Info('您正在使用跨语种复刻模式, 请确保合成文本和prompt文本为不同语言')\n    # if in zero_shot cross_lingual, please make sure that prompt_text and prompt_wav meets requirements\n    if mode_checkbox_group in ['3s极速复刻', '跨语种复刻']:\n        if prompt_wav is None:\n            gr.Warning('prompt音频为空，您是否忘记输入prompt音频？')\n            yield (cosyvoice.sample_rate, default_data)\n        if torchaudio.info(prompt_wav).sample_rate < prompt_sr:\n            gr.Warning('prompt音频采样率{}低于{}'.format(torchaudio.info(prompt_wav).sample_rate, prompt_sr))\n            yield (cosyvoice.sample_rate, default_data)\n    # sft mode only use sft_dropdown\n    if mode_checkbox_group in ['预训练音色']:\n        if instruct_text != '' or prompt_wav is not None or prompt_text != '':\n            gr.Info('您正在使用预训练音色模式，prompt文本/prompt音频/instruct文本会被忽略！')\n        if sft_dropdown == '':\n            gr.Warning('没有可用的预训练音色！')\n            yield (cosyvoice.sample_rate, default_data)\n    # zero_shot mode only use prompt_wav prompt text\n    if mode_checkbox_group in ['3s极速复刻']:\n        if prompt_text == '':\n            gr.Warning('prompt文本为空，您是否忘记输入prompt文本？')\n            yield (cosyvoice.sample_rate, default_data)\n        if instruct_text != '':\n            gr.Info('您正在使用3s极速复刻模式，预训练音色/instruct文本会被忽略！')\n\n    if mode_checkbox_group == '预训练音色':\n        logging.info('get sft inference request')\n        set_all_random_seed(seed)\n        for i in cosyvoice.inference_sft(tts_text, sft_dropdown, stream=stream, speed=speed):\n            yield (cosyvoice.sample_rate, i['tts_speech'].numpy().flatten())\n    elif mode_checkbox_group == '3s极速复刻':\n        logging.info('get zero_shot inference request')\n        prompt_speech_16k = postprocess(load_wav(prompt_wav, prompt_sr))\n        set_all_random_seed(seed)\n        for i in cosyvoice.inference_zero_shot(tts_text, prompt_text, prompt_speech_16k, stream=stream, speed=speed):\n            yield (cosyvoice.sample_rate, i['tts_speech'].numpy().flatten())\n    elif mode_checkbox_group == '跨语种复刻':\n        logging.info('get cross_lingual inference request')\n        prompt_speech_16k = postprocess(load_wav(prompt_wav, prompt_sr))\n        set_all_random_seed(seed)\n        for i in cosyvoice.inference_cross_lingual(tts_text, prompt_speech_16k, stream=stream, speed=speed):\n            yield (cosyvoice.sample_rate, i['tts_speech'].numpy().flatten())\n    else:\n        logging.info('get instruct inference request')\n        set_all_random_seed(seed)\n        for i in cosyvoice.inference_instruct(tts_text, sft_dropdown, instruct_text, stream=stream, speed=speed):\n            yield (cosyvoice.sample_rate, i['tts_speech'].numpy().flatten())\n\n\ndef main():\n    with gr.Blocks() as demo:\n        gr.Markdown(\"### 代码库 [CosyVoice](https://github.com/FunAudioLLM/CosyVoice) \\\n                    预训练模型 [CosyVoice-300M](https://www.modelscope.cn/models/iic/CosyVoice-300M) \\\n                    [CosyVoice-300M-Instruct](https://www.modelscope.cn/models/iic/CosyVoice-300M-Instruct) \\\n                    [CosyVoice-300M-SFT](https://www.modelscope.cn/models/iic/CosyVoice-300M-SFT)\")\n        gr.Markdown(\"#### 请输入需要合成的文本，选择推理模式，并按照提示步骤进行操作\")\n\n        tts_text = gr.Textbox(label=\"输入合成文本\", lines=1, value=\"我是通义实验室语音团队全新推出的生成式语音大模型，提供舒适自然的语音合成能力。\")\n        with gr.Row():\n            mode_checkbox_group = gr.Radio(choices=inference_mode_list, label='选择推理模式', value=inference_mode_list[0])\n            instruction_text = gr.Text(label=\"操作步骤\", value=instruct_dict[inference_mode_list[0]], scale=0.5)\n            sft_dropdown = gr.Dropdown(choices=sft_spk, label='选择预训练音色', value=sft_spk[0] if len(sft_spk) != 0 else '', scale=0.25)\n            stream = gr.Radio(choices=stream_mode_list, label='是否流式推理', value=stream_mode_list[0][1])\n            speed = gr.Number(value=1, label=\"速度调节(仅支持非流式推理)\", minimum=0.5, maximum=2.0, step=0.1)\n            with gr.Column(scale=0.25):\n                seed_button = gr.Button(value=\"\\U0001F3B2\")\n                seed = gr.Number(value=0, label=\"随机推理种子\")\n\n        with gr.Row():\n            prompt_wav_upload = gr.Audio(sources='upload', type='filepath', label='选择prompt音频文件，注意采样率不低于16khz')\n            prompt_wav_record = gr.Audio(sources='microphone', type='filepath', label='录制prompt音频文件')\n        prompt_text = gr.Textbox(label=\"输入prompt文本\", lines=1, placeholder=\"请输入prompt文本，需与prompt音频内容一致，暂时不支持自动识别...\", value='')\n        instruct_text = gr.Textbox(label=\"输入instruct文本\", lines=1, placeholder=\"请输入instruct文本.\", value='')\n\n        generate_button = gr.Button(\"生成音频\")\n\n        audio_output = gr.Audio(label=\"合成音频\", autoplay=True, streaming=True)\n\n        seed_button.click(generate_seed, inputs=[], outputs=seed)\n        generate_button.click(generate_audio,\n                              inputs=[tts_text, mode_checkbox_group, sft_dropdown, prompt_text, prompt_wav_upload, prompt_wav_record, instruct_text,\n                                      seed, stream, speed],\n                              outputs=[audio_output])\n        mode_checkbox_group.change(fn=change_instruction, inputs=[mode_checkbox_group], outputs=[instruction_text])\n    demo.queue(max_size=4, default_concurrency_limit=2)\n    demo.launch(server_name='0.0.0.0', server_port=args.port)\n\n\nif __name__ == '__main__':\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--port',\n                        type=int,\n                        default=8000)\n    parser.add_argument('--model_dir',\n                        type=str,\n                        default='pretrained_models/CosyVoice2-0.5B',\n                        help='local path or modelscope repo id')\n    args = parser.parse_args()\n    try:\n        cosyvoice = CosyVoice(args.model_dir)\n    except Exception:\n        try:\n            cosyvoice = CosyVoice2(args.model_dir)\n        except Exception:\n            raise TypeError('no valid model_type!')\n\n    sft_spk = cosyvoice.list_available_spks()\n    prompt_sr = 16000\n    default_data = np.zeros(cosyvoice.sample_rate)\n    main()\n"
        }
      ]
    }
  ]
}