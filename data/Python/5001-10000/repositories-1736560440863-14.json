{
  "metadata": {
    "timestamp": 1736560440863,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cleanlab/cleanlab",
      "stars": 9873,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 1,
          "content": "# .coveragerc to control coverage.py\n# https://coverage.readthedocs.io/en/latest/config.html\n[run]\nbranch = True\nomit =\n    cleanlab/experimental/cifar_cnn.py\n    cleanlab/experimental/coteaching.py\n    cleanlab/experimental/label_issues_batched.py\n    cleanlab/experimental/mnist_pytorch.py\n    cleanlab/experimental/span_classification.py\n\n[report]\n# Regexes for lines to exclude from consideration\nexclude_lines =\n    # Have to re-enable the standard pragma\n    pragma: no cover\n\n    # Don't complain about missing debug-only code:\n    def __repr__\n    if self\\.debug\n\n    # Don't complain if tests don't hit defensive assertion / error-reporting code:\n    raise\n    except\n    assert\n    warnings.warn\n    error_message\n    \n    # Use print(f\"...\") for printing out non-pure strings:\n    print\\(\\\"\n    \n    # Don't complain if non-runnable code isn't run:\n    if 0:\n    if __name__ == .__main__.:\n    \n    # Can't unit test big datasets:\n    if big_dataset\n\nignore_errors = True\n\n[html]\ndirectory = coverage_html_report\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2138671875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nindent_style = space\ntrim_trailing_whitespace = true\nindent_size = 4\n\n[*.ipynb]\ninsert_final_newline = false\n\n[*.{yml,yaml}]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.828125,
          "content": "cleanlab/*.ipynb\n.DS_Store\n*/.DS_Store\ntests/fasttext_data/\ndata/\ndocs/_build/\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n.coverage*\n*.py,cover\n.hypothesis/**\n.pytest_cache/**\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\nlogs/\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\nbuild\n_build\ncleanlab-docs\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n.direnv\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\n# Downloaded datasets for docs\n/docs/source/notebooks/aclImdb\n/docs/source/notebooks/data\n/docs/source/notebooks/*.gz\n/docs/source/notebooks/spoken_digits\n/docs/source/notebooks/pretrained_models\n/docs/source/tutorials/datalab/datalab-files/\n\n# Editor files\n.vscode/\n.idea/\n\n# jupyter notebooks\n.ipynb_checkpoints/\n\n# Misc\nresults/\nimage_files*\n\n# datasets\ncifar*\n\n# IPython\nprofile_default/\nipython_config.py\n__pypackages__/\n\n\n# Data files\n**.zip\n**-ubyte\n**.gz\n**.tar\n**.7Z\n**.BZ2\n**.rar\n**.zarr\n**.npy\n\n"
        },
        {
          "name": ".mypy.ini",
          "type": "blob",
          "size": 0.46875,
          "content": "[mypy]\nallow_redefinition = True\n\n[mypy-sklearn.*]\nignore_missing_imports = True\n\n[mypy-scikeras.*]\nignore_missing_imports = True\n\n[mypy-tensorflow.*]\nignore_missing_imports = True\n\n[mypy-IPython.display.*]\nignore_missing_imports = True\n\n[mypy-torchvision.*]\nignore_missing_imports = True\n\n[mypy-tqdm.*]\nignore_missing_imports = True\n\n[mypy-matplotlib.*]\nignore_missing_imports = True\n\n[mypy-datasets.*]\nignore_missing_imports = True\n\n[mypy-scipy.*]\nignore_missing_imports = True\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.0888671875,
          "content": "repos:\n  - repo: https://github.com/psf/black\n    rev: 24.1.1\n    hooks:\n      - id: black\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.2470703125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Providing specific details to ensure your comments are easy to understand\n* Valuing other people's time\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Failing to properly attribute original sources\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nteam@cleanlab.ai.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.146484375,
          "content": "# Contributing to cleanlab\n\nAll kinds of contributions to cleanlab are greatly appreciated. If you're not looking to write code, submitting a [feature request](#feature-requests) or\n[bug report](#bug-reports) is a great way to contribute. If you want to get\nyour hands dirty, you can submit [Pull Requests](#pull-requests), either working on your\nown ideas or addressing [existing issues][issues].\n\nIf you are unsure or confused about anything, please go ahead and submit your\nissue or pull request anyways! We appreciate all contributions, and we'll do\nour best to incorporate your feedback or code into cleanlab.\n\nFor some [ideas on useful contributions](https://github.com/cleanlab/cleanlab/wiki#ideas-for-contributing-to-cleanlab), look for [Issues](https://github.com/cleanlab/cleanlab/issues) or [Projects](https://github.com/cleanlab/cleanlab/projects) with the \"good first issue\" tag. Join our [Slack Community](https://cleanlab.ai/slack) to discuss other ideas!\n\nDetailed contributing instructions can be found in the [Development Guide](DEVELOPMENT.md), please read this carefully!\n \n\n## Feature Requests\n\nDo you have an idea for an awesome new feature for cleanab? Let us know by\n[submitting a feature request][issue].\n\nIf you are inclined to do so, you're welcome to [fork][fork] cleanlab, work on\nimplementing the feature yourself, and submit a patch. In this case, it's\n*highly recommended* that you first [open an issue][issue] describing your\nenhancement to get early feedback on the new feature that you are implementing.\nThis will help avoid wasted efforts and ensure that your work is incorporated\ninto the cleanlab code base.\n\n## Bug Reports\n\nDid something go wrong with cleanlab? Sorry about that! Bug reports are greatly\nappreciated!\n\nWhen you [submit a bug report][issue], please include as much context as you\ncan. This includes information like Python version, cleanlab version, an error\nmessage or stack trace, and detailed steps to reproduce the bug (if possible, including toy data that reproduces the error). The more information you can include, the better.\n\n## Pull Requests\n\nWant to write code to help improve cleanlab? Awesome!\n\nIf there are [open issues][issues], you're more than welcome to work on those (a good place to start is those tagged \"good first issue\"). If you have your own ideas, that's great too! In that case, before working on substantial changes to the code base, it is *highly recommended* that you first\n[open an issue][issue] describing what you intend to work on.\n\nTo contribute your code to the library, you'll want to [fork the repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo), push your changes to your fork, and finally create a new [Pull Request][pr].\n\nDetailed development instructions, such as how to run the tests, are available\nin [DEVELOPMENT.md](DEVELOPMENT.md).\n\n---\n\nIf you have any questions about contributing to cleanlab, feel free to\n[ask][discussions]!\n\n[issue]: https://github.com/cleanlab/cleanlab/issues/new\n[issues]: https://github.com/cleanlab/cleanlab/issues\n[fork]: https://github.com/cleanlab/cleanlab/fork\n[pr]: https://github.com/cleanlab/cleanlab/pulls\n[discussions]: https://github.com/cleanlab/cleanlab/discussions\n"
        },
        {
          "name": "DEVELOPMENT.md",
          "type": "blob",
          "size": 21.1796875,
          "content": "# Development\n\nThis document explains how to set up a development environment for\n[contributing](CONTRIBUTING.md) to cleanlab.\n\n## Setting up a virtual environment\n\nWhile this is not required, we recommend that you do development and testing in\na virtual environment. There are a number of tools to do this, including\n[virtualenv](https://virtualenv.pypa.io/), [pipenv](https://pipenv.pypa.io/),\nand [venv](https://docs.python.org/3/library/venv.html). You can\n[compare](https://stackoverflow.com/questions/41573587/what-is-the-difference-between-venv-pyvenv-pyenv-virtualenv-virtualenvwrappe)\nthe tools and choose what is right for you. Here, we'll explain how to get set\nup with venv, which is built in to Python 3.\n\n```shell\npython3 -m venv ./ENV  # create a new virtual environment in the directory ENV\nsource ./ENV/bin/activate  # switch to using the virtual environment\n```\n\nYou only need to create the virtual environment once, but you will need to\nactivate it every time you start a new shell. Once the virtual environment is\nactivated, the `pip install` commands below will install dependencies into the\nvirtual environment rather than your system Python installation.\n\n## Installing dependencies and cleanlab\n\nRun the following commands in the repository's root directory.\n\n1. Install development requirements\n```shell\npip install -r requirements-dev.txt\n```\n\n2. Install cleanlab as an editable package\n```shell\npip install -e .\n```\n\nFor Macs with Apple silicon: replace `tensorflow` in requirements-dev.txt with: `tensorflow-macos==2.9.2` and `tensorflow-metal==0.5.1`\n\n### Handling optional dependencies\n\nWhen designing a class that relies on an optional, domain-specific runtime dependency, it is better to use lazy-importing to avoid forcing users to install the dependency if they do not need it.\n\nDepending on the coupling of your class to the dependency, you may want to consider importing it at the module-level or as an instance variable of the class or a function that uses the dependency.\n\nIf the dependency is used by many methods in the module or other classes, it is better to import it at the module-level.\nOn the other hand, if the dependency is only used by a handful of methods, then it's better to import it inside the method. If the dependency is not installed, an ImportError should be raised when the method is called, along with instructions on how to install the dependency.\n\nHere is an example of a class that lazily imports CuPy and has a sum method (element-wise) that can be used on both CPU and GPU devices.\n\nUnless an alternative implementations of the sum method is available, an `ImportError` should be raised when the method is called with instructions on how to install the dependency.\n\n<details> <summary>Example code</summary>\n\n```python\ndef lazy_import_cupy():\n  try:\n    import cupy\n  except ImportError as error:\n    # If the dependency is required for the class to work,\n    # replace this block with a raised ImportError containing instructions\n    print(\"Warning: cupy is not installed. Please install it with `pip install cupy`.\")\n    cupy = None\n  return cupy\n\nclass Summation:\n  def __init__(self):\n    self.cupy = lazy_import_cupy()\n  def sum(self, x) -> float:\n    if self.cupy is None:\n      return sum(x)\n    return self.cupy.sum(x)\n```\n</details>\n\n\nFor the build system to recognize the optional dependency, you should add it to the `EXTRAS_REQUIRE` constant in **setup.py**:\n\n<details> <summary>Example code</summary>\n\n```python\nEXTRAS_REQUIRE = {\n    ...\n    \"gpu\": [\n      # Explain why the dependency below is needed,\n      # e.g. \"for performing summation on GPU\"\n      \"cupy\",\n    ],\n}\n```\n\n\nOr assign to a separate variable and add it to `EXTRAS_REQUIRE`\n\n```python\t\nGPU_REQUIRES = [\n  # Explanation ...\n  \"cupy\",\n]\n\nEXTAS_REQUIRE = {\n    ...\n    \"gpu\": GPU_REQUIRES,\n}\n```\n</details>\n\n\nThe package can be installed with the optional dependency (here called `gpu`) via:\n\n1. PyPI installation\n\n```shell\npip install -r \"cleanlab[gpu]\"\n```\n\n2. Editable installation\n\n```shell\npip install -e \".[gpu]\"\n```\n\n## Testing\n\n\n**Download test data**\nThe test data for cleanlab resides in the assets repository. Use the following commands to download test data before running tests.\n```shell\ngit clone https://github.com/cleanlab/assets.git\nmv assets/cleanlab_test_data cleanlab/tests/datalab/data\n```\n\n**Run all the tests:**\n\n```shell\npytest\n```\n\n**Run a specific file or test:**\n\n```shell\npytest -k <filename or filter expression>\n```\n\n**Run with verbose output:**\n\n```shell\npytest --verbose\n```\n\n**Run with code coverage:**\n\n```shell\npytest --cov=cleanlab/ --cov-config .coveragerc --cov-report=html\n```\n\nThe coverage report will be available in `coverage_html_report/index.html`,\nwhich you can open with your web browser.\n\n### Type checking\n\nCleanlab uses [mypy](https://mypy.readthedocs.io/en/stable/) typing. Type checking happens automatically during CI but can be run locally.\n\n**Check typing in all files:**\n\n```shell\nmypy cleanlab\n```\n\nThe above is just a simplified command for demonstration, do NOT run this for testing your own type annotations!\nOur CI adds a few additional flags to the `mypy` command it uses in the file:\n**.github/workflows/ci.yml**.\nTo exactly match the `mypy` command that is executed in CI, copy these flags, and also ensure your version of `mypy` and related packages like `pandas-stubs` match the latest released versions (used in our CI).\n\n### Examples\n\nYou can check that the [examples](https://github.com/cleanlab/examples) still\nwork with changes you make to cleanlab by manually running the notebooks.\nYou can also run all example notebooks as follows:\n\n```shell\ngit clone https://github.com/cleanlab/examples.git\n```\n\nThen specify your local version of cleanlab source in the first line of: **examples/requirements.txt**.\nE.g. you can edit this line to point to your local version of cleanlab as a relative path such as `../cleanlab` if the `cleanlab` and `examples` repos are sibling directories on your computer.\n\nFinally execute the bash script:\n\n```shell\nexamples/run_all_notebooks.sh\n```\n\n\n## How to style new code contributions\n\ncleanlab follows the [Black](https://black.readthedocs.io/) code style (see [pyproject.toml](pyproject.toml)). This is\nenforced by CI, so please format your code by invoking `black` before submitting a pull request.\n\nGenerally aim to follow the [PEP-8 coding style](https://peps.python.org/pep-0008/).\nPlease do not use wildcard `import *` in any files, instead you should always import the specific functions that you need from a module.\n\nAll cleanlab code should have a maximum line length of 100 characters.\n\n### Pre-commit hook\n\nThis repo uses the [pre-commit framework](https://pre-commit.com/) to easily\nset up code style checks that run automatically whenever you make a commit.\nYou can install the git hook scripts with:\n\n```shell\npre-commit install\n```\n\n### EditorConfig\n\nThis repo uses [EditorConfig](https://editorconfig.org/) to keep code style\nconsistent across editors and IDEs. You can install a plugin for your editor,\nand then your editor will automatically ensure that indentation and line\nendings match the project style.\n\n\n## Adding new modules into the source code\n\n  You should go through the following checklist if you intend to add new functionality to the package in a separate module.\n- [x] Add brief description of the module’s purpose in a comment at the top of file and docstrings for every function.\n- [x] Import the module `my_module.py` into main [``__init__.py``](cleanlab/__init__.py)\n- [x] Create detailed unit tests (typically in a new file `tests/test_my_module.py`)\n- [x] Add new module to docs index pages (**docs/source/index.rst**) and create .rst file in **docs/source/cleanlab/** (so that module appears on [docs.cleanlab.ai](https://docs.cleanlab.ai/stable/index.html) -- please verify its documentation also looks good there)\n- [x] Create a QuickStart (**docs/source/tutorials**) notebook that runs main module functionality in 5min or less and add it to index pages (**docs/source/tutorials/index.rst**, **docs/source/index.rst**). Clear cell output before pushing.\n- [x] Create an [examples](https://github.com/cleanlab/examples) notebook that runs more advanced module functionality with a more real-world application (can have a longer run time). Push with printed cell output.\n\n## Contributing new issue types to Datalab\n\nTo contribute a new type of issue that Datalab can automatically detect in any dataset, refer to our guide on [Creating Your Own Issues Manager](https://docs.cleanlab.ai/master/cleanlab/datalab/guide/custom_issue_manager.html).\n\nDo not add your new issue type to the set of issues that Datalab detects by default, our team can add it to this default set later on once it's utility has been thoroughly validated.\n\nDon't forget to update the [issue type descriptions guide](https://github.com/cleanlab/cleanlab/blob/master/docs/source/cleanlab/datalab/guide/issue_type_description.rst) with a brief description of your new issue type.\nIt is ideal to stick to a format that maintains consistency and readability.\nGenerally, the format includes a title, explanation of the issue, required arguments, then any additional information.\nIt would be helpful to include a tip for users on how to detect the issue using Datalab.\n\nTry to add tests for this new issue type. It's a good idea to start with some tests in a separate module in the [issue manager test directory](https://github.com/cleanlab/cleanlab/tree/master/tests/datalab/issue_manager). \n\n\n## Documentation\n\nYou can build the docs from your local cleanlab version by following [these\ninstructions](./docs/README.md#build-the-cleanlab-docs-locally).\n\nIf editing existing docs or adding new tutorials, please first read through our [guidelines](./docs/README.md#tips-for-editing-docstutorials).\n\n## Documentation style\n\ncleanlab uses [NumPy\nstyle](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard)\ndocstrings\n([example](https://www.sphinx-doc.org/en/master/usage/extensions/example_numpy.html)).\n\nAspects that are not covered in the NumPy style or that are different from the\nNumPy style are documented below:\n\n- **Referring to the cleanlab package**: we refer to cleanlab without any\n  special formatting, so no `cleanlab`, just cleanlab.\n- **Cross-referencing**: when mentioning functions/classes/methods, always\n  [cross-reference](https://www.sphinx-doc.org/en/master/usage/restructuredtext/domains.html#cross-referencing-python-objects)\n  them to create a clickable link. Cross-referencing code from Jupyter\n  notebooks is not currently supported.\n- **Variable, module, function, and class names**: when not cross-references,\n  should be written between single back-ticks, like `` `pred_probs` ``. Such\n  names in Jupyter notebooks (Markdown) can be written between single\n  back-ticks as well.\n- **Math**: We support [LaTeX\n  math](https://sphinxcontrib-katex.readthedocs.io/en/v0.8.6/examples.html)\n  with the inline `` :math:`x+y` `` or the block:\n\n  ```\n  .. math::\n\n     \\sum_{0}^{n} 2n+1\n  ```\n- **Pseudocode vs math**: Prefer pseudocode in double backticks over LaTeX math.\n- **Bold vs italics**: Use italics when defining a term, and use bold sparingly\n  for extra emphasis.\n- **Shapes**: Do not include shapes in the type of parameters, instead use\n  `np.array` or `array_like` as the type and specify allowed shapes in the\n  description. See, for example, the documentation for\n  `cleanlab.classification.CleanLearning.fit()`. Format for 1D shape: `(N,1)`\n- **Optional arguments**: for the most part, just put `, optional` in the type.\n- **Type unions**: if a parameter or return type is something like \"a numpy\n  array or None\", you can use \"or\" to separate types, e.g. `np.array or None`,\n  and it'll be parsed correctly.\n- **Parameterized types**: Use [standard Python type\n  hints](https://docs.python.org/3/library/typing.html) for referring to\n  parameters and parameterized types in docs, e.g. `Iterable[int]` or\n  `list[float]`.\n\n### Common variable names / terminology used throughout codebase\n\n- `N` - the number of examples/datapoints in a dataset.\n  - `num_examples` may also be used when additional clarity is needed.\n- `K` - the number of classes (unique labels) for a dataset.\n  - `num_classes` may also be used when additional clarity is needed.\n- `labels` - a label for each example, length should be N (sample-size of dataset)\n- `classes` - set of possible labels for any one example, length should be K (number of possible categories in classification problem)\n\nTry to adhere to this standardized terminology unless you have good reason not to!\n\n### Relative Link Formatting Instructions\n\nUse relative linking to connect information between docs and jupyter notebooks, and make sure links will remain valid in the future as new cleanlab versions are released! Sphinx/html works with relative paths so try to specify relative paths if necessary. For specific situations:\n\n- Link another function or class from within a source code docstring: \n  - If you just want to specify the function/class name (ie. the function/class is unique throughout our library): `` `~cleanlab.file.function_or_class_name` ``. \n  \n    This uses the [Sphinx's](https://www.sphinx-doc.org/en/master/usage/configuration.html#confval-default_role) `default_role = \"py:obj\"` setting, so the leading tilde shortens the link to only display `function_or_class_name`.\n  - If you want to additionally specify the module which the function belongs to: \n      - `` :py:func:`file.function_name <cleanlab.file.function_name>` `` for functions \n      - ``:py:class:`file.class_name <cleanlab.file.class_name>` `` for classes\n\n    Here you have more control over the text that is displayed to display the module name.  When referring to a function that is alternatively defined in other modules as well, always use this option to be more explicit about which module you are referencing.\n- Link a tutorial (rst file) from within a source code docstring or rst file: ``:ref:`tutorial_name <tutorial_name>` ``\n- Link a tutorial notebook (ipynb file) from within a source code docstring or rst file: `` `notebook_name <tutorials/notebook_name.ipynb>`_ `` . (If the notebook is not the in the same folder as the source code, use a relative path)\n- Link a function from within a tutorial notebook: `[function_name](../cleanlab/file.html#cleanlab.file.function_name)`\n\n  Links from master branch tutorials will reference master branch functions, similarly links from tutorials in stable branch will reference stable branch functions since we are using relative paths.\n- Link a specific section of a notebook from within the notebook: `[section title](#section-title)`\n- Link a different tutorial notebook from within a tutorial notebook: `[another notebook](another_notebook.html)`. (Note this only works when the other notebook is in same folder as this notebook, otherwise may need to try relative path)\n- Link another specific section of different notebook from within a tutorial notebook: `[another notebook section title](another_notebook.html#another-notebook-section-title)`\n- Linking examples notebooks from inside tutorial notebooks can be simply done by linking global url of the example notebook in master branch of github.com/cleanlab/examples/\n\n## Packaging and releasing\n\nThe release process is automated using GitHub Actions. When a release is published on the main [cleanlab](https://github.com/cleanlab/cleanlab) repository, the following workflows are triggered:\n\n1. Docs are built and pushed to the `cleanlab-docs` depository within the same organization, which handles the deployment to [docs.cleanlab.ai](https://docs.cleanlab.ai/stable/index.html).\n2. A new release is created on PyPI with the same version number as the release on GitHub.\n\nThere are other workflows that need to be handled manually in other repositories, but that is outside the score of this section.\nThis section will focus on the PyPI release process.\n\n### Developing the PyPI release process\n\nIt's important to test the release process on a separate PyPI project before releasing to the main [cleanlab project](https://pypi.org/project/cleanlab/). For the remainder of this section, we'll refer to the test project as `test-cleanlab-<username>`, where `<username>` is your GitHub username. This name should be unique to avoid conflicts with other users' test projects.\n\n#### Prerequisites\n\n##### PyPI Prerequisites\n\n- Create separate user accounts on [PyPI](https://pypi.org/) and [Test PyPI](https://test.pypi.org/).\n  - [Register here on PyPI](https://pypi.org/account/register/).\n  - [Register here on Test PyPI](https://test.pypi.org/account/register/).\n  - Ideally, these accounts should have the same username, but this is not strictly necessary.\n\n- Add a \"[Trusted Publisher](https://docs.pypi.org/trusted-publishers/)\" on both PyPI accounts (i.e. Publishing with OpenID Connect).\n  - This will allow you to publish packages to PyPI and Test PyPI using GitHub Actions, without needing to store your PyPI credentials in the repository.\n  - Walk through the steps in [\"Creating a PyPI project with a trusted publisher\"](https://docs.pypi.org/trusted-publishers/creating-a-project-through-oidc/) for both PyPI and Test PyPI.\n    - The PyPI Project name is: `test-cleanlab-<username>`.\n    - The owner is: `<username>` (your GitHub username).\n    - The repository name is: `cleanlab` (your fork of the cleanlab repository).\n    - The [workflow file](.github/workflows/release-build-publish.yml) name is: `release-build-publish.yml`\n    - ATTENTION: The environment name should be left empty in the Test PyPI project, and set to `pypi` in the PyPI project.\n      - See discussion on the environment in the [GitHub Prerequisites](#github-prerequisites) section.\n\n##### GitHub Prerequisites\n\n- [Fork the cleanlab repository](https://github.com/cleanlab/cleanlab/fork) to your GitHub account.\n  - This will allow you to test the release process on your fork, on a separate PyPI project.\n\n- On your fork of the cleanlab repository, create two environments called `testpypi` and `pypi` in the \"Environments\" tab, under the repository \"Settings\".\n  - For the `testpypi` environment, add a wait timer of 1 minute to allow TestPyPI uploads to complete processing before testing installation.\n  - For the `pypi` environment, add a protection rule for requiring a review from a maintainer. For extra security, you may disallow a self-review so that a second maintainer must approve the release. \n  - You may wish to limit which tags can trigger a release in these environment, to avoid accidental releases.\n  - Github Docs provides instructions on [how to create a new environment](https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#creating-an-environment) with these considerations.\n\n\n##### Local Prerequisites\n\n- In `pyproject.toml` replace the `project.name` configuration with the value `test-cleanlab-<username>`, where `<username>` is your GitHub username.\n\n#### Testing the release process\n\n1. Push a commit with an updated version number in `cleanlab/version.py`.\n    - Ideally, this should be a patch version bump, e.g. `0.1.0` to `0.1.1` or a minor version bump, e.g. `0.1.X` to `0.2.0`.\n    - This is typically done via a standalone PR to the cleanlab/cleanlab repository.\n\n    ```diff\n    # Bump the version number in cleanlab/version.py\n    - __version__ = \"2.6.0\"\n    + __version__ = \"2.6.1\"\n    ```\n\n2. On the repository's GitHub page, navigate to the \"Releases\" page and click \"Draft a new release\".\n    - Choose a tag version that matches the version number in `cleanlab/version.py`, it should follow the format `vX.Y.Z`, e.g. `v2.6.1` or `v2.7.0`.\n      - This kind of format will be automatically checked by the release workflow.\n      - This tag may not exist yet, but Github allows you to create it upon publishing the release.\n    - Target the `master` branch.\n    - Select the previous tag to compare against, if it exists. Usually this is the previous release tag, e.g. the previous patch version.\n      - GitHub should allow you to generate release notes based on this information.\n    - When you've finalized the release notes and are ready to publish the release, click \"Publish release\".\n    - This will kick off the release workflow, which will build and publish the package to Test PyPI, test the package installation, and then publish the package to PyPI.\n\n3. Open up the \"Actions\" tab on your fork of the cleanlab repository and monitor the progress of the release workflow.\n    - A \"Release Build Publish\" workflow should be triggered by the release, and you can monitor its progress there.\n    - It will check for the project name (for uploading to the proper PyPI project), and validate the version name/tag.\n    - When these steps pass, it will build the distribution and check the contents.\n    - Passing the build step, it will upload the distribution to Test PyPI.\n    - After the upload, it will kick off several test jobs to install the package from Test PyPI and run various tests.\n      - Adding more kinds of tests at this stage in the workflow is a good idea, to ensure the package is working as expected. Just create a new job that `needs` the `verify-version` job, and runs the tests you want to add.\n    - After all the tests pass, it will trigger the final job. However, the environment should be configure to require a review from a maintainer before the final job can be run.\n      - View the deployment and approve it it everything looks good so far. This will trigger the final job to publish the package to PyPI."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.71484375,
          "content": "\n                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.07421875,
          "content": "include LICENSE README.md CONTRIBUTING.md DEVELOPMENT.md CODE_OF_CONDUCT.md\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.1513671875,
          "content": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cleanlab/assets/master/cleanlab/cleanlab_logo_open_source.png\" width=60% height=60%>\n</p>\n\n<div align=\"center\">\n<a href=\"https://pypi.org/pypi/cleanlab/\" target=\"_blank\"><img src=\"https://img.shields.io/pypi/v/cleanlab.svg\" alt=\"pypi_versions\"></a>\n<a href=\"https://pypi.org/pypi/cleanlab/\" target=\"_blank\"><img src=\"https://img.shields.io/badge/python-3.8%2B-blue\" alt=\"py_versions\"></a>\n<a href=\"https://app.codecov.io/gh/cleanlab/cleanlab\" target=\"_blank\"><img src=\"https://codecov.io/gh/cleanlab/cleanlab/branch/master/graph/badge.svg\" alt=\"coverage\"></a>\n<a href=\"https://github.com/cleanlab/cleanlab/stargazers/\" target=\"_blank\"><img src=\"https://img.shields.io/github/stars/cleanlab/cleanlab?style=social&maxAge=2592000\" alt=\"Github Stars\"></a>\n<a href=\"https://cleanlab.ai/slack\" target=\"_blank\"><img src=\"https://img.shields.io/static/v1?logo=slack&style=flat&color=white&label=slack&message=join\" alt=\"Slack Community\"></a>\n<a href=\"https://twitter.com/CleanlabAI\" target=\"_blank\"><img src=\"https://img.shields.io/twitter/follow/CleanlabAI?style=social\" alt=\"Twitter\"></a>\n</div>\n\n<h4 align=\"center\">\n    <p>\n        <a href=\"https://docs.cleanlab.ai/\">Documentation</a> |\n        <a href=\"https://github.com/cleanlab/examples\">Examples</a> |\n        <a href=\"https://cleanlab.ai/blog/\">Blog</a> |\n        <a href=\"#citation-and-related-publications\">Research</a> |\n        <a href=\"#try-easy-mode-with-cleanlab-studio\">Cleanlab Studio</a> |\n        <a href=\"#join-our-community\">Community</a>\n    <p>\n</h4>\n\ncleanlab helps you **clean** data and **lab**els by automatically detecting issues in a ML dataset. To facilitate **machine learning with messy, real-world data**, this data-centric AI package uses your *existing* models to estimate dataset problems that can be fixed to train even *better* models. Improve reliability across supervised learning, LLM, and RAG applications.\n \n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cleanlab/assets/master/cleanlab/datalab_issues.png\" width=74% height=74%>\n</p>\n<p align=\"center\">\n    Examples of various issues in Cat/Dog dataset <b>automatically detected</b> by cleanlab via this code:    \n</p>\n\n```python\n        lab = cleanlab.Datalab(data=dataset, label=\"column_name_for_labels\")\n        # Fit any ML model, get its feature_embeddings & pred_probs for your data\n        lab.find_issues(features=feature_embeddings, pred_probs=pred_probs)\n        lab.report()\n```\n\n- Use cleanlab to automatically check every: [text](https://docs.cleanlab.ai/stable/tutorials/datalab/text.html), [audio](https://docs.cleanlab.ai/stable/tutorials/datalab/audio.html), [image](https://docs.cleanlab.ai/stable/tutorials/datalab/image.html), or [tabular](https://docs.cleanlab.ai/stable/tutorials/datalab/tabular.html) dataset.\n- Use cleanlab to automatically: [detect data issues (outliers, duplicates, label errors, etc)](https://docs.cleanlab.ai/stable/tutorials/datalab/datalab_quickstart.html), [train robust models](https://docs.cleanlab.ai/stable/tutorials/indepth_overview.html), [infer consensus + annotator-quality for multi-annotator data](https://docs.cleanlab.ai/stable/tutorials/multiannotator.html), [suggest data to (re)label next (active learning)](https://github.com/cleanlab/examples/blob/master/active_learning_multiannotator/active_learning.ipynb).\n\n\n---\n\n### Try easy mode with Cleanlab Studio \n\nWhile this open-source package **finds** data issues, its utility depends on you having: a good existing ML model + an interface to efficiently **fix** these issues in your dataset. Providing all these pieces, [Cleanlab Studio](https://cleanlab.ai/blog/data-centric-ai/) is a Data Curation platform to **find and fix** problems in any {text, image, tabular} dataset. Cleanlab Studio [automatically](https://cleanlab.ai/blog/data-centric-ai/) runs optimized algorithms from this package on top of **AutoML & Foundation** models fit to your data, and presents detected issues (+ AI-suggested fixes) in an intelligent [data correction interface](https://www.youtube.com/playlist?list=PLn_2rr2ltYqA1uAC0AnRbPyY-wWVf1aeg).\n\n**[Try it for free!](https://cleanlab.ai/signup/)** Adopting Cleanlab Studio enables users of this package to:\n- Work 100x faster (1 min to analyze your raw data with **zero** code or ML work; optionally use [Python API](https://help.cleanlab.ai/tutorials/))\n- Produce better-quality data (10x more [types of issues](https://help.cleanlab.ai/guide/concepts/cleanlab_columns/) auto detected & **corrected** via built-in AI)\n- Accomplish more (auto-label data, deploy ML instantly, audit LLM inputs/outputs, moderate content, ...)\n- Monitor incoming data and detect issues in real-time (integrate your data pipeline on an [Enterprise plan](https://cleanlab.ai/sales/)) \n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/cleanlab/assets/master/cleanlab/ml-with-cleanlab-studio.png\" alt=\"The modern AI pipeline automated with Cleanlab Studio\">\n</p>\n\n\n## Run cleanlab open-source\n\nThis cleanlab package runs on Python 3.8+ and supports Linux, macOS, as well as Windows.\n\n- Get started [here](https://docs.cleanlab.ai/)! Install via `pip` or `conda`.\n- Developers who install the bleeding-edge from source should refer to [this master branch documentation](https://docs.cleanlab.ai/master/index.html).\n\n**Practicing data-centric AI can look like this:**\n1. Train initial ML model on original dataset.\n2. Utilize this model to diagnose data issues (via cleanlab methods) and improve the dataset.\n3. Train the same model on the improved dataset. \n4. Try various modeling techniques to further improve performance.\n\nMost folks jump from Step 1 → 4, but you may achieve big gains without *any* change to your modeling code by using cleanlab!\nContinuously boost performance by iterating Steps 2 → 4 (and try to evaluate with *cleaned* data).\n\n![](https://raw.githubusercontent.com/cleanlab/assets/master/cleanlab/flowchart.png)\n\n\n## Use cleanlab with any model and in most ML tasks\n\nAll features of cleanlab work with **any dataset** and **any model**. Yes, any model: PyTorch, Tensorflow, Keras, JAX, HuggingFace, OpenAI, XGBoost, scikit-learn, etc.\n\ncleanlab is useful across a wide variety of Machine Learning tasks. Specific tasks this data-centric AI package offers dedicated functionality for include:\n1. [Binary and multi-class classification](https://docs.cleanlab.ai/stable/tutorials/indepth_overview.html)\n2. [Multi-label classification](https://docs.cleanlab.ai/stable/tutorials/multilabel_classification.html) (e.g. image/document tagging)\n3. [Token classification](https://docs.cleanlab.ai/stable/tutorials/token_classification.html) (e.g. entity recognition in text)\n4. [Regression](https://docs.cleanlab.ai/stable/tutorials/regression.html) (predicting numerical column in a dataset)\n5. [Image segmentation](https://docs.cleanlab.ai/stable/tutorials/segmentation.html) (images with per-pixel annotations)\n6. [Object detection](https://docs.cleanlab.ai/stable/tutorials/object_detection.html) (images with bounding box annotations)\n7. [Classification with data labeled by multiple annotators](https://docs.cleanlab.ai/stable/tutorials/multiannotator.html)\n8. [Active learning with multiple annotators](https://github.com/cleanlab/examples/blob/master/active_learning_multiannotator/active_learning.ipynb) (suggest which data to label or re-label to improve model most)\n9. [Outlier detection](https://docs.cleanlab.ai/stable/tutorials/outliers.html) (identify atypical data that appears out of distribution)\n\nFor other ML tasks, cleanlab can still help you improve your dataset if appropriately applied.\nSee our [Example Notebooks](https://github.com/cleanlab/examples) and [Blog](https://cleanlab.ai/blog/).\n\n\n## So fresh, so cleanlab\n\nBeyond automatically catching [all sorts of issues](https://docs.cleanlab.ai/stable/cleanlab/datalab/guide/issue_type_description.html) lurking in your data, this data-centric AI package helps you deal with **noisy labels** and train more **robust ML models**.\nHere's an example:\n\n```python\n\n# cleanlab works with **any classifier**. Yup, you can use PyTorch/TensorFlow/OpenAI/XGBoost/etc.\ncl = cleanlab.classification.CleanLearning(sklearn.YourFavoriteClassifier())\n\n# cleanlab finds data and label issues in **any dataset**... in ONE line of code!\nlabel_issues = cl.find_label_issues(data, labels)\n\n# cleanlab trains a robust version of your model that works more reliably with noisy data.\ncl.fit(data, labels)\n\n# cleanlab estimates the predictions you would have gotten if you had trained with *no* label issues.\ncl.predict(test_data)\n\n# A universal data-centric AI tool, cleanlab quantifies class-level issues and overall data quality, for any dataset.\ncleanlab.dataset.health_summary(labels, confident_joint=cl.confident_joint)\n```\n\ncleanlab **clean**s your data's **lab**els via state-of-the-art *confident learning* algorithms, published in this [paper](https://jair.org/index.php/jair/article/view/12125) and [blog](https://l7.curtisnorthcutt.com/confident-learning). See some of the datasets cleaned with cleanlab at [labelerrors.com](https://labelerrors.com).\n\ncleanlab is:\n\n1. **backed by theory** -- with [provable guarantees](https://arxiv.org/abs/1911.00068) of exact label noise estimation, even with imperfect models.\n2. **fast** -- code is parallelized and scalable.\n4. **easy to use** -- one line of code to find mislabeled data, bad annotators, outliers, or train noise-robust models.\n6. **general** -- works with **[any dataset](https://labelerrors.com/)** (text, image, tabular, audio,...) + **any model** (PyTorch, OpenAI, XGBoost,...)\n<br/>\n\n![](https://raw.githubusercontent.com/cleanlab/assets/master/cleanlab/label-errors-examples.png)\n<p align=\"center\">\nExamples of incorrect given labels in various image datasets <a href=\"https://l7.curtisnorthcutt.com/label-errors\">found and corrected</a> using cleanlab. \nWhile these examples are from image datasets, this also works for text, audio, tabular data.\n</p>\n\n\n## Citation and related publications\n\ncleanlab is based on peer-reviewed research. Here are relevant papers to cite if you use this package:\n\n<details><summary><a href=\"https://arxiv.org/abs/1911.00068\">Confident Learning (JAIR '21)</a> (<b>click to show bibtex</b>) </summary>\n\n    @article{northcutt2021confidentlearning,\n        title={Confident Learning: Estimating Uncertainty in Dataset Labels},\n        author={Curtis G. Northcutt and Lu Jiang and Isaac L. Chuang},\n        journal={Journal of Artificial Intelligence Research (JAIR)},\n        volume={70},\n        pages={1373--1411},\n        year={2021}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/1705.01936\">Rank Pruning (UAI '17)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{northcutt2017rankpruning,\n        author={Northcutt, Curtis G. and Wu, Tailin and Chuang, Isaac L.},\n        title={Learning with Confident Examples: Rank Pruning for Robust Classification with Noisy Labels},\n        booktitle = {Proceedings of the Thirty-Third Conference on Uncertainty in Artificial Intelligence},\n        series = {UAI'17},\n        year = {2017},\n        location = {Sydney, Australia},\n        numpages = {10},\n        url = {http://auai.org/uai2017/proceedings/papers/35.pdf},\n        publisher = {AUAI Press},\n    }\n\n</details>\n\n<details><summary><a href=\"https://people.csail.mit.edu/jonasmueller/info/LabelQuality_icml.pdf\"> Label Quality Scoring (ICML '22)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{kuan2022labelquality,\n        title={Model-agnostic label quality scoring to detect real-world label errors},\n        author={Kuan, Johnson and Mueller, Jonas},\n        booktitle={ICML DataPerf Workshop},\n        year={2022}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2207.03061\"> Out-of-Distribution Detection (ICML '22)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{kuan2022ood,\n        title={Back to the Basics: Revisiting Out-of-Distribution Detection Baselines},\n        author={Kuan, Johnson and Mueller, Jonas},\n        booktitle={ICML Workshop on Principles of Distribution Shift},\n        year={2022}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2210.03920\"> Token Classification Label Errors (NeurIPS '22)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{wang2022tokenerrors,\n        title={Detecting label errors in token classification data},\n        author={Wang, Wei-Chen and Mueller, Jonas},\n        booktitle={NeurIPS Workshop on Interactive Learning for Natural Language Processing (InterNLP)},\n        year={2022}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2210.06812\"> CROWDLAB for Data with Multiple Annotators (NeurIPS '22)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{goh2022crowdlab,\n        title={CROWDLAB: Supervised learning to infer consensus labels and quality scores for data with multiple annotators},\n        author={Goh, Hui Wen and Tkachenko, Ulyana and Mueller, Jonas},\n        booktitle={NeurIPS Human in the Loop Learning Workshop},\n        year={2022}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2301.11856\"> ActiveLab: Active learning with data re-labeling (ICLR '23)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{goh2023activelab,\n        title={ActiveLab: Active Learning with Re-Labeling by Multiple Annotators},\n        author={Goh, Hui Wen and Mueller, Jonas},\n        booktitle={ICLR Workshop on Trustworthy ML},\n        year={2023}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2211.13895\"> Incorrect Annotations in Multi-Label Classification (ICLR '23)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{thyagarajan2023multilabel,\n        title={Identifying Incorrect Annotations in Multi-Label Classification Data},\n        author={Thyagarajan, Aditya and Snorrason, Elías and Northcutt, Curtis and Mueller, Jonas},\n        booktitle={ICLR Workshop on Trustworthy ML},\n        year={2023}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2305.15696\"> Detecting Dataset Drift and Non-IID Sampling (ICML '23)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{cummings2023drift,\n        title={Detecting Dataset Drift and Non-IID Sampling via k-Nearest Neighbors},\n        author={Cummings, Jesse and Snorrason, Elías and Mueller, Jonas},\n        booktitle={ICML Workshop on Data-centric Machine Learning Research},\n        year={2023}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2305.16583\"> Detecting Errors in Numerical Data (ICML '23)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{zhou2023errors,\n        title={Detecting Errors in Numerical Data via any Regression Model},\n        author={Zhou, Hang and Mueller, Jonas and Kumar, Mayank and Wang, Jane-Ling and Lei, Jing},\n        booktitle={ICML Workshop on Data-centric Machine Learning Research},\n        year={2023}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2309.00832\"> ObjectLab: Mislabeled Images in Object Detection Data (ICML '23)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{tkachenko2023objectlab,\n        title={ObjectLab: Automated Diagnosis of Mislabeled Images in Object Detection Data},\n        author={Tkachenko, Ulyana and Thyagarajan, Aditya and Mueller, Jonas},\n        booktitle={ICML Workshop on Data-centric Machine Learning Research},\n        year={2023}\n    }\n\n</details>\n\n<details><summary><a href=\"https://arxiv.org/abs/2307.05080\"> Label Errors in Segmentation Data (ICML '23)</a> (<b>click to show bibtex</b>) </summary>\n\n    @inproceedings{lad2023segmentation,\n        title={Estimating label quality and errors in semantic segmentation data via any model},\n        author={Lad, Vedang and Mueller, Jonas},\n        booktitle={ICML Workshop on Data-centric Machine Learning Research},\n        year={2023}\n    }\n\n</details>\n\nTo understand/cite other cleanlab functionality not described above, check out our [additional publications](https://cleanlab.ai/research/).\n\n\n## Other resources\n\n- [Example Notebooks demonstrating practical applications of this package](https://github.com/cleanlab/examples)\n\n- [Cleanlab Blog](https://cleanlab.ai/blog/)\n\n- [Blog post: Introduction to Confident Learning](https://l7.curtisnorthcutt.com/confident-learning)\n\n- [NeurIPS 2021 paper: Pervasive Label Errors in Test Sets Destabilize Machine Learning Benchmarks](https://arxiv.org/abs/2103.14749)\n\n- [Introduction to Data-centric AI (MIT IAP Course 2023)](https://dcai.csail.mit.edu/)\n\n- [Release notes for past versions](https://github.com/cleanlab/cleanlab/releases)\n\n\n## Join our community\n\n* Learn, discuss, and shape the future of cleanlab in our 1000+ member [Slack community](https://cleanlab.ai/slack).\n\n* Interested in contributing? See the [contributing guide](CONTRIBUTING.md), [development guide](DEVELOPMENT.md), and [ideas on useful contributions](https://github.com/cleanlab/cleanlab/wiki#ideas-for-contributing-to-cleanlab). We welcome your help building a standard open-source platform for data-centric AI!\n\n* Have questions? Check out [our FAQ](https://docs.cleanlab.ai/stable/tutorials/faq.html), [Github Issues](https://github.com/cleanlab/cleanlab/issues?q=is%3Aissue), or [Slack](https://cleanlab.ai/slack).\n\n* Need professional help with your Data/AI project? Email us: team@cleanlab.ai <br>\nFor instance, we can help you **monitor incoming data and detect issues in real-time**.\n\n## License\n\nCopyright (c) 2017 Cleanlab Inc.\n\ncleanlab is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\ncleanlab is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n\nSee [GNU Affero General Public LICENSE](https://github.com/cleanlab/cleanlab/blob/master/LICENSE) for details.\nYou can email us to discuss licensing: team@cleanlab.ai\n\n### Commercial licensing\n\nCommercial licensing is available for teams and enterprises that want to use cleanlab in production workflows, but are unable to open-source their code [as is required by the current license](https://github.com/cleanlab/cleanlab/blob/master/LICENSE). Please email us: team@cleanlab.ai\n"
        },
        {
          "name": "cleanlab",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.7802734375,
          "content": "[build-system]\nrequires = [\"setuptools\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[project]\nname = \"cleanlab\"\n# List run-time dependencies here.  These will be installed by pip when\n# your project is installed. For an analysis of \"install_requires\" vs pip's\n# requirements files see:\n# https://packaging.python.org/en/latest/discussions/install-requires-vs-requirements/\ndependencies = [\n  \"numpy~=1.22\",\n  \"scikit-learn>=1.1\",\n  \"tqdm>=4.53.0\",\n  \"pandas>=1.4.0\",\n  \"termcolor>=2.4.0\",\n]\ndescription = \"The standard package for data-centric AI, machine learning with label errors, and automatically finding and fixing dataset issues in Python.\"\nreadme = \"README.md\"\nauthors = [\n  {name = \"Cleanlab Inc.\", email = \"team@cleanlab.ai\"}\n]\n# See https://pypi.python.org/pypi?%3Aaction=list_classifiers\n\nclassifiers = [\n  \"Development Status :: 4 - Beta\",\n  \"Intended Audience :: Developers\",\n  \"Intended Audience :: Education\",\n  \"Intended Audience :: Science/Research\",\n  \"Intended Audience :: Information Technology\",\n  \"License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)\",\n  \"Natural Language :: English\",\n  # We believe this package works will these versions, but we do not guarantee it!\n  \"Programming Language :: Python :: 3\",\n  \"Programming Language :: Python :: 3.8\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python\",\n  \"Topic :: Software Development\",\n  \"Topic :: Scientific/Engineering\",\n  \"Topic :: Scientific/Engineering :: Mathematics\",\n  \"Topic :: Scientific/Engineering :: Artificial Intelligence\",\n  \"Topic :: Software Development :: Libraries\",\n  \"Topic :: Software Development :: Libraries :: Python Modules\",\n]\nrequires-python = \">=3.8\"\n# What does your project relate to?\nkeywords = [\n  \"machine_learning\",\n  \"data_cleaning\",\n  \"confident_learning\",\n  \"classification\",\n  \"weak_supervision\",\n  \"learning_with_noisy_labels\",\n  \"unsupervised_learning\",\n  \"datacentric_ai\",\n  \"datacentric\",\n]\nlicense = {file = \"LICENSE\"}\ndynamic = [\n  \"version\",\n  \"optional-dependencies\",\n]\n\n[project.urls]\nHomepage = \"https://cleanlab.ai\"\nDocumentation = \"https://docs.cleanlab.ai\"\n\"Bug Tracker\" =  \"https://github.com/cleanlab/cleanlab/issues\"\n\"Source Code\" = \"https://github.com/cleanlab/cleanlab\"\n\n[tool.setuptools]\ninclude-package-data = true\n\n[tool.setuptools.packages.find]\ninclude = [\"cleanlab*\", \"cleanlab.*\"]\nexclude = [\"tests*\", \"tests.*\", \"*.tests\", \"*.tests.*\", \"*.tests*\"]\n\n[tool.black]\nline-length = 100\nexclude = '''\n/(\n   \\.git\n | \\.github\n | .*\\.egg-info\n | build\n | dist\n | docs\n )/\n'''\n\n[tool.pytest.ini_options]\nfilterwarnings = [\n  \"ignore:.*The least populated class in y has only 1 members,*\"\n]\nmarkers = [\n    \"slow: marks tests as slow (deselect with '-m \\\"not slow\\\"')\",\n]\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.2412109375,
          "content": "# Python dependencies for development\ncoverage != 6.3, != 6.3.*\ndatasets\nhypothesis\nmypy\npandas-stubs\npre-commit\npsutil\npytest~=7.4\npytest-cov\nrequests\nscipy\nskorch\ntensorflow<2.16\ntorch\ntorchvision\ntyping-extensions>=4.8.0\nwget\nmatplotlib\npillow\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.490234375,
          "content": "[flake8]\nignore =\nselect = F401,F403\nper-file-ignores =\n    cleanlab/__init__.py: F401\n    cleanlab/internal/neighbor/__init__.py: F401\n    cleanlab/token_classification/__init__.py: F401\n    cleanlab/benchmarking/__init__.py: F401\n    cleanlab/regression/__init__.py: F401\n    cleanlab/datalab/*/__init__.py: F401\n    cleanlab/models/__init__.py: F401\n    cleanlab/multilabel_classification/__init__.py: F401\n    cleanlab/object_detection/__init__.py: F401\n    cleanlab/segmentation/__init__.py: F401\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.126953125,
          "content": "from setuptools import setup\nfrom setuptools.command.egg_info import egg_info\n\n# To use a consistent encoding\nfrom codecs import open\n\n\nclass egg_info_ex(egg_info):\n    \"\"\"Includes license file into `.egg-info` folder.\"\"\"\n\n    def run(self):\n        # don't duplicate license into `.egg-info` when building a distribution\n        if not self.distribution.have_run.get(\"install\", True):\n            # `install` command is in progress, copy license\n            self.mkpath(self.egg_info)\n            self.copy_file(\"LICENSE\", self.egg_info)\n\n        egg_info.run(self)\n\n\n# Get version number and store it in __version__\nexec(open(\"cleanlab/version.py\").read())\n\nDATALAB_REQUIRE = [\n    # Mainly for Datalab's data storage class.\n    # Still some type hints that require datasets\n    \"datasets>=2.7.0\",\n]\n\nIMAGE_REQUIRE = DATALAB_REQUIRE + [\"cleanvision>=0.3.6\"]\n\nEXTRAS_REQUIRE = {\n    \"datalab\": DATALAB_REQUIRE,\n    \"image\": IMAGE_REQUIRE,\n    \"all\": [\"matplotlib>=3.5.1\"],\n}\nEXTRAS_REQUIRE[\"all\"] = list(set(sum(EXTRAS_REQUIRE.values(), [])))\n\nsetup(\n    version=__version__,\n    cmdclass={\"egg_info\": egg_info_ex},\n    extras_require=EXTRAS_REQUIRE,\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}