{
  "metadata": {
    "timestamp": 1736560534254,
    "page": 137,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dataabc/weiboSpider",
      "stars": 8565,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09375,
          "content": ".vscode \n\n*.pyc\n__pycache__\n\nbuild/\ndist/\n*.egg-info\n\nconfig.json\n\nweibo/\nweibo.db\n*.log\n\n.idea\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.3857421875,
          "content": "# 为本项目做贡献\n\n本项目使用**Python3**编写，感谢大家对项目的支持，也欢迎大家为开源项目做贡献。鉴于大家拥有不同的技能、经验、认知、时间等，每个人可以根据自身的情况为本项目贡献力量。我们不会因为贡献者写的代码少或者提的建议不好而失去感恩之心，每一个乐于奉献的人都值得并且应该被尊重。所以，如果您觉得自己的代码或建议不好，而不好意思去贡献，这样可能就让本项目失去了一次变得更好的机会。所以，如果您有好的想法、建议，或者发现了bug，欢迎通过issue提出来，这也是一种贡献方式。如果您想要为本项目贡献代码，我们也非常欢迎。最开始您可以通过pull request方式提交代码，如果我们发现您的代码质量非常高，或者非常有想法等，我们会邀请您请成为本项目的协作者（[Collaborator](https://help.github.com/cn/github/setting-up-and-managing-your-github-user-account/permission-levels-for-a-user-account-repository#collaborator-access-on-a-repository-owned-by-a-user-account)），这样您就可以直接向本项目提交代码了。在您贡献代码之前，请先阅读下面的说明，这会让您更好的贡献代码。\n\n## 贡献代码之前\n\n如果要开发新功能或者其它需要大量编写代码的修改，在开发之前最好发Issue说明一下。比如，“我准备开发xx新功能”或者“我想修改xx功能”之类的。因为要开发的功能不一定适合本项目，所以提前说明讨论，判断新功能或修改是否有必要。否则，费时费力写了很多代码，结果最后没有被采纳，可能会做一些无用功。\n\n## Python风格规范（建议Python新手阅读）\n\n参考[Python风格规范](https://zh-google-styleguide.readthedocs.io/en/latest/google-python-styleguide/python_style_rules/)\n或者[Python风格规范](https://github.com/zh-google-styleguide/zh-google-styleguide/blob/master/google-python-styleguide/python_style_rules.rst)，\n二者内容是一样的。\n\n## git提交规范\n\n参考[Conventional Commits](https://www.conventionalcommits.org/en/v1.0.0/)\n或者[Git提交规范](https://zhuanlan.zhihu.com/p/67804026)，commit描述中文英文皆可，只要符合规范就好。\n\n## git提交建议（可选）\n\n本建议是可选的，如果你觉得不合理，可以按自己的方式编写代码。建议每次提交都是代码改动较少的提交，如果新功能需要大量修改代码，建议将新功能分成几个小模块，每个模块提交一次。原因是这样更容易管理代码。比如，一个新功能包含几个模块。其中大部分模块都写的很好，但是有一个模块有bug。分模块提交只需要单独处理出问题的模块，其他模块不受影响。\n\n## Python之linter\n\n本项目使用flake8。\n\n## Python之formatter\n\n本项目使用yapf。\n\n## 引号的使用\n\n代码中**建议使用单引号**，只有在特殊情况下使用双引号，如类、方法、函数等开头的注释使用6个双引号包裹（注释左边三个双引号，右边三个双引号），或者字符串中中已经包含单引号了，则要用双引号包裹。\n\n## 避免过多的模块依赖\n\n除非有必要，尽量少使用非内置的模块，因为会增加用户的安装成本，当然如果该模块能够为本项目或用户带来很多便利，则可以使用。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.994140625,
          "content": "[![Build Status](https://github.com/dataabc/weiboSpider/workflows/Python%20application/badge.svg)](https://badge.fury.io/py/weibo-spider)\n[![Python](https://img.shields.io/pypi/pyversions/weibo-spider)](https://badge.fury.io/py/weibo-spider)\n[![PyPI](https://badge.fury.io/py/weibo-spider.svg)](https://badge.fury.io/py/weibo-spider)\n\n# Weibo Spider\n\n本程序可以连续爬取**一个**或**多个**新浪微博用户（如[胡歌](https://weibo.cn/u/1223178222)、[迪丽热巴](https://weibo.cn/u/1669879400)、[郭碧婷](https://weibo.cn/u/1729370543)）的数据，并将结果信息写入**文件**或**数据库**。写入信息几乎包括用户微博的所有数据，包括**用户信息**和**微博信息**两大类。因为内容太多，这里不再赘述，详细内容见[获取到的字段](#获取到的字段)。如果只需要用户信息，可以通过设置实现只爬取微博用户信息的功能。本程序需设置cookie来获取微博访问权限，后面会讲解[如何获取cookie](#如何获取cookie)。如果不想设置cookie，可以使用[免cookie版](https://github.com/dataabc/weibo-crawler)，二者功能类似。\n\n爬取结果可写入文件和数据库，具体的写入文件类型如下：\n\n- **txt文件**（默认）\n- **csv文件**（默认）\n- **json文件**（可选）\n- **MySQL数据库**（可选）\n- **MongoDB数据库**（可选）\n- **SQLite数据库**（可选）\n\n同时支持下载微博中的图片和视频，具体的可下载文件如下：\n\n- **原创**微博中的原始**图片**（可选）\n- **转发**微博中的原始**图片**（可选）\n- **原创**微博中的**视频**（可选）\n- **转发**微博中的**视频**（可选）\n- **原创**微博**Live Photo**中的**视频**（[免cookie版](https://github.com/dataabc/weibo-crawler)特有）\n- **转发**微博**Live Photo**中的**视频**（[免cookie版](https://github.com/dataabc/weibo-crawler)特有）\n\n## 内容列表\n\n[TOC]\n\n- [Weibo Spider](#weibo-spider)\n  - [内容列表](#内容列表)\n  - [获取到的字段](#获取到的字段)\n    - [用户信息](#用户信息)\n    - [微博信息](#微博信息)\n  - [示例](#示例)\n  - [运行环境](#运行环境)\n  - [使用说明](#使用说明)\n    - [0.版本](#0版本)\n    - [1.安装程序](#1安装程序)\n      - [源码安装](#源码安装)\n      - [pip安装](#pip安装)\n    - [2.程序设置](#2程序设置)\n    - [3.运行程序](#3运行程序)\n  - [个性化定制程序（可选）](#个性化定制程序可选)\n  - [定期自动爬取微博（可选）](#定期自动爬取微博可选)\n  - [如何获取cookie](#如何获取cookie)\n  - [如何获取user_id](#如何获取user_id)\n  - [常见问题](#常见问题)\n  - [学术研究](#学术研究)\n  - [相关项目](#相关项目)\n  - [贡献](#贡献)\n  - [贡献者](#贡献者)\n  - [注意事项](#注意事项)\n\n## 获取到的字段\n\n本部分为爬取到的字段信息说明，为了与[免cookie版](https://github.com/dataabc/weibo-crawler)区分，下面将两者爬取到的信息都列出来。如果是免cookie版所特有的信息，会有免cookie标注，没有标注的为二者共有的信息。\n\n### 用户信息\n\n- 用户id：微博用户id，如\"1669879400\"，其实这个字段本来就是已知字段\n- 昵称：用户昵称，如\"Dear-迪丽热巴\"\n- 性别：微博用户性别\n- 生日：用户出生日期\n- 所在地：用户所在地\n- 学习经历：用户上学时学校的名字和时间\n- 工作经历：用户所属公司名字和时间\n- 阳光信用（免cookie版）：用户的阳光信用\n- 微博注册时间（免cookie版）：用户微博注册日期\n- 微博数：用户的全部微博数（转发微博+原创微博）\n- 关注数：用户关注的微博数量\n- 粉丝数：用户的粉丝数\n- 简介：用户简介\n- 主页地址（免cookie版）：微博移动版主页url\n- 头像url（免cookie版）：用户头像url\n- 高清头像url（免cookie版）：用户高清头像url\n- 微博等级（免cookie版）：用户微博等级\n- 会员等级（免cookie版）：微博会员用户等级，普通用户该等级为0\n- 是否认证（免cookie版）：用户是否认证，为布尔类型\n- 认证类型（免cookie版）：用户认证类型，如个人认证、企业认证、政府认证等\n- 认证信息：为认证用户特有，用户信息栏显示的认证信息\n\n### 微博信息\n\n- 微博id：微博唯一标志\n- 微博内容：微博正文\n- 头条文章url：微博中头条文章的url，若微博中不存在头条文章，则值为''\n- 原始图片url：原创微博图片和转发微博转发理由中图片的url，若某条微博存在多张图片，每个url以英文逗号分隔，若没有图片则值为\"无\"\n- 视频url: 微博中的视频url，若微博中没有视频，则值为\"无\"\n- 微博发布位置：位置微博中的发布位置\n- 微博发布时间：微博发布时的时间，精确到分\n- 点赞数：微博被赞的数量\n- 转发数：微博被转发的数量\n- 评论数：微博被评论的数量\n- 微博发布工具：微博的发布工具，如iPhone客户端、HUAWEI Mate 20 Pro等\n- 结果文件：保存在当前目录weibo文件夹下以用户昵称为名的文件夹里，名字为\"user_id.csv\"和\"user_id.txt\"的形式\n- 微博图片：原创微博中的图片和转发微博转发理由中的图片，保存在以用户昵称为名的文件夹下的img文件夹里\n- 微博视频：原创微博中的视频，保存在以用户昵称为名的文件夹下的video文件夹里\n- 微博bid（免cookie版）：为[免cookie版](https://github.com/dataabc/weibo-crawler)所特有，与本程序中的微博id是同一个值\n- 话题（免cookie版）：微博话题，即两个#中的内容，若存在多个话题，每个url以英文逗号分隔，若没有则值为''\n- @用户（免cookie版）：微博@的用户，若存在多个@用户，每个url以英文逗号分隔，若没有则值为''\n- 原始微博（免cookie版）：为转发微博所特有，是转发微博中那条被转发的微博，存储为字典形式，包含了上述微博信息中的所有内容，如微博id、微博内容等等\n\n## 示例\n\n如果想要知道程序的具体运行结果，可以查看[示例文档](https://github.com/dataabc/weiboSpider/blob/master/docs/example.md)，该文档介绍了爬取[迪丽热巴微博](https://weibo.cn/u/1669879400)的例子，并附有部分结果文件截图。\n\n## 运行环境\n\n- 开发语言：python2/python3\n- 系统： Windows/Linux/macOS\n\n## 使用说明\n\n### 0.版本\n\n本程序有两个版本，你现在看到的是python3版，另一个是python2版，python2版位于[python2分支](https://github.com/dataabc/weiboSpider/tree/python2)。目前主力开发python3版，包括新功能开发和bug修复；python2版仅支持bug修复。推荐python3用户使用当前版本，推荐python2用户使用[python2版](https://github.com/dataabc/weiboSpider/tree/python2)，本使用说明是python3版的使用说明。\n\n### 1.安装程序\n\n本程序提供两种安装方式，一种是**源码安装**，另一种是**pip安装**，二者功能完全相同。如果你需要修改源码，建议使用第一种方式，否则选哪种安装方式都可以。\n\n#### 源码安装\n\n```bash\n$ git clone https://github.com/dataabc/weiboSpider.git\n$ cd weiboSpider\n$ pip install -r requirements.txt\n```\n\n#### pip安装\n\n```bash\n$ python3 -m pip install weibo-spider\n```\n\n### 2.程序设置\n\n要了解程序设置，请查看[程序设置文档](https://github.com/dataabc/weiboSpider/blob/master/docs/settings.md)。\n\n### 3.运行程序\n\n**源码安装**的用户可以在weiboSpider目录运行如下命令，**pip安装**的用户可以在任意有写权限的目录运行如下命令\n\n```bash\n$ python3 -m weibo_spider\n```\n\n第一次执行，会自动在当前目录创建config.json配置文件，配置好后执行同样的命令就可以获取微博了。\n\n如果你已经有config.json文件了，也可以通过config_path参数配置config.json路径，运行程序，命令行如下：\n\n```bash\n$ python3 -m weibo_spider --config_path=\"config.json\"\n```\n\n如果你想指定文件（csv、txt、json、图片、视频）保存路径，可以通过output_dir参数设定。假如你想把文件保存到/home/weibo/目录，可以运行如下命令：\n\n```bash\n$ python3 -m weibo_spider --output_dir=\"/home/weibo/\"\n```\n\n如果你想通过命令行输入user_id，可以使用参数u，可以输入一个或多个user_id，每个user_id以英文逗号分开，如果这些user_id中有重复的user_id，程序会自动去重。命令行如下：\n\n```bash\n$ python3 -m weibo_spider --u=\"1669879400,1223178222\"\n```\n\n程序会获取user_id分别为1669879400和1223178222的微博用户的微博，后面会讲[如何获取user_id](#如何获取user_id)。该方式的所有user_id使用config.json中的since_date和end_date设置，通过修改它们的值可以控制爬取的时间范围。若config.json中的user_id_list是文件路径，每个命令行中的user_id都会自动保存到该文件内，且自动更新since_date；若不是路径，user_id会保存在当前目录的user_id_list.txt内，且自动更新since_date，若当前目录下不存在user_id_list.txt，程序会自动创建它。\n\n## 个性化定制程序（可选）\n\n本部分为可选部分，如果不需要个性化定制程序或添加新功能，可以忽略此部分。\n\n本程序主体代码位于weibo_spider.py文件，程序主体是一个 Spider 类，上述所有功能都是通过在main函数调用 Spider 类实现的，默认的调用代码如下：\n\n```python\n        config = get_config()\n        wb = Spider(config)\n        wb.start()  # 爬取微博信息\n```\n\n用户可以按照自己的需求调用或修改 Spider 类。通过执行本程序，我们可以得到很多信息。\n\n<details>\n\n<summary>点击查看详情</summary>\n\n- wb.user['nickname']：用户昵称；\n- wb.user['gender']：用户性别；\n- wb.user['location']：用户所在地；\n- wb.user['birthday']：用户出生日期；\n- wb.user['description']：用户简介；\n- wb.user['verified_reason']：用户认证；\n- wb.user['talent']：用户标签；\n- wb.user['education']：用户学习经历；\n- wb.user['work']：用户工作经历；\n- wb.user['weibo_num']：微博数；\n- wb.user['following']：关注数；\n- wb.user['followers']：粉丝数；\n\n</details>\n\n**wb.weibo**：除不包含上述信息外，wb.weibo包含爬取到的所有微博信息，如**微博id**、**微博正文**、**原始图片url**、**发布位置**、**发布时间**、**发布工具**、**点赞数**、**转发数**、**评论数**等。如果爬的是全部微博(原创+转发)，除上述信息之外，还包含被**转发微博原始图片url**、**是否为原创微博**等。wb.weibo是一个列表，包含了爬取的所有微博信息。wb.weibo[0]为爬取的第一条微博，wb.weibo[1]为爬取的第二条微博，以此类推。当filter=1时，wb.weibo[0]为爬取的第一条**原创**微博，以此类推。wb.weibo[0]['id']为第一条微博的id，wb.weibo[0]['content']为第一条微博的正文，wb.weibo[0]['publish_time']为第一条微博的发布时间，还有其它很多信息不在赘述，大家可以点击下面的\"详情\"查看具体用法。\n\n<details>\n  \n<summary>详情</summary>\n\n若目标微博用户存在微博，则：\n\n- id：存储微博id。如wb.weibo[0]['id']为最新一条微博的id；\n- content：存储微博正文。如wb.weibo[0]['content']为最新一条微博的正文；\n- article_url：存储微博中头条文章的url。如wb.weibo[0]['article_url']为最新一条微博的头条文章url，若微博中不存在头条文章，则值为''；\n- original_pictures：存储原创微博的原始图片url和转发微博转发理由中的图片url。如wb.weibo[0]['original_pictures']为最新一条微博的原始图片url，若该条微博有多张图片，则存储多个url，以英文逗号分割；若该微博没有图片，则值为\"无\"；\n- retweet_pictures：存储被转发微博中的原始图片url。当最新微博为原创微博或者为没有图片的转发微博时，则值为\"无\"，否则为被转发微博的图片url。若有多张图片，则存储多个url，以英文逗号分割；\n- publish_place：存储微博的发布位置。如wb.weibo[0]['publish_place']为最新一条微博的发布位置，如果该条微博没有位置信息，则值为\"无\"；\n- publish_time：存储微博的发布时间。如wb.weibo[0]['publish_time']为最新一条微博的发布时间；\n- up_num：存储微博获得的点赞数。如wb.weibo[0]['up_num']为最新一条微博获得的点赞数；\n- retweet_num：存储微博获得的转发数。如wb.weibo[0]['retweet_num']为最新一条微博获得的转发数；\n- comment_num：存储微博获得的评论数。如wb.weibo[0]['comment_num']为最新一条微博获得的评论数；\n- publish_tool：存储微博的发布工具。如wb.weibo[0]['publish_tool']为最新一条微博的发布工具。\n\n</details>\n\n## 定期自动爬取微博（可选）\n\n要想让程序每隔一段时间自动爬取，且爬取的内容为新增加的内容（不包括已经获取的微博），请查看[定期自动爬取微博](https://github.com/dataabc/weiboSpider/blob/master/docs/automation.md)。\n\n## 如何获取cookie\n\n要了解获取cookie方法，请查看[cookie文档](https://github.com/dataabc/weiboSpider/blob/master/docs/cookie.md)。\n\n## 如何获取user_id\n\n要了解获取user_id方法，请查看[user_id文档](https://github.com/dataabc/weiboSpider/blob/master/docs/userid.md)，该文档介绍了如何获取一个及多个微博用户user_id的方法。\n\n## 常见问题\n\n如果运行程序的过程中出现错误，可以查看[常见问题](https://github.com/dataabc/weiboSpider/blob/master/docs/FAQ.md)页面，里面包含了最常见的问题及解决方法。如果出现的错误不在常见问题里，您可以通过[发issue](https://github.com/dataabc/weiboSpider/issues/new/choose)寻求帮助，我们会很乐意为您解答。\n\n## 学术研究\n\n本项目通过获取微博数据，为写论文、做研究等非商业项目提供所需数据。[学术研究文档](https://github.com/dataabc/weiboSpider/blob/master/docs/academic.md)是一些在论文或研究等方面使用过本程序的项目，这些项目展示已征得所有者同意。在一些涉及隐私的描述上，已与所有者做了沟通，描述中只介绍所有者允许展示的部分。如果部分信息所有者之前同意展示并且已经写在了文档中，现在又不想展示了，可以通过邮件(chillychen1991@gmail.com)或issue的方式告诉我，我会删除相关信息。同时，也欢迎使用本项目写论文或做其它学术研究的朋友，将自己的研究成果展示在[学术研究文档](https://github.com/dataabc/weiboSpider/blob/master/docs/academic.md)里，这完全是自愿的。\n\n为方便大家引用，现提供本项目的 bibtex 条目如下：\n\n```\n@misc{weibospider2020,\n  author = {Lei Chen, Zhengyang Song, schaepher, minami9, bluerthanever, MKSP2015, moqimoqidea, windlively, eggachecat, mtuwei, codermino, duangan1},\n  title = {{Weibo Spider}},\n  howpublished = {\\url{https://github.com/dataabc/weiboSpider}},\n  year = {2020}\n}\n```\n\n## 相关项目\n\n- [weibo-crawler](https://github.com/dataabc/weibo-crawler) - 功能和本项目完全一样，可以不添加cookie，获取的微博属性更多；\n- [weibo-search](https://github.com/dataabc/weibo-search) - 可以连续获取一个或多个**微博关键词搜索**结果，并将结果写入文件（可选）、数据库（可选）等。所谓微博关键词搜索即：**搜索正文中包含指定关键词的微博**，可以指定搜索的时间范围。对于非常热门的关键词，一天的时间范围，可以获得**1000万**以上的搜索结果，N天的时间范围就可以获得1000万 X N搜索结果。对于大多数关键词，一天产生的相应微博数量应该在1000万条以下，因此可以说该程序可以获得大部分关键词的全部或近似全部的搜索结果。而且该程序可以获得搜索结果的所有信息，本程序获得的微博信息该程序都能获得。\n\n## 贡献\n\n欢迎为本项目贡献力量。贡献可以是提交代码，可以是通过issue提建议（如新功能、改进方案等），也可以是通过issue告知我们项目存在哪些bug、缺点等，具体贡献方式见[为本项目做贡献](https://github.com/dataabc/weiboSpider/blob/master/CONTRIBUTING.md)。\n\n## 贡献者\n\n感谢所有为本项目贡献力量的朋友，贡献者详情见[贡献者](https://github.com/dataabc/weiboSpider/blob/master/docs/contributors.md)页面。\n\n## 注意事项\n\n1. user_id不能为爬虫微博的user_id。因为要爬微博信息，必须先登录到某个微博账号，此账号我们姑且称为爬虫微博。爬虫微博访问自己的页面和访问其他用户的页面，得到的网页格式不同，所以无法爬取自己的微博信息；如果想要爬取爬虫微博内容，可以参考[获取自身微博信息](https://github.com/dataabc/weiboSpider/issues/113)；\n2. cookie有期限限制，大约三个月。若提示cookie错误或已过期，需要重新更新cookie。\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.080078125,
          "content": "lxml==4.9.1\nrequests==2.32.0\ntqdm==4.66.3\nabsl-py==0.12.0\nbrowser_cookie3==0.20.1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.8017578125,
          "content": "import setuptools\n\nwith open('README.md', 'r', encoding='utf-8') as fh:\n    long_description = fh.read()\n\nsetuptools.setup(\n    name='weibo-spider',\n    version='0.2.8',\n    author='Chen Lei',\n    author_email='chillychen1991@gmail.com',\n    description='新浪微博爬虫，用python爬取新浪微博数据。',\n    long_description=long_description,\n    long_description_content_type='text/markdown',\n    url='https://github.com/dataabc/weiboSpider',\n    packages=setuptools.find_packages(),\n    package_data={'weibo_spider': ['config_sample.json', 'logging.conf']},\n    classifiers=[\n        'Programming Language :: Python :: 3',\n        'Operating System :: OS Independent',\n    ],\n    install_requires=[\n        'absl-py',\n        'lxml',\n        'requests',\n        'tqdm',\n    ],\n    python_requires='>=3.6',\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "weibo_spider",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}