{
  "metadata": {
    "timestamp": 1736560741423,
    "page": 420,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pyca/cryptography",
      "stars": 6789,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.017578125,
          "content": "*.pem text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1533203125,
          "content": "__pycache__/\n_build/\nbuild/\ndist/\nhtmlcov/\n*.so\n.tox/\n.cache/\n.coverage\n*.egg-info/\n*.egg\n.eggs/\n*.py[cdo]\n.hypothesis/\ntarget/\n.rust-cov/\n*.lcov\n*.profdata\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.4482421875,
          "content": "# https://docs.readthedocs.io/en/stable/config-file/v2.html#supported-settings\n\nversion: 2\n\nsphinx:\n  # The config file overrides the UI settings:\n  # https://github.com/pyca/cryptography/issues/5863#issuecomment-817828152\n  builder: dirhtml\n  configuration: docs/conf.py\n\nformats:\n  - pdf\n\nbuild:\n  os: \"ubuntu-24.04\"\n  tools:\n    python: \"3.13\"\n    rust: \"latest\"\n\npython:\n  install:\n    - method: pip\n      path: .\n      extra_requirements:\n        - docs\n"
        },
        {
          "name": "CHANGELOG.rst",
          "type": "blob",
          "size": 102.75,
          "content": "Changelog\n=========\n\n.. _v45-0-0:\n\n45.0.0 - `main`_\n~~~~~~~~~~~~~~~~\n\n.. note:: This version is not yet released and is under active development.\n\n* Support for Python 3.7 is deprecated and will be removed in the next\n  ``cryptography`` release.\n* Added support for PKCS7 decryption & encryption using AES-256 as content algorithm, \n  in addition to AES-128. \n\n.. _v44-0-0:\n\n44.0.0 - 2024-11-27\n~~~~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Dropped support for LibreSSL < 3.9.\n* Deprecated Python 3.7 support. Python 3.7 is no longer supported by the\n  Python core team. Support for Python 3.7 will be removed in a future\n  ``cryptography`` release.\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.4.0.\n* macOS wheels are now built against the macOS 10.13 SDK. Users on older\n  versions of macOS should upgrade, or they will need to build\n  ``cryptography`` themselves.\n* Enforce the :rfc:`5280` requirement that extended key usage extensions must\n  not be empty.\n* Added support for timestamp extraction to the\n  :class:`~cryptography.fernet.MultiFernet` class.\n* Relax the Authority Key Identifier requirements on root CA certificates\n  during X.509 verification to allow fields permitted by :rfc:`5280` but\n  forbidden by the CA/Browser BRs.\n* Added support for :class:`~cryptography.hazmat.primitives.kdf.argon2.Argon2id`\n  when using OpenSSL 3.2.0+.\n* Added support for the :class:`~cryptography.x509.Admissions` certificate extension.\n* Added basic support for PKCS7 decryption (including S/MIME 3.2) via\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs7.pkcs7_decrypt_der`,\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs7.pkcs7_decrypt_pem`, and\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs7.pkcs7_decrypt_smime`.\n\n.. _v43-0-3:\n\n43.0.3 - 2024-10-18\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed release metadata for ``cryptography-vectors``\n\n.. _v43-0-2:\n\n43.0.2 - 2024-10-18\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed compilation when using LibreSSL 4.0.0.\n\n.. _v43-0-1:\n\n43.0.1 - 2024-09-03\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.3.2.\n\n.. _v43-0-0:\n\n43.0.0 - 2024-07-20\n~~~~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Support for OpenSSL less than 1.1.1e has been\n  removed.  Users on older version of OpenSSL will need to upgrade.\n* **BACKWARDS INCOMPATIBLE:** Dropped support for LibreSSL < 3.8.\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.3.1.\n* Updated the minimum supported Rust version (MSRV) to 1.65.0, from 1.63.0.\n* :func:`~cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key`\n  now enforces a minimum RSA key size of 1024-bit. Note that 1024-bit is still\n  considered insecure, users should generally use a key size of 2048-bits.\n* :func:`~cryptography.hazmat.primitives.serialization.pkcs7.serialize_certificates`\n  now emits ASN.1 that more closely follows the recommendations in :rfc:`2315`.\n* Added new :doc:`/hazmat/decrepit/index` module which contains outdated and\n  insecure cryptographic primitives.\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.CAST5`,\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.SEED`,\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.IDEA`, and\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.Blowfish`, which were\n  deprecated in 37.0.0, have been added to this module. They will be removed\n  from the ``cipher`` module in 45.0.0.\n* Moved :class:`~cryptography.hazmat.primitives.ciphers.algorithms.TripleDES`\n  and :class:`~cryptography.hazmat.primitives.ciphers.algorithms.ARC4` into\n  :doc:`/hazmat/decrepit/index` and deprecated them in the ``cipher`` module.\n  They will be removed from the ``cipher`` module in 48.0.0.\n* Added support for deterministic\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.ECDSA` (:rfc:`6979`)\n* Added support for client certificate verification to the\n  :mod:`X.509 path validation <cryptography.x509.verification>` APIs in the\n  form of :class:`~cryptography.x509.verification.ClientVerifier`,\n  :class:`~cryptography.x509.verification.VerifiedClient`, and\n  ``PolicyBuilder``\n  :meth:`~cryptography.x509.verification.PolicyBuilder.build_client_verifier`.\n* Added Certificate\n  :attr:`~cryptography.x509.Certificate.public_key_algorithm_oid`\n  and Certificate Signing Request\n  :attr:`~cryptography.x509.CertificateSigningRequest.public_key_algorithm_oid`\n  to determine the :class:`~cryptography.hazmat._oid.PublicKeyAlgorithmOID`\n  Object Identifier of the public key found inside the certificate.\n* Added :attr:`~cryptography.x509.InvalidityDate.invalidity_date_utc`, a\n  timezone-aware alternative to the naïve ``datetime`` attribute\n  :attr:`~cryptography.x509.InvalidityDate.invalidity_date`.\n* Added support for parsing empty DN string in\n  :meth:`~cryptography.x509.Name.from_rfc4514_string`.\n* Added the following properties that return timezone-aware ``datetime`` objects:\n  :meth:`~cryptography.x509.ocsp.OCSPResponse.produced_at_utc`,\n  :meth:`~cryptography.x509.ocsp.OCSPResponse.revocation_time_utc`,\n  :meth:`~cryptography.x509.ocsp.OCSPResponse.this_update_utc`,\n  :meth:`~cryptography.x509.ocsp.OCSPResponse.next_update_utc`,\n  :meth:`~cryptography.x509.ocsp.OCSPSingleResponse.revocation_time_utc`,\n  :meth:`~cryptography.x509.ocsp.OCSPSingleResponse.this_update_utc`,\n  :meth:`~cryptography.x509.ocsp.OCSPSingleResponse.next_update_utc`,\n  These are timezone-aware variants of existing properties that return naïve\n  ``datetime`` objects.\n* Added\n  :func:`~cryptography.hazmat.primitives.asymmetric.rsa.rsa_recover_private_exponent`\n* Added :meth:`~cryptography.hazmat.primitives.ciphers.CipherContext.reset_nonce`\n  for altering the ``nonce`` of a cipher context without initializing a new\n  instance. See the docs for additional restrictions.\n* :class:`~cryptography.x509.NameAttribute` now raises an exception when\n  attempting to create a common name whose length is shorter or longer than\n  :rfc:`5280` permits.\n* Added basic support for PKCS7 encryption (including SMIME) via\n  :class:`~cryptography.hazmat.primitives.serialization.pkcs7.PKCS7EnvelopeBuilder`.\n\n.. _v42-0-8:\n\n42.0.8 - 2024-06-04\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.2.2.\n\n.. _v42-0-7:\n\n42.0.7 - 2024-05-06\n~~~~~~~~~~~~~~~~~~~\n\n* Restored Windows 7 compatibility for our pre-built wheels. Note that we do\n  not test on Windows 7 and wheels for our next release will not support it.\n  Microsoft no longer provides support for Windows 7 and users are encouraged\n  to upgrade.\n\n.. _v42-0-6:\n\n42.0.6 - 2024-05-04\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed compilation when using LibreSSL 3.9.1.\n\n.. _v42-0-5:\n\n42.0.5 - 2024-02-23\n~~~~~~~~~~~~~~~~~~~\n\n* Limit the number of name constraint checks that will be performed in\n  :mod:`X.509 path validation <cryptography.x509.verification>` to protect\n  against denial of service attacks.\n* Upgrade ``pyo3`` version, which fixes building on PowerPC.\n\n.. _v42-0-4:\n\n42.0.4 - 2024-02-20\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed a null-pointer-dereference and segfault that could occur when creating\n  a PKCS#12 bundle. Credit to **Alexander-Programming** for reporting the\n  issue. **CVE-2024-26130**\n* Fixed ASN.1 encoding for PKCS7/SMIME signed messages. The fields ``SMIMECapabilities``\n  and ``SignatureAlgorithmIdentifier`` should now be correctly encoded according to the\n  definitions in :rfc:`2633` :rfc:`3370`.\n\n.. _v42-0-3:\n\n42.0.3 - 2024-02-15\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed an initialization issue that caused key loading failures for some\n  users.\n\n.. _v42-0-2:\n\n42.0.2 - 2024-01-30\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.2.1.\n* Fixed an issue that prevented the use of Python buffer protocol objects in\n  ``sign`` and ``verify`` methods on asymmetric keys.\n* Fixed an issue with incorrect keyword-argument naming with ``EllipticCurvePrivateKey``\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.exchange`,\n  ``X25519PrivateKey``\n  :meth:`~cryptography.hazmat.primitives.asymmetric.x25519.X25519PrivateKey.exchange`,\n  ``X448PrivateKey``\n  :meth:`~cryptography.hazmat.primitives.asymmetric.x448.X448PrivateKey.exchange`,\n  and ``DHPrivateKey``\n  :meth:`~cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey.exchange`.\n\n.. _v42-0-1:\n\n42.0.1 - 2024-01-24\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed an issue with incorrect keyword-argument naming with ``EllipticCurvePrivateKey``\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.sign`.\n* Resolved compatibility issue with loading certain RSA public keys in\n  :func:`~cryptography.hazmat.primitives.serialization.load_pem_public_key`.\n\n.. _v42-0-0:\n\n42.0.0 - 2024-01-22\n~~~~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Dropped support for LibreSSL < 3.7.\n* **BACKWARDS INCOMPATIBLE:** Loading a PKCS7 with no content field using\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates`\n  or\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates`\n  will now raise a ``ValueError`` rather than return an empty list.\n* Parsing SSH certificates no longer permits malformed critical options with\n  values, as documented in the 41.0.2 release notes.\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.2.0.\n* Updated the minimum supported Rust version (MSRV) to 1.63.0, from 1.56.0.\n* We now publish both ``py37`` and ``py39`` ``abi3`` wheels. This should\n  resolve some errors relating to initializing a module multiple times per\n  process.\n* Support :class:`~cryptography.hazmat.primitives.asymmetric.padding.PSS` for\n  X.509 certificate signing requests and certificate revocation lists with the\n  keyword-only argument ``rsa_padding`` on the ``sign`` methods for\n  :class:`~cryptography.x509.CertificateSigningRequestBuilder` and\n  :class:`~cryptography.x509.CertificateRevocationListBuilder`.\n* Added support for obtaining X.509 certificate signing request signature\n  algorithm parameters (including PSS) via\n  :meth:`~cryptography.x509.CertificateSigningRequest.signature_algorithm_parameters`.\n* Added support for obtaining X.509 certificate revocation list signature\n  algorithm parameters (including PSS) via\n  :meth:`~cryptography.x509.CertificateRevocationList.signature_algorithm_parameters`.\n* Added ``mgf`` property to\n  :class:`~cryptography.hazmat.primitives.asymmetric.padding.PSS`.\n* Added ``algorithm`` and ``mgf`` properties to\n  :class:`~cryptography.hazmat.primitives.asymmetric.padding.OAEP`.\n* Added the following properties that return timezone-aware ``datetime`` objects:\n  :meth:`~cryptography.x509.Certificate.not_valid_before_utc`,\n  :meth:`~cryptography.x509.Certificate.not_valid_after_utc`,\n  :meth:`~cryptography.x509.RevokedCertificate.revocation_date_utc`,\n  :meth:`~cryptography.x509.CertificateRevocationList.next_update_utc`,\n  :meth:`~cryptography.x509.CertificateRevocationList.last_update_utc`.\n  These are timezone-aware variants of existing properties that return naïve\n  ``datetime`` objects.\n* Deprecated the following properties that return naïve ``datetime`` objects:\n  :meth:`~cryptography.x509.Certificate.not_valid_before`,\n  :meth:`~cryptography.x509.Certificate.not_valid_after`,\n  :meth:`~cryptography.x509.RevokedCertificate.revocation_date`,\n  :meth:`~cryptography.x509.CertificateRevocationList.next_update`,\n  :meth:`~cryptography.x509.CertificateRevocationList.last_update`\n  in favor of the new timezone-aware variants mentioned above.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.ChaCha20`\n  on LibreSSL.\n* Added support for RSA PSS signatures in PKCS7 with\n  :meth:`~cryptography.hazmat.primitives.serialization.pkcs7.PKCS7SignatureBuilder.add_signer`.\n* In the next release (43.0.0) of cryptography, loading an X.509 certificate\n  with a negative serial number will raise an exception. This has been\n  deprecated since 36.0.0.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.AESGCMSIV` when using\n  OpenSSL 3.2.0+.\n* Added the :mod:`X.509 path validation <cryptography.x509.verification>` APIs\n  for :class:`~cryptography.x509.Certificate` chains. These APIs should be\n  considered unstable and not subject to our stability guarantees until\n  documented as such in a future release.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.SM4`\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.GCM`\n  when using OpenSSL 3.0 or greater.\n\n.. _v41-0-7:\n\n41.0.7 - 2023-11-27\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed compilation when using LibreSSL 3.8.2.\n\n.. _v41-0-6:\n\n41.0.6 - 2023-11-27\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed a null-pointer-dereference and segfault that could occur when loading\n  certificates from a PKCS#7 bundle.  Credit to **pkuzco** for reporting the\n  issue. **CVE-2023-49083**\n\n.. _v41-0-5:\n\n41.0.5 - 2023-10-24\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.1.4.\n* Added a function to support an upcoming ``pyOpenSSL`` release.\n\n.. _v41-0-4:\n\n41.0.4 - 2023-09-19\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.1.3.\n\n.. _v41-0-3:\n\n41.0.3 - 2023-08-01\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed performance regression loading DH public keys.\n* Fixed a memory leak when using\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305`.\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.1.2.\n\n.. _v41-0-2:\n\n41.0.2 - 2023-07-10\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed bugs in creating and parsing SSH certificates where critical options\n  with values were handled incorrectly. Certificates are now created correctly\n  and parsing accepts correct values as well as the previously generated\n  invalid forms with a warning. In the next release, support for parsing these\n  invalid forms will be removed.\n\n.. _v41-0-1:\n\n41.0.1 - 2023-06-01\n~~~~~~~~~~~~~~~~~~~\n\n* Temporarily allow invalid ECDSA signature algorithm parameters in X.509\n  certificates, which are generated by older versions of Java.\n* Allow null bytes in pass phrases when serializing private keys.\n\n.. _v41-0-0:\n\n41.0.0 - 2023-05-30\n~~~~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Support for OpenSSL less than 1.1.1d has been\n  removed.  Users on older version of OpenSSL will need to upgrade.\n* **BACKWARDS INCOMPATIBLE:** Support for Python 3.6 has been removed.\n* **BACKWARDS INCOMPATIBLE:** Dropped support for LibreSSL < 3.6.\n* Updated the minimum supported Rust version (MSRV) to 1.56.0, from 1.48.0.\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.1.1.\n* Added support for the :class:`~cryptography.x509.OCSPAcceptableResponses`\n  OCSP extension.\n* Added support for the :class:`~cryptography.x509.MSCertificateTemplate`\n  proprietary Microsoft certificate extension.\n* Implemented support for equality checks on all asymmetric public key types.\n* Added support for ``aes256-gcm@openssh.com`` encrypted keys in\n  :func:`~cryptography.hazmat.primitives.serialization.load_ssh_private_key`.\n* Added support for obtaining X.509 certificate signature algorithm parameters\n  (including PSS) via\n  :meth:`~cryptography.x509.Certificate.signature_algorithm_parameters`.\n* Support signing :class:`~cryptography.hazmat.primitives.asymmetric.padding.PSS`\n  X.509 certificates via the new keyword-only argument ``rsa_padding`` on\n  :meth:`~cryptography.x509.CertificateBuilder.sign`.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305`\n  on BoringSSL.\n\n.. _v40-0-2:\n\n40.0.2 - 2023-04-14\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed compilation when using LibreSSL 3.7.2.\n* Added some functions to support an upcoming ``pyOpenSSL`` release.\n\n.. _v40-0-1:\n\n40.0.1 - 2023-03-24\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed a bug where certain operations would fail if an object happened to be\n  in the top-half of the memory-space. This only impacted 32-bit systems.\n\n.. _v40-0-0:\n\n40.0.0 - 2023-03-24\n~~~~~~~~~~~~~~~~~~~\n\n\n* **BACKWARDS INCOMPATIBLE:** As announced in the 39.0.0 changelog, the way\n  ``cryptography`` links OpenSSL has changed. This only impacts users who\n  build ``cryptography`` from source (i.e., not from a ``wheel``), and\n  specify their own version of OpenSSL. For those users, the ``CFLAGS``,\n  ``LDFLAGS``, ``INCLUDE``, ``LIB``, and ``CRYPTOGRAPHY_SUPPRESS_LINK_FLAGS``\n  environment variables are no longer valid. Instead, users need to configure\n  their builds `as documented here`_.\n* Support for Python 3.6 is deprecated and will be removed in the next\n  release.\n* Deprecated the current minimum supported Rust version (MSRV) of 1.48.0.\n  In the next release we will raise MSRV to 1.56.0. Users with the latest\n  ``pip`` will typically get a wheel and not need Rust installed, but check\n  :doc:`/installation` for documentation on installing a newer ``rustc`` if\n  required.\n* Deprecated support for OpenSSL less than 1.1.1d. The next release of\n  ``cryptography`` will drop support for older versions.\n* Deprecated support for DSA keys in\n  :func:`~cryptography.hazmat.primitives.serialization.load_ssh_public_key`\n  and\n  :func:`~cryptography.hazmat.primitives.serialization.load_ssh_private_key`.\n* Deprecated support for OpenSSH serialization in\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey`\n  and\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey`.\n* The minimum supported version of PyPy3 is now 7.3.10.\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.1.0.\n* Added support for parsing SSH certificates in addition to public keys with\n  :func:`~cryptography.hazmat.primitives.serialization.load_ssh_public_identity`.\n  :func:`~cryptography.hazmat.primitives.serialization.load_ssh_public_key`\n  continues to support only public keys.\n* Added support for generating SSH certificates with\n  :class:`~cryptography.hazmat.primitives.serialization.SSHCertificateBuilder`.\n* Added :meth:`~cryptography.x509.Certificate.verify_directly_issued_by` to\n  :class:`~cryptography.x509.Certificate`.\n* Added a check to :class:`~cryptography.x509.NameConstraints` to ensure that\n  :class:`~cryptography.x509.DNSName` constraints do not contain any ``*``\n  wildcards.\n* Removed many unused CFFI OpenSSL bindings. This will not impact you unless\n  you are using ``cryptography`` to directly invoke OpenSSL's C API. Note that\n  these have never been considered a stable, supported, public API by\n  ``cryptography``, this note is included as a courtesy.\n* The X.509 builder classes now raise ``UnsupportedAlgorithm`` instead of\n  ``ValueError`` if an unsupported hash algorithm is passed.\n* Added public union type aliases for type hinting:\n\n  * Asymmetric types:\n    :const:`~cryptography.hazmat.primitives.asymmetric.types.PublicKeyTypes`,\n    :const:`~cryptography.hazmat.primitives.asymmetric.types.PrivateKeyTypes`,\n    :const:`~cryptography.hazmat.primitives.asymmetric.types.CertificatePublicKeyTypes`,\n    :const:`~cryptography.hazmat.primitives.asymmetric.types.CertificateIssuerPublicKeyTypes`,\n    :const:`~cryptography.hazmat.primitives.asymmetric.types.CertificateIssuerPrivateKeyTypes`.\n  * SSH keys:\n    :const:`~cryptography.hazmat.primitives.serialization.SSHPublicKeyTypes`,\n    :const:`~cryptography.hazmat.primitives.serialization.SSHPrivateKeyTypes`,\n    :const:`~cryptography.hazmat.primitives.serialization.SSHCertPublicKeyTypes`,\n    :const:`~cryptography.hazmat.primitives.serialization.SSHCertPrivateKeyTypes`.\n  * PKCS12:\n    :const:`~cryptography.hazmat.primitives.serialization.pkcs12.PKCS12PrivateKeyTypes`\n  * PKCS7:\n    :const:`~cryptography.hazmat.primitives.serialization.pkcs7.PKCS7HashTypes`,\n    :const:`~cryptography.hazmat.primitives.serialization.pkcs7.PKCS7PrivateKeyTypes`.\n  * Two-factor:\n    :const:`~cryptography.hazmat.primitives.twofactor.hotp.HOTPHashTypes`\n\n* Deprecated previously undocumented but not private type aliases in the\n  ``cryptography.hazmat.primitives.asymmetric.types`` module in favor of new\n  ones above.\n\n\n.. _v39-0-2:\n\n\n39.0.2 - 2023-03-02\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed a bug where the content type header was not properly encoded for\n  PKCS7 signatures when using the ``Text`` option and ``SMIME`` encoding.\n\n\n.. _v39-0-1:\n\n39.0.1 - 2023-02-07\n~~~~~~~~~~~~~~~~~~~\n\n* **SECURITY ISSUE** - Fixed a bug where ``Cipher.update_into`` accepted Python\n  buffer protocol objects, but allowed immutable buffers. **CVE-2023-23931**\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.0.8.\n\n.. _v39-0-0:\n\n39.0.0 - 2023-01-01\n~~~~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Support for OpenSSL 1.1.0 has been removed.\n  Users on older version of OpenSSL will need to upgrade.\n* **BACKWARDS INCOMPATIBLE:** Dropped support for LibreSSL < 3.5. The new\n  minimum LibreSSL version is 3.5.0. Going forward our policy is to support\n  versions of LibreSSL that are available in versions of OpenBSD that are\n  still receiving security support.\n* **BACKWARDS INCOMPATIBLE:** Removed the ``encode_point`` and\n  ``from_encoded_point`` methods on\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers`,\n  which had been deprecated for several years.\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.public_bytes`\n  and\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.from_encoded_point`\n  should be used instead.\n* **BACKWARDS INCOMPATIBLE:** Support for using MD5 or SHA1 in\n  :class:`~cryptography.x509.CertificateBuilder`, other X.509 builders, and\n  PKCS7 has been removed.\n* **BACKWARDS INCOMPATIBLE:** Dropped support for macOS 10.10 and 10.11, macOS\n  users must upgrade to 10.12 or newer.\n* **ANNOUNCEMENT:** The next version of ``cryptography`` (40.0) will change\n  the way we link OpenSSL. This will only impact users who build\n  ``cryptography`` from source (i.e., not from a ``wheel``), and specify their\n  own version of OpenSSL. For those users, the ``CFLAGS``, ``LDFLAGS``,\n  ``INCLUDE``, ``LIB``, and ``CRYPTOGRAPHY_SUPPRESS_LINK_FLAGS`` environment\n  variables will no longer be respected. Instead, users will need to\n  configure their builds `as documented here`_.\n* Added support for\n  :ref:`disabling the legacy provider in OpenSSL 3.0.x<legacy-provider>`.\n* Added support for disabling RSA key validation checks when loading RSA\n  keys via\n  :func:`~cryptography.hazmat.primitives.serialization.load_pem_private_key`,\n  :func:`~cryptography.hazmat.primitives.serialization.load_der_private_key`,\n  and\n  :meth:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers.private_key`.\n  This speeds up key loading but is :term:`unsafe` if you are loading potentially\n  attacker supplied keys.\n* Significantly improved performance for\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305`\n  when repeatedly calling ``encrypt`` or ``decrypt`` with the same key.\n* Added support for creating OCSP requests with precomputed hashes using\n  :meth:`~cryptography.x509.ocsp.OCSPRequestBuilder.add_certificate_by_hash`.\n* Added support for loading multiple PEM-encoded X.509 certificates from\n  a single input via :func:`~cryptography.x509.load_pem_x509_certificates`.\n\n.. _v38-0-4:\n\n38.0.4 - 2022-11-27\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed compilation when using LibreSSL 3.6.0.\n* Fixed error when using ``py2app`` to build an application with a\n  ``cryptography`` dependency.\n\n.. _v38-0-3:\n\n38.0.3 - 2022-11-01\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.0.7,\n  which resolves *CVE-2022-3602* and *CVE-2022-3786*.\n\n.. _v38-0-2:\n\n38.0.2 - 2022-10-11 (YANKED)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. attention::\n\n    This release was subsequently yanked from PyPI due to a regression in OpenSSL.\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.0.6.\n\n\n.. _v38-0-1:\n\n38.0.1 - 2022-09-07\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed parsing TLVs in ASN.1 with length greater than 65535 bytes (typically\n  seen in large CRLs).\n\n.. _v38-0-0:\n\n38.0.0 - 2022-09-06\n~~~~~~~~~~~~~~~~~~~\n\n* Final deprecation of OpenSSL 1.1.0. The next release of ``cryptography``\n  will drop support.\n* We no longer ship ``manylinux2010`` wheels. Users should upgrade to the\n  latest ``pip`` to ensure this doesn't cause issues downloading wheels on\n  their platform. We now ship ``manylinux_2_28`` wheels for users on new\n  enough platforms.\n* Updated the minimum supported Rust version (MSRV) to 1.48.0, from 1.41.0.\n  Users with the latest ``pip`` will typically get a wheel and not need Rust\n  installed, but check :doc:`/installation` for documentation on installing a\n  newer ``rustc`` if required.\n* :meth:`~cryptography.fernet.Fernet.decrypt` and related methods now accept\n  both ``str`` and ``bytes`` tokens.\n* Parsing ``CertificateSigningRequest`` restores the behavior of enforcing\n  that the ``Extension`` ``critical`` field must be correctly encoded DER. See\n  `the issue <https://github.com/pyca/cryptography/issues/6368>`_ for complete\n  details.\n* Added two new OpenSSL functions to the bindings to support an upcoming\n  ``pyOpenSSL`` release.\n* When parsing :class:`~cryptography.x509.CertificateRevocationList` and\n  :class:`~cryptography.x509.CertificateSigningRequest` values, it is now\n  enforced that the ``version`` value in the input must be valid according to\n  the rules of :rfc:`2986` and :rfc:`5280`.\n* Using MD5 or SHA1 in :class:`~cryptography.x509.CertificateBuilder` and\n  other X.509 builders is deprecated and support will be removed in the next\n  version.\n* Added additional APIs to\n  :class:`~cryptography.x509.certificate_transparency.SignedCertificateTimestamp`, including\n  :attr:`~cryptography.x509.certificate_transparency.SignedCertificateTimestamp.signature_hash_algorithm`,\n  :attr:`~cryptography.x509.certificate_transparency.SignedCertificateTimestamp.signature_algorithm`,\n  :attr:`~cryptography.x509.certificate_transparency.SignedCertificateTimestamp.signature`, and\n  :attr:`~cryptography.x509.certificate_transparency.SignedCertificateTimestamp.extension_bytes`.\n* Added :attr:`~cryptography.x509.Certificate.tbs_precertificate_bytes`, allowing\n  users to access the to-be-signed pre-certificate data needed for signed\n  certificate timestamp verification.\n* :class:`~cryptography.hazmat.primitives.kdf.kbkdf.KBKDFHMAC` and\n  :class:`~cryptography.hazmat.primitives.kdf.kbkdf.KBKDFCMAC` now support\n  :attr:`~cryptography.hazmat.primitives.kdf.kbkdf.CounterLocation.MiddleFixed`\n  counter location.\n* Fixed :rfc:`4514` name parsing to reverse the order of the RDNs according\n  to the section 2.1 of the RFC, affecting method\n  :meth:`~cryptography.x509.Name.from_rfc4514_string`.\n* It is now possible to customize some aspects of encryption when serializing\n  private keys, using\n  :meth:`~cryptography.hazmat.primitives.serialization.PrivateFormat.encryption_builder`.\n* Removed several legacy symbols from our OpenSSL bindings. Users of pyOpenSSL\n  versions older than 22.0 will need to upgrade.\n* Added\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.AES128` and\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.AES256` classes.\n  These classes do not replace\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.AES` (which\n  allows all AES key lengths), but are intended for applications where\n  developers want to be explicit about key length.\n\n.. _v37-0-4:\n\n37.0.4 - 2022-07-05\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.0.5.\n\n.. _v37-0-3:\n\n37.0.3 - 2022-06-21 (YANKED)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. attention::\n\n    This release was subsequently yanked from PyPI due to a regression in OpenSSL.\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.0.4.\n\n.. _v37-0-2:\n\n37.0.2 - 2022-05-03\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.0.3.\n* Added a constant needed for an upcoming pyOpenSSL release.\n\n.. _v37-0-1:\n\n37.0.1 - 2022-04-27\n~~~~~~~~~~~~~~~~~~~\n\n* Fixed an issue where parsing an encrypted private key with the public\n  loader functions would hang waiting for console input on OpenSSL 3.0.x rather\n  than raising an error.\n* Restored some legacy symbols for older ``pyOpenSSL`` users. These will be\n  removed again in the future, so ``pyOpenSSL`` users should still upgrade\n  to the latest version of that package when they upgrade ``cryptography``.\n\n.. _v37-0-0:\n\n37.0.0 - 2022-04-26\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 3.0.2.\n* **BACKWARDS INCOMPATIBLE:** Dropped support for LibreSSL 2.9.x and 3.0.x.\n  The new minimum LibreSSL version is 3.1+.\n* **BACKWARDS INCOMPATIBLE:** Removed ``signer`` and ``verifier`` methods\n  from the public key and private key classes. These methods were originally\n  deprecated in version 2.0, but had an extended deprecation timeline due\n  to usage. Any remaining users should transition to ``sign`` and ``verify``.\n* Deprecated OpenSSL 1.1.0 support. OpenSSL 1.1.0 is no longer supported by\n  the OpenSSL project. The next release of ``cryptography`` will be the last\n  to support compiling with OpenSSL 1.1.0.\n* Deprecated Python 3.6 support. Python 3.6 is no longer supported by the\n  Python core team. Support for Python 3.6 will be removed in a future\n  ``cryptography`` release.\n* Deprecated the current minimum supported Rust version (MSRV) of 1.41.0.\n  In the next release we will raise MSRV to 1.48.0. Users with the latest\n  ``pip`` will typically get a wheel and not need Rust installed, but check\n  :doc:`/installation` for documentation on installing a newer ``rustc`` if\n  required.\n* Deprecated\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.CAST5`,\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.SEED`,\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.IDEA`, and\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.Blowfish` because\n  they are legacy algorithms with extremely low usage. These will be removed\n  in a future version of ``cryptography``.\n* Added limited support for distinguished names containing a bit string.\n* We now ship ``universal2`` wheels on macOS, which contain both ``arm64``\n  and ``x86_64`` architectures. Users on macOS should upgrade to the latest\n  ``pip`` to ensure they can use this wheel, although we will continue to\n  ship ``x86_64`` specific wheels for now to ease the transition.\n* This will be the final release for which we ship ``manylinux2010`` wheels.\n  Going forward the minimum supported ``manylinux`` ABI for our wheels will\n  be ``manylinux2014``. The vast majority of users will continue to receive\n  ``manylinux`` wheels provided they have an up to date ``pip``. For PyPy\n  wheels this release already requires ``manylinux2014`` for compatibility\n  with binaries distributed by upstream.\n* Added support for multiple\n  :class:`~cryptography.x509.ocsp.OCSPSingleResponse` in a\n  :class:`~cryptography.x509.ocsp.OCSPResponse`.\n* Restored support for signing certificates and other structures in\n  :doc:`/x509/index` with SHA3 hash algorithms.\n* :class:`~cryptography.hazmat.primitives.ciphers.algorithms.TripleDES` is\n  disabled in FIPS mode.\n* Added support for serialization of PKCS#12 CA friendly names/aliases in\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs12.serialize_key_and_certificates`\n* Added support for 12-15 byte (96 to 120 bit) nonces to\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.AESOCB3`. This class\n  previously supported only 12 byte (96 bit).\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.AESSIV` when using\n  OpenSSL 3.0.0+.\n* Added support for serializing PKCS7 structures from a list of\n  certificates with\n  :class:`~cryptography.hazmat.primitives.serialization.pkcs7.serialize_certificates`.\n* Added support for parsing :rfc:`4514` strings with\n  :meth:`~cryptography.x509.Name.from_rfc4514_string`.\n* Added :attr:`~cryptography.hazmat.primitives.asymmetric.padding.PSS.AUTO` to\n  :class:`~cryptography.hazmat.primitives.asymmetric.padding.PSS`. This can\n  be used to verify a signature where the salt length is not already known.\n* Added :attr:`~cryptography.hazmat.primitives.asymmetric.padding.PSS.DIGEST_LENGTH`\n  to :class:`~cryptography.hazmat.primitives.asymmetric.padding.PSS`. This\n  constant will set the salt length to the same length as the ``PSS`` hash\n  algorithm.\n* Added support for loading RSA-PSS key types with\n  :func:`~cryptography.hazmat.primitives.serialization.load_pem_private_key`\n  and\n  :func:`~cryptography.hazmat.primitives.serialization.load_der_private_key`.\n  This functionality is limited to OpenSSL 1.1.1e+ and loads the key as a\n  normal RSA private key, discarding the PSS constraint information.\n\n.. _v36-0-2:\n\n36.0.2 - 2022-03-15\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 1.1.1n.\n\n.. _v36-0-1:\n\n36.0.1 - 2021-12-14\n~~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and Linux wheels to be compiled with OpenSSL 1.1.1m.\n\n.. _v36-0-0:\n\n36.0.0 - 2021-11-21\n~~~~~~~~~~~~~~~~~~~\n\n* **FINAL DEPRECATION** Support for ``verifier`` and ``signer`` on our\n  asymmetric key classes was deprecated in version 2.0. These functions had an\n  extended deprecation due to usage, however the next version of\n  ``cryptography`` will drop support. Users should migrate to ``sign`` and\n  ``verify``.\n* The entire :doc:`/x509/index` layer is now written in Rust. This allows\n  alternate asymmetric key implementations that can support cloud key\n  management services or hardware security modules provided they implement\n  the necessary interface (for example:\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey`).\n* :ref:`Deprecated the backend argument<faq-missing-backend>` for all\n  functions.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.AESOCB3`.\n* Added support for iterating over arbitrary request\n  :attr:`~cryptography.x509.CertificateSigningRequest.attributes`.\n* Deprecated the ``get_attribute_for_oid`` method on\n  :class:`~cryptography.x509.CertificateSigningRequest` in favor of\n  :meth:`~cryptography.x509.Attributes.get_attribute_for_oid` on the new\n  :class:`~cryptography.x509.Attributes` object.\n* Fixed handling of PEM files to allow loading when certificate and key are\n  in the same file.\n* Fixed parsing of :class:`~cryptography.x509.CertificatePolicies` extensions\n  containing legacy ``BMPString`` values in their ``explicitText``.\n* Allow parsing of negative serial numbers in certificates. Negative serial\n  numbers are prohibited by :rfc:`5280` so a deprecation warning will be\n  raised whenever they are encountered. A future version of ``cryptography``\n  will drop support for parsing them.\n* Added support for parsing PKCS12 files with friendly names for all\n  certificates with\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs12.load_pkcs12`,\n  which will return an object of type\n  :class:`~cryptography.hazmat.primitives.serialization.pkcs12.PKCS12KeyAndCertificates`.\n* :meth:`~cryptography.x509.Name.rfc4514_string` and related methods now have\n  an optional ``attr_name_overrides`` parameter to supply custom OID to name\n  mappings, which can be used to match vendor-specific extensions.\n* **BACKWARDS INCOMPATIBLE:** Reverted the nonstandard formatting of\n  email address fields as ``E`` in\n  :meth:`~cryptography.x509.Name.rfc4514_string` methods from version 35.0.\n\n  The previous behavior can be restored with:\n  ``name.rfc4514_string({NameOID.EMAIL_ADDRESS: \"E\"})``\n* Allow\n  :class:`~cryptography.hazmat.primitives.asymmetric.x25519.X25519PublicKey`\n  and\n  :class:`~cryptography.hazmat.primitives.asymmetric.x448.X448PublicKey` to\n  be used as public keys when parsing certificates or creating them with\n  :class:`~cryptography.x509.CertificateBuilder`. These key types must be\n  signed with a different signing algorithm as ``X25519`` and ``X448`` do\n  not support signing.\n* Extension values can now be serialized to a DER byte string by calling\n  :func:`~cryptography.x509.ExtensionType.public_bytes`.\n* Added experimental support for compiling against BoringSSL. As BoringSSL\n  does not commit to a stable API, ``cryptography`` tests against the\n  latest commit only. Please note that several features are not available\n  when building against BoringSSL.\n* Parsing ``CertificateSigningRequest`` from DER and PEM now, for a limited\n  time period, allows the ``Extension`` ``critical`` field to be incorrectly\n  encoded. See `the issue <https://github.com/pyca/cryptography/issues/6368>`_\n  for complete details. This will be reverted in a future ``cryptography``\n  release.\n* When :class:`~cryptography.x509.OCSPNonce` are parsed and generated their\n  value is now correctly wrapped in an ASN.1 ``OCTET STRING``. This conforms\n  to :rfc:`6960` but conflicts with the original behavior specified in\n  :rfc:`2560`. For a temporary period for backwards compatibility, we will\n  also parse values that are encoded as specified in :rfc:`2560` but this\n  behavior will be removed in a future release.\n\n.. _v35-0-0:\n\n35.0.0 - 2021-09-29\n~~~~~~~~~~~~~~~~~~~\n\n* Changed the :ref:`version scheme <api-stability:versioning>`. This will\n  result in us incrementing the major version more frequently, but does not\n  change our existing backwards compatibility policy.\n* **BACKWARDS INCOMPATIBLE:** The :doc:`/x509/index` PEM parsers now require\n  that the PEM string passed have PEM delimiters of the correct type. For\n  example, parsing a private key PEM concatenated with a certificate PEM will\n  no longer be accepted by the PEM certificate parser.\n* **BACKWARDS INCOMPATIBLE:** The X.509 certificate parser no longer allows\n  negative serial numbers. :rfc:`5280` has always prohibited these.\n* **BACKWARDS INCOMPATIBLE:** Additional forms of invalid ASN.1 found during\n  :doc:`/x509/index` parsing will raise an error on initial parse rather than\n  when the malformed field is accessed.\n* Rust is now required for building ``cryptography``, the\n  ``CRYPTOGRAPHY_DONT_BUILD_RUST`` environment variable is no longer\n  respected.\n* Parsers for :doc:`/x509/index` no longer use OpenSSL and have been\n  rewritten in Rust. This should be backwards compatible (modulo the items\n  listed above) and improve both security and performance.\n* Added support for OpenSSL 3.0.0 as a compilation target.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.hashes.SM3` and\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.SM4`,\n  when using OpenSSL 1.1.1. These algorithms are provided for compatibility\n  in regions where they may be required, and are not generally recommended.\n* We now ship ``manylinux_2_24`` and ``musllinux_1_1`` wheels, in addition to\n  our ``manylinux2010`` and ``manylinux2014`` wheels. Users on distributions\n  like Alpine Linux should ensure they upgrade to the latest ``pip`` to\n  correctly receive wheels.\n* Added ``rfc4514_attribute_name`` attribute to :attr:`x509.NameAttribute\n  <cryptography.x509.NameAttribute.rfc4514_attribute_name>`.\n* Added :class:`~cryptography.hazmat.primitives.kdf.kbkdf.KBKDFCMAC`.\n\n.. _v3-4-8:\n\n3.4.8 - 2021-08-24\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux`` wheels to be compiled with\n  OpenSSL 1.1.1l.\n\n.. _v3-4-7:\n\n3.4.7 - 2021-03-25\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux`` wheels to be compiled with\n  OpenSSL 1.1.1k.\n\n.. _v3-4-6:\n\n3.4.6 - 2021-02-16\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux`` wheels to be compiled with\n  OpenSSL 1.1.1j.\n\n.. _v3-4-5:\n\n3.4.5 - 2021-02-13\n~~~~~~~~~~~~~~~~~~\n\n* Various improvements to type hints.\n* Lower the minimum supported Rust version (MSRV) to >=1.41.0. This change\n  improves compatibility with system-provided Rust on several Linux\n  distributions.\n* ``cryptography`` will be switching to a new versioning scheme with its next\n  feature release. More information is available in our\n  :doc:`/api-stability` documentation.\n\n.. _v3-4-4:\n\n3.4.4 - 2021-02-09\n~~~~~~~~~~~~~~~~~~\n\n* Added a ``py.typed`` file so that ``mypy`` will know to use our type\n  annotations.\n* Fixed an import cycle that could be triggered by certain import sequences.\n\n.. _v3-4-3:\n\n3.4.3 - 2021-02-08\n~~~~~~~~~~~~~~~~~~\n\n* Specify our supported Rust version (>=1.45.0) in our ``setup.py`` so users\n  on older versions will get a clear error message.\n\n.. _v3-4-2:\n\n3.4.2 - 2021-02-08\n~~~~~~~~~~~~~~~~~~\n\n* Improvements to make the rust transition a bit easier. This includes some\n  better error messages and small dependency fixes. If you experience\n  installation problems **Be sure to update pip** first, then check the\n  :doc:`FAQ </faq>`.\n\n.. _v3-4-1:\n\n3.4.1 - 2021-02-07\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a circular import issue.\n* Added additional debug output to assist users seeing installation errors\n  due to outdated ``pip`` or missing ``rustc``.\n\n.. _v3-4:\n\n3.4 - 2021-02-07\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Support for Python 2 has been removed.\n* We now ship ``manylinux2014`` wheels and no longer ship ``manylinux1``\n  wheels. Users should upgrade to the latest ``pip`` to ensure this doesn't\n  cause issues downloading wheels on their platform.\n* ``cryptography`` now incorporates Rust code. Users building ``cryptography``\n  themselves will need to have the Rust toolchain installed. Users who use an\n  officially produced wheel will not need to make any changes. The minimum\n  supported Rust version is 1.45.0.\n* ``cryptography`` now has :pep:`484` type hints on nearly all of of its public\n  APIs. Users can begin using them to type check their code with ``mypy``.\n\n.. _v3-3-2:\n\n3.3.2 - 2021-02-07\n~~~~~~~~~~~~~~~~~~\n\n* **SECURITY ISSUE:** Fixed a bug where certain sequences of ``update()`` calls\n  when symmetrically encrypting very large payloads (>2GB) could result in an\n  integer overflow, leading to buffer overflows. *CVE-2020-36242* **Update:**\n  This fix is a workaround for *CVE-2021-23840* in OpenSSL, fixed in OpenSSL\n  1.1.1j.\n\n.. _v3-3-1:\n\n3.3.1 - 2020-12-09\n~~~~~~~~~~~~~~~~~~\n\n* Re-added a legacy symbol causing problems for older ``pyOpenSSL`` users.\n\n.. _v3-3:\n\n3.3 - 2020-12-08\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Support for Python 3.5 has been removed due to\n  low usage and maintenance burden.\n* **BACKWARDS INCOMPATIBLE:** The\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.GCM` and\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.AESGCM` now require\n  64-bit to 1024-bit (8 byte to 128 byte) initialization vectors. This change\n  is to conform with an upcoming OpenSSL release that will no longer support\n  sizes outside this window.\n* **BACKWARDS INCOMPATIBLE:** When deserializing asymmetric keys we now\n  raise ``ValueError`` rather than ``UnsupportedAlgorithm`` when an\n  unsupported cipher is used. This change is to conform with an upcoming\n  OpenSSL release that will no longer distinguish between error types.\n* **BACKWARDS INCOMPATIBLE:** We no longer allow loading of finite field\n  Diffie-Hellman parameters of less than 512 bits in length. This change is to\n  conform with an upcoming OpenSSL release that no longer supports smaller\n  sizes. These keys were already wildly insecure and should not have been used\n  in any application outside of testing.\n* Updated Windows, macOS, and ``manylinux`` wheels to be compiled with\n  OpenSSL 1.1.1i.\n* Python 2 support is deprecated in ``cryptography``. This is the last release\n  that will support Python 2.\n* Added the\n  :meth:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey.recover_data_from_signature`\n  function to\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey`\n  for recovering the signed data from an RSA signature.\n\n.. _v3-2-1:\n\n3.2.1 - 2020-10-27\n~~~~~~~~~~~~~~~~~~\n\n* Disable blinding on RSA public keys to address an error with some versions\n  of OpenSSL.\n\n.. _v3-2:\n\n3.2 - 2020-10-25\n~~~~~~~~~~~~~~~~\n\n* **SECURITY ISSUE:** Attempted to make RSA PKCS#1v1.5 decryption more constant\n  time, to protect against Bleichenbacher vulnerabilities. Due to limitations\n  imposed by our API, we cannot completely mitigate this vulnerability and a\n  future release will contain a new API which is designed to be resilient to\n  these for contexts where it is required. Credit to **Hubert Kario** for\n  reporting the issue. *CVE-2020-25659*\n* Support for OpenSSL 1.0.2 has been removed. Users on older version of OpenSSL\n  will need to upgrade.\n* Added basic support for PKCS7 signing (including SMIME) via\n  :class:`~cryptography.hazmat.primitives.serialization.pkcs7.PKCS7SignatureBuilder`.\n\n.. _v3-1-1:\n\n3.1.1 - 2020-09-22\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux`` wheels to be compiled with\n  OpenSSL 1.1.1h.\n\n.. _v3-1:\n\n3.1 - 2020-08-26\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Removed support for ``idna`` based\n  :term:`U-label` parsing in various X.509 classes. This support was originally\n  deprecated in version 2.1 and moved to an extra in 2.5.\n* Deprecated OpenSSL 1.0.2 support. OpenSSL 1.0.2 is no longer supported by\n  the OpenSSL project. The next version of ``cryptography`` will drop support\n  for it.\n* Deprecated support for Python 3.5. This version sees very little use and will\n  be removed in the next release.\n* ``backend`` arguments to functions are no longer required and the\n  default backend will automatically be selected if no ``backend`` is provided.\n* Added initial support for parsing certificates from PKCS7 files with\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs7.load_pem_pkcs7_certificates`\n  and\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs7.load_der_pkcs7_certificates`\n  .\n* Calling ``update`` or ``update_into`` on\n  :class:`~cryptography.hazmat.primitives.ciphers.CipherContext` with ``data``\n  longer than 2\\ :sup:`31` bytes no longer raises an ``OverflowError``. This\n  also resolves the same issue in :doc:`/fernet`.\n\n.. _v3-0:\n\n3.0 - 2020-07-20\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Removed support for passing an\n  :class:`~cryptography.x509.Extension` instance to\n  :meth:`~cryptography.x509.AuthorityKeyIdentifier.from_issuer_subject_key_identifier`,\n  as per our deprecation policy.\n* **BACKWARDS INCOMPATIBLE:** Support for LibreSSL 2.7.x, 2.8.x, and 2.9.0 has\n  been removed (2.9.1+ is still supported).\n* **BACKWARDS INCOMPATIBLE:** Dropped support for macOS 10.9, macOS users must\n  upgrade to 10.10 or newer.\n* **BACKWARDS INCOMPATIBLE:** RSA\n  :meth:`~cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key`\n  no longer accepts ``public_exponent`` values except 65537 and 3 (the latter\n  for legacy purposes).\n* **BACKWARDS INCOMPATIBLE:** X.509 certificate parsing now enforces that the\n  ``version`` field contains a valid value, rather than deferring this check\n  until :attr:`~cryptography.x509.Certificate.version` is accessed.\n* Deprecated support for Python 2. At the time there is no time table for\n  actually dropping support, however we strongly encourage all users to upgrade\n  their Python, as Python 2 no longer receives support from the Python core\n  team.\n\n  If you have trouble suppressing this warning in tests view the :ref:`FAQ\n  entry addressing this issue <faq-howto-handle-deprecation-warning>`.\n\n* Added support for ``OpenSSH`` serialization format for\n  ``ec``, ``ed25519``, ``rsa`` and ``dsa`` private keys:\n  :func:`~cryptography.hazmat.primitives.serialization.load_ssh_private_key`\n  for loading and\n  :attr:`~cryptography.hazmat.primitives.serialization.PrivateFormat.OpenSSH`\n  for writing.\n* Added support for ``OpenSSH`` certificates to\n  :func:`~cryptography.hazmat.primitives.serialization.load_ssh_public_key`.\n* Added :meth:`~cryptography.fernet.Fernet.encrypt_at_time` and\n  :meth:`~cryptography.fernet.Fernet.decrypt_at_time` to\n  :class:`~cryptography.fernet.Fernet`.\n* Added support for the :class:`~cryptography.x509.SubjectInformationAccess`\n  X.509 extension.\n* Added support for parsing\n  :class:`~cryptography.x509.SignedCertificateTimestamps` in OCSP responses.\n* Added support for parsing attributes in certificate signing requests via\n  ``CertificateSigningRequest.get_attribute_for_oid``.\n* Added support for encoding attributes in certificate signing requests via\n  :meth:`~cryptography.x509.CertificateSigningRequestBuilder.add_attribute`.\n* On OpenSSL 1.1.1d and higher ``cryptography`` now uses OpenSSL's\n  built-in CSPRNG instead of its own OS random engine because these versions of\n  OpenSSL properly reseed on fork.\n* Added initial support for creating PKCS12 files with\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs12.serialize_key_and_certificates`.\n\n.. _v2-9-2:\n\n2.9.2 - 2020-04-22\n~~~~~~~~~~~~~~~~~~\n\n* Updated the macOS wheel to fix an issue where it would not run on macOS\n  versions older than 10.15.\n\n.. _v2-9-1:\n\n2.9.1 - 2020-04-21\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux`` wheels to be compiled with\n  OpenSSL 1.1.1g.\n\n.. _v2-9:\n\n2.9 - 2020-04-02\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Support for Python 3.4 has been removed due to\n  low usage and maintenance burden.\n* **BACKWARDS INCOMPATIBLE:** Support for OpenSSL 1.0.1 has been removed.\n  Users on older version of OpenSSL will need to upgrade.\n* **BACKWARDS INCOMPATIBLE:** Support for LibreSSL 2.6.x has been removed.\n* Removed support for calling\n  :meth:`~cryptography.hazmat.primitives.asymmetric.x25519.X25519PublicKey.public_bytes`\n  with no arguments, as per our deprecation policy. You must now pass\n  ``encoding`` and ``format``.\n* **BACKWARDS INCOMPATIBLE:** Reversed the order in which\n  :meth:`~cryptography.x509.Name.rfc4514_string` returns the RDNs\n  as required by :rfc:`4514`.\n* Updated Windows, macOS, and ``manylinux`` wheels to be compiled with\n  OpenSSL 1.1.1f.\n* Added support for parsing\n  :attr:`~cryptography.x509.ocsp.OCSPResponse.single_extensions` in an OCSP\n  response.\n* :class:`~cryptography.x509.NameAttribute` values can now be empty strings.\n\n.. _v2-8:\n\n2.8 - 2019-10-16\n~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux`` wheels to be compiled with\n  OpenSSL 1.1.1d.\n* Added support for Python 3.8.\n* Added class methods\n  :meth:`Poly1305.generate_tag\n  <cryptography.hazmat.primitives.poly1305.Poly1305.generate_tag>`\n  and\n  :meth:`Poly1305.verify_tag\n  <cryptography.hazmat.primitives.poly1305.Poly1305.verify_tag>`\n  for Poly1305 sign and verify operations.\n* Deprecated support for OpenSSL 1.0.1. Support will be removed in\n  ``cryptography`` 2.9.\n* We now ship ``manylinux2010`` wheels in addition to our ``manylinux1``\n  wheels.\n* Added support for ``ed25519`` and ``ed448`` keys in the\n  :class:`~cryptography.x509.CertificateBuilder`,\n  :class:`~cryptography.x509.CertificateSigningRequestBuilder`,\n  :class:`~cryptography.x509.CertificateRevocationListBuilder` and\n  :class:`~cryptography.x509.ocsp.OCSPResponseBuilder`.\n* ``cryptography`` no longer depends on ``asn1crypto``.\n* :class:`~cryptography.x509.FreshestCRL` is now allowed as a\n  :class:`~cryptography.x509.CertificateRevocationList` extension.\n\n.. _v2-7:\n\n2.7 - 2019-05-30\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** We no longer distribute 32-bit ``manylinux1``\n  wheels. Continuing to produce them was a maintenance burden.\n* **BACKWARDS INCOMPATIBLE:** Removed the\n  ``cryptography.hazmat.primitives.mac.MACContext`` interface. The ``CMAC`` and\n  ``HMAC`` APIs have not changed, but they are no longer registered as\n  ``MACContext`` instances.\n* Updated Windows, macOS, and ``manylinux1`` wheels to be compiled with\n  OpenSSL 1.1.1c.\n* Removed support for running our tests with ``setup.py test``. Users\n  interested in running our tests can continue to follow the directions in our\n  :doc:`development documentation</development/getting-started>`.\n* Add support for :class:`~cryptography.hazmat.primitives.poly1305.Poly1305`\n  when using OpenSSL 1.1.1 or newer.\n* Support serialization with ``Encoding.OpenSSH`` and ``PublicFormat.OpenSSH``\n  in\n  :meth:`Ed25519PublicKey.public_bytes\n  <cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey.public_bytes>`\n  .\n* Correctly allow passing a ``SubjectKeyIdentifier`` to\n  :meth:`~cryptography.x509.AuthorityKeyIdentifier.from_issuer_subject_key_identifier`\n  and deprecate passing an ``Extension`` object. The documentation always\n  required ``SubjectKeyIdentifier`` but the implementation previously\n  required an ``Extension``.\n\n.. _v2-6-1:\n\n2.6.1 - 2019-02-27\n~~~~~~~~~~~~~~~~~~\n\n* Resolved an error in our build infrastructure that broke our Python3 wheels\n  for macOS and Linux.\n\n.. _v2-6:\n\n2.6 - 2019-02-27\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Removed\n  ``cryptography.hazmat.primitives.asymmetric.utils.encode_rfc6979_signature``\n  and\n  ``cryptography.hazmat.primitives.asymmetric.utils.decode_rfc6979_signature``,\n  which had been deprecated for nearly 4 years. Use\n  :func:`~cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature`\n  and\n  :func:`~cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature`\n  instead.\n* **BACKWARDS INCOMPATIBLE**: Removed ``cryptography.x509.Certificate.serial``,\n  which had been deprecated for nearly 3 years. Use\n  :attr:`~cryptography.x509.Certificate.serial_number` instead.\n* Updated Windows, macOS, and ``manylinux1`` wheels to be compiled with\n  OpenSSL 1.1.1b.\n* Added support for :doc:`/hazmat/primitives/asymmetric/ed448` when using\n  OpenSSL 1.1.1b or newer.\n* Added support for :doc:`/hazmat/primitives/asymmetric/ed25519` when using\n  OpenSSL 1.1.1b or newer.\n* :func:`~cryptography.hazmat.primitives.serialization.load_ssh_public_key` can\n  now load ``ed25519`` public keys.\n* Add support for easily mapping an object identifier to its elliptic curve\n  class via\n  :func:`~cryptography.hazmat.primitives.asymmetric.ec.get_curve_for_oid`.\n* Add support for OpenSSL when compiled with the ``no-engine``\n  (``OPENSSL_NO_ENGINE``) flag.\n\n.. _v2-5:\n\n2.5 - 2019-01-22\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** :term:`U-label` strings were deprecated in\n  version 2.1, but this version removes the default ``idna`` dependency as\n  well. If you still need this deprecated path please install cryptography\n  with the ``idna`` extra: ``pip install cryptography[idna]``.\n* **BACKWARDS INCOMPATIBLE:** The minimum supported PyPy version is now 5.4.\n* Numerous classes and functions have been updated to allow :term:`bytes-like`\n  types for keying material and passwords, including symmetric algorithms, AEAD\n  ciphers, KDFs, loading asymmetric keys, and one time password classes.\n* Updated Windows, macOS, and ``manylinux1`` wheels to be compiled with\n  OpenSSL 1.1.1a.\n* Added support for :class:`~cryptography.hazmat.primitives.hashes.SHA512_224`\n  and :class:`~cryptography.hazmat.primitives.hashes.SHA512_256` when using\n  OpenSSL 1.1.1.\n* Added support for :class:`~cryptography.hazmat.primitives.hashes.SHA3_224`,\n  :class:`~cryptography.hazmat.primitives.hashes.SHA3_256`,\n  :class:`~cryptography.hazmat.primitives.hashes.SHA3_384`, and\n  :class:`~cryptography.hazmat.primitives.hashes.SHA3_512` when using OpenSSL\n  1.1.1.\n* Added support for :doc:`/hazmat/primitives/asymmetric/x448` when using\n  OpenSSL 1.1.1.\n* Added support for :class:`~cryptography.hazmat.primitives.hashes.SHAKE128`\n  and :class:`~cryptography.hazmat.primitives.hashes.SHAKE256` when using\n  OpenSSL 1.1.1.\n* Added initial support for parsing PKCS12 files with\n  :func:`~cryptography.hazmat.primitives.serialization.pkcs12.load_key_and_certificates`.\n* Added support for :class:`~cryptography.x509.IssuingDistributionPoint`.\n* Added ``rfc4514_string()`` method to\n  :meth:`x509.Name <cryptography.x509.Name.rfc4514_string>`,\n  :meth:`x509.RelativeDistinguishedName\n  <cryptography.x509.RelativeDistinguishedName.rfc4514_string>`, and\n  :meth:`x509.NameAttribute <cryptography.x509.NameAttribute.rfc4514_string>`\n  to format the name or component an :rfc:`4514` Distinguished Name string.\n* Added\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.from_encoded_point`,\n  which immediately checks if the point is on the curve and supports compressed\n  points. Deprecated the previous method\n  ``cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers.from_encoded_point``.\n* Added :attr:`~cryptography.x509.ocsp.OCSPResponse.signature_hash_algorithm`\n  to ``OCSPResponse``.\n* Updated :doc:`/hazmat/primitives/asymmetric/x25519` support to allow\n  additional serialization methods. Calling\n  :meth:`~cryptography.hazmat.primitives.asymmetric.x25519.X25519PublicKey.public_bytes`\n  with no arguments has been deprecated.\n* Added support for encoding compressed and uncompressed points via\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.public_bytes`. Deprecated the previous method\n  ``cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers.encode_point``.\n\n\n.. _v2-4-2:\n\n2.4.2 - 2018-11-21\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux1`` wheels to be compiled with\n  OpenSSL 1.1.0j.\n\n.. _v2-4-1:\n\n2.4.1 - 2018-11-11\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a build breakage in our ``manylinux1`` wheels.\n\n.. _v2-4:\n\n2.4 - 2018-11-11\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Dropped support for LibreSSL 2.4.x.\n* Deprecated OpenSSL 1.0.1 support. OpenSSL 1.0.1 is no longer supported by\n  the OpenSSL project. At this time there is no time table for dropping\n  support, however we strongly encourage all users to upgrade or install\n  ``cryptography`` from a wheel.\n* Added initial :doc:`OCSP </x509/ocsp>` support.\n* Added support for :class:`~cryptography.x509.PrecertPoison`.\n\n.. _v2-3-1:\n\n2.3.1 - 2018-08-14\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux1`` wheels to be compiled with\n  OpenSSL 1.1.0i.\n\n.. _v2-3:\n\n2.3 - 2018-07-18\n~~~~~~~~~~~~~~~~\n\n* **SECURITY ISSUE:**\n  :meth:`~cryptography.hazmat.primitives.ciphers.AEADDecryptionContext.finalize_with_tag`\n  allowed tag truncation by default which can allow tag forgery in some cases.\n  The method now enforces the ``min_tag_length`` provided to the\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.GCM` constructor.\n  *CVE-2018-10903*\n* Added support for Python 3.7.\n* Added :meth:`~cryptography.fernet.Fernet.extract_timestamp` to get the\n  authenticated timestamp of a :doc:`Fernet </fernet>` token.\n* Support for Python 2.7.x without ``hmac.compare_digest`` has been deprecated.\n  We will require Python 2.7.7 or higher (or 2.7.6 on Ubuntu) in the next\n  ``cryptography`` release.\n* Fixed multiple issues preventing ``cryptography`` from compiling against\n  LibreSSL 2.7.x.\n* Added\n  :class:`~cryptography.x509.CertificateRevocationList.get_revoked_certificate_by_serial_number`\n  for quick serial number searches in CRLs.\n* The :class:`~cryptography.x509.RelativeDistinguishedName` class now\n  preserves the order of attributes. Duplicate attributes now raise an error\n  instead of silently discarding duplicates.\n* :func:`~cryptography.hazmat.primitives.keywrap.aes_key_unwrap` and\n  :func:`~cryptography.hazmat.primitives.keywrap.aes_key_unwrap_with_padding`\n  now raise :class:`~cryptography.hazmat.primitives.keywrap.InvalidUnwrap` if\n  the wrapped key is an invalid length, instead of ``ValueError``.\n\n.. _v2-2-2:\n\n2.2.2 - 2018-03-27\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux1`` wheels to be compiled with\n  OpenSSL 1.1.0h.\n\n.. _v2-2-1:\n\n2.2.1 - 2018-03-20\n~~~~~~~~~~~~~~~~~~\n\n* Reverted a change to ``GeneralNames`` which prohibited having zero elements,\n  due to breakages.\n* Fixed a bug in\n  :func:`~cryptography.hazmat.primitives.keywrap.aes_key_unwrap_with_padding`\n  that caused it to raise ``InvalidUnwrap`` when key length modulo 8 was\n  zero.\n\n\n.. _v2-2:\n\n2.2 - 2018-03-19\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Support for Python 2.6 has been dropped.\n* Resolved a bug in ``HKDF`` that incorrectly constrained output size.\n* Added :class:`~cryptography.hazmat.primitives.asymmetric.ec.BrainpoolP256R1`,\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.BrainpoolP384R1`, and\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.BrainpoolP512R1` to\n  support inter-operating with systems like German smart meters.\n* Added token rotation support to :doc:`Fernet </fernet>` with\n  :meth:`~cryptography.fernet.MultiFernet.rotate`.\n* Fixed a memory leak in\n  :func:`~cryptography.hazmat.primitives.asymmetric.ec.derive_private_key`.\n* Added support for AES key wrapping with padding via\n  :func:`~cryptography.hazmat.primitives.keywrap.aes_key_wrap_with_padding`\n  and\n  :func:`~cryptography.hazmat.primitives.keywrap.aes_key_unwrap_with_padding`\n  .\n* Allow loading DSA keys with 224 bit ``q``.\n\n.. _v2-1-4:\n\n2.1.4 - 2017-11-29\n~~~~~~~~~~~~~~~~~~\n\n* Added ``X509_up_ref`` for an upcoming ``pyOpenSSL`` release.\n\n.. _v2-1-3:\n\n2.1.3 - 2017-11-02\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows, macOS, and ``manylinux1`` wheels to be compiled with\n  OpenSSL 1.1.0g.\n\n.. _v2-1-2:\n\n2.1.2 - 2017-10-24\n~~~~~~~~~~~~~~~~~~\n\n* Corrected a bug with the ``manylinux1`` wheels where OpenSSL's stack was\n  marked executable.\n\n.. _v2-1-1:\n\n2.1.1 - 2017-10-12\n~~~~~~~~~~~~~~~~~~\n\n* Fixed support for install with the system ``pip`` on Ubuntu 16.04.\n\n.. _v2-1:\n\n2.1 - 2017-10-11\n~~~~~~~~~~~~~~~~\n\n* **FINAL DEPRECATION** Python 2.6 support is deprecated, and will be removed\n  in the next release of ``cryptography``.\n* **BACKWARDS INCOMPATIBLE:** ``Whirlpool``, ``RIPEMD160``, and\n  ``UnsupportedExtension`` have been removed in accordance with our\n  :doc:`/api-stability` policy.\n* **BACKWARDS INCOMPATIBLE:**\n  :attr:`DNSName.value <cryptography.x509.DNSName.value>`,\n  :attr:`RFC822Name.value <cryptography.x509.RFC822Name.value>`, and\n  :attr:`UniformResourceIdentifier.value\n  <cryptography.x509.UniformResourceIdentifier.value>`\n  will now return an :term:`A-label` string when parsing a certificate\n  containing an internationalized domain name (IDN) or if the caller passed\n  a :term:`U-label` to the constructor. See below for additional deprecations\n  related to this change.\n* Installing ``cryptography`` now requires ``pip`` 6 or newer.\n* Deprecated passing :term:`U-label` strings to the\n  :class:`~cryptography.x509.DNSName`,\n  :class:`~cryptography.x509.UniformResourceIdentifier`, and\n  :class:`~cryptography.x509.RFC822Name` constructors. Instead, users should\n  pass values as :term:`A-label` strings with ``idna`` encoding if necessary.\n  This change will not affect anyone who is not processing internationalized\n  domains.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.ChaCha20`. In\n  most cases users should choose\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305`\n  rather than using this unauthenticated form.\n* Added :meth:`~cryptography.x509.CertificateRevocationList.is_signature_valid`\n  to :class:`~cryptography.x509.CertificateRevocationList`.\n* Support :class:`~cryptography.hazmat.primitives.hashes.BLAKE2b` and\n  :class:`~cryptography.hazmat.primitives.hashes.BLAKE2s` with\n  :class:`~cryptography.hazmat.primitives.hmac.HMAC`.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.XTS` mode for\n  AES.\n* Added support for using labels with\n  :class:`~cryptography.hazmat.primitives.asymmetric.padding.OAEP` when using\n  OpenSSL 1.0.2 or greater.\n* Improved compatibility with NSS when issuing certificates from an issuer\n  that has a subject with non-``UTF8String`` string types.\n* Add support for the :class:`~cryptography.x509.DeltaCRLIndicator` extension.\n* Add support for the :class:`~cryptography.x509.TLSFeature`\n  extension. This is commonly used for enabling ``OCSP Must-Staple`` in\n  certificates.\n* Add support for the :class:`~cryptography.x509.FreshestCRL` extension.\n\n.. _v2-0-3:\n\n2.0.3 - 2017-08-03\n~~~~~~~~~~~~~~~~~~\n\n* Fixed an issue with weak linking symbols when compiling on macOS\n  versions older than 10.12.\n\n\n.. _v2-0-2:\n\n2.0.2 - 2017-07-27\n~~~~~~~~~~~~~~~~~~\n\n* Marked all symbols as hidden in the ``manylinux1`` wheel to avoid a\n  bug with symbol resolution in certain scenarios.\n\n\n.. _v2-0-1:\n\n2.0.1 - 2017-07-26\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a compilation bug affecting OpenBSD.\n* Altered the ``manylinux1`` wheels to statically link OpenSSL instead of\n  dynamically linking and bundling the shared object. This should resolve\n  crashes seen when using ``uwsgi`` or other binaries that link against\n  OpenSSL independently.\n* Fixed the stack level for the ``signer`` and ``verifier`` warnings.\n\n\n.. _v2-0:\n\n2.0 - 2017-07-17\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Support for Python 3.3 has been dropped.\n* We now ship ``manylinux1`` wheels linked against OpenSSL 1.1.0f. These wheels\n  will be automatically used with most Linux distributions if you are running\n  the latest pip.\n* Deprecated the use of ``signer`` on\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey`,\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey`,\n  and\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey`\n  in favor of ``sign``.\n* Deprecated the use of ``verifier`` on\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey`,\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey`,\n  and\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey`\n  in favor of ``verify``.\n* Added support for parsing\n  :class:`~cryptography.x509.certificate_transparency.SignedCertificateTimestamp`\n  objects from X.509 certificate extensions.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.ChaCha20Poly1305`.\n* Added support for\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.AESCCM`.\n* Added\n  :class:`~cryptography.hazmat.primitives.ciphers.aead.AESGCM`, a \"one shot\"\n  API for AES GCM encryption.\n* Added support for :doc:`/hazmat/primitives/asymmetric/x25519`.\n* Added support for serializing and deserializing Diffie-Hellman parameters\n  with\n  :func:`~cryptography.hazmat.primitives.serialization.load_pem_parameters`,\n  :func:`~cryptography.hazmat.primitives.serialization.load_der_parameters`,\n  and\n  :meth:`~cryptography.hazmat.primitives.asymmetric.dh.DHParameters.parameter_bytes`\n  .\n* The ``extensions`` attribute on :class:`~cryptography.x509.Certificate`,\n  :class:`~cryptography.x509.CertificateSigningRequest`,\n  :class:`~cryptography.x509.CertificateRevocationList`, and\n  :class:`~cryptography.x509.RevokedCertificate` now caches the computed\n  ``Extensions`` object. There should be no performance change, just a\n  performance improvement for programs accessing the ``extensions`` attribute\n  multiple times.\n\n\n.. _v1-9:\n\n1.9 - 2017-05-29\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:** Elliptic Curve signature verification no longer\n  returns ``True`` on success. This brings it in line with the interface's\n  documentation, and our intent. The correct way to use\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.verify`\n  has always been to check whether or not\n  :class:`~cryptography.exceptions.InvalidSignature` was raised.\n* **BACKWARDS INCOMPATIBLE:** Dropped support for macOS 10.7 and 10.8.\n* **BACKWARDS INCOMPATIBLE:** The minimum supported PyPy version is now 5.3.\n* Python 3.3 support has been deprecated, and will be removed in the next\n  ``cryptography`` release.\n* Add support for providing ``tag`` during\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.GCM` finalization via\n  :meth:`~cryptography.hazmat.primitives.ciphers.AEADDecryptionContext.finalize_with_tag`.\n* Fixed an issue preventing ``cryptography`` from compiling against\n  LibreSSL 2.5.x.\n* Added\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.key_size`\n  and\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.key_size`\n  as convenience methods for determining the bit size of a secret scalar for\n  the curve.\n* Accessing an unrecognized extension marked critical on an X.509 object will\n  no longer raise an ``UnsupportedExtension`` exception, instead an\n  :class:`~cryptography.x509.UnrecognizedExtension` object will be returned.\n  This behavior was based on a poor reading of the RFC, unknown critical\n  extensions only need to be rejected on certificate verification.\n* The CommonCrypto backend has been removed.\n* MultiBackend has been removed.\n* ``Whirlpool`` and ``RIPEMD160`` have been deprecated.\n\n\n.. _v1-8-2:\n\n1.8.2 - 2017-05-26\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a compilation bug affecting OpenSSL 1.1.0f.\n* Updated Windows and macOS wheels to be compiled against OpenSSL 1.1.0f.\n\n\n.. _v1-8-1:\n\n1.8.1 - 2017-03-10\n~~~~~~~~~~~~~~~~~~\n\n* Fixed macOS wheels to properly link against 1.1.0 rather than 1.0.2.\n\n\n.. _v1-8:\n\n1.8 - 2017-03-09\n~~~~~~~~~~~~~~~~\n\n* Added support for Python 3.6.\n* Windows and macOS wheels now link against OpenSSL 1.1.0.\n* macOS wheels are no longer universal. This change significantly shrinks the\n  size of the wheels. Users on macOS 32-bit Python (if there are any) should\n  migrate to 64-bit or build their own packages.\n* Changed ASN.1 dependency from ``pyasn1`` to ``asn1crypto`` resulting in a\n  general performance increase when encoding/decoding ASN.1 structures. Also,\n  the ``pyasn1_modules`` test dependency is no longer required.\n* Added support for\n  :meth:`~cryptography.hazmat.primitives.ciphers.CipherContext.update_into` on\n  :class:`~cryptography.hazmat.primitives.ciphers.CipherContext`.\n* Added\n  :meth:`~cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey.private_bytes`\n  to\n  :class:`~cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey`.\n* Added\n  :meth:`~cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey.public_bytes`\n  to\n  :class:`~cryptography.hazmat.primitives.asymmetric.dh.DHPublicKey`.\n* :func:`~cryptography.hazmat.primitives.serialization.load_pem_private_key`\n  and\n  :func:`~cryptography.hazmat.primitives.serialization.load_der_private_key`\n  now require that ``password`` must be bytes if provided. Previously this\n  was documented but not enforced.\n* Added support for subgroup order in :doc:`/hazmat/primitives/asymmetric/dh`.\n\n\n.. _v1-7-2:\n\n1.7.2 - 2017-01-27\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows and macOS wheels to be compiled against OpenSSL 1.0.2k.\n\n\n.. _v1-7-1:\n\n1.7.1 - 2016-12-13\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a regression in ``int_from_bytes`` where it failed to accept\n  ``bytearray``.\n\n\n.. _v1-7:\n\n1.7 - 2016-12-12\n~~~~~~~~~~~~~~~~\n\n* Support for OpenSSL 1.0.0 has been removed. Users on older version of OpenSSL\n  will need to upgrade.\n* Added support for Diffie-Hellman key exchange using\n  :meth:`~cryptography.hazmat.primitives.asymmetric.dh.DHPrivateKey.exchange`.\n* The OS random engine for OpenSSL has been rewritten to improve compatibility\n  with embedded Python and other edge cases. More information about this change\n  can be found in the\n  `pull request <https://github.com/pyca/cryptography/pull/3229>`_.\n\n\n.. _v1-6:\n\n1.6 - 2016-11-22\n~~~~~~~~~~~~~~~~\n\n* Deprecated support for OpenSSL 1.0.0. Support will be removed in\n  ``cryptography`` 1.7.\n* Replaced the Python-based OpenSSL locking callbacks with a C version to fix\n  a potential deadlock that could occur if a garbage collection cycle occurred\n  while inside the lock.\n* Added support for :class:`~cryptography.hazmat.primitives.hashes.BLAKE2b` and\n  :class:`~cryptography.hazmat.primitives.hashes.BLAKE2s` when using OpenSSL\n  1.1.0.\n* Added\n  :attr:`~cryptography.x509.Certificate.signature_algorithm_oid` support to\n  :class:`~cryptography.x509.Certificate`.\n* Added\n  :attr:`~cryptography.x509.CertificateSigningRequest.signature_algorithm_oid`\n  support to :class:`~cryptography.x509.CertificateSigningRequest`.\n* Added\n  :attr:`~cryptography.x509.CertificateRevocationList.signature_algorithm_oid`\n  support to :class:`~cryptography.x509.CertificateRevocationList`.\n* Added support for :class:`~cryptography.hazmat.primitives.kdf.scrypt.Scrypt`\n  when using OpenSSL 1.1.0.\n* Added a workaround to improve compatibility with Python application bundling\n  tools like ``PyInstaller`` and ``cx_freeze``.\n* Added support for generating a\n  :meth:`~cryptography.x509.random_serial_number`.\n* Added support for encoding ``IPv4Network`` and ``IPv6Network`` in X.509\n  certificates for use with :class:`~cryptography.x509.NameConstraints`.\n* Added :meth:`~cryptography.x509.Name.public_bytes` to\n  :class:`~cryptography.x509.Name`.\n* Added :class:`~cryptography.x509.RelativeDistinguishedName`\n* :class:`~cryptography.x509.DistributionPoint` now accepts\n  :class:`~cryptography.x509.RelativeDistinguishedName` for\n  :attr:`~cryptography.x509.DistributionPoint.relative_name`.\n  Deprecated use of :class:`~cryptography.x509.Name` as\n  :attr:`~cryptography.x509.DistributionPoint.relative_name`.\n* :class:`~cryptography.x509.Name` now accepts an iterable of\n  :class:`~cryptography.x509.RelativeDistinguishedName`.  RDNs can\n  be accessed via the :attr:`~cryptography.x509.Name.rdns`\n  attribute.  When constructed with an iterable of\n  :class:`~cryptography.x509.NameAttribute`, each attribute becomes\n  a single-valued RDN.\n* Added\n  :func:`~cryptography.hazmat.primitives.asymmetric.ec.derive_private_key`.\n* Added support for signing and verifying RSA, DSA, and ECDSA signatures with\n  :class:`~cryptography.hazmat.primitives.asymmetric.utils.Prehashed`\n  digests.\n\n\n.. _v1-5-3:\n\n1.5.3 - 2016-11-05\n~~~~~~~~~~~~~~~~~~\n\n* **SECURITY ISSUE**: Fixed a bug where ``HKDF`` would return an empty\n  byte-string if used with a ``length`` less than ``algorithm.digest_size``.\n  Credit to **Markus Döring** for reporting the issue. *CVE-2016-9243*\n\n\n.. _v1-5-2:\n\n1.5.2 - 2016-09-26\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows and OS X wheels to be compiled against OpenSSL 1.0.2j.\n\n\n.. _v1-5-1:\n\n1.5.1 - 2016-09-22\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows and OS X wheels to be compiled against OpenSSL 1.0.2i.\n* Resolved a ``UserWarning`` when used with cffi 1.8.3.\n* Fixed a memory leak in name creation with X.509.\n* Added a workaround for old versions of setuptools.\n* Fixed an issue preventing ``cryptography`` from compiling against\n  OpenSSL 1.0.2i.\n\n\n\n.. _v1-5:\n\n1.5 - 2016-08-26\n~~~~~~~~~~~~~~~~\n\n* Added\n  :func:`~cryptography.hazmat.primitives.asymmetric.padding.calculate_max_pss_salt_length`.\n* Added \"one shot\"\n  :meth:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey.sign`\n  and\n  :meth:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey.verify`\n  methods to DSA keys.\n* Added \"one shot\"\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.sign`\n  and\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey.verify`\n  methods to ECDSA keys.\n* Switched back to the older callback model on Python 3.5 in order to mitigate\n  the locking callback problem with OpenSSL <1.1.0.\n* :class:`~cryptography.x509.CertificateBuilder`,\n  :class:`~cryptography.x509.CertificateRevocationListBuilder`, and\n  :class:`~cryptography.x509.RevokedCertificateBuilder` now accept timezone\n  aware ``datetime`` objects as method arguments\n* ``cryptography`` now supports OpenSSL 1.1.0 as a compilation target.\n\n\n\n.. _v1-4:\n\n1.4 - 2016-06-04\n~~~~~~~~~~~~~~~~\n\n* Support for OpenSSL 0.9.8 has been removed. Users on older versions of\n  OpenSSL will need to upgrade.\n* Added :class:`~cryptography.hazmat.primitives.kdf.kbkdf.KBKDFHMAC`.\n* Added support for ``OpenSSH`` public key serialization.\n* Added support for SHA-2 in RSA\n  :class:`~cryptography.hazmat.primitives.asymmetric.padding.OAEP` when using\n  OpenSSL 1.0.2 or greater.\n* Added \"one shot\"\n  :meth:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey.sign`\n  and\n  :meth:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey.verify`\n  methods to RSA keys.\n* Deprecated the ``serial`` attribute on\n  :class:`~cryptography.x509.Certificate`, in favor of\n  :attr:`~cryptography.x509.Certificate.serial_number`.\n\n\n\n.. _v1-3-4:\n\n1.3.4 - 2016-06-03\n~~~~~~~~~~~~~~~~~~\n\n* Added another OpenSSL function to the bindings to support an upcoming\n  ``pyOpenSSL`` release.\n\n\n\n.. _v1-3-3:\n\n1.3.3 - 2016-06-02\n~~~~~~~~~~~~~~~~~~\n\n* Added two new OpenSSL functions to the bindings to support an upcoming\n  ``pyOpenSSL`` release.\n\n\n.. _v1-3-2:\n\n1.3.2 - 2016-05-04\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows and OS X wheels to be compiled against OpenSSL 1.0.2h.\n* Fixed an issue preventing ``cryptography`` from compiling against\n  LibreSSL 2.3.x.\n\n\n.. _v1-3-1:\n\n1.3.1 - 2016-03-21\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a bug that caused an ``AttributeError`` when using ``mock`` to patch\n  some ``cryptography`` modules.\n\n\n.. _v1-3:\n\n1.3 - 2016-03-18\n~~~~~~~~~~~~~~~~\n\n* Added support for padding ANSI X.923 with\n  :class:`~cryptography.hazmat.primitives.padding.ANSIX923`.\n* Deprecated support for OpenSSL 0.9.8. Support will be removed in\n  ``cryptography`` 1.4.\n* Added support for the :class:`~cryptography.x509.PolicyConstraints`\n  X.509 extension including both parsing and generation using\n  :class:`~cryptography.x509.CertificateBuilder` and\n  :class:`~cryptography.x509.CertificateSigningRequestBuilder`.\n* Added :attr:`~cryptography.x509.CertificateSigningRequest.is_signature_valid`\n  to :class:`~cryptography.x509.CertificateSigningRequest`.\n* Fixed an intermittent ``AssertionError`` when performing an RSA decryption on\n  an invalid ciphertext, ``ValueError`` is now correctly raised in all cases.\n* Added\n  :meth:`~cryptography.x509.AuthorityKeyIdentifier.from_issuer_subject_key_identifier`.\n\n\n.. _v1-2-3:\n\n1.2.3 - 2016-03-01\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows and OS X wheels to be compiled against OpenSSL 1.0.2g.\n\n\n.. _v1-2-2:\n\n1.2.2 - 2016-01-29\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows and OS X wheels to be compiled against OpenSSL 1.0.2f.\n\n\n.. _v1-2-1:\n\n1.2.1 - 2016-01-08\n~~~~~~~~~~~~~~~~~~\n\n* Reverts a change to an OpenSSL ``EVP_PKEY`` object that caused errors with\n  ``pyOpenSSL``.\n\n\n.. _v1-2:\n\n1.2 - 2016-01-08\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:**\n  :class:`~cryptography.x509.RevokedCertificate`\n  :attr:`~cryptography.x509.RevokedCertificate.extensions` now uses extension\n  classes rather than returning raw values inside the\n  :class:`~cryptography.x509.Extension`\n  :attr:`~cryptography.x509.Extension.value`. The new classes\n  are:\n\n  * :class:`~cryptography.x509.CertificateIssuer`\n  * :class:`~cryptography.x509.CRLReason`\n  * :class:`~cryptography.x509.InvalidityDate`\n* Deprecated support for OpenSSL 0.9.8 and 1.0.0. At this time there is no time\n  table for actually dropping support, however we strongly encourage all users\n  to upgrade, as those versions no longer receive support from the OpenSSL\n  project.\n* The :class:`~cryptography.x509.Certificate` class now has\n  :attr:`~cryptography.x509.Certificate.signature` and\n  :attr:`~cryptography.x509.Certificate.tbs_certificate_bytes` attributes.\n* The :class:`~cryptography.x509.CertificateSigningRequest` class now has\n  :attr:`~cryptography.x509.CertificateSigningRequest.signature` and\n  :attr:`~cryptography.x509.CertificateSigningRequest.tbs_certrequest_bytes`\n  attributes.\n* The :class:`~cryptography.x509.CertificateRevocationList` class now has\n  :attr:`~cryptography.x509.CertificateRevocationList.signature` and\n  :attr:`~cryptography.x509.CertificateRevocationList.tbs_certlist_bytes`\n  attributes.\n* :class:`~cryptography.x509.NameConstraints` are now supported in the\n  :class:`~cryptography.x509.CertificateBuilder` and\n  :class:`~cryptography.x509.CertificateSigningRequestBuilder`.\n* Support serialization of certificate revocation lists using the\n  :meth:`~cryptography.x509.CertificateRevocationList.public_bytes` method of\n  :class:`~cryptography.x509.CertificateRevocationList`.\n* Add support for parsing :class:`~cryptography.x509.CertificateRevocationList`\n  :meth:`~cryptography.x509.CertificateRevocationList.extensions` in the\n  OpenSSL backend. The following extensions are currently supported:\n\n  * :class:`~cryptography.x509.AuthorityInformationAccess`\n  * :class:`~cryptography.x509.AuthorityKeyIdentifier`\n  * :class:`~cryptography.x509.CRLNumber`\n  * :class:`~cryptography.x509.IssuerAlternativeName`\n* Added :class:`~cryptography.x509.CertificateRevocationListBuilder` and\n  :class:`~cryptography.x509.RevokedCertificateBuilder` to allow creation of\n  CRLs.\n* Unrecognized non-critical X.509 extensions are now parsed into an\n  :class:`~cryptography.x509.UnrecognizedExtension` object.\n\n\n.. _v1-1-2:\n\n1.1.2 - 2015-12-10\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a SIGBUS crash with the OS X wheels caused by redefinition of a\n  method.\n* Fixed a runtime error ``undefined symbol EC_GFp_nistp224_method`` that\n  occurred with some OpenSSL installations.\n* Updated Windows and OS X wheels to be compiled against OpenSSL 1.0.2e.\n\n\n.. _v1-1-1:\n\n1.1.1 - 2015-11-19\n~~~~~~~~~~~~~~~~~~\n\n* Fixed several small bugs related to compiling the OpenSSL bindings with\n  unusual OpenSSL configurations.\n* Resolved an issue where, depending on the method of installation and\n  which Python interpreter they were using, users on El Capitan (OS X 10.11)\n  may have seen an ``InternalError`` on import.\n\n\n.. _v1-1:\n\n1.1 - 2015-10-28\n~~~~~~~~~~~~~~~~\n\n* Added support for Elliptic Curve Diffie-Hellman with\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.ECDH`.\n* Added :class:`~cryptography.hazmat.primitives.kdf.x963kdf.X963KDF`.\n* Added support for parsing certificate revocation lists (CRLs) using\n  :func:`~cryptography.x509.load_pem_x509_crl` and\n  :func:`~cryptography.x509.load_der_x509_crl`.\n* Add support for AES key wrapping with\n  :func:`~cryptography.hazmat.primitives.keywrap.aes_key_wrap` and\n  :func:`~cryptography.hazmat.primitives.keywrap.aes_key_unwrap`.\n* Added a ``__hash__`` method to :class:`~cryptography.x509.Name`.\n* Add support for encoding and decoding elliptic curve points to a byte string\n  form using\n  ``cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers.encode_point``\n  and\n  ``cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers.from_encoded_point``.\n* Added :meth:`~cryptography.x509.Extensions.get_extension_for_class`.\n* :class:`~cryptography.x509.CertificatePolicies` are now supported in the\n  :class:`~cryptography.x509.CertificateBuilder`.\n* ``countryName`` is now encoded as a ``PrintableString`` when creating subject\n  and issuer distinguished names with the Certificate and CSR builder classes.\n\n\n.. _v1-0-2:\n\n1.0.2 - 2015-09-27\n~~~~~~~~~~~~~~~~~~\n* **SECURITY ISSUE**: The OpenSSL backend prior to 1.0.2 made extensive use\n  of assertions to check response codes where our tests could not trigger a\n  failure.  However, when Python is run with ``-O`` these asserts are optimized\n  away.  If a user ran Python with this flag and got an invalid response code\n  this could result in undefined behavior or worse. Accordingly, all response\n  checks from the OpenSSL backend have been converted from ``assert``\n  to a true function call. Credit **Emilia Käsper (Google Security Team)**\n  for the report.\n\n\n.. _v1-0-1:\n\n1.0.1 - 2015-09-05\n~~~~~~~~~~~~~~~~~~\n\n* We now ship OS X wheels that statically link OpenSSL by default. When\n  installing a wheel on OS X 10.10+ (and using a Python compiled against the\n  10.10 SDK) users will no longer need to compile. See :doc:`/installation` for\n  alternate installation methods if required.\n* Set the default string mask to UTF-8 in the OpenSSL backend to resolve\n  character encoding issues with older versions of OpenSSL.\n* Several new OpenSSL bindings have been added to support a future pyOpenSSL\n  release.\n* Raise an error during install on PyPy < 2.6. 1.0+ requires PyPy 2.6+.\n\n\n.. _v1-0:\n\n1.0 - 2015-08-12\n~~~~~~~~~~~~~~~~\n\n* Switched to the new `cffi`_ ``set_source`` out-of-line API mode for\n  compilation. This results in significantly faster imports and lowered\n  memory consumption. Due to this change we no longer support PyPy releases\n  older than 2.6 nor do we support any released version of PyPy3 (until a\n  version supporting cffi 1.0 comes out).\n* Fix parsing of OpenSSH public keys that have spaces in comments.\n* Support serialization of certificate signing requests using the\n  ``public_bytes`` method of\n  :class:`~cryptography.x509.CertificateSigningRequest`.\n* Support serialization of certificates using the ``public_bytes`` method of\n  :class:`~cryptography.x509.Certificate`.\n* Add ``get_provisioning_uri`` method to\n  :class:`~cryptography.hazmat.primitives.twofactor.hotp.HOTP` and\n  :class:`~cryptography.hazmat.primitives.twofactor.totp.TOTP` for generating\n  provisioning URIs.\n* Add :class:`~cryptography.hazmat.primitives.kdf.concatkdf.ConcatKDFHash`\n  and :class:`~cryptography.hazmat.primitives.kdf.concatkdf.ConcatKDFHMAC`.\n* Raise a ``TypeError`` when passing objects that are not text as the value to\n  :class:`~cryptography.x509.NameAttribute`.\n* Add support for :class:`~cryptography.x509.OtherName` as a general name\n  type.\n* Added new X.509 extension support in :class:`~cryptography.x509.Certificate`\n  The following new extensions are now supported:\n\n  * :class:`~cryptography.x509.OCSPNoCheck`\n  * :class:`~cryptography.x509.InhibitAnyPolicy`\n  * :class:`~cryptography.x509.IssuerAlternativeName`\n  * :class:`~cryptography.x509.NameConstraints`\n\n* Extension support was added to\n  :class:`~cryptography.x509.CertificateSigningRequest`.\n* Add support for creating signed certificates with\n  :class:`~cryptography.x509.CertificateBuilder`. This includes support for\n  the following extensions:\n\n  * :class:`~cryptography.x509.BasicConstraints`\n  * :class:`~cryptography.x509.SubjectAlternativeName`\n  * :class:`~cryptography.x509.KeyUsage`\n  * :class:`~cryptography.x509.ExtendedKeyUsage`\n  * :class:`~cryptography.x509.SubjectKeyIdentifier`\n  * :class:`~cryptography.x509.AuthorityKeyIdentifier`\n  * :class:`~cryptography.x509.AuthorityInformationAccess`\n  * :class:`~cryptography.x509.CRLDistributionPoints`\n  * :class:`~cryptography.x509.InhibitAnyPolicy`\n  * :class:`~cryptography.x509.IssuerAlternativeName`\n  * :class:`~cryptography.x509.OCSPNoCheck`\n\n* Add support for creating certificate signing requests with\n  :class:`~cryptography.x509.CertificateSigningRequestBuilder`. This includes\n  support for the same extensions supported in the ``CertificateBuilder``.\n* Deprecate ``encode_rfc6979_signature`` and ``decode_rfc6979_signature`` in\n  favor of\n  :func:`~cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature`\n  and\n  :func:`~cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature`.\n\n\n\n.. _v0-9-3:\n\n0.9.3 - 2015-07-09\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows wheels to be compiled against OpenSSL 1.0.2d.\n\n\n.. _v0-9-2:\n\n0.9.2 - 2015-07-04\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows wheels to be compiled against OpenSSL 1.0.2c.\n\n\n.. _v0-9-1:\n\n0.9.1 - 2015-06-06\n~~~~~~~~~~~~~~~~~~\n\n* **SECURITY ISSUE**: Fixed a double free in the OpenSSL backend when using DSA\n  to verify signatures. Note that this only affects PyPy 2.6.0 and (presently\n  unreleased) CFFI versions greater than 1.1.0.\n\n\n.. _v0-9:\n\n0.9 - 2015-05-13\n~~~~~~~~~~~~~~~~\n\n* Removed support for Python 3.2. This version of Python is rarely used\n  and caused support headaches. Users affected by this should upgrade to 3.3+.\n* Deprecated support for Python 2.6. At the time there is no time table for\n  actually dropping support, however we strongly encourage all users to upgrade\n  their Python, as Python 2.6 no longer receives support from the Python core\n  team.\n* Add support for the\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.SECP256K1` elliptic\n  curve.\n* Fixed compilation when using an OpenSSL which was compiled with the\n  ``no-comp`` (``OPENSSL_NO_COMP``) option.\n* Support :attr:`~cryptography.hazmat.primitives.serialization.Encoding.DER`\n  serialization of public keys using the ``public_bytes`` method of\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey`,\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey`,\n  and\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey`.\n* Support :attr:`~cryptography.hazmat.primitives.serialization.Encoding.DER`\n  serialization of private keys using the ``private_bytes`` method of\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey`,\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey`,\n  and\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey`.\n* Add support for parsing X.509 certificate signing requests (CSRs) with\n  :func:`~cryptography.x509.load_pem_x509_csr` and\n  :func:`~cryptography.x509.load_der_x509_csr`.\n* Moved ``cryptography.exceptions.InvalidToken`` to\n  :class:`cryptography.hazmat.primitives.twofactor.InvalidToken` and deprecated\n  the old location. This was moved to minimize confusion between this exception\n  and :class:`cryptography.fernet.InvalidToken`.\n* Added support for X.509 extensions in :class:`~cryptography.x509.Certificate`\n  objects. The following extensions are supported as of this release:\n\n  * :class:`~cryptography.x509.BasicConstraints`\n  * :class:`~cryptography.x509.AuthorityKeyIdentifier`\n  * :class:`~cryptography.x509.SubjectKeyIdentifier`\n  * :class:`~cryptography.x509.KeyUsage`\n  * :class:`~cryptography.x509.SubjectAlternativeName`\n  * :class:`~cryptography.x509.ExtendedKeyUsage`\n  * :class:`~cryptography.x509.CRLDistributionPoints`\n  * :class:`~cryptography.x509.AuthorityInformationAccess`\n  * :class:`~cryptography.x509.CertificatePolicies`\n\n  Note that unsupported extensions with the critical flag raise\n  ``UnsupportedExtension`` while unsupported extensions set to non-critical are\n  silently ignored. Read the :doc:`X.509 documentation</x509/index>` for more\n  information.\n\n\n.. _v0-8-2:\n\n0.8.2 - 2015-04-10\n~~~~~~~~~~~~~~~~~~\n\n* Fixed a race condition when initializing the OpenSSL or CommonCrypto backends\n  in a multi-threaded scenario.\n\n\n.. _v0-8-1:\n\n0.8.1 - 2015-03-20\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows wheels to be compiled against OpenSSL 1.0.2a.\n\n\n.. _v0-8:\n\n0.8 - 2015-03-08\n~~~~~~~~~~~~~~~~\n\n* :func:`~cryptography.hazmat.primitives.serialization.load_ssh_public_key` can\n  now load elliptic curve public keys.\n* Added\n  :attr:`~cryptography.x509.Certificate.signature_hash_algorithm` support to\n  :class:`~cryptography.x509.Certificate`.\n* Added\n  :func:`~cryptography.hazmat.primitives.asymmetric.rsa.rsa_recover_prime_factors`\n* :class:`~cryptography.hazmat.primitives.kdf.KeyDerivationFunction` was moved\n  from ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.kdf`.\n* Added support for parsing X.509 names. See the\n  :doc:`X.509 documentation</x509/index>` for more information.\n* Added\n  :func:`~cryptography.hazmat.primitives.serialization.load_der_private_key` to\n  support loading of DER encoded private keys and\n  :func:`~cryptography.hazmat.primitives.serialization.load_der_public_key` to\n  support loading DER encoded public keys.\n* Fixed building against LibreSSL, a compile-time substitute for OpenSSL.\n* FreeBSD 9.2 was removed from the continuous integration system.\n* Updated Windows wheels to be compiled against OpenSSL 1.0.2.\n* :func:`~cryptography.hazmat.primitives.serialization.load_pem_public_key`\n  and :func:`~cryptography.hazmat.primitives.serialization.load_der_public_key`\n  now support PKCS1 RSA public keys (in addition to the previous support for\n  SubjectPublicKeyInfo format for RSA, EC, and DSA).\n* Added ``EllipticCurvePrivateKeyWithSerialization`` and deprecated\n  ``EllipticCurvePrivateKeyWithNumbers``.\n* Added\n  :meth:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey.private_bytes`\n  to\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey`.\n* Added ``RSAPrivateKeyWithSerialization`` and deprecated ``RSAPrivateKeyWithNumbers``.\n* Added\n  :meth:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey.private_bytes`\n  to\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey`.\n* Added ``DSAPrivateKeyWithSerialization`` and deprecated ``DSAPrivateKeyWithNumbers``.\n* Added\n  :meth:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey.private_bytes`\n  to\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey`.\n* Added ``RSAPublicKeyWithSerialization`` and deprecated ``RSAPublicKeyWithNumbers``.\n* Added ``public_bytes`` to\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey`.\n* Added ``EllipticCurvePublicKeyWithSerialization`` and deprecated\n  ``EllipticCurvePublicKeyWithNumbers``.\n* Added ``public_bytes`` to\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey`.\n* Added ``DSAPublicKeyWithSerialization`` and deprecated ``DSAPublicKeyWithNumbers``.\n* Added ``public_bytes`` to\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey`.\n* :class:`~cryptography.hazmat.primitives.hashes.HashAlgorithm` and\n  :class:`~cryptography.hazmat.primitives.hashes.HashContext` were moved from\n  ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.hashes`.\n* :class:`~cryptography.hazmat.primitives.ciphers.CipherContext`,\n  :class:`~cryptography.hazmat.primitives.ciphers.AEADCipherContext`,\n  :class:`~cryptography.hazmat.primitives.ciphers.AEADEncryptionContext`,\n  :class:`~cryptography.hazmat.primitives.ciphers.CipherAlgorithm`, and\n  :class:`~cryptography.hazmat.primitives.ciphers.BlockCipherAlgorithm`\n  were moved from ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.ciphers`.\n* :class:`~cryptography.hazmat.primitives.ciphers.modes.Mode`,\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.ModeWithInitializationVector`,\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.ModeWithNonce`, and\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.ModeWithAuthenticationTag`\n  were moved from ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.ciphers.modes`.\n* :class:`~cryptography.hazmat.primitives.padding.PaddingContext` was moved\n  from ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.padding`.\n*\n  :class:`~cryptography.hazmat.primitives.asymmetric.padding.AsymmetricPadding`\n  was moved from ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.asymmetric.padding`.\n* ``AsymmetricSignatureContext`` and ``AsymmetricVerificationContext``\n  were moved from ``cryptography.hazmat.primitives.interfaces`` to\n  ``cryptography.hazmat.primitives.asymmetric``.\n* :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters`,\n  ``DSAParametersWithNumbers``,\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey`,\n  ``DSAPrivateKeyWithNumbers``,\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey` and\n  ``DSAPublicKeyWithNumbers`` were moved from\n  ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.asymmetric.dsa`\n* :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve`,\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurveSignatureAlgorithm`,\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey`,\n  ``EllipticCurvePrivateKeyWithNumbers``,\n  :class:`~cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey`,\n  and ``EllipticCurvePublicKeyWithNumbers``\n  were moved from ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.asymmetric.ec`.\n* :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey`,\n  ``RSAPrivateKeyWithNumbers``,\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey` and\n  ``RSAPublicKeyWithNumbers`` were moved from\n  ``cryptography.hazmat.primitives.interfaces`` to\n  :mod:`~cryptography.hazmat.primitives.asymmetric.rsa`.\n\n\n.. _v0-7-2:\n\n0.7.2 - 2015-01-16\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows wheels to be compiled against OpenSSL 1.0.1l.\n* ``enum34`` is no longer installed on Python 3.4, where it is included in\n  the standard library.\n* Added a new function to the OpenSSL bindings to support additional\n  functionality in pyOpenSSL.\n\n\n.. _v0-7-1:\n\n0.7.1 - 2014-12-28\n~~~~~~~~~~~~~~~~~~\n\n* Fixed an issue preventing compilation on platforms where ``OPENSSL_NO_SSL3``\n  was defined.\n\n\n.. _v0-7:\n\n0.7 - 2014-12-17\n~~~~~~~~~~~~~~~~\n\n* Cryptography has been relicensed from the Apache Software License, Version\n  2.0, to being available under *either* the Apache Software License, Version\n  2.0, or the BSD license.\n* Added key-rotation support to :doc:`Fernet </fernet>` with\n  :class:`~cryptography.fernet.MultiFernet`.\n* More bit-lengths are now supported for ``p`` and ``q`` when loading DSA keys\n  from numbers.\n* Added ``MACContext`` as a common interface for CMAC and HMAC and\n  deprecated ``CMACContext``.\n* Added support for encoding and decoding :rfc:`6979` signatures in\n  :doc:`/hazmat/primitives/asymmetric/utils`.\n* Added\n  :func:`~cryptography.hazmat.primitives.serialization.load_ssh_public_key` to\n  support the loading of OpenSSH public keys (:rfc:`4253`). Only RSA and DSA\n  keys are currently supported.\n* Added initial support for X.509 certificate parsing. See the\n  :doc:`X.509 documentation</x509/index>` for more information.\n\n\n.. _v0-6-1:\n\n0.6.1 - 2014-10-15\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows wheels to be compiled against OpenSSL 1.0.1j.\n* Fixed an issue where OpenSSL 1.0.1j changed the errors returned by some\n  functions.\n* Added our license file to the ``cryptography-vectors`` package.\n* Implemented DSA hash truncation support (per FIPS 186-3) in the OpenSSL\n  backend. This works around an issue in 1.0.0, 1.0.0a, and 1.0.0b where\n  truncation was not implemented.\n\n\n.. _v0-6:\n\n0.6 - 2014-09-29\n~~~~~~~~~~~~~~~~\n\n* Added\n  :func:`~cryptography.hazmat.primitives.serialization.load_pem_private_key` to\n  ease loading private keys, and\n  :func:`~cryptography.hazmat.primitives.serialization.load_pem_public_key` to\n  support loading public keys.\n* Removed the, deprecated in 0.4, support for the ``salt_length`` argument to\n  the :class:`~cryptography.hazmat.primitives.asymmetric.padding.MGF1`\n  constructor. The ``salt_length`` should be passed to\n  :class:`~cryptography.hazmat.primitives.asymmetric.padding.PSS` instead.\n* Fix compilation on OS X Yosemite.\n* Deprecated ``elliptic_curve_private_key_from_numbers`` and\n  ``elliptic_curve_public_key_from_numbers`` in favor of\n  ``load_elliptic_curve_private_numbers`` and\n  ``load_elliptic_curve_public_numbers`` on ``EllipticCurveBackend``.\n* Added ``EllipticCurvePrivateKeyWithNumbers`` and\n  ``EllipticCurvePublicKeyWithNumbers`` support.\n* Work around three GCM related bugs in CommonCrypto and OpenSSL.\n\n  * On the CommonCrypto backend adding AAD but not subsequently calling update\n    would return null tag bytes.\n\n  * One the CommonCrypto backend a call to update without an empty add AAD call\n    would return null ciphertext bytes.\n\n  * On the OpenSSL backend with certain versions adding AAD only would give\n    invalid tag bytes.\n\n* Support loading EC private keys from PEM.\n\n\n.. _v0-5-4:\n\n0.5.4 - 2014-08-20\n~~~~~~~~~~~~~~~~~~\n\n* Added several functions to the OpenSSL bindings to support new\n  functionality in pyOpenSSL.\n* Fixed a redefined constant causing compilation failure with Solaris 11.2.\n\n\n.. _v0-5-3:\n\n0.5.3 - 2014-08-06\n~~~~~~~~~~~~~~~~~~\n\n* Updated Windows wheels to be compiled against OpenSSL 1.0.1i.\n\n\n.. _v0-5-2:\n\n0.5.2 - 2014-07-09\n~~~~~~~~~~~~~~~~~~\n\n* Add ``TraditionalOpenSSLSerializationBackend`` support to ``multibackend``.\n* Fix compilation error on OS X 10.8 (Mountain Lion).\n\n\n.. _v0-5-1:\n\n0.5.1 - 2014-07-07\n~~~~~~~~~~~~~~~~~~\n\n* Add ``PKCS8SerializationBackend`` support to ``multibackend``.\n\n\n.. _v0-5:\n\n0.5 - 2014-07-07\n~~~~~~~~~~~~~~~~\n\n* **BACKWARDS INCOMPATIBLE:**\n  :class:`~cryptography.hazmat.primitives.ciphers.modes.GCM` no longer allows\n  truncation of tags by default. Previous versions of ``cryptography`` allowed\n  tags to be truncated by default, applications wishing to preserve this\n  behavior (not recommended) can pass the ``min_tag_length`` argument.\n* Windows builds now statically link OpenSSL by default. When installing a\n  wheel on Windows you no longer need to install OpenSSL separately. Windows\n  users can switch between static and dynamic linking with an environment\n  variable. See :doc:`/installation` for more details.\n* Added :class:`~cryptography.hazmat.primitives.kdf.hkdf.HKDFExpand`.\n* Added :class:`~cryptography.hazmat.primitives.ciphers.modes.CFB8` support\n  for :class:`~cryptography.hazmat.primitives.ciphers.algorithms.AES` and\n  :class:`~cryptography.hazmat.primitives.ciphers.algorithms.TripleDES` on\n  ``commoncrypto`` and ``openssl``.\n* Added ``AES`` :class:`~cryptography.hazmat.primitives.ciphers.modes.CTR`\n  support to the OpenSSL backend when linked against 0.9.8.\n* Added ``PKCS8SerializationBackend`` and\n  ``TraditionalOpenSSLSerializationBackend`` support to ``openssl``.\n* Added :doc:`/hazmat/primitives/asymmetric/ec` and ``EllipticCurveBackend``.\n* Added :class:`~cryptography.hazmat.primitives.ciphers.modes.ECB` support\n  for :class:`~cryptography.hazmat.primitives.ciphers.algorithms.TripleDES` on\n  ``commoncrypto`` and ``openssl``.\n* Deprecated the concrete ``RSAPrivateKey`` class in favor of backend\n  specific providers of the\n  :class:`cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey`\n  interface.\n* Deprecated the concrete ``RSAPublicKey`` in favor of backend specific\n  providers of the\n  :class:`cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey`\n  interface.\n* Deprecated the concrete ``DSAPrivateKey`` class in favor of backend\n  specific providers of the\n  :class:`cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey`\n  interface.\n* Deprecated the concrete ``DSAPublicKey`` class in favor of backend specific\n  providers of the\n  :class:`cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey`\n  interface.\n* Deprecated the concrete ``DSAParameters`` class in favor of backend specific\n  providers of the\n  :class:`cryptography.hazmat.primitives.asymmetric.dsa.DSAParameters`\n  interface.\n* Deprecated ``encrypt_rsa``, ``decrypt_rsa``, ``create_rsa_signature_ctx`` and\n  ``create_rsa_verification_ctx`` on ``RSABackend``.\n* Deprecated ``create_dsa_signature_ctx`` and ``create_dsa_verification_ctx``\n  on ``DSABackend``.\n\n\n.. _v0-4:\n\n0.4 - 2014-05-03\n~~~~~~~~~~~~~~~~\n\n* Deprecated ``salt_length`` on\n  :class:`~cryptography.hazmat.primitives.asymmetric.padding.MGF1` and added it\n  to :class:`~cryptography.hazmat.primitives.asymmetric.padding.PSS`. It will\n  be removed from ``MGF1`` in two releases per our :doc:`/api-stability`\n  policy.\n* Added :class:`~cryptography.hazmat.primitives.ciphers.algorithms.SEED`\n  support.\n* Added :class:`~cryptography.hazmat.primitives.cmac.CMAC`.\n* Added decryption support to\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey`\n  and encryption support to\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey`.\n* Added signature support to\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPrivateKey`\n  and verification support to\n  :class:`~cryptography.hazmat.primitives.asymmetric.dsa.DSAPublicKey`.\n\n\n.. _v0-3:\n\n0.3 - 2014-03-27\n~~~~~~~~~~~~~~~~\n\n* Added :class:`~cryptography.hazmat.primitives.twofactor.hotp.HOTP`.\n* Added :class:`~cryptography.hazmat.primitives.twofactor.totp.TOTP`.\n* Added :class:`~cryptography.hazmat.primitives.ciphers.algorithms.IDEA`\n  support.\n* Added signature support to\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey`\n  and verification support to\n  :class:`~cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey`.\n* Moved test vectors to the new ``cryptography_vectors`` package.\n\n\n.. _v0-2-2:\n\n0.2.2 - 2014-03-03\n~~~~~~~~~~~~~~~~~~\n\n* Removed a constant definition that was causing compilation problems with\n  specific versions of OpenSSL.\n\n\n.. _v0-2-1:\n\n0.2.1 - 2014-02-22\n~~~~~~~~~~~~~~~~~~\n\n* Fix a bug where importing cryptography from multiple paths could cause\n  initialization to fail.\n\n\n.. _v0-2:\n\n0.2 - 2014-02-20\n~~~~~~~~~~~~~~~~\n\n* Added ``commoncrypto``.\n* Added initial ``commoncrypto``.\n* Removed ``register_cipher_adapter`` method from ``CipherBackend``.\n* Added support for the OpenSSL backend under Windows.\n* Improved thread-safety for the OpenSSL backend.\n* Fixed compilation on systems where OpenSSL's ``ec.h`` header is not\n  available, such as CentOS.\n* Added :class:`~cryptography.hazmat.primitives.kdf.pbkdf2.PBKDF2HMAC`.\n* Added :class:`~cryptography.hazmat.primitives.kdf.hkdf.HKDF`.\n* Added ``multibackend``.\n* Set default random for ``openssl`` to the OS random engine.\n* Added :class:`~cryptography.hazmat.primitives.ciphers.algorithms.CAST5`\n  (CAST-128) support.\n\n\n.. _v0-1:\n\n0.1 - 2014-01-08\n~~~~~~~~~~~~~~~~\n\n* Initial release.\n\n.. _`as documented here`: https://docs.rs/openssl/latest/openssl/#automatic\n.. _`main`: https://github.com/pyca/cryptography/\n.. _`cffi`: https://cffi.readthedocs.io/\n"
        },
        {
          "name": "CONTRIBUTING.rst",
          "type": "blob",
          "size": 0.650390625,
          "content": "Contributing to cryptography\n============================\n\nAs an open source project, cryptography welcomes contributions of many forms.\n\nExamples of contributions include:\n\n* Code patches\n* Documentation improvements\n* Bug reports and patch reviews\n\nExtensive contribution guidelines are available in the repository at\n``docs/development/index.rst``, or online at:\n\nhttps://cryptography.io/en/latest/development/\n\nSecurity issues\n---------------\n\nTo report a security issue, please follow the special `security reporting\nguidelines`_, do not report them in the public issue tracker.\n\n.. _`security reporting guidelines`: https://cryptography.io/en/latest/security/\n"
        },
        {
          "name": "Cargo.lock",
          "type": "blob",
          "size": 8.8115234375,
          "content": "# This file is automatically @generated by Cargo.\n# It is not intended for manual editing.\nversion = 3\n\n[[package]]\nname = \"asn1\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2d8b84b4ea1de2bf1dcd2a759737ddb328fb6695b2a95eb7e44fed67e3406f32\"\ndependencies = [\n \"asn1_derive\",\n \"itoa\",\n]\n\n[[package]]\nname = \"asn1_derive\"\nversion = \"0.20.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a200809d0138620b3dba989f1d08d0620e76248bc1e62a2ec1b2df5eb1ee08ad\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"autocfg\"\nversion = \"1.4.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"ace50bade8e6234aa140d9a2f552bbee1db4d353f69b8217bc503490fc1a9f26\"\n\n[[package]]\nname = \"base64\"\nversion = \"0.22.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"72b3254f16251a8381aa12e40e3c4d2f0199f8c6508fbecb9d91f575e0fbb8c6\"\n\n[[package]]\nname = \"bitflags\"\nversion = \"2.7.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1be3f42a67d6d345ecd59f675f3f012d6974981560836e938c22b424b85ce1be\"\n\n[[package]]\nname = \"cc\"\nversion = \"1.2.7\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a012a0df96dd6d06ba9a1b29d6402d1a5d77c6befd2566afdc26e10603dc93d7\"\ndependencies = [\n \"shlex\",\n]\n\n[[package]]\nname = \"cfg-if\"\nversion = \"1.0.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n\n[[package]]\nname = \"cryptography-cffi\"\nversion = \"0.1.0\"\ndependencies = [\n \"cc\",\n \"openssl-sys\",\n \"pyo3\",\n]\n\n[[package]]\nname = \"cryptography-keepalive\"\nversion = \"0.1.0\"\ndependencies = [\n \"pyo3\",\n]\n\n[[package]]\nname = \"cryptography-key-parsing\"\nversion = \"0.1.0\"\ndependencies = [\n \"asn1\",\n \"cfg-if\",\n \"cryptography-x509\",\n \"openssl\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"cryptography-openssl\"\nversion = \"0.1.0\"\ndependencies = [\n \"cfg-if\",\n \"foreign-types\",\n \"foreign-types-shared\",\n \"openssl\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"cryptography-rust\"\nversion = \"0.1.0\"\ndependencies = [\n \"asn1\",\n \"cfg-if\",\n \"cryptography-cffi\",\n \"cryptography-keepalive\",\n \"cryptography-key-parsing\",\n \"cryptography-openssl\",\n \"cryptography-x509\",\n \"cryptography-x509-verification\",\n \"foreign-types-shared\",\n \"once_cell\",\n \"openssl\",\n \"openssl-sys\",\n \"pem\",\n \"pyo3\",\n \"self_cell\",\n]\n\n[[package]]\nname = \"cryptography-x509\"\nversion = \"0.1.0\"\ndependencies = [\n \"asn1\",\n]\n\n[[package]]\nname = \"cryptography-x509-verification\"\nversion = \"0.1.0\"\ndependencies = [\n \"asn1\",\n \"cryptography-key-parsing\",\n \"cryptography-x509\",\n \"once_cell\",\n \"pem\",\n]\n\n[[package]]\nname = \"foreign-types\"\nversion = \"0.3.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"f6f339eb8adc052cd2ca78910fda869aefa38d22d5cb648e6485e4d3fc06f3b1\"\ndependencies = [\n \"foreign-types-shared\",\n]\n\n[[package]]\nname = \"foreign-types-shared\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"00b0228411908ca8685dba7fc2cdd70ec9990a6e753e89b6ac91a84c40fbaf4b\"\n\n[[package]]\nname = \"heck\"\nversion = \"0.5.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"2304e00983f87ffb38b55b444b5e3b60a884b5d30c0fca7d82fe33449bbe55ea\"\n\n[[package]]\nname = \"indoc\"\nversion = \"2.0.5\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b248f5224d1d606005e02c97f5aa4e88eeb230488bcc03bc9ca4d7991399f2b5\"\n\n[[package]]\nname = \"itoa\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d75a2a4b1b190afb6f5425f10f6a8f959d2ea0b9c2b1d79553551850539e4674\"\n\n[[package]]\nname = \"libc\"\nversion = \"0.2.169\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"b5aba8db14291edd000dfcc4d620c7ebfb122c613afb886ca8803fa4e128a20a\"\n\n[[package]]\nname = \"memoffset\"\nversion = \"0.9.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"488016bfae457b036d996092f6cb448677611ce4449e970ceaf42695203f218a\"\ndependencies = [\n \"autocfg\",\n]\n\n[[package]]\nname = \"once_cell\"\nversion = \"1.20.2\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"1261fe7e33c73b354eab43b1273a57c8f967d0391e80353e51f764ac02cf6775\"\n\n[[package]]\nname = \"openssl\"\nversion = \"0.10.68\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"6174bc48f102d208783c2c84bf931bb75927a617866870de8a4ea85597f871f5\"\ndependencies = [\n \"bitflags\",\n \"cfg-if\",\n \"foreign-types\",\n \"libc\",\n \"once_cell\",\n \"openssl-macros\",\n \"openssl-sys\",\n]\n\n[[package]]\nname = \"openssl-macros\"\nversion = \"0.1.1\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"a948666b637a0f465e8564c73e89d4dde00d72d4d473cc972f390fc3dcee7d9c\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"openssl-sys\"\nversion = \"0.9.104\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"45abf306cbf99debc8195b66b7346498d7b10c210de50418b5ccd7ceba08c741\"\ndependencies = [\n \"cc\",\n \"libc\",\n \"pkg-config\",\n \"vcpkg\",\n]\n\n[[package]]\nname = \"pem\"\nversion = \"3.0.4\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"8e459365e590736a54c3fa561947c84837534b8e9af6fc5bf781307e82658fae\"\ndependencies = [\n \"base64\",\n]\n\n[[package]]\nname = \"pkg-config\"\nversion = \"0.3.31\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"953ec861398dccce10c670dfeaf3ec4911ca479e9c02154b3a215178c5f566f2\"\n\n[[package]]\nname = \"portable-atomic\"\nversion = \"1.10.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"280dc24453071f1b63954171985a0b0d30058d287960968b9b2aca264c8d4ee6\"\n\n[[package]]\nname = \"proc-macro2\"\nversion = \"1.0.92\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"37d3544b3f2748c54e147655edb5025752e2303145b5aefb3c3ea2c78b973bb0\"\ndependencies = [\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"pyo3\"\nversion = \"0.23.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"e484fd2c8b4cb67ab05a318f1fd6fa8f199fcc30819f08f07d200809dba26c15\"\ndependencies = [\n \"cfg-if\",\n \"indoc\",\n \"libc\",\n \"memoffset\",\n \"once_cell\",\n \"portable-atomic\",\n \"pyo3-build-config\",\n \"pyo3-ffi\",\n \"pyo3-macros\",\n \"unindent\",\n]\n\n[[package]]\nname = \"pyo3-build-config\"\nversion = \"0.23.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"dc0e0469a84f208e20044b98965e1561028180219e35352a2afaf2b942beff3b\"\ndependencies = [\n \"once_cell\",\n \"target-lexicon\",\n]\n\n[[package]]\nname = \"pyo3-ffi\"\nversion = \"0.23.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"eb1547a7f9966f6f1a0f0227564a9945fe36b90da5a93b3933fc3dc03fae372d\"\ndependencies = [\n \"libc\",\n \"pyo3-build-config\",\n]\n\n[[package]]\nname = \"pyo3-macros\"\nversion = \"0.23.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"fdb6da8ec6fa5cedd1626c886fc8749bdcbb09424a86461eb8cdf096b7c33257\"\ndependencies = [\n \"proc-macro2\",\n \"pyo3-macros-backend\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"pyo3-macros-backend\"\nversion = \"0.23.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"38a385202ff5a92791168b1136afae5059d3ac118457bb7bc304c197c2d33e7d\"\ndependencies = [\n \"heck\",\n \"proc-macro2\",\n \"pyo3-build-config\",\n \"quote\",\n \"syn\",\n]\n\n[[package]]\nname = \"quote\"\nversion = \"1.0.38\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0e4dccaaaf89514f546c693ddc140f729f958c247918a13380cccc6078391acc\"\ndependencies = [\n \"proc-macro2\",\n]\n\n[[package]]\nname = \"self_cell\"\nversion = \"1.1.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c2fdfc24bc566f839a2da4c4295b82db7d25a24253867d5c64355abb5799bdbe\"\n\n[[package]]\nname = \"shlex\"\nversion = \"1.3.0\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"0fda2ff0d084019ba4d7c6f371c95d8fd75ce3524c3cb8fb653a3023f6323e64\"\n\n[[package]]\nname = \"syn\"\nversion = \"2.0.96\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"d5d0adab1ae378d7f53bdebc67a39f1f151407ef230f0ce2883572f5d8985c80\"\ndependencies = [\n \"proc-macro2\",\n \"quote\",\n \"unicode-ident\",\n]\n\n[[package]]\nname = \"target-lexicon\"\nversion = \"0.12.16\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"61c41af27dd6d1e27b1b16b489db798443478cef1f06a660c96db617ba5de3b1\"\n\n[[package]]\nname = \"unicode-ident\"\nversion = \"1.0.14\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"adb9e6ca4f869e1180728b7950e35922a7fc6397f7b641499e8f3ef06e50dc83\"\n\n[[package]]\nname = \"unindent\"\nversion = \"0.2.3\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"c7de7d73e1754487cb58364ee906a499937a0dfabd86bcb980fa99ec8c8fa2ce\"\n\n[[package]]\nname = \"vcpkg\"\nversion = \"0.2.15\"\nsource = \"registry+https://github.com/rust-lang/crates.io-index\"\nchecksum = \"accd4ea62f7bb7a82fe23066fb0957d48ef677f6eeb8215f372f52e48bb32426\"\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.6435546875,
          "content": "[workspace]\nresolver = \"2\"\nmembers = [\n    \"src/rust/\",\n    \"src/rust/cryptography-cffi\",\n    \"src/rust/cryptography-keepalive\",\n    \"src/rust/cryptography-key-parsing\",\n    \"src/rust/cryptography-openssl\",\n    \"src/rust/cryptography-x509\",\n    \"src/rust/cryptography-x509-verification\",\n]\n\n[workspace.package]\nversion = \"0.1.0\"\nauthors = [\"The cryptography developers <cryptography-dev@python.org>\"]\nedition = \"2021\"\npublish = false\n# This specifies the MSRV\nrust-version = \"1.65.0\"\n\n[workspace.dependencies]\nasn1 = { version = \"0.20.0\", default-features = false }\npyo3 = { version = \"0.23.3\", features = [\"abi3\"] }\n\n[profile.release]\noverflow-checks = true\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.1923828125,
          "content": "This software is made available under the terms of *either* of the licenses\nfound in LICENSE.APACHE or LICENSE.BSD. Contributions to cryptography are made\nunder the terms of *both* these licenses.\n"
        },
        {
          "name": "LICENSE.APACHE",
          "type": "blob",
          "size": 11.09375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE.BSD",
          "type": "blob",
          "size": 1.49609375,
          "content": "Copyright (c) Individual contributors.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice,\n       this list of conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    3. Neither the name of PyCA Cryptography nor the names of its contributors\n       may be used to endorse or promote products derived from this software\n       without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.1962890625,
          "content": "pyca/cryptography\n=================\n\n.. image:: https://img.shields.io/pypi/v/cryptography.svg\n    :target: https://pypi.org/project/cryptography/\n    :alt: Latest Version\n\n.. image:: https://readthedocs.org/projects/cryptography/badge/?version=latest\n    :target: https://cryptography.io\n    :alt: Latest Docs\n\n.. image:: https://github.com/pyca/cryptography/workflows/CI/badge.svg?branch=main\n    :target: https://github.com/pyca/cryptography/actions?query=workflow%3ACI+branch%3Amain\n\n\n``cryptography`` is a package which provides cryptographic recipes and\nprimitives to Python developers. Our goal is for it to be your \"cryptographic\nstandard library\". It supports Python 3.7+ and PyPy3 7.3.11+.\n\n``cryptography`` includes both high level recipes and low level interfaces to\ncommon cryptographic algorithms such as symmetric ciphers, message digests, and\nkey derivation functions. For example, to encrypt something with\n``cryptography``'s high level symmetric encryption recipe:\n\n.. code-block:: pycon\n\n    >>> from cryptography.fernet import Fernet\n    >>> # Put this somewhere safe!\n    >>> key = Fernet.generate_key()\n    >>> f = Fernet(key)\n    >>> token = f.encrypt(b\"A really secret message. Not for prying eyes.\")\n    >>> token\n    b'...'\n    >>> f.decrypt(token)\n    b'A really secret message. Not for prying eyes.'\n\nYou can find more information in the `documentation`_.\n\nYou can install ``cryptography`` with:\n\n.. code-block:: console\n\n    $ pip install cryptography\n\nFor full details see `the installation documentation`_.\n\nDiscussion\n~~~~~~~~~~\n\nIf you run into bugs, you can file them in our `issue tracker`_.\n\nWe maintain a `cryptography-dev`_ mailing list for development discussion.\n\nYou can also join ``#pyca`` on ``irc.libera.chat`` to ask questions or get\ninvolved.\n\nSecurity\n~~~~~~~~\n\nNeed to report a security issue? Please consult our `security reporting`_\ndocumentation.\n\n\n.. _`documentation`: https://cryptography.io/\n.. _`the installation documentation`: https://cryptography.io/en/latest/installation/\n.. _`issue tracker`: https://github.com/pyca/cryptography/issues\n.. _`cryptography-dev`: https://mail.python.org/mailman/listinfo/cryptography-dev\n.. _`security reporting`: https://cryptography.io/en/latest/security/\n"
        },
        {
          "name": "ci-constraints-requirements.txt",
          "type": "blob",
          "size": 9.900390625,
          "content": "# This file was autogenerated by uv via the following command:\n#    uv pip compile --universal -p 3.7 --all-extras --unsafe-package=cffi --unsafe-package=pycparser --unsafe-package=setuptools --unsafe-package=cryptography-vectors --unsafe-package=bcrypt pyproject.toml\nalabaster==0.7.13 ; python_full_version < '3.9'\n    # via sphinx\nalabaster==0.7.16 ; python_full_version == '3.9.*'\n    # via sphinx\nalabaster==1.0.0 ; python_full_version >= '3.10'\n    # via sphinx\nargcomplete==3.1.2 ; python_full_version < '3.8'\n    # via nox\nargcomplete==3.5.3 ; python_full_version >= '3.8'\n    # via nox\nbabel==2.14.0 ; python_full_version < '3.8'\n    # via sphinx\nbabel==2.16.0 ; python_full_version >= '3.8'\n    # via sphinx\nbleach==6.0.0 ; python_full_version < '3.8'\n    # via readme-renderer\nbuild==1.1.1 ; python_full_version < '3.8'\n    # via cryptography (pyproject.toml)\nbuild==1.2.2.post1 ; python_full_version >= '3.8'\n    # via\n    #   cryptography (pyproject.toml)\n    #   check-sdist\ncertifi==2024.12.14\n    # via\n    #   cryptography (pyproject.toml)\n    #   requests\ncharset-normalizer==3.4.1\n    # via requests\ncheck-sdist==1.2.0 ; python_full_version >= '3.8'\n    # via cryptography (pyproject.toml)\nclick==8.1.8\n    # via cryptography (pyproject.toml)\ncolorama==0.4.6 ; os_name == 'nt' or sys_platform == 'win32'\n    # via\n    #   build\n    #   click\n    #   colorlog\n    #   pytest\n    #   sphinx\ncolorlog==6.9.0\n    # via nox\ncoverage==7.2.7 ; python_full_version < '3.8'\n    # via pytest-cov\ncoverage==7.6.1 ; python_full_version == '3.8.*'\n    # via pytest-cov\ncoverage==7.6.10 ; python_full_version >= '3.9'\n    # via pytest-cov\ndistlib==0.3.9\n    # via virtualenv\ndocutils==0.19 ; python_full_version < '3.8'\n    # via\n    #   readme-renderer\n    #   sphinx\ndocutils==0.20.1 ; python_full_version == '3.8.*'\n    # via\n    #   readme-renderer\n    #   sphinx\n    #   sphinx-rtd-theme\ndocutils==0.21.2 ; python_full_version >= '3.9'\n    # via\n    #   readme-renderer\n    #   sphinx\n    #   sphinx-rtd-theme\nexceptiongroup==1.2.2 ; python_full_version < '3.11'\n    # via pytest\nexecnet==2.0.2 ; python_full_version < '3.8'\n    # via pytest-xdist\nexecnet==2.1.1 ; python_full_version >= '3.8'\n    # via pytest-xdist\nfilelock==3.12.2 ; python_full_version < '3.8'\n    # via virtualenv\nfilelock==3.16.1 ; python_full_version >= '3.8'\n    # via virtualenv\nidna==3.10\n    # via requests\nimagesize==1.4.1\n    # via sphinx\nimportlib-metadata==6.7.0 ; python_full_version < '3.8'\n    # via\n    #   argcomplete\n    #   build\n    #   click\n    #   nox\n    #   pluggy\n    #   pytest\n    #   pytest-randomly\n    #   sphinx\n    #   sphinxcontrib-spelling\n    #   virtualenv\nimportlib-metadata==8.5.0 ; python_full_version >= '3.8' and python_full_version < '3.10.2'\n    # via\n    #   build\n    #   pytest-randomly\n    #   sphinx\nimportlib-resources==6.4.5 ; python_full_version == '3.8.*'\n    # via check-sdist\niniconfig==2.0.0\n    # via pytest\njinja2==3.1.5\n    # via sphinx\nmarkupsafe==2.1.5 ; python_full_version < '3.9'\n    # via jinja2\nmarkupsafe==3.0.2 ; python_full_version >= '3.9'\n    # via jinja2\nmypy==1.4.1 ; python_full_version < '3.8'\n    # via cryptography (pyproject.toml)\nmypy==1.14.1 ; python_full_version >= '3.8'\n    # via cryptography (pyproject.toml)\nmypy-extensions==1.0.0\n    # via mypy\nnh3==0.2.20 ; python_full_version >= '3.8'\n    # via readme-renderer\nnox==2024.4.15 ; python_full_version < '3.8'\n    # via cryptography (pyproject.toml)\nnox==2024.10.9 ; python_full_version >= '3.8'\n    # via cryptography (pyproject.toml)\npackaging==24.0 ; python_full_version < '3.8'\n    # via\n    #   build\n    #   nox\n    #   pytest\n    #   sphinx\npackaging==24.2 ; python_full_version >= '3.8'\n    # via\n    #   build\n    #   nox\n    #   pytest\n    #   sphinx\npathspec==0.12.1 ; python_full_version >= '3.8'\n    # via check-sdist\nplatformdirs==4.0.0 ; python_full_version < '3.8'\n    # via virtualenv\nplatformdirs==4.3.6 ; python_full_version >= '3.8'\n    # via virtualenv\npluggy==1.2.0 ; python_full_version < '3.8'\n    # via pytest\npluggy==1.5.0 ; python_full_version >= '3.8'\n    # via pytest\npretend==1.0.9\n    # via cryptography (pyproject.toml)\npy-cpuinfo==9.0.0\n    # via pytest-benchmark\npyenchant==3.2.2\n    # via\n    #   cryptography (pyproject.toml)\n    #   sphinxcontrib-spelling\npygments==2.17.2 ; python_full_version < '3.8'\n    # via\n    #   readme-renderer\n    #   sphinx\npygments==2.19.1 ; python_full_version >= '3.8'\n    # via\n    #   readme-renderer\n    #   sphinx\npyproject-hooks==1.2.0\n    # via build\npytest==7.4.4 ; python_full_version < '3.8'\n    # via\n    #   cryptography (pyproject.toml)\n    #   pytest-benchmark\n    #   pytest-cov\n    #   pytest-randomly\n    #   pytest-xdist\npytest==8.3.4 ; python_full_version >= '3.8'\n    # via\n    #   cryptography (pyproject.toml)\n    #   pytest-benchmark\n    #   pytest-cov\n    #   pytest-randomly\n    #   pytest-xdist\npytest-benchmark==4.0.0 ; python_full_version < '3.9'\n    # via cryptography (pyproject.toml)\npytest-benchmark==5.1.0 ; python_full_version >= '3.9'\n    # via cryptography (pyproject.toml)\npytest-cov==4.1.0 ; python_full_version < '3.8'\n    # via cryptography (pyproject.toml)\npytest-cov==5.0.0 ; python_full_version == '3.8.*'\n    # via cryptography (pyproject.toml)\npytest-cov==6.0.0 ; python_full_version >= '3.9'\n    # via cryptography (pyproject.toml)\npytest-randomly==3.12.0 ; python_full_version < '3.8'\n    # via cryptography (pyproject.toml)\npytest-randomly==3.15.0 ; python_full_version == '3.8.*'\n    # via cryptography (pyproject.toml)\npytest-randomly==3.16.0 ; python_full_version >= '3.9'\n    # via cryptography (pyproject.toml)\npytest-xdist==3.5.0 ; python_full_version < '3.8'\n    # via cryptography (pyproject.toml)\npytest-xdist==3.6.1 ; python_full_version >= '3.8'\n    # via cryptography (pyproject.toml)\npytz==2024.2 ; python_full_version < '3.9'\n    # via babel\nreadme-renderer==37.3 ; python_full_version < '3.8'\n    # via cryptography (pyproject.toml)\nreadme-renderer==43.0 ; python_full_version == '3.8.*'\n    # via cryptography (pyproject.toml)\nreadme-renderer==44.0 ; python_full_version >= '3.9'\n    # via cryptography (pyproject.toml)\nrequests==2.31.0 ; python_full_version < '3.8'\n    # via sphinx\nrequests==2.32.3 ; python_full_version >= '3.8'\n    # via\n    #   sphinx\n    #   sphinxcontrib-spelling\nruff==0.9.0\n    # via cryptography (pyproject.toml)\nsix==1.17.0 ; python_full_version < '3.8'\n    # via bleach\nsnowballstemmer==2.2.0\n    # via sphinx\nsphinx==5.3.0 ; python_full_version < '3.8'\n    # via\n    #   cryptography (pyproject.toml)\n    #   sphinxcontrib-spelling\nsphinx==7.1.2 ; python_full_version == '3.8.*'\n    # via\n    #   cryptography (pyproject.toml)\n    #   sphinx-inline-tabs\n    #   sphinx-rtd-theme\n    #   sphinxcontrib-jquery\n    #   sphinxcontrib-spelling\nsphinx==7.4.7 ; python_full_version == '3.9.*'\n    # via\n    #   cryptography (pyproject.toml)\n    #   sphinx-inline-tabs\n    #   sphinx-rtd-theme\n    #   sphinxcontrib-jquery\n    #   sphinxcontrib-spelling\nsphinx==8.1.3 ; python_full_version >= '3.10'\n    # via\n    #   cryptography (pyproject.toml)\n    #   sphinx-inline-tabs\n    #   sphinx-rtd-theme\n    #   sphinxcontrib-jquery\n    #   sphinxcontrib-spelling\nsphinx-inline-tabs==2023.4.21 ; python_full_version >= '3.8'\n    # via cryptography (pyproject.toml)\nsphinx-rtd-theme==3.0.2 ; python_full_version >= '3.8'\n    # via cryptography (pyproject.toml)\nsphinxcontrib-applehelp==1.0.2 ; python_full_version < '3.8'\n    # via sphinx\nsphinxcontrib-applehelp==1.0.4 ; python_full_version == '3.8.*'\n    # via sphinx\nsphinxcontrib-applehelp==2.0.0 ; python_full_version >= '3.9'\n    # via sphinx\nsphinxcontrib-devhelp==1.0.2 ; python_full_version < '3.9'\n    # via sphinx\nsphinxcontrib-devhelp==2.0.0 ; python_full_version >= '3.9'\n    # via sphinx\nsphinxcontrib-htmlhelp==2.0.0 ; python_full_version < '3.8'\n    # via sphinx\nsphinxcontrib-htmlhelp==2.0.1 ; python_full_version == '3.8.*'\n    # via sphinx\nsphinxcontrib-htmlhelp==2.1.0 ; python_full_version >= '3.9'\n    # via sphinx\nsphinxcontrib-jquery==4.1 ; python_full_version >= '3.8'\n    # via sphinx-rtd-theme\nsphinxcontrib-jsmath==1.0.1\n    # via sphinx\nsphinxcontrib-qthelp==1.0.3 ; python_full_version < '3.9'\n    # via sphinx\nsphinxcontrib-qthelp==2.0.0 ; python_full_version >= '3.9'\n    # via sphinx\nsphinxcontrib-serializinghtml==1.1.5 ; python_full_version < '3.9'\n    # via sphinx\nsphinxcontrib-serializinghtml==2.0.0 ; python_full_version >= '3.9'\n    # via sphinx\nsphinxcontrib-spelling==8.0.0 ; python_full_version < '3.10'\n    # via cryptography (pyproject.toml)\nsphinxcontrib-spelling==8.0.1 ; python_full_version >= '3.10'\n    # via cryptography (pyproject.toml)\ntomli==2.0.1 ; python_full_version < '3.8'\n    # via\n    #   build\n    #   coverage\n    #   mypy\n    #   nox\n    #   pytest\ntomli==2.2.1 ; python_full_version >= '3.8' and python_full_version <= '3.11'\n    # via\n    #   build\n    #   check-sdist\n    #   coverage\n    #   mypy\n    #   nox\n    #   pytest\n    #   sphinx\ntyped-ast==1.5.5 ; python_full_version < '3.8'\n    # via mypy\ntyping-extensions==4.7.1 ; python_full_version < '3.8'\n    # via\n    #   importlib-metadata\n    #   mypy\n    #   nox\n    #   platformdirs\ntyping-extensions==4.12.2 ; python_full_version >= '3.8'\n    # via mypy\nurllib3==2.0.7 ; python_full_version < '3.8'\n    # via requests\nurllib3==2.2.3 ; python_full_version == '3.8.*'\n    # via requests\nurllib3==2.3.0 ; python_full_version >= '3.9'\n    # via requests\nuv==0.5.16 ; python_full_version >= '3.8'\n    # via nox\nvirtualenv==20.26.6 ; python_full_version < '3.8'\n    # via nox\nvirtualenv==20.28.1 ; python_full_version >= '3.8'\n    # via nox\nwebencodings==0.5.1 ; python_full_version < '3.8'\n    # via bleach\nzipp==3.15.0 ; python_full_version < '3.8'\n    # via importlib-metadata\nzipp==3.20.2 ; python_full_version == '3.8.*'\n    # via\n    #   importlib-metadata\n    #   importlib-resources\nzipp==3.21.0 ; python_full_version >= '3.9' and python_full_version < '3.10.2'\n    # via importlib-metadata\n\n# The following packages were excluded from the output:\n# cffi\n# pycparser\n# cryptography-vectors\n# bcrypt\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "noxfile.py",
          "type": "blob",
          "size": 9.9287109375,
          "content": "# This file is dual licensed under the terms of the Apache License, Version\n# 2.0, and the BSD License. See the LICENSE file in the root of this repository\n# for complete details.\n\nfrom __future__ import annotations\n\nimport glob\nimport itertools\nimport json\nimport pathlib\nimport re\nimport sys\nimport uuid\n\nimport nox\n\ntry:\n    import tomllib\nexcept ImportError:\n    import tomli as tomllib  # type: ignore[import-not-found,no-redef]\n\nnox.options.reuse_existing_virtualenvs = True\nnox.options.default_venv_backend = \"uv|virtualenv\"\n\n\ndef install(\n    session: nox.Session,\n    *args: str,\n    verbose: bool = True,\n) -> None:\n    if verbose:\n        args += (\"-v\",)\n    session.install(\n        \"-c\",\n        \"ci-constraints-requirements.txt\",\n        *args,\n        silent=False,\n    )\n\n\ndef load_pyproject_toml() -> dict:\n    with (pathlib.Path(__file__).parent / \"pyproject.toml\").open(\"rb\") as f:\n        return tomllib.load(f)\n\n\n@nox.session\n@nox.session(name=\"tests-ssh\")\n@nox.session(name=\"tests-randomorder\")\n@nox.session(name=\"tests-nocoverage\")\n@nox.session(name=\"tests-rust-debug\")\ndef tests(session: nox.Session) -> None:\n    extras = \"test\"\n    if session.name == \"tests-ssh\":\n        extras += \",ssh\"\n    if session.name == \"tests-randomorder\":\n        extras += \",test-randomorder\"\n\n    prof_location = (\n        pathlib.Path(\".\") / \".rust-cov\" / str(uuid.uuid4())\n    ).absolute()\n    if session.name != \"tests-nocoverage\":\n        session.env.update(\n            {\n                \"RUSTFLAGS\": \"-Cinstrument-coverage \"\n                + session.env.get(\"RUSTFLAGS\", \"\"),\n                \"LLVM_PROFILE_FILE\": str(prof_location / \"cov-%p.profraw\"),\n            }\n        )\n\n    install(session, \"-e\", \"./vectors\")\n    if session.name == \"tests-rust-debug\":\n        install(\n            session,\n            \"--config-settings=build-args=--profile=dev\",\n            f\".[{extras}]\",\n        )\n    else:\n        install(session, f\".[{extras}]\")\n\n    if session.venv_backend == \"uv\":\n        session.run(\"uv\", \"pip\", \"list\")\n    else:\n        session.run(\"pip\", \"list\")\n\n    if session.name != \"tests-nocoverage\":\n        cov_args = [\n            \"--cov=cryptography\",\n            \"--cov=tests\",\n        ]\n    else:\n        cov_args = []\n\n    if session.posargs:\n        tests = session.posargs\n    else:\n        tests = [\"tests/\"]\n\n    session.run(\n        \"pytest\",\n        \"-n\",\n        \"auto\",\n        \"--dist=worksteal\",\n        *cov_args,\n        \"--durations=10\",\n        *tests,\n    )\n\n    if session.name != \"tests-nocoverage\":\n        [rust_so] = glob.glob(\n            f\"{session.virtualenv.location}/lib/**/cryptography/hazmat/bindings/_rust.*\",\n            recursive=True,\n        )\n        process_rust_coverage(session, [rust_so], prof_location)\n\n\n@nox.session\ndef docs(session: nox.Session) -> None:\n    install(session, \".[docs,docstest,sdist,ssh]\")\n\n    temp_dir = session.create_tmp()\n    session.run(\n        \"sphinx-build\",\n        \"-T\",\n        \"-W\",\n        \"-b\",\n        \"html\",\n        \"-d\",\n        f\"{temp_dir}/doctrees\",\n        \"docs\",\n        \"docs/_build/html\",\n    )\n    session.run(\n        \"sphinx-build\",\n        \"-T\",\n        \"-W\",\n        \"-b\",\n        \"latex\",\n        \"-d\",\n        f\"{temp_dir}/doctrees\",\n        \"docs\",\n        \"docs/_build/latex\",\n    )\n\n    session.run(\n        \"sphinx-build\",\n        \"-T\",\n        \"-W\",\n        \"-b\",\n        \"doctest\",\n        \"-d\",\n        f\"{temp_dir}/doctrees\",\n        \"docs\",\n        \"docs/_build/html\",\n    )\n    session.run(\n        \"sphinx-build\",\n        \"-T\",\n        \"-W\",\n        \"-b\",\n        \"spelling\",\n        \"docs\",\n        \"docs/_build/html\",\n    )\n\n    session.run(\n        \"python3\", \"-m\", \"readme_renderer\", \"README.rst\", \"-o\", \"/dev/null\"\n    )\n    session.run(\n        \"python3\",\n        \"-m\",\n        \"readme_renderer\",\n        \"vectors/README.rst\",\n        \"-o\",\n        \"/dev/null\",\n    )\n\n\n@nox.session(name=\"docs-linkcheck\")\ndef docs_linkcheck(session: nox.Session) -> None:\n    install(session, \".[docs]\")\n\n    session.run(\n        \"sphinx-build\", \"-W\", \"-b\", \"linkcheck\", \"docs\", \"docs/_build/html\"\n    )\n\n\n@nox.session\ndef flake(session: nox.Session) -> None:\n    # TODO: Ideally there'd be a pip flag to install just our dependencies,\n    # but not install us.\n    pyproject_data = load_pyproject_toml()\n    install(session, \"-e\", \"vectors/\")\n    install(\n        session,\n        *pyproject_data[\"build-system\"][\"requires\"],\n        *pyproject_data[\"project\"][\"optional-dependencies\"][\"pep8test\"],\n        *pyproject_data[\"project\"][\"optional-dependencies\"][\"test\"],\n        *pyproject_data[\"project\"][\"optional-dependencies\"][\"ssh\"],\n        *pyproject_data[\"project\"][\"optional-dependencies\"][\"nox\"],\n    )\n\n    session.run(\"ruff\", \"check\", \".\")\n    session.run(\"ruff\", \"format\", \"--check\", \".\")\n    session.run(\n        \"mypy\",\n        \"src/cryptography/\",\n        \"vectors/cryptography_vectors/\",\n        \"tests/\",\n        \"release.py\",\n        \"noxfile.py\",\n    )\n    session.run(\"check-sdist\", \"--no-isolation\")\n\n\n@nox.session\n@nox.session(name=\"rust-noclippy\")\ndef rust(session: nox.Session) -> None:\n    prof_location = (\n        pathlib.Path(\".\") / \".rust-cov\" / str(uuid.uuid4())\n    ).absolute()\n    session.env.update(\n        {\n            \"RUSTFLAGS\": \"-Cinstrument-coverage  \"\n            + session.env.get(\"RUSTFLAGS\", \"\"),\n            \"LLVM_PROFILE_FILE\": str(prof_location / \"cov-%p.profraw\"),\n        }\n    )\n\n    # TODO: Ideally there'd be a pip flag to install just our dependencies,\n    # but not install us.\n    pyproject_data = load_pyproject_toml()\n    install(session, *pyproject_data[\"build-system\"][\"requires\"])\n\n    session.run(\"cargo\", \"fmt\", \"--all\", \"--\", \"--check\", external=True)\n    if session.name != \"rust-noclippy\":\n        session.run(\n            \"cargo\",\n            \"clippy\",\n            \"--all\",\n            \"--\",\n            \"-D\",\n            \"warnings\",\n            external=True,\n        )\n\n    build_output = session.run(\n        \"cargo\",\n        \"test\",\n        \"--no-default-features\",\n        \"--all\",\n        \"--no-run\",\n        \"-q\",\n        \"--message-format=json\",\n        external=True,\n        silent=True,\n    )\n    session.run(\n        \"cargo\", \"test\", \"--no-default-features\", \"--all\", external=True\n    )\n\n    # It's None on install-only invocations\n    if build_output is not None:\n        assert isinstance(build_output, str)\n        rust_tests = []\n        for line in build_output.splitlines():\n            data = json.loads(line)\n            if data.get(\"profile\", {}).get(\"test\", False):\n                rust_tests.extend(data[\"filenames\"])\n\n        process_rust_coverage(session, rust_tests, prof_location)\n\n\n@nox.session\ndef local(session):\n    pyproject_data = load_pyproject_toml()\n    install(session, \"-e\", \"./vectors\", verbose=False)\n    install(\n        session,\n        *pyproject_data[\"build-system\"][\"requires\"],\n        *pyproject_data[\"project\"][\"optional-dependencies\"][\"pep8test\"],\n        *pyproject_data[\"project\"][\"optional-dependencies\"][\"test\"],\n        *pyproject_data[\"project\"][\"optional-dependencies\"][\"ssh\"],\n        *pyproject_data[\"project\"][\"optional-dependencies\"][\"nox\"],\n        verbose=False,\n    )\n\n    session.run(\"ruff\", \"format\", \".\")\n    session.run(\"ruff\", \"check\", \".\")\n\n    session.run(\"cargo\", \"fmt\", \"--all\", external=True)\n    session.run(\"cargo\", \"check\", \"--all\", \"--tests\", external=True)\n    session.run(\n        \"cargo\",\n        \"clippy\",\n        \"--all\",\n        \"--\",\n        \"-D\",\n        \"warnings\",\n        external=True,\n    )\n\n    session.run(\n        \"mypy\",\n        \"src/cryptography/\",\n        \"vectors/cryptography_vectors/\",\n        \"tests/\",\n        \"release.py\",\n        \"noxfile.py\",\n    )\n\n    session.run(\n        \"maturin\",\n        \"develop\",\n        \"--release\",\n        *([\"--uv\"] if session.venv_backend == \"uv\" else []),\n    )\n\n    if session.posargs:\n        tests = session.posargs\n    else:\n        tests = [\"tests/\"]\n\n    session.run(\n        \"pytest\",\n        \"-n\",\n        \"auto\",\n        \"--dist=worksteal\",\n        \"--durations=10\",\n        *tests,\n    )\n\n    session.run(\n        \"cargo\", \"test\", \"--no-default-features\", \"--all\", external=True\n    )\n\n\nLCOV_SOURCEFILE_RE = re.compile(\n    r\"^SF:.*[\\\\/]src[\\\\/]rust[\\\\/](.*)$\", flags=re.MULTILINE\n)\nBIN_EXT = \".exe\" if sys.platform == \"win32\" else \"\"\n\n\ndef process_rust_coverage(\n    session: nox.Session,\n    rust_binaries: list[str],\n    prof_raw_location: pathlib.Path,\n) -> None:\n    # Hitting weird issues merging Windows and Linux Rust coverage, so just\n    # say the hell with it.\n    if sys.platform == \"win32\":\n        return\n\n    target_libdir = session.run(\n        \"rustc\", \"--print\", \"target-libdir\", external=True, silent=True\n    )\n    if target_libdir is not None:\n        target_bindir = pathlib.Path(target_libdir).parent / \"bin\"\n\n        profraws = [\n            str(prof_raw_location / p)\n            for p in prof_raw_location.glob(\"*.profraw\")\n        ]\n        session.run(\n            str(target_bindir / (\"llvm-profdata\" + BIN_EXT)),\n            \"merge\",\n            \"-sparse\",\n            *profraws,\n            \"-o\",\n            \"rust-cov.profdata\",\n            external=True,\n        )\n\n        lcov_data = session.run(\n            str(target_bindir / (\"llvm-cov\" + BIN_EXT)),\n            \"export\",\n            rust_binaries[0],\n            *itertools.chain.from_iterable(\n                [\"-object\", b] for b in rust_binaries[1:]\n            ),\n            \"-instr-profile=rust-cov.profdata\",\n            \"--ignore-filename-regex=[/\\\\].cargo[/\\\\]\",\n            \"--ignore-filename-regex=[/\\\\]rustc[/\\\\]\",\n            \"--ignore-filename-regex=[/\\\\].rustup[/\\\\]toolchains[/\\\\]\",\n            \"--ignore-filename-regex=[/\\\\]target[/\\\\]\",\n            \"--format=lcov\",\n            silent=True,\n            external=True,\n        )\n        assert isinstance(lcov_data, str)\n        lcov_data = LCOV_SOURCEFILE_RE.sub(\n            lambda m: \"SF:src/rust/\" + m.group(1).replace(\"\\\\\", \"/\"),\n            lcov_data.replace(\"\\r\\n\", \"\\n\"),\n        )\n        with open(f\"{uuid.uuid4()}.lcov\", \"w\") as f:\n            f.write(lcov_data)\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 5.357421875,
          "content": "[build-system]\n# These requirements must be kept sync with the requirements in\n# ./.github/requirements/build-requirements.{in,txt}\nrequires = [\n    \"maturin>=1,<2\",\n\n    # Must be kept in sync with `project.dependencies`\n    \"cffi>=1.12; platform_python_implementation != 'PyPy'\",\n    # Used by cffi (which import distutils, and in Python 3.12, distutils has\n    # been removed from the stdlib, but installing setuptools puts it back) as\n    # well as our build.rs for the rust/cffi bridge.\n    \"setuptools!=74.0.0,!=74.1.0,!=74.1.1,!=74.1.2\",\n]\nbuild-backend = \"maturin\"\n\n[project]\nname = \"cryptography\"\nversion = \"45.0.0.dev1\"\nauthors = [\n    { name = \"The Python Cryptographic Authority and individual contributors\", email = \"cryptography-dev@python.org\" },\n]\ndescription = \"cryptography is a package which provides cryptographic recipes and primitives to Python developers.\"\nreadme = \"README.rst\"\nlicense = { text = \"Apache-2.0 OR BSD-3-Clause\" }\nclassifiers = [\n    \"Development Status :: 5 - Production/Stable\",\n    \"Intended Audience :: Developers\",\n    \"License :: OSI Approved :: Apache Software License\",\n    \"License :: OSI Approved :: BSD License\",\n    \"Natural Language :: English\",\n    \"Operating System :: MacOS :: MacOS X\",\n    \"Operating System :: POSIX\",\n    \"Operating System :: POSIX :: BSD\",\n    \"Operating System :: POSIX :: Linux\",\n    'Operating System :: Microsoft :: Windows',\n    \"Programming Language :: Python\",\n    \"Programming Language :: Python :: 3\",\n    \"Programming Language :: Python :: 3 :: Only\",\n    \"Programming Language :: Python :: 3.7\",\n    \"Programming Language :: Python :: 3.8\",\n    \"Programming Language :: Python :: 3.9\",\n    \"Programming Language :: Python :: 3.10\",\n    \"Programming Language :: Python :: 3.11\",\n    \"Programming Language :: Python :: 3.12\",\n    \"Programming Language :: Python :: 3.13\",\n    \"Programming Language :: Python :: Implementation :: CPython\",\n    \"Programming Language :: Python :: Implementation :: PyPy\",\n    \"Topic :: Security :: Cryptography\",\n]\nrequires-python = \">=3.7,!=3.9.0,!=3.9.1\"\ndependencies = [\n    # Must be kept in sync with `build-system.requires`\n    \"cffi>=1.12; platform_python_implementation != 'PyPy'\",\n]\n\n[project.urls]\nhomepage = \"https://github.com/pyca/cryptography\"\ndocumentation = \"https://cryptography.io/\"\nsource = \"https://github.com/pyca/cryptography/\"\nissues = \"https://github.com/pyca/cryptography/issues\"\nchangelog = \"https://cryptography.io/en/latest/changelog/\"\n\n[project.optional-dependencies]\nssh = [\"bcrypt >=3.1.5\"]\n\n# All the following are used for our own testing.\nnox = [\"nox >=2024.04.15\", \"nox[uv] >=2024.03.02; python_version >= '3.8'\"]\ntest = [\n    \"cryptography_vectors\",\n    \"pytest >=7.4.0\",\n    \"pytest-benchmark >=4.0\",\n    \"pytest-cov >=2.10.1\",\n    \"pytest-xdist >=3.5.0\",\n    \"pretend >=0.7\",\n    \"certifi >=2024\",\n]\ntest-randomorder = [\"pytest-randomly\"]\ndocs = [\n    \"sphinx >=5.3.0\",\n    \"sphinx-rtd-theme >=3.0.0; python_version >= '3.8'\",\n    \"sphinx-inline-tabs; python_version >= '3.8'\",\n]\ndocstest = [\n    \"pyenchant >=3\",\n    \"readme-renderer >=30.0\",\n    \"sphinxcontrib-spelling >=7.3.1\",\n]\nsdist = [\"build >=1.0.0\"]\n# `click` included because its needed to type check `release.py`\npep8test = [\n    \"ruff >=0.3.6\",\n    \"mypy >=1.4\",\n    \"check-sdist; python_version >= '3.8'\",\n    \"click >=8.0.1\",\n]\n\n[tool.maturin]\npython-source = \"src\"\npython-packages = [\"cryptography\"]\nmanifest-path = \"src/rust/Cargo.toml\"\nmodule-name = \"cryptography.hazmat.bindings._rust\"\nlocked = true\nsdist-generator = \"git\"\nfeatures = [\"pyo3/abi3-py37\"]\ninclude = [\n    \"CHANGELOG.rst\",\n    \"CONTRIBUTING.rst\",\n    \"LICENSE\",\n    \"LICENSE.APACHE\",\n    \"LICENSE.BSD\",\n\n    \"docs/**/*\",\n\n    \"src/_cffi_src/**/*.py\",\n    \"src/_cffi_src/**/*.c\",\n    \"src/_cffi_src/**/*.h\",\n\n    \"Cargo.toml\",\n    \"Cargo.lock\",\n    \"src/rust/**/Cargo.toml\",\n    \"src/rust/**/Cargo.lock\",\n    \"src/rust/**/*.rs\",\n\n    \"tests/**/*.py\",\n]\nexclude = [\n    \"vectors/**/*\",\n    \"target/**/*\",\n    \"docs/_build/**/*\",\n    \".github/**/*\",\n    \".readthedocs.yml\",\n    \"ci-constraints-requirements.txt\",\n    \"mypy.ini\",\n]\n\n[tool.pytest.ini_options]\naddopts = \"-r s --capture=no --strict-markers --benchmark-disable\"\nconsole_output_style = \"progress-even-when-capture-no\"\nmarkers = [\n    \"skip_fips: this test is not executed in FIPS mode\",\n    \"supported: parametrized test requiring only_if and skip_message\",\n]\n\n[tool.mypy]\nshow_error_codes = true\ncheck_untyped_defs = true\nno_implicit_reexport = true\nwarn_redundant_casts = true\nwarn_unused_ignores = true\nwarn_unused_configs = true\nstrict_equality = true\n\n[[tool.mypy.overrides]]\nmodule = [\"pretend\"]\nignore_missing_imports = true\n\n[tool.coverage.run]\nbranch = true\nrelative_files = true\nsource = [\"cryptography\", \"tests/\"]\n\n[tool.coverage.paths]\nsource = [\n    \"src/cryptography\",\n    \"*.nox/*/lib*/python*/site-packages/cryptography\",\n    \"*.nox\\\\*\\\\Lib\\\\site-packages\\\\cryptography\",\n    \"*.nox/pypy/site-packages/cryptography\",\n]\ntests = [\"tests/\", \"*tests\\\\\"]\n\n[tool.coverage.report]\nexclude_lines = [\n    \"@abc.abstractmethod\",\n    \"@typing.overload\",\n    \"if typing.TYPE_CHECKING\",\n]\n\n[tool.ruff]\nline-length = 79\n\nlint.ignore = ['N818']\nlint.select = ['E', 'F', 'I', 'N', 'W', 'UP', 'RUF']\n\n[tool.ruff.lint.isort]\nknown-first-party = [\"cryptography\", \"cryptography_vectors\", \"tests\"]\n\n[tool.check-sdist]\ngit-only = [\n    \"vectors/*\",\n    \"release.py\",\n    \"ci-constraints-requirements.txt\",\n    \".gitattributes\",\n    \".gitignore\",\n]\n"
        },
        {
          "name": "release.py",
          "type": "blob",
          "size": 2.4833984375,
          "content": "# This file is dual licensed under the terms of the Apache License, Version\n# 2.0, and the BSD License. See the LICENSE file in the root of this repository\n# for complete details.\n\nimport pathlib\nimport re\nimport subprocess\n\nimport click\nimport tomllib\nfrom packaging.version import Version\n\n\ndef run(*args: str) -> None:\n    print(f\"[running] {list(args)}\")\n    subprocess.check_call(list(args))\n\n\n@click.group()\ndef cli():\n    pass\n\n\n@cli.command()\ndef release() -> None:\n    base_dir = pathlib.Path(__file__).parent\n    with (base_dir / \"pyproject.toml\").open(\"rb\") as f:\n        pyproject = tomllib.load(f)\n        version = pyproject[\"project\"][\"version\"]\n\n    if Version(version).is_prerelease:\n        raise RuntimeError(\n            f\"Can't release, pyproject.toml version is pre-release: {version}\"\n        )\n\n    # Tag and push the tag (this will trigger the wheel builder in Actions)\n    run(\"git\", \"tag\", \"-s\", version, \"-m\", f\"{version} release\")\n    run(\"git\", \"push\", \"--tags\", \"git@github.com:pyca/cryptography.git\")\n\n\ndef replace_pattern(p: pathlib.Path, pattern: str, replacement: str) -> None:\n    content = p.read_text()\n    match = re.search(pattern, content, re.MULTILINE)\n    assert match is not None\n\n    start, end = match.span()\n    new_content = content[:start] + replacement + content[end:]\n    p.write_text(new_content)\n\n\ndef replace_version(\n    p: pathlib.Path, variable_name: str, new_version: str\n) -> None:\n    replace_pattern(\n        p, rf\"^{variable_name}\\s*=\\s*.*$\", f'{variable_name} = \"{new_version}\"'\n    )\n\n\n@cli.command()\n@click.argument(\"new_version\")\ndef bump_version(new_version: str) -> None:\n    base_dir = pathlib.Path(__file__).parent\n\n    replace_version(base_dir / \"pyproject.toml\", \"version\", new_version)\n    replace_version(\n        base_dir / \"src/cryptography/__about__.py\", \"__version__\", new_version\n    )\n    replace_version(\n        base_dir / \"vectors/pyproject.toml\",\n        \"version\",\n        new_version,\n    )\n    replace_version(\n        base_dir / \"vectors/cryptography_vectors/__about__.py\",\n        \"__version__\",\n        new_version,\n    )\n\n    if Version(new_version).is_prerelease:\n        replace_pattern(\n            base_dir / \"pyproject.toml\",\n            r'\"cryptography_vectors(==.*?)?\"',\n            '\"cryptography_vectors\"',\n        )\n    else:\n        replace_pattern(\n            base_dir / \"pyproject.toml\",\n            r'\"cryptography_vectors(==.*?)?\"',\n            f'\"cryptography_vectors=={new_version}\"',\n        )\n\n\nif __name__ == \"__main__\":\n    cli()\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vectors",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}