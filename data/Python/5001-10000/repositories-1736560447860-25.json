{
  "metadata": {
    "timestamp": 1736560447860,
    "page": 25,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wsvincent/awesome-django",
      "stars": 9751,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.474609375,
          "content": "# http://editorconfig.org\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{py,rst,ini}]\nindent_size = 4\nindent_style = space\n\n[*.py]\nline_length=120\nmulti_line_output=3\n\n[*.{css,html,js,json,sass,scss,yml,yaml}]\nindent_size = 2\nindent_style = space\n\n[*.md]\nindent_size = 4\nindent_style = space\ntrim_trailing_whitespace = false\n\n[justfile]\nindent_size = 4\nindent_style = space\n\n[{Makefile,modd.conf}]\nindent_style = tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3447265625,
          "content": "*.gem\n*.rbc\n/.config\n/coverage/\n/InstalledFiles\n/pkg/\n/spec/reports/\n/spec/examples.txt\n/test/tmp/\n/test/version_tmp/\n/tmp/\n\n# Used by dotenv library to load environment variables.\n# .env\n\n# Ignore Byebug command history file.\n.byebug_history\n\n## Specific to RubyMotion:\n.dat*\n.repl_history\nbuild/\n*.bridgesupport\nbuild-iPhoneOS/\nbuild-iPhoneSimulator/\n\n## Specific to RubyMotion (use of CocoaPods):\n#\n# We recommend against adding the Pods directory to your .gitignore. However\n# you should judge for yourself, the pros and cons are mentioned at:\n# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control\n#\n# vendor/Pods/\n\n## Documentation cache and generated files:\n/.yardoc/\n/_yardoc/\n/doc/\n/rdoc/\n\n## Environment normalization:\n/.bundle/\n/vendor/bundle\n/lib/bundler/man/\n\n# for a library or gem, you might want to ignore these files since the code is\n# intended to run in multiple environments; otherwise, check them in:\nGemfile.lock\n# .ruby-version\n# .ruby-gemset\n\n# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:\n.rvmrc\n\n# Used by RuboCop. Remote config files pulled in from inherit_from directive.\n# .rubocop-https?--*\n\n.cache\n.jekyll-cache/\n.jekyll-metadata\n.sass-cache/\n.vendor/\n_site/\nassets/development.css\nbuild\ndist\ndocker-compose.override.yml\nnode_modules\npackage-lock.json\nsite\nvendor\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.7021484375,
          "content": "default_language_version:\n  python: python3.12\n\nexclude: |\n    (?x)^(\n        .devcontainer/devcontainer.json|\n        .github/contributors.json|\n        .vscode/launch.json|\n        CONTRIBUTORS.md|\n        frontend/.*|\n        static/.*\n    )$\n\nrepos:\n  - repo: https://github.com/pre-commit-ci/pre-commit-ci-config\n    rev: v1.6.1\n    hooks:\n    - id: check-pre-commit-ci-config\n\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n      - id: check-added-large-files\n      - id: check-case-conflict\n      - id: check-json\n      - id: check-merge-conflict\n      - id: check-symlinks\n      - id: check-toml\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n        args: [--markdown-linebreak-ext=md]\n  - repo: https://github.com/rtts/djhtml\n    rev: '3.0.6'\n    hooks:\n      - id: djhtml\n        entry: djhtml --tabwidth 2\n        alias: autoformat\n      - id: djcss\n        alias: autoformat\n      - id: djjs\n        alias: autoformat\n  - repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: v0.6.9\n    hooks:\n      - id: ruff\n        args: [--fix, --exit-non-zero-on-fix]\n      - id: ruff-format\n  - repo: https://github.com/asottile/reorder-python-imports\n    rev: v3.14.0\n    hooks:\n      - id: reorder-python-imports\n  - repo: https://github.com/asottile/pyupgrade\n    rev: v3.18.0\n    hooks:\n      - id: pyupgrade\n        alias: autoformat\n        args: [--py312-plus]\n  # - repo: local\n  #   hooks:\n  #     - id: rustywind\n  #       name: rustywind Tailwind CSS class linter\n  #       language: node\n  #       additional_dependencies:\n  #         - rustywind@latest\n  #       entry: rustywind\n  #       args: [--write]\n  #       types_or: [html]\n  #       # exclude: '.*\\.min\\.css'\n"
        },
        {
          "name": ".python-version",
          "type": "blob",
          "size": 0.0048828125,
          "content": "3.12\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "404.html",
          "type": "blob",
          "size": 0.388671875,
          "content": "---\nlayout: default\n---\n\n<style type=\"text/css\" media=\"screen\">\n  .container {\n    margin: 10px auto;\n    max-width: 600px;\n    text-align: center;\n  }\n  h1 {\n    margin: 30px 0;\n    font-size: 4em;\n    line-height: 1;\n    letter-spacing: -1px;\n  }\n</style>\n\n<div class=\"container\">\n  <h1>404</h1>\n\n  <p><strong>Page not found :(</strong></p>\n  <p>The requested page could not be found.</p>\n</div>\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.017578125,
          "content": "awesomedjango.org\n"
        },
        {
          "name": "Gemfile",
          "type": "blob",
          "size": 0.0869140625,
          "content": "source \"https://rubygems.org\"\n\ngem \"webrick\"\n\ngem \"github-pages\", group: :jekyll_plugins\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 6.8828125,
          "content": "Creative Commons Legal Code\n\nCC0 1.0 Universal\n\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n    HEREUNDER.\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 43.9375,
          "content": "# Awesome Django [![Awesome](https://awesome.re/badge-flat.svg)](https://github.com/sindresorhus/awesome)\n\n> A curated list of awesome things related to Django. Maintained by [Will Vincent](https://github.com/wsvincent) and [Jeff Triplett](https://github.com/jefftriplett).\n\n<br>\n\n<div align=\"center\">\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"./assets/django-logo-negative.svg\">\n  <img alt=\"Dark and Light mode version of the Django logo\" src=\"./assets/django-logo-positive.svg\">\n</picture>\n</div>\n\n<br>\n\nPlease consider supporting Django by making a donation to the <a rel=\"sponsored\" href=\"https://www.djangoproject.com/fundraising/\">Django Software Foundation</a>,\nsponsoring via <a rel=\"sponsored\" href=\"https://github.com/sponsors/django\">GitHub Sponsors</a>,\nor buying <a rel=\"sponsored\" href=\"https://django.threadless.com/\">official merchandise</a>.\n\n\n## Contents\n\n<!--lint disable awesome-toc-->\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Third-Party Packages](#third-party-packages)\n  - [Admin](#admin)\n  - [Admin Themes](#admin-themes)\n  - [APIs](#apis)\n  - [Async](#async)\n  - [Caching](#caching)\n  - [Commands](#commands)\n  - [Configuration](#configuration)\n  - [Content Management Systems](#content-management-systems)\n  - [Database Connectors](#database-connectors)\n  - [ECommerce](#ecommerce)\n  - [Editors](#editors)\n  - [Files/Images](#filesimages)\n  - [Forms](#forms)\n  - [Full-stack frameworks](#full-stack-frameworks)\n  - [General](#general)\n  - [Internationalisation (i18n)](#internationalisation-i18n)\n  - [Logging](#logging)\n  - [Monitoring](#monitoring)\n  - [Mailing](#mailing)\n  - [Model Fields](#model-fields)\n  - [Models](#models)\n  - [Performance](#performance)\n  - [Permissions](#permissions)\n  - [Search](#search)\n  - [Search Engine Optimisation](#search-engine-optimisation)\n  - [Security](#security)\n  - [Static Assets](#static-assets)\n  - [Task Queues](#task-queues)\n  - [Templates](#templates)\n  - [Testing](#testing)\n  - [URLs](#urls)\n  - [Users](#users)\n  - [Views](#views)\n- [Python Packages](#python-packages)\n- [Resources](#resources)\n  - [Official Resources](#official-resources)\n  - [Educational](#educational)\n  - [Community](#community)\n  - [Conferences](#conferences)\n  - [Job Boards](#job-boards)\n  - [Newsletters](#newsletters)\n  - [Podcasts](#podcasts)\n  - [Videos](#videos)\n  - [Books](#books)\n- [Hosting](#hosting)\n  - [PaaS (Platforms-as-a-Service)](#paas-platforms-as-a-service)\n  - [IaaS (Infrastructure-as-a-Service)](#iaas-infrastructure-as-a-service)\n- [Projects](#projects)\n  - [Boilerplate](#boilerplate)\n  - [Open Source Projects](#open-source-projects)\n- [Django REST Framework](#django-rest-framework)\n  - [DRF Resources](#drf-resources)\n  - [DRF Tutorials](#drf-tutorials)\n- [Wagtail](#wagtail)\n  - [Wagtail Resources](#wagtail-resources)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n<!--lint enable awesome-toc-->\n\n## Third-Party Packages\n\n_For a complete listing of all available packages, see [Django Packages](https://djangopackages.org/)_\n\n### Admin\n- [django-hijack](https://github.com/arteria/django-hijack) - Admins can log in and work on behalf of other users without having to know their credentials.\n- [django-import-export](https://github.com/django-import-export/django-import-export) - Django application and library for importing and exporting data with admin integration.\n- [django-admin-honeypot](https://github.com/dmpayton/django-admin-honeypot) - Configure a honeypot to see who's trying to hack your site.\n- [django-loginas](https://github.com/skorokithakis/django-loginas) - \"Log in as user\" for the Django admin.\n- [impostor](https://github.com/avallbona/Impostor) - Impostor is a Django application which allows staff members to login as a different user by using their own username and password.\n- [django-impersonate](https://pypi.org/project/django-impersonate/) - Allow superusers to “impersonate” other non-superuser accounts.\n- [django-admin-env-notice](https://github.com/dizballanze/django-admin-env-notice) - Visually distinguish environments in Django Admin, for example: `development`, `staging`, `production`.\n- [django-related-admin](https://github.com/PetrDlouhy/django-related-admin) - A helper library that allows you to write list_displays across foreign key relationships.\n- [django-admin-sortable2](https://github.com/jrief/django-admin-sortable2) - Generic drag-and-drop ordering for objects in the Django admin interface.\n\n### Admin Themes\n- [django-grappelli](https://github.com/sehmaschine/django-grappelli) - A jazzy skin for the admin.\n- [django-jazzmin](https://github.com/farridav/django-jazzmin) - Drop-in theme for django admin, that utilises AdminLTE 3 & Bootstrap 4 to make yo' admin look jazzy.\n- [django-admin-interface](https://github.com/fabiocaccamo/django-admin-interface) - Customize Admin by the admin itself(color, header. title,logo) and  popup windows replaced by modals.\n- [django-material-admin](https://github.com/MaistrenkoAnton/django-material-admin) - Material design for django administration.\n- [django-semantic-admin](https://github.com/globophobe/django-semantic-admin) - Django Semantic UI admin theme.\n- [django-jet-reboot](https://github.com/b1go/django-jet-reboot) - Django Jet is modern template for Django admin interface with improved functionality.\n- [django-baton](https://github.com/otto-torino/django-baton) - A cool, modern and responsive django admin application based on bootstrap 5.\n- [django-unfold](https://github.com/unfoldadmin/django-unfold) - Modern Django admin theme for seamless interface development.\n- [django-daisy](https://github.com/hypy13/django-daisy) - A modern django dashboard fully responsive built with daisyui.\n- [django-admin-dracula](https://github.com/sjbitcode/django-admin-dracula) - 🦇 Dracula themes for the Django admin.\n\n### APIs\n<!--lint disable double-link-->\n- [django-rest-framework](https://github.com/encode/django-rest-framework) - Web APIs for Django.\n- [django-cors-headers](https://github.com/adamchainz/django-cors-headers) - If your back-end and front-end are on different servers, you need this.\n- [dj-rest-auth](https://github.com/jazzband/dj-rest-auth) - Authentication for Django Rest Framework.\n- [django-rest-knox](https://github.com/James1345/django-rest-knox) - Authentication Module for django-rest-auth.\n- [djoser](https://github.com/sunscrapers/djoser) - REST implementation of Django auth.\n- [djaq](https://github.com/paul-wolf/djaq) - An instant remote API to Django models with a powerful query language.\n- [django-rest-framework-simplejwt](https://github.com/davesque/django-rest-framework-simplejwt) - JSON web tokens for DRF.\n- [django-webpack-loader](https://github.com/owais/django-webpack-loader) - Transparently use webpack with Django.\n- [drf-yasg](https://github.com/axnsan12/drf-yasg) - Automated generation of real Swagger/OpenAPI 2.0 schemas from Django REST Framework code.\n- [graphene-django](https://github.com/graphql-python/graphene-django) - GraphQL for Django.\n- [graphene-django-filter](https://github.com/devind-team/graphene-django-filter) - Advanced filters implementing and/or/not operators in GraphQL for Django.\n- [django-ninja](https://django-ninja.rest-framework.com/) - Django Ninja - Fast Django REST framework based on type annotations.\n- [django-tastypie](https://github.com/django-tastypie/django-tastypie) - Creating delicious APIs for Django apps since 2010.\n- [drf-spectacular](https://github.com/tfranzel/drf-spectacular) - Sane and flexible OpenAPI 3 schema generation for Django REST framework.\n- [django-webhook](https://github.com/danihodovic/django-webhook) - A plug-and-play Django app for sending outgoing webhooks on model changes.\n<!--lint enable double-link-->\n\n### Async\n- [channels](https://github.com/django/channels/) - Async support for Django.\n- [starlette](https://github.com/encode/starlette) - ASGI framework.\n\n### Caching\n- [django-cachalot](https://github.com/noripyt/django-cachalot) - Caches your Django ORM queries and automatically invalidates them.\n- [django-cacheops](https://github.com/Suor/django-cacheops) - A slick ORM cache with automatic granular event-driven invalidation.\n\n### Commands\n- [django-extensions](https://github.com/django-extensions/django-extensions/) - Custom management extensions, notably `runserver_plus` and `shell_plus`.\n- [django-click](https://github.com/GaretJax/django-click) - Write Django management commands using the [click CLI library](https://click.palletsprojects.com).\n- [django-dbbackup](https://github.com/django-dbbackup/django-dbbackup) - Management commands to help backup and restore your project database and media files.\n- [django-liquidb](https://github.com/Gusakovskiy/django-liquidb) - Django application to simplify migration management and changes in states of db scheme.\n- [django-migration-zero](https://github.com/ambient-innovation/django-migration-zero/) - Holistic implementation of \"migration zero\" pattern for Django covering local changes and in-production database adjustments.\n- [django-typer](https://github.com/bckohan/django-typer) - Write Django management commands using the [Typer CLI library](https://typer.tiangolo.com).\n\n### Configuration\n<!--lint disable double-link-->\n- [confidential](https://github.com/candidco/confidential) - Manage configs and secrets (with CLI support).\n- [django-environ](https://github.com/joke2k/django-environ) - Environment variables.\n- [django-split-settings](https://github.com/sobolevn/django-split-settings) - Organize multiple settings files.\n- [django-constance](https://github.com/jazzband/django-constance) - A Django app for storing dynamic settings in pluggable backends (Redis and Django model backend built in) with an integration with the Django admin app.\n- [django-configurations](https://github.com/jazzband/django-configurations) - eases Django project configuration by relying on the composability of Python classes and following principles of [the twelve-factor app](https://12factor.net/config).\n- [dynaconf](https://www.dynaconf.com/django/) - Dynaconf loads django settings from multiple sources (multiple file formats, env vars, redis, vault, etcd), manages secrets, and allows for different merging strategies all following [the twelve-factor app](https://12factor.net/config).\n- [django-extra-settings](https://github.com/fabiocaccamo/django-extra-settings) - Config and manage typed extra settings using just the django admin.\n- [environs](https://github.com/sloria/environs) - Simplified environment variable parsing that comes with a [Django helper](https://github.com/sloria/environs#usage-with-django) that installs additional packages.\n<!--lint enable double-link-->\n- [django-classy-settings](https://github.com/funkybob/django-classy-settings) - Class based settings to keep your environments in order, with easy access to typed environment variables.\n- [django-content-settings](https://django-content-settings.readthedocs.io/en/latest/) - Easily create and manage editable typed variables directly from the Django admin panel.\n\n### Content Management Systems\n<!--lint disable double-link-->\n- [wagtail](https://github.com/wagtail/wagtail) - Popular Django content management system (CMS). See [awesome-wagtail](https://github.com/springload/awesome-wagtail) too.\n- [mezzanine](https://github.com/stephenmcd/mezzanine) - CMS framework.\n- [django-cms](https://github.com/divio/django-cms) - CMS for Django.\n- [feincms](https://github.com/feincms/feincms) - An extensible Django-based CMS.\n- [puput](https://github.com/APSL/puput) - Blog app features with Wagtail.\n<!--lint enable double-link-->\n\n### Database Connectors\n- [djongo](https://github.com/doableware/djongo) - Django and MongoDB database connector.\n\n### ECommerce\n- [saleor](https://github.com/mirumee/saleor) - GraphQL-based Django E-Commerce Platform.\n- [django-shop](https://github.com/awesto/django-shop) - Django-based shop system.\n- [shuup](https://github.com/shuup/shuup) - Django E-Commerce Platform.\n- [django-oscar](https://github.com/django-oscar/django-oscar) - Domain-driven e-commerce for Django.\n\n### Editors\n<!--lint ignore awesome-list-item-->\n- [django-markdownx](https://github.com/adi-/django-markdownx) - Comprehensive Markdown plugin built for Django.\n- [django-markdown-editor](https://github.com/agusmakmun/django-markdown-editor) - Awesome Django Markdown Editor, supported for Bootstrap & Semantic-UI.\n- [django-business-logic](https://github.com/dgk/django-business-logic) - Visual DSL framework for Django.\n- [django-summernote](https://github.com/summernote/django-summernote) - Summernote is a simple WYSIWYG editor.\n- [django-tinymce](https://github.com/jazzband/django-tinymce) - TinyMCE integration for Django.\n- [django-prose](https://github.com/withlogicco/django-prose) - A light weight editor to content creation.\n- [django-ace](https://github.com/django-ace/django-ace) - ACE integration for Django.\n\n### Files/Images\n- [django-cleanup](https://github.com/un1t/django-cleanup) - Zero configuration file/image removal for local and remote files.\n- [django-imagekit](https://github.com/matthewwithanm/django-imagekit) - Django app for processing images for thumbnail, black-and-white and sizes.\n- [django-pictures](https://github.com/codingjoe/django-pictures) - Responsive cross-browser image library using modern codes like AVIF & WebP.\n- [sorl-thumbnail](https://github.com/jazzband/sorl-thumbnail) - Thumbnails for Django.\n\n### Forms\n- [django-bleach](https://github.com/marksweb/django-bleach/) - Integrate bleach into forms and models. See `django-nh3` as an alternative.\n- [django-crispy-forms](https://github.com/django-crispy-forms/django-crispy-forms/) - DRY Django forms.\n- [django-floppyforms](https://github.com/jazzband/django-floppyforms) - Full control of form rendering.\n- [django-formtools](https://github.com/jazzband/django-formtools) - For form previous and multi-step forms, previously part of Django until 1.8.\n- [django-widget-tweaks](https://github.com/jazzband/django-widget-tweaks) - Tweak form field rendering in templates.\n- [django-autocomplete-light](https://github.com/yourlabs/django-autocomplete-light) - Add autocompletion to forms.\n- [django-shapeshifter](https://github.com/kennethlove/django-shapeshifter) - A class-based view to handle multiple forms in one view.\n\n### Full-stack frameworks\n- [Django-Bridge](https://github.com/django-bridge/django-bridge) - The simple way to build React frontends for Django applications.\n- [ReactPy](https://github.com/reactive-python/reactpy) - It's React, but in Python. Insert dynamically rendered Python into Django templates using the [ReactPy-Django module](https://github.com/reactive-python/reactpy-django).\n- [Reactor](https://github.com/edelvalle/reactor/) - Phoenix LiveView, but for Django.\n- [Sockpuppet](https://sockpuppet.argpar.se/) - Build reactive applications with the Django tooling you already know and love.\n- [Unicorn](https://www.django-unicorn.com/) - A reactive component framework that progressively enhances a normal Django view, makes AJAX calls in the background, and dynamically updates the DOM.\n- [iommi](https://github.com/TriOptima/iommi) - Toolkit for development of CRUD applications without writing HTML or JavaScript.\n\n### General\n- [django-data-browser](https://github.com/tolomea/django-data-browser) - Interactive, user-friendly database explorer.\n- [django-filter](https://github.com/carltongibson/django-filter) - Powerful filters based on Django QuerySets.\n- [django-sql-explorer](https://github.com/groveco/django-sql-explorer) - Share data via SQL queries.\n- [django-tables2](https://github.com/jieter/django-tables2) - HTML tables with pagination/sorting.\n- [django-maintenance-mode](https://github.com/fabiocaccamo/django-maintenance-mode) - Shows a 503 error page when maintenance-mode is on.\n- [django-freeze](https://github.com/fabiocaccamo/django-freeze) - Convert your dynamic django site to a static one with one line of code.\n- [django-nh3](https://github.com/marksweb/django-nh3) - Django integration with for nh3 and is an alternative for django-bleach.\n- [Weblate](https://github.com/WeblateOrg/weblate) - Weblate is a copylefted libre software web-based continuous localization system, used by over 2500 libre projects and companies in more than 165 countries.\n- [Django-Classy-Doc](https://github.com/nanuxbe/django-classy-doc) - Document your own code in the style of CCBV and CDRF.\n\n### Internationalisation (i18n)\n- [django-localflavor](https://github.com/django/django-localflavor) - A collection of functionality that is useful for particular countries or cultures. Previously a part of the Django core.\n- [django-modeltrans](https://github.com/zostera/django-modeltrans) - Translate Django model fields in a JSONField.\n- [django-modeltranslations](https://github.com/deschler/django-modeltranslation) -  Translates Django models using a registration approach.\n- [django-rosetta](https://github.com/mbi/django-rosetta) - Rosetta provides a UI to read and write your project's gettext catalogs within the Django Admin.\n\n### Logging\n- [django-guid](https://github.com/JonasKs/django-guid) - Inject a GUID (Correlation-ID) into every log message in a Django request.\n- [DRF-API-Logger](https://github.com/vishalanandl177/DRF-API-Logger) - An API Logger for your Django Rest Framework project.\n\n### Monitoring\n- [django-prometheus](https://github.com/korfuri/django-prometheus) - Export Django monitoring metrics to Prometheus.\n- [django-mixin](https://github.com/adinhodovic/django-mixin) - Monitoring mixin for Django-prometheus. A set of Grafana dashboards and Prometheus rules for Django.\n\n### Mailing\n- [django-pony-express](https://github.com/ambient-innovation/django-pony-express) - Class-based emails including a test suite for Django.\n- [django-anymail](https://github.com/anymail/django-anymail) - Django email backends and webhooks for Amazon SES, Brevo (Sendinblue), MailerSend, Mailgun, Mailjet, Postmark, Postal, Resend, SendGrid, SparkPost, Unisender Go and more.\n\n### Model Fields\n- [django-any-urlfield](https://github.com/edoburu/django-any-urlfield) - An improved URL selector to choose between internal models and external URLs.\n- [django-colorfield](https://github.com/fabiocaccamo/django-colorfield) - Color field for django models with a nice color-picker widget.\n- [django-model-utils](https://github.com/jazzband/django-model-utils) - Django model mixins and utilities.\n- [django-money](https://github.com/django-money/django-money) - Money fields for forms/models.\n- [django-phonenumber-field](https://github.com/stefanfoulis/django-phonenumber-field) - Model/form field for normalized phone numbers.\n- [django-streamfield](https://github.com/raagin/django-streamfield) - Simple StreamField for plain Django admin (based on Wagtail CMS StreamField idea).\n\n### Models\n- [django-lifecycle](https://github.com/rsinger86/django-lifecycle) - Declarative model lifecycle hooks, an alternative to Signals.\n- [django-mptt](https://github.com/django-mptt/django-mptt) - Modified Preorder Tree Traversal; working with trees of Model instances.\n- [django-taggit](https://github.com/jazzband/django-taggit/) - Simple model tags.\n- [django-reversion](https://github.com/etianen/django-reversion) - Version control for model instances.\n- [django-simple-history](https://github.com/jazzband/django-simple-history) - Store model history and view/revert changes from the admin.\n- [django-polymorphic](https://github.com/django-polymorphic/django-polymorphic) - Django-polymorphic simplifies using inherited models in Django projects.\n- [django-recurrence](https://github.com/django-recurrence/django-recurrence) - Utility for working with recurring dates in Django.\n- [django-treenode](https://github.com/fabiocaccamo/django-treenode) - Abstract model/admin for tree based stuff.\n- [django-auto-prefetch](https://github.com/tolomea/django-auto-prefetch) - Automatically prefetch foreign key values as needed.\n\n### Performance\n- [django-perf-rec](https://cur.at/GHUO6cn?m=web) - Keep detailed records of the performance of your Django code.\n- [New Relic](https://newrelic.com/python/django) - Time middleware, views, and SQL queries.\n- [Scout](https://scoutapm.com/docs/python/django) - Time middleware, template rendering, and SQL queries with automatic N+1 detection.\n- [django-query-profiler](https://github.com/django-query-profiler/django-query-profiler) - Django query profiler to help resolve N+1 queries.\n- [django-silk](https://github.com/jazzband/django-silk) - Live profiling and inspection of HTTP requests and database queries.\n- [py-spy](https://github.com/benfred/py-spy) - Sampling profiler for Python programs.\n- [pyinstrument](https://github.com/joerick/pyinstrument) - Call stack profiler for Python, Django, Flask, FastAPI.\n- [django-zeal](https://github.com/taobojlen/django-zeal) - Detect N+1 queries with user-friendly error messages\n\n### Permissions\n- [django-role-permissions](https://github.com/vintasoftware/django-role-permissions) - Django app for role-based permissions management.\n- [django-guardian](https://github.com/django-guardian/django-guardian) - Per object permissions in Django.\n- [django-rules](https://github.com/dfunckt/django-rules) - A tiny but powerful app providing object-level permissions, built from the ground up for Django.\n\n### Search\n- [django-haystack](https://github.com/django-haystack/django-haystack) - Modular search for Django.\n- [django-watson](https://github.com/etianen/django-watson) - Full-text search plugin.\n- [django-admin-search](https://github.com/shinneider/django-admin-search) - Modal filter for django admin.\n- [django-elasticsearch-dsl](https://github.com/django-es/django-elasticsearch-dsl) - Elasticsearch DSL integration for Django.\n\n### Search Engine Optimisation\n- [django-check-seo](https://github.com/kapt-labs/django-check-seo) - Check SEO of pages.\n\n### Security\n- [django-csp](https://github.com/mozilla/django-csp) - Adds [Content-Security-Policy](http://www.w3.org/TR/CSP/) headers to Django.\n- [django-feature-policy](https://github.com/adamchainz/django-feature-policy) - Set the draft security HTTP header `Feature-Policy` on a Django app.\n- [django-protected-media](https://github.com/cobusc/django-protected-media) - Manages media that are considered sensitive in a protected fashion.\n- [DJ Checkup](https://djcheckup.com) - Runs several checks on your deployed Django site to check for common security mistakes.\n\n### Static Assets\n- [django-storages](https://github.com/jschneier/django-storages) - A single library to support multiple custom storage backends for Django.\n- [django-compressor](https://github.com/django-compressor/django-compressor/) - Compress JavaScript/CSS into a single cached file.\n- [easy-thumbnails](https://github.com/SmileyChris/easy-thumbnails) - Image thumbnails for Django.\n- [whitenoise](https://github.com/evansd/whitenoise) - Simplified static file serving for Python websites.\n\n### Task Queues\n- [beatserver](https://github.com/rajasimon/beatserver) - A periodic task scheduler for Django.\n- [django-q2](https://github.com/django-q2/django-q2) - A multiprocessing distributed task queue for Django.\n- [django-rq](https://github.com/rq/django-rq) - Integration for Redis Queue.\n- [django-redis](https://github.com/niwinz/django-redis) - Full-featured Redis cache backend for Django.\n- [celery](https://github.com/celery/celery) - Robust and broker-agnostic task queues for bigger, performance-focused projects.\n- [flower](https://github.com/mher/flower) - Flower is a web-based tool for monitoring and administrating Celery clusters.\n- [django-celery-beat](https://github.com/celery/django-celery-beat) - A periodic task scheduler with database configured by Django's Admin Panel.\n- [celery-exporter](https://github.com/danihodovic/celery-exporter) - Prometheus & Grafana monitoring of Celery tasks.\n- [django-dramatiq](https://github.com/Bogdanp/django_dramatiq) - Task processing library with a focus on simplicity, reliability, and performance.\n- [django-celery-results](https://github.com/celery/django-celery-results) -  Celery result backend with Django.\n- [django-tasks](https://github.com/realOrangeOne/django-tasks) -  A reference implementation and backport of background workers and tasks in Django, based on [DEP 14](https://www.djangoproject.com/weblog/2024/may/29/django-enhancement-proposal-14-background-workers/).\n\n### Templates\n- [curlylint](https://www.curlylint.org/) - Experimental HTML templates linting for Jinja, Nunjucks, Django templates, Twig, Liquid.\n- [django-components](https://github.com/EmilStenstrom/django-components/) - A way to create simple reusable template components in Django.\n- [django-template-partials](https://github.com/carltongibson/django-template-partials/) - Reusable named inline partials for the Django Template Language.\n- [djhtml](https://github.com/rtts/djhtml) - Django/Jinja template indenter.\n- [djlint](https://www.djlint.com/) - Lint & Format HTML Templates.\n- [slippers](https://mitchel.me/slippers/) - Build reusable components in Django without writing a single line of Python.\n- [JinjaX](https://jinjax.scaletti.dev/) - Super components powers for your Jinja templates.\n- [django-cotton](https://django-cotton.com/) - Goodbye `{% raw %}{%{% endraw %} extends, block, include {% raw %}%}{% endraw %}`, Hello `<c-component />`. Bringing modern UI composition to Django.\n- [htpy](https://htpy.dev/) - htpy is a library that makes writing HTML in plain Python fun and efficient, without a template language.\n\n### Testing\n- [django-debug-toolbar](https://github.com/jazzband/django-debug-toolbar/) - Configurable panels to debug requests/responses.\n- [pytest-django](https://github.com/pytest-dev/pytest-django) - Use pytest features in Django.\n- [django-test-migrations](https://github.com/wemake-services/django-test-migrations) - Test django schema and data migrations, including migrations' order.\n- [django-test-plus](https://github.com/revsys/django-test-plus/) - Useful additions to Django's default TestCase.\n- [factory-boy](https://github.com/FactoryBoy/factory_boy) - Test fixtures replacement.\n- [django-waffle](https://github.com/django-waffle/django-waffle) - A feature flipper for Django.\n- [model-bakery](https://github.com/model-bakers/model_bakery) - Object factory for Django (rename of legacy Model Mommy project).\n- [django-fakery](https://github.com/fcurella/django-fakery) - An easy-to-use implementation of Creation Methods for Django, backed by Faker.\n- [drf-openapi-tester](https://github.com/snok/drf-openapi-tester) - Django test utility for validating Swagger 2.0 and OpenAPI 3.0 documentation.\n- [django-google-optimize](https://github.com/adinhodovic/django-google-optimize) - Django application designed to make running server side Google Optimize A/B tests easy.\n- [django-pattern-library](https://github.com/torchbox/django-pattern-library) - Pattern library generator for Django templates, to help testing of UI components.\n- [storybook-django](https://github.com/torchbox/storybook-django) - Develop Django UI components in isolation, with Storybook.\n\n### URLs\n- [dj-database-url](https://github.com/jacobian/dj-database-url) - Database URLs.\n- [urlman](https://github.com/andrewgodwin/urlman) - A nicer way to do URLs for Django models.\n- [django-robots](https://github.com/jazzband/django-robots) - This is a basic Django application to manage robots.txt files following the robots exclusion protocol, complementing the Django Sitemap contrib app.\n- [django-redirects](https://github.com/fabiocaccamo/django-redirects) - Redirects as they should be, with full control.\n\n### Users\n- [django-allauth](https://github.com/pennersr/django-allauth/) - Improved user registration including social auth.\n- [django-allauth-ui](https://github.com/danihodovic/django-allauth-ui/) - Better looking templates for django-allauth.\n- [django-improved-user](https://github.com/jambonsw/django-improved-user) - A custom Django user that authenticates via email. Follows identity and authentication best practices.\n- [django-organizations](https://github.com/bennylope/django-organizations/) - Multi-user accounts for Django projects.\n- [django-cas-ng](https://github.com/django-cas-ng/django-cas-ng) - Django-cas-ng is Django CAS (Central Authentication Service) 1.0/2.0/3.0 client library to support SSO (Single Sign On) and Single Logout (SLO).\n- [django-guest-user](https://github.com/julianwachholz/django-guest-user) - Allow visitors to use your site like a regular user and register later.\n\n### Views\n- [django-braces](https://github.com/brack3t/django-braces) - Reusable, generic mixins.\n- [django-easy-audit](https://github.com/soynatan/django-easy-audit) - Keep track of user actions.\n- [django-extra-views](https://github.com/AndrewIngram/django-extra-views) - Extra class-based generic views.\n- [django-vanilla-views](https://github.com/tomchristie/django-vanilla-views) - Simpler class-based views in Django.\n- [django-stronghold](https://github.com/mgrouchy/django-stronghold) - Makes all your Django views default login_required.\n- [neapolitan](https://github.com/carltongibson/neapolitan) - Quick CRUD views for Django.\n\n## Python Packages\n\n_A short list of Python packages that work well with Django._\n\n- [bleach](https://github.com/mozilla/bleach) - Sanitize your inputs/forms.\n- [black](https://github.com/psf/black) - Uncompromising Python code formatter.\n- [coveragepy](https://github.com/nedbat/coveragepy) - Code coverage measurement.\n- [faker](https://github.com/joke2k/faker) - Faker is a Python package that generates fake data for you.\n- [huey](https://github.com/coleifer/huey) - A little task queue for Python.\n- [nplusone](https://github.com/jmcarp/nplusone) - Auto-detect n+1 queries.\n- [pillow](https://github.com/python-pillow/Pillow) - Python Imaging Library.\n- [pytest](https://github.com/pytest-dev/pytest/) - Testing framework.\n- [python-decouple](https://github.com/henriquebastos/python-decouple) - Strict separation of settings from code.\n- [python-slugify](https://github.com/un33k/python-slugify) - Returns unicode slugs.\n- [sentry-python](https://github.com/getsentry/sentry-python) - Error reporting SDK.\n- [python-socketio](https://github.com/miguelgrinberg/python-socketio) - Python implementation of the Socket.IO_ realtime client and server. [(create Socket.io Django server instance)](https://python-socketio.readthedocs.io/en/latest/server.html?highlight=django#creating-a-server-instance)\n- [Ruff](https://github.com/astral-sh/ruff) - An extremely fast Python linter and code formatter, written in Rust.\n\n## Resources\n\n### Official Resources\n<!--lint ignore double-link-->\n- [Project Website](https://www.djangoproject.com/) - Official Django website.\n- [Documentation](https://docs.djangoproject.com/en/dev/) - Comprehensive documentation for all Django versions.\n- [Polls Tutorial](https://docs.djangoproject.com/en/dev/intro/tutorial01/) - Build a polls tutorial while learning Django internals.\n- [Source Code](https://github.com/django/django/) - Hosted on GitHub.\n\n### Educational\n- [Django Girls Tutorial](https://tutorial.djangogirls.org/en/) - Use function-based views to build a blog app.\n- [LearnDjango](https://learndjango.com/) - Tutorials and premium courses on Django and Django REST Framework.\n- [Adam Johnson](https://adamj.eu/tech/) - Adam is on the Technical Board of Django and regularly writes tutorials.\n- [Photon Designer - Django tutorials](https://photondesigner.com/articles) - Django tutorials by Tom Dekan on how to build Django apps simply - from how to build an instant messenger with Django, add instant search, to using Google Drive as a database. Updated regularly.  \n- [TestDriven](https://testdriven.io/blog/) - Multiple Django-specific tutorials on topics like Docker, payments, and more.\n- [Classy Class-Based Views](https://ccbv.co.uk/) - Detailed descriptions of methods/properties/attributes for each generic class-based view.\n- [Classy Django Forms](https://github.com/ana-balica/classy-django-forms) - Detailed descriptions of methods/properties/attributes for each form class.\n- [Classy Django REST Framework](http://www.cdrf.co) - Detailed descriptions with methods/attributes for DRF class-based views and serializers.\n- [Simple is Better than Complex](https://simpleisbetterthancomplex.com/) - Regularly updated website with many tutorials and tips on Django.\n- [Full Stack Python's Django Page](https://www.fullstackpython.com/django.html) - Explanation of Django philosophy and links to other resources and tutorials.\n- [RealPython](https://realpython.com/tutorials/django/) - Many high-quality tutorials on Django.\n- [Mozilla Tutorial](https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django) - Create a lending library app.\n- [Matt Layman](https://www.mattlayman.com) - Regular tutorials and deep-dives on Django topics.\n- [Django Styleguide](https://github.com/HackSoftware/Django-Styleguide) - Styleguide for Django with best practices and examples.\n- [Django Template Tags and Filters](https://www.djangotemplatetagsandfilters.com/) - Additional docs on Django's 57 built-in template filters and 27 template tags.\n- [Django for Everybody](https://www.dj4e.com/) - A complete course for webdev beginners focused on Django.\n- [CS50W](https://cs50.harvard.edu/web/2020/) - Harvard's University introductory course to web development, it explains Django as backend framework.\n\n### Community\n<!--lint disable double-link-->\n- [Django Forum](https://forum.djangoproject.com/) - Official Discourse board.\n- [Community Page](https://www.djangoproject.com/community/) - Featuring feeds of Community Blog Posts, Jobs, and more.\n- [Local Django Communities Page](https://www.djangoproject.com/community/local/) - Featuring local events all around the world.\n- [Django Users Google Group](https://groups.google.com/forum/#!forum/django-users/) - Very active discussion board for questions/answers.\n- [Developers Google Group](https://groups.google.com/forum/#!forum/django-developers/) - For contributions to Django itself only.\n- [Mastodon](https://fosstodon.org/@django) - For official announcements on updates, security fixes, etc.\n- [X (formerly Twitter)](https://x.com/djangoproject/) - For official announcements on updates, security fixes, etc.\n- [Discord Server](https://discord.com/invite/xcRH6mN4fa) - Django Discord Community.\n- IRC Channel - Chat with other Django users at irc://irc.freenode.net/django.\n- [Djangonaut Space](https://djangonaut.space) - Free peer-mentoring program for the Django community to launch people into the universe of open source contributions.\n<!--lint enable double-link-->\n\n### Conferences\n\n- [DjangoCon US](https://djangocon.us/) ([YouTube Channel](https://www.youtube.com/channel/UC0yY6a79pPY9J0ShIHRf6yw))\n- [DjangoCon Europe](https://djangocon.eu/) ([YouTube Channel](https://www.youtube.com/user/djangoconeurope))\n- [DjangoCon AU](https://djangocon.com.au/)\n- [DjangoCon Africa](https://djangocon.africa/)\n- [Django Day Copenhagen](https://djangoday.dk/) ([YouTube Channel](https://www.youtube.com/@djangodanmark))\n- [PyCon US](https://us.pycon.org/) ([YouTube Channel](https://www.youtube.com/channel/UCsX05-2sVSH7Nx3zuk3NYuQ))\n- [PyCon Australia](https://pycon-au.org/) ([YouTube Channel](https://www.youtube.com/user/PyConAU))\n- [Euro Python](https://europython.eu/) ([YouTube Channel](https://www.youtube.com/user/PythonItalia))\n- [Django Under the Hood](https://www.youtube.com/channel/UC9T1dhIlL_8Va9DxvKRowBw/videos)\n- [DjangoCongress JP](https://djangocongress.jp/) ([YouTube Channel](https://www.youtube.com/@djangocongressjp3623))\n- [Complete listing of all PyCons globally](https://pycon.org)\n\n### Job Boards\n\n- [Django News Jobs](https://jobs.django-news.com/) - A Django job board that also aggregates other job boards.\n- [Django Gigs](https://djangogigs.com) - This platform caters specifically to freelance and full-time Django developers.\n- [Django Jobs](https://djangojobs.net) - Django jobs posting for hiring Django Python developers.\n- [Python.org Job Boards](https://www.python.org/jobs/) - While not exclusively for Django, this job board is hosted by the official Python website and features a range of Python and Django-related job opportunities.\n\n### Newsletters\n\n- [Django News](https://django-news.com) - Weekly newsletter on announcements, articles, projects, and talks.\n\n### Podcasts\n\n- [Django Chat](https://djangochat.com/) - A weekly podcast from William Vincent and Django Fellow Carlton Gibson with discussions of core Django concepts and regular guests.\n- [Django Riffs](https://djangoriffs.com) - A new podcast from Matt Layman.\n- [Running in Production](https://runninginproduction.com/tags/django) - Focused on tech stacks with many episodes specifically on Django.\n- [TalkPython](https://talkpython.fm/) - The leading Python podcast with several episodes on Django.\n- [Podcast Init](https://www.pythonpodcast.com/) - A popular Python podcast that features Django guests on occasion.\n\n### Videos\n\n- [DjangoTV](https://djangotv.com) - Your source for Django conference videos and tutorials.\n- [PyVideo](https://pyvideo.org) - PyVideo is an index of Python related media.\n\n### Books\nFor a complete listing of in-print books check out [DjangoBook.com](https://djangobook.com/).\n\n_Django 5_\n- [Boost Your Django DX](https://adamchainz.gumroad.com/l/byddx)\n- [Django 5 By Example](https://www.packtpub.com/en-us/product/django-5-by-example-9781805125457)\n- [Django in Action](https://www.manning.com/books/django-in-action)\n- [Django for Beginners, Fifth Edition](https://djangoforbeginners.com/)\n\n_Django 4_\n- [Django for APIs: Build web APIs with Python and Django](https://djangoforapis.com/)\n- [Django for Professionals: Production websites with Python and Django](https://djangoforprofessionals.com/)\n- [Understand Django: An Exploration of the Django Web Framework](https://www.mattlayman.com/understand-django/)\n\n_Django 3_\n- [Speed Up Your Django Tests](https://adamj.eu/tech/2020/05/04/new-book-speed-up-your-django-tests/)\n- [Two Scoops of Django 3.x: Best Practices for the Django Web Framework](https://www.feldroy.com/books/two-scoops-of-django-3-x)\n- [A Wedge of Django: Covers Python 3.8 and Django 3.x](https://www.feldroy.com/books/a-wedge-of-django)\n\n## Hosting\n\n### PaaS (Platforms-as-a-Service)\n- [Appliku](https://appliku.com)\n- [Dokku](https://dokku.com)\n- [Divio](https://www.divio.com)\n- [Fly](https://fly.io)\n- [Google Cloud](https://cloud.google.com/python/django/)\n- [Heroku](https://www.heroku.com)\n- [Microsoft Azure](https://azure.microsoft.com/en-us/develop/python/)\n- [Piku](https://github.com/piku/piku)\n- [Platform.sh](https://platform.sh)\n- [PythonAnywhere](https://www.pythonanywhere.com)\n- [Railway](https://railway.app)\n- [Render](https://render.com)\n- [Vercel](https://vercel.com/home)\n\n### IaaS (Infrastructure-as-a-Service)\n- [Digital Ocean](https://www.digitalocean.com)\n- [Linode](https://www.linode.com)\n- [Amazon Lightsail](https://aws.amazon.com/lightsail/)\n- [Hetzner](https://www.hetzner.com)\n\n## Projects\n\n### Boilerplate\n- [cookiecutter-django](https://github.com/pydanny/cookiecutter-django/) - A full-bodied starter project, highly customizable.\n- [django-base-site](https://github.com/epicserve/django-base-site/) - A Django site with many common third-party packages pre-installed.\n- [djangox](https://github.com/wsvincent/djangox/) - Batteries included starter project for Pip, Pipenv, or Docker.\n- [DRFx](https://github.com/wsvincent/drfx/) - A DRF starter with user auth, Pipenv, and other goodies.\n- [django-project-template](https://github.com/jpadilla/django-project-template) - A deliberately basic project that has multiple staging environments and Heroku deployment config.\n- [django-docker-template](https://github.com/amerkurev/django-docker-template) - Dockerized Django with Postgres, Gunicorn, and Traefik (with auto renew Let's Encrypt).\n- [django-startproject](https://github.com/jefftriplett/django-startproject) - Django start project template with batteries.\n- [wemake-django-template](https://github.com/wemake-services/wemake-django-template/) - Bleeding edge Django template focused on code quality and security.\n- [django-webpack-starter](https://github.com/khadegd/django-webpack-starter) - Django Webpack starter template for using Webpack 4.\n- [sos-django-template](https://github.com/erayerdin/sos-django-template) - Django starter template with separate dev and production settings.\n- [django-docker-heroku-template](https://github.com/bfirsh/django-docker-heroku-template) - A template with Docker, GitHub Actions, and Heroku set up for dev/test/prod, plus various other best practices.\n- [cookiecutter-vue-django](https://github.com/ilikerobots/cookiecutter-vue-django) - Django + Vue starter project fusing Vue SFCs & Django Templates.\n- [launchr](https://github.com/jayfk/launchr) - Launchr is a specialized Django starter template for SaaS web apps.\n- [sidewinder](https://github.com/stribny/sidewinder/) - A Django starter kit that focuses on good defaults, developer experience, and deployment.\n- [Falco](https://github.com/tobi-de/falco) - Enhance your Django developer experience: CLI and Guides for the Modern Django Developer.\n- [Blaze.horse](https://github.com/piepworks/blaze-starter) - A Django starter kit with reins and saddle included!\n\n### Open Source Projects\n- [Blog app with users and forms](https://github.com/wsvincent/djangoforbeginners/tree/master/ch7-blog-app-with-users/)\n- [Newspaper app with custom user model, full user auth](https://github.com/wsvincent/djangoforbeginners/tree/master/ch15-comments)\n- [pythonic-news](https://github.com/sebst/pythonic-news) - Hacker News clone.\n- [Behavior-Driven Development with Aloe](https://github.com/testdrivenio/django-aloe-bdd/)\n- [Image Sharing Blog](https://github.com/MeNsaaH/soMedia)\n- [Bootcamp: An enterprise social network](https://github.com/vitorfs/bootcamp)\n- [Zulip](https://github.com/zulip/zulip/) - Open-source team chat.\n- [Django-CRM](https://github.com/MicroPyramid/Django-CRM/) - Open Source Python CRM based on Django.\n- [django-job-portal](https://github.com/manjurulhoque/django-job-portal) - Job portal application using Django.\n- [Built with Django](https://builtwithdjango.com) - Curated list of awesome Django projects.\n- [PostHog](https://github.com/PostHog/posthog) - Open-source product analytics.\n- [HyperKitty](https://gitlab.com/mailman/hyperkitty) - A web interface to access GNU Mailman v3 archives.\n- [Healthchecks](https://github.com/healthchecks/healthchecks) - A Cron Monitoring Tool written in Python & Django.\n- [Flagsmith](https://github.com/Flagsmith/flagsmith) - Open-source Feature Flagging, Remote Config, and AB testing.\n- [OpenContracts](https://github.com/JSv4/OpenContracts) - Enterprise-grade document analytics platform that combines automated PDF parsing, vector embeddings, and LLM integration.\n- [Baserow](https://gitlab.com/baserow/baserow) - Open source no-code database and Airtable alternative built with Django and Vue.js.\n- [Django CRM Admin](https://github.com/DjangoCRM/django-crm) - Open source Python CRM built entirely on Django Admin Site.\n\n## Django REST Framework\n\n_The most popular way to build web APIs with Django._\n\n### DRF Resources\n\n<!--lint disable double-link-->\n- [Official Documentation](https://www.django-rest-framework.org/)\n- [DRF Source Code](https://github.com/encode/django-rest-framework)\n- [awesome-django-rest-framework](https://github.com/nioperas06/awesome-django-rest-framework)\n<!--lint enable double-link-->\n\n### DRF Tutorials\n\n<!--lint ignore double-link-->\n- [Official REST Framework - A Beginner's Guide](https://learndjango.com/tutorials/official-django-rest-framework-tutorial-beginners)\n- [Building APIs with Django and DRF](https://books.agiliq.com/projects/django-api-polls-tutorial/en/latest/)\n- [DRF with React](https://www.valentinog.com/blog/drf/)\n- [Making React and Django play well together](https://fractalideas.com/blog/making-react-and-django-play-well-together/)\n\n## Wagtail\n\n_Wagtail, the powerful CMS for modern websites._\n\n### Wagtail Resources\n<!--lint disable double-link-->\n- [Official website](https://wagtail.org/)\n- [Developer documentation](https://docs.wagtail.org/en/stable/)\n- [User documentation](https://guide.wagtail.org/en-latest/)\n- [Wagtail Source Code](https://github.com/wagtail/wagtail/)\n- [awesome-wagtail](https://github.com/springload/awesome-wagtail)\n- [This week in Wagtail](https://wagtail.org/this-week-in-wagtail/) - A (most) weekly email with updates from the Wagtail core team.\n- [Wagtail Space](https://www.wagtail.space/) - Wagtail conferences around the world.\n- [Wagtail events](https://wagtail.org/events/) - Online and in-person Wagtail events.\n<!--lint enable double-link-->\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 4.0126953125,
          "content": "title: Awesome Django\nemail: your-email@example.com\ndescription: >-\n  A curated list of awesome things related to Django. Maintained by\n  William Vincent and Jeff Triplett\nbaseurl: \"\"\nurl: \"https://awesomedjango.org\"\n\n# Build settings\nmarkdown: kramdown\nremote_theme: pmarsceill/just-the-docs\nplugins:\n  - jekyll-feed\n  - jekyll-optional-front-matter\n  - jekyll-seo-tag\ninclude:\n  - \"_projects\"\n  - README.md\nexclude:\n  - \"*.md\"\n  - \"*.py\"\n  - docker*\n  - Gemfile*\n  - justfile\n  - LICENSE\n  - Makefile\n  - modd.conf\n  - node_modules\n  - package*.json\n  - requirements.*\n  - scripts\n  - src\n  - vendor\ndefaults:\n  - scope:\n      path: \"\" # an empty string here means all files in the project\n    values:\n      layout: \"default\"\n  - scope:\n      path: \"README.md\"\n    values:\n      permalink: \"/\"\n      layout: \"default\"\n\ncollections:  # process the _data folder\n  projects:\n    output: false\n    permalink: /:collection/:name/\n\naux_links:\n  \"Awesome Django on GitHub\":\n    - \"//github.com/wsvincent/awesome-django\"\n\n# Makes Aux links open in a new tab. Default is false\naux_links_new_tab: false\n\ncolor_scheme: django\n# color_scheme: light\n\nheading_anchors: true\n\nfooter_content: >-\n  <iframe src=\"https://django-news.com/embed?color1=ffffff&color2=092e20&color_bg_button=092e20&color_border=ccc&color_button=ffffff&color_links=979797&color_terms=808080&title=Subscribe+to+Django+News\" width=\"450\" height=\"310\" frameborder=\"0\" style=\"max-width: 100%\"></iframe>\n\n  <p>Please consider supporting Django by making a donation to the\n  <a rel=\"sponsored\" href=\"https://www.djangoproject.com/fundraising/\">Django Software Foundation</a>,\n  sponsoring via <a rel=\"sponsored\" href=\"https://github.com/sponsors/django\">GitHub Sponsors</a>,\n  or buying <a rel=\"sponsored\" href=\"https://django.threadless.com/\">official merchandise</a>.</p>\n\n  <p>Awesome Django is not associated with the Django Software Foundation.<br>\n  Django is a registered trademark of the Django Software Foundation.</p>\n\n# Footer last edited timestamp\nlast_edit_timestamp: true # show or hide edit time - page must have `last_modified_date` defined in the frontmatter\nlast_edit_time_format: \"%b %e %Y at %I:%M %p\" # uses ruby's time format: https://ruby-doc.org/stdlib-2.7.0/libdoc/time/rdoc/Time.html\n\n# Footer \"Edit this page on GitHub\" link text\ngh_edit_link: true # show or hide edit this page link\ngh_edit_link_text: \"Edit this page on GitHub.\"\ngh_edit_repository: \"https://github.com/wsvincent/awesome-django\" # the github URL for your repo\ngh_edit_branch: \"main\" # the branch that your docs is served from\n# gh_edit_source: docs # the source that your files originate from\ngh_edit_view_mode: \"tree\" # \"tree\" or \"edit\" if you want the user to jump into the editor immediately\n\n\nsearch_enabled: false\n\nsearch:\n  # Split pages into sections that can be searched individually\n  # Supports 1 - 6, default: 2\n  heading_level: 2\n  # Maximum amount of previews per search result\n  # Default: 3\n  previews: 3\n  # Maximum amount of words to display before a matched word in the preview\n  # Default: 5\n  preview_words_before: 5\n  # Maximum amount of words to display after a matched word in the preview\n  # Default: 10\n  preview_words_after: 10\n  # Set the search token separator\n  # Default: /[\\s\\-/]+/\n  # Example: enable support for hyphenated search words\n  tokenizer_separator: /[\\s/]+/\n  # Display the relative url in search results\n  # Supports true (default) or false\n  rel_url: true\n  # Enable or disable the search button that appears in the bottom right corner of every page\n  # Supports true or false (default)\n  button: false\n\n\nnav_external_links:\n  - title: Third-Party Packages\n    url: \"#third-party-packages\"\n    hide_icon: true\n  - title: Python Packages\n    url: \"#python-packages\"\n    hide_icon: true\n  - title: Resources\n    url: \"#resources\"\n    hide_icon: true\n  - title: Hosting\n    url: \"#hosting\"\n    hide_icon: true\n  - title: Projects\n    url: \"#projects\"\n    hide_icon: true\n  - title: Django REST Framework\n    url: \"#django-rest-framework\"\n    hide_icon: true\n  - title: Wagtail\n    url: \"#wagtail\"\n    hide_icon: true\n"
        },
        {
          "name": "_includes",
          "type": "tree",
          "content": null
        },
        {
          "name": "_sass",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose.yml",
          "type": "blob",
          "size": 0.509765625,
          "content": "services:\n\n  devd:\n    image: ghcr.io/jefftriplett/devd:latest\n    command: --livewatch\n    expose:\n      - 8000\n    init: true\n    ports:\n      - 8000:8000\n    volumes:\n      - .:/srv/jekyll\n\n  jekyll:\n    image: jekyll/jekyll:latest\n    command: jekyll serve --drafts --force_polling --watch --port 4000\n    environment:\n      - BUNDLE_PATH=/usr/local/bundle\n    expose:\n      - 4000\n    init: true\n    ports:\n      - 4000:4000\n    volumes:\n      - .:/srv/jekyll:cached\n      - ./.vendor/bundle:/usr/local/bundle:cached\n"
        },
        {
          "name": "contributing.md",
          "type": "blob",
          "size": 0.7529296875,
          "content": "# Contribution Guidelines\n\nContributions are welcome! Please note that Will and Jeff work on this as a benefit to the Django community. It is based on our own personal, biased thoughts.\n\nIf you disagree with choices made, you are welcome to fork this repo and create/maintain your own list of awesome Django resources if you disagree with choices I've made.\n\nThat said, we will review any and all contributions. Here's the process:\n\n1. Make an individual pull request for each suggestion and include a reason why it is awesome.\n2. To be fair, the order is first-come-first-serve so unless a section is alphabetical, add the item at the end.\n3. If you think something belongs in the wrong category, or think there needs to be a new category, feel free to edit things too.\n"
        },
        {
          "name": "justfile",
          "type": "blob",
          "size": 0.5947265625,
          "content": "@_default:\n    just --list\n\n@alex:\n\tbunx alex README.md\n\n@bootstrap:\n    python -m pip install --upgrade pip uv\n    uv pip install --upgrade --requirement pyproject.toml\n\n@build:\n    just doctoc\n    bundle exec jekyll build\n\n@doctoc:\n    bunx doctoc README.md\n\n@down:\n    docker compose down\n\n@lint *ARGS:\n    # -uv --quiet tool run curlylint _layouts/\n    # -bunx awesome-lint README.md\n    uv tool run --with pre-commit-uv pre-commit run {{ ARGS }} --all-files\n\n@serve:\n    # modd --file=modd.conf\n    just up \"\"\n\n@start *ARGS=\"--detach\":\n    just up {{ ARGS }}\n\n@up *ARGS:\n    docker compose up {{ ARGS }}\n"
        },
        {
          "name": "modd.conf",
          "type": "blob",
          "size": 0.306640625,
          "content": "{\n\t# prep: \"killall ruby\"\n\tdaemon +sigterm: \"bundle exec jekyll serve --drafts --watch --port 4000\"\n}\n\n# DEVD proxy with livereload listening on port 8000\n\n**/*.css\n**/*.html\n**/*.js\n!src/**\n{\n    daemon: \"devd --modd -l http://localhost:4000\"\n}\n\n# src/*.css\n# src/*.js\n# {\n#     prep +onchange: \"just static\"\n# }\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.359375,
          "content": "[project]\nname = \"awesome-django\"\nversion = \"0.1.0\"\ndescription = \"A curated list of awesome things related to Django. Maintained by [Will Vincent](https://github.com/wsvincent) and [Jeff Triplett](https://github.com/jefftriplett).\"\nreadme = \"README.md\"\nrequires-python = \">=3.12\"\ndependencies = [\n  \"mkdocs\",\n  \"mkdocs-material\",\n  \"requests\",\n  \"rich\",\n  \"typer\",\n]\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}