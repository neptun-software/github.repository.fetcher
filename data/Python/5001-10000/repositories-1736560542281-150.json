{
  "metadata": {
    "timestamp": 1736560542281,
    "page": 150,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dylanaraps/pywal",
      "stars": 8491,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.083984375,
          "content": "dist/*\npywal.egg-info/*\n*.pyc\nsubprocess\nre\nbuild/*\n.coverage\n.vscode/*\n__pycache__/*\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 0.5322265625,
          "content": "[BASIC]\ngood-names=i,j,k,n,x,y,fg,bg,r,g,b,i3,r1,r2,r3,g1,g2,g3,b1,b2,b3,h,s,v,l\n\n[MESSAGES CONTROL]\n# inconsistent-return-statements:\n#   Disabled as it's a false-positive and a bug in pylint.\n# too-many-branches:\n#   Disabled as it's a non-issue and only occurs in the\n#   process_args() function.\n# too-many-statements:\n#   Disabled as it's a non-issue and only occurs in the\n#   process_args() function.\ndisable=inconsistent-return-statements,too-many-branches,too-many-statements,too-many-return-statements\n\n[SIMILARITIES]\nignore-imports=y\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.5078125,
          "content": "language: python\nos: linux\ndist: xenial\nsudo: true\n\nmatrix:\n    include:\n        - python: 3.5\n        - python: 3.6\n        # - python: 3.7\n        #   dist: xenial\n        #   sudo: true\n\nbefore_install:\n    - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then sudo apt-get -qq update; fi\n    - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then sudo apt-get install -y imagemagick; fi\n\ninstall:\n    - pip install flake8 pylint\n\nscript:\n    - flake8 pywal tests setup.py\n    - pylint pywal tests setup.py\n    - python setup.py test\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 23.0439453125,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)\nand this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n\n## [3.1.0] - 2018-06-21\n\n- Added `--saturate` to change color saturation.\n    - Takes a float as its value: `0.0` to `1.0`.\n- Added `vim` output file.\n- Fixed `LS_COLORS` issue.\n- Fixed issues in iTerm2 on macOS.\n- Fixed hang caused by `imagemagick`.\n- Fixed issue with `-i` and transparency.\n\n\n## [3.0.1] - 2018-05-27\n\n- Added Tempus themes.\n- Added `LS_COLORS` to `colors.sh` to fix color issues.\n- Compressed all theme files.\n- Donâ€™t print directory of image used.\n- Fixed alpha value not persisting with `wal -R`.\n- Fixed vim-airline theme when used with light color-schemes.\n\n\n## [3.0.0] - 2018-05-06\n\nPywal now has **250** included themes! If there are any other themes\nyou'd like to see added. Open an issue.\n\n- Added all of @dkeg's themes.\n- Added all themes from [terminal.sexy](https://terminal.sexy)\n- Themes are now split between `light` and `dark`.\n    - Local themes now need to be put into `~/.config/wal/colorschemes/{light,dark}`.\n- Added `unity` wallpaper support.\n\n## [2.1.0] - 2018-04-29\n\n- Added all `base16` themes to `pywal`. @metalelf0\n- Added `--iterative` to iterate over a directory in order (*instead of random*).\n- Fix minor theme issue in `rofi`. @esp10mm\n- Fix some conflicting arguments.\n- Fixed bug causing nested directory structure.\n- Fixed bug where the configuration directory wouldn't be created early enough.\n- Fixed missing color in `st` cache file. @jameh\n- Limit color palette width in output.\n- Removed `-nocpp` from `xrdb` call.\n\n\n## [2.0.5] - 2018-04-05\n\n- Fixed crash when using `--theme` on Python `3.5`.\n\n## [2.0.4] - 2018-04-03\n\n- Fixed cursor color\n- Made output prettier\n\n## [2.0.3] - 2018-04-02\n\n-  args: Fixed bug where `--backend` wouldn't work.\n\n## [2.0.2] - 2018-04-02\n\n- Fixed bug where `wal -R` wouldn't work.\n- Various cleanup and refactoring.\n- Proper arg handling for `-R`, `-i` and `--theme`.\n\n## [2.0.1] - 2018-04-01\n\n- Fixed a bug where `pywal` wasn't updating files.\n- Fixed a bug where `pywal` would crash if you tried to redirect it's output.\n\n## [2.0.0] - 2018-04-01\n\nThis is a big release and I've probably broken something. Expect a minor release or two to fix any bugs that arise. ~~Users of `wpgtk` I recommend not updating `pywal` until @deviantfero adds support for the new release.~~ `wpgtk` is now supported.\n\nIt's going to take me some time to update the documentation (*I've got a total rewrite planned*). Bear with me.\n\n## General\n\n\n- xrdb: Added missing `background` and `foreground` values.\n- image: Fixed crash when using light themes and gifs.\n- args: Added `-t` to disable `pywal` in ttys.\n- args: `-R` now works with theme files.\n- sequences: Save sequence file with `-s`. @Amar1729\n- misc: Added proper logging to `pywal`.\n- misc: Added palette to console output.\n- misc: Added colors/bold to console output.\n\n\n## Backends\n\n`pywal` now has support for different color generation backends. In addition to `pywal`'s default color generation, support was added for:\n\n- `schemer2`: https://github.com/thefryscorer/schemer2\n- `colorthief`: https://github.com/fengsp/color-thief-py\n- `colorz`: https://github.com/metakirby5/colorz\n- `haishoku`: https://github.com/LanceGin/haishoku\n\nUsage:\n\n- `wal --backend` lists all available backends.\n- `wal --backend colorz -i img.jpg` sets the backend.\n- `wal --backend random` uses a backend at random.\n\nIf you know of any other color generation programs let me know and I'll see if I can add backends for them.\n\n\n## Themes\n\nYou can now store colorschemes in files and manage them using `pywal`. There are a bunch of colorschemes included with `pywal` and I will happily accept PRs to add more.\n\n- `wal --theme` lists all available built-in themes.\n- `wal --theme theme-name` applies a theme.\n- `wal --theme random` applies a theme at random.\n- Themes can be added locally at `~/.config/wal/colorschemes`.\n- `wal --theme` can be used with colorschemes exported in `json` format from https://terminal.sexy/.\n` wal --theme /path/to/file` loads a scheme from a file.\n\n## [1.3.3] - 2018-03-03\n\n- rofi: Added colon to template.\n- tty.sh: Cleanup.\n- sequences: Fixed terminal highlight colors.\n- templates: Added octal color format. @MitchWeaver\n- macOS: Fixed error with `.DS_Store` files. @blahsd\n- macOS: Disabled travis (*It's really broken*)\n\n\n## [1.3.2] - 2018-02-04\n\n- Fixed comment colors not being a shade of grey.\n- Added version to cache files.\n- Removed broken notifications.\n\n## [1.3.0] - 2018-02-03\n\n- Added light colorscheme support.\n    - Use `-l` to generate a light scheme.\n    - You can use `wal -R -l` (swap to light) and `wal -R` (swap to dark) to swap between light and dark.\n\n![scrot](https://i.imgur.com/VFzC7Vc.jpg)\n\n## [1.2.3] - 2018-02-01\n\n- Fixed typo in help. @gillescastel\n- Scheme files are now versioned.\n- Changed rofi theme to use the new `rasi` format.\n    - New instructions: https://github.com/dylanaraps/pywal/wiki/Customization#rofi\n- Added light/dark themes for rofi.\n- Oomox is now **off** by default.\n    - `-g` now enables oomox.\n\n## [1.2.2] - 2018-01-09\n\n- Added `-g` to skip generating a theme with `oomox`.\n\n## [1.2.1] - 2018-01-08\n\nRemember to use wal -c after every release.\n\n- reload: Call oomox last so it doesn't block.\n\n## [1.2.0] - 2018-01-08\n\nRemember to use wal -c after every release.\n\n- Added support for `oomox`.\n    - See: https://github.com/dylanaraps/pywal/wiki/Customization#gtk2gtk3\n- Removed support for `flatabulous-wal`.\n\n## [1.1.2] - 2018-01-07\n\nRemember to use `wal -c` after every release.\n\n- fixed bug related to palette sorting.\n- use color blending to create a better white.\n\n## [1.1.1] - 2018-01-06\n\nreload: Fixed permissions error.\n\n## [1.1.0] - 2018-01-03\n\n**general**\n\n- Added support for changing colors in linux `ttys`.\n- Fixed bug with transparency in urxvt.\n- Added `imagemagick display` as a wallpaper setter fallback.\n\n**api**\n\n- Added missing export options.\n\n**misc**\n\n- Code cleanup.\n- Minor optimizations.\n\n## [1.0.4] - 2017-12-31\n\n- reload: Fixed issue with rofi.\n- reload: Speed up `xrdb` by using `-nocpp`\n\n## [1.0.3] - 2017-12-31\n\n- shuffle: Better error handling\n- export: Added missing rofi option.\n\n## [1.0.2] - 2017-12-29\n\n- Add back `-r` for compatibility with `wpgtk`.\n    - It's still deprecated.\n    - An error message is still displayed.\n\n## [1.0.1] - 2017-12-29\n\n- colors: Improve background contrast.\n- colors: Improve forground brightness and contrast.\n- general: Fix `pywal` causing pc beeps.\n\n## [1.0.0] - 2017-12-27\n\n\\[[Installation](https://github.com/dylanaraps/pywal/wiki/Installation)\\] \\[[Getting Started](https://github.com/dylanaraps/pywal/wiki/Getting-Started)\\] \\[[Customization](https://github.com/dylanaraps/pywal/wiki/Customization)\\] \\[[Wiki](https://github.com/dylanaraps/pywal/wiki)\\]\n\n\nThis release of `pywal` contains some large changes and may very well break things for some users. Expect bugs and expect additional releases to fix them. The version has been bumped to `1.0.0` as I'm now happy with where `pywal` is feature-wise.\n\nThe goal for the future is improving the schemes that `pywal` generates. Feel free to send me your wallpapers that generate subpar schemes and I'll use them in my testing data.\n\n\n### Removal of `-r`\n\nThe flag `-r` was removed as it was basically a glorified `cat` of the `sequences` file with **300ms** of python overhead. The new recommended way to load the schemes is to replace `wal -r` with `cat ~/.cache/wal/sequences`.\n\n\n### Removal of `-t`\n\nYup! The `-t` flag to fix garbage in VTE terminals (termite, xfce4-terminal, gnome-terminal) is no longer needed. I've come up with a workaround that really **shouldn't work** but does. Â¯\\\\\\_(ãƒ„)_/Â¯\n\nThe problem: The sequence  `\\033[708;#000000\\007` is unsupported by VTE and VTE's sequence parsing doesn't hide unknown sequences, instead it just displays them as plain text. We can't add an if statement or a check for VTE terminals as we're writing to each terminal via it's file descriptor. The only thing that is interpreted is escape sequences.\n\nThe workaround: The problem sequence is wrapped in a series of other escape sequences so that the unsupported sequence isn't echo'd to the terminal.\n\nHow it works:\n\n```\n# \\0337                # Save cursor position.\n# \\033[1000H           # Move the cursor off screen.\n# \\033[8m              # Conceal text.\n# \\033]708;#000000\\007 # Garbage sequence.\n# \\0338                # Restore cursor position.\n\n\\0337\\033[1000H\\033[8m\\033]708;#000000\\007\\0338\n```\n\nThis took a lot of trial and error to make sure it works across all terminals and doesn't cause issues for underlying terminal programs.\n\n\n### Added User Template Support\n\nYou can now define your own custom `pywal` template files or you can overwrite the default template files. Any files stored in `~/.config/wal/templates` will be processed and exported to `~/.cache/wal/` under the same name.\n\nThe user template files follow the exact same syntax as the built-in templates. See the built-in templates for syntax examples: https://github.com/dylanaraps/pywal/tree/master/pywal/templates\n\nFor example: To define a custom `rofi` template file to set the background transparent.\n\nSave this file to `~/.config/wal/templates/colors-rofi.Xresources` and re-run wal. Rofi will now use the colors defined below instead.\n\n```\n#define BG #CC{background.strip}\n#define HI #CC{color1.strip}\n#define FG {color15}\n#define TX {color15}\n\n! State:           bg, fg, bg2,  hlbg, hlfg\nrofi.color-normal: BG, FG, BG,   HI,   TX\nrofi.color-active: BG, FG, BG,   HI,   TX\nrofi.color-urgent: BG, HI, BG,   HI,   FG\nrofi.color-window: BG, BG, BG\n```\n\n### Templates\n\n- Added template file for `rofi`.\n- Added template file for `st`.\n- Added template file for `tabbed`.\n- Added template file for `dwm`.\n\n\n### Args\n\n- Added `-s` to disable changing terminal colors on the fly.\n\n## [0.7.5] - 2017-12-19\n\n- Really fixed wallpaper bug.\n\n## [0.7.4] - 2017-12-19\n\n- Fixed wallpaper not changing in WMs.\n\n## [0.7.3] - 2017-12-17\n\n- Fixed lint error.\n\n## [0.7.2] - 2017-12-17\n\n- Fixed license file not appearing in release tarballs.\n- Fixed bug when using `pywal.reload.colors()`.\n- Fixed shuffle not working with some file types.\n- Fixed yaml error.\n- Fixed sway error.\n- Added sway wallpaper support.\n- Made wallpaper setting faster for WMs.\n\n## [0.7.0] - 2017-10-19\n\n- Fixed failing tests on macOS. @linuxunil\n- Added workaround for cursor color issues.\n- Use run instead of popen so that things are closed correctly. @linuxunil\n- Added resource file for Sway. @ranisalt\n- Set `fzf` colors.\n\n## [0.6.9] - 2017-08-27\n\n- sequences: Fix flash on color reload.\n\n## [0.6.8] - 2017-08-27\n\n- Fixed `File not found` error on Windows.\n\n## [0.6.7] - 2017-08-25\n\n- os: Added support for Windows.\n    - Cache dir on Windows is: `%UserProfile%\\.cache\\wal`\n    - Wallpaper setting works on un-activated Windows copies (*neat*).\n    - Note: Changing terminal colors doesn't work on Windows.\n- xres: Fixed URxvt border not having transparency applied. @JoshuaRLi\n- xres: Added `emacs` background/foreground. @adamsdarlingtower\n\n\n\n## [0.6.6] - 2017-08-16\n\n- reload: Fixed bug on macOS systems with XQuartz.\n\n## [0.6.4] - 2017-08-15\n\n- image: Fixed issue with relative file paths.\n\n## [0.6.3] - 2017-08-13\n\n- wallpaper: Remove useless print.\n\n## [0.6.2] - 2017-08-13\n\n- wallpaper: Fix `urllib` error when using GNOME or MATE.\n\n## [0.6.1] - 2017-08-13\n\n- wallpaper: Correctly encode file path to URI.\n\n## [0.6.0] - 2017-08-12\n\n- python: Added support for Python 3.5.\n- api: `Path` types are no longer accepted by the api. Use `Strings` instead,\n\n## [0.5.13] - 2017-08-12\n\n- args: Added `-R` to restore the previous colorscheme.\n- reload: Theme is now option for GTK reload. @deviantfero\n- colors: Colors are now correctly set for UXTerm.\n- tests: Added more tests. @aeikenberry\n\n## [0.5.12] - 2017-08-03\n\n- Fix wallpaper on macOS. @aeikenberry\n- Added `-e` to skip reloading the environment. @aeikenberry\n\n## [0.5.11] - 2017-08-02\n\n- colors: Un-hardcode `color8`.\n    - `color8` is now generated from `color0`.\n\n## [0.5.10] - 2017-08-02\n\n- `pywal` now colors iTerm2's window and tabs. @aeikenberry\n- Fixed output message inconsistencies.\n\n## [0.5.9] - 2017-07-31\n\n- Fixed `hyper-wal` not working with `pywal`.\n\n## [0.5.8] - 2017-07-31\n\n- Added support for macOS (iTerm2 only)\n    - Thanks to @aeikenberry for testing.\n- Fixed issue with `tk`.\n- Fixed bug with brighter background colors.\n\n## [0.5.7] - 2017-07-30\n\n- general: Use `sys.exit` everywhere instead of `exit`.\n- export: Export colors in `yaml` format.\n- wallpaper: Fix a crash on first run of `wal`.\n\n## [0.5.6] - 2017-07-28\n\n- css: Fixed wallpaper variable not working in `css`.\n\nUpdated `css` example:\n\n```css\n@import url('file:///home/dylan/.cache/wal/colors.css');\n\nbody {\n  background-image: var(--wallpaper);\n}\n```\n\n## [0.5.5] - 2017-07-28\n\n- pypi: Don't load a 3MB image on pypi or github.\n- pypi: Fixed README on pypi.\n- install: Fixed pypandoc issue stopping install.\n- install: Fixed gtk-reload not being installed with pip.\n\n\n\n## [0.5.1] - 2017-07-28\n\n- export: Added GTK2 support.\n    - See: https://github.com/dylanaraps/pywal/wiki/Customization#gtk2\n- image: Fixed bug causing shuffle to use duplicate images.\n- args: Added `-b` to set a custom background color.\n    - example: `wal -i img.jpg -b \"#333333\"`\n- colors: `wal` now darkens the background color if the contrast between the wallpaper is too low.\n    - See: #60 for an example.\n\n## [0.5.0] - 2017-07-24\n\nThere aren't any breaking changes in this release but due to\nthe size I've bumped the major version number.\n\n- api: `pywal` can now be imported and used as a module.\n    - See [using pywal as a module](https://github.com/dylanaraps/pywal/wiki/Using-%60pywal%60-as-a-module).\n- args: Added `-a` to control transparency. (URxvt only)\n- comments: Removed redundent comments.\n- linting: Removed lint comments.\n- reload: Reload `polybar` colors automatically.\n- speed: Sped up colorscheme generation by `5-6`x  by resizing image before processing.\n- tests: Added more tests.\n- util: Files are now saved safely.\n    - Parent dirs are created on file save if they don't exist.\n\n\n\n## [0.4.0] - 2017-07-10\n\n- Wallpaper name/location is now cached in the export files.\n- You can now specify a wallpaper to set in your custom co,oscheme files.\n- `xclock` colors are now set.\n\n\nExample coloscheme file with wallpaper:\n\n```json\n{\n    \"wallpaper\": \"/path/to/img.jpg\",\n\n    \"special\": {\n        \"background\": \"#4A3636\",\n        \"foreground\": \"#F8F8F8\",\n        \"cursor\": \"#F8F8F8\"\n    },\n    \"colors\": {\n        \"color0\": \"#4A3636\",\n        \"color1\": \"#EDD0B0\",\n        \"color2\": \"#EDB7C8\",\n        \"color3\": \"#E0D4DC\",\n        \"color4\": \"#F4D3D0\",\n        \"color5\": \"#F5E8D6\",\n        \"color6\": \"#F5EDEA\",\n        \"color7\": \"#F8F8F8\",\n        \"color8\": \"#999999\",\n        \"color9\": \"#EDD0B0\",\n        \"color10\": \"#EDB7C8\",\n        \"color11\": \"#E0D4DC\",\n        \"color12\": \"#F4D3D0\",\n        \"color13\": \"#F5E8D6\",\n        \"color14\": \"#F5EDEA\",\n        \"color15\": \"#F8F8F8\"\n    }\n}\n```\n\n## [0.3.10] - 2017-07-08\n\n- Better outdated Python version error.\n- Fixed infinite loop when `wal` is given a very simple image.\n- `wal` will now abort if it can't find `16` colors after 20 loops.\n- Fixed a bug where a cached scheme would be used for the wrong image.\n\n## [0.3.8] - 2017-07-07\n\n- Added message to let the user know that `pywal` requires Python `3.6` or greater.\n\n## [0.3.7] - 2017-07-06\n\n- Remove executable permissions from Python files.\n- Fix `set_grey()` type mismatch.\n- Update docs.\n- Fix a bug causing the wallpaper to not be set correctly.\n\n## [0.3.6] - 2017-07-01\n\n- template: Export generic xrdb special colors.\n\n## [0.3.5] - 2017-06-30\n\n- Add back `MANIFEST.in` as it's actually needed.\n\n## [0.3.4] - 2017-06-30\n\n- colors: Fix bug with `i3` titlebars being given the wrong colors.\n- template: Added a template for Konsole theme generation.\n- general: Remove `MANIFEST.in`. Turns out it's uneeded.\n\n## [0.3.3] - 2017-06-30\n\n- Remove non-ascii char from package description. #23\n\n## [0.3.2] - 2017-06-30\n\n- Really fix templates not being installed.\n\n## [0.3.1] - 2017-06-30\n\n- Fix templates not being installed with `pip`.\n\n## [0.3.0] - 2017-06-30\n\n- Add `-f` flag to read colorscheme from a file. @opatut\n    - Added support for importing colors in a `.json` format.\n- Exported files are now created using template files.\n    - Added `json` export format. (`colors.json`)\n- Fixed bug with wallpaper not being set in some Window Managers.\n\nYou can now import your own colorschemes using a json file in the following format:\n\n```json\n{\n    \"special\": {\n        \"background\": \"#3A5130\",\n        \"foreground\": \"#FAF9F5\",\n        \"cursor\": \"#FAF9F5\"\n    },\n    \"colors\": {\n        \"color0\": \"#3A5130\",\n        \"color1\": \"#E3A19D\",\n        \"color2\": \"#E1CEAE\",\n        \"color3\": \"#D6DDCC\",\n        \"color4\": \"#F1D2CB\",\n        \"color5\": \"#F5E9D6\",\n        \"color6\": \"#F9F0E5\",\n        \"color7\": \"#FAF9F5\",\n        \"color8\": \"#999999\",\n        \"color9\": \"#E3A19D\",\n        \"color10\": \"#E1CEAE\",\n        \"color11\": \"#D6DDCC\",\n        \"color12\": \"#F1D2CB\",\n        \"color13\": \"#F5E9D6\",\n        \"color14\": \"#F9F0E5\",\n        \"color15\": \"#FAF9F5\"\n    }\n}\n```\n\n## [0.2.6] - 2017-06-28\n\n- Fix bug when shuffling images.\n- Use `os.scandir` for a speed boost.\n\n\n## [0.2.5] - 2017-06-27\n\n- Added unit tests.\n\n## [0.2.4] - 2017-06-27\n\n- Remove `find_packages()`.\n\nNote to self: Don't flag releases before coffee.\n\n## [0.2.3] - 2017-06-27\n\n- Fix missing import error.\n\n## [0.2.2] - 2017-06-27\n\n- Fix `console_script` `entry_point`.  #10 - @danielx\n\n## [0.2.1] - 2017-06-26\n\n- Fix bug with `vte` terminals.\n\n## [0.2.0] - 2017-06-26\n\n- Moved `wal` into a module and split the script into multiple files.\n- Removed all usage of global variables.\n- General cleanup.\n\n## [0.1.6] - 2017-06-25\n\n- Fix incorrect Python shebang #5.\n- [wallpaper] Surpress `xfconf` output.\n\n## [0.1.5] - 2017-06-23\n\n- Cleanup\n- Name change\n\n## [0.1.4] - 2017-06-22\n\n- Display a notification during generation.\n- Remove macOS code.\n    - The main `wal` functions don't work on macOS so why support it in minor areas?\n\n## [0.1.3] - 2017-06-22\n\n- I love pypi!\n\n## [0.1.2] - 2017-06-22\n\n- Remove all markdown conversion from `setup.py`.\n\n## [0.1.1] - 2017-06-22\n\n- Fix pypi long description.\n\n## 0.1.0 - 2017-06-22\n\n\n\n[Unreleased]: https://github.com/dylanaraps/pywal/compare/3.1.0...HEAD\n[3.1.0]: https://github.com/dylanaraps/pywal/compare/3.0.1...3.1.0\n[3.0.1]: https://github.com/dylanaraps/pywal/compare/3.0.0...3.0.1\n[3.0.0]: https://github.com/dylanaraps/pywal/compare/2.1.0...3.0.0\n[2.1.0]: https://github.com/dylanaraps/pywal/compare/2.0.5...2.1.0\n[2.0.5]: https://github.com/dylanaraps/pywal/compare/2.0.4...2.0.5\n[2.0.4]: https://github.com/dylanaraps/pywal/compare/2.0.3...2.0.4\n[2.0.3]: https://github.com/dylanaraps/pywal/compare/2.0.2...2.0.3\n[2.0.2]: https://github.com/dylanaraps/pywal/compare/2.0.1...2.0.2\n[2.0.1]: https://github.com/dylanaraps/pywal/compare/2.0.0...2.0.1\n[2.0.0]: https://github.com/dylanaraps/pywal/compare/1.3.3...2.0.0\n[1.3.3]: https://github.com/dylanaraps/pywal/compare/1.3.2...1.3.3\n[1.3.2]: https://github.com/dylanaraps/pywal/compare/1.3.0...1.3.2\n[1.3.0]: https://github.com/dylanaraps/pywal/compare/1.2.3...1.3.0\n[1.2.3]: https://github.com/dylanaraps/pywal/compare/1.2.2...1.2.3\n[1.2.2]: https://github.com/dylanaraps/pywal/compare/1.2.1...1.2.2\n[1.2.1]: https://github.com/dylanaraps/pywal/compare/1.2.0...1.2.1\n[1.2.0]: https://github.com/dylanaraps/pywal/compare/1.1.2...1.2.0\n[1.1.2]: https://github.com/dylanaraps/pywal/compare/1.1.1...1.1.2\n[1.1.1]: https://github.com/dylanaraps/pywal/compare/1.1.0...1.1.1\n[1.1.0]: https://github.com/dylanaraps/pywal/compare/1.0.4...1.1.0\n[1.0.4]: https://github.com/dylanaraps/pywal/compare/1.0.3...1.0.4\n[1.0.3]: https://github.com/dylanaraps/pywal/compare/1.0.2...1.0.3\n[1.0.2]: https://github.com/dylanaraps/pywal/compare/1.0.1...1.0.2\n[1.0.1]: https://github.com/dylanaraps/pywal/compare/1.0.0...1.0.1\n[1.0.0]: https://github.com/dylanaraps/pywal/compare/0.7.5...1.0.0\n[0.7.5]: https://github.com/dylanaraps/pywal/compare/0.7.4...0.7.5\n[0.7.4]: https://github.com/dylanaraps/pywal/compare/0.7.3...0.7.4\n[0.7.3]: https://github.com/dylanaraps/pywal/compare/0.7.2...0.7.3\n[0.7.2]: https://github.com/dylanaraps/pywal/compare/0.7.0...0.7.2\n[0.7.0]: https://github.com/dylanaraps/pywal/compare/0.6.9...0.7.0\n[0.6.9]: https://github.com/dylanaraps/pywal/compare/0.6.8...0.6.9\n[0.6.8]: https://github.com/dylanaraps/pywal/compare/0.6.7...0.6.8\n[0.6.7]: https://github.com/dylanaraps/pywal/compare/0.6.6...0.6.7\n[0.6.6]: https://github.com/dylanaraps/pywal/compare/0.6.4...0.6.6\n[0.6.4]: https://github.com/dylanaraps/pywal/compare/0.6.3...0.6.4\n[0.6.3]: https://github.com/dylanaraps/pywal/compare/0.6.2...0.6.3\n[0.6.2]: https://github.com/dylanaraps/pywal/compare/0.6.1...0.6.2\n[0.6.1]: https://github.com/dylanaraps/pywal/compare/0.6.0...0.6.1\n[0.6.0]: https://github.com/dylanaraps/pywal/compare/0.5.13...0.6.0\n[0.5.13]: https://github.com/dylanaraps/pywal/compare/0.5.12...0.5.13\n[0.5.12]: https://github.com/dylanaraps/pywal/compare/0.5.11...0.5.12\n[0.5.11]: https://github.com/dylanaraps/pywal/compare/0.5.10...0.5.11\n[0.5.10]: https://github.com/dylanaraps/pywal/compare/0.5.9...0.5.10\n[0.5.9]: https://github.com/dylanaraps/pywal/compare/0.5.8...0.5.9\n[0.5.8]: https://github.com/dylanaraps/pywal/compare/0.5.7...0.5.8\n[0.5.7]: https://github.com/dylanaraps/pywal/compare/0.5.6...0.5.7\n[0.5.6]: https://github.com/dylanaraps/pywal/compare/0.5.5...0.5.6\n[0.5.5]: https://github.com/dylanaraps/pywal/compare/0.5.1...0.5.5\n[0.5.1]: https://github.com/dylanaraps/pywal/compare/0.5.0...0.5.1\n[0.5.0]: https://github.com/dylanaraps/pywal/compare/0.4.0...0.5.0\n[0.4.0]: https://github.com/dylanaraps/pywal/compare/0.3.10...0.4.0\n[0.3.10]: https://github.com/dylanaraps/pywal/compare/0.3.8...0.3.10\n[0.3.8]: https://github.com/dylanaraps/pywal/compare/0.3.7...0.3.8\n[0.3.7]: https://github.com/dylanaraps/pywal/compare/0.3.6...0.3.7\n[0.3.6]: https://github.com/dylanaraps/pywal/compare/0.3.5...0.3.6\n[0.3.5]: https://github.com/dylanaraps/pywal/compare/0.3.4...0.3.5\n[0.3.4]: https://github.com/dylanaraps/pywal/compare/0.3.3...0.3.4\n[0.3.3]: https://github.com/dylanaraps/pywal/compare/0.3.2...0.3.3\n[0.3.2]: https://github.com/dylanaraps/pywal/compare/0.3.1...0.3.2\n[0.3.1]: https://github.com/dylanaraps/pywal/compare/0.3.0...0.3.1\n[0.3.0]: https://github.com/dylanaraps/pywal/compare/0.2.6...0.3.0\n[0.2.6]: https://github.com/dylanaraps/pywal/compare/0.2.5...0.2.6\n[0.2.5]: https://github.com/dylanaraps/pywal/compare/0.2.4...0.2.5\n[0.2.4]: https://github.com/dylanaraps/pywal/compare/0.2.3...0.2.4\n[0.2.3]: https://github.com/dylanaraps/pywal/compare/0.2.2...0.2.3\n[0.2.2]: https://github.com/dylanaraps/pywal/compare/0.2.1...0.2.2\n[0.2.1]: https://github.com/dylanaraps/pywal/compare/0.2.0...0.2.1\n[0.2.0]: https://github.com/dylanaraps/pywal/compare/0.1.6...0.2.0\n[0.1.6]: https://github.com/dylanaraps/pywal/compare/0.1.5...0.1.6\n[0.1.5]: https://github.com/dylanaraps/pywal/compare/0.1.4...0.1.5\n[0.1.4]: https://github.com/dylanaraps/pywal/compare/0.1.3...0.1.4\n[0.1.3]: https://github.com/dylanaraps/pywal/compare/0.1.2...0.1.3\n[0.1.2]: https://github.com/dylanaraps/pywal/compare/0.1.1...0.1.2\n[0.1.1]: https://github.com/dylanaraps/pywal/compare/0.1.0...0.1.1\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2017 Dylan Araps\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.2646484375,
          "content": "include pywal/templates/*\ninclude pywal/backends/*\ninclude pywal/scripts/*\ninclude pywal/colorschemes/*\ninclude pywal/colorschemes/light/*\ninclude pywal/colorschemes/dark/*\ninclude tests/*\ninclude tests/test_files/*\ninclude .pylintrc\ninclude README.md\ninclude LICENSE.md\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.0712890625,
          "content": "<h3 align=\"center\"><img src=\"https://i.imgur.com/5WgMACe.gif\" width=\"200px\"></h3>\n<p align=\"center\">Generate and change color-schemes on the fly.</p>\n\n<p align=\"center\">\n<a href=\"https://travis-ci.org/dylanaraps/pywal\"><img src=\"https://travis-ci.org/dylanaraps/pywal.svg?branch=master\"></a>\n<a href=\"./LICENSE.md\"><img src=\"https://img.shields.io/badge/license-MIT-blue.svg\"></a>\n<a href=\"https://pypi.python.org/pypi/pywal/\"><img src=\"https://img.shields.io/pypi/v/pywal.svg\"></a>\n<a href=\"https://www.patreon.com/dyla\"><img src=\"https://img.shields.io/badge/donate-patreon-yellow.svg\"></a>\n<a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=V7QNJNKS3WYVS\"><img src=\"https://img.shields.io/badge/donate-paypal-green.svg\"></a>\n</p>\n\n<img src=\"https://i.imgur.com/HhK3LDv.jpg\" alt=\"img\" align=\"right\" width=\"400px\">\n\nPywal is a tool that generates a color palette from the dominant colors in an image. It then applies the colors system-wide and on-the-fly in all of your favourite programs.  \n\nThere are currently 5 supported color generation backends, each providing a different palette of colors from each image. You're bound to find an appealing color-scheme.\n\nPywal also supports predefined themes and has over 250 themes built-in. You can also create your own theme files to share with others.\n\nThe goal of Pywal was to be as out of the way as possible. It doesn't modify any of your existing configuration files. Instead it works around them and provides tools to integrate your system as you see fit.\n\nTerminal emulators and TTYs have their color-schemes updated in real-time with no delay. With minimal configuration this functionality can be extended to almost anything running on your system.\n\n### More: \\[[Installation](https://github.com/dylanaraps/pywal/wiki/Installation)] \\[[Getting Started](https://github.com/dylanaraps/pywal/wiki/Getting-Started)] \\[[Customization](https://github.com/dylanaraps/pywal/wiki/Customization)] \\[[Wiki](https://github.com/dylanaraps/pywal/wiki)] \\[[Screenshots](https://www.reddit.com/r/unixporn/search?q=wal&restrict_sr=on&sort=relevance&t=all)]\n"
        },
        {
          "name": "pywal",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.177734375,
          "content": "\"\"\"wal - setup.py\"\"\"\nimport sys\nimport setuptools\n\ntry:\n    import pywal\nexcept ImportError:\n    print(\"error: pywal requires Python 3.5 or greater.\")\n    sys.exit(1)\n\nLONG_DESC = open('README.md').read()\nVERSION = pywal.__version__\nDOWNLOAD = \"https://github.com/dylanaraps/pywal/archive/%s.tar.gz\" % VERSION\n\nsetuptools.setup(\n    name=\"pywal\",\n    version=VERSION,\n    author=\"Dylan Araps\",\n    author_email=\"dylan.araps@gmail.com\",\n    description=\"Generate and change color-schemes on the fly\",\n    long_description_content_type=\"text/markdown\",\n    long_description=LONG_DESC,\n    keywords=\"wal colorscheme terminal-emulators changing-colorschemes\",\n    license=\"MIT\",\n    url=\"https://github.com/dylanaraps/pywal\",\n    download_url=DOWNLOAD,\n    classifiers=[\n        \"Environment :: X11 Applications\",\n        \"License :: OSI Approved :: MIT License\",\n        \"Operating System :: POSIX :: Linux\",\n        \"Programming Language :: Python :: 3.5\",\n        \"Programming Language :: Python :: 3.6\",\n    ],\n    packages=[\"pywal\"],\n    entry_points={\"console_scripts\": [\"wal=pywal.__main__:main\"]},\n    python_requires=\">=3.5\",\n    test_suite=\"tests\",\n    include_package_data=True,\n    zip_safe=False)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}