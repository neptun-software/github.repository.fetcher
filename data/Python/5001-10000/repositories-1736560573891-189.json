{
  "metadata": {
    "timestamp": 1736560573891,
    "page": 189,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "catboost/catboost",
      "stars": 8185,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.078125,
          "content": "contrib/* linguist-vendored\n*.ipynb linguist-vendored\n*.h linguist-language=C++\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7353515625,
          "content": "*.a\n*.dSYM\n*.orig\n*.pyc\n*.rej\n*.so\n*.swp\n*.tmp\n.bzr\n.gdb_history\n.hg\n.hglf\n.idea\n.om.cache\n.ropeproject\n.svn\n.vscode\n/.gcc-compiler\n/.gxx-compiler\n/.ycm\n/local.cmake\n/local.ymake\nom.conf.local\ntest-results\n\n/msvs/Debug/*\n/msvs/Release/*\n\ncatboost/rust-package/target/\n\ncatboost/rust-package/catboost-sys/target/\n\ncatboost/app/catboost\n\ncatboost/libs/model_interface/*.dylib*\n\ncatboost/pytest/catboost-pytest\n\ncatboost/tools/limited_precision_dsv_diff/limited_precision_dsv_diff\n\ncatboost/tutorials/apply_model/rust/target/\ncatboost/tools/limited_precision_json_diff/limited_precision_json_diff\n\n# R build artifacts\ncatboost*.tar.gz\ncatboost.Rcheck/\n\n# widget build artefacts\nnode_modules/\n**/widget/js/dist/\n**/widget/labextension\n**/widget/nbextension\n"
        },
        {
          "name": ".mapping.json",
          "type": "blob",
          "size": 341.2734375,
          "content": "{\n  \".\":\"catboost/github_toplevel/\",\n  \".gitattributes\":\"catboost/github_toplevel/.gitattributes\",\n  \".github/actions/build_linux_docker_cleanup_unneeded/action.yaml\":\"catboost/github_toplevel/.github/actions/build_linux_docker_cleanup_unneeded/action.yaml\",\n  \".github/actions/download_artifacts_for_all_platforms/action.yaml\":\"catboost/github_toplevel/.github/actions/download_artifacts_for_all_platforms/action.yaml\",\n  \".github/actions/retried_wait_for_mvn_dependency/action.yaml\":\"catboost/github_toplevel/.github/actions/retried_wait_for_mvn_dependency/action.yaml\",\n  \".github/actions/upload_python_package_artifacts_for_all_py_versions/action.yaml\":\"catboost/github_toplevel/.github/actions/upload_python_package_artifacts_for_all_py_versions/action.yaml\",\n  \".github/workflows/add_mac_os_extra_env_to_cache.yaml\":\"catboost/github_toplevel/.github/workflows/add_mac_os_extra_env_to_cache.yaml\",\n  \".github/workflows/build_per_os.yaml\":\"catboost/github_toplevel/.github/workflows/build_per_os.yaml\",\n  \".github/workflows/check.yaml\":\"catboost/github_toplevel/.github/workflows/check.yaml\",\n  \".github/workflows/check_per_os.yaml\":\"catboost/github_toplevel/.github/workflows/check_per_os.yaml\",\n  \".github/workflows/release.yaml\":\"catboost/github_toplevel/.github/workflows/release.yaml\",\n  \".github/workflows/release_build_and_check.yaml\":\"catboost/github_toplevel/.github/workflows/release_build_and_check.yaml\",\n  \".github/workflows/release_publish.yaml\":\"catboost/github_toplevel/.github/workflows/release_publish.yaml\",\n  \".github/workflows/release_publish_node_package.yaml\":\"catboost/github_toplevel/.github/workflows/release_publish_node_package.yaml\",\n  \".github/workflows/test.yaml\":\"catboost/github_toplevel/.github/workflows/test.yaml\",\n  \".github/workflows/test_per_os.yaml\":\"catboost/github_toplevel/.github/workflows/test_per_os.yaml\",\n  \".gitignore\":\"catboost/github_toplevel/.gitignore\",\n  \"AUTHORS\":\"catboost/github_toplevel/AUTHORS\",\n  \"AWESOME.md\":\"catboost/github_toplevel/AWESOME.md\",\n  \"CMakeLists.android-arm.txt\":\"\",\n  \"CMakeLists.android-arm64.txt\":\"\",\n  \"CMakeLists.android-x86.txt\":\"\",\n  \"CMakeLists.android-x86_64.txt\":\"\",\n  \"CMakeLists.darwin-arm64.txt\":\"\",\n  \"CMakeLists.darwin-x86_64.txt\":\"\",\n  \"CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"CMakeLists.linux-aarch64.txt\":\"\",\n  \"CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"CMakeLists.linux-ppc64le.txt\":\"\",\n  \"CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"CMakeLists.linux-x86_64.txt\":\"\",\n  \"CMakeLists.txt\":\"\",\n  \"CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"CMakeLists.windows-x86_64.txt\":\"\",\n  \"CONTRIBUTING.md\":\"catboost/github_toplevel/CONTRIBUTING.md\",\n  \"CPP_STYLE_GUIDE.md\":\"catboost/github_toplevel/CPP_STYLE_GUIDE.md\",\n  \"ISSUE_TEMPLATE.md\":\"catboost/github_toplevel/ISSUE_TEMPLATE.md\",\n  \"LICENSE\":\"catboost/github_toplevel/LICENSE\",\n  \"PULL_REQUEST_TEMPLATE.md\":\"catboost/github_toplevel/PULL_REQUEST_TEMPLATE.md\",\n  \"README.md\":\"catboost/github_toplevel/README.md\",\n  \"RELEASE.md\":\"catboost/github_toplevel/RELEASE.md\",\n  \"SECURITY.md\":\"catboost/github_toplevel/SECURITY.md\",\n  \"build/build_native.py\":\"catboost/github_toplevel/build/build_native.py\",\n  \"build/docker/README.md\":\"catboost/github_toplevel/build/docker/README.md\",\n  \"build/docker/build.sh\":\"catboost/github_toplevel/build/docker/build.sh\",\n  \"build/docker/ubuntu_22.04.dockerfile\":\"catboost/github_toplevel/build/docker/ubuntu_22.04.dockerfile\",\n  \"build/scripts/create_recursive_library_for_cmake.py\":\"\",\n  \"build/scripts/export_script_gen.py\":\"\",\n  \"build/scripts/gather_swig_java.cmake\":\"\",\n  \"build/scripts/generate_vcs_info.py\":\"\",\n  \"build/scripts/re_replace.py\":\"\",\n  \"build/scripts/split_unittest.py\":\"\",\n  \"build/scripts/svn_interface.c\":\"\",\n  \"build/scripts/svnversion.h\":\"\",\n  \"build/swig.exe.manifest\":\"catboost/github_toplevel/build/swig.exe.manifest\",\n  \"build/toolchains/clang.toolchain\":\"catboost/github_toplevel/build/toolchains/clang.toolchain\",\n  \"build/toolchains/cross-build.host.darwin.target.arm64-darwin-default.clang.toolchain\":\"catboost/github_toplevel/build/toolchains/cross-build.host.darwin.target.arm64-darwin-default.clang.toolchain\",\n  \"build/toolchains/cross-build.host.darwin.target.x86_64-darwin-default.clang.toolchain\":\"catboost/github_toplevel/build/toolchains/cross-build.host.darwin.target.x86_64-darwin-default.clang.toolchain\",\n  \"build/toolchains/cross-build.host.linux.target.aarch64-linux-gnu.clang.toolchain\":\"catboost/github_toplevel/build/toolchains/cross-build.host.linux.target.aarch64-linux-gnu.clang.toolchain\",\n  \"build/toolchains/default.toolchain\":\"catboost/github_toplevel/build/toolchains/default.toolchain\",\n  \"catboost/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/CMakeLists.txt\":\"\",\n  \"catboost/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/R-package/CMakeLists.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/R-package/src/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/app/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/app/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/app/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/app/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/app/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/app/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/app/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/app/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/app/CMakeLists.txt\":\"\",\n  \"catboost/app/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/app/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/cuda/CMakeLists.txt\":\"\",\n  \"catboost/cuda/cpu_compatibility_helpers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/cpu_compatibility_helpers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/cpu_compatibility_helpers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cpu_compatibility_helpers/CMakeLists.txt\":\"\",\n  \"catboost/cuda/cpu_compatibility_helpers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/ctrs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/ctrs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/ctrs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/ctrs/CMakeLists.txt\":\"\",\n  \"catboost/cuda/ctrs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/ctrs/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/ctrs/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/ctrs/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/ctrs/ut/CMakeLists.txt\":\"\",\n  \"catboost/cuda/ctrs/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_lib/CMakeLists.txt\":\"\",\n  \"catboost/cuda/cuda_lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_lib/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_lib/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_lib/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_lib/ut/CMakeLists.txt\":\"\",\n  \"catboost/cuda/cuda_lib/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_util/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_util/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_util/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_util/CMakeLists.txt\":\"\",\n  \"catboost/cuda/cuda_util/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_util/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_util/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_util/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/cuda_util/ut/CMakeLists.txt\":\"\",\n  \"catboost/cuda/cuda_util/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/data/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/data/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/data/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/data/CMakeLists.txt\":\"\",\n  \"catboost/cuda/data/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/gpu_data/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/gpu_data/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/gpu_data/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/gpu_data/CMakeLists.txt\":\"\",\n  \"catboost/cuda/gpu_data/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/gpu_data/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/gpu_data/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/gpu_data/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/gpu_data/ut/CMakeLists.txt\":\"\",\n  \"catboost/cuda/gpu_data/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/methods/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/methods/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/methods/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/methods/CMakeLists.txt\":\"\",\n  \"catboost/cuda/methods/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/methods/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/methods/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/methods/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/methods/ut/CMakeLists.txt\":\"\",\n  \"catboost/cuda/methods/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/models/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/models/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/models/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/models/CMakeLists.txt\":\"\",\n  \"catboost/cuda/models/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/CMakeLists.txt\":\"\",\n  \"catboost/cuda/mpi_ut/ctrs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/ctrs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/ctrs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/ctrs/CMakeLists.txt\":\"\",\n  \"catboost/cuda/mpi_ut/ctrs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_lib/CMakeLists.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_util/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_util/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_util/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_util/CMakeLists.txt\":\"\",\n  \"catboost/cuda/mpi_ut/cuda_util/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/gpu_data/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/gpu_data/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/gpu_data/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/gpu_data/CMakeLists.txt\":\"\",\n  \"catboost/cuda/mpi_ut/gpu_data/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/methods/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/methods/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/methods/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/mpi_ut/methods/CMakeLists.txt\":\"\",\n  \"catboost/cuda/mpi_ut/methods/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/targets/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/CMakeLists.txt\":\"\",\n  \"catboost/cuda/targets/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/bin/CMakeLists.txt\":\"\",\n  \"catboost/cuda/targets/bin/ndcg_cpu_vs_gpu/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/bin/ndcg_cpu_vs_gpu/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/targets/bin/ndcg_cpu_vs_gpu/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/bin/ndcg_cpu_vs_gpu/CMakeLists.txt\":\"\",\n  \"catboost/cuda/targets/bin/ndcg_cpu_vs_gpu/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/targets/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/targets/ut/CMakeLists.txt\":\"\",\n  \"catboost/cuda/targets/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/train_lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/train_lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/train_lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/train_lib/CMakeLists.txt\":\"\",\n  \"catboost/cuda/train_lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/train_lib/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/train_lib/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/train_lib/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/train_lib/ut/CMakeLists.txt\":\"\",\n  \"catboost/cuda/train_lib/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/ut_helpers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/ut_helpers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/ut_helpers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/ut_helpers/CMakeLists.txt\":\"\",\n  \"catboost/cuda/ut_helpers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/utils/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/cuda/utils/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/cuda/utils/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/cuda/utils/CMakeLists.txt\":\"\",\n  \"catboost/cuda/utils/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/idl/CMakeLists.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/idl/pool/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/idl/pool/flat/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/idl/pool/proto/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/jvm-packages/CMakeLists.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/CMakeLists.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/CMakeLists.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/jvm-packages/catboost4j-prediction/src/native_impl/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/CMakeLists.txt\":\"\",\n  \"catboost/libs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/calc_metrics/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/calc_metrics/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/carry_model/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/carry_model/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/cat_feature/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/column_description/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/data/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/data/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/data/ut/lib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/dataset_statistics/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/dataset_statistics/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/eval_result/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/features_selection/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/fstr/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/CMakeLists.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/force_no_cuda/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/interface/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/gpu_config/maybe_have_cuda/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/flatbuffers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/parallel_sort/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/helpers/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/loggers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/loggers/tensorboard_logger_example/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/logging/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/metrics/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/metrics/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/model/cuda/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model/cuda/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model/cuda/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/cuda/CMakeLists.txt\":\"\",\n  \"catboost/libs/model/cuda/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/flatbuffers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/model_export/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model/ut/lib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/static/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/model_interface/static/lib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/monoforest/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/overfitting_detector/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/train_interface/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/train_lib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/libs/train_lib/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/approx_calcer/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/algo_helpers/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/app_helpers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/ctr_description/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_types/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_util/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/data_util/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/distributed/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/documents_importance/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/embedding_features/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/embedding_features/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/embeddings/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/feature_estimator/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/functools/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/functools/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/hyperparameter_tuning/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/index_range/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/init/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/labels/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/lapack/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/options/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/options/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/pairs/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantization_schema/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/quantized_pool_analysis/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/target/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_features/ut/lib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.android-arm.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.android-arm64.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.android-x86.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.android-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/text_processing/ut/lib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/private/libs/validate_fb/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/python-package/CMakeLists.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/python-package/catboost/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/python-package/catboost/no_cuda/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/spark/CMakeLists.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/CMakeLists.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/CMakeLists.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/CMakeLists.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/spark/catboost4j-spark/core/src/native_impl/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/tools/CMakeLists.txt\":\"\",\n  \"catboost/tools/for_testing/CMakeLists.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/for_testing/resort_dsv_by_numeric_group_id/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/limited_precision_dsv_diff/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/limited_precision_json_diff/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/model_comparator/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/model_perftest/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"catboost/tools/model_perftest/lib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"catboost_command_style_guide_extension.md\":\"catboost/github_toplevel/catboost_command_style_guide_extension.md\",\n  \"ci/build_all.py\":\"catboost/github_toplevel/ci/build_all.py\",\n  \"ci/cmake/cuda.cmake\":\"catboost/github_toplevel/ci/cmake/cuda.cmake\",\n  \"ci/conan/init.sh\":\"catboost/github_toplevel/ci/conan/init.sh\",\n  \"ci/conan/profiles/build.manylinux2014.x86_64.profile\":\"catboost/github_toplevel/ci/conan/profiles/build.manylinux2014.x86_64.profile\",\n  \"ci/conan/profiles/dockcross.manylinux2014_aarch64.profile\":\"catboost/github_toplevel/ci/conan/profiles/dockcross.manylinux2014_aarch64.profile\",\n  \"ci/conan/profiles/manylinux2014.x86_64.profile\":\"catboost/github_toplevel/ci/conan/profiles/manylinux2014.x86_64.profile\",\n  \"ci/conan/profiles/windows.x86_64.profile\":\"catboost/github_toplevel/ci/conan/profiles/windows.x86_64.profile\",\n  \"ci/conan/settings_user.yml\":\"catboost/github_toplevel/ci/conan/settings_user.yml\",\n  \"ci/extract_release_changelog.py\":\"catboost/github_toplevel/ci/extract_release_changelog.py\",\n  \"ci/fixup_python_version.py\":\"catboost/github_toplevel/ci/fixup_python_version.py\",\n  \"ci/fixups_for_freebsd.sh\":\"catboost/github_toplevel/ci/fixups_for_freebsd.sh\",\n  \"ci/prepare_release_artifacts.py\":\"catboost/github_toplevel/ci/prepare_release_artifacts.py\",\n  \"ci/toolchains/brew_clang_15.toolchain\":\"catboost/github_toplevel/ci/toolchains/brew_clang_15.toolchain\",\n  \"ci/toolchains/clangs.toolchain\":\"catboost/github_toplevel/ci/toolchains/clangs.toolchain\",\n  \"ci/toolchains/dockcross.manylinux2014_aarch64.clangs.toolchain\":\"catboost/github_toplevel/ci/toolchains/dockcross.manylinux2014_aarch64.clangs.toolchain\",\n  \"ci/webdav_upload.py\":\"catboost/github_toplevel/ci/webdav_upload.py\",\n  \"cmake/archive.cmake\":\"\",\n  \"cmake/common.cmake\":\"\",\n  \"cmake/conan-profiles/android.arm64.profile\":\"\",\n  \"cmake/conan-profiles/android.armv7.profile\":\"\",\n  \"cmake/conan-profiles/android.x86.profile\":\"\",\n  \"cmake/conan-profiles/android.x86_64.profile\":\"\",\n  \"cmake/conan-profiles/linux.aarch64.profile\":\"\",\n  \"cmake/conan-profiles/linux.ppc64le.profile\":\"\",\n  \"cmake/conan-profiles/macos.arm64.profile\":\"\",\n  \"cmake/conan-profiles/macos.x86_64.profile\":\"\",\n  \"cmake/conan1_deprecated.cmake\":\"\",\n  \"cmake/conan_provider.cmake\":\"\",\n  \"cmake/cuda.cmake\":\"\",\n  \"cmake/cython.cmake\":\"\",\n  \"cmake/fbs.cmake\":\"\",\n  \"cmake/global_flags.cmake\":\"\",\n  \"cmake/global_flags.compiler.gnu.cmake\":\"\",\n  \"cmake/global_flags.compiler.gnu.march.cmake\":\"\",\n  \"cmake/global_flags.compiler.msvc.cmake\":\"\",\n  \"cmake/global_flags.linker.gnu.cmake\":\"\",\n  \"cmake/global_flags.linker.msvc.cmake\":\"\",\n  \"cmake/global_vars.cmake\":\"\",\n  \"cmake/protobuf.cmake\":\"\",\n  \"cmake/recursive_library.cmake\":\"\",\n  \"cmake/shared_libs.cmake\":\"\",\n  \"cmake/swig.cmake\":\"\",\n  \"conanfile.py\":\"\",\n  \"contrib/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/CMakeLists.txt\":\"\",\n  \"contrib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/CMakeLists.txt\":\"\",\n  \"contrib/libs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/base64/CMakeLists.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/avx2/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/neon32/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/neon64/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/plain32/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/plain64/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/base64/ssse3/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/CMakeLists.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/common/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/dec/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/brotli/enc/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/cblas/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/part1/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/clapack/part2/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/coreml/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/crcutil/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.txt\":\"\",\n  \"contrib/libs/cxxsupp/builtins/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxx/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxabi-parts/CMakeLists.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxcuda11/CMakeLists.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxmsvc/CMakeLists.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/cxxsupp/libcxxrt/CMakeLists.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/double-conversion/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/fastlz/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/flatbuffers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/flatbuffers/flatc/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/fmath/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/gamma_function_apache_math_port/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/gamma_function_apache_math_port/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/gamma_function_apache_math_port/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/gamma_function_apache_math_port/CMakeLists.txt\":\"\",\n  \"contrib/libs/gamma_function_apache_math_port/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/ibdrv/CMakeLists.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/jdk/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/jemalloc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/jemalloc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/jemalloc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/jemalloc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/jemalloc/CMakeLists.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/libbz2/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/libc_compat/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/libf2c/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/libunwind/CMakeLists.txt\":\"\",\n  \"contrib/libs/linux-headers/CMakeLists.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/lz4/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/lzmasdk/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/mimalloc/CMakeLists.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/nayuki_md5/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/nvidia/CMakeLists.txt\":\"\",\n  \"contrib/libs/nvidia/cub/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/nvidia/cub/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/nvidia/cub/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/nvidia/cub/CMakeLists.txt\":\"\",\n  \"contrib/libs/nvidia/cub/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/onnx/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/onnx/proto/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/protobuf/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/protoc/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/pugixml/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/rapidjson/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/re2/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/snappy/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/tbb/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/tcmalloc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/tcmalloc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/tcmalloc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/tcmalloc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/tcmalloc/CMakeLists.txt\":\"\",\n  \"contrib/libs/tcmalloc/malloc_extension/CMakeLists.txt\":\"\",\n  \"contrib/libs/tcmalloc/no_percpu_cache/CMakeLists.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/tensorboard/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/xxhash/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/zlib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/zstd/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/libs/zstd06/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/python/CMakeLists.txt\":\"\",\n  \"contrib/python/numpy/CMakeLists.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/python/numpy/include/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/CMakeLists.txt\":\"\",\n  \"contrib/restricted/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/base/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/container/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/debugging/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/flags/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/hash/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/log/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/memory/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/meta/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/numeric/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/profiling/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/status/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/strings/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/synchronization/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/time/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp-tstring/y_absl/types/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/algorithm/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/base/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/container/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/debugging/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/flags/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/functional/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/hash/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/log/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/memory/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/meta/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/numeric/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/profiling/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/random/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/status/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/strings/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/synchronization/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/time/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/types/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/restricted/abseil-cpp/absl/utility/CMakeLists.txt\":\"\",\n  \"contrib/restricted/google/CMakeLists.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/restricted/google/benchmark/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/tools/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/tools/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/tools/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/tools/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/tools/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/tools/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/tools/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/tools/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/tools/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/tools/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/tools/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/tools/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/tools/CMakeLists.txt\":\"\",\n  \"contrib/tools/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/tools/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/tools/protoc/CMakeLists.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/tools/protoc/bin/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/tools/protoc/plugins/CMakeLists.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.android-arm.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.android-arm64.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.android-x86.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.android-x86_64.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/tools/protoc/plugins/cpp_styleguide/CMakeLists.windows-x86_64.txt\":\"\",\n  \"contrib/tools/swig/CMakeLists.txt\":\"\",\n  \"contrib/tools/swig/Lib/CMakeLists.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.darwin-arm64.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.linux-aarch64.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.linux-x86_64.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"contrib/tools/swig/Lib/java/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/CMakeLists.android-arm.txt\":\"\",\n  \"library/CMakeLists.android-arm64.txt\":\"\",\n  \"library/CMakeLists.android-x86.txt\":\"\",\n  \"library/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/CMakeLists.txt\":\"\",\n  \"library/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/CMakeLists.txt\":\"\",\n  \"library/cpp/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/accurate_accumulate/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/archive/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/binsaver/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/binsaver/ut_util/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/brotli/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/bzip/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/fastlz/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/legacy_zstd06/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lz4/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/lzma/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/snappy/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zlib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/codecs/zstd/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/blockcodecs/core/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/build_info/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cache/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/case_insensitive_string/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cgiparam/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/chromium_trace/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/colorizer/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/2d_array/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/absl_flat_hash/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/compact_vector/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/comptrie/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/dense_hash/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/disjoint_interval_tree/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/flat_hash/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/intrusive_rb_tree/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/paged_vector/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/ring_buffer/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/stack_array/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/containers/stack_vector/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/coroutine/CMakeLists.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/coroutine/engine/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/coroutine/listener/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cppparser/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/cpuid_check/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/cpuid_check/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/cpuid_check/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cpuid_check/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/cpuid_check/CMakeLists.txt\":\"\",\n  \"library/cpp/cpuid_check/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cpuid_check/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/cuda/CMakeLists.txt\":\"\",\n  \"library/cpp/cuda/exception/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/cuda/exception/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/cuda/exception/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cuda/exception/CMakeLists.txt\":\"\",\n  \"library/cpp/cuda/exception/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cuda/wrappers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/cuda/wrappers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/cuda/wrappers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/cuda/wrappers/CMakeLists.txt\":\"\",\n  \"library/cpp/cuda/wrappers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/dbg_output/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/atomic/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/kmp/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/mapped_file/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/deprecated/split/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/diff/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/crc32c/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/lower_case/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/md5/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/digest/murmur/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/dns/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/dot_product/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/enumbitset/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/expression/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/fast_exp/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/fast_log/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/float16/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/float16/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/float16/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/float16/CMakeLists.txt\":\"\",\n  \"library/cpp/float16/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/float16/float16_avx_impl/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/float16/float16_avx_impl/CMakeLists.txt\":\"\",\n  \"library/cpp/float16/float16_avx_impl/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/float16/float16_dummy_impl/CMakeLists.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/getopt/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/getopt/small/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/grid_creator/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/CMakeLists.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/helpers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/index/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/index_builder/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/hnsw/logging/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/http/CMakeLists.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/http/io/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/http/misc/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/http/push_parser/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/iterator/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/jni/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/json/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/json/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/json/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/json/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/json/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/json/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/json/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/json/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/json/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/json/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/json/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/json/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/json/CMakeLists.txt\":\"\",\n  \"library/cpp/json/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/json/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/json/common/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/json/fast_sax/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/json/writer/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/l1_distance/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/l2_distance/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/langmask/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/langs/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/lcs/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/linear_regression/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/logger/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/logger/global/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/malloc/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/malloc/api/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/malloc/jemalloc/CMakeLists.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/malloc/mimalloc/CMakeLists.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/malloc/system/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/malloc/tcmalloc/CMakeLists.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/neh/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/neh/asio/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/netliba/CMakeLists.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/netliba/socket/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/netliba/v12/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/netliba/v6/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/object_factory/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/on_disk/CMakeLists.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/on_disk/chunks/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/online_hnsw/CMakeLists.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/online_hnsw/base/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/online_hnsw/dense_vectors/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/openssl/CMakeLists.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/openssl/holders/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/openssl/init/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/openssl/method/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/packers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/pair_vector_distance/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/par/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/par/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/par/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/par/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/par/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/par/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/par/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/par/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/par/CMakeLists.txt\":\"\",\n  \"library/cpp/par/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/par/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/resource/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/sanitizer/CMakeLists.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/sanitizer/include/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/sse/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/statistics/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/streams/CMakeLists.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/streams/brotli/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/streams/bzip2/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/streams/lzma/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/base64/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/csv/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/quote/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/relaxed_escaper/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/scan/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/url/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/string_utils/ztstrbuf/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/svnversion/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/terminate_handler/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/testing/CMakeLists.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/benchmark/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/common/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/gbenchmark/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/hook/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/unittest/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/testing/unittest_main/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/app_helpers/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/dictionary/idl/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/text_processing/tokenizer/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/atomic/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/chunk_queue/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/future/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/hot_swap/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/local_executor/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/mux_event/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/name_guard/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/name_guard/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/name_guard/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/name_guard/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/name_guard/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/poor_man_openmp/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/skip_list/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/threading/thread_local/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/token/CMakeLists.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/token/lite/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.android-arm.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.android-arm64.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.android-x86.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.android-x86_64.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/cpp/tokenizer/CMakeLists.windows-x86_64.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yson/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/assert/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/coding/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/exception/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/malloc/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/memory/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/misc/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/small_containers/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/string/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/system/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/yson/CMakeLists.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/cpp/yt/yson_string/CMakeLists.txt\":\"\",\n  \"library/python/CMakeLists.txt\":\"\",\n  \"library/python/hnsw/CMakeLists.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.darwin-arm64.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.linux-aarch64.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.linux-x86_64.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"library/python/hnsw/hnsw/CMakeLists.windows-x86_64.txt\":\"\",\n  \"logo/catboost.pdf\":\"catboost/github_toplevel/logo/catboost.pdf\",\n  \"logo/catboost.png\":\"catboost/github_toplevel/logo/catboost.png\",\n  \"open_problems/catboost_clickhouse_sprint_02.02.2019.md\":\"catboost/github_toplevel/open_problems/catboost_clickhouse_sprint_02.02.2019.md\",\n  \"open_problems/catboost_la_2019_sprint.md\":\"catboost/github_toplevel/open_problems/catboost_la_2019_sprint.md\",\n  \"open_problems/open_problems.md\":\"catboost/github_toplevel/open_problems/open_problems.md\",\n  \"slides/2018.09.04_MeetupTelAviv/catboost_tel_aviv_meetup_4.09.2018.pdf\":\"catboost/github_toplevel/slides/2018.09.04_MeetupTelAviv/catboost_tel_aviv_meetup_4.09.2018.pdf\",\n  \"slides/2018.09.04_MeetupTelAviv/catboost_tel_aviv_meetup_4.09.2018.pptx\":\"catboost/github_toplevel/slides/2018.09.04_MeetupTelAviv/catboost_tel_aviv_meetup_4.09.2018.pptx\",\n  \"slides/2018.09.04_Yandex_OSS_Sprint/CatBoost_OSS_sprint_02.02.18.pdf\":\"catboost/github_toplevel/slides/2018.09.04_Yandex_OSS_Sprint/CatBoost_OSS_sprint_02.02.18.pdf\",\n  \"slides/2018.09.04_Yandex_OSS_Sprint/CatBoost_OSS_sprint_02.02.18.pptx\":\"catboost/github_toplevel/slides/2018.09.04_Yandex_OSS_Sprint/CatBoost_OSS_sprint_02.02.18.pptx\",\n  \"slides/2018_EuroSciPy/catboost_euroscipy_trento_31.08.2018.pdf\":\"catboost/github_toplevel/slides/2018_EuroSciPy/catboost_euroscipy_trento_31.08.2018.pdf\",\n  \"slides/2018_EuroSciPy/catboost_euroscipy_trento_31.08.2018.pptx\":\"catboost/github_toplevel/slides/2018_EuroSciPy/catboost_euroscipy_trento_31.08.2018.pptx\",\n  \"slides/2018_GTC/CatBoost_GTC_final.key\":\"catboost/github_toplevel/slides/2018_GTC/CatBoost_GTC_final.key\",\n  \"slides/2018_GTC/S8393-Vasily-Ershov.pdf\":\"catboost/github_toplevel/slides/2018_GTC/S8393-Vasily-Ershov.pdf\",\n  \"slides/2018_NIPS/Presentation.pdf\":\"catboost/github_toplevel/slides/2018_NIPS/Presentation.pdf\",\n  \"slides/2018_NIPS/Presentation.tex\":\"catboost/github_toplevel/slides/2018_NIPS/Presentation.tex\",\n  \"slides/2018_NIPS/algorithm.png\":\"catboost/github_toplevel/slides/2018_NIPS/algorithm.png\",\n  \"slides/2018_NIPS/baselines.png\":\"catboost/github_toplevel/slides/2018_NIPS/baselines.png\",\n  \"slides/2018_NIPS/comics.pdf\":\"catboost/github_toplevel/slides/2018_NIPS/comics.pdf\",\n  \"slides/2018_NIPS/complexity_logloss.pdf\":\"catboost/github_toplevel/slides/2018_NIPS/complexity_logloss.pdf\",\n  \"slides/2018_NIPS/folds_logloss.pdf\":\"catboost/github_toplevel/slides/2018_NIPS/folds_logloss.pdf\",\n  \"slides/2018_NIPS/plain_logloss.pdf\":\"catboost/github_toplevel/slides/2018_NIPS/plain_logloss.pdf\",\n  \"slides/2018_NIPS/tbs.png\":\"catboost/github_toplevel/slides/2018_NIPS/tbs.png\",\n  \"slides/2018_PyDataBerlin/CatBoost_pydata_final.key\":\"catboost/github_toplevel/slides/2018_PyDataBerlin/CatBoost_pydata_final.key\",\n  \"slides/2018_PyDataBerlin/CatBoost_pydata_final_pdf.pdf\":\"catboost/github_toplevel/slides/2018_PyDataBerlin/CatBoost_pydata_final_pdf.pdf\",\n  \"slides/2018_datafest/CatBoost_datafest_final.key\":\"catboost/github_toplevel/slides/2018_datafest/CatBoost_datafest_final.key\",\n  \"slides/2018_datafest/CatBoost_datafest_final.pdf\":\"catboost/github_toplevel/slides/2018_datafest/CatBoost_datafest_final.pdf\",\n  \"slides/2018_techtrain/CatBoost_techtrain.pdf\":\"catboost/github_toplevel/slides/2018_techtrain/CatBoost_techtrain.pdf\",\n  \"slides/2018_techtrain/CatBoost_techtrain_final.key\":\"catboost/github_toplevel/slides/2018_techtrain/CatBoost_techtrain_final.key\",\n  \"slides/2019_11_07_intel_hands_on/2019_11_07_intel_hands_on.key\":\"catboost/github_toplevel/slides/2019_11_07_intel_hands_on/2019_11_07_intel_hands_on.key\",\n  \"slides/2019_11_07_intel_hands_on/2019_11_07_intel_hands_on.pdf\":\"catboost/github_toplevel/slides/2019_11_07_intel_hands_on/2019_11_07_intel_hands_on.pdf\",\n  \"slides/2019_11_07_intel_hands_on/2019_11_07_intel_hands_on.pptx\":\"catboost/github_toplevel/slides/2019_11_07_intel_hands_on/2019_11_07_intel_hands_on.pptx\",\n  \"slides/2019_PyConRu/catboost_pycon_2019.pdf\":\"catboost/github_toplevel/slides/2019_PyConRu/catboost_pycon_2019.pdf\",\n  \"slides/2019_PyData_London/2019_PyData_London.pdf\":\"catboost/github_toplevel/slides/2019_PyData_London/2019_PyData_London.pdf\",\n  \"slides/2019_PyData_London/2019_PyData_London.pptx\":\"catboost/github_toplevel/slides/2019_PyData_London/2019_PyData_London.pptx\",\n  \"slides/2019_icml_expo/2019_icml_expo.pdf\":\"catboost/github_toplevel/slides/2019_icml_expo/2019_icml_expo.pdf\",\n  \"slides/2019_icml_expo/2019_icml_expo.pptx\":\"catboost/github_toplevel/slides/2019_icml_expo/2019_icml_expo.pptx\",\n  \"slides/2019_odsc_east/2019_odsc_east.pdf\":\"catboost/github_toplevel/slides/2019_odsc_east/2019_odsc_east.pdf\",\n  \"slides/2019_odsc_east/2019_odsc_east.pptx\":\"catboost/github_toplevel/slides/2019_odsc_east/2019_odsc_east.pptx\",\n  \"slides/2020.03.08_tel_aviv_meetup/2020.03.08_tel_aviv_meetup.pdf\":\"catboost/github_toplevel/slides/2020.03.08_tel_aviv_meetup/2020.03.08_tel_aviv_meetup.pdf\",\n  \"slides/2020.03.08_tel_aviv_meetup/2020.03.08_tel_aviv_meetup.pptx\":\"catboost/github_toplevel/slides/2020.03.08_tel_aviv_meetup/2020.03.08_tel_aviv_meetup.pptx\",\n  \"slides/2020.04.29_DataStart/2020.04.29_data_start.pdf\":\"catboost/github_toplevel/slides/2020.04.29_DataStart/2020.04.29_data_start.pdf\",\n  \"slides/2020.05.12_MlParty/2020.05.12_ml_party.pdf\":\"catboost/github_toplevel/slides/2020.05.12_MlParty/2020.05.12_ml_party.pdf\",\n  \"slides/2020.06.30_DataStart/2020_06_30_DataStart_CatBoost_Ranking.pdf\":\"catboost/github_toplevel/slides/2020.06.30_DataStart/2020_06_30_DataStart_CatBoost_Ranking.pdf\",\n  \"slides/2020.06.30_DataStart/2020_06_30_DataStart_CatBoost_Ranking.pptx\":\"catboost/github_toplevel/slides/2020.06.30_DataStart/2020_06_30_DataStart_CatBoost_Ranking.pptx\",\n  \"slides/2020.10.07_GTC/GTC 2020 Kirillov CatBoost.pdf\":\"catboost/github_toplevel/slides/2020.10.07_GTC/GTC 2020 Kirillov CatBoost.pdf\",\n  \"slides/2020.10.07_GTC/GTC 2020 Kirillov CatBoost.pptx.7z\":\"catboost/github_toplevel/slides/2020.10.07_GTC/GTC 2020 Kirillov CatBoost.pptx.7z\",\n  \"slides/2020_DataStart_Fall/DataStart Fall 2020 Kirillov.pptx\":\"catboost/github_toplevel/slides/2020_DataStart_Fall/DataStart Fall 2020 Kirillov.pptx\",\n  \"slides/2021.03.30 LA Datascience meetup/KirillovSE_2021.03.30_LA_Data.pdf\":\"catboost/github_toplevel/slides/2021.03.30 LA Datascience meetup/KirillovSE_2021.03.30_LA_Data.pdf\",\n  \"slides/2021.03_CatBoost_for_Spark/01_Introducing_CatBoost_for_Apache_Spark.pdf\":\"catboost/github_toplevel/slides/2021.03_CatBoost_for_Spark/01_Introducing_CatBoost_for_Apache_Spark.pdf\",\n  \"slides/2021.03_CatBoost_for_Spark/01_Introducing_CatBoost_for_Apache_Spark.pptx\":\"catboost/github_toplevel/slides/2021.03_CatBoost_for_Spark/01_Introducing_CatBoost_for_Apache_Spark.pptx\",\n  \"slides/2021.03_CatBoost_for_Spark/02_CatBoost_for_Apache_Spark_Architecture.pdf\":\"catboost/github_toplevel/slides/2021.03_CatBoost_for_Spark/02_CatBoost_for_Apache_Spark_Architecture.pdf\",\n  \"slides/2021.03_CatBoost_for_Spark/02_CatBoost_for_Apache_Spark_Architecture.pptx\":\"catboost/github_toplevel/slides/2021.03_CatBoost_for_Spark/02_CatBoost_for_Apache_Spark_Architecture.pptx\",\n  \"tools/CMakeLists.android-arm.txt\":\"\",\n  \"tools/CMakeLists.android-arm64.txt\":\"\",\n  \"tools/CMakeLists.android-x86.txt\":\"\",\n  \"tools/CMakeLists.android-x86_64.txt\":\"\",\n  \"tools/CMakeLists.darwin-arm64.txt\":\"\",\n  \"tools/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"tools/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"tools/CMakeLists.linux-aarch64.txt\":\"\",\n  \"tools/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"tools/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"tools/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"tools/CMakeLists.linux-x86_64.txt\":\"\",\n  \"tools/CMakeLists.txt\":\"\",\n  \"tools/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"tools/CMakeLists.windows-x86_64.txt\":\"\",\n  \"tools/archiver/CMakeLists.android-arm.txt\":\"\",\n  \"tools/archiver/CMakeLists.android-arm64.txt\":\"\",\n  \"tools/archiver/CMakeLists.android-x86.txt\":\"\",\n  \"tools/archiver/CMakeLists.android-x86_64.txt\":\"\",\n  \"tools/archiver/CMakeLists.darwin-arm64.txt\":\"\",\n  \"tools/archiver/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"tools/archiver/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"tools/archiver/CMakeLists.linux-aarch64.txt\":\"\",\n  \"tools/archiver/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"tools/archiver/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"tools/archiver/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"tools/archiver/CMakeLists.linux-x86_64.txt\":\"\",\n  \"tools/archiver/CMakeLists.txt\":\"\",\n  \"tools/archiver/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"tools/archiver/CMakeLists.windows-x86_64.txt\":\"\",\n  \"tools/enum_parser/CMakeLists.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.android-arm.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.android-arm64.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.android-x86.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.android-x86_64.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.darwin-arm64.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.linux-aarch64.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.linux-x86_64.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"tools/enum_parser/enum_parser/CMakeLists.windows-x86_64.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.android-arm.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.android-arm64.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.android-x86.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.android-x86_64.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.darwin-arm64.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.linux-aarch64.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.linux-x86_64.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"tools/enum_parser/enum_serialization_runtime/CMakeLists.windows-x86_64.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.android-arm.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.android-arm64.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.android-x86.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.android-x86_64.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.darwin-arm64.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.linux-aarch64.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.linux-x86_64.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"tools/enum_parser/parse_enum/CMakeLists.windows-x86_64.txt\":\"\",\n  \"tools/rescompiler/CMakeLists.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.darwin-arm64.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.linux-aarch64.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.linux-x86_64.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"tools/rescompiler/bin/CMakeLists.windows-x86_64.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.android-arm.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.android-arm64.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.android-x86.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.android-x86_64.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.darwin-arm64.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.linux-aarch64.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.linux-x86_64.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"tools/triecompiler/CMakeLists.windows-x86_64.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.android-arm.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.android-arm64.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.android-x86.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.android-x86_64.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.darwin-arm64.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.linux-aarch64.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.linux-x86_64.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"tools/triecompiler/lib/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/CMakeLists.android-arm.txt\":\"\",\n  \"util/CMakeLists.android-arm64.txt\":\"\",\n  \"util/CMakeLists.android-x86.txt\":\"\",\n  \"util/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/CMakeLists.txt\":\"\",\n  \"util/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/charset/CMakeLists.android-arm.txt\":\"\",\n  \"util/charset/CMakeLists.android-arm64.txt\":\"\",\n  \"util/charset/CMakeLists.android-x86.txt\":\"\",\n  \"util/charset/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/charset/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/charset/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/charset/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/charset/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/charset/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/charset/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/charset/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/charset/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/charset/CMakeLists.txt\":\"\",\n  \"util/charset/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/charset/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/charset/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/charset/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/charset/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/charset/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/charset/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/charset/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/charset/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/charset/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/charset/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/charset/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/charset/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/charset/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/charset/ut/CMakeLists.txt\":\"\",\n  \"util/charset/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/charset/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/datetime/CMakeLists.txt\":\"\",\n  \"util/datetime/benchmark/CMakeLists.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.android-arm.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.android-arm64.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.android-x86.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/datetime/benchmark/format/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.android-arm.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.android-arm64.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.android-x86.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/datetime/benchmark/gmtime_r/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/datetime/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/digest/CMakeLists.txt\":\"\",\n  \"util/digest/benchmark/CMakeLists.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.android-arm.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.android-arm64.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.android-x86.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/digest/benchmark/murmur/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/digest/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/digest/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/digest/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/digest/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/digest/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/digest/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/digest/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/digest/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/digest/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/digest/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/digest/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/digest/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/digest/ut/CMakeLists.txt\":\"\",\n  \"util/digest/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/digest/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/draft/CMakeLists.android-arm.txt\":\"\",\n  \"util/draft/CMakeLists.android-arm64.txt\":\"\",\n  \"util/draft/CMakeLists.android-x86.txt\":\"\",\n  \"util/draft/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/draft/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/draft/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/draft/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/draft/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/draft/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/draft/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/draft/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/draft/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/draft/CMakeLists.txt\":\"\",\n  \"util/draft/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/draft/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/draft/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/draft/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/draft/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/draft/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/draft/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/draft/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/draft/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/draft/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/draft/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/draft/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/draft/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/draft/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/draft/ut/CMakeLists.txt\":\"\",\n  \"util/draft/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/draft/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/folder/CMakeLists.txt\":\"\",\n  \"util/folder/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/folder/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/folder/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/folder/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/folder/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/folder/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/folder/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/folder/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/folder/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/folder/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/folder/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/folder/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/folder/ut/CMakeLists.txt\":\"\",\n  \"util/folder/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/folder/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/generic/CMakeLists.txt\":\"\",\n  \"util/generic/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/generic/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/generic/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/generic/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/generic/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/generic/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/generic/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/generic/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/generic/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/generic/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/generic/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/generic/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/generic/ut/CMakeLists.txt\":\"\",\n  \"util/generic/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/generic/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/memory/CMakeLists.txt\":\"\",\n  \"util/memory/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/memory/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/memory/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/memory/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/memory/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/memory/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/memory/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/memory/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/memory/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/memory/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/memory/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/memory/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/memory/ut/CMakeLists.txt\":\"\",\n  \"util/memory/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/memory/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/network/CMakeLists.txt\":\"\",\n  \"util/network/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/network/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/network/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/network/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/network/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/network/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/network/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/network/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/network/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/network/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/network/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/network/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/network/ut/CMakeLists.txt\":\"\",\n  \"util/network/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/network/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/random/CMakeLists.txt\":\"\",\n  \"util/random/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/random/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/random/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/random/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/random/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/random/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/random/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/random/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/random/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/random/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/random/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/random/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/random/ut/CMakeLists.txt\":\"\",\n  \"util/random/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/random/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/stream/CMakeLists.txt\":\"\",\n  \"util/stream/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/stream/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/stream/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/stream/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/stream/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/stream/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/stream/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/stream/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/stream/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/stream/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/stream/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/stream/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/stream/ut/CMakeLists.txt\":\"\",\n  \"util/stream/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/stream/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/string/CMakeLists.txt\":\"\",\n  \"util/string/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/string/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/string/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/string/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/string/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/string/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/string/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/string/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/string/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/string/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/string/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/string/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/string/ut/CMakeLists.txt\":\"\",\n  \"util/string/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/string/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/system/CMakeLists.txt\":\"\",\n  \"util/system/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/system/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/system/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/system/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/system/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/system/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/system/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/system/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/system/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/system/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/system/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/system/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/system/ut/CMakeLists.txt\":\"\",\n  \"util/system/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/system/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/thread/CMakeLists.txt\":\"\",\n  \"util/thread/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/thread/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/thread/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/thread/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/thread/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/thread/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/thread/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/thread/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/thread/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/thread/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/thread/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/thread/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/thread/ut/CMakeLists.txt\":\"\",\n  \"util/thread/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/thread/ut/CMakeLists.windows-x86_64.txt\":\"\",\n  \"util/ut/CMakeLists.android-arm.txt\":\"\",\n  \"util/ut/CMakeLists.android-arm64.txt\":\"\",\n  \"util/ut/CMakeLists.android-x86.txt\":\"\",\n  \"util/ut/CMakeLists.android-x86_64.txt\":\"\",\n  \"util/ut/CMakeLists.darwin-arm64.txt\":\"\",\n  \"util/ut/CMakeLists.darwin-x86_64.txt\":\"\",\n  \"util/ut/CMakeLists.linux-aarch64-cuda.txt\":\"\",\n  \"util/ut/CMakeLists.linux-aarch64.txt\":\"\",\n  \"util/ut/CMakeLists.linux-ppc64le-cuda.txt\":\"\",\n  \"util/ut/CMakeLists.linux-ppc64le.txt\":\"\",\n  \"util/ut/CMakeLists.linux-x86_64-cuda.txt\":\"\",\n  \"util/ut/CMakeLists.linux-x86_64.txt\":\"\",\n  \"util/ut/CMakeLists.txt\":\"\",\n  \"util/ut/CMakeLists.windows-x86_64-cuda.txt\":\"\",\n  \"util/ut/CMakeLists.windows-x86_64.txt\":\"\"\n}"
        },
        {
          "name": ".piglet-meta.json",
          "type": "blob",
          "size": 0.05078125,
          "content": "{\n  \"project\":\"catboost\",\n  \"repository\":\"arcadia\"\n}"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.98828125,
          "content": "The following authors have created the source code of «CatBoost» published and distributed by YANDEX LLC as the owner:\n\nChief researcher, author of the algorithm and of the first implementation:\nAndrey Gulin gulin@yandex-team.ru\n\nTeam:\nAnna Veronika Dorogush annaveronika@\nStanislav Kirillov kizill@\nVictor Omelyanenko\nEvgueni Petrov Evgueni-Petrov-aka-espetrov@\nAndrey Mishenko druxa@\nPavel Kalinin pv-k@\nVyacheslav Alipov alipov@yandex-team.ru\nEgor Samosvat sameg@yandex-team.ru\nAlexander Kobotov cobat@yandex-team.ru\nDmitry Schelchkov\nVasily Ershov noxoomo@\n\nGPU implementation:\nVasily Ershov noxoomo@\n\nPython-package:\nDmitry Donskov Donskov7@\nAndrey Saitgalin asaitgalin@\nRoman Nefyodov\n\nR-package:\nVyacheslav Murashkin a4tunado\nRoman Nefyodov\nAnastasia Bezzubtseva nstbezz@\nAlexey Gorchakov algorc@\n\nVisualisation:\nIvan Karev\nSergey Berezhnoy\nRoman Rybalchenko\n\nTutorials:\nValeriy Babushkin VENHEADs@\nMikhail Pershin pershinmr@\nEmil Kayumov emilkayumov@\nEvgeny Eltyshev\n\nCoreML support:\nAlexander Baranov\n"
        },
        {
          "name": "AWESOME.md",
          "type": "blob",
          "size": 1.6416015625,
          "content": "Awesome CatBoost\n----------------\n\nThis page contains a moderated list of examples, tutorials, articles about CatBoost use cases. It is inspired by [awesome-machine-learning](https://github.com/dmlc/mxnet/blob/master/example/README.md).\n\nWe will be happy to add your success story using CatBoost to this list. Send us a pull request if you want to include your case here.\n\n\n## Use cases\n* The Large Hadron Collider beauty (LHCb) experiment uses [CatBoost](https://catboost.ai/news#particle_identification).\n* [Careem](https://careem.com/), the leading ride-hailing platform for the greater Middle East, uses CatBoost for their [Destination Prediction Service](https://blog.careem.com/en/careems-destination-prediction-service/).\n* CatBoost is used in [Kaggle Kernels](https://www.kaggle.com/kernels?sortBy=relevance&group=everyone&search=catboost&page=1&pageSize=100) to solve data science challenges.\n\n## Tools using CatBoost\n* [auto_ml](https://github.com/ClimbsRocks/auto_ml) - Automated machine learning for production and analytics. Lets you focus on the fun parts of ML, while outputting production-ready code, and detailed analytics of your dataset and results. Includes support for CatBoost and other ml libraries.\n* [mljar-supervised](https://github.com/mljar/mljar-supervised) - An Automated Machine Leaning (AutoML) open-source python package for binary and mutliclass classification and regression ML tasks. It is using CatBoost algorithm among many others. It provides explanations for CatBoost models: feature importance computed by permutation method and SHAP explanations: feature importance, dependency plots and decision plots (computed with CatBoost internals).\n"
        },
        {
          "name": "CMakeLists.android-arm.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.android-arm64.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.android-x86.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.android-x86_64.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.darwin-arm64.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.darwin-x86_64.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.linux-aarch64-cuda.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.linux-aarch64.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.linux-ppc64le-cuda.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.linux-ppc64le.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.linux-x86_64-cuda.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.linux-x86_64.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 3.619140625,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\ncmake_minimum_required(VERSION 3.15)\nif (POLICY CMP0132)\n  cmake_policy(SET CMP0132 NEW)\nendif()\n\nproject(CATBOOST LANGUAGES C CXX ASM)\n\nset(BUILD_SHARED_LIBS Off)\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_EXTENSIONS Off)\nset(CATBOOST_MAX_LINK_JOBS 5 CACHE STRING \"Maximum parallel link jobs for Ninja generator\")\nset_property(GLOBAL PROPERTY JOB_POOLS link_jobs=${CATBOOST_MAX_LINK_JOBS})\nset(CMAKE_JOB_POOL_LINK link_jobs)\n\nlist(APPEND CMAKE_MODULE_PATH ${PROJECT_BINARY_DIR} ${PROJECT_SOURCE_DIR}/cmake)\ninclude_directories(${PROJECT_SOURCE_DIR} ${PROJECT_BINARY_DIR})\nlist(APPEND CMAKE_CTEST_ARGUMENTS \"--output-on-failure\")\nenable_testing()\n\n# Disable 'empty CUDA_ARCHITECTURES not allowed' warning\n# Can't set it in cuda.cmake because of CMake policy subdirectory stack rules\ncmake_policy(SET CMP0104 OLD)\n\ninclude(cmake/global_flags.cmake)\ninclude(cmake/global_vars.cmake)\ninclude(cmake/archive.cmake)\ninclude(cmake/common.cmake)\ninclude(cmake/cuda.cmake)\ninclude(cmake/cython.cmake)\ninclude(cmake/fbs.cmake)\ninclude(cmake/protobuf.cmake)\ninclude(cmake/recursive_library.cmake)\ninclude(cmake/shared_libs.cmake)\ninclude(cmake/swig.cmake)\n\n\nif (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\" AND NOT HAVE_CUDA)\n  include(CMakeLists.linux-x86_64.txt)\nelseif (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\" AND HAVE_CUDA)\n  include(CMakeLists.linux-x86_64-cuda.txt)\nelseif (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" AND NOT HAVE_CUDA)\n  include(CMakeLists.linux-aarch64.txt)\nelseif (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"aarch64\" AND HAVE_CUDA)\n  include(CMakeLists.linux-aarch64-cuda.txt)\nelseif (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"ppc64le\" AND NOT HAVE_CUDA)\n  include(CMakeLists.linux-ppc64le.txt)\nelseif (CMAKE_SYSTEM_NAME STREQUAL \"Linux\" AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"ppc64le\" AND HAVE_CUDA)\n  include(CMakeLists.linux-ppc64le-cuda.txt)\nelseif (CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\")\n  include(CMakeLists.darwin-x86_64.txt)\nelseif (CMAKE_SYSTEM_NAME STREQUAL \"Darwin\" AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"arm64\")\n  include(CMakeLists.darwin-arm64.txt)\nelseif (WIN32 AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"AMD64\" AND NOT HAVE_CUDA)\n  include(CMakeLists.windows-x86_64.txt)\nelseif (WIN32 AND CMAKE_SYSTEM_PROCESSOR STREQUAL \"AMD64\" AND HAVE_CUDA)\n  include(CMakeLists.windows-x86_64-cuda.txt)\nelseif (ANDROID AND CMAKE_ANDROID_ARCH STREQUAL \"arm\")\n  include(CMakeLists.android-arm.txt)\nelseif (ANDROID AND CMAKE_ANDROID_ARCH STREQUAL \"arm64\")\n  include(CMakeLists.android-arm64.txt)\nelseif (ANDROID AND CMAKE_ANDROID_ARCH STREQUAL \"x86\")\n  include(CMakeLists.android-x86.txt)\nelseif (ANDROID AND CMAKE_ANDROID_ARCH STREQUAL \"x86_64\")\n  include(CMakeLists.android-x86_64.txt)\nendif()\n\n"
        },
        {
          "name": "CMakeLists.windows-x86_64-cuda.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CMakeLists.windows-x86_64.txt",
          "type": "blob",
          "size": 0.896484375,
          "content": "# This file was generated by the YaTool build system (https://github.com/yandex/yatool),\n# from a source YaTool build configuration provided in ya.make files.\n#\n# If the repository supports both CMake and ya build configurations, please modify both of them.\n#\n# If only CMake build configuration is supported then modify only CMake files and note that only\n# simple modifications are allowed like adding source-files to targets or adding simple properties\n# like target_include_directories. These modifications will be ported to original ya.make files\n# by maintainers. Any complex modifications which can't be easily ported back to the ya build\n# system may be rejected.\n#\n# Please refer to the build instructions in the repository for more information about manual\n# changes in this file.\n\nadd_subdirectory(util)\nadd_subdirectory(contrib)\nadd_subdirectory(library)\nadd_subdirectory(tools)\nadd_subdirectory(catboost)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.74609375,
          "content": "# Notice to external contributors\n\n\n## General info\n\nHello! In order for us (YANDEX LLC) to accept patches and other contributions from you, you will have to adopt our Yandex Contributor License Agreement (the “**CLA**”). The current version of the CLA can be found here:\n1) https://yandex.ru/legal/cla/?lang=en (in English) and \n2) https://yandex.ru/legal/cla/?lang=ru (in Russian).\n\nBy adopting the CLA, you state the following:\n\n* You obviously wish and are willingly licensing your contributions to us for our open source projects under the terms of the CLA,\n* You have read the terms and conditions of the CLA and agree with them in full,\n* You are legally able to provide and license your contributions as stated,\n* We may use your contributions for our open source projects and for any other project too,\n* We rely on your assurances concerning the rights of third parties in relation to your contributions.\n\nIf you agree with these principles, please read and adopt our CLA. By providing us your contributions, you hereby declare that you have already read and adopt our CLA, and we may freely merge your contributions with our corresponding open source project and use it further in accordance with terms and conditions of the CLA.\n\n## Provide contributions\n\nIf you have already adopted terms and conditions of the CLA, you are able to provide your contributions. When you submit your first pull request, please add the following information into it:\n\n```\nI hereby agree to the terms of the CLA available at: [link].\n```\n\nReplace the bracketed text as follows:\n* [link] is the link to the current version of the CLA: https://yandex.ru/legal/cla/?lang=en (in English) or https://yandex.ru/legal/cla/?lang=ru (in Russian).\n\nIt is enough to provide this notification only once.\n"
        },
        {
          "name": "CPP_STYLE_GUIDE.md",
          "type": "blob",
          "size": 20.712890625,
          "content": "﻿# C++ Style Guide\n\n## Background\n\nThis guide describes the conventions for formatting C/C++ code. Consistent code formatting (following coding conventions) is essential for collaboration on large projects, because it makes it significantly easier and faster to read someone else's code.\n\n**The point is that you don't write a program for a computer (\"But it works!\") or for yourself (\"Just ask and I'll tell you how it works\"), but for all developers who are reading, modifying, and debugging it, and their needs should be respected.**\n\nPlease be aware that use of imperative, object-oriented C++ (version C++14) is assumed. This means:\n- Don't use plain C. Use the new operator, not malloc. Assume that the new operator can throw an exception and doesn't return \"0\" for unsuccessful memory allocation.\n- Use C++ as an imperative language, not as a functional language. You can use templates, but not for things like compile-time calculations. Use range-based for, not for_each.\n- Don't use boost, and limit use of STL (Use optimized counterparts available in /util instead of some of the parts that are poorly implemented in STL, such as std::string -> TString, std::streams -> TInputStream, TOutputStream). We don't encourage reinventing the wheel (we've already invented everything and just check the /util).\n- A restricted subset of the new C++14 syntax is in use that works with all supported compilers (see [*C++14 features* below](#c-14-features)) .\n\nCurrently, there is a small subset of code in the source tree that doesn't conform to the standards outlined below (partly because some of these code blocks were written about 15+ years ago). Nevertheless, this standard must be followed when writing new code.\n\n### Style correction policy\n\n- The general rule for fixing the style in old code is \"one file – one style.\" In other words, if you are fixing an error and this involves changes to just a few lines, follow the original style in the file. If the fixed code is written in the new style, then you need to change all the code in the entire file for consistency, and in some cases even the entire code for the class (for example, if fields or methods are renamed).\n- If the author of the code doesn't agree with the style of the fixes, they can rewrite it, but the author's changes must match the style described in this guide (including the previous point).\n- Commits that fix style should be differentiated from commits that change functionality.\n- Don't change the style in files that you aren't modifying, and don't change the line formatting if it follows the recommendations in this guide. Don't forget that every line has an author, and this is tracked in the VCS (e.g. svn, git, hg, etc.) log. When you change someone else's formatting, you become the author of that line without reason for it.\n\n### Corrections to this guide\n\n- Like any other document that describes the preferences of a group of people, this set of conventions is the result of lengthy debates and mutual compromise. So before fixing anything in it, please approve the changes with everyone involved. If you don’t know who to go to for approval, please refrain from making changes.\n- When putting together this guide, the authors tried to streamline it as much as possible and only specify the issues that negatively affect code readability, since any additional rules do little more than upset the people who have to learn new habits. For this reason, when proposing a correction or addition, always use the following algorithm: a) justify why this issue is an eyesore for the majority of people, and therefore must be specified; b) if you have proven the first point, then suggest exactly how this issue should be specified; C) explain how the proposed specification minimizes the collective re-learning efforts of the entire team.\n\n### Tools\n\nTo automatically format C++ files, use the `ya style` command. It is based on clang-format with the correct config (located at devtools/ya/handlers/style/config), which can be used separately if your editor uses clang-format directly.\n\n## Names\n\nA name should reflect the essence of the data, the type, or the action that it names. Only commonly-used abbreviations are allowed in names. Conventional single-letter names (i, j, k) are only allowed for counters and iterators. Structures are also classes, and everything related to classes also applies to structures (unless explicitly stated otherwise).\n\n### Variables\n\n#### Capitalization, prefixes, and underscores\n\n- Local and global variables begin with a lowercase letter.\n\n- Function names begin with an uppercase letter.\n\n- Function pointers, like ordinary variables, begin with a lowercase letter: `auto localFunction = [&]() { ... }`\n\n- Function arguments begin with a lowercase letter.\n\n- Class members begin with an uppercase letter.\n\n- Class methods begin with an uppercase letter.\n\n- Class names and type definitions (typedefs) are preceded by the prefix T, followed by the name of the class beginning with an uppercase letter. The names of virtual interfaces start with 'I'.\n\n- All global constants and defines are fully capitalized.\n\n- Tokens in complex names of variables and functions are differentiated by capitalizing the first letter of the token (without inserting an underscore).  Tokens in fully capitalized names of constants are separated by underscores.\n\n- Using the underscore as the first character of a name is prohibited.\n\n- Hungarian notation is prohibited.\n\n```cpp\nclass TClass {\npublic:\n    int Size;\n    int GetSize() {\n    return Size;\n    }\n};\nTClass object;\nint GetValue();\nvoid SetValue(int val);\n```\n\n*Exception:* The names of functions, classes, and so on that mimic or extend functions of standard libraries (libc, stl, etc.) should follow the library's naming convention. Examples are TVector, fget, autoarray, sprintf, equivalents of the main function. These classes and functions are usually located in /util.\n\n#### Macros\n\nIf you do have to use a macro, you need to make sure that it is unique (for example, it should match the hierarchy of directories in the path to this file). If the macro is intended to be used as part of your library's API, then the macro must have the Y_ prefix (for example, see the macros in util/system/compiler.h).\n\n#### Enumerations\n\nGlobal enums should be named using the same rules as for classes, but with a capital letter E. The members of these enums should be named using all capital letters, just as for global constants, which is what they actually are. Names must have a prefix formed by the first letters of the enum.\n\n```cpp\nenum EFetchType {\n    FT_SIMPLE,\n    FT_RELFORM_DEBUG,\n    FT_ATR_DEBUG,\n    FT_SELECTED,\n    FT_ATR_SELECTED,\n    FT_LARGE_YA\n};\n```\n\nFor enum members of a class, follow the same rules as for other members of a class, since this is the same thing as constant members:\n```cpp\nclass TIndicator {\npublic:\n    enum EStatus {\n        Created,\n        Running,\n        Suspended,\n        Aborted,\n        Failed,\n        Finished\n    };\n    ...\n};\n```\n\nUnnamed enums are allowed only in class members:\n```cpp\nclass TFile {\n    public:\n    enum {\n        Invalid = -1\n    };\n    ...\n};\n```\n\nC++11 enums should be formed in the same way as enum class members, since they have a similar scope.\n```cpp\nenum class EStatus {\n    Created,\n    Running,\n    Suspended,\n    Aborted,\n    Failed,\n    Finished\n};\n```\n\nDo not create your own constructions for converting enums to TString and back. Use GENERATE_ENUM_SERIALIZATION.\n\nInstead of the last field with the number of fields in the enum, you can use `GENERATE_ENUM_SERIALIZATION_WITH_HEADER`.\n\n#### Semantics and pragmatics of naming\n\nTry to make sure that the program makes sense in English, meaning it resembles a cohesive and meaningful English text:\n\n- The first token in the function name should reflect the action performed by the function.\n- The names of container variables are plural.\n\nFor counter variables, do not use the names DocNum, NumDoc, DocsCount, DocsNum, and CountDoc because they are ungrammatical and ambiguous. For the number of elements (such as documents), you can use `NumDocs` or `DocCount`. For a function that explicitly counts this number for a long time, `CountDocs()` is acceptable.\n\n## Formatting\n\n### Tabs\n\nDon't use tabs in a text editor. The reason is because this is the only way to ensure that your program is readable on any device.  Make sure that your text editor has an option to replace the tab character with spaces. For example, in the TextPad editor, select the \"Convert new tabs to spaces\" option.\n\n### Indents\n\nOur standard indent is 4 spaces.  The indent should be filled with spaces, even if you use the Tab button.\n\n### Block style\n\nFor block operators, use the 1TBS style:\n\n```cpp\nif (something) { // K&R style\n    One();\n    Two();\n} else {\n    Three();\n    Four();\n}\nfor (int i = 0; i < N; ++i) { // K&R style\n    // do something...\n}\n```\n\nMulti-line conditions are an exception (if the condition doesn't fit on one line, split it into several), and they are written like this:\n```cpp\nif (a && b && c &&\n    d && e)\n{\n    Op();\n}\n```\n\nFor functions and methods, you can use either of two styles:\n```cpp\nFunc1(a, b, c)\n{\n}\n```\n\nor\n```cpp\nFunc1(a, b, c) {\n}\n```\n\nThe style of the curly brackets must be consistent within the same file.\n\n**Short blocks**\n\nSingle-line bodies of operators and inline functions must begin with a new line. Bodies of operators and functions declared in the same line make debugging difficult.\n```cpp\nif (something)\n    A();\n```\n\nThe subordinate operator must not be empty. Not allowed:\n```cpp\nfor (int i = 0; i < 100; i++);\n```\nThe reason is this text looks like a typo that wasn't caught at the compilation stage.\n\n**Operators**\n\nDon't use more than one operator per line.\n\n**Blank lines**\n\nWe recommended leaving blank lines between separate logical blocks of code. This greatly improves readability.\n\n### Spaces\n\n#### Operator symbols\n\nAll operator symbols, with the exception of unary operators and the member access operator for structures, should have a space on both sides:\n```cpp\na = b;\nx += 3;\nz = a / 6;\n```\n\nThis includes the assignment operator. In other words, write:\n```cpp\nif (!x.a || ~(b->c - e::d) == 0)\n    z = 0;\n\nvoid F() throw () {\n}\n\nstruct T {\n    void F() const throw () {\n    }\n};\n```\n\n#### Brackets\n\nDo not put a space after a function name, after the opening parenthesis, or before the closing bracket:\n```cpp\nFunc(a, b, c);\n```\n\nDo put a space between the operator and the bracket:\n```cpp\nif ()\nfor ()\nwhile ()\n```\n\nThe spaces inside brackets should look like this:\n```cpp\nFunc(a, b, c);\n(a + b)\n```\n\n\nInside a range-based for:\n```cpp\nfor (auto& x : c) {\n}\n```\n\nAsymmetric spaces are not allowed.\n\nWhen instantiating templates, use triangular brackets without spaces.\n```cpp\nvector<vector<int>> matrix;\n```\n\n#### End of line\n\nThere shouldn't be any spaces at the end of a line. Use the options in your text editor to control this.\n\nSettings in text editors\n\n- TextPad: \"Strip trailing spaces from lines when saving\".\n\n- Vim\n```vim\naugroup vimrc\n  \" Automatically delete trailing DOS-returns and whitespace on file open and\n  \" write.\n  autocmd BufRead,BufWritePre,FileWritePre * silent! %s/[\\r \\t]\\+$//\naugroup END\n```\n\n- Emacs\n```\n(add-hook 'c-mode-common-hook\n          (lambda () (add-to-list 'write-file-functions 'delete-trailing-whitespace)))\n```\n\n## Lambda functions\n\nSingle-line lambdas are allowed only in one case: to define the function where it is used. However, the lambda function itself should not violate the other rules of the style guide:\n```cpp\nSort(a.begin(), a.end(), [](int x, int y) -> bool {return x < y;}); //OK\n```\n\n```cpp\nSort(a.begin(), a.end(), [](int x, int y) -> bool {int z = x - y; return z < 0;}); //not OK - you can't have 2 statements on the same line\n```\n\nIn all other cases, they should be formatted as follows:\n```cpp\nauto f = [](int x, int y) -> bool { //K&R style, the same as for for/if/while\n    return x < y;\n};\n\n// you can also use 'auto&& f' if the lambda function is \"heavy\"\n\nSort(a.begin(), a.end(), f);\n```\n\n## Variables and classes\n\n### Variable declarations\n\nThe preferred format is \"one declaration per line.\" It is allowed to declare multiple variables of the same type on the same line. It is not allowed to mix arrays, pointers, references, and simple types. Do not use line wrapping in the declaration.\n```cpp\nint    level;                  // preffered\nint    size;\n\nint    level, size;            // allowed\n\nint    level,\n       size;                   // prohibited: line wrapping\n\nint level, array[16], *pValue; // prohibited: mixed types\n```\n\n### Class and structure declarations\n\n- A structure can only contain open members. You don't need to specify `public` for it. If the structure contains anything other than members, a constructor, and a destructor, we recommend that you rename it to a class.\n\n- The scope labels start from the same column where the class declaration begins. Specifying scopes is mandatory, including the first private scope.\n\n- Members and methods can't be in the same section of scopes. They should be separated by re-specifying the scope. There should be a minimal number of scope labels, reduced to the fewest possible by changing the order of the parts of the class declaration.\n\n- Within one scope:\n   * Constructors must precede the destructor.\n   * A destructor must precede redefined operators.\n   * Redefined operators must precede the rest of the methods.\n\n- A public scope with methods must precede `protected` and `private` scopes with methods.\n\n- Class data members should be placed at the beginning or at the end of the class description. Class type descriptions can precede data descriptions.\n\n```cpp\nclass TClass {\nprivate:\n    int Member; // comments about Member\npublic:\n    TClass();\n    TClass(const TClass& other);\n    ~TClass();\n};\n```\n\nThe word `template` should start a separate line.\n\n### Constructors\n\nConstructors should be formatted as follows:\n```cpp\nTClass::TClass()\n    : FieldA(1)\n    , FieldB(\"value\")\n    , FieldC(true)\n{\n    // some more\n    // code here\n}\n```\n\n### Initializing class data\n\nOne of the following variations is allowed:\n```cpp\nstruct T {\n    int X = 0;\n    double Y = 1.0;\n};\n```\n\nor\n\n```cpp\nstruct T {\n    int X;\n    double Y;\n\n    T() //this implementation can also be in a .cpp file \n        : X(0)\n        , Y(1.0)\n    {\n    }\n};\n```\n\nThe reason is that if you mix two types of initialization, it's much easier to forget to initialize some member of the class, since the initialization code is \"spread out\" (possibly across multiple source files).\n\n## Namespaces\n\nNamespaces should be formatted like classes, except for the name. Namespaces must begin with a capital letter N:\n```cpp\nnamespace NStl {\n    namespace NPrivate {\n        //the namespace nesting level is restricted to two\n    }\n\n    class TVectorType {\n    };\n}\n```\n\n## C++14 features\n\n### Constexpr\n\nOnly constexpr from C++11 is allowed, because constexpr for non-constant methods is not supported by MSVC.\n\n### Variable templates\n\nVariable templates can be used because MSVC 2015 Update 3 or newer is in use and supports that.\n\n### Alternative function syntax\n```cpp\nauto f() -> decltype() {}\n```\nor\n```cpp\nauto f() {}\n```\n\nOnly use it where it is truly necessary.\n\n### nullptr/0/NULL\n\nAlways use nullptr.\n\n### using/typedef\n\nIn new code, prefer 'using' (as a more general mechanism), except when this is not possible. There are cases when the combination of 'using' + templates with an unknown number of parameters + function type leads to compilation errors in MSVC:\n\n```cpp\ntemplate <class R, class Args...>\nstruct T {\n    using TSignature = R (Args...);\n};\n```\n\nIn this case, you should use typedef.\n\n### override\n\nIn derived classes, use override without virtual.\n```cpp\nclass A {\n    virtual ui32 f(ui32 k) const {\n    }\n};\n\nclass B: public A {\n    ui32 f(ui32 k) const override {\n    }\n};\n```\n\n## Comments\n\nComments are for explaining the code where they are located. Do not use comments to remove an unnecessary function or block, especially if this is the old version of a function you corrected. Simply delete any unnecessary parts of the code – you can always go to VCS (e.g. svn, git, hg, etc.) to retrieve the deleted section if you suddenly realize how useful it was. The main harm from commenting previous versions of the code, instead of removing them, is that VCS diff won't work correctly.\n\nComments should be written in English with correct spelling and grammar.\n\nIt is useful to explain the purpose of each class member in the class description. MSVC editor displays this line in the tooltip in \"smart editing\" mode.\n\nDoxygen-style comments are encouraged.\n\nTo make it easier to search for your TODO comments in the code, use one of two formats:\n```cpp\n// Presumably a temporary comment with notes to yourself:\n// TODO (username): fix me later\n```\n\n```cpp\n// Comment with the ticket:\n// TODO (ticket_number): fix me later\n```\n\n## Files and preprocessor\n\n### File names\n\nCapital letters are not allowed in file names. File extensions for C++: \"cpp\", \"h\".\n\n### Preprocessor\n\nIndents in the preprocessor are also 4 spaces. Keep the hash in the first position.\n```cpp\n#ifdef Z\n#   include\n#elif Z\n#   define\n#   if\n#       define\n#   endif\n#else\n#   include\n#endif\n```\n\nWith a preprocessing conditional in the middle of the file, we start in the first position.\n```cpp\nfunc A() {\n    int x;\n#ifdef TEST_func_A // ifndef + else = schisophrenia\n    x = 0;\n#else\n    x = 1;\n#endif\n}\n```\n\n### include\n\nThe include files should not be interdependent, meaning an include file must be compileable by itself as a separate compilation unit. If the include file contains references to types that are not described in it:\n\n- If this is a standard type, include the minimum standard include file, such as cstddef or cstdio.\n- If this is the name of a class, structure, or enumeration, and it is used by a reference or pointer, write a forward declaration directly in the include file.\n- In all other cases, include a file with the declaration of the corresponding class.\n\nThe using namespace declaration is not allowed inside include files.\n\nInclude files should be specified in the order of less general to more general (regardless of whether it's in cpp or another include), so that a more specific file is included before a more general file. This order allows you to once again check the independence of the other included header files. For example, for the library/cpp/json/some_program/some_class.cpp file, the order of inclusion is:\n\n- The paired header file. Always in quotation marks.\n```cpp\n#include \"some_class.h\"\n```\n\n- Files from the local directory. Always in quotation marks.\n```cpp\n#include \"other_class.h\"\n#include \"other_class2.h\"\n```\n\n- Next, groups of files from the project superdirectories in order of nesting.\n```cpp\n// library/cpp/json\n#include <library/cpp/json/json_reader.h>\n\n// library\n#include <library/cpp/string_utils/base64/base64.h>\n#include <library/cpp/threading/local_executor/local_executor.h>\n```\n\n- Everything else except util.\n```cpp\n#include <contrib/libs/rapidjson/include/rapidjson/reader.h>\n```\n\n- util\n```cpp\n#include <util/folder/dirut.h>\n#include <util/system/yassert.h>\n```\n\n- C header files.\n```cpp\n#include <cmath>\n#include <cstdio>\n#include <ctime>\n```\n\n- System header files if the code can't be migrated.\n```cpp\n#include <Windows.h>\n```\n\nThus, all non-local names (from other directories) are written in angle brackets.\nWithin each group, alphabetical sorting is preferable.\n\nTo include files just once:\n```cpp\n#pragma once\n..\n..\n```\n\n## Error handling\n\n### Run-time errors\n\nErrors should be handled using exceptions:\n```cpp\n#include <util/generic/yexception.h>\n\nclass TSomeException: public yexception {\n....\n};\n\n...\n\nif (errorHappened) {\n    ythrow TSomeException(numericCode) << \"error happened (\" << usefulDescription << \")\";\n}\n```\n\nError handling using return codes like\n```cpp\nif (Func1() == ERROR1) {\n    return MY_ERROR1;\n}\n\nif (Func2() == ERROR2) {\n    return MY_ERROR2;\n}\n```\nis prohibited everywhere except in specially stipulated cases:\n\n- In C code.\n- Processing return codes of C functions (such as libc).\n- In places that are particularly critical to performance (each such case is considered separately).\n\n### Invariant verification\n\nTo test various kinds of compile-time invariants (for example, sizeof(int) == 4), use static_assert. To test run-time invariants, instead of assert(), use the Y_ASSERT() macro, since it is better integrated into Visual Studio.\n\n## Cross-platform wrappers\n\nCalling platform-dependent system functions is allowed only in /util. In order to use specific system primitives, use the cross-platform wrappers from /util. If the necessary wrapper does not exist, you can write one (preferably using OOP) and add it to util (don't forget the code review).\n\n## Exceptions to the general rules\n\n### contrib\n\nThe /contrib folder contains libraries and programs from 3rd parties. Obviously, they use their own style of writing code. If there is a need to add something to contrib that isn't there yet, create a ticket for discussion and decision making.\n\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.0537109375,
          "content": "Problem:\ncatboost version:\nOperating System:\nCPU:\nGPU:\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.103515625,
          "content": "Copyright 2017-2024 YANDEX LLC\n\n                               Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2017 YANDEX LLC\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.6279296875,
          "content": "Before submitting a pull request, please do the following steps:\n\n1. Read [instructions for contributors](https://catboost.ai/docs/concepts/development-and-contributions.html).\n2. Make sure [the code builds](https://catboost.ai/en/docs/concepts/build-from-source).\n3. If you add new functionality [add tests](https://catboost.ai/en/docs/concepts/development-and-contributions#run-tests) to check it.\n4. [Run existing tests](https://catboost.ai/en/docs/concepts/development-and-contributions#run-tests) to make sure you haven't broken anything.\n5. If you haven't already, sign [the Contributor License Agreement](https://yandex.ru/legal/cla/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.3046875,
          "content": "<img src=http://storage.mds.yandex.net/get-devtools-opensource/250854/catboost-logo.png width=300/>\n\n[Website](https://catboost.ai) |\n[Documentation](https://catboost.ai/docs/) |\n[Tutorials](https://catboost.ai/docs/concepts/tutorials.html) |\n[Installation](https://catboost.ai/docs/concepts/installation.html) |\n[Release Notes](https://github.com/catboost/catboost/releases)\n\n[![GitHub license](https://img.shields.io/github/license/catboost/catboost.svg)](https://github.com/catboost/catboost/blob/master/LICENSE)\n[![PyPI version](https://badge.fury.io/py/catboost.svg)](https://badge.fury.io/py/catboost)\n[![Conda Version](https://img.shields.io/conda/vn/conda-forge/catboost.svg)](https://anaconda.org/conda-forge/catboost)\n[![GitHub issues](https://img.shields.io/github/issues/catboost/catboost.svg)](https://github.com/catboost/catboost/issues)\n[![Telegram](https://img.shields.io/badge/chat-on%20Telegram-2ba2d9.svg)](https://t.me/catboost_en)\n[![Twitter](https://img.shields.io/badge/@CatBoostML--_.svg?style=social&logo=twitter)](https://twitter.com/CatBoostML)\n\nCatBoost is a machine learning method based on [gradient boosting](https://en.wikipedia.org/wiki/Gradient_boosting) over decision trees.\n\nMain advantages of CatBoost:\n--------------\n  - Superior quality when [compared](https://github.com/catboost/benchmarks/blob/master/README.md) with other GBDT libraries on many datasets.\n  - Best in class [prediction](https://catboost.ai/docs/concepts/c-plus-plus-api.html) speed.\n  - Support for both [numerical and categorical](https://catboost.ai/docs/concepts/algorithm-main-stages.html) features.\n  - Fast GPU and multi-GPU support for training out of the box.\n  - Visualization tools [included](https://catboost.ai/docs/features/visualization.html).\n  - Fast and reproducible distributed training with [Apache Spark](https://catboost.ai/en/docs/concepts/spark-overview) and [CLI](https://catboost.ai/en/docs/concepts/cli-distributed-learning).\n\nGet Started and Documentation\n--------------\nAll CatBoost documentation is available [here](https://catboost.ai/docs/).\n\nInstall CatBoost by following the guide for the\n * [Python package](https://catboost.ai/en/docs/concepts/python-installation)\n * [R-package](https://catboost.ai/en/docs/concepts/r-installation)\n * [Сommand line](https://catboost.ai/en/docs/concepts/cli-installation)\n * [Package for Apache Spark](https://catboost.ai/en/docs/concepts/spark-installation)\n\nNext you may want to investigate:\n* [Tutorials](https://github.com/catboost/tutorials/#readme)\n* [Training modes and metrics](https://catboost.ai/docs/concepts/loss-functions.html)\n* [Cross-validation](https://catboost.ai/docs/features/cross-validation.html#cross-validation)\n* [Parameters tuning](https://catboost.ai/docs/concepts/parameter-tuning.html)\n* [Feature importance calculation](https://catboost.ai/docs/features/feature-importances-calculation.html)\n* [Regular](https://catboost.ai/docs/features/prediction.html#prediction) and [staged](https://catboost.ai/docs/features/staged-prediction.html#staged-prediction) predictions\n* CatBoost for Apache Spark videos: [Introduction](https://youtu.be/47-mAVms-b8) and [Architecture](https://youtu.be/nrGt5VKZpzc)\n\nIf you cannot open documentation in your browser try adding yastatic.net and yastat.net to the list of allowed domains in your privacy badger. \n\nCatboost models in production\n--------------\nIf you want to evaluate Catboost model in your application read [model api documentation](https://github.com/catboost/catboost/tree/master/catboost/CatboostModelAPI.md).\n\nQuestions and bug reports\n--------------\n* For reporting bugs please use the [catboost/bugreport](https://github.com/catboost/catboost/issues) page.\n* Ask a question on [Stack Overflow](https://stackoverflow.com/questions/tagged/catboost) with the catboost tag, we monitor this for new questions.\n* Seek prompt advice at [Telegram group](https://t.me/catboost_en) or Russian-speaking [Telegram chat](https://t.me/catboost_ru)\n\nHelp to Make CatBoost Better\n----------------------------\n* Check out [open problems](https://github.com/catboost/catboost/blob/master/open_problems/open_problems.md) and [help wanted issues](https://github.com/catboost/catboost/labels/help%20wanted) to see what can be improved, or open an issue if you want something.\n* Add your stories and experience to [Awesome CatBoost](AWESOME.md).\n* To contribute to CatBoost you need to first read CLA text and add to your pull request, that you agree to the terms of the CLA. More information can be found\nin [CONTRIBUTING.md](https://github.com/catboost/catboost/blob/master/CONTRIBUTING.md)\n* Instructions for contributors can be found [here](https://catboost.ai/docs/concepts/development-and-contributions.html).\n\nNews\n--------------\nLatest news are published on [twitter](https://twitter.com/catboostml).\n\nReference Paper\n-------\nAnna Veronika Dorogush, Andrey Gulin, Gleb Gusev, Nikita Kazeev, Liudmila Ostroumova Prokhorenkova, Aleksandr Vorobev [\"Fighting biases with dynamic boosting\"](https://arxiv.org/abs/1706.09516). arXiv:1706.09516, 2017.\n\nAnna Veronika Dorogush, Vasily Ershov, Andrey Gulin [\"CatBoost: gradient boosting with categorical features support\"](http://learningsys.org/nips17/assets/papers/paper_11.pdf). Workshop on ML Systems\nat NIPS 2017.\n\nLicense\n-------\n© YANDEX LLC, 2017-2024. Licensed under the Apache License, Version 2.0. See LICENSE file for more details.\n"
        },
        {
          "name": "RELEASE.md",
          "type": "blob",
          "size": 114.4853515625,
          "content": "# Node package Release 1.26.0\n(uses `catboostmodel` native libraries from the main CatBoost release v1.2.7)\n* Fix MultiClassification models support. #1903\n* Fix predict on GPU. #1901, #1923.\n* Make specifying categorical features parameter optional.\n* Support text and embedding features. #2523\n* Add support for 'MultiProbability' prediction type\n* Support Linux aarch64\n* Support macOS arm64\n* Support Windows x86_64\n\n\n# Release 1.2.7\n\n## Bugfixes\n* \\[R-package\\]: Restore basic functionality.\n\n## Build & testing\n* \\[GPU\\] Return configuration for multi-node GPU training with CMake-based build. See [documentation](https://catboost.ai/en/docs/installation/cli-installation-multi-node-installation).\n\n\n# Release 1.2.6\n\n## Major changes\n* CatBoost open source build, test and release infrastructure has been switched to GitHub actions. It is possible to run it if you fork CatBoost repository as well. See [the announcement](https://github.com/catboost/catboost/discussions/2708) for details.\n\n## Python package\n* Adapt `numpy` dependency specification to prohibit `numpy >= 2.0` for now. #2671\n\n## New features\n* User-defined metric GPU evaluation for task_type=GPU. Thanks to @pnsemyon.\n* GPU Custom objective support. Thanks to @pnsemyon.\n* \\[C/C++ applier\\]. `APT_MULTI_PROBABILITY` prediction type is now supported. #2639. Thanks to @aivarasbaranauskas.\n* `GroupQuantile` metric\n* [Aggregated graph features](https://catboost.ai/en/docs/features/graph-aggregated-features)\n\n## Build & testing\n* \\[Windows\\]: Visual Studio 2022 with MSVC toolset 14.29.30133 is now supported. #2302\n\n## Speedups\n* \\[GPU\\]: Increase block size in `QueryCrossEntropy` (~3x faster on a100 for 6m samples, 350 features, query size near 1).\n\n## Improvements\n* \\[datasets\\] Use mkstemp to replace deprecated mktemp. #2660. Thanks to @fatmo666\n\n## Bugfixes\n* \\[C/C++ applier\\]. Add missed `PredictSpecificClassFlat` to calcer.exports. #2715\n* \\[Linux\\]. Restore readable backtraces\n* \\[GPU\\] Make CUDA_MAX_THREADS_PER_SM cuda arch-specific\n* \\[JVM applier\\]: Fixed bloating temp directory with copies of native libraries on Windows. #2622. Thanks to @DKARAGODIN.\n* Calculate F1, Precision, and Recall for all labels in multi-label classification\n* Synchronize values of NCB::NModelEvaluation::EPredictionType and EApiPredictionType. #2643\n* Fix sign of 2nd derivative for Tweedie loss\n* Fix 'Can't find borders for feature ...' error when using text features on GPU. #2657\n* Fix indexing of tokenized text features in model saver and dataset loader when some features are ignored\n* Fix descent direction for Cox regression fix #2701\n* Fix GetTreeNodeToLeaf in multidimensional case (fixes plot_tree for multidimensional approx with non-oblivious trees). #2668\n\n\n# Release 1.2.5\n\n## New features\n* \\[Python-package\\]: Support custom eval metrics on GPU. #1792. Thanks to @pnsemyon.\n\n## Bugfixes\n* \\[Python-package\\]: Check eval_period parameter validity for staged prediction. #2593\n* \\[Python-package\\]: Fix _CustomLoggersStack.pop logic. #2620\n* \\[R-package\\]: Fix Caret object: Inconsistent grid creation with documentation. #2609\n* \\[JVM applier\\]: Fix issues with exposing undesired symbols in JNI shared libraries (including allocators) on macOS. #2606\n* Fix training with embedding features on GPU. #2249, #2308, #2591\n* Fix training with text features on GPU\n* Use correct sample count in MultiRMSE on multiple GPUs. #2557\n* Fix sign of 2nd order derivative in Huber loss\n* Enable gradient walker for non-additive metrics\n* Fixes for Cox objective: buffer overflow in derivatives calculation, derivatives summation, metric calculation, disable ordered boosting\n* Fix text features data serialization in the model files\n\n\n# Release 1.2.3\n\n## Python package\n* Support Python 3.12. #2510\n* \\[Performance\\]: Fix ineffective loops in Cython. Significant speedups (up to 3x) on dataset construction from data in C-order can be expected.\n* \\[Performance\\]: Make features data initialization from C-order `numpy.ndarray`s with `float32` data type multithreaded. Significant speedups of 5x up to 10x (on CPUs with many cores) can be expected. #385, #2542\n* Save training metrics into the model metadata. So `best_score_`, `evals_result_`, `best_iteration_` model attributes now work after model saving and loading. Can be removed by model metadata manipulation if needed. #1166\n* \\[Breaking change\\]. Support a separate boolean target type, now `Class` predictions for models that have been trained with boolean targets will also be boolean instead of `True`, `False` strings as before. Such models will be incompatible with the previous versions of CatBoost appliers. If you want the old behavior convert your target to `False`, `True` strings before training. #1954\n* Restrict `jupyterlab` version for setup to 3.x for now. Fixes #2530\n* `utils.read_cd`: Support CD files with non-increasing column indices.\n* Make `log_cout`, `log_cerr` specification consistent, avoid reset in recursive calls.\n* Late-initialize default values for `log_cout`, `log_cerr`. #2195\n* Add missing generated metrics: `Cox`, `PairLogitPairwise`, `UserPerObjMetric`, `SurvivalAft`.\n\n## New features\n* Support boolean target/labels type during training in Python and Spark (in the latter case only when using `fit` with `Pool` arguments) and `Class` prediction in Python. #1954\n* \\[Spark\\]: Support Spark 3.5.x.\n* \\[C/C++ applier\\]. Add functions for getting indices of features of different types to C and C++ API. #2568. Thanks to @nimusp.\n* \\[C/C++ applier\\]. Add staged prediction functions to C API. #2584. Thanks to @Mb-NextTime.\n* \\[JVM applier\\]. Add loading CatBoostModel from a byte array to API. #2539\n* \\[Linux\\] Support CgroupsV2 when computing default number of threads used in parallel computations. #2519. Thanks to @elukey.\n* \\[CLI\\] Support printing `Auxiliary` columns by name in evaluation result output. #1659\n* Save training metrics into the model metadata. Can be removed by model metadata manipulation if needed. #1166\n\n## Build & testing\n* \\[Windows\\]: Use `clang-cl` from Visual Studio 2022 for the build without CUDA (build with CUDA still uses standard Microsoft toolchain from Visual Studio 2019).\n* \\[macOS\\]: Pass `os.version` to `conan` host settings to ensure version consistency.\n* \\[Linux aarch64\\]: Set `-mno-outline-atomics` for modern versions of CLang and GCC to avoid unresolved symbols linking errors. #2527\n* Added missing `CMakeLists` for unit tests for `util`. #2525\n\n## Bugfixes\n* \\[Performance\\]: Fix performance regression that could slow down training on GPU by 50% on some datasets that had been introduced in release 1.2. Thanks to @JeanPaulShapo.\n* \\[Python-package\\]: Fix segfault on Pool(data=None). #2522\n* \\[Python-package\\]: Fix Python exception in `Pool()` when `pairs_weight` is a numpy array. #1913\n* \\[Python-package\\]: Fix segfault and other strange errors when specifying custom logger with `__call__` method. #2277\n* \\[Python-package\\]: Fix returning complex params in hyperparameter search. #1741, #1833\n* \\[Python-package\\]: Fix ignored exceptions for missed metrics descriptions on startup. This has not been visible to users but has been making debugging more difficult.\n* \\[Python-package\\]: Fix misleading `Targets are required for YetiRank loss function.` error in Cross validation. #2083\n* \\[Python-package\\]: Fix `Pool.get_label()` returns constant `True` for boolean labels. #2133\n* \\[Python-package\\]: Copying models does not lose `best_score_`, `evals_result_`, `best_iteration_` attributes values anymore. #1793\n* \\[Spark\\]: Fix hangs at the end of the training. #2151\n* `Precision` metric default value in the absense of positive samples is changed to 0 and a warning is added\n (similar to the behavior of `scikit-learn` implementation). #2422\n* Fix ignoring embedding features\n* Try to avoid hash collisions when computing group ids with datasets with a lot of groups (may occur in datasets with around a 10^9 samples).\n* Fix Multiclass models export to C++ and Python code. #2549\n* Fix dataset_statistics mode when no `Target` data is available.\n* Fix `Error: can't proceed some features` error on GPU. #1024\n* Fix `allow_const_label=True` for classification. #1933\n* Add checking of approx and target dimensions for `SurvivalAft` objective/metric.\n* Fix Focal loss derivatives sign. #2563\n\n\n# Release 1.2.2\n\n## Bugfixes\n* Fix Segmentation fault when using custom `eval_metric` in binary python packages of version 1.2.1 on PyPI. #2486\n* Fix LossFunctionChange fstr with embedding features.\n* Fix a segmentation fault in JVM applier when using embedding features on JVM 11+.\n* Fix CTR data handling in model summation (especially for models with CTRs with multiple target quantizations).\n\n\n# Release 1.2.1\n\n## New features\n* Allow to optimize specific ranking loss functions with YetiRank and YetiRankPairwise by specifying `mode` parameter. See [Which Tricks are Important for Learning to Rank?](https://arxiv.org/abs/2204.01500) paper for details (this family of losses is called `YetiLoss` there). CPU-only for now.\n* Add Kernel Gradient Boosting support (use `catboost.sample_gaussian_process` function). #2408, thanks to @TakeOver. See [Gradient Boosting Performs Gaussian Process Inference](https://arxiv.org/abs/2206.05608) paper for details.\n* LambdaMart loss: support new target metrics MRR, ERR and MAP.\n* StochasticRank loss: support new target metrics ERR and MRR.\n* Support MultiRMSE on GPU. #2264, #2390\n* Load JSON model format in Java Client. #1627, thanks to @timotta\n* Implement exporting of Multiclass models to C++ and Python. #2283, thanks to @antoninkriz\n\n## Improvements\n* Speedup BM25 feature calcers 3x\n* Use `int` instead of deprecated `numpy.int`. #2378\n* Add `ModelCalcerWrapper::CalcFlatTransposed`, #2413 thanks to @faucct\n* Update dependencies to avoid known vulnerabilities\n\n## Bugfixes\n* Fix __shfl_up_sync mask. #2339\n* TFocalMetric negative values fix. #2386, thanks to @diditforlulz273\n* Focal loss: Use user-defined alpha and gamma\n* Fix exception propagation: Rethrow exceptions caused by user's python code as C++ exceptions\n* CatBoost trained with user defined objective was incompatible with ShapValues calculation\n* Avoid nan's in Newton step calculation for RMSEWithUncertainty\n* Fix score method for y with shape (N, 1). #2405\n* Fix scalePosWeight support for Spark. #2470\n\n\n# Release 1.2\n## Major changes\nCatBoost's build system has been switched from Ya Make (Yandex's build system) to [CMake](https://cmake.org/). This means more transparency in the build process and more familiar tools for Open Source developers.\nFor now it is possible to build CatBoost for:\n* Linux on x86-64 with or without CUDA\n* Linux on aarch64 with or without CUDA\n* macOS on x86-64 and arm64, including creating universal binaries\n* Windows on x86-64 with or without CUDA\n* Android (only model applier) on [All supported ABIs](https://developer.android.com/ndk/guides/abis).\n\nThis allowed us to prepare the Python package in the source distribution form (also known as `sdist`). #830\n\n* `msvs` subdirectory with the Microsoft Visual Studio solution has been removed. Visual Studio solutions can be generated using CMake instead.\n* `make` subdirectory with Makefiles has been removed. Use `CMake` + `ninja` (recommended) or `CMake` + `make` instead.\n\n## Python package\n* Switch to the standard Python build and installation method that uses `setup.py` instead of the custom `mk_wheel.py` script. All common scenarios (`sdist`, `build`, `install`, editable `install`, `bdist_wheel`) are supported.\n* Switch wheel platform tag on Linux from obsolete `manylinux1` to `manylinux2014`.\n* The source distribution is now available on PyPI. #830\n* Support Python 3.11. #2213\n* Drop support for obsolete Python 3.6.\n* Make wheels [PEP427](https://peps.python.org/pep-0427/)-compliant. #2165\n* Fix wrong checksums in wheels that caused problems with poetry. #2331\n* Improved performance due to caching TBB local executors. #2203\n* Add `fixed_binary_splits` to the regressor, classifier, and ranker.\n* Compatibility with pandas 2.0. #2320\n* CatBoost widget is now compatible with ipywidgets 8.x. #2266\n\n## Rust package\n* Support CUDA applier. #1925, thanks to @getumen.\n* Properly forward debug/release setting to native library build.\n* Passing features: switch from `String` and `Vec` types for features to `AsRef` of slices to make code more generic\n* Support text and embedding features.\n* Support multidimensional output in predictions.\n\n## New features\n* \\[JVM applier\\]: Support CUDA.\n* \\[Spark\\]: Support Spark 3.4.x (if you want to use Spark with python 3.11 use this version).\n* Static model applier library now works on Windows.\n* Add `binary-classification-threshold` parameter to the CLI model applier.\n* Support Multi-target regression with text features (but only Bag-of-Words features are generated for now). #2229\n* Support `RMSEWithUncertainty` loss function on GPU. #1573\n* Support `MultiLogloss` and `MultiCrossEntropy` loss functions with numerical features on GPU.\n* Support `MultiLogloss` loss function with text features on CPU and GPU. #1885\n* Enable univariate metrics for models with uncertainty\n* Add `Focal` loss (CPU-only for now). #1807, thanks to @diditforlulz273.\n\n## Improvements\n* Removed legacy dependency on Python 2 interpreter in the build process. #2297\n* Calc metrics: Throw catboost exception if column index exceeds column count.\n* Speedup `MultiLogloss` on CPU by 8% per tree (110K samples, 20 targets, 480 float features, 3 cat features, 16 cores CPU).\n* Update .NET projects from obsolete .NET Core 2.1 to .NET Core 3.1.\n* Code generation for new CUDA Compute Architectures 8.6, 8.9 and 9.0 is enabled by default (requires CUDA 11.8 to build from source).\n* Check that evaluator implementation is available in  `TFullModel::SetEvaluatorType` (it was possible to get a Segmentation fault when calling it for non-available implementstion). Add `TFullModel::GetSupportedEvaluatorTypes`.\n* Cross Validation on GPU no longer requires `allow_write_files=True`.\n\n## Bugfixes\n* \\[Python-package\\]: Clear model params before load_model. Fixes #2205.\n* \\[Python-package\\]: Fix CatBoostRanker score computation. #2231\n* \\[Python-package\\]: Fix `_get_embedding_feature_indices`. #2273\n* \\[Python-package\\]: Fix `set_feature_names` with text or embedding features. #2090\n* \\[Python-package\\]: pandas.Categorical.categories is not necessarily a numpy.ndarray. #1965\n* \\[Spark\\]: Pass classpath in a file to avoid hitting cmdline length limits. #1842\n* \\[CUDA Applier\\]: Apply scale and bias.\n* \\[CUDA Applier\\]: Fix that `libs/model_interface applier` always produced an error in CUDA mode.\n* Fix CUDA error 700 in pairwise ranking.\n* Fix kernel registration for distributed training on GPU.\n* Fix `floating point exception' on CPU for small datasets on GPU.\n* Fix wrong log message 'There are invalid params and some of them will be ignored'. #2253\n* Fix incorrect results and crashes for GPU applier on Nvidia Ampere - based GPUs.\n* Fix 'CUDA error 9' in Multi-GPU training.\n* Fix serialization of embedding features structures in the model.\n* Fix GPU buffer overrun in distributed multi-classification training.\n* Fix `catboost/cuda/cuda_util/sort.cpp:166: CUDA error 9` on Nvidia Ampere - based GPUs.\n* Fix inf/nan parsing in dataset input files.\n* Fix floating point exception for very small datasets on GPU.\n* Fix: built static applier library lacked the part with 'global' objects. #2187\n* Fix sum of models with categorical features with CTRs.\n* Fix: model_interface/cmake_example failed build \"‘runtime_error’ is not a member of ‘std’\". #2324, thanks to @Mandelag.\n* Fix Segmentation fault in Cross Validation and hyperparameter search functions that use it on GPU.\n* Fix Segmentation fault in `utils.eval_metrics` for groupwise metrics when group data has not been specified. #2343\n* Fix errors when running Cross Validation repeatedly on GPU. #2221\n\n\n# Release 1.1.1\n## New features\n* Support building for Linux on aarch64 from sources using CMake (no prebuilt binaries or PyPI packages yet). #1981\n* [C/C++ applier] Support embedding features. #2172\n* [C/C++ applier] Add `GetModelUsedFeaturesNames`. #2204\n* [Python] Add text features to `utils.create_cd`. #2193\n* [Spark] Full support for Apache Spark 3.3\n* [Spark] Read/write PySpark's DataFrame-like API for Pool. #2030\n* [Spark] Allow to specify trainingDriver and worker listening ports. #2181\n\n## Bugfixes\n* Fix prediction dimension check for RMSEWithUncertainty and MultiQuantile. #2155\n* [C/C++ applier] Fix segmentation fault in prediction for multiple objects for multiple dimension models.\n* [JVM applier] Fix catboost-common dependency version in catboost-prediction (Fixes JVM applier on macOS). #2121\n* [Python] Update for pandas 1.5.0: iteritems -> items (Fixes annoying deprecation warning). #2179\n* [Python] Fix segmentation fault when target is `np.ndarray` with `dtype=object`. #2201\n* [Python] Fix specifying `feature_names` in `utils.create_cd`. #2211\n\n\n# Release 1.1\n## New features\n* Multiquantile regression\n\n  Now it's possible to train models with shared tree structure and multiple predicted quantile values in each leaf. Currently this approach doesn't give a strong guarantee for predicted quantile values consistency, but it still provides more consistency than training multiple independent models for each quantile. You can read [short description in the documentation](https://catboost.ai/en/docs/concepts/loss-functions-regression#MultiQuantile). Short example for Python: `loss_function='MultiQuantile:alpha=0.2,0.4'`. Supported only on CPU for now.\n* Support text and embedding features for regression and ranking.\n* Spark: Read/write Spark's Dataset-like API for Pool. #2030\n* Support HashedCateg column type. This allows to use externally prehashed categorical features both in training and prediction.\n* New option `plot_file` in Python functions with `plot` parameter allows to save plots to file. #758\n* Add eval_fraction parameter. #1500\n* Non-symmetric trees model summation.\n* `init_model` parameter now works with non-symmetric trees.\n* Partial support for Apache Spark 3.3 (only for Scala 2.12 and without PySpark).\n\n## Speedups\n* 2x speedup DCG, nDCG and FilteredDCG metrics calculation for groups with >= 50 objects and with top=-1 (all objects from each group, default value)\n* Fixed 2x slowdown of PairLogit and other ranking losses on CPU introduced in release 0.23\n\n## Bugfixes\n* Fix for pandas integer array. #2096\n* Save feature names to json format. #2102\n* Fix feature weights on CPU\n* Use feature weights on GPU\n* Fix gradient calculation for QueryRMSE on GPU\n* Fix ranking metrics with group weights in calc_metrics\n* Fix JVM applier on data with text features. #2132\n\n\n# Release 1.0.6\n## New features\n\n* Fixed splits for binary features on GPU for non-symmetric trees -- specify the set of splits to start each tree in the model with `--fixed-binary-splits` or `fixed_binary_splits` in Python package (by default, there are no fixed splits)\n\n\n## Documentation\n\n* New sections on [MultiRMSEWithMissingValues](https://catboost.ai/en/docs/concepts/loss-functions-multiregression#MultiRMSEWithMissingValues)\nand [LogCosh](https://catboost.ai/en/docs/concepts/loss-functions-regression#LogCosh)\n* New section on [get_embedding_feature_indices](https://catboost.ai/en/docs/concepts/python-reference_pool_get_embedding_feature_indices)\n* Add info on GPU support for metrics\n\n\n## Bug-fixes\n\n* Fix warning about resetting logger when logging to sys.stdout & sys.stderr from different threads #1855\n* Fix model summation in CatBoost for Apache Spark\n* Fix performance and scalability of query auc for ranking (1m samples, query size 2, 8 CPU cores 0.55s -> 0.04s)\n* Fix support for text features and embeddings in Java applier #2043\n* Fix nan/inf split scores with yeti rank pairwise loss\n* Fix nan/inf feature strengths in pair logit on CPU\n\n\n# Release 1.0.5\n## New features\n\n* Support Apple Darwin arm64 architecture. #1526.\n* Support feature tags in feature selection.\n* Support for Apache Spark 3.2.\n* Model sum in Apache Spark.\n\n## Python package\n\n* Accommodate multiple target-platform arguments used to build universal binaries.\n* Add grid creation function to utils.py\n* Custom multilabel eval metrics by @ELitvinova\n* Metrics plotter by @evgenabramov\n* Fbeta score by @ELitvinova\n\n## Bugfixes\n\n* Fix group weights in metrics calculation.\n* Fix `fit` for PySpark estimators. #1976.\n* Fix predict on GPU. #1901, #1923.\n* Disable exact leafs calculation for `MAE`, `MAPE`, `Quantile` on GPU.\n* Fix counter description for plotting. #1973.\n* Allow weights in `BrierScore`. #1967.\n* Disable AUC calculation for learn by default on GPU as well.\n* Fix `plot_tree` example in documentation.\n* Fix plots in `cv`.\n* Fix ui32 overflows in pairwise losses on GPU.\n* Fix for multiclass in nodejs evaluator. #1903.\n* Fix CatBoost R package installation on Monterey. #1912.\n* Fix CUDA error 700 caused by data race in mimalloc and CUDA driver.\n* Fix slow compilation with CUDA 11.2+.\n* Fix 2nd derivative in RMSEWithUncertainty.\n\n\n# Release 1.0.4\n\n## New features\n* Add `sort` param to `FilteredDCG` metric.\n* Add `StochasticRank` for `FilteredDCG`.\n\n## Python package\n* add is_max/minimizable methods. #1915\n* Support custom metric in select_features #1920\n\n## R package\n* Register functions from libcatboostr natively in R, removing one of CRAN notes.\n\n## Bugfixes\n* Fix apply for models without main `loss_function`.\n* Fix text calcer options specification. #1916\n* Fix `calc_feature_statistics`\n* Fix Multi-approx support in CLI `calc_metrics` mode.\n* Fix processing for text options. #1930\n* Fix snapshot saving in feature selection.\n* Fix CatBoost models serialization inside pipeline models in PySpark. #1936\n\n\n# Release 1.0.3\n\n## CatBoost for Apache Spark\n* Fix Linux `so` in deployed Maven artifacts (no code changes)\n\n\n# Release 1.0.2\n\n## CatBoost for Apache Spark\n* PySpark: Fix python -> JVM `datetime.timedelta` conversion.\n* Fix: proper handling of constant categorical features. #1867\n* Fix SIGSEGV for for Multiclassification with Ctrs. #1886\n\n## New features.\n* Add `is_min_optimal`, `is_max_optimal` for `BuiltinMetrics`. #1890\n\n## R package\n* Use `libcatboostr-darwin.dylib` instead of `libcatboostr-darwin.so` on macOS. #1834\n\n## Bugfixes\n* Fix `CatBoostError: (No such file or directory) bad new file name` when using `grid_search`. #1893\n\n\n# Release 1.0.1\n\n> :warning: **PySpark support is broken in this release.**: Please use release 1.0.3 instead.\n\n## CatBoost for Apache Spark\n* More robust handling of CatBoost Master and Workers failures, avoid freezes.\n* Fix for empty partitions. #1687\n* Fix use-after-free. #1759 and other random errors.\n* Support Spark 3.1.\n\n## Python package\n* Support python 3.10. #1575\n\n## Breaking changes\n* Use group weight for generated pairs in pairwise losses\n\n## Bugfixes\n* Switch to mimalloc allocator on Linux and macOS to avoid problems with static TLS.\n* Fix SEGFAULTs on macOS. #1877\n* Fix: Distributed training: do not fail if worker contains only learn or test data\n* Fix SEGFAULT on CPU with Depthwise training and `rsm` < 1.\n* Fix `calc_feature_statistics` for cat features. #1882\n* Fix result of cv for metric_period case\n* fix `eval_metric` for Multitarget training\n\n\n# Release 1.0.0\n\nIn this release we decided to increment major version as we think that CatBoost is ready for production usage. We know, that CatBoost is used a lot in many different companies and individual projects, and not it's not only a \"psychological\" maturity - we think, that all the features we added in the last year and in current release is worth to update major version. And of course, as many programmers we love magic of binary numbers and we want to celebrate 100₂ anniversary since CatBoost first release on github :)\n## New losses\n* We've implemented multi label multiclass loss function, that allows to predict multiple lables for each object #1420\n* Added LogCosh loss implementation #844\n\n## Fully distributed CatBoost for Apache Spark\n* In this release we our Apache Spark package became truly distributed - in previouse version CatBoost stored test datasets in controller process memory. And now test datasets are splitted evenly by workers.\n\n## Major speedup on CPU\n* Speedup training on numeric datasets (480K rows, 60 features, 100 trees, binclass, 20% speedup on 16 cores Intel CPU 3.7s -> 2.9s)\n\n## R package\n* Update C++ handles by reference to avoid redundant copies by @david-cortes\n* Avoid calculating groupwise feature importance: do not calculate feature importance for groupwise metrics by default\n* R tests clear environment after runs so they won't find temporary data from previous runs\n* Fixed ignored features in R fail whet single feature were ignored\n* Fix feature_count attribute with ignored_features\n\n## CV improvements\n* Added support for text features and embeddings in crossvalidation mode\n* We've changed the way crossvalidation works - previously, CatBoost was training a small batch of trees on each fold and then switched to next fold or next batch of trees. In 1.0.0 we changed this behaviour and now CatBoost trains full model on each fold. That allows us to reduce memory and time overhead of starting new batch - only one CPU to GPU memory copy is needed per fold, not per each batch of trees. Mean metric interactive plot became unavailable until the end of training on all folds.\n* **Important change** From now on `use_best_model` and early stopping works independently on each fold, as we are trying to make single fold trainig as close to regular training as possible. If one model stops at iteration `i` we use it's last value in mean score plot for points with `[i+1; last iteration)`.\n\n## GPU improvements\n* Fixed distributed training performance on Ethernet networks ~2x training time speedup. For 2 hosts, 8 v100/host, 10gigabit eth, 300 factors, 150m samples, 200 trees, 3300s -> 1700s\n* We've found a bug in model-size-reg implementation in GPU that leaded to worse quality of resulting model, especially in comparison to model trained on CPU with equal parameters\n\n## Rust\n* Enabled load model from buffer for rust by @manavsah\n\n## Bugfixes\n* Fix for model predictions with text and embedding features\n* Switch to TBB local executor to limit TLS size and avoid memory leakage #1835\n* Switch to tcmalloc under linux x86_64 to avoid memory fragmentation bug in LFAlloc\n* Fix for case of ignored text feature\n* Fixed application of baseline in C++ code. Moved addition of that before application of activation functions and determining labels of objects.\n* Fixes for scikit-learn compatibility validation #1783 and #1785\n* Fix for thread_count = -1 in set_params(). Issue #1800\n* Fix potential sigsegv in evaluator. Fixes #1809\n* Fix slow (u)int8 & (u)int16 parsing as catfeatures. Fixes #718\n* Adjust boost from overage option before auto learning rate\n* Fix embeddings with CrossEntropy mode #1654\n* Fix object importance #1820\n* Fix data provider without target #1827\n\n\n# Release 0.26.1\n\n## R package\n* Supported text features in R package, thanks to\n* Supported virtual Ensembles in R\n\n## New features\n* Thank @gmrandazzo for adding multiregression with missing values on targets - `MultiRMSEWithMissingValues` loss function\n* Supported multiclass prediction in C++ wrapper for model inference C API\n\n## Bugfixes\n* Renamed keyword parameter in `predict_proba` function from `X` to `data`, fixes #1785\n* R feature importances: remove pool argument, fix #1438 and #1772\n* Fix CUDA training on Windows, multiple issues. main issue with details #1735\n* Issue #1728: don't dereference pointers when there is no features\n* Fixed empty tree processing in feature strength calculation\n* Fixed missing loss graph points in select_features, #1775\n* Sort csr matrix indices, fixes #1749\n* Fix error \"active CatBoost worker is already present in the current process\" after previous training interruption or failure. #1795.\n* Fixed erroneous warnings from models validation after training with custom loss or custom error function. Fixes #873 Fixes #1169\n\n# Release 0.26\n\n## New features\n* #972. Add model evaluation on GPU. Thanks to @rakalexandra.\n* Support Langevin on GPU\n* Save class labels to models in cross validation\n* #1524. Return models after CV. Thanks to @vklyukin\n* [Python] #766. Add CatBoostRanker & pool.get_group_id_hash() for ranking. Thanks to @AnnaAraslanova\n* #262. Make CatBoost widget work in jupyter lab. Thanks to @Dm17r1y\n* [GPU only] Allow to add exponent to score aggregation function\n* Allow to specify threshold parameter for binary classification model. Thanks to @Keksozavr.\n* [C Model API] #503. Allow to specify prediction type.\n* [C Model API] #1201. Get predictions for a specific class.\n\n## Breaking changes\n* Use CUDA 11 by default. CatBoost GPU now requires Linux x86_64 Driver Version >= 450.51.06 Windows x86_64 Driver Version >= 451.82.\n\n## Losses and metrics\n* Add MRR and ERR metrics on CPU.\n* Add [LambdaMart](https://www.microsoft.com/en-us/research/publication/from-ranknet-to-lambdarank-to-lambdamart-an-overview/) loss.\n* #1557. Add survivalAFT base logic. Thanks to @blatr.\n* #1286. Add Cox Proportional Hazards Loss. Thanks to @fibersel.\n* #1595. Provide object-oriented interface for setting up metric parameters. Thanks to @ks-korovina.\n* Change default YetiRank decay to 0.85 for better quality.\n\n## Python package\n* #1372. Custom logging stream in python package. Thanks to @DianaArapova.\n* #1304. Callback after iteration functionality. Thanks to @qoter.\n\n## R package\n* #251. Train parameter synonyms. Thanks to @ebalukova.\n* #252. Add `eval_metrics`. Thanks to @ebalukova.\n\n## Speedups\n* [Python] Speed up custom metrics and objectives with `numba` (if available)\n* [Python] #1710. Large speedup for cv dataset splitting by sklearn splitter\n\n## Other\n* Use Exact leaves estimation method as default on GPU\n* [Spark] #1632. Update version of Scala 2.11 for security reasons.\n* [Python] #1695. Explicitly specify WHEEL 'Root-Is-Purelib' value\n\n## Bugfixes\n* Fix default projection dimension for embeddings\n* Fix `use_weights` for some eval_metrics on GPU - `use_weights=False` is always respected now\n* [Spark] #1649. The earlyStoppingRounds parameter is not recognized\n* [Spark] #1650. Error when using the autoClassWeights parameter\n* [Spark] #1651. Error about \"Auto-stop PValue\" when using odType \"Iter\" and odWait\n* Fix usage of pairlogit weights for CPU fallback metrics when training on GPU\n\n\n# Release 0.25.1\n\n## Speedup\n* Now CatBoost uses non-owning Numpy arrays for passing c++ data to user-defined metric and loss functions in Python. This opens lot's of speedup probabilities: using those vectors in numba.jitted code, in cython code or just using numpy vector functions. Thanks @micyril!\n\n## Bugfixes\n* Fix #1620 - retrieval of R pointers by @david-cortes\n* Fix `EvalMetricsResult.get_metric()` by @Roffild\n* Fix multiclass AUC calculation #1615\n\n\n# Release 0.25\n\n## CatBoost for Apache Spark\nThis release includes CatBoost for Apache Spark package that supports training, model application and feature evaluation on Apache Spark platform. We've prepared [CatBoost for Apache Spark introduction](https://www.youtube.com/watch?v=47-mAVms-b8) and [CatBoost for Apache Spark Architecture\n](https://www.youtube.com/watch?v=nrGt5VKZpzc) videos for introduction. More details available at [CatBoost for Apache Spark home page](https://github.com/catboost/catboost/tree/master/catboost/spark/catboost4j-spark).\n\n\n## Feature selection\nCatBoost supports recursive feature elimination procedure - when you have lot's of feature candidates and you want to select only most influential features by training models and selecting only strongest by feature importance. You can look for details in our [tutorial](https://github.com/catboost/catboost/blob/master/catboost/tutorials/feature_selection/select_features_tutorial.ipynb)\n\n## New features\n* Supported exact leaves estimation method for quantile, MAE and MAPE losses on GPU. You can enable it by setting ```leaf_estimation_method=Exact``` explicitly, in next releases we are planning to set it by default.\n* Supported uncertainty prediction for multiclassification models\n* #1568 Added support shap values calculation MultiRMSE models\n* #1520 Added support for ```pathlib.Path``` in python package\n* #1456 Added prehashed categorical features and text features to C API for model inference.\n\n## Losses and metrics\n* Supported Huber and Tweedie losses in GPU training\n* QueryAUC metric implemented by @fibersel\n\n\n## Breaking changes\n* We changed NDCG calculation principle for groups without relevant docs to make our NDCG score fully compatible with XGBoost and LightGBM implementations. Now we calc ```dcg==1``` when there is no relevant objects in group (when ideal DCG equals zero), later we used ```score==0``` in that case.\n\n## Speedups\n* With help of Intel developers team we switched our threading model implementation to Intel Threading Building Blocks. That gives us up to 20% speedup on 28 threads and around 2x speedup when training in 120 threads and largely improves scalability.\n* Speed up rendering fstat plots.\n* Slightly speed up string casting in python package during pool creation.\n\n## R package\n* Added path expansion when saving/loading files in R by @david-cortes\n* Added functionality to restore R handle after deserializing model by @david-cortes\n* Retrieve R pointers outside loops to speed up scalar access by @david-cortes\n* Multiple R documentation edits from @david-cortes and @jameslamb\n* #1588 Added precision for converting params to json\n\n## Bugfixes\n* #1525 Problem with missing exported functions in Windows R package dll\n* #1315 Low CPU utilization in CPU cross-validation\n* #785 Predict on single item with iloc fixed by @feeeper\n* Segfaults due to null pointer in pool in R package fixed by @david-cortes\n* #1553 Added check for baseline dimensions count in apply\n* #1606 Allow to use CatBoost in AWS Lambda environment: fix bug with setting thread names\n* #1609 and #1309 Print proper error message if all params in grid were invalid\n* Ability to use docstrings in estimators added by @pawelopiela\n* Allow extra space at the end of line for libsvm format\n\n## Thanks!\n*  We would like to recognize Intel software engineering team’s contributions to Catboost project.\n* Many thanks to our individual contributors: @david-cortes  @jameslamb @pawelopiela @feeeper @fibersel\n\n# Release 0.24.4\n\n## Speedup\n* Major speedup asymmetric trees training time on CPU (2x speedup on Epsilon with 16 threads). We would like to recognize Intel software engineering team’s contributions to Catboost project.\n\n## New features\n* Now we publish Python 3.9 wheels. Related issues: #1491, #1509, #1510\n* Allow `boost_from_average` for `MultiRMSE` loss.\n* Add tag pairwise=False for sklearn compatibility. Fixes issue #1518\n\n## Bugfixes:\n* Allow fstr calculation for datasets with embeddings\n* Fix `feature_importances_` for fstr with texts\n* Virtual ensebles fix: use proper unshrinkage coefficients\n* Fixed constants in RMSEWithUnceratainty loss function calculation to correspond values from original paper\n* Allow shap values calculation for model with zero-weights and non-zero leaf values. Now we use sum of leaf weights on train and current dataset to guarantee non-zero weights for leafs, reachable on current dataset. Fixes issues #1512, #1284\n\n# Release 0.24.3\n\n\n## New functionality\n* Support fstr text features and embeddings. Issue #1293\n\n## Bugfixes:\n* Fix model apply speed regression from 0.24.1 & 0.24.2\n* Different fixes in embeddings support: fixed apply and model serialization, fixed apply on texts and embeddings\n* Fixed virtual ensembles prediction - use proper scaling, fix apply (issue #1462)\n* Fix `score()` method for `RMSEWithUncertainty` issue #1482\n* Automatically use correct `prediction_type` in `score()`\n\n# Release 0.24.2\n\n## Uncertainty prediction\n* Supported uncertainty prediction for classification models.\n* Fixed RMSEWithUncertainty data uncertainty prediction - now it predicts variance, not standard deviation.\n\n## New functionality\n* Allow categorical feature counters for `MultiRMSE` loss function.\n* `group_weight` parameter added to `catboost.utils.eval_metric` method to allow passing weights for object groups. Allows correctly match weighted ranking metrics computation when group weights present.\n* Faster non-owning deserialization from memory with less memory overhead - moved some dynamically computed data to model file, other data is computed in lazy manner only when needed.\n\n## Experimental functionality\n* Supported embedding features as input and linear discriminant analysis for embeddings preprocessing. Try adding your embeddings as new columns with embedding values array in Pandas.Dataframe and passing corresponding column names to `Pool` constructor or `fit` function with `embedding_features=['EmbeddingFeaturesColumnName1, ...]` parameter. Another way of adding your embedding vectors is new type of column in Column Description file `NumVector` and adding semicolon separated embeddings column to your XSV file: ```ClassLabel\\t0.1;0.2;0.3\\t...```.\n\n## Educational materials\n* Published new [tutorial](https://github.com/catboost/catboost/blob/master/catboost/tutorials/uncertainty/uncertainty_regression.ipynb) on uncertainty prediction.\n\n\n## Bugfixes:\n* Reduced GPU memory usage in multi GPU training when there is no need to compute categorical feature counters.\n* Now CatBoost allows to specify `use_weights` for metrics when `auto_class_weights` parameter is set.\n* Correctly handle NaN values in `plot_predictions` function.\n* Fixed floating point precision drop releated bugs during Multiclass training with lots of objects in our case, bug was triggered while training on 25mln objects on single GPU card.\n* Now `average` parameter is passed to TotalF1 metric while training on GPU.\n* Added class labels checks\n* Disallow feature remapping in model predict when there is empty feature names in model.\n\n# Release 0.24.1\n\n## Uncertainty prediction\nMain feature of this release is total uncertainty prediction support via virtual ensembles.\nYou can read the theoretical background in the preprint [Uncertainty in Gradient Boosting via Ensembles](https://arxiv.org/pdf/2006.10562v2.pdf) from our research team.\nWe introduced new training parameter `posterior_sampling`, that allows to estimate total uncertainty.\nSetting `posterior_sampling=True` implies enabling Langevin boosting, setting `model_shrink_rate` to `1/(2*N)` and setting `diffusion_temperature` to `N`, where `N` is dataset size.\nCatBoost object method `virtual_ensembles_predict` splits model into `virtual_ensembles_count` submodels.\nCalling `model.virtual_ensembles_predict(.., prediction_type='TotalUncertainty')` returns mean prediction, variance (and knowledge uncertrainty for models, trained with `RMSEWithUncertainty` loss function).\nCalling `model.virtual_ensembles_predict(.., prediction_type='VirtEnsembles')` returns `virtual_ensembles_count` predictions of virtual submodels for each object.\n\n## New functionality\n* Supported non-owning model deserialization for models with categorical feature counters\n## Speedups\n* We've done lot's of speedups for sparse data loading. For example, on bosch sparse dataset preprocessing speed got 4.5x speedup while running in 28 thread setting.\n## Bugfixes:\n* Fixed target check for PairLogitPairwise on GPU. Issue #1217\n* Supported `n_features_in_` attribute required for using CatBoost in sklearn pipelines. Issue #1363\n\n\n# Release 0.24\n\n## New functionality\n* We've finally implemented MVS sampling for GPU training. Switched default bootstrap algorithm to MVS for RMSE loss function while training on GPU\n* Implemented near-zero cost model deserialization from memory blob. Currently, if your model doesn't use categorical features CTR counters and text features you can deserialize model from, for example, memory-mapped file.\n* Added ability to load trained models from binary string or file-like stream. To load model from bytes string use `load_model(blob=b'....')`, to deserialize form file-like stream use `load_model(stream=gzip.open('model.cbm.gz', 'rb'))`\n* Fixed auto-learning rate estimation params for GPU\n* Supported beta parameter for QuerySoftMax function on CPU and GPU\n\n## New losses and metrics\n* New loss function ```RMSEWithUncertainty``` - it allows to estimate data uncertainty for trained regression models. The trained model will give you a two-element vector for each object with the first element as regression model prediction and the second element as an estimation of data uncertainty for that prediction.\n\n## Speedups\n* Major speedups for CPU training: kdd98 -9%, higgs -18%, msrank -28%. We would like to recognize Intel software engineering team’s contributions to Catboost project. This was mutually beneficial activity, and we look forward to continuing joint cooperation.\n\n## Bugfixes:\n* Fixed CatBoost model export as Python code\n* Fixed AUC metric creation\n* Add text features to `model.feature_names_`. Issue#1314\n* Allow models, trained on datasets with NaN values (Min treatment) and without NaNs in `model_sum()` or as the base model in `init_model=`. Issue #1271\n\n## Educational materials\n* Published new [tutorial](https://github.com/catboost/catboost/blob/master/catboost/tutorials/categorical_features/categorical_features_parameters.ipynb) on categorical features parameters. Thanks @garkavem\n\n# Release 0.23.2\n\n## New functionality\n* Added `plot_partial_dependence` method in python-package (Now it works for models with symmetric trees trained on dataset with numerical features only). Implemented by @felixandrer.\n* Allowed using `boost_from_average` option together with `model_shrink_rate` option. In this case shrinkage is applied to the starting value..\n* Added new `auto_class_weights` option in python-package, R-package and cli with possible values `Balanced` and `SqrtBalanced`. For `Balanced` every class is weighted `maxSumWeightInClass / sumWeightInClass`, where sumWeightInClass is sum of weights of all samples in this class. If no weights are present then sample weight is 1. And maxSumWeightInClass - is maximum sum weight among all classes. For `SqrtBalanced` the formula is `sqrt(maxSumWeightInClass / sumWeightInClass)`. This option supported in binclass and multiclass tasks. Implemented by @egiby.\n* Supported `model_size_reg` option on GPU. Set to 0.5 by default (same as in CPU). This regularization works slightly differently on GPU: feature combinations are regularized more aggressively than on CPU. For CPU cost of a combination is equal to number of different feature values in this combinations that are present in training dataset. On GPU cost of a combination is equal to number of all possible different values of this combination. For example, if combination contains two categorical features c1 and c2, then the cost will be #categories in c1 * #categories in c2, even though many of the values from this combination might not be present in the dataset.\n* Added calculation of Shapley values, (see formula (2) from https://arxiv.org/pdf/1802.03888.pdf). By default estimation from this paper (Algorithm 2) is calcucated, that is much more faster. To use this mode specify shap_calc_type parameter of CatBoost.get_feature_importance function as \"Exact\". Implemented by @LordProtoss.\n\n## Bugfixes:\n* Fixed onnx converter for old onnx versions.\n\n\n# Release 0.23.1\n\n## New functionality\n* CatBoost model could be simply converted into ONNX object in Python with `catboost.utils.convert_to_onnx_object` method. Implemented by @monkey0head\n* We now print metric options with metric names as metric description in error logs by default. This allows you to distinguish between metrics of the same type with different parameters. For example, if user sets weigheted average `TotalF1` metric CatBoost will print `TotalF1:average=Weighted` as corresponding metric column header in error logs. Implemented by @ivanychev\n* Implemented PRAUC metric (issue  #737). Thanks @azikmsu\n* It's now possible to write custom multiregression objective in Python. Thanks @azikmsu\n* Supported nonsymmetric models export to PMML\n* `class_weights` parameter accepts dictionary with class name to class weight mapping\n* Added `_get_tags()` method for compatibility with sklearn (issue #1282). Implemented by @crazyleg\n* Lot's of improvements in .Net CatBoost library: implemented IDisposable interface, splitted ML.NET compatible and basic prediction classes in separate libraries, added base UNIX compatibility, supported GPU model evaluation, fixed tests. Thanks @khanova\n* In addition to first_feature_use_penalties presented in the previous release, we added new option per_object_feature_penalties which considers feature usage on each object individually. For more details refer the [tutorial](https://github.com/catboost/catboost/blob/master/catboost/tutorials/feature_penalties/feature_penalties.ipynb).\n\n## Breaking changes\n* From now on we require explicit `loss_function` param in python `cv` method.\n\n## Bugfixes:\n* Fixed deprecation warning on import (issue #1269)\n* Fixed saved models logging_level/verbose parameters conflict (issue #696)\n* Fixed kappa metric - in some cases there were integer overflow, switched accumulation types to double\n* Fixed per float feature quantization settings defaults\n\n## Educational materials\n* Extended shap values [tutorial](https://github.com/catboost/tutorials/blob/master/model_analysis/shap_values_tutorial.ipynb) with summary plot examples. Thanks @azanovivan02\n\n\n# Release 0.23\n\n## New functionality\n\n* It is possible now to train models on huge datasets that do not fit into CPU RAM.\nThis can be accomplished by storing only quantized data in memory (it is many times smaller). Use `catboost.utils.quantize` function to create quantized `Pool ` this way. See usage example in the issue #1116.\n Implemented by @noxwell.\n* Python Pool class now has `save_quantization_borders` method that allows to save resulting borders into a [file](https://catboost.ai/docs/concepts/output-data_custom-borders.html) and use it for quantization of other datasets. Quantization can be a bottleneck of training, especially on GPU. Doing quantization once for several trainings can significantly reduce running time. It is recommended for large dataset to perform quantization first, save quantization borders, use them to quantize validation dataset, and then use quantized training and validation datasets for further training.\nUse saved borders when quantizing other Pools by specifying `input_borders` parameter of the `quantize` method.\nImplemented by @noxwell.\n* Text features are supported on CPU\n* It is now possible to set `border_count` > 255 for GPU training. This might be useful if you have a \"golden feature\", see [docs](https://catboost.ai/docs/concepts/parameter-tuning.html#golden-features).\n* Feature weights are implemented.\nSpecify weights for specific features by index or name like `feature_weights=\"FeatureName1:1.5,FeatureName2:0.5\"`.\nScores for splits with this features will be multiplied by corresponding weights.\nImplemented by @Taube03.\n* Feature penalties can be used for cost efficient gradient boosting.\nPenalties are specified in a similar fashion to feature weights, using parameter `first_feature_use_penalties`.\nThis parameter penalized the first usage of a feature. This should be used in case if the calculation of the feature is costly.\nThe penalty value (or the cost of using a feature) is subtracted from scores of the splits of this feature if feature has not been used in the model.\nAfter the feature has been used once, it is considered free to proceed using this feature, so no substruction is done.\nThere is also a common multiplier for all `first_feature_use_penalties`, it can be specified by `penalties_coefficient` parameter.\nImplemented by @Taube03 (issue #1155)\n* `recordCount` attribute is added to PMML models (issue #1026).\n\n## New losses and metrics\n\n* New ranking objective 'StochasticRank', details in [paper](https://arxiv.org/abs/2003.02122).\n* `Tweedie` loss is supported now. It can be a good solution for right-skewed target with many zero values, see [tutorial](https://github.com/catboost/tutorials/blob/master/regression/tweedie.ipynb).\nWhen using `CatBoostRegressor.predict` function, default `prediction_type` for this loss will be equal to `Exponent`. Implemented by @ilya-pchelintsev (issue #577)\n* Classification metrics now support a new parameter `proba_border`. With this parameter you can set decision boundary for treating prediction as negative or positive. Implemented by @ivanychev.\n* Metric `TotalF1` supports a new parameter `average` with possible value `weighted`, `micro`, `macro`. Implemented by @ilya-pchelintsev.\n* It is possible now to specify a custom multi-label metric in python. Note that it is only possible to calculate this metric and use it as `eval_metric`. It is not possible to used it as an optimization objective.\nTo write a multi-label metric, you need to define a python class which inherits from `MultiLabelCustomMetric` class. Implemented by @azikmsu.\n\n## Improvements of grid and randomized search\n\n* `class_weights` parameter is now supported in grid/randomized search. Implemented by @vazgenk.\n* Invalid option configurations are automatically skipped during grid/randomized search. Implemented by @borzunov.\n* `get_best_score` returns train/validation best score after grid/randomized search (in case of refit=False). Implemented by @rednevaler.\n\n## Improvements of model analysis tools\n\n* Computation of SHAP interaction values for CatBoost models. You can pass type=EFstrType.ShapInteractionValues to `CatBoost.get_feature_importance` to get a matrix of SHAP values for every prediction.\nBy default, SHAP interaction values are calculated for all features. You may specify features of interest using the `interaction_indices` argument.\nImplemented by @IvanKozlov98.\n* SHAP values can be calculated approximately now which is much faster than default mode. To use this mode specify `shap_calc_type` parameter of  `CatBoost.get_feature_importance` function as  `\"Approximate\"`. Implemented by @LordProtoss (issue #1146).\n* `PredictionDiff` model analysis method can now be used with models that contain non symmetric trees. Implemented by @felixandrer.\n\n## New educational materials\n\n* A [tutorial](https://github.com/catboost/tutorials/blob/master/regression/tweedie.ipynb) on tweedie regression\n* A [tutorial](https://github.com/catboost/tutorials/blob/master/regression/poisson.ipynb) on poisson regression\n* A detailed [tutorial](https://github.com/catboost/tutorials/blob/master/metrics/AUC_tutorial.ipynb) on different types of AUC metric, which explains how different types of AUC can be used for binary classification, multiclassification and ranking tasks.\n\n## Breaking changes\n\n* When using `CatBoostRegressor.predict` function for models trained with `Poisson` loss, default `prediction_type` will be equal to `Exponent` (issue #1184). Implemented by @garkavem.\n\nThis release also contains bug fixes and performance improvements, including a major speedup for sparse data on GPU.\n\n# Release 0.22\n\n## New features:\n- The main feature of the release is the support of non symmetric trees for training on CPU.\nUsing non symmetric trees might be useful if one-hot encoding is present, or data has little noise.\nTo try non symmetric trees change [``grow_policy`` parameter](https://catboost.ai/docs/concepts/parameter-tuning.html#tree-growing-policy).\nStarting from this release non symmetric trees are supported for both CPU and GPU training.\n- The next big feature improves catboost text features support.\nNow tokenization is done during training, you don't have to do lowercasing, digit extraction and other tokenization on your own, catboost does it for you.\n- Auto learning-rate is now supported in CPU MultiClass mode.\n- CatBoost class supports ``to_regressor`` and ``to_classifier`` methods.\n\nThe release also contains a list of bug fixes.\n\n# Release 0.21\n\n## New features:\n- The main feature of this release is the Stochastic Gradient Langevin Boosting (SGLB) mode that can improve quality of your models with non-convex loss functions. To use it specify ``langevin`` option and tune ``diffusion_temperature`` and ``model_shrink_rate``. See [the corresponding paper](https://arxiv.org/abs/2001.07248) for details.\n\n## Improvements:\n\n- Automatic learning rate is applied by default not only for ``Logloss`` objective, but also for ``RMSE`` (on CPU and GPU) and ``MultiClass`` (on GPU).\n- Class labels type information is stored in the model. Now estimators in python package return values of proper type in ``classes_`` attribute and for prediction functions with ``prediction_type=Class``. #305, #999, #1017.\n  Note: Class labels loaded from datasets in [CatBoost dsv format](https://catboost.ai/docs/concepts/input-data_values-file.html) always have string type now.\n\n## Bug fixes:\n- Fixed huge memory consumption for text features. #1107\n- Fixed crash on GPU on big datasets with groups (hundred million+ groups).\n- Fixed class labels consistency check and merging in model sums (now class names in binary classification are properly checked and added to the result as well)\n- Fix for confusion matrix (PR #1152), thanks to @dmsivkov.\n- Fixed shap values calculation when ``boost_from_average=True``. #1125\n- Fixed use-after-free in fstr PredictionValuesChange with specified dataset\n- Target border and class weights are now taken from model when necessary for feature strength, metrics evaluation, roc_curve, object importances and calc_feature_statistics calculations.\n- Fixed that L2 regularization was not applied for non symmetric trees for binary classification on GPU.\n- [R-package] Fixed the bug that ``catboost.get_feature_importance`` did not work after model is loaded #1064\n- [R-package] Fixed the bug that ``catboost.train`` did not work when called with the single dataset parameter. #1162\n- Fixed L2 score calculation on CPU\n\n##Other:\n\n- Starting from this release Java applier is released simultaneously with other components and has the same version.\n\n##Compatibility:\n\n- Models trained with this release require applier from this release or later to work correctly.\n\n# Release 0.20.2\n\n## New features:\n- String class labels are now supported for binary classification\n- [CLI only] Timestamp column for the datasets can be provided in separate files.\n- [CLI only] Timesplit feature evaluation.\n- Process groups of any size in block processing.\n\n\n## Bug fixes:\n- ``classes_count`` and ``class_weight`` params can be now used with user-defined loss functions. #1119\n- Form correct metric descriptions on GPU if ``use_weights`` gets value by default. #1106\n- Correct ``model.classes_`` attribute for binary classification (proper labels instead of always ``0`` and ``1``). #984\n- Fix ``model.classes_`` attribute when classes_count parameter was specified.\n- Proper error message when categorical features specified for MultiRMSE training. #1112\n- Block processing: It is valid for all groups in a single block to have weights equal to 0\n- fix empty asymmetric tree index calculation. #1104\n\n# Release 0.20.1\n\n## New features:\n- Have `leaf_estimation_method=Exact` the default for MAPE loss\n- Add `CatBoostClassifier.predict_log_proba()`, PR #1095\n\n## Bug fixes:\n- Fix usability of read-only numpy arrays, #1101\n- Fix python3 compatibility for `get_feature_importance`, PR #1090\n- Fix loading model from snapshot for `boost_from_average` mode\n\n# Release 0.20\n\nNew submodule for text processing!\nIt contains two classes to help you make text features ready for training:\n- [Tokenizer](https://github.com/catboost/catboost/blob/afb8331a638de280ba2aee3831ac9df631e254a0/library/text_processing/tokenizer/tokenizer.pxi#L77) -- use this class to split text into tokens (automatic lowercase and punctuation removal)\n- [Dictionary](https://github.com/catboost/catboost/tree/master/library/text_processing/dictionary) -- with this class you create a dictionary which maps tokens to numeric identifiers. You then use these identifiers as new features.\n\n## New features:\n- Enabled `boost_from_average` for `MAPE` loss function\n\n## Bug fixes:\n- Fixed `Pool` creation from `pandas.DataFrame` with discontinuous columns, #1079\n- Fixed `standalone_evaluator`, PR #1083\n\n## Speedups:\n- Huge speedup of preprocessing in python-package for datasets with many samples (>10 mln)\n\n# Release 0.19.1\n\n## New features:\n- With this release we support `Text` features for *classification on GPU*. To specify text columns use `text_features` parameter. Achieve better quality by using text information of your dataset. See more in [Learning CatBoost with text features](https://github.com/catboost/tutorials/blob/master/text_features/text_features_in_catboost.ipynb)\n- `MultiRMSE` loss function is now available on CPU. Labels for the multi regression mode should be specified in separate `Label` columns\n- MonoForest framework for model analysis, based on our NeurIPS 2019 [paper](https://papers.nips.cc/paper/9530-monoforest-framework-for-tree-ensemble-analysis). Learn more in [MonoForest tutorial](https://github.com/catboost/tutorials/tree/master/model_analysis/monoforest_tutorial.ipynb)\n- `boost_from_average` is now `True` by default for `Quantile` and `MAE` loss functions, which improves the resulting quality\n\n## Speedups:\n- Huge reduction of preprocessing time for datasets loaded from files and for datasets with many samples (> 10 million), which was a bottleneck for GPU training\n- 3x speedup for small datasets\n\n\n# Release 0.18.1\n\n## New features:\n- Now `datasets.msrank()` returns _full_ msrank dataset. Previously, it returned the first 10k samples.\nWe have added `msrank_10k()` dataset implementing the past behaviour.\n\n## Bug fixes:\n- `get_object_importance()` now respects parameter `top_size`, #1045 by @ibuda\n\n# Release 0.18\n\n- The main feature of the release is huge speedup on small datasets. We now use MVS sampling for CPU regression and binary classification training by default, together with `Plain` boosting scheme for both small and large datasets. This change not only gives the huge speedup but also provides quality improvement!\n- The `boost_from_average` parameter is available in `CatBoostClassifier` and `CatBoostRegressor`\n- We have added new formats for describing monotonic constraints. For example, `\"(1,0,0,-1)\"` or `\"0:1,3:-1\"` or `\"FeatureName0:1,FeatureName3:-1\"` are all valid specifications. With Python and `params-file` json, lists and dictionaries can also be used\n\n## Bugs fixed:\n- Error in `Multiclass` classifier training, #1040\n- Unhandled exception when saving quantized pool, #1021\n- Python 3.7: `RuntimeError` raised in `StagedPredictIterator`, #848\n\n# Release 0.17.5\n\n## Bugs fixed:\n- `System of linear equations is not positive definite` when training MultiClass on Windows, #1022\n\n# Release 0.17.4\n\n## Improvements:\n- Massive 2x speedup for `MultiClass` with many classes\n- Updated MVS implementation. See _Minimal Variance Sampling in Stochastic Gradient Boosting_ by Bulat Ibragimov and Gleb Gusev at [NeurIPS 2019](https://neurips.cc/Conferences/2019)\n- Added `sum_models` in R-package, #1007\n\n## Bugs fixed:\n- Multi model initialization in python, #995\n- Mishandling of 255 borders in training on GPU, #1010\n\n# Release 0.17.3\n\n## Improvements:\n- New visualization for parameter tuning. Use `plot=True` parameter in `grid_search` and `randomized_search` methods to show plots in jupyter notebook\n- Switched to jemalloc allocator instead of LFalloc in CLI and model interfaces to fix some problems on Windows 7 machines, #881\n- Calculation of binary class AUC is faster up to 1.3x\n- Added [tutorial](https://github.com/catboost/tutorials/blob/master/convert_onnx_model/tutorial_convert_onnx_models.ipynb) on using fast CatBoost applier with LightGBM models\n\n## Bugs fixed:\n- Shap values for `MultiClass` objective don't give constant 0 value for the last class in case of GPU training.\n  Shap values for `MultiClass` objective are now calculated in the following way. First, predictions are normalized so that the average of all predictions is zero in each tree. The normalized predictions produce the same probabilities as the non-normalized ones. Then the shap values are calculated for every class separately. Note that since the shap values are calculated on the normalized predictions, their sum for every class is equal to the normalized prediction\n- Fixed bug in rangking tutorial, #955\n- Allow string value for `per_float_feature_quantization` parameter, #996\n\n# Release 0.17.2\n\n## Improvements:\n- For metric MAE on CPU default value of `leaf-estimation-method` is now `Exact`\n- Speed up `LossFunctionChange` feature strength computation\n\n## Bugs fixed:\n- Broken label converter in grid search for multiclassification, #993\n- Incorrect prediction with monotonic constraint, #994\n- Invalid value of `eval_metric` in output of `get_all_params()`, #940\n- Train AUC is not computed because hint `skip_train~false` is ignored, #970\n\n# Release 0.17.1\n\n## Bugs fixed:\n- Incorrect estimation of total RAM size on Windows and Mac OS, #989\n- Failure when dataset is a `numpy.ndarray` with `order='F'`\n- Disable `boost_from_average` when baseline is specified\n\n## Improvements:\n- Polymorphic raw features storage (2x---25x faster data preparation for numeric features in non-float32 columns as either `pandas.DataFrame` or `numpy.ndarray` with `order='F'`).\n- Support AUC metric for `CrossEntropy` loss on CPU\n- Added `datasets.rotten_tomatoes()`, a textual dataset\n- Usability of `monotone_constraints`, #950\n\n## Speedups:\n- Optimized computation of `CrossEntropy` metric on CPUs with SSE3\n\n# Release 0.17\n\n## New features:\n- Sparse data support\n- We've implemented and set to default `boost_from_average` in RMSE mode. It gives a boost in quality especially for a small number of iterations.\n\n## Improvements:\n- Quantile regression on CPU\n- default parameters for Poisson regression\n\n## Speedups:\n- A number of speedups for training on CPU\n- Huge speedups for loading datasets with categorical features represented as `pandas.Categorical`.\nHint: use `pandas.Categorical` instead of object to speed up loading up to 200x.\n\n# Release 0.16.5\n\n## Breaking changes:\n- All metrics except for AUC metric now use weights by default.\n\n## New features:\n- Added `boost_from_average` parameter for RMSE training on CPU which might give a boost in quality.\n- Added conversion from ONNX to CatBoost. Now you can convert XGBoost or LightGBM model to ONNX, then convert it to CatBoost and use our fast applier. Use `model.load_model(model_path, format=\"onnx\")` for that.\n\n## Speed ups:\n- Training is  \\~15% faster for datasets with categorical features.\n\n## Bug fixes:\n- R language: `get_features_importance` with `ShapValues` for `MultiClass`,  #868\n- NormalizedGini was not calculated,  #962\n- Bug in leaf calculation which could result in slightly worse quality if you use weights in binary classification mode\n- Fixed `__builtins__` import in Python3 in PR #957, thanks to @AbhinavanT\n\n\n# Release 0.16.4\n\n## Bug fixes:\n- Versions 0.16.* had a bug in python applier with categorical features for applying on more than 128 documents.\n\n## New features:\n- It is now possible to use pairwise modes for datasets without groups\n\n## Improvements:\n- 1.8x Evaluation speed on asymmetrical trees\n\n# Release 0.16.3\n\n## Breaking changes:\n- Renamed column `Feature Index` to `Feature Id` in prettified output of python method `get_feature_importance()`, because it supports feature names now\n- Renamed option `per_float_feature_binarization` (`--per-float-feature-binarization`) to `per_float_feature_quantization` (`--per-float-feature-quantization`)\n- Removed parameter `inverted` from python `cv` method. Added `type` parameter instead, which can be set to `Inverted`\n- Method `get_features()` now works only for datasets without categorical features\n\n## New features\n- A new multiclass version of AUC metric, called `AUC Mu`, which was proposed by Ross S. Kleiman on NeurIPS 2019, [link](http://proceedings.mlr.press/v97/kleiman19a/kleiman19a.pdf)\n- Added time series cv\n- Added `MeanWeightedTarget` in `fstat`\n- Added `utils.get_confusion_matrix()`\n- Now feature importance can be calculated for non-symmetric trees\n\n\n# Release 0.16.2\n\n## Breaking changes:\n- Removed `get_group_id()` and `get_features()` methods of `Pool` class\n\n## New model analysis tools:\n- Added `PredictionDiff` type of `get_feature_importance()` method, which is a new method for model analysis. The method shows how the features influenced the fact that among two samples one has a higher prediction. It allows to debug ranking models: you find a pair of samples ranked incorrectly and you look at what features have caused that.\n- Added `plot_predictions()` method\n\n## New features:\n- `model.set_feature_names()` method in Python\n- Added stratified split to parameter search methods\n- Support `catboost.load_model()` from CPU snapshots for numerical-only datasets\n- `CatBoostClassifier.score()` now supports `y` as `DataFrame`\n- Added `sampling_frequency`, `per_float_feature_binarization`, `monotone_constraints` parameters to `CatBoostClassifier` and `CatBoostRegresssor`\n\n## Speedups:\n- 2x speedup of multi-classification mode\n\n## Bugfixes:\n- Fixed `score()` for multiclassification, #924\n- Fixed `get_all_params()` function,  #926\n\n## Other improvements:\n- Clear error messages when a model cannot be saved\n\n\n# Release 0.16.1\n\n## Breaking changes:\n- parameter `fold_count` is now called `cv` in [`grid_search()`](https://catboost.ai/docs/concepts/python-reference_catboost_grid_search.html) and [`randomized_search`](https://catboost.ai/docs/concepts/python-reference_catboost_randomized_search.html)\n- cv results are now returned from `grid_search()` and `randomized_search()` in `res['cv_results']` field\n\n## New features:\n- R-language function `catboost.save_model()` now supports PMML, ONNX and other formats\n- Parameter `monotone_constraints` in python API allows specifying numerical features that the prediction shall depend on monotonically\n\n## Bug fixes:\n- Fixed `eval_metric` calculation for training with weights (in release 0.16 evaluation of a metric that was equal to an optimized loss did not use weights by default, so overfitting detector worked incorrectly)\n\n## Improvements:\n- Added option `verbose` to `grid_search()` and `randomized_search()`\n- Added [tutorial](https://github.com/catboost/tutorials/blob/master/hyperparameters_tuning/hyperparameters_tuning.ipynb) on `grid_search()` and `randomized_search()`\n\n\n# Release 0.16\n\n## Breaking changes:\n- `MultiClass` loss has now the same sign as Logloss. It had the other sign before and was maximized, now it is minimized.\n- `CatBoostRegressor.score` now returns the value of $R^2$ metric instead of RMSE to be more consistent with the behavior of scikit-learn regressors.\n- Changed metric parameter `use_weights` default value to false (except for ranking metrics)\n\n## New features:\n- It is now possible to apply model on GPU\n- We have published two new realworld datasets with monotonic constraints, `catboost.datasets.monotonic1()` and `catboost.datasets.monotonic2()`. Before that  there was only `california_housing` dataset in open-source with monotonic constraints. Now you can use these two to benchmark algorithms with monotonic constraints.\n- We've added several new metrics to catboost, including `DCG`, `FairLoss`, `HammingLoss`, `NormalizedGini` and `FilteredNDCG`\n- Introduced efficient `GridSearch` and `RandomSearch` implementations.\n- `get_all_params()` Python function returns the values of all training parameters, both user-defined and default.\n- Added more synonyms for training parameters to be more compatible with other GBDT libraries.\n\n## Speedups:\n- AUC metric is computationally very expensive. We've implemented parallelized calculation of this metric, now it can be calculated on every iteration (or every k-th iteration) about 4x faster.\n\n## Educational materials:\n- We've improved our command-line tutorial, now it has examples of files and more information.\n\n## Fixes:\n- Automatic `Logloss` or `MultiClass` loss function deduction for `CatBoostClassifier.fit` now also works if the training dataset is specified as `Pool` or filename string.\n- And some other fixes\n\n\n# Release 0.15.2\n\n## Breaking changes:\n- Function `get_feature_statistics` is replaced by `calc_feature_statistics`\n- Scoring function `Correlation` is renamed to `Cosine`\n- Parameter `efb_max_conflict_fraction` is renamed to `sparse_features_conflict_fraction`\n\n## New features:\n- Models can be saved in PMML format now.\n> **Note:**  PMML does not have full categorical features support, so to have the model in PMML format for datasets with categorical features you need to use set `one_hot_max_size` parameter to some large value, so that all categorical features are one-hot encoded\n- Feature names can be used to specify ignored features\n\n## Bug fixes, including:\n- Fixed restarting of CV on GPU for datasets without categorical features\n- Fixed learning continuation errors with changed dataset (PR #879) and with model loaded from file (#884)\n- Fixed NativeLib for JDK 9+ (PR #857)\n\n\n# Release 0.15.1\n\n## Bug fixes\n- restored parameter `fstr_type` in Python and R interfaces\n\n\n# Release 0.15\n\n## Breaking changes\n- cv is now stratified by default for `Logloss`, `MultiClass` and `MultiClassOneVsAll`.\n- We have removed `border` parameter of `Logloss` metric. You need to use `target_border` as a separate training parameter now.\n- `CatBoostClassifier` now runs `MultiClass` if more than 2 different values are present in training dataset labels.\n- `model.best_score_[\"validation_0\"]` is replaced with `model.best_score_[\"validation\"]` if a single validation dataset is present.\n- `get_object_importance` function parameter `ostr_type` is renamed to `type` in Python and R.\n\n## Model analysis\n- Tree visualisation by [@karina-usmanova](https://github.com/karina-usmanova).\n- New feature analysis: plotting information about how a feature was used in the model by [@alexrogozin12](https://github.com/alexrogozin12).\n- Added `plot` parameter to `get_roc_curve`, `get_fpr_curve` and `get_fnr_curve` functions from `catboost.utils`.\n- Supported prettified format for all types of feature importances.\n\n## New ways of doing predictions\n- Rust applier by [@shuternay](https://github.com/shuternay).\n- DotNet applier by [@17minutes](https://github.com/17minutes).\n- One-hot encoding for categorical features in CatBoost CoreML model by Kseniya Valchuk and Ekaterina Pogodina.\n\n\n## New objectives\n- Expectile Regression by [@david-waterworth](https://github.com/david-waterworth).\n- Huber loss by [@atsky](https://github.com/atsky).\n\n## Speedups\n- Speed up of shap values calculation for single object or for small number of objects by [@Lokutrus](https://github.com/Lokutrus).\n- Cheap preprocessing and no fighting of overfitting if there is little amount of iterations (since you will not overfit anyway).\n\n## New functionality\n- Prediction of leaf indices.\n\n## New educational materials\n- Rust tutorial by [@shuternay](https://github.com/shuternay).\n- C# tutorial.\n- Leaf indices.\n- Tree visualisation tutorial by [@karina-usmanova](https://github.com/karina-usmanova).\n- Google Colab tutorial for regression in catboost by [@col14m](https://github.com/col14m).\n\nAnd a set of fixes for your issues.\n\n\n# Release 0.14.2\n\n## New features\n- Add `has_header` parameter to [`CatboostEvaluation`](https://github.com/catboost/catboost/blob/2f35e0366c0bb6c1b44be89fda0a02fe12f84513/catboost/python-package/catboost/eval/catboost_evaluation.py#L30) class.\n\n## Breaking changes\n- Change output feature indices separator (`:` to `;`) in the `CatboostEvaluation` class.\n\n# Release 0.14.1\n\n## Breaking changes\n- Changed default value for `--counter-calc-method` option to `SkipTest`\n\n## New features:\n- Add guid to trained models. You can access it in Python using [`get_metadata`](https://catboost.ai/docs/concepts/python-reference_catboost_metadata.html) function, for example `print catboost_model.get_metadata()['model_guid']`\n\n## Bug fixes and other changes:\n- Compatibility with glibc 2.12\n- Improved embedded documentation\n- Improved warning and error messages\n\n# Release 0.14.0\n\n## New features:\n\n- GPU training now supports several tree learning strategies, selectable with `grow_policy` parameter. Possible values:\n  - `SymmetricTree` -- The tree is built level by level until `max_depth` is reached. On each iteration, all leaves from the last tree level will be split with the same condition. The resulting tree structure will always be symmetric.\n  - `Depthwise` -- The tree is built level by level until `max_depth` is reached. On each iteration, all non-terminal leaves from the last tree level will be split. Each leaf is split by condition with the best loss improvement.\n  - `Lossguide` -- The tree is built leaf by leaf until `max_leaves` limit is reached. On each iteration, non-terminal leaf with best loss improvement will be split.\n  > **Note:** grow policies `Depthwise` and `Lossguide` currently support only training and prediction modes. They do not support model analysis (like feature importances and SHAP values) and saving to different model formats like CoreML, ONNX, and JSON.\n  - The new grow policies support several new parameters:\n    `max_leaves` -- Maximum leaf count in the resulting tree, default 31. Used only for `Lossguide` grow policy. __Warning:__ It is not recommended to set this parameter greater than 64, as this can significantly slow down training.\n    `min_data_in_leaf` -- Minimum number of training samples per leaf, default 1. CatBoost will not search for new splits in leaves with sample count less than  `min_data_in_leaf`. This option is available for `Lossguide` and `Depthwise` grow policies only.\n  > **Note:** the new types of trees will be at least 10x slower in prediction than default symmetric trees.\n\n- GPU training also supports several score functions, that might give your model a boost in quality. Use parameter `score_function` to experiment with them.\n\n- Now you can use quantization with more than 255 borders and `one_hot_max_size` > 255 in CPU training.\n\n## New features in Python package:\n- It is now possible to use `save_borders()` function to write borders to a file after training.\n- Functions `predict`, `predict_proba`, `staged_predict`, and `staged_predict_proba` now support applying a model to a single object, in addition to usual data matrices.\n\n## Speedups:\n- Impressive speedups for sparse datsets. Will depend on the dataset, but will be at least 2--3 times for sparse data.\n\n## Breaking changes:\n- Python-package class attributes don't raise exceptions now. Attributes return `None` if not initialized.\n- Starting from 0.13 we have new feature importances for ranking modes. The new algorithm for feature importances shows how much features contribute to the optimized loss function. They are also signed as opposed to feature importances for not ranking modes which are non negative. This importances are expensive to calculate, thus we decided to not calculate them by default during training starting from 0.14. You need to calculate them after training.\n\n# Release 0.13.1\n\n## Changes:\n- Fixed a bug in shap values that was introduced in v0.13\n\n# Release 0.13\n\n## Speedups:\n- Impressive speedup of CPU training for datasets with predominantly binary features (up to 5-6x).\n- Speedup prediction and shap values array casting on large pools (issue [#684](https://github.com/catboost/catboost/issues/684)).\n\n## New features:\n- We've introduced a new type of feature importances - `LossFunctionChange`.\n  This type of feature importances works well in all the modes, but is especially good for ranking. It is more expensive to calculate, thus we have not made it default. But you can look at it by selecting the type of feature importance.\n- Now we support online statistics for categorical features in `QuerySoftMax` mode on GPU.\n- We now support feature names in `cat_features`, PR [#679](https://github.com/catboost/catboost/pull/679) by [@infected-mushroom](https://github.com/infected-mushroom) - thanks a lot [@infected-mushroom](https://github.com/infected-mushroom)!\n- We've intoduced new sampling_type `MVS`, which speeds up CPU training if you use it.\n- Added `classes_` attribute in python.\n- Added support for input/output borders files in python package. Thank you [@necnec](https://github.com/necnec) for your PR [#656](https://github.com/catboost/catboost/pull/656)!\n- One more new option for working with categorical features is `ctr_target_border_count`.\n  This option can be used if your initial target values are not binary and you do regression or ranking. It is equal to 1 by default, but you can try increasing it.\n- Added new option `sampling_unit` that allows to switch sampling from individual objects to entire groups.\n- More strings are interpreted as missing values for numerical features (mostly similar to pandas' [read_csv](https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html)).\n- Allow `skip_train` property for loss functions in cv method. Contributed by GitHub user [@RakitinDen](https://github.com/RakitinDen), PR [#662](https://github.com/catboost/catboost/pull/662), many thanks.\n- We've improved classification mode on CPU, there will be less cases when the training diverges.\n  You can also try to experiment with new `leaf_estimation_backtracking` parameter.\n- Added new compare method for visualization, PR [#652](https://github.com/catboost/catboost/pull/652). Thanks [@Drakon5999](https://github.com/Drakon5999) for your contribution!\n- Implemented `__eq__` method for `CatBoost*` python classes (PR [#654](https://github.com/catboost/catboost/pull/654)). Thanks [@daskol](https://github.com/daskol) for your contribution!\n- It is now possible to output evaluation results directly to `stdout` or `stderr` in command-line CatBoost in [`calc` mode](https://catboost.ai/docs/concepts/cli-reference_calc-model.html) by specifying `stream://stdout` or `stream://stderr` in `--output-path` parameter argument. (PR [#646](https://github.com/catboost/catboost/pull/646)). Thanks [@towelenee](https://github.com/towelenee) for your contribution!\n- New loss function - [Huber](https://en.wikipedia.org/wiki/Huber_loss). Can be used as both an objective and a metric for regression. (PR [#649](https://github.com/catboost/catboost/pull/649)). Thanks [@atsky](https://github.com/atsky) for your contribution!\n\n## Changes:\n- Changed defaults for `one_hot_max_size` training parameter for groupwise loss function training.\n- `SampleId` is the new main name for former `DocId` column in input data format (`DocId` is still supported for compatibility). Contributed by GitHub user [@daskol](https://github.com/daskol), PR [#655](https://github.com/catboost/catboost/pull/655), many thanks.\n- Improved CLI interface for cross-validation: replaced `-X/-Y` options with `--cv`, PR [#644](https://github.com/catboost/catboost/pull/644). Thanks [@tswr](https://github.com/tswr) for your pr!\n- `eval_metrics` : `eval_period` is now clipped by total number of trees in the specified interval. PR [#653](https://github.com/catboost/catboost/pull/653). Thanks [@AntPon](https://github.com/AntPon) for your contribution!\n\n## R package:\n- Thanks to [@ws171913](https://github.com/ws171913) we made necessary changes to prepare catboost for CRAN integration, PR [#715](https://github.com/catboost/catboost/pull/715). This is in progress now.\n- R interface for cross-validation contributed by GitHub user [@brsoyanvn](https://github.com/brsoyanvn), PR [#561](https://github.com/catboost/catboost/pull/561) -- many thanks [@brsoyanvn](https://github.com/brsoyanvn)!\n\n## Educational materials:\n- We've added new tutorial for [GPU training on Google Colaboratory](https://github.com/catboost/tutorials/blob/master/tools/google_colaboratory_cpu_vs_gpu_tutorial.ipynb).\n\nWe have also done a list of fixes and data check improvements.\nThanks [@brazhenko](https://github.com/brazhenko), [@Danyago98](https://github.com/Danyago98), [@infected-mushroom](https://github.com/infected-mushroom) for your contributions.\n\n# Release 0.12.2\n## Changes:\n* Fixed loading of `epsilon` dataset into memory\n* Fixed multiclass learning on GPU for >255 classes\n* Improved error handling\n* Some other minor fixes\n\n# Release 0.12.1.1\n## Changes:\n* Fixed Python compatibility issue in dataset downloading\n* Added `sampling_type` parameter for `YetiRankPairwise` loss\n\n# Release 0.12.1\n## Changes:\n* Support saving models in ONNX format (only for models without categorical features).\n* Added new dataset to our `catboost.datasets()` -- dataset [epsilon](catboost/benchmarks/model_evaluation_speed), a large dense dataset for binary classification.\n* Speedup of Python `cv` on GPU.\n* Fixed creation of `Pool` from `pandas.DataFrame` with `pandas.Categorical` columns.\n\n# Release 0.12.0\n## Breaking changes:\n* Class weights are now taken into account by `eval_metrics()`,\n  `get_feature_importance()`, and `get_object_importance()`.\n  In previous versions the weights were ignored.\n* Parameter `random-strength` for pairwise training (`PairLogitPairwise`,\n  `QueryCrossEntropy`, `YetiRankPairwise`) is not supported anymore.\n* Simultaneous use of `MultiClass` and `MultiClassOneVsAll` metrics is now\n  deprecated.\n\n## New functionality:\n* `cv` method is now supported on GPU.\n* String labels for classes are supported in Python.\n  In multiclassification the string class names are inferred from the data.\n  In binary classification for using string labels you should employ `class_names`\n  parameter and specify which class is negative (0) and which is positive (1).\n  You can also use `class_names` in multiclassification mode to pass all\n  possible class names to the fit function.\n* Borders can now be saved and reused.\n  To save the feature quantization information obtained during training data\n  preprocessing into a text file use cli option `--output-borders-file`.\n  To use the borders for training use cli option `--input-borders-file`.\n  This functionanlity is now supported on CPU and GPU (it was GPU-only in previous versions).\n  File format for the borders is described [here](https://tech.yandex.com/catboost/doc/dg/concepts/input-data_custom-borders-docpage).\n* CLI option `--eval-file` is now supported on GPU.\n\n## Quality improvement:\n* Some cases in binary classification are fixed where training could diverge\n\n## Optimizations:\n* A great speedup of the Python applier (10x)\n* Reduced memory consumption in Python `cv` function (times fold count)\n\n## Benchmarks and tutorials:\n* Added [speed benchmarks](catboost/benchmarks/gpu_vs_cpu_training_speed) for CPU and GPU on a variety of different datasets.\n* Added [benchmarks](catboost/benchmarks/ranking) of different ranking modes. In [this tutorial](catboost/tutorials/ranking/ranking_tutorial.ipynb) we compare\n  different ranking modes in CatBoost, XGBoost and LightGBM.\n* Added [tutorial](catboost/tutorials/apply_model/catboost4j_prediction_tutorial.ipynb) for applying model in Java.\n* Added [benchmarks](catboost/benchmarks/shap_speed) of SHAP values calculation for CatBoost, XGBoost and LightGBM.\n  The benchmarks also contain explanation of complexity of this calculation\n  in all the libraries.\n\nWe also made a list of stability improvements\nand stricter checks of input data and parameters.\n\nAnd we are so grateful to our community members @canorbal and @neer201\nfor their contribution in this release. Thank you.\n\n\n# Release 0.11.2\n## Changes:\n* Pure GPU implementation of NDCG metric\n* Enabled LQ loss function\n* Fixed NDCG metric on CPU\n* Added `model_sum` mode to command line interface\n* Added SHAP values benchmark (#566)\n* Fixed `random_strength` for `Plain` boosting (#448)\n* Enabled passing a test pool to caret training (#544)\n* Fixed a bug in exporting the model as python code (#556)\n* Fixed label mapper for multiclassification custom labels (#523)\n* Fixed hash type of categorical features (#558)\n* Fixed handling of cross-validation fold count options in python package (#568)\n\n\n# Release 0.11.1\n## Changes:\n* Accelerated formula evaluation by ~15%\n* Improved model application interface\n* Improved compilation time for building GPU version\n* Better handling of stray commas in list arguments\n* Added a benchmark that employs Rossman Store Sales dataset to compare quality of GBDT packages\n* Added references to Catboost papers in R-package CITATION file\n* Fixed a build issue in compilation for GPU\n* Fixed a bug in model applicator\n* Fixed model conversion, #533\n* Returned pre 0.11 behaviour for `best_score_` and `evals_result_` (issue #539)\n* Make valid RECORD in wheel (issue #534)\n\n# Release 0.11.0\n## Changes:\n* Changed default border count for float feature binarization to 254 on CPU to achieve better quality\n* Fixed random seed to `0` by default\n* Support model with more than 254 feature borders or one hot values when doing predictions\n* Added model summation support in python: use `catboost.sum_models()` to sum models with provided weights.\n* Added json model tutorial [json_model_tutorial.ipynb](https://github.com/catboost/catboost/blob/master/catboost/tutorials/apply_model/json_model_tutorial.ipynb)\n\n# Release 0.10.4.1\n## Changes:\n- Bugfix for #518\n\n# Release 0.10.4\n## Breaking changes:\nIn python 3 some functions returned dictionaries with keys of type `bytes` - particularly eval_metrics and get_best_score. These are fixed to have keys of type `str`.\n## Changes:\n- New metric NumErrors:greater_than=value\n- New metric and objective L_q:q=value\n- model.score(X, y) - can now work with Pool and labels from Pool\n\n# Release 0.10.3\n## Changes:\n* Added EvalResult output after GPU catboost training\n* Supported prediction type option on GPU\n* Added `get_evals_result()` method and `evals_result_` property to model in python wrapper to allow user access metric values\n* Supported string labels for GPU training in cmdline mode\n* Many improvements in JNI wrapper\n* Updated NDCG metric: speeded up and added NDCG with exponentiation in numerator as a new NDCG mode\n* CatBoost doesn't drop unused features from model after training\n* Write training finish time and catboost build info to model metadata\n* Fix automatic pairs generation for GPU PairLogitPairwise target\n\n# Release 0.10.2\n### Main changes:\n* Fixed Python 3 support in `catboost.FeaturesData`\n* 40% speedup QuerySoftMax CPU training\n\n# Release 0.10.1\n## Improvements\n* 2x Speedup pairwise loss functions\n* For all the people struggling with occasional NaNs in test datasets - now we only write warnings about it\n## Bugfixes\n* We set up default loss_function in `CatBoostClassifier` and `CatBoostRegressor`\n* Catboost write `Warning` and `Error` logs to stderr\n\n# Release 0.10.0\n## Breaking changes\n### R package\n- In R package we have changed parameter name `target` to `label` in method [`save_pool()`](https://tech.yandex.com/catboost/doc/dg/concepts/r-reference_catboost-save_pool-docpage/)\n### Python package\n- We don't support Python 3.4 anymore\n- CatBoostClassifier and CatBoostRegressor [`get_params()`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_catboostclassifier_get_params-docpage/) method now returns only the params that were explicitly set when constructing the object. That means that CatBoostClassifier and CatBoostRegressor get_params() will not contain 'loss_function' if it was not specified.\nThis also means that this code:\n```(python)\nmodel1 = CatBoostClassifier()\nparams = model1.get_params()\nmodel2 = CatBoost(params)\n```\nwill create model2 with default loss_function RMSE, not with Logloss.\nThis breaking change is done to support sklearn interface, so that sklearn GridSearchCV can work.\n- We've removed several attributes and changed them to functions. This was needed to avoid sklearn warnings:\n`is_fitted_` => [`is_fitted()`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_catboostclassifier_is_fitted-docpage/)\n`metadata_` => [`get_metadata()`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_catboostclassifier_metadata-docpage/)\n- We removed file with model from constructor of estimator. This was also done to avoid sklearn warnings.\n## Educational materials\n- We added [tutorial](https://github.com/catboost/tutorials/blob/master/ranking/ranking_tutorial.ipynb) for our ranking modes.\n- We published our [slides](https://github.com/catboost/catboost/tree/master/slides), you are very welcome to use them.\n## Improvements\n### All\n- Now it is possible to save model in json format.\n- We have added Java interface for CatBoost model\n- We now have static linkage with CUDA, so you don't have to install any particular version of CUDA to get catboost working on GPU.\n- We implemented both multiclass modes on GPU, it is very fast.\n- It is possible now to use multiclass with string labels, they will be inferred from data\n- Added `use_weights` parameter to [metrics](https://tech.yandex.com/catboost/doc/dg/concepts/loss-functions-docpage/). By default all metrics, except for AUC use weights, but you can disable it. To calculate metric value without weights, you need to set this parameter to false. Example: Accuracy:use_weights=false. This can be done only for custom_metrics or eval_metric, not for the objective function. Objective function always uses weights if they are present in the dataset.\n- We now use snapshot time intervals. It will work much faster if you save snapshot every 5 or 10 minutes instead of saving it on every iteration.\n- Reduced memory consumption by ranking modes.\n- Added automatic feature importance evaluation after completion of GPU training.\n- Allow inexistent indexes in ignored features list\n- Added [new metrics](https://tech.yandex.com/catboost/doc/dg/concepts/loss-functions-docpage/): `LogLikelihoodOfPrediction`, `RecallAt:top=k`, `PrecisionAt:top=k` and `MAP:top=k`.\n- Improved quality for multiclass with weighted datasets.\n- Pairwise modes now support automatic pairs generation (see [tutorial](https://github.com/catboost/tutorials/blob/master/ranking/ranking_tutorial.ipynb) for that).\n- Metric `QueryAverage` is renamed to a more clear `AverageGain`. This is a very important ranking metric. It shows average target value in top k documents of a group.\nIntroduced parameter `best_model_min_trees` - the minimal number of trees the best model should have.\n### Python\n- We now support sklearn GridSearchCV: you can pass categorical feature indices when constructing estimator. And then use it in GridSearchCV.\n- We added new method to utils - building of ROC curve: [`get_roc_curve`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_utils_get_roc_curve-docpage/).\n- Added [`get_gpu_device_count()`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_utils_get_gpu_device_count-docpage/) method to python package. This is a way to check if your CUDA devices are available.\n- We implemented automatical selection of decision-boundary using ROC curve. You can select best classification boundary given the maximum FPR or FNR that you allow to the model. Take a look on [`catboost.select_threshold(self, data=None, curve=None, FPR=None, FNR=None, thread_count=-1)`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_utils_select_threshold-docpage/). You can also calculate FPR and FNR for each boundary value.\n- We have added pool slicing: [`pool.slice(doc_indices)`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_pool_slice-docpage/)\n- Allow GroupId and SubgroupId specified as strings.\n### R package\n- GPU support in R package. You need to use parameter `task_type='GPU'` to enable GPU training.\n- Models in R can be saved/restored by means of R: save/load or saveRDS/readRDS\n## Speedups\n- New way of loading data in Python using [FeaturesData structure](https://tech.yandex.com/catboost/doc/dg/concepts/python-features-data__desc-docpage/). Using FeaturesData will speed up both loading data for training and for prediction. It is especially important for prediction, because it gives around 10 to 20 times python prediction speedup.\n- Training multiclass on CPU ~ 60% speedup\n- Training of ranking modes on CPU ~ 50% speedup\n- Training of ranking modes on GPU ~ 50% speedup for datasets with many features and not very many objects\n- Speedups of metric calculation on GPU. Example of speedup on our internal dataset: training with - AUC eval metric with test dataset with 2kk objects is speeded up 7sec => 0.2 seconds per iteration.\n- Speedup of all modes on CPU training.\n\nWe also did a lot of stability improvements, and improved usability of the library, added new parameter synonyms and improved input data validations.\n\nThanks a lot to all people who created issues on github. And thanks a lot to our contributor @pukhlyakova who implemented many new useful metrics!\n\n# Release 0.9.1.1\n## Bugfixes\n- Fixed #403 bug in cuda train submodule (training crashed without evaluation set)\n- Fixed exception propagation on pool parsing stage\n- Add support of string `GroupId` and `SubgroupId` in python-package\n- Print real class names instead of their labels in eval output\n\n# Release 0.9\n## Breaking Changes\n- We removed calc_feature_importance parameter from Python and R.\nNow feature importance calculation is almost free, so we always calculate feature importances. Previously you could disable it if it was slowing down your training.\n- We removed Doc type for feature importances. Use Shap instead.\n- We moved thread_count parameter in Python get_feature_importance method to the end.\n\n## Ranking\nIn this release we added several very powerfull ranking objectives:\n- PairLogitPairwise\n- YetiRankPairwise\n- QueryCrossEntropy (GPU only)\n\nOther ranking improvements:\n- We have made improvements to our existing ranking objectives QuerySoftMax and PairLogit.\n- We have added group weights support.\n\n## Accuracy improvements\n- Improvement for datasets with weights\n- Now we automatically calculate a good learning rate for you in the start of training, you don't have to specify it. After the training has finished, you can look on the training curve on evaluation dataset and make ajustments to the selected learning rate, but it will already be a good value.\n\n## Speedups:\n- Several speedups for GPU training.\n- 1.5x speedup for applying the model.\n- Speed up multi classificaton training.\n- 2x speedup for AUC calculation in eval_metrics.\n- Several speedups for eval_metrics for other metrics.\n- 100x speed up for Shap values calculation.\n- Speedup for feature importance calculation. It used to be a bottleneck for GPU training previously, now it's not.\n- We added possibility to not calculate metric on train dataset using `MetricName:hints=skip_train~false` (it might speed up your training if metric calculation is a bottle neck, for example, if you calculate many metrics or if you calculate metrics on GPU).\n- We added possibility to calculate metrics only periodically, not on all iterations. Use metric_period for that.\n(previously it only disabled verbose output on each iteration).\n- Now we disable by default calculation of expensive metrics on train dataset. We don't calculate AUC and PFound metrics on train dataset by default. You can also disable calculation of other metrics on train dataset using `MetricName:hints=skip_train~true`. If you want to calculate AUC or PFound on train dataset you can use `MetricName:hints=skip_train~false`.\n- Now if you want to calculate metrics using eval_metrics or during training you can use metric_period to skip some iterations. It will speed up eval_metrics and it might speed up training, especially GPU training.\nNote that the most expensive metric calculation is AUC calculation, for this metric and large datasets it makes sense to use metric_period.\nIf you only want to see less verbose output, and still want to see metric values on every iteration written in file, you can use `verbose=n` parameter\n- Parallelization of calculation of most of the metrics during training\n\n## Improved GPU experience\n- It is possible now to calculate and visualise custom_metric during training on GPU.\nNow you can use our Jupyter visualization, CatBoost viewer or TensorBoard the same way you used it for CPU training. It might be a bottleneck, so if it slows down your training use `metric_period=something` and `MetricName:hints=skip_train~false`\n- We switched to CUDA 9.1. Starting from this release CUDA 8.0 will not be supported\n- Support for external borders on GPU for cmdline\n\n## Improved tools for model analysis\n- We added support of feature combinations to our Shap values implementation.\n- Added Shap values for MultiClass and added an example of it's usage to our [Shap tutorial](https://github.com/catboost/tutorials/blob/master/model_analysis/shap_values_tutorial.ipynb).\n- Added pretified parameter to get_feature_importance(). With `pretified=True` the function will return list of features with names sorted in descending order by their importance.\n- Improved interfaces for eval-feature functionality\n- Shap values support in R-package\n\n## New features\n- It is possible now to save any metainformation to the model.\n- Empty values support\n- Better support of sklearn\n- feature_names_ for CatBoost class\n- Added silent parameter\n- Better stdout\n- Better diagnostic for invalid inputs\n- Better documentation\n- Added a flag to allow constant labels\n\n## New metrics\nWe added many new metrics that can be used for visualization, overfitting detection, selecting of best iteration of training or for cross-validation:\n- BierScore\n- HingeLoss\n- HammingLoss\n- ZeroOneLoss\n- MSLE\n- MAE\n- BalancedAccuracy\n- BalancedErrorRate\n- Kappa\n- Wkappa\n- QueryCrossEntropy\n- NDCG\n\n## New ways to apply the model\n- Saving model as C++ code\n- Saving model with categorical features as Python code\n\n## New ways to build the code\nAdded make files for binary with CUDA and for Python package\n\n## Tutorials\nWe created a new [repo with tutorials](https://github.com/catboost/tutorials/), now you don't have to clone the whole catboost repo to run Jupyter notebook with a tutorial.\n\n## Bugfixes\nWe have also a set of bugfixes and we are gratefull to everyone who has filled a bugreport, helping us making the library better.\n\n## Thanks to our Contributors\nThis release contains contributions from CatBoost team.\nWe want to especially mention @pukhlyakova who implemented lots of useful metrics.\n\n# Release 0.8.1\n## Bug Fixes and Other Changes\n- New model method `get_cat_feature_indices()` in Python wrapper.\n- Minor fixes and stability improvements.\n\n# Release 0.8\n## Breaking changes\n- We fixed bug in CatBoost. Pool initialization from `numpy.ndarray` and `pandas.dataframe` with string values that can cause slight inconsistence while using trained model from older versions. Around 1% of cat feature hashes were treated incorrectly. If you expirience quality drop after update you should consider retraining your model.\n\n## Major Features And Improvements\n- Algorithm for finding most influential training samples for a given object from the 'Finding Influential Training Samples for Gradient Boosted Decision Trees' [paper](https://arxiv.org/pdf/1802.06640.pdf) is implemented. This mode for every object from input pool calculates scores for every object from train pool. A positive score means that the given train object has made a negative contribution to the given test object prediction. And vice versa for negative scores. The higher score modulo - the higher contribution.\nSee `get_object_importance` model method in Python package and `ostr` mode in cli-version. Tutorial for Python is available [here](https://github.com/catboost/tutorials/blob/master/model_analysis/object_importance_tutorial.ipynb).\nMore details and examples will be published in documentation soon.\n- We have implemented new way of exploring feature importance - Shap values from [paper](https://arxiv.org/pdf/1706.06060.pdf). This allows to understand which features are most influent for a given object. You can also get more insite about your model, see details in a [tutorial](https://github.com/catboost/tutorials/blob/master/model_analysis/shap_values_tutorial.ipynb).\n- Save model as code functionality published. For now you could save model as Python code with categorical features and as C++ code w/o categorical features.\n\n## Bug Fixes and Other Changes\n- Fix `_catboost` reinitialization issues #268 and #269.\n- Python module `catboost.util` extended with `create_cd`. It creates column description file.\n- Now it's possible to load titanic and amazon (Kaggle Amazon Employee Access Challenge) datasets from Python code. Use `catboost.datasets`.\n- GPU parameter `use_cpu_ram_for_cat_features` renamed to `gpu_cat_features_storage` with posible values `CpuPinnedMemory` and `GpuRam`. Default is `GpuRam`.\n\n## Thanks to our Contributors\nThis release contains contributions from CatBoost team.\n\nAs usual we are grateful to all who filed issues or helped resolve them, asked and answered questions.\n\n# Release 0.7.2\n## Major Features And Improvements\n- GPU: New `DocParallel` mode for tasks without categorical features and or with categorical features and `—max-ctr-complextiy 1`. Provides best performance for pools with big number of documents.\n- GPU: Distributed training on several GPU host via MPI. See instruction how to build binary [here](https://tech.yandex.com/catboost/doc/dg/concepts/cli-installation-docpage/#multi-node-installation).\n- GPU: Up to 30% learning speed-up for Maxwell and later GPUs with binarization level > 32\n\n## Bug Fixes and Other Changes\n- Hotfixes for GPU version of python wrapper.\n\n# Release 0.7.1\n## Major Features And Improvements\n- Python wrapper: added methods to download datasets titanic and amazon, to make it easier to try the library (`catboost.datasets`).\n- Python wrapper: added method to write column desctiption file (`catboost.utils.create_cd`).\n- Made improvements to visualization.\n- Support non-numeric values in `GroupId` column.\n- [Tutorials](https://github.com/catboost/tutorials/blob/master/README.md) section updated.\n\n## Bug Fixes and Other Changes\n- Fixed problems with eval_metrics (issue #285)\n- Other fixes\n\n# Release 0.7\n## Breaking changes\n- Changed parameter order in [`train()`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_train-docpage/) function to be consistant with other GBDT libraries.\n- `use_best_model` is set to True by default if `eval_set` labels are present.\n\n## Major Features And Improvements\n- New ranking mode [`YetiRank`](https://tech.yandex.com/catboost/doc/dg/concepts/loss-functions-docpage/#loss-functions__ranking) optimizes `NDGC` and `PFound`.\n- New visualisation for `eval_metrics` and `cv` in Jupyter notebook.\n- Improved per document feature importance.\n- Supported `verbose`=`int`: if `verbose` > 1, `metric_period` is set to this value.\n- Supported type(`eval_set`) = list in python. Currently supporting only single `eval_set`.\n- Binary classification leaf estimation defaults are changed for weighted datasets so that training converges for any weights.\n- Add `model_size_reg` parameter to control model size. Fix `ctr_leaf_count_limit` parameter, also to control model size.\n- Beta version of distributed CPU training with only float features support.\n- Add `subgroupId` to [Python](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_pool-docpage/)/[R-packages](https://tech.yandex.com/catboost/doc/dg/concepts/r-reference_catboost-load_pool-docpage/).\n- Add groupwise metrics support in `eval_metrics`.\n\n## Thanks to our Contributors\nThis release contains contributions from CatBoost team.\n\nWe are grateful to all who filed issues or helped resolve them, asked and answered questions.\n\n\n# Release 0.6.3\n## Breaking changes\n- `boosting_type` parameter value `Dynamic` is renamed to `Ordered`.\n- Data visualisation functionality in Jupyter Notebook requires ipywidgets 7.x+ now.\n- `query_id` parameter renamed to `group_id` in Python and R wrappers.\n- cv returns pandas.DataFrame by default if Pandas installed. See new parameter [`as_pandas`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_cv-docpage/).\n\n## Major Features And Improvements\n- CatBoost build with make file. Now it’s possible to build command-line CPU version of CatBoost under Linux with [make file](https://tech.yandex.com/catboost/doc/dg/concepts/cli-installation-docpage/#make-install).\n- In column description column name `Target` is changed to `Label`. It will still work with previous name, but it is recommended to use the new one.\n- `eval-metrics` mode added into cmdline version. Metrics can be calculated for a given dataset using a previously [trained model](https://tech.yandex.com/catboost/doc/dg/concepts/cli-reference_eval-metrics-docpage/).\n- New classification metric `CtrFactor` is [added](https://tech.yandex.com/catboost/doc/dg/concepts/loss-functions-docpage/).\n- Load CatBoost model from memory. You can load your CatBoost model from file or initialize it from buffer [in memory](https://github.com/catboost/catboost/blob/master/catboost/CatboostModelAPI.md).\n- Now you can run `fit` function using file with dataset: `fit(train_path, eval_set=eval_path, column_description=cd_file)`. This will reduce memory consumption by up to two times.\n- 12% speedup for training.\n\n## Bug Fixes and Other Changes\n- JSON output data format is [changed](https://tech.yandex.com/catboost/doc/dg/concepts/output-data_training-log-docpage/).\n- Python whl binaries with CUDA 9.1 support for Linux OS published into the release assets.\n- Added `bootstrap_type` parameter to `CatBoostClassifier` and `Regressor` (issue #263).\n\n## Thanks to our Contributors\nThis release contains contributions from newbfg and CatBoost team.\n\nWe are grateful to all who filed issues or helped resolve them, asked and answered questions.\n\n\n# Release 0.6.2\n## Major Features And Improvements\n- **BETA** version of distributed mulit-host GPU via MPI training\n- Added possibility to import coreml model with oblivious trees. Makes possible to migrate pre-flatbuffers model (with float features only) to current format (issue #235)\n- Added QuerySoftMax loss function\n\n## Bug Fixes and Other Changes\n- Fixed GPU models bug on pools with both categorical and float features (issue #241)\n- Use all available cores by default\n- Fixed not querywise loss for pool with `QueryId`\n- Default float features binarization method set to `GreedyLogSum`\n\n\n# Release 0.6.1.1\n## Bug Fixes and Other Changes\n- Hotfix for critical bug in Python and R wrappers (issue #238)\n- Added stratified data split in CV\n- Fix `is_classification` check and CV for Logloss\n\n\n# Release 0.6.1\n## Bug Fixes and Other Changes\n- Fixed critical bugs in formula evaluation code (issue #236)\n- Added scale_pos_weight parameter\n\n# Release 0.6\n## Speedups\n- 25% speedup of the model applier\n- 43% speedup for training on large datasets.\n- 15% speedup for `QueryRMSE` and calculation of querywise metrics.\n- Large speedups when using binary categorical features.\n- Significant (x200 on 5k trees and 50k lines dataset) speedup for plot and stage predict calculations in cmdline.\n- Compilation time speedup.\n\n## Major Features And Improvements\n- Industry fastest [applier implementation](https://tech.yandex.com/catboost/doc/dg/concepts/c-plus-plus-api-docpage/#c-plus-plus-api).\n- Introducing new parameter [`boosting-type`](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_parameters-list-docpage/) to switch between standard boosting scheme and dynamic boosting, described in paper [\"Dynamic boosting\"](https://arxiv.org/abs/1706.09516).\n- Adding new [bootstrap types](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_parameters-list-docpage/) `bootstrap_type`, `subsample`. Using `Bernoulli` bootstrap type with `subsample < 1` might increase the training speed.\n- Better logging for cross-validation, added [parameter](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_cv-docpage/) `logging_level` and `metric_period` (should be set in training parameters) to cv.\n- Added a separate `train` [function](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_train-docpage/) that receives the parameters and returns a trained model.\n- Ranking mode `QueryRMSE` now supports default settings for dynamic boosting.\n- R-package pre-build binaries are included into release.\n- We added many synonyms to our parameter names, now it is more convenient to try CatBoost if you are used to some other library.\n\n## Bug Fixes and Other Changes\n- Fix for CPU `QueryRMSE` with weights.\n- Adding several missing parameters into wrappers.\n- Fix for data split in querywise modes.\n- Better logging.\n- From this release we'll provide pre-build R-binaries\n- More parallelisation.\n- Memory usage improvements.\n- And some other bug fixes.\n\n## Thanks to our Contributors\nThis release contains contributions from CatBoost team.\n\nWe are grateful to all who filed issues or helped resolve them, asked and answered questions.\n\n# Release 0.5.2\n\n## Major Features And Improvements\n- We've made single document formula applier 4 times faster!\n- `model.shrink` function added in [Python](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_catboost_shrink-docpage/) and R wrappers.\n- Added new [training parameter](https://tech.yandex.com/catboost/doc/dg/concepts/python-reference_parameters-list-docpage/) `metric_period` that controls output frequency.\n- Added new ranking [metric](https://tech.yandex.com/catboost/doc/dg/concepts/loss-functions-docpage/) `QueryAverage`.\n- This version contains an easy way to implement new user metrics in C++. How-to example [is provided](https://github.com/catboost/tutorials/blob/master/custom_loss/custom_metric_tutorial.md).\n\n## Bug Fixes and Other Changes\n- Stability improvements and bug fixes\n\nAs usual we are grateful to all who filed issues, asked and answered questions.\n\n# Release 0.5\n\n## Breaking Changes\nCmdline:\n- Training parameter `gradient-iterations` renamed to `leaf-estimation-iterations`.\n- `border` option removed. If you want to specify border for binary classification mode you need to specify it in the following way: `loss-function Logloss:Border=0.5`\n- CTR parameters are changed:\n   - Removed `priors`, `per-feature-priors`, `ctr-binarization`;\n   - Added `simple-ctr`, `combintations-ctr`, `per-feature-ctr`;\n   More details will be published in our documentation.\n\nPython:\n- Training parameter `gradient_iterations` renamed to `leaf_estimation_iterations`.\n- `border` option removed. If you want to specify border for binary classification mode you need to specify it in the following way: `loss_function='Logloss:Border=0.5'`\n- CTR parameters are changed:\n   - Removed `priors`, `per_feature_priors`, `ctr_binarization`;\n   - Added `simple_ctr`, `combintations_ctr`, `per_feature_ctr`;\n   More details will be published in our documentation.\n\n## Major Features And Improvements\n- In Python we added a new method `eval_metrics`: now it's possible for a given model to calculate specified metric values for each iteration on specified dataset.\n- One command-line binary for CPU and GPU: in CatBoost you can switch between CPU and GPU training by changing single parameter value `task-type CPU` or `GPU` (task_type 'CPU', 'GPU' in python bindings). Windows build still contains two binaries.\n- We have speed up the training up to 30% for datasets with a lot of objects.\n- Up to 10% speed-up of GPU implementation on Pascal cards\n\n## Bug Fixes and Other Changes\n- Stability improvements and bug fixes\n\nAs usual we are grateful to all who filed issues, asked and answered questions.\n\n# Release 0.4\n\n## Breaking Changes\nFlatBuffers model format: new CatBoost versions wouldn’t break model compatibility anymore.\n\n## Major Features And Improvements\n* Training speedups: we have speed up the training by 33%.\n* Two new ranking modes are [available](https://tech.yandex.com/catboost/doc/dg/concepts/loss-functions-docpage/#ranking):\n  * `PairLogit` - pairwise comparison of objects from the input dataset. Algorithm maximises probability correctly reorder all dataset pairs.\n  * `QueryRMSE` - mix of regression and ranking. It’s trying to make best ranking for each dataset query by input labels.\n\n## Bug Fixes and Other Changes\n* **We have fixed a bug that caused quality degradation when using weights < 1.**\n* `Verbose` flag is now deprecated, please use `logging_level` instead. You could set the following levels: `Silent`, `Verbose`, `Info`, `Debug`.\n* And some other bugs.\n\n## Thanks to our Contributors\nThis release contains contributions from: avidale, newbfg, KochetovNicolai and CatBoost team.\n\nWe are grateful to all who filed issues or helped resolve them, asked and answered questions.\n\n# Release 0.3\n\n## Major Features And Improvements\nGPU CUDA support is available. CatBoost supports multi-GPU training. Our GPU implementation is 2 times faster then LightGBM and more then 20 times faster then XGBoost one. Check out the news with benchmarks on our [site](https://catboost.yandex/news#version_0_3).\n\n## Bug Fixes and Other Changes\nStability improvements and bug fixes\n\n## Thanks to our Contributors\nThis release contains contributions from: daskol and CatBoost team.\n\nWe are grateful to all who filed issues or helped resolve them, asked and answered questions.\n\n# Release 0.2\n\n## Breaking Changes\n* R library interface significantly changed\n* New model format: CatBoost v0.2 model binary not compatible with previous versions\n* Cross-validation parameters changes: we changed overfitting detector parameters of CV in python so that it is same as those in training.\n* CTR types: MeanValue => BinarizedTargetMeanValue\n\n## Major Features And Improvements\n* Training speedups: we have speed up the training by 20-30%.\n* Accuracy improvement with categoricals: we have changed computation of statistics for categorical features, which leads to better quality.\n* New type of overfitting detector: `Iter`. This type of detector was requested by our users. So now you can also stop training by a simple criterion: if after a fixed number of iterations there is no improvement of your evaluation function.\n* TensorBoard support: this is another way of looking on the graphs of different error functions both during training and after training has finished. To look at the metrics you need to provide `train_dir` when training your model and then run `\"tensorboard --logdir={train_dir}\"`\n* Jupyter notebook improvements: for our Python library users that experiment with Jupyter notebooks, we have improved our visualisation tool. Now it is possible to save image of the graph. We also have changed scrolling behaviour so that it is more convenient to scroll the notebook.\n* NaN features support: we also have added simple but effective way of dealing with NaN features. If you have some NaNs in the train set, they will be changed to a value that is less than the minimum value or greater than the maximum value in the dataset (this is configurable), so that it is guaranteed that they are in their own bin, and a split would separates NaN values from all other values. By default, no NaNs are allowed, so you need to use option `nan_mode` for that. When applying a model, NaNs will be treated in the same way for the features where NaN values were seen in train. It is not allowed to have NaN values in test if no NaNs in train for this feature were provided.\n* Snapshotting: we have added snapshotting to our Python and R libraries. So if you think that something can happen with your training, for example machine can reboot, you can use `snapshot_file` parameter - this way after you restart your training it will start from the last completed iteration.\n* R library tutorial: we have added [tutorial](https://github.com/catboost/tutorials/blob/master/r_tutorial.ipynb)\n* Logging customization: we have added `allow_writing_files` parameter. By default some files with logging and diagnostics are written on disc, but you can turn it off using by setting this flag to False.\n* Multiclass mode improvements: we have added a new objective for multiclass mode - `MultiClassOneVsAll`. We also added `class_names` param - now you don't have to renumber your classes to be able to use multiclass. And we have added two new metrics for multiclass: `TotalF1` and `MCC` metrics.\nYou can use the metrics to look how its values are changing during training or to use overfitting detection or cutting the model by best value of a given metric.\n* Any delimeters support: in addition to datasets in `tsv` format, CatBoost now supports files with any delimeters\n\n## Bug Fixes and Other Changes\nStability improvements and bug fixes\n\n## Thanks to our Contributors\nThis release contains contributions from: grayskripko, hadjipantelis and CatBoost team.\n\nWe are grateful to all who filed issues or helped resolve them, asked and answered questions.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.3671875,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nWe welcome security researchers and users who report vulnerabilities they discovered in CatBoost. All reports are thoroughly investigated.\n\nTo report a potential vulnerability in CatBoost please use the special `Report a vulnerability` button on https://github.com/catboost/catboost/security page or contact administators of [the CatBoost Telegram chat](https://t.me/catboost_en) privately.\n\n### When Should I Report a Vulnerability?\n\n- You think you discovered a potential security vulnerability in CatBoost\n- You are unsure how a vulnerability affects CatBoost\n\n## Security Vulnerability Response\n\nEach report is acknowledged and analyzed by CatBoost maintainers within 5 working days.\nWe will keep the reporter informed about the issue progress.\n\n## Public Disclosure Timing\n\nA public disclosure date is negotiated by CatBoost maintainers and the bug submitter. We prefer to fully disclose the bug as soon as possible once a mitigation is available for CatBoost users. It is reasonable to delay disclosure when the bug or the fix is not yet fully understood, the solution is not well-tested, or for vendor coordination. The timeframe for disclosure is from immediate (especially if it's already publicly known) to 90 days. For a vulnerability with a straightforward mitigation, we expect report date to disclosure date to be on the order of 7 days."
        },
        {
          "name": "bindings",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "catboost",
          "type": "tree",
          "content": null
        },
        {
          "name": "catboost_command_style_guide_extension.md",
          "type": "blob",
          "size": 4.5869140625,
          "content": "# Дополнения к стайлгайду:\n1. Все классы у которых нет декларации в .h файле должны находиться в анонимном неймспейсе, а все функции у которых нет декларации в .h должны быть помечены как `static`\n2. `TDSVWriter` => `TDsvWriter` - аббревиатуры пишем маленькими буквами\n3. Не используем сокращения, кроме общепринятых (типа `len`, `idx`, `tmp`).\n4. Однобуквенные переменные только для цикла for (в порядке вложенности: `i`, `j`, `k`). Включая тесты и однострочные функции.\n5. В названии функции используем глаголы, глагол идет на первом месте:\n    `ui64 FeatureCount()` => `ui64 GetFeatureCount()` если просто геттер, `ui64 CountFeatures()`, если там какая-то работа в функции.\n6. Имена файлов - через подчеркивание. И без сокращений тоже.\n7. Про пустые строки:\n    - В большинстве случаев достаточно одной пустой строки.\n    - Две пустые строки норм ставить на верхнем уровне: между функциями, классами или классом и функцией (можно и одну)\n    - Три -- вообще никогда не нужно.\n8. Параметры в функциях передаются в следующем порядке:\n    1. Входные (in) параметры (если есть)\n    2. Параметры, состояние которых функция и использует и меняет (inout) (если есть). Обязательно передавать по указателю.\n    3. Выходные (out) параметры (функция полностью меняет их состояние, не используя текущее, в отличие от inout). Обязательно передавать по указателю.\n10. Пробел после template:\n    ```\n    template <class TSomeType>\n    class TMyClass {\n    };\n    ```\n11. Отступы при объявлении или вызове функции с большим числом и/или длиной параметров - аргументы начинаются со строки 2 + отступ в 4 пробела.\n    ```\n    void WriteHistory(\n        const TVector<TString>& metricsDescription,\n        const TVector<TVector<double>>& learnErrorsHistory,\n        const TVector<TVector<TVector<double>>>& testErrorsHistory, // [iter][test][metric]\n        const TVector<TVector<double>>& timeHistory,\n        const TString& learnToken,\n        const TVector<const TString>& testTokens,\n        TLogger* logger) {\n    ```\n12. Длина строки <= 110 символов\n13. Для размеров (массивов, но не только) и индексов следует предпочитать беззнаковые типы конкретного размера (для портабельности) - `ui64`, `ui32`, ... . Следует помнить, что CatBoost может работать с потенциально большими данными, так что во многих случаях (когда это не экономит память) разумным умолчанием будет являться `ui64`.\n14. Если весь код модуля находится только в заголовочном файле (`<module_name>.h`), то все равно нужно создать парный ему `<module_name>.cpp` файл, который будет содержать только `#include \"<module_name>.h\" ` и включить этот .cpp файл в SRCS в ya.make.\n15. Если при вызове функции из чтения кода вызова сразу не ясно, что значит выражение, передаваемое как какой-то из параметров (например, это bool литерал - `true` или `false`, в функции у которой несколько параметров такого типа), то рекомендуется вставить inline комментарий с названием параметра перед передаваемым выражением:\n    ```\n    MySort(/*useParallelImplementation*/ true, &container);\n    ```\n"
        },
        {
          "name": "certs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "conanfile.py",
          "type": "blob",
          "size": 1.6259765625,
          "content": "from conan import ConanFile\n\nimport os\n\nfrom conan.tools.files import copy\nfrom conan.tools.cmake import CMakeToolchain, CMakeDeps, cmake_layout\nfrom conan.tools.env import Environment\n\n\nclass App(ConanFile):\n\n    settings = \"os\", \"compiler\", \"build_type\", \"arch\"\n\n    default_options = {}\n\n    def requirements(self):\n        self.requires(\"openssl/1.1.1t\")\n\n    def build_requirements(self):\n        self.tool_requires(\"ragel/6.10\")\n        self.tool_requires(\"swig/4.0.2\")\n        self.tool_requires(\"yasm/1.3.0\")\n\n    def generate(self):\n        CMakeDeps(self).generate()\n        CMakeToolchain(self).generate()\n\n        for dep in self.dependencies.values():\n            for bindir in dep.cpp_info.bindirs:\n                copy(self, pattern=\"*swig*\", src=bindir, dst=self.build_folder + \"../../../.././bin\")\n                # SWIG recipe under Conan2 does not set SWIG_LIB, do it manually here or else build fails\n                if os.path.exists(os.path.join(bindir, \"swig\")):\n                    env = Environment()\n                    if not env.vars(self).get(\"SWIG_LIB\"):\n                        env.define(\"SWIG_LIB\", os.path.join(bindir, \"swiglib\"))\n            for bindir in dep.cpp_info.bindirs:\n                copy(self, pattern=\"*yasm*\", src=bindir, dst=self.build_folder + \"../../../.././bin\")\n            for bindir in dep.cpp_info.bindirs:\n                copy(self, pattern=\"ragel*\", src=bindir, dst=self.build_folder + \"../../../.././bin\")\n            for bindir in dep.cpp_info.bindirs:\n                copy(self, pattern=\"ytasm*\", src=bindir, dst=self.build_folder + \"../../../.././bin\")\n\n    def layout(self):\n        cmake_layout(self)\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "open_problems",
          "type": "tree",
          "content": null
        },
        {
          "name": "slides",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}