{
  "metadata": {
    "timestamp": 1736561026369,
    "page": 791,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lancedb/lancedb",
      "stars": 5233,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bumpversion.toml",
          "type": "blob",
          "size": 4,
          "content": "[tool.bumpversion]\ncurrent_version = \"0.15.0-beta.0\"\nparse = \"\"\"(?x)\n    (?P<major>0|[1-9]\\\\d*)\\\\.\n    (?P<minor>0|[1-9]\\\\d*)\\\\.\n    (?P<patch>0|[1-9]\\\\d*)\n    (?:-(?P<pre_l>[a-zA-Z-]+)\\\\.(?P<pre_n>0|[1-9]\\\\d*))?\n\"\"\"\nserialize = [\n    \"{major}.{minor}.{patch}-{pre_l}.{pre_n}\",\n    \"{major}.{minor}.{patch}\",\n]\nsearch = \"{current_version}\"\nreplace = \"{new_version}\"\nregex = false\nignore_missing_version = false\nignore_missing_files = false\ntag = true\nsign_tags = false\ntag_name = \"v{new_version}\"\ntag_message = \"Bump version: {current_version} → {new_version}\"\nallow_dirty = true\ncommit = true\nmessage = \"Bump version: {current_version} → {new_version}\"\ncommit_args = \"\"\n\n# Java maven files\npre_commit_hooks = [\n  \"\"\"\n    NEW_VERSION=\"${BVHOOK_NEW_MAJOR}.${BVHOOK_NEW_MINOR}.${BVHOOK_NEW_PATCH}\"\n    if [ ! -z \"$BVHOOK_NEW_PRE_L\" ] && [ ! -z \"$BVHOOK_NEW_PRE_N\" ]; then\n        NEW_VERSION=\"${NEW_VERSION}-${BVHOOK_NEW_PRE_L}.${BVHOOK_NEW_PRE_N}\"\n    fi\n    echo \"Constructed new version: $NEW_VERSION\"\n    cd java && mvn versions:set -DnewVersion=$NEW_VERSION && mvn versions:commit\n\n    # Check for any modified but unstaged pom.xml files\n    MODIFIED_POMS=$(git ls-files -m | grep pom.xml)\n    if [ ! -z \"$MODIFIED_POMS\" ]; then\n        echo \"The following pom.xml files were modified but not staged. Adding them now:\"\n        echo \"$MODIFIED_POMS\" | while read -r file; do\n            git add \"$file\"\n            echo \"Added: $file\"\n        done\n    fi\n    \"\"\",\n]\n\n[tool.bumpversion.parts.pre_l]\noptional_value = \"final\"\nvalues = [\"beta\", \"final\"]\n\n[[tool.bumpversion.files]]\nfilename = \"node/package.json\"\nreplace = \"\\\"version\\\": \\\"{new_version}\\\",\"\nsearch = \"\\\"version\\\": \\\"{current_version}\\\",\"\n\n[[tool.bumpversion.files]]\nfilename = \"nodejs/package.json\"\nreplace = \"\\\"version\\\": \\\"{new_version}\\\",\"\nsearch = \"\\\"version\\\": \\\"{current_version}\\\",\"\n\n# nodejs binary packages\n[[tool.bumpversion.files]]\nglob = \"nodejs/npm/*/package.json\"\nreplace = \"\\\"version\\\": \\\"{new_version}\\\",\"\nsearch = \"\\\"version\\\": \\\"{current_version}\\\",\"\n\n# vectodb node binary packages\n[[tool.bumpversion.files]]\nglob = \"node/package.json\"\nreplace = \"\\\"@lancedb/vectordb-darwin-arm64\\\": \\\"{new_version}\\\"\"\nsearch = \"\\\"@lancedb/vectordb-darwin-arm64\\\": \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nglob = \"node/package.json\"\nreplace = \"\\\"@lancedb/vectordb-darwin-x64\\\": \\\"{new_version}\\\"\"\nsearch = \"\\\"@lancedb/vectordb-darwin-x64\\\": \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nglob = \"node/package.json\"\nreplace = \"\\\"@lancedb/vectordb-linux-arm64-gnu\\\": \\\"{new_version}\\\"\"\nsearch = \"\\\"@lancedb/vectordb-linux-arm64-gnu\\\": \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nglob = \"node/package.json\"\nreplace = \"\\\"@lancedb/vectordb-linux-x64-gnu\\\": \\\"{new_version}\\\"\"\nsearch = \"\\\"@lancedb/vectordb-linux-x64-gnu\\\": \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nglob = \"node/package.json\"\nreplace = \"\\\"@lancedb/vectordb-linux-arm64-musl\\\": \\\"{new_version}\\\"\"\nsearch = \"\\\"@lancedb/vectordb-linux-arm64-musl\\\": \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nglob = \"node/package.json\"\nreplace = \"\\\"@lancedb/vectordb-linux-x64-musl\\\": \\\"{new_version}\\\"\"\nsearch = \"\\\"@lancedb/vectordb-linux-x64-musl\\\": \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nglob = \"node/package.json\"\nreplace = \"\\\"@lancedb/vectordb-win32-x64-msvc\\\": \\\"{new_version}\\\"\"\nsearch = \"\\\"@lancedb/vectordb-win32-x64-msvc\\\": \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nglob = \"node/package.json\"\nreplace = \"\\\"@lancedb/vectordb-win32-arm64-msvc\\\": \\\"{new_version}\\\"\"\nsearch = \"\\\"@lancedb/vectordb-win32-arm64-msvc\\\": \\\"{current_version}\\\"\"\n\n# Cargo files\n# ------------\n[[tool.bumpversion.files]]\nfilename = \"rust/ffi/node/Cargo.toml\"\nreplace = \"\\nversion = \\\"{new_version}\\\"\"\nsearch = \"\\nversion = \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nfilename = \"rust/lancedb/Cargo.toml\"\nreplace = \"\\nversion = \\\"{new_version}\\\"\"\nsearch = \"\\nversion = \\\"{current_version}\\\"\"\n\n[[tool.bumpversion.files]]\nfilename = \"nodejs/Cargo.toml\"\nreplace = \"\\nversion = \\\"{new_version}\\\"\"\nsearch = \"\\nversion = \\\"{current_version}\\\"\"\n"
        },
        {
          "name": ".cargo",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4306640625,
          "content": ".idea\n**/*.whl\n*.egg-info\n**/__pycache__\n.DS_Store\nvenv\n.venv\n\n.vscode\n.zed\nrust/target\nrust/Cargo.lock\n\nsite\n\n.pytest_cache\n.ruff_cache\n\npython/build\npython/dist\n\n**/.ipynb_checkpoints\n\n**/.hypothesis\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n*.dll\n\n## Javascript\n*.node\n**/node_modules\n**/.DS_Store\nnode/dist\nnode/examples/**/package-lock.json\nnode/examples/**/dist\nnodejs/lancedb/native*\ndist\n\n## Rust\ntarget\n\n**/sccache.log\n\nCargo.lock\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.58203125,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v3.2.0\n    hooks:\n    -   id: check-yaml\n    -   id: end-of-file-fixer\n    -   id: trailing-whitespace\n-   repo: https://github.com/astral-sh/ruff-pre-commit\n    # Ruff version.\n    rev: v0.2.2\n    hooks:\n    - id: ruff\n- repo: local\n  hooks:\n    - id: local-biome-check\n      name: biome check\n      entry: npx @biomejs/biome@1.8.3 check --config-path nodejs/biome.json nodejs/\n      language: system\n      types: [text]\n      files: \"nodejs/.*\"\n      exclude: nodejs/lancedb/native.d.ts|nodejs/dist/.*|nodejs/examples/.*\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.04296875,
          "content": "# Contributing to LanceDB\n\nLanceDB is an open-source project and we welcome contributions from the community.\nThis document outlines the process for contributing to LanceDB.\n\n## Reporting Issues\n\nIf you encounter a bug or have a feature request, please open an issue on the\n[GitHub issue tracker](https://github.com/lancedb/lancedb).\n\n## Picking an issue\n\nWe track issues on the GitHub issue tracker. If you are looking for something to\nwork on, check the [good first issue](https://github.com/lancedb/lancedb/contribute) label. These issues are typically the best described and have the smallest scope.\n\nIf there's an issue you are interested in working on, please leave a comment on the issue. This will help us avoid duplicate work. Additionally, if you have questions about the issue, please ask them in the issue comments. We are happy to provide guidance on how to approach the issue.\n\n## Configuring Git\n\nFirst, fork the repository on GitHub, then clone your fork:\n\n```bash\ngit clone https://github.com/<username>/lancedb.git\ncd lancedb\n```\n\nThen add the main repository as a remote:\n\n```bash\ngit remote add upstream https://github.com/lancedb/lancedb.git\ngit fetch upstream\n```\n\n## Setting up your development environment\n\nWe have development environments for Python, Typescript, and Java. Each environment has its own setup instructions.\n\n* [Python](python/CONTRIBUTING.md)\n* [Typescript](nodejs/CONTRIBUTING.md)\n<!-- TODO: add Java contributing guide -->\n* [Documentation](docs/README.md)\n\n\n## Best practices for pull requests\n\nFor the best chance of having your pull request accepted, please follow these guidelines:\n\n1. Unit test all bug fixes and new features. Your code will not be merged if it\n   doesn't have tests.\n1. If you change the public API, update the documentation in the `docs` directory.\n1. Aim to minimize the number of changes in each pull request. Keep to solving\n   one problem at a time, when possible.\n1. Before marking a pull request ready-for-review, do a self review of your code.\n   Is it clear why you are making the changes? Are the changes easy to understand?\n1. Use [conventional commit messages](https://www.conventionalcommits.org/en/) as pull request titles. Examples:\n    * New feature: `feat: adding foo API`\n    * Bug fix: `fix: issue with foo API`\n    * Documentation change: `docs: adding foo API documentation`\n1. If your pull request is a work in progress, leave the pull request as a draft.\n   We will assume the pull request is ready for review when it is opened.\n1. When writing tests, test the error cases. Make sure they have understandable\n   error messages.\n\n## Project structure\n\nThe core library is written in Rust. The Python, Typescript, and Java libraries\nare wrappers around the Rust library.\n\n* `src/lancedb`: Rust library source code\n* `python`: Python package source code\n* `nodejs`: Typescript package source code\n* `node`: **Deprecated** Typescript package source code\n* `java`: Java package source code\n* `docs`: Documentation source code\n\n## Release process\n\nFor information on the release process, see: [release_process.md](release_process.md)\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 2.1044921875,
          "content": "[workspace]\nmembers = [\n    \"rust/ffi/node\",\n    \"rust/lancedb\",\n    \"nodejs\",\n    \"python\",\n    \"java/core/lancedb-jni\",\n]\n# Python package needs to be built by maturin.\nexclude = [\"python\"]\nresolver = \"2\"\n\n[workspace.package]\nedition = \"2021\"\nauthors = [\"LanceDB Devs <dev@lancedb.com>\"]\nlicense = \"Apache-2.0\"\nrepository = \"https://github.com/lancedb/lancedb\"\ndescription = \"Serverless, low-latency vector database for AI applications\"\nkeywords = [\"lancedb\", \"lance\", \"database\", \"vector\", \"search\"]\ncategories = [\"database-implementations\"]\nrust-version = \"1.78.0\"\n\n[workspace.dependencies]\nlance = { \"version\" = \"=0.22.0\", \"features\" = [\n    \"dynamodb\",\n], git = \"https://github.com/lancedb/lance.git\", tag = \"v0.22.0-beta.1\" }\nlance-io = { version = \"=0.22.0\", git = \"https://github.com/lancedb/lance.git\", tag = \"v0.22.0-beta.1\" }\nlance-index = { version = \"=0.22.0\", git = \"https://github.com/lancedb/lance.git\", tag = \"v0.22.0-beta.1\" }\nlance-linalg = { version = \"=0.22.0\", git = \"https://github.com/lancedb/lance.git\", tag = \"v0.22.0-beta.1\" }\nlance-table = { version = \"=0.22.0\", git = \"https://github.com/lancedb/lance.git\", tag = \"v0.22.0-beta.1\" }\nlance-testing = { version = \"=0.22.0\", git = \"https://github.com/lancedb/lance.git\", tag = \"v0.22.0-beta.1\" }\nlance-datafusion = { version = \"=0.22.0\", git = \"https://github.com/lancedb/lance.git\", tag = \"v0.22.0-beta.1\" }\nlance-encoding = { version = \"=0.22.0\", git = \"https://github.com/lancedb/lance.git\", tag = \"v0.22.0-beta.1\" }\n# Note that this one does not include pyarrow\narrow = { version = \"53.2\", optional = false }\narrow-array = \"53.2\"\narrow-data = \"53.2\"\narrow-ipc = \"53.2\"\narrow-ord = \"53.2\"\narrow-schema = \"53.2\"\narrow-arith = \"53.2\"\narrow-cast = \"53.2\"\nasync-trait = \"0\"\nchrono = \"0.4.35\"\ndatafusion-common = \"42.0\"\ndatafusion-physical-plan = \"42.0\"\nenv_logger = \"0.10\"\nhalf = { \"version\" = \"=2.4.1\", default-features = false, features = [\n    \"num-traits\",\n] }\nfutures = \"0\"\nlog = \"0.4\"\nmoka = { version = \"0.11\", features = [\"future\"] }\nobject_store = \"0.10.2\"\npin-project = \"1.0.7\"\nsnafu = \"0.7.4\"\nurl = \"2\"\nnum-traits = \"0.2\"\nrand = \"0.8\"\nregex = \"1.10\"\nlazy_static = \"1\"\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.7607421875,
          "content": "<div align=\"center\">\n<p align=\"center\">\n\n<img width=\"275\" alt=\"LanceDB Logo\" src=\"https://github.com/lancedb/lancedb/assets/5846846/37d7c7ad-c2fd-4f56-9f16-fffb0d17c73a\">\n\n**Developer-friendly, database for multimodal AI**\n\n<a href='https://github.com/lancedb/vectordb-recipes/tree/main' target=\"_blank\"><img alt='LanceDB' src='https://img.shields.io/badge/VectorDB_Recipes-100000?style=for-the-badge&logo=LanceDB&logoColor=white&labelColor=645cfb&color=645cfb'/></a>\n<a href='https://lancedb.github.io/lancedb/' target=\"_blank\"><img alt='lancdb' src='https://img.shields.io/badge/DOCS-100000?style=for-the-badge&logo=lancdb&logoColor=white&labelColor=645cfb&color=645cfb'/></a>\n[![Blog](https://img.shields.io/badge/Blog-12100E?style=for-the-badge&logoColor=white)](https://blog.lancedb.com/)\n[![Discord](https://img.shields.io/badge/Discord-%235865F2.svg?style=for-the-badge&logo=discord&logoColor=white)](https://discord.gg/zMM32dvNtd)\n[![Twitter](https://img.shields.io/badge/Twitter-%231DA1F2.svg?style=for-the-badge&logo=Twitter&logoColor=white)](https://twitter.com/lancedb)\n[![Gurubase](https://img.shields.io/badge/Gurubase-Ask%20LanceDB%20Guru-006BFF?style=for-the-badge)](https://gurubase.io/g/lancedb)\n\n</p>\n\n<img max-width=\"750px\" alt=\"LanceDB Multimodal Search\" src=\"https://github.com/lancedb/lancedb/assets/917119/09c5afc5-7816-4687-bae4-f2ca194426ec\">\n\n</p>\n</div>\n\n<hr />\n\nLanceDB is an open-source database for vector-search built with persistent storage, which greatly simplifies retrieval, filtering and management of embeddings.\n\nThe key features of LanceDB include:\n\n* Production-scale vector search with no servers to manage.\n\n* Store, query and filter vectors, metadata and multi-modal data (text, images, videos, point clouds, and more).\n\n* Support for vector similarity search, full-text search and SQL.\n\n* Native Python and Javascript/Typescript support.\n\n* Zero-copy, automatic versioning, manage versions of your data without needing extra infrastructure.\n\n* GPU support in building vector index(*).\n\n* Ecosystem integrations with [LangChain 🦜️🔗](https://python.langchain.com/docs/integrations/vectorstores/lancedb/), [LlamaIndex 🦙](https://gpt-index.readthedocs.io/en/latest/examples/vector_stores/LanceDBIndexDemo.html), Apache-Arrow, Pandas, Polars, DuckDB and more on the way.\n\nLanceDB's core is written in Rust 🦀 and is built using <a href=\"https://github.com/lancedb/lance\">Lance</a>, an open-source columnar format designed for performant ML workloads.\n\n## Quick Start\n\n**Javascript**\n```shell\nnpm install @lancedb/lancedb\n```\n\n```javascript\nimport * as lancedb from \"@lancedb/lancedb\";\n\nconst db = await lancedb.connect(\"data/sample-lancedb\");\nconst table = await db.createTable(\"vectors\", [\n\t{ id: 1, vector: [0.1, 0.2], item: \"foo\", price: 10 },\n\t{ id: 2, vector: [1.1, 1.2], item: \"bar\", price: 50 },\n], {mode: 'overwrite'});\n\n\nconst query = table.vectorSearch([0.1, 0.3]).limit(2);\nconst results = await query.toArray();\n\n// You can also search for rows by specific criteria without involving a vector search.\nconst rowsByCriteria = await table.query().where(\"price >= 10\").toArray();\n```\n\n**Python**\n```shell\npip install lancedb\n```\n\n```python\nimport lancedb\n\nuri = \"data/sample-lancedb\"\ndb = lancedb.connect(uri)\ntable = db.create_table(\"my_table\",\n                         data=[{\"vector\": [3.1, 4.1], \"item\": \"foo\", \"price\": 10.0},\n                               {\"vector\": [5.9, 26.5], \"item\": \"bar\", \"price\": 20.0}])\nresult = table.search([100, 100]).limit(2).to_pandas()\n```\n\n## Blogs, Tutorials & Videos\n* 📈 <a href=\"https://blog.lancedb.com/benchmarking-random-access-in-lance/\">2000x better performance with Lance over Parquet</a>\n* 🤖 <a href=\"https://github.com/lancedb/vectordb-recipes/tree/main/examples/Youtube-Search-QA-Bot\">Build a question and answer bot with LanceDB</a>\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.4619140625,
          "content": "version: \"3.9\"\nservices:\n  localstack:\n    image: localstack/localstack:3.3\n    ports:\n      - 4566:4566\n    environment:\n      - SERVICES=s3,dynamodb,kms\n      - DEBUG=1\n      - LS_LOG=trace\n      - DOCKER_HOST=unix:///var/run/docker.sock\n      - AWS_ACCESS_KEY_ID=ACCESSKEY\n      - AWS_SECRET_ACCESS_KEY=SECRETKEY\n    healthcheck:\n      test: [ \"CMD\", \"curl\", \"-s\", \"http://localhost:4566/_localstack/health\" ]\n      interval: 5s\n      retries: 3\n      start_period: 10s\n"
        },
        {
          "name": "dockerfiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "node",
          "type": "tree",
          "content": null
        },
        {
          "name": "nodejs",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "release_process.md",
          "type": "blob",
          "size": 4.4853515625,
          "content": "# Release process\n\nThere are five total packages we release. Four are the `lancedb` packages\nfor Python, Rust, Java, and Node.js. The other one is the legacy `vectordb`\npackage node.js.\n\nThe Python package is versioned and released separately from the Rust, Java, and Node.js\nones. For Node.js the release process is shared between `lancedb` and\n`vectordb` for now.\n\n## Preview releases\n\nLanceDB has full releases about every 2 weeks, but in between we make frequent\npreview releases. These are released as `0.x.y.betaN` versions. They receive the\nsame level of testing as normal releases and let you get access to the latest\nfeatures. However, we do not guarantee that preview releases will be available\nmore than 6 months after they are released. We may delete the preview releases\nfrom the packaging index after a while. Once your application is stable, we\nrecommend switching to full releases, which will never be removed from package\nindexes.\n\n## Making releases\n\nThe release process uses a handful of GitHub actions to automate the process.\n\n```text\n  ┌─────────────────────┐\n  │Create Release Commit│\n  └─┬───────────────────┘\n    │                           ┌────────────┐ ┌──►Python GH Release\n    ├──►(tag) python-vX.Y.Z ───►│PyPI Publish├─┤\n    │                           └────────────┘ └──►Python Wheels\n    │\n    │                           ┌───────────┐\n    └──►(tag) vX.Y.Z ───┬──────►│NPM Publish├──┬──►Rust/Node GH Release\n                        │       └───────────┘  │\n                        │                      └──►NPM Packages\n                        │       ┌─────────────┐\n                        ├──────►│Cargo Publish├───►Cargo Release\n                        │       └─────────────┘\n                        │       ┌─────────────┐\n                        └──────►│Maven Publish├───►Java Maven Repo Release\n                                └─────────────┘\n```\n\nTo start a release, trigger a `Create Release Commit` action from\n[the workflows page](https://github.com/lancedb/lancedb/actions/workflows/make-release-commit.yml)\n(Click on \"Run workflow\").\n\n* **For a preview release**, leave the default parameters.\n* **For a stable release**, set the `release_type` input to `stable`.\n\n> [!IMPORTANT]\n> If there was a breaking change since the last stable release, and we haven't\n> done so yet, we should increment the minor version. The CI will detect if this\n> is needed and fail the `Create Release Commit` job. To fix, select the\n> \"bump minor version\" option.\n\n## Breaking changes\n\nWe try to avoid breaking changes, but sometimes they are necessary. When there\nare breaking changes, we will increment the minor version. (This is valid\nsemantic versioning because we are still in `0.x` versions.)\n\nWhen a PR makes a breaking change, the PR author should mark the PR using the\nconventional commit markers: either exclamation mark after the type\n(such as `feat!: change signature of func`) or have `BREAKING CHANGE` in the\nbody of the PR. A CI job will add a `breaking-change` label to the PR, which is\nwhat will ultimately be used to CI to determine if the minor version should be\nincremented.\n\n> [!IMPORTANT]\n> Reviewers should check that PRs with breaking changes receive the `breaking-change`\n> label. If a PR is missing the label, please add it, even if after it was merged.\n> This label is used in the release process.\n\nSome things that are considered breaking changes:\n\n* Upgrading `lance` to a new minor version. Minor version bumps in Lance are\n  considered breaking changes during `0.x` releases. This can change behavior\n  in LanceDB.\n* Upgrading a dependency pin that is in the Rust API. In particular, upgrading\n  `DataFusion` and `Arrow` are breaking changes. Changing dependencies that are\n  not exposed in our public API are not considered breaking changes.\n* Changing the signature of a public function or method.\n* Removing a public function or method.\n\nWe do make exceptions for APIs that are marked as experimental. These are APIs\nthat are under active development and not in major use. These changes should not\nreceive the `breaking-change` label.\n"
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[toolchain]\nchannel = \"1.83.0\"\n"
        },
        {
          "name": "rust",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}