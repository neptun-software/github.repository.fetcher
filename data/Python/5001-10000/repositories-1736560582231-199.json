{
  "metadata": {
    "timestamp": 1736560582231,
    "page": 199,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "django-commons/django-debug-toolbar",
      "stars": 8139,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2548828125,
          "content": "# https://editorconfig.org/\n\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nend_of_line = lf\ncharset = utf-8\n\n[*.html]\nindent_size = 2\n\n[Makefile]\nindent_style = tab\n\n[*.bat]\nindent_style = tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.16796875,
          "content": "*.pyc\n*.DS_Store\n*~\n.idea\nbuild\n.coverage*\ndist\ndjango_debug_toolbar.egg-info\ndocs/_build\nexample/db.sqlite3\nhtmlcov\n.tox\ngeckodriver.log\ncoverage.xml\n.direnv/\n.envrc\nvenv\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.57421875,
          "content": "repos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v5.0.0\n    hooks:\n    -   id: check-toml\n    -   id: check-yaml\n    -   id: end-of-file-fixer\n    -   id: trailing-whitespace\n    -   id: mixed-line-ending\n    -   id: file-contents-sorter\n        files: docs/spelling_wordlist.txt\n-   repo: https://github.com/pycqa/doc8\n    rev: v1.1.2\n    hooks:\n    -   id: doc8\n-   repo: https://github.com/adamchainz/django-upgrade\n    rev: 1.22.2\n    hooks:\n    -   id: django-upgrade\n        args: [--target-version, \"4.2\"]\n-   repo: https://github.com/pre-commit/pygrep-hooks\n    rev: v1.10.0\n    hooks:\n    -   id: rst-backticks\n    -   id: rst-directive-colons\n-   repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v4.0.0-alpha.8\n    hooks:\n    -   id: prettier\n        entry: env PRETTIER_LEGACY_CLI=1 prettier\n        types_or: [javascript, css]\n        args:\n        - --trailing-comma=es5\n-   repo: https://github.com/pre-commit/mirrors-eslint\n    rev: v9.17.0\n    hooks:\n    -   id: eslint\n        additional_dependencies:\n            - \"eslint@v9.17.0\"\n            - \"@eslint/js@v9.17.0\"\n            - \"globals\"\n        files: \\.js?$\n        types: [file]\n        args:\n        - --fix\n-   repo: https://github.com/astral-sh/ruff-pre-commit\n    rev: 'v0.8.4'\n    hooks:\n      - id: ruff\n        args: [--fix, --exit-non-zero-on-fix]\n      - id: ruff-format\n-   repo: https://github.com/tox-dev/pyproject-fmt\n    rev: v2.5.0\n    hooks:\n      - id: pyproject-fmt\n-   repo: https://github.com/abravalheri/validate-pyproject\n    rev: v0.23\n    hooks:\n      - id: validate-pyproject\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.31640625,
          "content": "# .readthedocs.yaml\n# Read the Docs configuration file\n# See https://docs.readthedocs.io/en/stable/config-file/v2.html for details\n\nversion: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.10\"\n\nsphinx:\n  configuration: docs/conf.py\n\npython:\n  install:\n  - requirements: requirements_dev.txt\n  - method: pip\n    path: .\n"
        },
        {
          "name": ".tx",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1904296875,
          "content": "# Django Debug Toolbar Code of Conduct\n\nThe django-debug-toolbar project utilizes the [Django Commons Code of Conduct](https://github.com/django-commons/membership/blob/main/CODE_OF_CONDUCT.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.318359375,
          "content": "This is a [Django Commons](https://github.com/django-commons/) project. By contributing you agree to abide by the [Contributor Code of Conduct](https://github.com/django-commons/membership/blob/main/CODE_OF_CONDUCT.md).\n\nPlease see the\n[README](https://github.com/django-commons/membership/blob/main/README.md)\nfor more help.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5,
          "content": "Copyright (c) Rob Hudson and individual contributors.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n    1. Redistributions of source code must retain the above copyright notice,\n       this list of conditions and the following disclaimer.\n\n    2. Redistributions in binary form must reproduce the above copyright\n       notice, this list of conditions and the following disclaimer in the\n       documentation and/or other materials provided with the distribution.\n\n    3. Neither the name of Django nor the names of its contributors may be used\n       to endorse or promote products derived from this software without\n       specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.1865234375,
          "content": ".PHONY: example test coverage translatable_strings update_translations\n\nexample:\n\tpython example/manage.py migrate --noinput\n\t-DJANGO_SUPERUSER_PASSWORD=p python example/manage.py createsuperuser \\\n\t\t--noinput --username=\"$(USER)\" --email=\"$(USER)@mailinator.com\"\n\tpython example/manage.py runserver\n\nexample_test:\n\tpython example/manage.py test example\n\ntest:\n\tDJANGO_SETTINGS_MODULE=tests.settings \\\n\t\tpython -m django test $${TEST_ARGS:-tests}\n\ntest_selenium:\n\tDJANGO_SELENIUM_TESTS=true DJANGO_SETTINGS_MODULE=tests.settings \\\n\t\tpython -m django test $${TEST_ARGS:-tests}\n\ncoverage:\n\tpython --version\n\tDJANGO_SETTINGS_MODULE=tests.settings \\\n\t\tpython -b -W always -m coverage run -m django test -v2 $${TEST_ARGS:-tests}\n\tcoverage report\n\tcoverage html\n\tcoverage xml\n\ntranslatable_strings:\n\tcd debug_toolbar && python -m django makemessages -l en --no-obsolete\n\t@echo \"Please commit changes and run 'tx push -s' (or wait for Transifex to pick them)\"\n\nupdate_translations:\n\ttx pull -a --minimum-perc=10\n\tcd debug_toolbar && python -m django compilemessages\n\n.PHONY: example/django-debug-toolbar.png\nexample/django-debug-toolbar.png: example/screenshot.py\n\tpython $< --browser firefox --headless -o $@\n\toptipng $@\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 2.7490234375,
          "content": "=====================================\nDjango Debug Toolbar |latest-version|\n=====================================\n\n|build-status| |coverage| |docs| |python-support| |django-support|\n\n.. |latest-version| image:: https://img.shields.io/pypi/v/django-debug-toolbar.svg\n   :target: https://pypi.org/project/django-debug-toolbar/\n   :alt: Latest version on PyPI\n\n.. |build-status| image:: https://github.com/django-commons/django-debug-toolbar/workflows/Test/badge.svg\n   :target: https://github.com/django-commons/django-debug-toolbar/actions/workflows/test.yml\n   :alt: Build Status\n\n.. |coverage| image:: https://img.shields.io/badge/Coverage-94%25-green\n   :target: https://github.com/django-commons/django-debug-toolbar/actions/workflows/test.yml?query=branch%3Amain\n   :alt: Test coverage status\n\n.. |docs| image:: https://img.shields.io/readthedocs/django-debug-toolbar/latest.svg\n   :target: https://readthedocs.org/projects/django-debug-toolbar/\n   :alt: Documentation status\n\n.. |python-support| image:: https://img.shields.io/pypi/pyversions/django-debug-toolbar\n   :target: https://pypi.org/project/django-debug-toolbar/\n   :alt: Supported Python versions\n\n.. |django-support| image:: https://img.shields.io/pypi/djversions/django-debug-toolbar\n   :target: https://pypi.org/project/django-debug-toolbar/\n   :alt: Supported Django versions\n\nThe Django Debug Toolbar is a configurable set of panels that display various\ndebug information about the current request/response and when clicked, display\nmore details about the panel's content.\n\nHere's a screenshot of the toolbar in action:\n\n.. image:: https://raw.github.com/django-commons/django-debug-toolbar/main/example/django-debug-toolbar.png\n   :alt: Django Debug Toolbar screenshot\n\nIn addition to the built-in panels, a number of third-party panels are\ncontributed by the community.\n\nThe current stable version of the Debug Toolbar is 5.0.0-alpha. It works on\nDjango â‰¥ 4.2.0.\n\nThe Debug Toolbar has experimental support for `Django's asynchronous views\n<https://docs.djangoproject.com/en/dev/topics/async/>`_. Please note that\nthe Debug Toolbar still lacks the capability for handling concurrent requests.\nIf you find any issues, please report them on the `issue tracker`_.\n\nDocumentation, including installation and configuration instructions, is\navailable at https://django-debug-toolbar.readthedocs.io/.\n\nThe Django Debug Toolbar is released under the BSD license, like Django\nitself. If you like it, please consider contributing!\n\nThe Django Debug Toolbar was originally created by Rob Hudson <rob@cogit8.org>\nin August 2008 and was further developed by many contributors_.\n\n.. _contributors: https://github.com/django-commons/django-debug-toolbar/graphs/contributors\n.. _issue tracker: https://github.com/django-commons/django-debug-toolbar/issues\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.5263671875,
          "content": "# Security Policy\n\n## Supported Versions\n\nOnly the latest version of django-debug-toolbar [![PyPI version](https://badge.fury.io/py/django-debug-toolbar.svg)](https://pypi.python.org/pypi/django-debug-toolbar) is supported.\n\n## Reporting a Vulnerability\n\nIf you think you have found a vulnerability, and even if you are not sure, please [report it to us in private](https://github.com/django-commons/django-debug-toolbar/security/advisories/new). We will review it and get back to you. Please refrain from public discussions of the issue.\n"
        },
        {
          "name": "debug_toolbar",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "eslint.config.js",
          "type": "blob",
          "size": 0.630859375,
          "content": "const js = require(\"@eslint/js\");\nconst globals = require(\"globals\");\n\nmodule.exports = [\n    js.configs.recommended,\n    {\n        files: [\"**/*.js\"],\n        languageOptions:{\n            ecmaVersion: \"latest\",\n            sourceType: \"module\",\n            globals: {\n                ...globals.browser,\n                ...globals.node\n            }\n        }\n    },\n    {\n        rules: {\n            \"curly\": [\"error\", \"all\"],\n            \"dot-notation\": \"error\",\n            \"eqeqeq\": \"error\",\n            \"no-eval\": \"error\",\n            \"no-var\": \"error\",\n            \"prefer-const\": \"error\",\n            \"semi\": \"error\"\n        }\n    }\n];\n"
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 2.6875,
          "content": "[build-system]\nbuild-backend = \"hatchling.build\"\nrequires = [\n  \"hatchling\",\n]\n\n[project]\nname = \"django-debug-toolbar\"\ndescription = \"A configurable set of panels that display various debug information about the current request/response.\"\nreadme = \"README.rst\"\nlicense = { text = \"BSD-3-Clause\" }\nauthors = [\n  { name = \"Rob Hudson\" },\n]\nrequires-python = \">=3.9\"\nclassifiers = [\n  \"Development Status :: 5 - Production/Stable\",\n  \"Environment :: Web Environment\",\n  \"Framework :: Django\",\n  \"Framework :: Django :: 4.2\",\n  \"Framework :: Django :: 5.0\",\n  \"Framework :: Django :: 5.1\",\n  \"Intended Audience :: Developers\",\n  \"License :: OSI Approved :: BSD License\",\n  \"Operating System :: OS Independent\",\n  \"Programming Language :: Python\",\n  \"Programming Language :: Python :: 3 :: Only\",\n  \"Programming Language :: Python :: 3.9\",\n  \"Programming Language :: Python :: 3.10\",\n  \"Programming Language :: Python :: 3.11\",\n  \"Programming Language :: Python :: 3.12\",\n  \"Programming Language :: Python :: 3.13\",\n  \"Topic :: Software Development :: Libraries :: Python Modules\",\n]\ndynamic = [\n  \"version\",\n]\ndependencies = [\n  \"django>=4.2.9\",\n  \"sqlparse>=0.2\",\n]\nurls.Download = \"https://pypi.org/project/django-debug-toolbar/\"\nurls.Homepage = \"https://github.com/django-commons/django-debug-toolbar\"\n\n[tool.hatch.build.targets.wheel]\npackages = [\n  \"debug_toolbar\",\n]\n\n[tool.hatch.version]\npath = \"debug_toolbar/__init__.py\"\n\n[tool.ruff]\ntarget-version = \"py39\"\n\nfix = true\nshow-fixes = true\nlint.extend-select = [\n  \"ASYNC\",  # flake8-async\n  \"B\",      # flake8-bugbear\n  \"C4\",     # flake8-comprehensions\n  \"C90\",    # McCabe cyclomatic complexity\n  \"DJ\",     # flake8-django\n  \"E\",      # pycodestyle errors\n  \"F\",      # Pyflakes\n  \"FBT\",    # flake8-boolean-trap\n  \"I\",      # isort\n  \"INT\",    # flake8-gettext\n  \"PGH\",    # pygrep-hooks\n  \"PIE\",    # flake8-pie\n  \"RUF100\", # Unused noqa directive\n  \"SLOT\",   # flake8-slots\n  \"UP\",     # pyupgrade\n  \"W\",      # pycodestyle warnings\n]\nlint.extend-ignore = [\n  \"B905\",  # Allow zip() without strict=\n  \"E501\",  # Ignore line length violations\n  \"UP031\", # It's not always wrong to use percent-formatting\n]\nlint.per-file-ignores.\"*/migrat*/*\" = [\n  \"N806\", # Allow using PascalCase model names in migrations\n  \"N999\", # Ignore the fact that migration files are invalid module names\n]\nlint.isort.combine-as-imports = true\nlint.mccabe.max-complexity = 16\n\n[tool.coverage.html]\nskip_covered = true\nskip_empty = true\n\n[tool.coverage.run]\nbranch = true\nparallel = true\nsource = [\n  \"debug_toolbar\",\n]\n\n[tool.coverage.paths]\nsource = [\n  \"src\",\n  \".tox/*/site-packages\",\n]\n\n[tool.coverage.report]\n# Update coverage badge link in README.rst when fail_under changes\nfail_under = 94\nshow_missing = true\n"
        },
        {
          "name": "requirements_dev.txt",
          "type": "blob",
          "size": 0.2890625,
          "content": "# Runtime dependencies\n\nDjango\nsqlparse\nJinja2\n\n# Testing\n\ncoverage[toml]\nhtml5lib\nselenium\ntox\nblack\ndjango-csp # Used in tests/test_csp_rendering\n\n# Integration support\n\ndaphne # async in Example app\n\n# Documentation\n\nSphinx\nsphinxcontrib-spelling\nsphinx-rtd-theme>1\n\n# Other tools\n\npre-commit\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.29296875,
          "content": "#!/usr/bin/env python3\n\nimport sys\n\nsys.stderr.write(\n    \"\"\"\\\n===============================\nUnsupported installation method\n===============================\nThis project no longer supports installation with `python setup.py install`.\nPlease use `python -m pip install .` instead.\n\"\"\"\n)\nsys.exit(1)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 2.3994140625,
          "content": "[tox]\nisolated_build = true\nenvlist =\n    docs\n    packaging\n    py{39,310,311,312}-dj{42}-{sqlite,postgresql,postgis,mysql}\n    py{310,311,312}-dj{42,50,51,main}-{sqlite,postgresql,psycopg3,postgis,mysql}\n    py{313}-dj{51,main}-{sqlite,psycopg3,postgis3,mysql}\n\n[testenv]\ndeps =\n    dj42: django~=4.2.1\n    dj50: django~=5.0.2\n    dj51: django~=5.1.0\n    djmain: https://github.com/django/django/archive/main.tar.gz\n    postgresql: psycopg2-binary\n    psycopg3: psycopg[binary]\n    postgis: psycopg2-binary\n    postgis3: psycopg[binary]\n    mysql: mysqlclient\n    coverage[toml]\n    Jinja2\n    html5lib\n    pygments\n    selenium>=4.8.0\n    sqlparse\n    django-csp\npassenv=\n    CI\n    COVERAGE_ARGS\n    DB_BACKEND\n    DB_NAME\n    DB_USER\n    DB_PASSWORD\n    DB_HOST\n    DB_PORT\n    DISPLAY\n    DJANGO_SELENIUM_TESTS\n    GITHUB_*\nsetenv =\n    PYTHONPATH = {toxinidir}\n    PYTHONWARNINGS = d\n    py311-dj42-postgresql: DJANGO_SELENIUM_TESTS = {env:DJANGO_SELENIUM_TESTS:true}\n    DB_NAME = {env:DB_NAME:debug_toolbar}\n    DB_USER = {env:DB_USER:debug_toolbar}\n    DB_HOST = {env:DB_HOST:localhost}\n    DB_PASSWORD =  {env:DB_PASSWORD:debug_toolbar}\n    DJANGO_SETTINGS_MODULE = tests.settings\nallowlist_externals = make\npip_pre = True\ncommands = python -b -W always -m coverage run -m django test -v2 {posargs:tests}\n\n\n[testenv:py{39,310,311,312,313}-dj{42,50,51,main}-{postgresql,psycopg3}]\nsetenv =\n    {[testenv]setenv}\n    DB_BACKEND = postgresql\n    DB_PORT = {env:DB_PORT:5432}\n\n\n[testenv:py{39,310,311,312,313}-dj{42,50,51,main}-{postgis,postgis3}]\nsetenv =\n    {[testenv]setenv}\n    DB_BACKEND = postgis\n    DB_PORT = {env:DB_PORT:5432}\n\n\n[testenv:py{39,310,311,312,313}-dj{42,50,51,main}-mysql]\nsetenv =\n    {[testenv]setenv}\n    DB_BACKEND = mysql\n    DB_PORT = {env:DB_PORT:3306}\n\n\n[testenv:py{39,310,311,312,313}-dj{42,50,51,main}-sqlite]\nsetenv =\n    {[testenv]setenv}\n    DB_BACKEND = sqlite3\n    DB_NAME = \":memory:\"\n\n\n[testenv:docs]\ncommands = make -C {toxinidir}/docs {posargs:spelling}\ndeps =\n    Sphinx\n    sphinxcontrib-spelling\n    sphinx-rtd-theme\n\n[testenv:packaging]\ncommands =\n    python -m build\n    twine check --strict dist/*\ndeps =\n build\n twine\nskip_install = true\n\n[gh-actions]\npython =\n    3.9: py39\n    3.10: py310\n    3.11: py311\n    3.12: py312\n    3.13: py313\n\n[gh-actions:env]\nDB_BACKEND =\n    mysql: mysql\n    postgresql: postgresql\n    psycopg3: psycopg3\n    postgis: postgis\n    postgis3: postgis3\n    sqlite3: sqlite\n"
        }
      ]
    }
  ]
}