{
  "metadata": {
    "timestamp": 1736560835242,
    "page": 531,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "TaskingAI/TaskingAI",
      "stars": 6275,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.8251953125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# JetBrains IDEs\n.idea/\nbackend/.idea/\nfrontend/.idea/\nbackend/.env\n\n# node\nfrontend/node_modules/\n\n# MacOS\n**.DS_Store\n\n# auto\nbackend/auto/\n\n# docker compose\ndocker/data/\n\n# vscode\n**.vscode\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.671875,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.5.0\n    hooks:\n      - id: trailing-whitespace\n      - id: end-of-file-fixer\n      - id: check-yaml\n\n  - repo: https://github.com/psf/black\n    rev: 23.12.1\n    hooks:\n      - id: black\n        args: [\"-l\", \"120\"]\n        language_version: python3\n\n  - repo: https://github.com/myint/autoflake\n    rev: v2.2.1\n    hooks:\n      - id: autoflake\n        args: [\"--in-place\", \"--remove-all-unused-imports\"]\n        exclude: \"__init__.py$\"\n\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: \"v4.0.0-alpha.8\" # Use the ref you want to point at\n    hooks:\n      - id: prettier\n        args: [\"--write\"]\n"
        },
        {
          "name": ".typos.toml",
          "type": "blob",
          "size": 0.0888671875,
          "content": "[default]\nextend-ignore-words-re = [\n    \"\\\\bba\\\\b\"\n]\n\n[files]\nextend-exclude = [\"i18n/*\"]\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.2236328125,
          "content": "# Contributing to TaskingAI\n\nWe appreciate your interest in contributing to TaskingAI! Our project thrives on the contributions of our vibrant open source community, and your participation is welcomed. Below, you will find essential resources and instructions to guide you through the process:\n\n[1. Getting Started](#getting-started)\n[2. Issues](#issues)\n[3. Pull Requests](#pull-requests)\n\n## Getting Started\n\nTo promote a welcoming and positive experience, please familiarize yourself with our [code of conduct](https://github.com/TaskingAI/TaskingAI/blob/master/.github/CODE_OF_CONDUCT.md) before starting your contribution journey. For instructions on setting up the codebase, consult our [DEVELOPERS.md](https://github.com/TaskingAI/TaskingAI/blob/master/DEVELOPERS.md).\n\n## Issues\n\nEncountering bugs is a part of development; when you find one, please open an Issue to help us improve.\n\n- Check our [current Issues](https://github.com/TaskingAI/TaskingAI/issues) to ensure your problem hasn't already been reported.\n- Include a detailed description of the issue and steps to reproduce it. The more specific you are, including screenshots and URLs, the easier it will be for us to address the problem quickly.\n\n## Pull Requests\n\nYour Pull Requests are crucial to the growth of this project, and we look forward to each contribution. Here are important considerations:\n\n- Verify no existing Pull Requests address the same issue. Connect your PR to any relevant existing Issues.\n- We prioritize accepting the first effective PR submitted for each problem.\n- Beginners might find [good first issue](https://github.com/TaskingAI/TaskingAI/labels/good%20first%20issue) tags helpful to start contributing.\n- Ensure your PR description is detailed using our template to facilitate a faster review process. PRs without clear problem statements will be closed.\n\nBefore you submit your PR, make sure to keep the code clean:\n\n- Go to your root directory and run `pip install pre-commit` first if you haven't already.\n- Run `pre-commit install` to install the pre-commit hooks.\n- Commit your changes. If there are any issues, wait for the pre-commit hooks to run and fix them, then commit again.\n\nThese checks will streamline the process and decrease the need for multiple revisions.\n"
        },
        {
          "name": "DEVELOPERS.md",
          "type": "blob",
          "size": 5.9541015625,
          "content": "# Developing TaskingAI\n\nWelcome to the TaskingAI development community! Your contributions are essential for the growth and improvement of our project. This document will guide you through setting up and navigating our development environment.\n\n- [Developing TaskingAI](#developing-taskingai)\n  - [Getting Started](#getting-started)\n  - [Install Dependencies](#install-dependencies)\n  - [Local Development](#local-development)\n    - [Fork the Repository](#fork-the-repository)\n    - [Clone the Repository](#clone-the-repository)\n    - [Inference](#inference)\n    - [Plugin](#plugin)\n    - [Backend](#backend)\n    - [Frontend](#frontend)\n  - [Submitting a Pull Request](#submitting-a-pull-request)\n  - [Handling Issues](#handling-issues)\n- [Common Development Tasks](#common-development-tasks)\n  - [Implementing & Updating Inference and Plugins](#implementing--updating-inference-and-plugins)\n- [Engaging with the Community](#engaging-with-the-community)\n- [Acknowledging Contributors](#acknowledging-contributors)\n\n## Getting Started\n\nThank you for your interest in [TaskingAI](https://www.tasking.ai) and your readiness to contribute! We encourage you to review our [code of conduct](https://github.com/TaskingAI/TaskingAI/blob/master/.github/CODE_OF_CONDUCT.md) and familiarize yourself with the existing [issues](https://github.com/TaskingAI/TaskingAI/issues) that you can help resolve. This guide will assist you in setting up your development environment.\n\n### Install Dependencies\n\nTo set up TaskingAI on your system, you'll need the following tools:\n\n- [Git](http://git-scm.com/)\n- [Docker](https://docs.docker.com/get-docker/) (for running the studio locally)\n\nFor frontend:\n\n- [Node.js v18.x (LTS)](http://nodejs.org) or higher\n- [npm](https://www.npmjs.com/) version 10.1.0 or higher\n\nFor backend/inference/plugin:\n\n- [Python 3.8+](https://www.python.org/downloads/)\n\n## Local Development\n\nWe recommend using a local development environment to test and contribute to TaskingAI. Follow these steps to set up the project on your machine.\n\n### Fork the Repository\n\nBegin by forking the [TaskingAI repository](https://github.com/TaskingAI/TaskingAI).\n\n### Clone the Repository\n\n1. Clone your fork:\n\n   ```sh\n   git clone https://github.com/<your_github_username>/TaskingAI.git\n   ```\n\n2. Navigate to the TaskingAI directory:\n\n   ```sh\n   cd TaskingAI\n   ```\n\n### Inference\n\n1. To develop for inference module, navigate to the `inference` directory:\n\n   ```sh\n   cd inference\n   ```\n\n2. Install the required packages:\n\n   ```sh\n    pip install -r requirements.txt\n   ```\n\n3. Copy the `.env.example` file to `.env`:\n\n   ```sh\n   cp .env.example .env\n   ```\n\n   After that you should fill in some of your own keys as you need.\n\n4. Run the inference module:\n\n   ```sh\n   PYTHONPATH=$(pwd) python app/main.py\n   ```\n\n   Now you can develop and debug the `inference` module.\n\n### Plugin\n\n1. To develop for plugin module, navigate to the `plugin` directory:\n\n   ```sh\n   cd plugin\n   ```\n\n2. Install the required packages:\n\n   ```sh\n   pip install -r requirements.txt\n   ```\n\n3. Copy the `.env.example` file to `.env`:\n\n   ```sh\n   cp .env.example .env\n   ```\n\n   After that you should fill in some of your own keys as you need.\n\n4. Run the plugin module:\n\n   ```sh\n   PYTHONPATH=$(pwd) python app/main.py\n   ```\n\n   Now you can develop and debug the `plugin` module.\n\n### Backend\n\nBefore you start, you need to have 2 running instances of the inference and plugin modules. You can follow the steps above to run them. Also, you need to have 2 running instances of Postgres and Redis. You can use docker to run them. Make sure you have their ports exposed and you can access them from the backend module.\n\n1. To develop for backend module, navigate to the `backend` directory:\n\n   ```sh\n   cd backend\n   ```\n\n2. Install the required packages:\n\n   ```sh\n   pip install -r requirements.txt\n   ```\n\n3. Copy the `.env.example` file to `.env`:\n\n   ```sh\n   cp .env.example .env\n   ```\n\n   Make sure the `TASKINGAI_INFERENCE_URL`, `TASKINGAI_PLUGIN_URL`, `POSTGRES_URL`, `REDIS_URL` are correctly set to the running instances of the inference, plugin, postgres and redis respectively.\n\n4. Run the backend module:\n\n   ```sh\n   PYTHONPATH=$(pwd) python app/main.py\n   ```\n\n   Now you can develop and debug the `backend` module.\n\n### Frontend\n\nBefore you start, you need to have the instances of `backend`, `inference`, `plugin`, `postgres` and `redis` running. You can follow the steps above to run them.\n\n1. To develop for frontend module, navigate to the `frontend` directory:\n\n   ```sh\n   cd frontend\n   ```\n\n2. Install the required packages:\n\n   ```sh\n   npm install\n   ```\n\n3. Run the frontend module:\n\n   ```sh\n   npm run dev\n   ```\n\nNow you can develop and debug the `frontend` module.\n\n## Submitting a Pull Request\n\nAfter making changes, submit a pull request for review. Your contribution will be evaluated and potentially merged, adding you to our [list of contributors](https://github.com/TaskingAI/TaskingAI/graphs/contributors).\n\n## Handling Issues\n\nFeel free to tackle any open issues. If you see ongoing work by another contributor, consider collaborating with them.\n\n## Common Development Tasks\n\n### Implementing & Updating Inference and Plugins\n\nThe models and plugins are essential components of TaskingAI. You can contribute by implementing new models/plugins or updating existing ones.\n\nFor example, models can be added to the `inference/providers` directory, and plugins can be added to the `plugin/bundles` directory.\n\n## Engaging with the Community\n\nJoin our [Discord Server](https://discord.gg/J3J2YySV) or [Forum](https://forum.tasking.ai) to connect with other contributors and users. Share your ideas, ask questions, and collaborate with the community.\n\n## Acknowledging Contributors\n\nView all contributors and their impact on our project [here](https://github.com/TaskingAI/TaskingAI/graphs/contributors).\n\nThis comprehensive guide is designed to assist you in becoming an active participant and contributor to TaskingAI. We're excited to see what you'll bring to the community!\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.5078125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   Copyright 2024 AutoPulse, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.3505859375,
          "content": "<p>\n<a href=\"https://www.tasking.ai\"><img src=\"static/img/logo.png\" alt=\"https://www.tasking.ai\"></a>\n</p>\n\n# TaskingAI\n\n<p align=\"center\">\n  <a href=\"https://hub.docker.com/u/taskingai\"><img alt=\"Docker Image Version (latest semver)\" src=\"https://img.shields.io/docker/v/taskingai/taskingai-server?label=docker\"></a>\n  <a href=\"https://github.com/TaskingAI/TaskingAI/blob/master/LICENSE\"><img alt=\"GitHub License\" src=\"https://img.shields.io/github/license/taskingai/taskingai\"></a>\n  <a href=\"https://pypi.org/project/taskingai\"><img alt=\"PyPI version\" src=\"https://img.shields.io/pypi/v/taskingai?color=blue\"></a>\n  <a href=\"https://twitter.com/TaskingAI\"><img alt=\"X (formerly Twitter) URL\" src=\"https://img.shields.io/twitter/url?url=https%3A%2F%2Ftwitter.com%2FTaskingAI\"></a>\n  <a href=\"https://www.youtube.com/@TaskingAI\"><img alt=\"YouTube Channel Subscribers\" src=\"https://img.shields.io/youtube/channel/subscribers/UCxUnOM-ZbZKmyR_Q5vAUSTA\"></a>\n  <a href=\"https://discord.gg/RqwcD3vG3k\"><img alt=\"Docs\" src=\"https://img.shields.io/badge/Discord-join-brightgreen\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"./README.md\"><img alt=\"Readme (English)\" src=\"https://img.shields.io/badge/English-2EA26A\"></a>\n  <a href=\"./i18n/README.de.md\"><img alt=\"Readme (Deutsch)\" src=\"https://img.shields.io/badge/Deutsch-2EA26A\"></a>\n  <a href=\"./i18n/README.fr.md\"><img alt=\"Readme (Français)\" src=\"https://img.shields.io/badge/Français-2EA26A\"></a>\n  <a href=\"./i18n/README.es.md\"><img alt=\"Readme (Español)\" src=\"https://img.shields.io/badge/Español-2EA26A\"></a>\n  <a href=\"./i18n/README.pt.md\"><img alt=\"Readme (Português)\" src=\"https://img.shields.io/badge/Português-2EA26A\"></a>\n  <a href=\"./i18n/README.zh-cn.md\"><img alt=\"Readme (简体中文)\" src=\"https://img.shields.io/badge/简体中文-2EA26A\"></a>\n  <a href=\"./i18n/README.zh-tw.md\"><img alt=\"Readme (繁體中文)\" src=\"https://img.shields.io/badge/繁體中文-2EA26A\"></a>\n  <a href=\"./i18n/README.jp.md\"><img alt=\"Readme (日本語)\" src=\"https://img.shields.io/badge/日本語-2EA26A\"></a>\n  <a href=\"./i18n/README.kr.md\"><img alt=\"Readme (한국어)\" src=\"https://img.shields.io/badge/한국어-2EA26A\"></a>\n</p>\n\n[TaskingAI](https://www.tasking.ai) is a BaaS (Backend as a Service) platform for **LLM-based Agent Development and Deployment**. It unified the integration of hundreds of LLM models, and provides an intuitive user interface for managing your LLM application's functional modules, including tools, RAG systems, assistants, conversation history, and more.\n\n### Key Features\n\n1. **All-In-One LLM Platform**: Access hundreds of AI models with unified APIs.\n2. **Abundant enhancement**: Enhance LLM agent performance with hundreds of customizable built-in **tools** and advanced **Retrieval-Augmented Generation** (RAG) system\n3. **BaaS-Inspired Workflow**: Separate AI logic (server-side) from product development (client-side), offering a clear pathway from console-based prototyping to scalable solutions using RESTful APIs and client SDKs.\n4. **One-Click to Production**: Deploy your AI agents with a single click to production stage, and scale them with ease. Let TaskingAI handle the rest.\n5. **Asynchronous Efficiency**: Harness Python FastAPI's asynchronous features for high-performance, concurrent computation, enhancing the responsiveness and scalability of the applications.\n6. **Intuitive UI Console**: Simplifies project management and allows in-console workflow testing.\n\n<p>\n<img src=\"static/img/console.png\" alt=\"\">\n</p>\n\n### Integrations\n\n**Models**: TaskingAI connects with hundreds of LLMs from various providers, including OpenAI, Anthropic, and more. We also allow users to integrate local host models through Ollama, LM Studio and Local AI.\n\n<p>\n<img src=\"./static/img/model_providers.png\" alt=\"\">\n</p>\n\n**Plugins**: TaskingAI supports a wide range of built-in plugins to empower your AI agents, including Google search, website reader, stock market retrieval, and more. Users can also create custom tools to meet their specific needs.\n\n<p>\n<img src=\"./static/img/plugins.png\" alt=\"\">\n</p>\n\n---\n\n## Why TaskingAI?\n\n### Problems with existing solutions 🙁\n\n**LangChain** is a tool framework for LLM application development, but it faces practical limitations:\n\n- **Statelessness**: Relies on client-side or external services for data management.\n- **Scalability Challenges**: Statelessness impacts consistent data handling across sessions.\n- **External Dependencies**: Depends on outside resources like model SDKs and vector storage.\n\n**OpenAI's Assistant API** excels in delivering GPTs-like functionalities but comes with its own constraints:\n\n- **Tied Functionalities**: Integrations like tools and retrievals are tied to each assistant, not suitable for multi-tenant applications.\n- **Proprietary Limitations**: Restricted to OpenAI models, unsuitable for diverse needs.\n- **Customization Limits**: Users cannot customize agent configuration such as memory and retrieval system.\n\n### How TaskingAI solves the problem 😃\n\n- **Supports both stateful and stateless usages**: Whether to keep track of and manage the message histories and agent conversation sessions, or just make stateless chat completion requests, TaskingAI has them both covered.\n- **Decoupled modular management**: Decoupled the management of tools, RAGs systems, language models from the agent. And allows free combination of these modules to build a powerful AI agent.\n- **Multi-tenant support**: TaskingAI supports fast deployment after development, and can be used in multi-tenant scenarios. No need to worry about the cloud services, just focus on the AI agent development.\n- **Unified API**: TaskingAI provides unified APIs for all the modules, including tools, RAGs systems, language models, and more. Super easy to manage and change the AI agent's configurations.\n\n## What Can You Build with TaskingAI?\n\n- [x] **Interactive Application Demos**\n- [x] **AI Agents for Enterprise Productivity**\n- [x] **Multi-Tenant AI-Native Applications for Business**\n\n---\n\nPlease give us a **FREE STAR 🌟** if you find it helpful 😇\n\n<p>\n<img src=\"static/img/star.gif\" alt=\"\">\n</p>\n\n---\n\n## Quickstart with Docker\n\nA simple way to initiate self-hosted TaskingAI community edition is through [Docker](https://www.docker.com/).\n\n### Prerequisites\n\n- Docker and Docker Compose installed on your machine.\n- Git installed for cloning the repository.\n- Python environment (above Python 3.8) for running the client SDK.\n\n### Installation\n\nFirst, clone the TaskingAI (community edition) repository from GitHub.\n\n```bash\ngit clone https://github.com/taskingai/taskingai.git\ncd taskingai\n```\n\nInside the cloned repository, go to the docker directory.\n\n```bash\ncd docker\n```\n\n1. **Copy `.env.example` to `.env`**:\n\n   ```sh\n   cp .env.example .env\n   ```\n\n2. **Edit the `.env` file**:\n   Open the `.env` file in your favorite text editor and update the necessary configurations. Ensure all required environment variables are set correctly.\n\n3. **Start Docker Compose**:\n   Run the following command to start all services:\n   ```sh\n   docker-compose -p taskingai --env-file .env up -d\n   ```\n\nOnce the service is up, access the TaskingAI console through your browser with the URL http://localhost:8080. The default username and password are `admin` and `TaskingAI321`.\n\n### Upgrade\n\nIf you have already installed TaskingAI with a previous version and want to upgrade to the latest version, first update the repository.\n\n```bash\ngit pull origin master\n```\n\nThen stop the current docker service, upgrade to the latest version by pulling the latest image, and finally restart the service.\n\n```bash\ncd docker\ndocker-compose -p taskingai down\ndocker-compose -p taskingai pull\ndocker-compose -p taskingai --env-file .env up -d\n```\n\nDon't worry about data loss; your data will be automatically migrated to the latest version schema if needed.\n\n### TaskingAI UI Console\n\n[![TaskingAI Console Demo](https://img.youtube.com/vi/4A5uQoawETU/maxresdefault.jpg)](https://youtu.be/4A5uQoawETU)\n**_<p style=\"text-align: center; font-size: small; \">Click the image above to view the TaskingAI Console Demo Video.</p>_**\n\n### TaskingAI Client SDK\n\nOnce the console is up, you can programmatically interact with the TaskingAI server using the TaskingAI client SDK.\n\nEnsure you have Python 3.8 or above installed, and set up a virtual environment (optional but recommended).\nInstall the TaskingAI Python client SDK using pip.\n\n```bash\npip install taskingai\n```\n\nHere is a client code example:\n\n```python\nimport taskingai\n\ntaskingai.init(api_key='YOUR_API_KEY', host='http://localhost:8080')\n\n# Create a new assistant\nassistant = taskingai.assistant.create_assistant(\n    model_id=\"YOUR_MODEL_ID\",\n    memory=\"naive\",\n)\n\n# Create a new chat\nchat = taskingai.assistant.create_chat(\n    assistant_id=assistant.assistant_id,\n)\n\n# Send a user message\ntaskingai.assistant.create_message(\n    assistant_id=assistant.assistant_id,\n    chat_id=chat.chat_id,\n    text=\"Hello!\",\n)\n\n# generate assistant response\nassistant_message = taskingai.assistant.generate_message(\n    assistant_id=assistant.assistant_id,\n    chat_id=chat.chat_id,\n)\n\nprint(assistant_message)\n```\n\nNote that the `YOUR_API_KEY` and `YOUR_MODEL_ID` should be replaced with the actual API key and chat completion model ID you created in the console.\n\nYou can learn more in the [documentation](https://docs.tasking.ai/docs/guide/getting_started/self_hosting/overview).\n\n## Resources\n\n- [Documentation](https://docs.tasking.ai)\n- [API Reference](https://docs.tasking.ai/api)\n- [Contact Us](https://www.tasking.ai/contact-us)\n\n## Community and Contribution\n\nPlease see our [contribution guidelines](./CONTRIBUTING.md) for how to contribute to the project.\n\nAlso, we’re excited to announce that TaskingAI now has an official Discord community! 🎊\n\n[Join our Discord server](https://discord.gg/RqwcD3vG3k) to:\n\n    •\t💬 Engage in discussions about TaskingAI, share ideas, and provide feedback.\n    •\t📚 Get support, tips, and best practices from other users and our team.\n    •\t🚀 Stay updated on the latest news, updates, and feature releases.\n    •\t🤝 Network with like-minded individuals who are passionate about AI and task automation.\n\n## License and Code of Conduct\n\nTaskingAI is released under a specific [TaskingAI Open Source License](./LICENSE). By contributing to this project, you agree to abide by its terms.\n\n## Support and Contact\n\nFor support, please refer to our [documentation](https://docs.tasking.ai) or contact us at [support@tasking.ai](mailto:support@tasking.ai).\n"
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "inference",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}