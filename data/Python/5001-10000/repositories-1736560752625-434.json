{
  "metadata": {
    "timestamp": 1736560752625,
    "page": 434,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenGVLab/InternVL",
      "stars": 6729,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.212890625,
          "content": "[flake8]\nignore = E501, F403, C901, W504, W605, E251, E122, E126, E127, E722, W503, E128, E741, E731, E701\nselect = E1, E3, E502, E7, E9, W1, W5, W6\nmax-line-length = 180\nexclude=*.egg/*,build,dist,detection/configs/*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.166015625,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n#.idea/\n\n.idea/\n\n.DS_Store\ndata_process/\ninternvl_chat/work_dirs/\ninternvl_chat/unittest/\ninternvl_chat/data/\nHusky2/*\ndata_process/\n*distillation*\n\nbatchscript-*\nresults/\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.681640625,
          "content": "[isort]\nline-length = 180\nmulti_line_output = 0\nextra_standard_library = setuptools\nknown_third_party = PIL,asynctest,cityscapesscripts,cv2,gather_models,matplotlib,mmcv,numpy,onnx,onnxruntime,pycocotools,pytest,pytorch_sphinx_theme,requests,scipy,seaborn,six,terminaltables,torch,ts,yaml\nno_lines_before = STDLIB,LOCALFOLDER\ndefault_section = THIRDPARTY\n\n[yapf]\nBASED_ON_STYLE = pep8\nBLANK_LINE_BEFORE_NESTED_CLASS_OR_DEF = true\nSPLIT_BEFORE_EXPRESSION_AFTER_OPENING_PAREN = true\n\n[codespell]\nskip = *.ipynb\nquiet-level = 3\nignore-words-list = patten,nd,ty,mot,hist,formating,winn,gool,datas,wan,confids,TOOD,tood\n¬© 2022 GitHub, Inc.\nTerms\nPrivacy\nSecurity\nStatus\nDocs\nContact GitHub\nPricing\nAPI\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.8330078125,
          "content": "exclude: ^internvl_chat_llava/\nrepos:\n  - repo: https://github.com/PyCQA/flake8\n    rev: 5.0.4\n    hooks:\n      - id: flake8\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.11.5\n    hooks:\n      - id: isort\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.3.0\n    hooks:\n      - id: trailing-whitespace\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: requirements-txt-fixer\n      - id: double-quote-string-fixer\n      - id: check-merge-conflict\n      - id: fix-encoding-pragma\n        args: [\"--remove\"]\n      - id: mixed-line-ending\n        args: [\"--fix=lf\"]\n  - repo: https://github.com/executablebooks/mdformat\n    rev: 0.7.9\n    hooks:\n      - id: mdformat\n        args: [\"--number\"]\n        additional_dependencies:\n          - mdformat-openmmlab\n          - mdformat_frontmatter\n          - linkify-it-py\n"
        },
        {
          "name": "INSTALLATION.md",
          "type": "blob",
          "size": 2.12109375,
          "content": "## üõ†Ô∏è Installation\n\n- Clone this repository:\n\n  ```bash\n  git clone https://github.com/OpenGVLab/InternVL.git\n  ```\n\n- Create a conda virtual environment and activate it:\n\n  ```bash\n  conda create -n internvl python=3.9 -y\n  conda activate internvl\n  ```\n\n- Install dependencies using `requirements.txt`:\n\n  ```bash\n  pip install -r requirements.txt\n  ```\n\n  By default, our `requirements.txt` file includes the following dependencies:\n\n  - `-r requirements/internvl_chat.txt`\n  - `-r requirements/streamlit_demo.txt`\n  - `-r requirements/classification.txt`\n  - `-r requirements/segmentation.txt`\n\n  The `clip_benchmark.txt` is **not** included in the default installation. If you require the `clip_benchmark` functionality, please install it manually by running the following command:\n\n  ```bash\n  pip install -r requirements/clip_benchmark.txt\n  ```\n\n### Additional Instructions\n\n- Install `flash-attn==2.3.6`:\n\n  ```bash\n  pip install flash-attn==2.3.6 --no-build-isolation\n  ```\n\n  Alternatively you can compile from source:\n\n  ```bash\n  git clone https://github.com/Dao-AILab/flash-attention.git\n  cd flash-attention\n  git checkout v2.3.6\n  python setup.py install\n  ```\n\n- Install `mmcv-full==1.6.2` (optional, for `segmentation`):\n\n  ```bash\n  pip install -U openmim\n  mim install mmcv-full==1.6.2\n  ```\n\n- Install `apex` (optional, for `segmentation`):\n\n  ```bash\n  git clone https://github.com/NVIDIA/apex.git\n  git checkout 2386a912164b0c5cfcd8be7a2b890fbac5607c82  # https://github.com/NVIDIA/apex/issues/1735\n  pip install -v --disable-pip-version-check --no-cache-dir --no-build-isolation --config-settings \"--build-option=--cpp_ext\" --config-settings \"--build-option=--cuda_ext\" ./\n  ```\n\n  If you encounter `ModuleNotFoundError: No module named 'fused_layer_norm_cuda'`, it is because apex's CUDA extensions are not being installed successfully. You can try uninstalling apex and the code will default to the PyTorch version of RMSNorm. Alternatively, if you prefer using apex, try adding a few lines to `setup.py` and then recompiling.\n\n  <img src=https://github.com/OpenGVLab/InternVL/assets/23737120/c04a989c-8024-49fa-b62c-2da623e63729 width=50%>\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2023 OpenGVLab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 54.900390625,
          "content": "<div align=\"center\">\n\n# InternVL Family: Closing the Gap to Commercial Multimodal Models with Open-Source Suites ‚Äî‚Äî A Pioneering Open-Source Alternative to GPT-4o\n\n<div align=\"center\">\n  <img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/930e6814-8a9f-43e1-a284-118a5732daa4\">\n  <br>\n</div>\n\n[\\[üÜï Blog\\]](https://internvl.github.io/blog/)  [\\[ü§î FAQs\\]](https://internvl.readthedocs.io/en/latest/tutorials/faqs.html)   [\\[üó®Ô∏è Chat Demo\\]](https://internvl.opengvlab.com/)  [\\[ü§ó HF Demo\\]](https://huggingface.co/spaces/OpenGVLab/InternVL)  [\\[üìñ Document\\]](https://internvl.readthedocs.io/en/latest/)  [\\[üåê API\\]](https://internvl.readthedocs.io/en/latest/get_started/internvl_chat_api.html)  [\\[üöÄ Quick Start\\]](#quick-start-with-huggingface)\n\n[\\[üî• InternVL2.5 Report\\]](https://huggingface.co/papers/2412.05271) [\\[Mini-InternVL Paper\\]](https://arxiv.org/abs/2410.16261) [\\[InternVL2 Blog\\]](https://internvl.github.io/blog/2024-07-02-InternVL-2.0/)  [\\[üìú InternVL 1.5 Paper\\]](https://huggingface.co/papers/2404.16821)  [\\[üìú InternVL 1.0 Paper\\]](https://huggingface.co/papers/2312.14238)\n\n[\\[üìñ 2.0 ‰∏≠ÊñáËß£ËØª\\]](https://zhuanlan.zhihu.com/p/706547971)  [\\[üìñ 1.5 ‰∏≠ÊñáËß£ËØª\\]](https://zhuanlan.zhihu.com/p/699439759)  [\\[üìñ 1.0 ‰∏≠ÊñáËß£ËØª\\]](https://zhuanlan.zhihu.com/p/702946079)\n\n[Switch to the Chinese version (ÂàáÊç¢Ëá≥‰∏≠ÊñáÁâà)](/README_zh.md)\n\n<a href=\"https://trendshift.io/repositories/9803\" target=\"_blank\"><img src=\"https://trendshift.io/api/badge/repositories/9803\" alt=\"OpenGVLab%2FInternVL | Trendshift\" style=\"width: 250px; height: 55px;\" width=\"250\" height=\"55\"/></a>\n<img height=\"55\" alt=\"image\" src=\"https://github.com/user-attachments/assets/bd62ab46-f0ea-40c6-ab10-7fde671716cc\">\n\n![perform](https://github.com/user-attachments/assets/3059622e-e553-40ba-84ed-32d8f92a2f69)\n\n</div>\n\n## News üöÄüöÄüöÄ\n\n- `2024/12/20`: üî• We release the [InternVL2.5-MPO](https://internvl.github.io/blog/2024-12-20-InternVL-2.5-MPO/), which is finetuned with [Mixed Preference Optimization](https://huggingface.co/papers/2411.10442) on [MMPR-v1.1](https://huggingface.co/datasets/OpenGVLab/MMPR-v1.1). **The resulting models outperform their counterparts without MPO by an average of 2 points across all model scales on the OpenCompass leaderboard.** These models are available at [HF link](https://huggingface.co/collections/OpenGVLab/internvl25-mpo-6753fed98cd828219b12f849).\n- `2024/12/17`: üöÄ [InternVL2/2.5](https://github.com/PaddlePaddle/PaddleMIX/tree/develop/paddlemix/examples/internvl2) is supported in [PaddleMIX](https://github.com/PaddlePaddle/PaddleMIX) by Paddle Team.\n- `2024/12/05`: üöÄ We release the [InternVL2.5](https://huggingface.co/collections/OpenGVLab/internvl-25-673e1019b66e2218f68d7c1c), an advanced multimodal large language model (MLLM) series with parameter coverage ranging from 1B to 78B. [InternVL2_5-78B](https://huggingface.co/OpenGVLab/InternVL2_5-78B) is the first open-source MLLMs to achieve over **70%** on the **MMMU benchmark**, matching the performance of leading closed-source commercial models like GPT-4o. These models are available at [HF link](https://huggingface.co/collections/OpenGVLab/internvl-25-673e1019b66e2218f68d7c1c).\n- `2024/11/14`: We introduce [MMPR](https://huggingface.co/datasets/OpenGVLab/MMPR), a high-quality, large-scale multimodal reasoning preference dataset, and [MPO](https://github.com/OpenGVLab/InternVL/tree/main/internvl_chat/shell/internvl2.0_mpo), an effective preference optimization algorithm. The resulting model, [InternVL2-8B-MPO](https://huggingface.co/OpenGVLab/InternVL2-8B-MPO), achieves an accuracy of 67.0 on MathVista. Please refer to our [paper](https://arxiv.org/abs/2411.10442), [project page](https://internvl.github.io/blog/2024-11-14-InternVL-2.0-MPO/) and [document](https://internvl.readthedocs.io/en/latest/internvl2.0/preference_optimization.html) for more details.\n- `2024/10/21`: We release the Mini-InternVL series. These models achieve impressive performance with minimal size: the 4B model achieves 90% of the performance with just 5% of the model size. For more details, please check our [project page](https://github.com/OpenGVLab/InternVL/tree/main/internvl_chat/shell/mini_internvl) and [document](https://internvl.readthedocs.io/en/latest/internvl2.0/domain_adaptation.html).\n- `2024/08/01`: The [Chartmimic](https://chartmimic.github.io/) team evaluated the InternVL2 series models on their benchmark. The InternVL2-26B and 76B models achieved the top two performances among open-source models, with the InternVL2 76B model surpassing GeminiProVision and exhibiting comparable results to Claude-3-opus.\n- `2024/08/01`: InternVL2-Pro achieved the SOTA performance among open-source models on the [CharXiv](https://charxiv.github.io/#leaderboard) dataset, surpassing many closed-source models such as GPT-4V, Gemini 1.5 Flash, and Claude 3 Sonnet.\n- `2024/07/24`: The [MLVU](https://github.com/JUNJIE99/MLVU) team evaluated InternVL-1.5 on their benchmark. The average performance on the multiple-choice task was 50.4%, while the performance on the generative tasks was 4.02. The performance on the multiple-choice task ranked #1 among all open-source MLLMs.\n- `2024/07/04`: We release the [InternVL2 series](https://huggingface.co/collections/OpenGVLab/internvl-20-667d3961ab5eb12c7ed1463e). InternVL2-Pro achieved a 62.0% accuracy on the MMMU benchmark, matching the performance of leading closed-source commercial models like GPT-4o.\n\n<details>\n<summary>More News</summary>\n\n- `2024/07/18`: InternVL2-40B achieved SOTA performance among open-source models on the [Video-MME](https://github.com/BradyFU/Video-MME) dataset, scoring 61.2 when inputting 16 frames and 64.4 when inputting 32 frames. It significantly outperforms other open-source models and is the closest open-source model to GPT-4o mini.\n- `2024/07/18`: InternVL2-Pro achieved the SOTA performance on the [DocVQA](https://rrc.cvc.uab.es/?ch=17&com=evaluation&task=1) and [InfoVQA](https://rrc.cvc.uab.es/?ch=17&com=evaluation&task=3) benchmarks.\n- `2024/06/19`: We propose Needle In A Multimodal Haystack ([MM-NIAH](https://github.com/OpenGVLab/MM-NIAH)), the first benchmark designed to systematically evaluate the capability of existing MLLMs to comprehend long multimodal documents.\n- `2024/05/30`: We release [ShareGPT-4o](https://sharegpt4o.github.io/), a large-scale dataset that we plan to open-source with 200K images, 10K videos, and 10K audios with detailed descriptions.\n- `2024/05/28`: Thanks to the [lmdeploy](https://github.com/InternLM/lmdeploy) team for providing AWQ quantization support. The 4-bit model is available at [OpenGVLab/InternVL-Chat-V1-5-AWQ](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5-AWQ).\n- `2024/05/13`: InternVL 1.0 can now be used as the [text encoder](https://huggingface.co/OpenGVLab/InternVL-14B-224px) for diffusion models to support multilingual generation natively in over 110 languages worldwide. See [MuLan](https://github.com/mulanai/MuLan) for more details.\n- `2024/04/18`: InternVL-Chat-V1-5 has been released at [HF link](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5), approaching the performance of GPT-4V and Gemini Pro on various benchmarks like MMMU, DocVQA, ChartQA, MathVista, etc.\n- `2024/02/27`: InternVL is accepted by CVPR 2024 (Oral)! üéâ\n- `2024/02/21`: [InternVL-Chat-V1-2-Plus](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2-Plus) achieved SOTA performance on MathVista (59.9), MMBench (83.8), and MMVP (58.7). See our [blog](https://internvl.github.io/blog/2024-02-21-InternVL-1.2/) for more details.\n- `2024/02/12`: InternVL-Chat-V1-2 has been released. It achieves 51.6 on MMMU val and 82.3 on MMBench test. For more details, please refer to our [blog](https://internvl.github.io/blog/2024-02-21-InternVL-1.2/) and [SFT data](./internvl_chat#prepare-training-datasets). The model is now available on [HuggingFace](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2), and both training / evaluation data and scripts are open-sourced.\n- `2024/01/24`: InternVL-Chat-V1-1 is released, it supports Chinese and has stronger OCR capability, see [here](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1).\n- `2024/01/16`: We release our [customized mmcv/mmsegmentation/mmdetection code](https://github.com/OpenGVLab/InternVL-MMDetSeg), integrated with DeepSpeed, which can be used for training large-scale detection and segmentation models.\n\n</details>\n\n## Documents\n\n### üåü **Get Started**\n\n- **Installation**: üå± [Installation Guide](https://internvl.readthedocs.io/en/latest/get_started/installation.html) | üìÑ [requirements.txt](./requirements.txt)\n- **Chat Data Format**: üìù [Meta File](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#meta-file) | ‚úèÔ∏è [Text](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#pure-text-data) | üñºÔ∏è [Single-Image](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#single-image-data) | üñºÔ∏èüñºÔ∏è [Multi-Image](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#multi-image-data) | üé• [Video](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#video-data)\n- **Local Chat Demo**: ü§ñ [Streamlit Demo](https://internvl.readthedocs.io/en/latest/get_started/local_chat_demo.html#streamlit-demo)\n- **InternVL-Chat API**: üåê [InternVL2-Pro](https://internvl.readthedocs.io/en/latest/get_started/internvl_chat_api.html#official-api-of-internvl2-pro)\n- **Tutorials**: üöÄ [Enhancing InternVL2 on COCO Caption Using LoRA Fine-Tuning](https://internvl.readthedocs.io/en/latest/tutorials/coco_caption_finetune.html)\n\n### üèÜ **InternVL Family**\n\n- **InternVL 2.5**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl2.5/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl2.5/quick_start.html) | ‚ú® [Finetune](https://internvl.readthedocs.io/en/latest/internvl2.5/finetune.html) | üìä [Evaluate](https://internvl.readthedocs.io/en/latest/internvl2.5/evaluation.html) | üì¶ [Deploy](https://internvl.readthedocs.io/en/latest/internvl2.5/deployment.html) | üéØ [MPO](https://internvl.readthedocs.io/en/latest/internvl2.5/preference_optimization.html)\n- **InternVL 2.0**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl2.0/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl2.0/quick_start.html) | ‚ú® [Finetune](https://internvl.readthedocs.io/en/latest/internvl2.0/finetune.html) | üìä [Evaluate](https://internvl.readthedocs.io/en/latest/internvl2.0/evaluation.html) | üì¶ [Deploy](https://internvl.readthedocs.io/en/latest/internvl2.0/deployment.html) | üéØ [MPO](https://internvl.readthedocs.io/en/latest/internvl2.0/preference_optimization.html)\n- **InternVL 1.5**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl1.5/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl1.5/quick_start.html) | ‚ú® [Finetune](https://internvl.readthedocs.io/en/latest/internvl1.5/finetune.html) | üìä [Evaluate](https://internvl.readthedocs.io/en/latest/internvl1.5/evaluation.html) | üì¶ [Deploy](https://internvl.readthedocs.io/en/latest/internvl1.5/deployment.html)\n- **InternVL 1.2**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl1.2/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl1.2/quick_start.html) | ‚ú® [Finetune](https://internvl.readthedocs.io/en/latest/internvl1.2/finetune.html) | üìä [Evaluate](https://internvl.readthedocs.io/en/latest/internvl1.2/evaluation.html)\n- **InternVL 1.1**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl1.1/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl1.1/quick_start.html) | üìä [Evaluation](https://internvl.readthedocs.io/en/latest/internvl1.1/evaluation.html)\n- **InternVL 1.0**: üñºÔ∏è [Classification](https://internvl.readthedocs.io/en/latest/internvl1.0/classification.html) | üìä [CLIP-Benchmark](https://internvl.readthedocs.io/en/latest/internvl1.0/clip_benchmark.html) | üé® [Segmentation](https://internvl.readthedocs.io/en/latest/internvl1.0/segmentation.html) | üí¨ [Chat-LLaVA](https://internvl.readthedocs.io/en/latest/internvl1.0/internvl_chat_llava.html) | ‚ú® [InternVL-G](https://internvl.readthedocs.io/en/latest/internvl1.0/internvl_g.html)\n\n## Model Zoo\n\n#### Multimodal Large Language Model (InternVL 2.5)\n\n<table>\n  <tr>\n    <th>Model Name</th>\n    <th>Vision Part</th>\n    <th>Language Part</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n  </tr>\n  <tr>\n    <td>InternVL2_5-1B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT&#8209;300M&#8209;448px&#8209;V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-0.5B-Instruct\">Qwen2.5&#8209;0.5B&#8209;Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-1B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-1B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-2B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-1_8b-chat\">internlm2_5-1_8b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-2B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-2B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-4B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-3B-Instruct\">Qwen2.5-3B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-4B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-4B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-8B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-7b-chat\">internlm2_5-7b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-8B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-8B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-26B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-20b-chat\">internlm2_5-20b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-26B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-26B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-38B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-32B-Instruct\">Qwen2.5-32B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-38B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-38B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-78B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-72B-Instruct\">Qwen2.5-72B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-78B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-78B\">ü§ñ link</a></td>\n  </tr>\n</table>\n\n<table>\n  <tr>\n    <th>Model Name</th>\n    <th>Vision Part</th>\n    <th>Language Part</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n  </tr>\n  <tr>\n    <td>InternVL2_5-1B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT&#8209;300M&#8209;448px&#8209;V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-0.5B-Instruct\">Qwen2.5&#8209;0.5B&#8209;Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-1B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-1B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-2B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-1_8b-chat\">internlm2_5-1_8b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-2B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-2B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-4B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-3B-Instruct\">Qwen2.5-3B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-4B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-4B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-8B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-7b-chat\">internlm2_5-7b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-8B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-8B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-26B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-20b-chat\">internlm2_5-20b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-26B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-26B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-38B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-32B-Instruct\">Qwen2.5-32B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-38B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-38B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-78B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-72B-Instruct\">Qwen2.5-72B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-78B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-78B-MPO\">ü§ñ link</a></td>\n  </tr>\n</table>\n\n#### Multimodal Large Language Model (InternVL 2.0)\n\n<table>\n  <tr>\n    <th>Model Name</th>\n    <th>Vision Part</th>\n    <th>Language Part</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n  </tr>\n  <tr>\n    <td>InternVL2-1B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">InternViT-300M-448px</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2-0.5B-Instruct\">Qwen2-0.5B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-1B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-1B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-2B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">InternViT-300M-448px</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2-chat-1_8b\">internlm2-chat-1-8b</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-2B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-2B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-4B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">InternViT-300M-448px</a></td>\n    <td><a href=\"https://huggingface.co/microsoft/Phi-3-mini-128k-instruct\">Phi&#8209;3&#8209;mini&#8209;128k&#8209;instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-4B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-4B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-8B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">InternViT-300M-448px</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-7b-chat\">internlm2_5-7b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-8B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-8B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-26B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5\">InternViT-6B-448px-V1-5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2-chat-20b\">internlm2-chat-20b</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-26B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-26B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-40B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5\">InternViT&#8209;6B&#8209;448px&#8209;V1&#8209;5</a></td>\n    <td><a href=\"https://huggingface.co/NousResearch/Nous-Hermes-2-Yi-34B\">Nous&#8209;Hermes&#8209;2&#8209;Yi&#8209;34B</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-40B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-40B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2&#8209;Llama3-76B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5\">InternViT-6B-448px-V1-5</a></td>\n    <td><a href=\"https://huggingface.co/NousResearch/Hermes-2-Theta-Llama-3-70B\">Hermes‚Äë2‚ÄëTheta‚Äë<br>Llama‚Äë3‚Äë70B</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-Llama3-76B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-Llama3-76B\">ü§ñ link</a></td>\n  </tr>\n</table>\n\n#### Multimodal Large Language Model (InternVL 1.0-1.5)\n\n<table>\n  <tr>\n    <th>Model</th>\n    <th>Date</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n    <th>Note</th>\n  </tr>\n  <tr>\n    <td>Mini&#8209;InternVL&#8209;Chat&#8209;4B&#8209;V1&#8209;5</td>\n    <td>2024.05.28</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-4B-V1-5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/Mini-InternVL-Chat-4B-V1-5\">ü§ñ link</a></td>\n    <td>üöÄüöÄ 16% of the model size, 90% of the performance</td>\n  </tr>\n  <tr>\n    <td>Mini-InternVL-Chat-2B-V1-5</td>\n    <td>2024.05.19</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-2B-V1-5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/Mini-InternVL-Chat-2B-V1-5\">ü§ñ link</a></td>\n    <td>üöÄ 8% of the model size, 80% of the performance</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-V1-5</td>\n    <td>2024.04.18</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-V1-5\">ü§ñ link</a></td>\n    <td>support 4K image; super strong OCR; Approaching the performance of GPT-4V and Gemini Pro on various benchmarks like MMMU, DocVQA, ChartQA, MathVista, etc.</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-V1-2-Plus</td>\n    <td>2024.02.21</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2-Plus\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-V1-2-Plus\">ü§ñ link</a></td>\n    <td>more SFT data and stronger</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-V1-2</td>\n    <td>2024.02.11</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-V1-2\">ü§ñ link</a></td>\n    <td>scaling up LLM to 34B</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-V1-1</td>\n    <td>2024.01.24</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-V1-1\">ü§ñ link</a></td>\n    <td>support Chinese and stronger OCR</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-19B</td>\n    <td>2023.12.25</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-13B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-13B\">ü§ñ link</a></td>\n    <td>English multimodal dialogue</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-13B</td>\n    <td>2023.12.25</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-7B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-7B\">ü§ñ link</a></td>\n    <td>English multimodal dialogue</td>\n  </tr>\n</table>\n\n#### CLIP-like Model (InternVL 1.0-2.5)\n\n<table>\n  <tr>\n    <th>Model</th>\n    <th>Date</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n    <th>Note</th>\n  </tr>\n  <tr>\n    <td>InternViT-300M-448px-V2_5</td>\n    <td>2024.12.05</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-300M-448px-V2_5\">ü§ñ link</a></td>\n    <td>üöÄüöÄ A more powerful lightweight visual encoder. (üî•new)</td>\n  </tr>\n  <tr>\n    <td>InternViT-6B-448px-V2_5</td>\n    <td>2024.12.05</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-448px-V2_5\">ü§ñ link</a></td>\n    <td>üöÄüöÄ A stronger visual encoder to extract visual features. (üî•new)</td>\n  </tr>\n  <tr>\n    <td>InternViT-300M-448px</td>\n    <td>2024.05.25</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-300M-448px\">ü§ñ link</a></td>\n    <td>distilled small vision foundation model with 300M parameters </td>\n  </tr>\n  <tr>\n    <td>InternViT&#8209;6B&#8209;448px&#8209;V1&#8209;5</td>\n    <td>2024.04.20</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-448px-V1-5\">ü§ñ link</a></td>\n    <td>support dynamic resolution and super strong OCR feature extraction capability by incremental pre-training</td>\n  </tr>\n  <tr>\n    <td>InternViT-6B-448px-V1-2</td>\n    <td>2024.02.11</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-2\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-448px-V1-2\">ü§ñ link</a></td>\n    <td>support 448 resolution by incremental pre-training</td>\n  </tr>\n  <tr>\n    <td>InternViT-6B-448px-V1-0</td>\n    <td>2024.01.30</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-0\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-448px-V1-0\">ü§ñ link</a></td>\n    <td>support 448 resolution by incremental pre-training</td>\n  </tr>\n  <tr>\n    <td>InternViT-6B-224px</td>\n    <td>2023.12.22</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-224px\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-224px\">ü§ñ link</a></td>\n    <td>the first version of InternViT-6B, extracted from InternVL‚Äë14B‚Äë224px</td>\n  </tr>\n</table>\n\n#### Vision-Language Foundation Model (InternVL 1.0)\n\n<table>\n  <tr>\n    <th>Model</th>\n    <th>Date</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n    <th>Note</th>\n  </tr>\n  <tr>\n    <td>InternVL&#8209;14B&#8209;224px</td>\n    <td>2023.12.22</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-14B-224px\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-14B-224px\">ü§ñ link</a></td>\n    <td>vision-language foundation model, InternViT-6B + QLLaMA, can be used for image-text retrieval like CLIP</td>\n  </tr>\n</table>\n\n## TODO List\n\n- [x] Release training / evaluation code for InternVL2.5 series\n- [x] Support liger kernels to save GPU memory\n- [x] Release the code, model, and data of MPO\n- [x] Support multimodal packed dataset\n- [ ] Support vLLM and Ollama\n- [ ] Support video and PDF input in online demo\n- [ ] Release InternVL2 with VisionLLMv2 integration\n- [x] Rebuild documents using readthedocs\n- [x] Support fine-tuning different LLMs with LoRA\n- [x] Release `requirements.txt` for InternVL2\n- [x] Release training / evaluation code for InternVL2 series\n- [x] Release Streamlit web UI for InternVL1.5 and InternVL2\n\n## What can InternVL do?\n\n<details>\n  <summary>Visual Perception (click to expand)</summary>\n\n- Linear-Probe Image Classification [\\[see details\\]](./classification#-evaluation)\n\n  ViT-22B uses the private JFT-3B dataset.\n\n  | method              | #param | IN-1K | IN-ReaL | IN-V2 | IN-A | IN-R | IN-Sketch |\n  | ------------------- | :----: | :---: | :-----: | :---: | :--: | :--: | :-------: |\n  | OpenCLIP-G          |  1.8B  | 86.2  |  89.4   | 77.2  | 63.8 | 87.8 |   66.4    |\n  | DINOv2-g            |  1.1B  | 86.5  |  89.6   | 78.4  | 75.9 | 78.8 |   62.5    |\n  | EVA-01-CLIP-g       |  1.1B  | 86.5  |  89.3   | 77.4  | 70.5 | 87.7 |   63.1    |\n  | MAWS-ViT-6.5B       |  6.5B  | 87.8  |    -    |   -   |  -   |  -   |     -     |\n  | ViT-22B\\*           | 21.7B  | 89.5  |  90.9   | 83.2  | 83.8 | 87.4 |     -     |\n  | InternViT-6B (ours) |  5.9B  | 88.2  |  90.4   | 79.9  | 77.5 | 89.8 |   69.1    |\n\n- Semantic Segmentation [\\[see details\\]](./segmentation#-evaluation)\n\n  | method                | decoder | #param (train/total) | crop size | mIoU         |\n  | --------------------- | :-----: | :------------------: | :-------: | ------------ |\n  | OpenCLIP-G (frozen)   | Linear  |     0.3M / 1.8B      |    512    | 39.3         |\n  | ViT-22B (frozen)      | Linear  |     0.9M / 21.7B     |    504    | 34.6         |\n  | InternViT-6B (frozen) | Linear  |     0.5M / 5.9B      |    504    | 47.2 (+12.6) |\n  | ViT-22B (frozen)      | UperNet |     0.8B / 22.5B     |    504    | 52.7         |\n  | InternViT-6B (frozen) | UperNet |     0.4B / 6.3B      |    504    | 54.9 (+2.2)  |\n  | ViT-22B               | UperNet |    22.5B / 22.5B     |    504    | 55.3         |\n  | InternViT-6B          | UperNet |     6.3B / 6.3B      |    504    | 58.9 (+3.6)  |\n\n- Zero-Shot Image Classification [\\[see details\\]](./clip_benchmark#imagenet-variants-and-objectnet)\n\n  | method            | IN-1K | IN-A | IN-R | IN-V2 | IN-Sketch | ObjectNet |\n  | ----------------- | :---: | :--: | :--: | :---: | :-------: | :-------: |\n  | OpenCLIP-G        | 80.1  | 69.3 | 92.1 | 73.6  |   68.9    |   73.0    |\n  | EVA-02-CLIP-E+    | 82.0  | 82.1 | 94.5 | 75.7  |   71.6    |   79.6    |\n  | ViT-22B\\*         | 85.9  | 90.1 | 96.0 | 80.9  |     -     |   87.6    |\n  | InternVL-C (ours) | 83.2  | 83.8 | 95.5 | 77.3  |   73.9    |   80.6    |\n\n- Multilingual Zero-Shot Image Classification [\\[see details\\]](./clip_benchmark#multilingual-imagenet-1k)\n\n  EN: English, ZH: Chinese, JP: Japanese, Ar: Arabic, IT: Italian\n\n  | method            | IN-1K (EN) | IN-1K (ZH) | IN-1K (JP) | IN-1K (AR) | IN-1K (IT) |\n  | ----------------- | :--------: | :--------: | :--------: | :--------: | :--------: |\n  | Taiyi-CLIP-ViT-H  |     -      |    54.4    |     -      |     -      |     -      |\n  | WuKong-ViT-L-G    |     -      |    57.5    |     -      |     -      |     -      |\n  | CN-CLIP-ViT-H     |     -      |    59.6    |     -      |     -      |     -      |\n  | AltCLIP-ViT-L     |    74.5    |    59.6    |     -      |     -      |     -      |\n  | EVA-02-CLIP-E+    |    82.0    |     -      |     -      |     -      |    41.2    |\n  | OpenCLIP-XLM-R-H  |    77.0    |    55.7    |    53.1    |    37.0    |    56.8    |\n  | InternVL-C (ours) |    83.2    |    64.5    |    61.5    |    44.9    |    65.7    |\n\n- Zero-Shot Video Classification\n\n  | method            | #frame | K400 | K600 | K700 |\n  | ----------------- | :----: | :--: | :--: | :--: |\n  | OpenCLIP-G        |   1    | 65.9 | 66.1 | 59.2 |\n  | EVA-02-CLIP-E+    |   1    | 69.8 | 69.3 | 63.4 |\n  | InternVL-C (ours) |   1    | 71.0 | 71.3 | 65.7 |\n  | ViCLIP            |   8    | 75.7 | 73.5 | 66.4 |\n  | InternVL-C (ours) |   8    | 79.4 | 78.8 | 71.5 |\n\n</details>\n\n<details>\n  <summary>Cross-Modal Retrieval (click to expand)</summary>\n\n- English Zero-Shot Image-Text Retrieval [\\[see details\\]](./clip_benchmark#flickr30k--coco)\n\n  <table>\n    <tr align=center>\n        <td rowspan=\"3\" align=left><b>model</b></td>\n        <td colspan=\"6\" align=center><b>Flickr30K</b></td>\n        <td colspan=\"6\" align=center><b>COCO</b></td>\n        <td rowspan=\"3\" align=center><b>avg</b></td>\n    </tr>\n     <tr align=center>\n        <td colspan=\"3\" align=center><b>image-to-text</b></td>\n        <td colspan=\"3\" align=center><b>text-to-image</b></td>\n         <td colspan=\"3\" align=center><b>image-to-text</b></td>\n        <td colspan=\"3\" align=center><b>text-to-image</b></td>\n     </tr>\n     <tr>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n     </tr>\n  <tr align=center>\n        <td align=left>OpenCLIP-G</td>\n        <td>92.9</td>\n        <td>99.3</td>\n        <td>99.8</td>\n        <td>79.5</td>\n        <td>95.0</td>\n        <td>97.1</td>\n        <td>67.3</td>\n        <td>86.9</td>\n        <td>92.6</td>\n        <td>51.4</td>\n        <td>74.9</td>\n        <td>83.0</td>\n        <td>85.0</td>\n     </tr>\n  <tr align=center>\n        <td align=left>EVA-02-CLIP-E+</td>\n        <td>93.9</td>\n        <td>99.4</td>\n        <td>99.8</td>\n        <td>78.8</td>\n        <td>94.2</td>\n        <td>96.8</td>\n        <td>68.8</td>\n        <td>87.8</td>\n        <td>92.8</td>\n        <td>51.1</td>\n        <td>75.0</td>\n        <td>82.7</td>\n        <td>85.1</td>\n     </tr>\n    <tr align=center>\n        <td align=left>EVA-CLIP-8B</td>\n        <td>95.6</td>\n        <td>99.6</td>\n        <td>99.9</td>\n        <td>80.8</td>\n        <td>95.5</td>\n        <td>97.6</td>\n        <td>70.3</td>\n        <td>89.3</td>\n        <td>93.9</td>\n        <td>53.0</td>\n        <td>76.0</td>\n        <td>83.4</td>\n        <td>86.2</td>\n     </tr>\n  <tr align=center>\n        <td align=left>InternVL-C (ours)</td>\n        <td>94.7</td>\n        <td>99.6</td>\n        <td>99.9</td>\n        <td>81.7</td>\n        <td>96.0</td>\n        <td>98.2</td>\n        <td>70.6</td>\n        <td>89.0</td>\n        <td>93.5</td>\n        <td>54.1</td>\n        <td>77.3</td>\n        <td>84.6</td>\n        <td>86.6</td>\n     </tr>\n  <tr align=center>\n        <td align=left>InternVL-G (ours)</td>\n        <td>95.7</td>\n        <td>99.7</td>\n        <td>99.9</td>\n        <td>85.0</td>\n        <td>97.0</td>\n        <td>98.6</td>\n        <td>74.9</td>\n        <td>91.3</td>\n        <td>95.2</td>\n        <td>58.6</td>\n        <td>81.3</td>\n        <td>88.0</td>\n        <td>88.8</td>\n     </tr>\n\n  </table>\n\n- Chinese Zero-Shot Image-Text Retrieval [\\[see details\\]](./clip_benchmark#flickr30k-cn--coco-cn)\n\n  <table>\n    <tr  align=center>\n        <td rowspan=\"3\" align=left><b>model</b></td>\n        <td colspan=\"6\" align=center><b>Flickr30K-CN</b></td>\n        <td colspan=\"6\" align=center><b>COCO-CN</b></td>\n        <td rowspan=\"3\" align=center><b>avg</b></td>\n\n  </tr>\n     <tr  align=center>\n        <td colspan=\"3\" align=center><b>image-to-text</b></td>\n        <td colspan=\"3\" align=center><b>text-to-image</b></td>\n         <td colspan=\"3\" align=center><b>image-to-text</b></td>\n        <td colspan=\"3\" align=center><b>text-to-image</b></td>\n     </tr>\n     <tr>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n     </tr>\n\n  <tr align=center>\n        <td align=left>CN-CLIP-ViT-H</td>\n        <td>81.6</td>\n        <td>97.5</td>\n        <td>98.8</td>\n        <td>71.2</td>\n        <td>91.4</td>\n        <td>95.5</td>\n        <td>63.0</td>\n        <td>86.6</td>\n        <td>92.9</td>\n        <td>69.2</td>\n        <td>89.9</td>\n        <td>96.1</td>\n        <td>86.1</td>\n     </tr>\n\n  <tr align=center>\n        <td align=left>OpenCLIP-XLM-R-H</td>\n        <td>86.1</td>\n        <td>97.5</td>\n        <td>99.2</td>\n        <td>71.0</td>\n        <td>90.5</td>\n        <td>94.9</td>\n        <td>70.0</td>\n        <td>91.5</td>\n        <td>97.0</td>\n        <td>66.1</td>\n        <td>90.8</td>\n        <td>96.0</td>\n        <td>87.6</td>\n     </tr>\n\n  <tr align=center>\n        <td align=left>InternVL-C (ours)</td>\n        <td>90.3</td>\n        <td>98.8</td>\n        <td>99.7</td>\n        <td>75.1</td>\n        <td>92.9</td>\n        <td>96.4</td>\n        <td>68.8</td>\n        <td>92.0</td>\n        <td>96.7</td>\n        <td>68.9</td>\n        <td>91.9</td>\n        <td>96.5</td>\n        <td>89.0</td>\n     </tr>\n  <tr align=center>\n        <td align=left>InternVL-G (ours)</td>\n        <td>92.9</td>\n        <td>99.4</td>\n        <td>99.8</td>\n        <td>77.7</td>\n        <td>94.8</td>\n        <td>97.3</td>\n        <td>71.4</td>\n        <td>93.9</td>\n        <td>97.7</td>\n        <td>73.8</td>\n        <td>94.4</td>\n        <td>98.1</td>\n        <td>90.9</td>\n     </tr>\n\n  </table>\n\n- Multilingual Zero-Shot Image-Text Retrieval on XTD [\\[see details\\]](./clip_benchmark#xtd)\n\n  | method            |  EN  |  ES  |  FR  |  ZH  |  IT  |  KO  |  RU  |  JP  | average |\n  | ----------------- | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :-----: |\n  | AltCLIP           | 95.4 | 94.1 | 92.9 | 95.1 | 94.2 | 94.4 | 91.8 | 91.7 |  93.7   |\n  | OpenCLIP-XLM-R-H  | 97.3 | 96.1 | 94.5 | 94.7 | 96.0 | 90.2 | 93.9 | 94.0 |  94.6   |\n  | InternVL-C (ours) | 97.3 | 95.7 | 95.1 | 95.6 | 96.0 | 92.2 | 93.3 | 95.5 |  95.1   |\n  | InternVL-G (ours) | 98.6 | 97.7 | 96.5 | 96.7 | 96.9 | 95.1 | 94.8 | 96.1 |  96.6   |\n\n</details>\n\n<details>\n  <summary>Multimodal Dialogue</summary>\n\n</details>\n\n## Quick Start with HuggingFace\n\n<details>\n  <summary>using InternViT-6B for visual feature extraction (click to expand)</summary>\n\n```python\nimport torch\nfrom PIL import Image\nfrom transformers import AutoModel, CLIPImageProcessor\n\nmodel = AutoModel.from_pretrained(\n    'OpenGVLab/InternViT-6B-448px-V2_5',\n    torch_dtype=torch.bfloat16,\n    low_cpu_mem_usage=True,\n    trust_remote_code=True).cuda().eval()\n\nimage = Image.open('./examples/image1.jpg').convert('RGB')\n\nimage_processor = CLIPImageProcessor.from_pretrained('OpenGVLab/InternViT-6B-448px-V1-5')\n\npixel_values = image_processor(images=image, return_tensors='pt').pixel_values\npixel_values = pixel_values.to(torch.bfloat16).cuda()\n\noutputs = model(pixel_values)\n```\n\n</details>\n\n<details>\n  <summary>using InternVL-C(ontrastive) and InternVL-G(enerative) for cross-modal retrieval (click to expand)</summary>\n\n```python\nimport torch\nfrom PIL import Image\nfrom transformers import AutoModel, CLIPImageProcessor\nfrom transformers import AutoTokenizer\n\n\nmodel = AutoModel.from_pretrained(\n    'OpenGVLab/InternVL-14B-224px',\n    torch_dtype=torch.bfloat16,\n    low_cpu_mem_usage=True,\n    trust_remote_code=True).cuda().eval()\n\nimage_processor = CLIPImageProcessor.from_pretrained('OpenGVLab/InternVL-14B-224px')\n\ntokenizer = AutoTokenizer.from_pretrained(\n    'OpenGVLab/InternVL-14B-224px', use_fast=False, add_eos_token=True)\ntokenizer.pad_token_id = 0  # set pad_token_id to 0\n\nimages = [\n    Image.open('./examples/image1.jpg').convert('RGB'),\n    Image.open('./examples/image2.jpg').convert('RGB'),\n    Image.open('./examples/image3.jpg').convert('RGB')\n]\nprefix = 'summarize:'\ntexts = [\n    prefix + 'a photo of a red panda',  # English\n    prefix + '‰∏ÄÂº†ÁÜäÁå´ÁöÑÁÖßÁâá',  # Chinese\n    prefix + '‰∫åÂåπ„ÅÆÁå´„ÅÆÂÜôÁúü'  # Japanese\n]\n\npixel_values = image_processor(images=images, return_tensors='pt').pixel_values\npixel_values = pixel_values.to(torch.bfloat16).cuda()\ninput_ids = tokenizer(texts, return_tensors='pt', max_length=80,\n                      truncation=True, padding='max_length').input_ids.cuda()\n\n# InternVL-C\nlogits_per_image, logits_per_text = model(\n    image=pixel_values, text=input_ids, mode='InternVL-C')\nprobs = logits_per_image.softmax(dim=-1)\n# tensor([[9.9609e-01, 5.2185e-03, 6.0070e-08],\n#         [2.2949e-02, 9.7656e-01, 5.9903e-06],\n#         [3.2932e-06, 7.4863e-05, 1.0000e+00]], device='cuda:0',\n#        dtype=torch.bfloat16, grad_fn=<SoftmaxBackward0>)\n\n# InternVL-G\nlogits_per_image, logits_per_text = model(\n    image=pixel_values, text=input_ids, mode='InternVL-G')\nprobs = logits_per_image.softmax(dim=-1)\n# tensor([[9.9609e-01, 3.1738e-03, 3.6322e-08],\n#         [8.6060e-03, 9.9219e-01, 2.8759e-06],\n#         [1.7583e-06, 3.1233e-05, 1.0000e+00]], device='cuda:0',\n#        dtype=torch.bfloat16, grad_fn=<SoftmaxBackward0>)\n\n# please set add_eos_token to False for generation\ntokenizer.add_eos_token = False\nimage = Image.open('./examples/image1.jpg').convert('RGB')\npixel_values = image_processor(images=image, return_tensors='pt').pixel_values\npixel_values = pixel_values.to(torch.bfloat16).cuda()\n\ntokenized = tokenizer(\"English caption:\", return_tensors='pt')\npred = model.generate(\n    pixel_values=pixel_values,\n    input_ids=tokenized.input_ids.cuda(),\n    attention_mask=tokenized.attention_mask.cuda(),\n    num_beams=5,\n    min_new_tokens=8,\n)\ncaption = tokenizer.decode(pred[0].cpu(), skip_special_tokens=True).strip()\n# English caption: a red panda sitting on top of a wooden platform\n```\n\n</details>\n\n<details>\n  <summary>using InternVL 2.5 for multimodal chat (click to expand)</summary>\n\nHere, we take the smaller `OpenGVLab/InternVL2_5-8B` as an example:\n\n```python\nimport numpy as np\nimport torch\nimport torchvision.transforms as T\nfrom decord import VideoReader, cpu\nfrom PIL import Image\nfrom torchvision.transforms.functional import InterpolationMode\nfrom transformers import AutoModel, AutoTokenizer\n\nIMAGENET_MEAN = (0.485, 0.456, 0.406)\nIMAGENET_STD = (0.229, 0.224, 0.225)\n\ndef build_transform(input_size):\n    MEAN, STD = IMAGENET_MEAN, IMAGENET_STD\n    transform = T.Compose([\n        T.Lambda(lambda img: img.convert('RGB') if img.mode != 'RGB' else img),\n        T.Resize((input_size, input_size), interpolation=InterpolationMode.BICUBIC),\n        T.ToTensor(),\n        T.Normalize(mean=MEAN, std=STD)\n    ])\n    return transform\n\ndef find_closest_aspect_ratio(aspect_ratio, target_ratios, width, height, image_size):\n    best_ratio_diff = float('inf')\n    best_ratio = (1, 1)\n    area = width * height\n    for ratio in target_ratios:\n        target_aspect_ratio = ratio[0] / ratio[1]\n        ratio_diff = abs(aspect_ratio - target_aspect_ratio)\n        if ratio_diff < best_ratio_diff:\n            best_ratio_diff = ratio_diff\n            best_ratio = ratio\n        elif ratio_diff == best_ratio_diff:\n            if area > 0.5 * image_size * image_size * ratio[0] * ratio[1]:\n                best_ratio = ratio\n    return best_ratio\n\ndef dynamic_preprocess(image, min_num=1, max_num=12, image_size=448, use_thumbnail=False):\n    orig_width, orig_height = image.size\n    aspect_ratio = orig_width / orig_height\n\n    # calculate the existing image aspect ratio\n    target_ratios = set(\n        (i, j) for n in range(min_num, max_num + 1) for i in range(1, n + 1) for j in range(1, n + 1) if\n        i * j <= max_num and i * j >= min_num)\n    target_ratios = sorted(target_ratios, key=lambda x: x[0] * x[1])\n\n    # find the closest aspect ratio to the target\n    target_aspect_ratio = find_closest_aspect_ratio(\n        aspect_ratio, target_ratios, orig_width, orig_height, image_size)\n\n    # calculate the target width and height\n    target_width = image_size * target_aspect_ratio[0]\n    target_height = image_size * target_aspect_ratio[1]\n    blocks = target_aspect_ratio[0] * target_aspect_ratio[1]\n\n    # resize the image\n    resized_img = image.resize((target_width, target_height))\n    processed_images = []\n    for i in range(blocks):\n        box = (\n            (i % (target_width // image_size)) * image_size,\n            (i // (target_width // image_size)) * image_size,\n            ((i % (target_width // image_size)) + 1) * image_size,\n            ((i // (target_width // image_size)) + 1) * image_size\n        )\n        # split the image\n        split_img = resized_img.crop(box)\n        processed_images.append(split_img)\n    assert len(processed_images) == blocks\n    if use_thumbnail and len(processed_images) != 1:\n        thumbnail_img = image.resize((image_size, image_size))\n        processed_images.append(thumbnail_img)\n    return processed_images\n\ndef load_image(image_file, input_size=448, max_num=12):\n    image = Image.open(image_file).convert('RGB')\n    transform = build_transform(input_size=input_size)\n    images = dynamic_preprocess(image, image_size=input_size, use_thumbnail=True, max_num=max_num)\n    pixel_values = [transform(image) for image in images]\n    pixel_values = torch.stack(pixel_values)\n    return pixel_values\n\n# If you have an 80G A100 GPU, you can put the entire model on a single GPU.\n# Otherwise, you need to load a model using multiple GPUs, please refer to the `Multiple GPUs` section.\npath = 'OpenGVLab/InternVL2_5-8B'\nmodel = AutoModel.from_pretrained(\n    path,\n    torch_dtype=torch.bfloat16,\n    low_cpu_mem_usage=True,\n    trust_remote_code=True).eval().cuda()\ntokenizer = AutoTokenizer.from_pretrained(path, trust_remote_code=True, use_fast=False)\n\n# set the max number of tiles in `max_num`\npixel_values = load_image('./examples/image1.jpg', max_num=12).to(torch.bfloat16).cuda()\ngeneration_config = dict(max_new_tokens=1024, do_sample=False)\n\n# pure-text conversation (Á∫ØÊñáÊú¨ÂØπËØù)\nquestion = 'Hello, who are you?'\nresponse, history = model.chat(tokenizer, None, question, generation_config, history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'Can you tell me a story?'\nresponse, history = model.chat(tokenizer, None, question, generation_config, history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# single-image single-round conversation (ÂçïÂõæÂçïËΩÆÂØπËØù)\nquestion = '<image>\\nPlease describe the image shortly.'\nresponse = model.chat(tokenizer, pixel_values, question, generation_config)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# single-image multi-round conversation (ÂçïÂõæÂ§öËΩÆÂØπËØù)\nquestion = '<image>\\nPlease describe the image in detail.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config, history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'Please write a poem according to the image.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config, history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# multi-image multi-round conversation, combined images (Â§öÂõæÂ§öËΩÆÂØπËØùÔºåÊãºÊé•ÂõæÂÉè)\npixel_values1 = load_image('./examples/image1.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values2 = load_image('./examples/image2.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)\n\nquestion = '<image>\\nDescribe the two images in detail.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'What are the similarities and differences between these two images.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# multi-image multi-round conversation, separate images (Â§öÂõæÂ§öËΩÆÂØπËØùÔºåÁã¨Á´ãÂõæÂÉè)\npixel_values1 = load_image('./examples/image1.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values2 = load_image('./examples/image2.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)\nnum_patches_list = [pixel_values1.size(0), pixel_values2.size(0)]\n\nquestion = 'Image-1: <image>\\nImage-2: <image>\\nDescribe the two images in detail.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               num_patches_list=num_patches_list,\n                               history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'What are the similarities and differences between these two images.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               num_patches_list=num_patches_list,\n                               history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# batch inference, single image per sample (ÂçïÂõæÊâπÂ§ÑÁêÜ)\npixel_values1 = load_image('./examples/image1.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values2 = load_image('./examples/image2.jpg', max_num=12).to(torch.bfloat16).cuda()\nnum_patches_list = [pixel_values1.size(0), pixel_values2.size(0)]\npixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)\n\nquestions = ['<image>\\nDescribe the image in detail.'] * len(num_patches_list)\nresponses = model.batch_chat(tokenizer, pixel_values,\n                             num_patches_list=num_patches_list,\n                             questions=questions,\n                             generation_config=generation_config)\nfor question, response in zip(questions, responses):\n    print(f'User: {question}\\nAssistant: {response}')\n\n# video multi-round conversation (ËßÜÈ¢ëÂ§öËΩÆÂØπËØù)\ndef get_index(bound, fps, max_frame, first_idx=0, num_segments=32):\n    if bound:\n        start, end = bound[0], bound[1]\n    else:\n        start, end = -100000, 100000\n    start_idx = max(first_idx, round(start * fps))\n    end_idx = min(round(end * fps), max_frame)\n    seg_size = float(end_idx - start_idx) / num_segments\n    frame_indices = np.array([\n        int(start_idx + (seg_size / 2) + np.round(seg_size * idx))\n        for idx in range(num_segments)\n    ])\n    return frame_indices\n\ndef load_video(video_path, bound=None, input_size=448, max_num=1, num_segments=32):\n    vr = VideoReader(video_path, ctx=cpu(0), num_threads=1)\n    max_frame = len(vr) - 1\n    fps = float(vr.get_avg_fps())\n\n    pixel_values_list, num_patches_list = [], []\n    transform = build_transform(input_size=input_size)\n    frame_indices = get_index(bound, fps, max_frame, first_idx=0, num_segments=num_segments)\n    for frame_index in frame_indices:\n        img = Image.fromarray(vr[frame_index].asnumpy()).convert('RGB')\n        img = dynamic_preprocess(img, image_size=input_size, use_thumbnail=True, max_num=max_num)\n        pixel_values = [transform(tile) for tile in img]\n        pixel_values = torch.stack(pixel_values)\n        num_patches_list.append(pixel_values.shape[0])\n        pixel_values_list.append(pixel_values)\n    pixel_values = torch.cat(pixel_values_list)\n    return pixel_values, num_patches_list\n\nvideo_path = './examples/red-panda.mp4'\npixel_values, num_patches_list = load_video(video_path, num_segments=8, max_num=1)\npixel_values = pixel_values.to(torch.bfloat16).cuda()\nvideo_prefix = ''.join([f'Frame-{i+1}: <image>\\n' for i in range(len(num_patches_list))])\nquestion = video_prefix + 'What is the red panda doing?'\n# Frame1: <image>\\nFrame2: <image>\\n...\\nFrame8: <image>\\n{question}\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               num_patches_list=num_patches_list, history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'Describe this video in detail.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               num_patches_list=num_patches_list, history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n```\n\n</details>\n\n## License\n\nThis project is released under the [MIT license](LICENSE). Parts of this project contain code and models from other sources, which are subject to their respective licenses.\n\n## Citation\n\nIf you find this project useful in your research, please consider cite:\n\n```BibTeX\n@article{chen2024expanding,\n  title={Expanding Performance Boundaries of Open-Source Multimodal Models with Model, Data, and Test-Time Scaling},\n  author={Chen, Zhe and Wang, Weiyun and Cao, Yue and Liu, Yangzhou and Gao, Zhangwei and Cui, Erfei and Zhu, Jinguo and Ye, Shenglong and Tian, Hao and Liu, Zhaoyang and others},\n  journal={arXiv preprint arXiv:2412.05271},\n  year={2024}\n}\n@article{wang2024mpo,\n  title={Enhancing the Reasoning Ability of Multimodal Large Language Models via Mixed Preference Optimization},\n  author={Wang, Weiyun and Chen, Zhe and Wang, Wenhai and Cao, Yue and Liu, Yangzhou and Gao, Zhangwei and Zhu, Jinguo and Zhu, Xizhou and Lu, Lewei and Qiao, Yu and Dai, Jifeng},\n  journal={arXiv preprint arXiv:2411.10442},\n  year={2024}\n}\n@article{gao2024mini,\n  title={Mini-InternVL: a flexible-transfer pocket multi-modal model with 5\\% parameters and 90\\% performance},\n  author={Gao, Zhangwei and Chen, Zhe and Cui, Erfei and Ren, Yiming and Wang, Weiyun and Zhu, Jinguo and Tian, Hao and Ye, Shenglong and He, Junjun and Zhu, Xizhou and others},\n  journal={Visual Intelligence},\n  volume={2},\n  number={1},\n  pages={1--17},\n  year={2024},\n  publisher={Springer}\n}\n@article{chen2024far,\n  title={How far are we to gpt-4v? closing the gap to commercial multimodal models with open-source suites},\n  author={Chen, Zhe and Wang, Weiyun and Tian, Hao and Ye, Shenglong and Gao, Zhangwei and Cui, Erfei and Tong, Wenwen and Hu, Kongzhi and Luo, Jiapeng and Ma, Zheng and others},\n  journal={Science China Information Sciences},\n  volume={67},\n  number={12},\n  pages={220101},\n  year={2024},\n  publisher={Springer}\n}\n@inproceedings{chen2024internvl,\n  title={Internvl: Scaling up vision foundation models and aligning for generic visual-linguistic tasks},\n  author={Chen, Zhe and Wu, Jiannan and Wang, Wenhai and Su, Weijie and Chen, Guo and Xing, Sen and Zhong, Muyan and Zhang, Qinglong and Zhu, Xizhou and Lu, Lewei and others},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={24185--24198},\n  year={2024}\n}\n```\n\n## Acknowledgement\n\nInternVL is built with reference to the code of the following projects: [OpenAI CLIP](https://github.com/openai/CLIP), [Open CLIP](https://github.com/mlfoundations/open_clip), [CLIP Benchmark](https://github.com/LAION-AI/CLIP_benchmark), [EVA](https://github.com/baaivision/EVA/tree/master), [InternImage](https://github.com/OpenGVLab/InternImage), [ViT-Adapter](https://github.com/czczup/ViT-Adapter), [MMSegmentation](https://github.com/open-mmlab/mmsegmentation), [Transformers](https://github.com/huggingface/transformers), [DINOv2](https://github.com/facebookresearch/dinov2), [BLIP-2](https://github.com/salesforce/LAVIS/tree/main/projects/blip2), [Qwen-VL](https://github.com/QwenLM/Qwen-VL/tree/master/eval_mm), and [LLaVA-1.5](https://github.com/haotian-liu/LLaVA). Thanks for their awesome work!\n\n______________________________________________________________________\n\nScan the following QR Code, join our WeChat group.\n\n<p align=\"center\"><img width=\"300\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f776df09-ebba-4fd5-80c2-fec4ff1518be\"></p>\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 54.8173828125,
          "content": "<div align=\"center\">\n\n# InternVLÂÆ∂ÊóèÔºöÈÄöËøáÂºÄÊ∫êÁªÑ‰ª∂Áº©Â∞è‰∏éÂïÜ‰∏öÂ§öÊ®°ÊÄÅÊ®°ÂûãÁöÑÂ∑ÆË∑ù ‚Äî‚Äî GPT-4oÁöÑÂºÄÊ∫êÊõø‰ª£ÊñπÊ°à\n\n<div align=\"center\">\n  <img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/930e6814-8a9f-43e1-a284-118a5732daa4\">\n  <br>\n</div>\n\n[\\[üÜï ÂçöÂÆ¢\\]](https://internvl.github.io/blog/) [\\[ü§î Â∏∏ËßÅÈóÆÈ¢ò\\]](https://internvl.readthedocs.io/en/latest/tutorials/faqs.html)  [\\[üó®Ô∏è ÂØπËØùDemo\\]](https://internvl.opengvlab.com/)  [\\[ü§ó HF Demo\\]](https://huggingface.co/spaces/OpenGVLab/InternVL)  [\\[üìñ ÊñáÊ°£\\]](https://internvl.readthedocs.io/en/latest/)  [\\[üåê API\\]](https://internvl.readthedocs.io/en/latest/get_started/internvl_chat_api.html)  [\\[üöÄ Âø´ÈÄüÂºÄÂßã\\]](#‰ΩøÁî®-huggingface-Âø´ÈÄüÂºÄÂßã)\n\n[\\[üìú InternVL 2.5 Êä•Âëä\\]](https://huggingface.co/papers/2412.05271) [\\[üî• Mini-InternVL ËÆ∫Êñá\\]](https://arxiv.org/abs/2410.16261)  [\\[üöÄ InternVL2 ÂçöÂÆ¢\\]](https://internvl.github.io/blog/2024-07-02-InternVL-2.0/)   [\\[üìú InternVL 1.5 ËÆ∫Êñá\\]](https://huggingface.co/papers/2404.16821)  [\\[üìú InternVL 1.0 ËÆ∫Êñá\\]](https://huggingface.co/papers/2312.14238)\n\n[\\[üìñ 2.0 ‰∏≠ÊñáËß£ËØª\\]](https://zhuanlan.zhihu.com/p/706547971)  [\\[üìñ 1.5 ‰∏≠ÊñáËß£ËØª\\]](https://zhuanlan.zhihu.com/p/699439759)  [\\[üìñ 1.0 ‰∏≠ÊñáËß£ËØª\\]](https://zhuanlan.zhihu.com/p/702946079)\n\n[Switch to the English version (ÂàáÊç¢Ëá≥Ëã±ÊñáÁâà)](/README.md)\n\n<a href=\"https://trendshift.io/repositories/9803\" target=\"_blank\"><img src=\"https://trendshift.io/api/badge/repositories/9803\" alt=\"OpenGVLab%2FInternVL | Trendshift\" style=\"width: 250px; height: 55px;\" width=\"250\" height=\"55\"/></a>\n<img height=\"55\" alt=\"image\" src=\"https://github.com/user-attachments/assets/bd62ab46-f0ea-40c6-ab10-7fde671716cc\">\n\n![perform](https://github.com/user-attachments/assets/3059622e-e553-40ba-84ed-32d8f92a2f69)\n\n</div>\n\n## ÊúÄÊñ∞Ê∂àÊÅØ üöÄüöÄüöÄ\n\n- `2024/12/20`: üî• Êàë‰ª¨ÂèëÂ∏É‰∫Ü [InternVL2.5-MPOÁ≥ªÂàó](https://internvl.github.io/blog/2024-12-20-InternVL-2.5-MPO/)„ÄÇËØ•Á≥ªÂàóÈÄöËøá [Mixed Preference Optimization](https://huggingface.co/papers/2411.10442) ÁÆóÊ≥ïÂíå [MMPR-v1.1](https://huggingface.co/datasets/OpenGVLab/MMPR-v1.1) Êï∞ÊçÆÈõÜÂæÆË∞ÉÂæóÂà∞„ÄÇ**ËØ•Á≥ªÂàóÊ®°ÂûãÂú®OpenCompassËØÑÊµãÊ¶úÂçï‰∏≠ÁöÑÊï¥‰ΩìÊÄßËÉΩË∂ÖËøáMPOËÆ≠ÁªÉÂâç‰∏§‰∏™ÁôæÂàÜÁÇπ„ÄÇ** Ëøô‰∫õÊ®°ÂûãÂèØÂú® [HF ÈìæÊé•](https://huggingface.co/collections/OpenGVLab/internvl25-mpo-6753fed98cd828219b12f849)‰∏≠‰∏ãËΩΩ.\n- `2024/12/17`: üöÄ PaddleÂõ¢ÈòüÂ∑≤Âú®[PaddleMIX](https://github.com/PaddlePaddle/PaddleMIX)Ê°ÜÊû∂‰∏≠ÈÄÇÈÖç[InternVL2/2.5](https://github.com/PaddlePaddle/PaddleMIX/tree/develop/paddlemix/examples/internvl2).\n- `2024/12/05`: üöÄ Êàë‰ª¨ÂèëÂ∏É‰∫Ü InternVL2.5 Á≥ªÂàóÔºåË¶ÜÁõñ‰∫Ü‰ªé1BÂèÇÊï∞Âà∞78BÂèÇÊï∞ÁöÑÂ§öÊ®°ÊÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã„ÄÇ[InternVL2_5-78B](https://huggingface.co/OpenGVLab/InternVL2_5-78B) ÊòØÈ¶ñ‰∏™Âú®MMMU benchmark‰∏äÂæóÂàÜË∂ÖËøá70ÁöÑÂºÄÊ∫êÊ®°Âûã„ÄÇ Ëøô‰∫õÊ®°ÂûãÂèØÂú® [HF ÈìæÊé•](https://huggingface.co/collections/OpenGVLab/internvl-25-673e1019b66e2218f68d7c1c) ‰∏≠‰∏ãËΩΩ„ÄÇ\n- `2024/11/14`: Êàë‰ª¨ÂèëÂ∏É‰∫Ü [MMPR](https://huggingface.co/datasets/OpenGVLab/MMPR)Ôºå‰∏Ä‰∏™È´òË¥®Èáè„ÄÅÂ§ßËßÑÊ®°ÁöÑÂ§öÊ®°ÊÄÅÊé®ÁêÜÂÅèÂ•ΩÊï∞ÊçÆÈõÜÔºå‰ª•Âèä [MPO](https://github.com/OpenGVLab/InternVL/tree/main/internvl_chat/shell/internvl2.0_mpo)Ôºå‰∏ÄÁßçÈ´òÊïàÁöÑÂÅèÂ•Ω‰ºòÂåñÁÆóÊ≥ï„ÄÇÁî±Ê≠§ËÆ≠ÁªÉÁöÑÊ®°Âûã [InternVL2-8B-MPO](https://huggingface.co/OpenGVLab/InternVL2-8B-MPO) Âú® MathVista ‰∏äÂèñÂæó‰∫Ü 67.0 ÁöÑÂáÜÁ°ÆÁéá„ÄÇÊõ¥Â§öËØ¶ÊÉÖËØ∑ÂèÇÈòÖÊàë‰ª¨ÁöÑ[ËÆ∫Êñá](https://arxiv.org/abs/2411.10442)„ÄÅ[È°πÁõÆ‰∏ªÈ°µ](https://internvl.github.io/blog/2024-11-14-InternVL-2.0-MPO/) Âíå [ÊñáÊ°£](https://internvl.readthedocs.io/en/latest/internvl2.0/preference_optimization.html)„ÄÇ\n- `2024/10/21`: Êàë‰ª¨ÂèëÂ∏É‰∫Ü Mini-InternVL Á≥ªÂàó„ÄÇËøô‰∫õÊ®°ÂûãÂú®‰øùÊåÅÊûÅÂ∞èÊ®°Âûã‰ΩìÁßØÁöÑÂêåÊó∂ÂÆûÁé∞‰∫ÜÂá∫Ëâ≤ÁöÑÊÄßËÉΩÔºö4B Ê®°Âûã‰ªÖÁî® 5% ÁöÑÊ®°ÂûãÂ§ßÂ∞è‰æøËææÂà∞‰∫Ü 90% ÁöÑÊÄßËÉΩ„ÄÇÊúâÂÖ≥Êõ¥Â§öËØ¶ÁªÜ‰ø°ÊÅØÔºåËØ∑Êü•ÁúãÊàë‰ª¨ÁöÑ [È°πÁõÆÈ°µÈù¢](https://github.com/OpenGVLab/InternVL/tree/main/internvl_chat/shell/mini_internvl) Âíå [ÊñáÊ°£](https://internvl.readthedocs.io/en/latest/internvl2.0/domain_adaptation.html)„ÄÇ\n- `2024/08/01`: [Chartmimic](https://chartmimic.github.io/) Âõ¢ÈòüÂú®‰ªñ‰ª¨ÁöÑÂü∫ÂáÜÊµãËØï‰∏≠ËØÑ‰º∞‰∫Ü InternVL2 Á≥ªÂàóÊ®°Âûã„ÄÇInternVL2-26B Âíå 76B Ê®°ÂûãÂú®ÂºÄÊ∫êÊ®°Âûã‰∏≠ÂèñÂæó‰∫ÜÂâç‰∏§ÂêçÁöÑÊàêÁª©ÔºåÂÖ∂‰∏≠ InternVL2-Llama3-76B Ê®°ÂûãË∂ÖËøá‰∫Ü GeminiProVisionÔºåÂπ∂Ë°®Áé∞Âá∫‰∏é Claude-3-opus Áõ∏ÂΩìÁöÑÁªìÊûú„ÄÇ\n- `2024/08/01`: InternVL2-Pro Âú® [CharXiv](https://charxiv.github.io/#leaderboard) Êï∞ÊçÆÈõÜ‰∏≠ÂÆûÁé∞‰∫ÜÂºÄÊ∫êÊ®°Âûã‰∏≠ÁöÑ SOTA ÊÄßËÉΩÔºå‰πüÊØîÈÉ®ÂàÜÁü•ÂêçÈó≠Ê∫êÊ®°ÂûãÂ¶Ç GPT-4V„ÄÅGemini 1.5 Flash„ÄÅClaude 3 Sonnet ÂèñÂæó‰∫ÜÊõ¥Â•ΩÊàêÁª©\n- `2024/07/24`: [MLVU](https://github.com/JUNJIE99/MLVU)Âõ¢ÈòüÂú®ÂÆÉ‰ª¨ÁöÑÂü∫ÂáÜÊµãËØï‰∏≠ËØÑ‰º∞‰∫ÜInternVL-1.5„ÄÇÂú®Â§öÈ°πÈÄâÊã©‰ªªÂä°‰∏äÁöÑÂπ≥ÂùáË°®Áé∞‰∏∫50.4%ÔºåËÄåÂú®ÁîüÊàê‰ªªÂä°‰∏äÁöÑË°®Áé∞‰∏∫4.02„ÄÇÂ§öÈ°πÈÄâÊã©‰ªªÂä°ÁöÑË°®Áé∞Âú®ÊâÄÊúâÂºÄÊ∫êÂ§öÊ®°ÊÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã‰∏≠ÊéíÂêçÁ¨¨‰∏Ä„ÄÇ\n- `2024/07/04`: Êàë‰ª¨ÂèëÂ∏É‰∫Ü InternVL2 Á≥ªÂàóÊ®°Âûã„ÄÇInternVL2-Pro Âú® MMMU Âü∫ÂáÜÊµãËØï‰∏≠ËææÂà∞‰∫Ü 62.0% ÁöÑÂáÜÁ°ÆÁéáÔºåÂÆûÁé∞‰∫Ü‰∏é GPT-4o Á≠âÈ¢ÜÂÖàÈó≠Ê∫êÂïÜ‰∏öÊ®°ÂûãÊØîËÇ©ÁöÑÊÄßËÉΩ„ÄÇËØ•Ê®°ÂûãÁöÑÂÖçË¥π API ÂèØ‰ª•ÈÄöËøáÂ°´ÂÜô ([Ëã±ÊñáÁî≥ËØ∑Ë°®](https://docs.google.com/forms/d/e/1FAIpQLSfMCzhPr1OOEKau_6jwTU0EiZMSFckDo-HMlc_hUudhF_97rw/viewform?usp=sf_link)) / ([‰∏≠ÊñáÁî≥ËØ∑Ë°®](https://wj.qq.com/s2/14910502/25a4/)) Êù•Áî≥ËØ∑„ÄÇÂÖ∂ÂÆÉÊ®°ÂûãÂèØÂú® [HF ÈìæÊé•](https://huggingface.co/collections/OpenGVLab/internvl-20-667d3961ab5eb12c7ed1463e) ‰∏≠‰∏ãËΩΩ„ÄÇ\n\n<details>\n<summary>Êõ¥Â§ö</summary>\n\n- `2024/07/18`: InternVL2-40B Âú® [Video-MME](https://github.com/BradyFU/Video-MME) Êï∞ÊçÆÈõÜ‰∏≠ÂÆûÁé∞‰∫ÜÂºÄÊ∫êÊ®°Âûã‰∏≠ÁöÑ SOTA ÊÄßËÉΩÔºåÂΩìËæìÂÖ• 16 Â∏ßÊó∂ÂæóÂàÜ‰∏∫ 61.2ÔºåËæìÂÖ• 32 Â∏ßÊó∂ÂæóÂàÜ‰∏∫ 64.4ÔºåÂ§ßÂπÖÈ¢ÜÂÖàÂÖ∂ÂÆÉÂºÄÊ∫êÊ®°ÂûãÔºåÊòØÊúÄÊé•Ëøë GPT-4o mini ÁöÑÂºÄÊ∫êÊ®°Âûã„ÄÇ\n- `2024/07/18`: InternVL2-Pro Âú® [DocVQA](https://rrc.cvc.uab.es/?ch=17&com=evaluation&task=1) Âíå [InfoVQA](https://rrc.cvc.uab.es/?ch=17&com=evaluation&task=3) ÁöÑÂü∫ÂáÜÊµãËØï‰∏≠ÂÆûÁé∞‰∫Ü SOTA ÊÄßËÉΩ„ÄÇ\n- `2024/06/19`: Êàë‰ª¨ÊèêÂá∫‰∫Ü Needle In A Multimodal Haystack ([MM-NIAH](https://github.com/OpenGVLab/MM-NIAH))ÔºåËøôÊòØÁ¨¨‰∏Ä‰∏™ÈíàÂØπÊ®°ÂûãÂÖ≥‰∫éÈïøÂ§öÊ®°ÊÄÅÊñáÊ°£ÁêÜËß£ËÉΩÂäõÁöÑËØÑÊµãÂü∫ÂáÜ„ÄÇ\n- `2024/05/30`: Êàë‰ª¨ÂèëÂ∏É‰∫Ü [ShareGPT-4o](https://sharegpt4o.github.io/)ÔºåËøôÊòØ‰∏Ä‰∏™Â§ßËßÑÊ®°„ÄÅÈ´òË¥®ÈáèÁöÑÂ§öÊ®°ÊÄÅÊï∞ÊçÆÈõÜ„ÄÇÊàë‰ª¨ËÆ°ÂàíÂºÄÊ∫ê‰∏ÄÊâπ‰ΩøÁî® GPT-4o Á≤æÂøÉÊ†áÊ≥®ÁöÑÊï∞ÊçÆÔºåÂåÖÊã¨ 200K Êù°ÂõæÂÉèËØ¶ÁªÜÊèèËø∞„ÄÅ10K Êù°ËßÜÈ¢ëËØ¶ÁªÜÊèèËø∞Ôºå‰ª•Âèä 10K Êù°Èü≥È¢ëËØ¶ÁªÜÊèèËø∞„ÄÇ\n- `2024/05/29`: Êàë‰ª¨ÂºÄÊ∫ê‰∫Ü Mini-InternVL Á≥ªÂàóÔºåÂåÖÊã¨‰ª•‰∏ã‰∏§‰∏™ÂØπËØùÊ®°ÂûãÔºö[Mini-InternVL-Chat-2B-V1-5](https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-2B-V1-5) Âíå [Mini-InternVL-Chat-4B-V1-5](https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-4B-V1-5)„ÄÇËøô‰∫õÊ®°ÂûãÂú®ÊûÅÂ∞èÁöÑÂ∞∫ÂØ∏‰∏ãÂÆûÁé∞‰∫Ü‰ª§‰∫∫Âç∞Ë±°Ê∑±ÂàªÁöÑÊÄßËÉΩÔºö2B Ê®°Âûã‰ª• 8% ÁöÑÊ®°ÂûãÂ∞∫ÂØ∏ÂÆûÁé∞‰∫Ü 80% ÁöÑÊÄßËÉΩÔºå4B Ê®°Âûã‰ª• 16% ÁöÑÊ®°ÂûãÂ∞∫ÂØ∏ÂÆûÁé∞‰∫Ü 90% ÁöÑÊÄßËÉΩ„ÄÇÊõ¥Â§öÁªÜËäÇËØ∑Êü•ÁúãÊàë‰ª¨ÁöÑ[ÂçöÂÆ¢](https://internvl.github.io/blog/2024-05-25-Mini-InternVL-1.5/)„ÄÇ\n- `2024/05/13`: InternVL 1.0 Áé∞Âú®ÂèØ‰ª•‰Ωú‰∏∫Êâ©Êï£Ê®°ÂûãÁöÑ [ÊñáÊú¨ÁºñÁ†ÅÂô®](https://huggingface.co/OpenGVLab/InternVL-14B-224px)ÔºåÊîØÊåÅÂÖ®ÁêÉË∂ÖËøá 110 ÁßçËØ≠Ë®ÄÁöÑÂ§öËØ≠Ë®ÄÁîüÊàê„ÄÇËØ¶ÊÉÖËØ∑Áúã [MuLan](https://github.com/mulanai/MuLan)„ÄÇ\n- `2024/04/18`: InternVL-Chat-V1-5 Â∑≤ÁªèÂú® [HuggingFace](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5) ÂèëÂ∏ÉÔºåÂú® MMMU„ÄÅDocVQA„ÄÅChartQA„ÄÅMathVista Á≠âÂêÑÁßçÂü∫ÂáÜÊµãËØï‰∏≠ÔºåÊÄßËÉΩÊé•Ëøë GPT-4V Âíå Gemini Pro„ÄÇ\n- `2024/02/27`: InternVL Â∑≤Ë¢´ CVPR 2024 (Oral) Êé•Êî∂ÔºÅüéâ\n- `2024/02/21`: [InternVL-Chat-V1-2-Plus](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2-Plus) Âú® MathVistaÔºà59.9Ôºâ„ÄÅMMBenchÔºà83.8ÔºâÂíå MMVPÔºà58.7Ôºâ‰∏äÂÆûÁé∞‰∫Ü SOTA ÊÄßËÉΩ„ÄÇËØ¶ÊÉÖËØ∑ÁúãÊàë‰ª¨ÁöÑ[ÂçöÂÆ¢](https://internvl.github.io/blog/2024-02-21-InternVL-1.2/)„ÄÇ\n- `2024/02/12`: InternVL-Chat-V1-2 Â∑≤ÁªèÂèëÂ∏ÉÔºåÂÆÉÂú® MMMU È™åËØÅÈõÜ‰∏äËææÂà∞‰∫Ü 51.6ÔºåÂú® MMBench ÊµãËØïÈõÜ‰∏äËææÂà∞‰∫Ü 82.3„ÄÇ Êõ¥Â§ö‰ø°ÊÅØËØ∑ÂèÇËÄÉÊàë‰ª¨ÁöÑ[ÂçöÂÆ¢](https://internvl.github.io/blog/2024-02-21-InternVL-1.2/)‰ª•Âèä [SFT Êï∞ÊçÆ](./internvl_chat#prepare-training-datasets)„ÄÇËØ•Ê®°ÂûãÂ∑≤ÁªèÂú® [HuggingFace](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2) ÂèëÂ∏ÉÔºåËÆ≠ÁªÉ„ÄÅÊµãËØÑÁöÑÊï∞ÊçÆÂíåËÑöÊú¨ÂùáÂ∑≤ÂºÄÊ∫ê„ÄÇ\n- `2024/01/24`: InternVL-Chat-V1-1 Â∑≤ÁªèÂèëÂ∏ÉÔºåÂÆÉÊîØÊåÅ‰∏≠ÊñáÂØπËØùÔºåÂπ∂ÂÖ∑Â§áÂº∫Â§ßÁöÑ OCR ËÉΩÂäõÔºåËØ¶ÊÉÖËØ∑Áúã[ËøôÈáå](https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1)„ÄÇ\n- `2024/01/16`: Êàë‰ª¨ÂèëÂ∏É‰∫Ü [ÂÆöÂà∂ÁöÑ mmcv/mmsegmentation/mmdetection ‰ª£Á†ÅÂ∫ì](https://github.com/OpenGVLab/InternVL-MMDetSeg)ÔºåÈõÜÊàê‰∫Ü DeepSpeedÔºåÂèØ‰ª•Áî®‰∫éËÆ≠ÁªÉÊ£ÄÊµãÂíåÂàÜÂâ≤Â§ßÊ®°Âûã„ÄÇ\n\n</details>\n\n## ‰ΩøÁî®ÊñáÊ°£\n\n### üåü **Get Started**\n\n- **Installation**: üå± [Installation Guide](https://internvl.readthedocs.io/en/latest/get_started/installation.html) | üìÑ [requirements.txt](./requirements.txt)\n- **Chat Data Format**: üìù [Meta File](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#meta-file) | ‚úèÔ∏è [Text](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#pure-text-data) | üñºÔ∏è [Single-Image](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#single-image-data) | üñºÔ∏èüñºÔ∏è [Multi-Image](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#multi-image-data) | üé• [Video](https://internvl.readthedocs.io/en/latest/get_started/chat_data_format.html#video-data)\n- **Local Chat Demo**: ü§ñ [Streamlit Demo](https://internvl.readthedocs.io/en/latest/get_started/local_chat_demo.html#streamlit-demo)\n- **InternVL-Chat API**: üåê [InternVL2-Pro](https://internvl.readthedocs.io/en/latest/get_started/internvl_chat_api.html#official-api-of-internvl2-pro)\n- **Tutorials**: üöÄ [Enhancing InternVL2 on COCO Caption Using LoRA Fine-Tuning](https://internvl.readthedocs.io/en/latest/tutorials/coco_caption_finetune.html)\n\n### üèÜ **InternVL Family**\n\n- **InternVL 2.5**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl2.5/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl2.5/quick_start.html) | ‚ú® [Finetune](https://internvl.readthedocs.io/en/latest/internvl2.5/finetune.html) | üìä [Evaluate](https://internvl.readthedocs.io/en/latest/internvl2.5/evaluation.html) | üì¶ [Deploy](https://internvl.readthedocs.io/en/latest/internvl2.5/deployment.html) | üéØ [MPO](https://internvl.readthedocs.io/en/latest/internvl2.5/preference_optimization.html)\n- **InternVL 2.0**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl2.0/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl2.0/quick_start.html) | ‚ú® [Finetune](https://internvl.readthedocs.io/en/latest/internvl2.0/finetune.html) | üìä [Evaluate](https://internvl.readthedocs.io/en/latest/internvl2.0/evaluation.html) | üì¶ [Deploy](https://internvl.readthedocs.io/en/latest/internvl2.0/deployment.html) | üéØ [MPO](https://internvl.readthedocs.io/en/latest/internvl2.0/preference_optimization.html)\n- **InternVL 1.5**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl1.5/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl1.5/quick_start.html) | ‚ú® [Finetune](https://internvl.readthedocs.io/en/latest/internvl1.5/finetune.html) | üìä [Evaluate](https://internvl.readthedocs.io/en/latest/internvl1.5/evaluation.html) | üì¶ [Deploy](https://internvl.readthedocs.io/en/latest/internvl1.5/deployment.html)\n- **InternVL 1.2**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl1.2/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl1.2/quick_start.html) | ‚ú® [Finetune](https://internvl.readthedocs.io/en/latest/internvl1.2/finetune.html) | üìä [Evaluate](https://internvl.readthedocs.io/en/latest/internvl1.2/evaluation.html)\n- **InternVL 1.1**: üìñ [Intro](https://internvl.readthedocs.io/en/latest/internvl1.1/introduction.html) | ‚ö° [Quick Start](https://internvl.readthedocs.io/en/latest/internvl1.1/quick_start.html) | üìä [Evaluation](https://internvl.readthedocs.io/en/latest/internvl1.1/evaluation.html)\n- **InternVL 1.0**: üñºÔ∏è [Classification](https://internvl.readthedocs.io/en/latest/internvl1.0/classification.html) | üìä [CLIP-Benchmark](https://internvl.readthedocs.io/en/latest/internvl1.0/clip_benchmark.html) | üé® [Segmentation](https://internvl.readthedocs.io/en/latest/internvl1.0/segmentation.html) | üí¨ [Chat-LLaVA](https://internvl.readthedocs.io/en/latest/internvl1.0/internvl_chat_llava.html) | ‚ú® [InternVL-G](https://internvl.readthedocs.io/en/latest/internvl1.0/internvl_g.html)\n\n## Ê®°ÂûãÂ∫ì\n\n#### Â§öÊ®°ÊÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã (InternVL 2.5)\n\n<table>\n  <tr>\n    <th>Model Name</th>\n    <th>Vision Part</th>\n    <th>Language Part</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n  </tr>\n  <tr>\n    <td>InternVL2_5-1B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT&#8209;300M&#8209;448px&#8209;V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-0.5B-Instruct\">Qwen2.5&#8209;0.5B&#8209;Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-1B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-1B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-2B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-1_8b-chat\">internlm2_5-1_8b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-2B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-2B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-4B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-3B-Instruct\">Qwen2.5-3B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-4B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-4B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-8B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-7b-chat\">internlm2_5-7b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-8B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-8B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-26B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-20b-chat\">internlm2_5-20b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-26B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-26B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-38B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-32B-Instruct\">Qwen2.5-32B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-38B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-38B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-78B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-72B-Instruct\">Qwen2.5-72B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-78B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-78B\">ü§ñ link</a></td>\n  </tr>\n</table>\n\n<table>\n  <tr>\n    <th>Model Name</th>\n    <th>Vision Part</th>\n    <th>Language Part</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n  </tr>\n  <tr>\n    <td>InternVL2_5-1B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT&#8209;300M&#8209;448px&#8209;V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-0.5B-Instruct\">Qwen2.5&#8209;0.5B&#8209;Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-1B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-1B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-2B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-1_8b-chat\">internlm2_5-1_8b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-2B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-2B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-4B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-3B-Instruct\">Qwen2.5-3B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-4B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-4B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-8B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">InternViT-300M-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-7b-chat\">internlm2_5-7b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-8B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-8B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-26B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-20b-chat\">internlm2_5-20b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-26B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-26B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-38B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-32B-Instruct\">Qwen2.5-32B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-38B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-38B-MPO\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2_5-78B-MPO</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">InternViT-6B-448px-V2_5</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2.5-72B-Instruct\">Qwen2.5-72B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2_5-78B-MPO\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2_5-78B-MPO\">ü§ñ link</a></td>\n  </tr>\n</table>\n\n#### Â§öÊ®°ÊÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã (InternVL 2.0)\n\n<table>\n  <tr>\n    <th>Model Name</th>\n    <th>Vision Part</th>\n    <th>Language Part</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n  </tr>\n  <tr>\n    <td>InternVL2-1B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">InternViT-300M-448px</a></td>\n    <td><a href=\"https://huggingface.co/Qwen/Qwen2-0.5B-Instruct\">Qwen2-0.5B-Instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-1B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-1B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-2B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">InternViT-300M-448px</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2-chat-1_8b\">internlm2-chat-1-8b</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-2B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-2B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-4B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">InternViT-300M-448px</a></td>\n    <td><a href=\"https://huggingface.co/microsoft/Phi-3-mini-128k-instruct\">Phi&#8209;3&#8209;mini&#8209;128k&#8209;instruct</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-4B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-4B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-8B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">InternViT-300M-448px</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2_5-7b-chat\">internlm2_5-7b-chat</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-8B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-8B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-26B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5\">InternViT-6B-448px-V1-5</a></td>\n    <td><a href=\"https://huggingface.co/internlm/internlm2-chat-20b\">internlm2-chat-20b</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-26B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-26B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2-40B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5\">InternViT&#8209;6B&#8209;448px&#8209;V1&#8209;5</a></td>\n    <td><a href=\"https://huggingface.co/NousResearch/Nous-Hermes-2-Yi-34B\">Nous&#8209;Hermes&#8209;2&#8209;Yi&#8209;34B</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-40B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-40B\">ü§ñ link</a></td>\n  </tr>\n  <tr>\n    <td>InternVL2&#8209;Llama3-76B</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5\">InternViT-6B-448px-V1-5</a></td>\n    <td><a href=\"https://huggingface.co/NousResearch/Hermes-2-Theta-Llama-3-70B\">Hermes‚Äë2‚ÄëTheta‚Äë<br>Llama‚Äë3‚Äë70B</a></td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL2-Llama3-76B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL2-Llama3-76B\">ü§ñ link</a></td>\n  </tr>\n</table>\n\n#### Â§öÊ®°ÊÄÅÂ§ßËØ≠Ë®ÄÊ®°Âûã (InternVL 1.0-1.5)\n\n<table>\n  <tr>\n    <th>Model</th>\n    <th>Date</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n    <th>Note</th>\n  </tr>\n  <tr>\n    <td>Mini&#8209;InternVL&#8209;Chat&#8209;4B&#8209;V1&#8209;5</td>\n    <td>2024.05.28</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-4B-V1-5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/Mini-InternVL-Chat-4B-V1-5\">ü§ñ link</a></td>\n    <td>üöÄüöÄ 16% ÁöÑÊ®°ÂûãÂ§ßÂ∞è, 90% ÁöÑÊÄßËÉΩ</td>\n  </tr>\n  <tr>\n    <td>Mini-InternVL-Chat-2B-V1-5</td>\n    <td>2024.05.19</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/Mini-InternVL-Chat-2B-V1-5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/Mini-InternVL-Chat-2B-V1-5\">ü§ñ link</a></td>\n    <td>üöÄ 8% ÁöÑÊ®°ÂûãÂ§ßÂ∞è, 80% ÁöÑÊÄßËÉΩ</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-V1-5</td>\n    <td>2024.04.18</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-V1-5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-V1-5\">ü§ñ link</a></td>\n    <td>ÊîØÊåÅ 4K ÂõæÂÉèÔºõË∂ÖÂº∫ÁöÑ OCR ËÉΩÂäõÔºõÂú® MMMU„ÄÅDocVQA„ÄÅChartQA„ÄÅMathVista Á≠âÂêÑÁßçÂü∫ÂáÜÊµãËØï‰∏≠ÔºåÊÄßËÉΩÊé•Ëøë GPT-4V Âíå Gemini Pro\n  </tr>\n  <tr>\n    <td>InternVL-Chat-V1-2-Plus</td>\n    <td>2024.02.21</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2-Plus\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-V1-2-Plus\">ü§ñ link</a></td>\n    <td>Êõ¥Â§öÁöÑ SFT Êï∞ÊçÆÂíåÊõ¥Âº∫ÁöÑÊÄßËÉΩ</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-V1-2</td>\n    <td>2024.02.11</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-V1-2\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-V1-2\">ü§ñ link</a></td>\n    <td>Â∞Ü LLM Êâ©Â±ïÂà∞ 34B</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-V1-1</td>\n    <td>2024.01.24</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-V1-1\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-V1-1\">ü§ñ link</a></td>\n    <td>ÊîØÊåÅ‰∏≠ÊñáÂíåÊõ¥Âº∫ÁöÑ OCR ËÉΩÂäõ</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-19B</td>\n    <td>2023.12.25</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-13B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-13B\">ü§ñ link</a></td>\n    <td>Ëã±ËØ≠Â§öÊ®°ÊÄÅÂØπËØù</td>\n  </tr>\n  <tr>\n    <td>InternVL-Chat-13B</td>\n    <td>2023.12.25</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-7B\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-Chat-ViT-6B-Vicuna-7B\">ü§ñ link</a></td>\n    <td>Ëã±ËØ≠Â§öÊ®°ÊÄÅÂØπËØù</td>\n  </tr>\n</table>\n\n#### Á±ª CLIP Ê®°Âûã (InternVL 1.0-2.5)\n\n<table>\n  <tr>\n    <th>Model</th>\n    <th>Date</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n    <th>Note</th>\n  </tr>\n  <tr>\n    <td>InternViT-300M-448px-V2_5</td>\n    <td>2024.12.05</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px-V2_5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-300M-448px-V2_5\">ü§ñ link</a></td>\n    <td>üöÄüöÄ ‰∏Ä‰∏™Êõ¥Âº∫ÁöÑËΩªÈáèËßÜËßâÁºñÁ†ÅÂô® (üî•Êñ∞)</td>\n  </tr>\n  <tr>\n    <td>InternViT-6B-448px-V2_5</td>\n    <td>2024.12.05</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V2_5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-448px-V2_5\">ü§ñ link</a></td>\n    <td>üöÄüöÄ Êã•ÊúâÊõ¥Âº∫ÁöÑËßÜËßâÁâπÂæÅÊèêÂèñËÉΩÂäõ (üî•Êñ∞)</td>\n  </tr>\n  <tr>\n    <td>InternViT-300M-448px</td>\n    <td>2024.05.25</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-300M-448px\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-300M-448px\">ü§ñ link</a></td>\n    <td>Ëí∏È¶èÁöÑÂ∞èÂûãËßÜËßâÂü∫Á°ÄÊ®°ÂûãÔºåÂÖ∑Êúâ 300M ÂèÇÊï∞</td>\n  </tr>\n  <tr>\n    <td>InternViT&#8209;6B&#8209;448px&#8209;V1&#8209;5</td>\n    <td>2024.04.20</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-5\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-448px-V1-5\">ü§ñ link</a></td>\n    <td>ÈÄöËøáÂ¢ûÈáèÈ¢ÑËÆ≠ÁªÉÊîØÊåÅÂä®ÊÄÅÂàÜËæ®ÁéáÂíåË∂ÖÂº∫ÁöÑ OCR ÁâπÂæÅÊèêÂèñËÉΩÂäõ</td>\n  </tr>\n  <tr>\n    <td>InternViT-6B-448px-V1-2</td>\n    <td>2024.02.11</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-2\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-448px-V1-2\">ü§ñ link</a></td>\n    <td>ÈÄöËøáÂ¢ûÈáèÈ¢ÑËÆ≠ÁªÉÊîØÊåÅ 448 ÂàÜËæ®Áéá</td>\n  </tr>\n  <tr>\n    <td>InternViT-6B-448px-V1-0</td>\n    <td>2024.01.30</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-448px-V1-0\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-448px-V1-0\">ü§ñ link</a></td>\n    <td>ÈÄöËøáÂ¢ûÈáèÈ¢ÑËÆ≠ÁªÉÊîØÊåÅ 448 ÂàÜËæ®Áéá</td>\n  </tr>\n  <tr>\n    <td>InternViT-6B-224px</td>\n    <td>2023.12.22</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternViT-6B-224px\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternViT-6B-224px\">ü§ñ link</a></td>\n    <td>InternViT-6B ÁöÑÁ¨¨‰∏Ä‰∏™ÁâàÊú¨ÔºåÊèêÂèñËá™ InternVL‚Äë14B‚Äë224px</td>\n  </tr>\n</table>\n\n#### ËßÜËßâËØ≠Ë®ÄÂü∫Á°ÄÊ®°Âûã (InternVL 1.0)\n\n<table>\n  <tr>\n    <th>Model</th>\n    <th>Date</th>\n    <th>HF&nbsp;Link</th>\n    <th>MS&nbsp;Link</th>\n    <th>Note</th>\n  </tr>\n  <tr>\n    <td>InternVL&#8209;14B&#8209;224px</td>\n    <td>2023.12.22</td>\n    <td><a href=\"https://huggingface.co/OpenGVLab/InternVL-14B-224px\">ü§ó link</a></td>\n    <td><a href=\"https://modelscope.cn/models/OpenGVLab/InternVL-14B-224px\">ü§ñ link</a></td>\n    <td>ËßÜËßâ-ËØ≠Ë®ÄÂü∫Á°ÄÊ®°ÂûãÔºåInternViT-6B + QLLaMAÔºåÂèØ‰ª•Áî®‰∫éÁ±ª‰ºº CLIP ÁöÑÂõæÊñáÊ£ÄÁ¥¢</td>\n  </tr>\n</table>\n\n## TODO ÂàóË°®\n\n- [x] ÂèëÂ∏É InternVL2.5 Á≥ªÂàóÁöÑËÆ≠ÁªÉ / ËØÑ‰º∞‰ª£Á†Å\n- [x] ÊîØÊåÅ liger kernels ‰ª•ËäÇÁúÅÊòæÂ≠ò\n- [x] ÂèëÂ∏É MPO ÁöÑ‰ª£Á†Å„ÄÅÊ®°ÂûãÂíåÊï∞ÊçÆ\n- [x] ÊîØÊåÅÂ§öÊ®°ÊÄÅ packed dataset\n- [ ] ÊîØÊåÅ vLLM Âíå Ollama\n- [ ] Âú® Demo ‰∏≠ÊîØÊåÅËßÜÈ¢ëÂíå PDF ËæìÂÖ•\n- [ ] ÂèëÂ∏ÉÈõÜÊàê VisionLLMv2 ÁöÑ InternVL2\n- [x] ‰ΩøÁî® readthedocs ÈáçÊñ∞ÊûÑÂª∫ÊñáÊ°£\n- [x] ÊîØÊåÅ‰ΩøÁî® LoRA ÂæÆË∞É‰∏çÂêåÁöÑ LLMs\n- [x] ÂèëÂ∏É InternVL2 ÁöÑ `requirements.txt`\n- [x] ÂèëÂ∏É InternVL2 Á≥ªÂàóÁöÑËÆ≠ÁªÉ / ËØÑ‰º∞‰ª£Á†Å\n- [x] ÂèëÂ∏É InternVL1.5 Âíå InternVL2 ÁöÑ Streamlit ÁΩëÈ°µ UI\n\n## InternVL ÂèØ‰ª•ÂÅö‰ªÄ‰πà?\n\n<details>\n  <summary>ËßÜËßâÊÑüÁü• (ÁÇπÂáªÂ±ïÂºÄ)</summary>\n\n- Á∫øÊÄßÊé¢ÈíàÂõæÂÉèÂàÜÁ±ª [\\[Êü•ÁúãËØ¶ÊÉÖ\\]](./classification#-evaluation)\n\n  ViT-22B uses the private JFT-3B dataset.\n\n  | method              | #param | IN-1K | IN-ReaL | IN-V2 | IN-A | IN-R | IN-Sketch |\n  | ------------------- | :----: | :---: | :-----: | :---: | :--: | :--: | :-------: |\n  | OpenCLIP-G          |  1.8B  | 86.2  |  89.4   | 77.2  | 63.8 | 87.8 |   66.4    |\n  | DINOv2-g            |  1.1B  | 86.5  |  89.6   | 78.4  | 75.9 | 78.8 |   62.5    |\n  | EVA-01-CLIP-g       |  1.1B  | 86.5  |  89.3   | 77.4  | 70.5 | 87.7 |   63.1    |\n  | MAWS-ViT-6.5B       |  6.5B  | 87.8  |    -    |   -   |  -   |  -   |     -     |\n  | ViT-22B\\*           | 21.7B  | 89.5  |  90.9   | 83.2  | 83.8 | 87.4 |     -     |\n  | InternViT-6B (ours) |  5.9B  | 88.2  |  90.4   | 79.9  | 77.5 | 89.8 |   69.1    |\n\n- ËØ≠‰πâÂàÜÂâ≤ [\\[Êü•ÁúãËØ¶ÊÉÖ\\]](./segmentation#-evaluation)\n\n  | method                | decoder | #param (train/total) | crop size | mIoU         |\n  | --------------------- | :-----: | :------------------: | :-------: | ------------ |\n  | OpenCLIP-G (frozen)   | Linear  |     0.3M / 1.8B      |    512    | 39.3         |\n  | ViT-22B (frozen)      | Linear  |     0.9M / 21.7B     |    504    | 34.6         |\n  | InternViT-6B (frozen) | Linear  |     0.5M / 5.9B      |    504    | 47.2 (+12.6) |\n  | ViT-22B (frozen)      | UperNet |     0.8B / 22.5B     |    504    | 52.7         |\n  | InternViT-6B (frozen) | UperNet |     0.4B / 6.3B      |    504    | 54.9 (+2.2)  |\n  | ViT-22B               | UperNet |    22.5B / 22.5B     |    504    | 55.3         |\n  | InternViT-6B          | UperNet |     6.3B / 6.3B      |    504    | 58.9 (+3.6)  |\n\n- Èõ∂Ê†∑Êú¨ÂõæÂÉèÂàÜÁ±ª [\\[Êü•ÁúãËØ¶ÊÉÖ\\]](./clip_benchmark#imagenet-variants-and-objectnet)\n\n  | method            | IN-1K | IN-A | IN-R | IN-V2 | IN-Sketch | ObjectNet |\n  | ----------------- | :---: | :--: | :--: | :---: | :-------: | :-------: |\n  | OpenCLIP-G        | 80.1  | 69.3 | 92.1 | 73.6  |   68.9    |   73.0    |\n  | EVA-02-CLIP-E+    | 82.0  | 82.1 | 94.5 | 75.7  |   71.6    |   79.6    |\n  | ViT-22B\\*         | 85.9  | 90.1 | 96.0 | 80.9  |     -     |   87.6    |\n  | InternVL-C (ours) | 83.2  | 83.8 | 95.5 | 77.3  |   73.9    |   80.6    |\n\n- Â§öËØ≠Ë®ÄÈõ∂Ê†∑Êú¨ÂõæÂÉèÂàÜÁ±ª [\\[Êü•ÁúãËØ¶ÊÉÖ\\]](./clip_benchmark#multilingual-imagenet-1k)\n\n  EN: English, ZH: Chinese, JP: Japanese, Ar: Arabic, IT: Italian\n\n  | method            | IN-1K (EN) | IN-1K (ZH) | IN-1K (JP) | IN-1K (AR) | IN-1K (IT) |\n  | ----------------- | :--------: | :--------: | :--------: | :--------: | :--------: |\n  | Taiyi-CLIP-ViT-H  |     -      |    54.4    |     -      |     -      |     -      |\n  | WuKong-ViT-L-G    |     -      |    57.5    |     -      |     -      |     -      |\n  | CN-CLIP-ViT-H     |     -      |    59.6    |     -      |     -      |     -      |\n  | AltCLIP-ViT-L     |    74.5    |    59.6    |     -      |     -      |     -      |\n  | EVA-02-CLIP-E+    |    82.0    |     -      |     -      |     -      |    41.2    |\n  | OpenCLIP-XLM-R-H  |    77.0    |    55.7    |    53.1    |    37.0    |    56.8    |\n  | InternVL-C (ours) |    83.2    |    64.5    |    61.5    |    44.9    |    65.7    |\n\n- Èõ∂Ê†∑Êú¨ËßÜÈ¢ëÂàÜÁ±ª\n\n  | method            | #frame | K400 | K600 | K700 |\n  | ----------------- | :----: | :--: | :--: | :--: |\n  | OpenCLIP-G        |   1    | 65.9 | 66.1 | 59.2 |\n  | EVA-02-CLIP-E+    |   1    | 69.8 | 69.3 | 63.4 |\n  | InternVL-C (ours) |   1    | 71.0 | 71.3 | 65.7 |\n  | ViCLIP            |   8    | 75.7 | 73.5 | 66.4 |\n  | InternVL-C (ours) |   8    | 79.4 | 78.8 | 71.5 |\n\n</details>\n\n<details>\n  <summary>Ë∑®Ê®°ÊÄÅÊ£ÄÁ¥¢ (ÁÇπÂáªÂ±ïÂºÄ)</summary>\n\n- Ëã±ËØ≠Èõ∂Ê†∑Êú¨ÂõæÊñáÊ£ÄÁ¥¢ [\\[Êü•ÁúãËØ¶ÊÉÖ\\]](./clip_benchmark#flickr30k--coco)\n\n  <table>\n    <tr align=center>\n        <td rowspan=\"3\" align=left><b>model</b></td>\n        <td colspan=\"6\" align=center><b>Flickr30K</b></td>\n        <td colspan=\"6\" align=center><b>COCO</b></td>\n        <td rowspan=\"3\" align=center><b>avg</b></td>\n    </tr>\n     <tr align=center>\n        <td colspan=\"3\" align=center><b>image-to-text</b></td>\n        <td colspan=\"3\" align=center><b>text-to-image</b></td>\n         <td colspan=\"3\" align=center><b>image-to-text</b></td>\n        <td colspan=\"3\" align=center><b>text-to-image</b></td>\n     </tr>\n     <tr>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n     </tr>\n  <tr align=center>\n        <td align=left>OpenCLIP-G</td>\n        <td>92.9</td>\n        <td>99.3</td>\n        <td>99.8</td>\n        <td>79.5</td>\n        <td>95.0</td>\n        <td>97.1</td>\n        <td>67.3</td>\n        <td>86.9</td>\n        <td>92.6</td>\n        <td>51.4</td>\n        <td>74.9</td>\n        <td>83.0</td>\n        <td>85.0</td>\n     </tr>\n  <tr align=center>\n        <td align=left>EVA-02-CLIP-E+</td>\n        <td>93.9</td>\n        <td>99.4</td>\n        <td>99.8</td>\n        <td>78.8</td>\n        <td>94.2</td>\n        <td>96.8</td>\n        <td>68.8</td>\n        <td>87.8</td>\n        <td>92.8</td>\n        <td>51.1</td>\n        <td>75.0</td>\n        <td>82.7</td>\n        <td>85.1</td>\n     </tr>\n    <tr align=center>\n        <td align=left>EVA-CLIP-8B</td>\n        <td>95.6</td>\n        <td>99.6</td>\n        <td>99.9</td>\n        <td>80.8</td>\n        <td>95.5</td>\n        <td>97.6</td>\n        <td>70.3</td>\n        <td>89.3</td>\n        <td>93.9</td>\n        <td>53.0</td>\n        <td>76.0</td>\n        <td>83.4</td>\n        <td>86.2</td>\n     </tr>\n  <tr align=center>\n        <td align=left>InternVL-C (ours)</td>\n        <td>94.7</td>\n        <td>99.6</td>\n        <td>99.9</td>\n        <td>81.7</td>\n        <td>96.0</td>\n        <td>98.2</td>\n        <td>70.6</td>\n        <td>89.0</td>\n        <td>93.5</td>\n        <td>54.1</td>\n        <td>77.3</td>\n        <td>84.6</td>\n        <td>86.6</td>\n     </tr>\n  <tr align=center>\n        <td align=left>InternVL-G (ours)</td>\n        <td>95.7</td>\n        <td>99.7</td>\n        <td>99.9</td>\n        <td>85.0</td>\n        <td>97.0</td>\n        <td>98.6</td>\n        <td>74.9</td>\n        <td>91.3</td>\n        <td>95.2</td>\n        <td>58.6</td>\n        <td>81.3</td>\n        <td>88.0</td>\n        <td>88.8</td>\n     </tr>\n\n  </table>\n\n- ‰∏≠ÊñáÈõ∂Ê†∑Êú¨ÂõæÊñáÊ£ÄÁ¥¢ [\\[Êü•ÁúãËØ¶ÊÉÖ\\]](./clip_benchmark#flickr30k-cn--coco-cn)\n\n  <table>\n    <tr  align=center>\n        <td rowspan=\"3\" align=left><b>model</b></td>\n        <td colspan=\"6\" align=center><b>Flickr30K-CN</b></td>\n        <td colspan=\"6\" align=center><b>COCO-CN</b></td>\n        <td rowspan=\"3\" align=center><b>avg</b></td>\n\n  </tr>\n     <tr  align=center>\n        <td colspan=\"3\" align=center><b>image-to-text</b></td>\n        <td colspan=\"3\" align=center><b>text-to-image</b></td>\n         <td colspan=\"3\" align=center><b>image-to-text</b></td>\n        <td colspan=\"3\" align=center><b>text-to-image</b></td>\n     </tr>\n     <tr>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n        <td>R@1</td>\n        <td>R@5</td>\n        <td>R@10</td>\n     </tr>\n\n  <tr align=center>\n        <td align=left>CN-CLIP-ViT-H</td>\n        <td>81.6</td>\n        <td>97.5</td>\n        <td>98.8</td>\n        <td>71.2</td>\n        <td>91.4</td>\n        <td>95.5</td>\n        <td>63.0</td>\n        <td>86.6</td>\n        <td>92.9</td>\n        <td>69.2</td>\n        <td>89.9</td>\n        <td>96.1</td>\n        <td>86.1</td>\n     </tr>\n\n  <tr align=center>\n        <td align=left>OpenCLIP-XLM-R-H</td>\n        <td>86.1</td>\n        <td>97.5</td>\n        <td>99.2</td>\n        <td>71.0</td>\n        <td>90.5</td>\n        <td>94.9</td>\n        <td>70.0</td>\n        <td>91.5</td>\n        <td>97.0</td>\n        <td>66.1</td>\n        <td>90.8</td>\n        <td>96.0</td>\n        <td>87.6</td>\n     </tr>\n\n  <tr align=center>\n        <td align=left>InternVL-C (ours)</td>\n        <td>90.3</td>\n        <td>98.8</td>\n        <td>99.7</td>\n        <td>75.1</td>\n        <td>92.9</td>\n        <td>96.4</td>\n        <td>68.8</td>\n        <td>92.0</td>\n        <td>96.7</td>\n        <td>68.9</td>\n        <td>91.9</td>\n        <td>96.5</td>\n        <td>89.0</td>\n     </tr>\n  <tr align=center>\n        <td align=left>InternVL-G (ours)</td>\n        <td>92.9</td>\n        <td>99.4</td>\n        <td>99.8</td>\n        <td>77.7</td>\n        <td>94.8</td>\n        <td>97.3</td>\n        <td>71.4</td>\n        <td>93.9</td>\n        <td>97.7</td>\n        <td>73.8</td>\n        <td>94.4</td>\n        <td>98.1</td>\n        <td>90.9</td>\n     </tr>\n\n  </table>\n\n- Â§öËØ≠Ë®ÄÈõ∂Ê†∑Êú¨ÂõæÊñáÂØπÊ£ÄÁ¥¢ [\\[Êü•ÁúãËØ¶ÊÉÖ\\]](./clip_benchmark#xtd)\n\n  | method            |  EN  |  ES  |  FR  |  ZH  |  IT  |  KO  |  RU  |  JP  | average |\n  | ----------------- | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :--: | :-----: |\n  | AltCLIP           | 95.4 | 94.1 | 92.9 | 95.1 | 94.2 | 94.4 | 91.8 | 91.7 |  93.7   |\n  | OpenCLIP-XLM-R-H  | 97.3 | 96.1 | 94.5 | 94.7 | 96.0 | 90.2 | 93.9 | 94.0 |  94.6   |\n  | InternVL-C (ours) | 97.3 | 95.7 | 95.1 | 95.6 | 96.0 | 92.2 | 93.3 | 95.5 |  95.1   |\n  | InternVL-G (ours) | 98.6 | 97.7 | 96.5 | 96.7 | 96.9 | 95.1 | 94.8 | 96.1 |  96.6   |\n\n</details>\n\n<details>\n  <summary>Â§öÊ®°ÊÄÅÂØπËØù</summary>\n\n</details>\n\n## ‰ΩøÁî® HuggingFace Âø´ÈÄüÂºÄÂßã\n\n<details>\n  <summary>‰ΩøÁî® InternViT-6B ÊèêÂèñËßÜËßâÁâπÂæÅ (ÁÇπÂáªÂ±ïÂºÄ)</summary>\n\n```python\nimport torch\nfrom PIL import Image\nfrom transformers import AutoModel, CLIPImageProcessor\n\nmodel = AutoModel.from_pretrained(\n    'OpenGVLab/InternViT-6B-448px-V2_5',\n    torch_dtype=torch.bfloat16,\n    low_cpu_mem_usage=True,\n    trust_remote_code=True).cuda().eval()\n\nimage = Image.open('./examples/image1.jpg').convert('RGB')\n\nimage_processor = CLIPImageProcessor.from_pretrained('OpenGVLab/InternViT-6B-448px-V1-5')\n\npixel_values = image_processor(images=image, return_tensors='pt').pixel_values\npixel_values = pixel_values.to(torch.bfloat16).cuda()\n\noutputs = model(pixel_values)\n```\n\n</details>\n\n<details>\n  <summary>‰ΩøÁî® InternVL-C(ontrastive) Âíå InternVL-G(enerative) ËøõË°åË∑®Ê®°ÊÄÅÊ£ÄÁ¥¢ (ÁÇπÂáªÂ±ïÂºÄ)</summary>\n\n```python\nimport torch\nfrom PIL import Image\nfrom transformers import AutoModel, CLIPImageProcessor\nfrom transformers import AutoTokenizer\n\n\nmodel = AutoModel.from_pretrained(\n    'OpenGVLab/InternVL-14B-224px',\n    torch_dtype=torch.bfloat16,\n    low_cpu_mem_usage=True,\n    trust_remote_code=True).cuda().eval()\n\nimage_processor = CLIPImageProcessor.from_pretrained('OpenGVLab/InternVL-14B-224px')\n\ntokenizer = AutoTokenizer.from_pretrained(\n    'OpenGVLab/InternVL-14B-224px', use_fast=False, add_eos_token=True)\ntokenizer.pad_token_id = 0  # set pad_token_id to 0\n\nimages = [\n    Image.open('./examples/image1.jpg').convert('RGB'),\n    Image.open('./examples/image2.jpg').convert('RGB'),\n    Image.open('./examples/image3.jpg').convert('RGB')\n]\nprefix = 'summarize:'\ntexts = [\n    prefix + 'a photo of a red panda',  # English\n    prefix + '‰∏ÄÂº†ÁÜäÁå´ÁöÑÁÖßÁâá',  # Chinese\n    prefix + '‰∫åÂåπ„ÅÆÁå´„ÅÆÂÜôÁúü'  # Japanese\n]\n\npixel_values = image_processor(images=images, return_tensors='pt').pixel_values\npixel_values = pixel_values.to(torch.bfloat16).cuda()\ninput_ids = tokenizer(texts, return_tensors='pt', max_length=80,\n                      truncation=True, padding='max_length').input_ids.cuda()\n\n# InternVL-C\nlogits_per_image, logits_per_text = model(\n    image=pixel_values, text=input_ids, mode='InternVL-C')\nprobs = logits_per_image.softmax(dim=-1)\n# tensor([[9.9609e-01, 5.2185e-03, 6.0070e-08],\n#         [2.2949e-02, 9.7656e-01, 5.9903e-06],\n#         [3.2932e-06, 7.4863e-05, 1.0000e+00]], device='cuda:0',\n#        dtype=torch.bfloat16, grad_fn=<SoftmaxBackward0>)\n\n# InternVL-G\nlogits_per_image, logits_per_text = model(\n    image=pixel_values, text=input_ids, mode='InternVL-G')\nprobs = logits_per_image.softmax(dim=-1)\n# tensor([[9.9609e-01, 3.1738e-03, 3.6322e-08],\n#         [8.6060e-03, 9.9219e-01, 2.8759e-06],\n#         [1.7583e-06, 3.1233e-05, 1.0000e+00]], device='cuda:0',\n#        dtype=torch.bfloat16, grad_fn=<SoftmaxBackward0>)\n\n# please set add_eos_token to False for generation\ntokenizer.add_eos_token = False\nimage = Image.open('./examples/image1.jpg').convert('RGB')\npixel_values = image_processor(images=image, return_tensors='pt').pixel_values\npixel_values = pixel_values.to(torch.bfloat16).cuda()\n\ntokenized = tokenizer(\"English caption:\", return_tensors='pt')\npred = model.generate(\n    pixel_values=pixel_values,\n    input_ids=tokenized.input_ids.cuda(),\n    attention_mask=tokenized.attention_mask.cuda(),\n    num_beams=5,\n    min_new_tokens=8,\n)\ncaption = tokenizer.decode(pred[0].cpu(), skip_special_tokens=True).strip()\n# English caption: a red panda sitting on top of a wooden platform\n```\n\n</details>\n\n<details>\n  <summary>‰ΩøÁî® InternVL 2.5 ËøõË°åÂ§öÊ®°ÊÄÅÂØπËØù (ÁÇπÂáªÂ±ïÂºÄ)</summary>\n\nËøôÈáåÊàë‰ª¨‰ª•ËæÉÂ∞èÁöÑ `OpenGVLab/InternVL2_5-8B` ‰∏∫‰æãÔºö\n\n```python\nimport numpy as np\nimport torch\nimport torchvision.transforms as T\nfrom decord import VideoReader, cpu\nfrom PIL import Image\nfrom torchvision.transforms.functional import InterpolationMode\nfrom transformers import AutoModel, AutoTokenizer\n\nIMAGENET_MEAN = (0.485, 0.456, 0.406)\nIMAGENET_STD = (0.229, 0.224, 0.225)\n\ndef build_transform(input_size):\n    MEAN, STD = IMAGENET_MEAN, IMAGENET_STD\n    transform = T.Compose([\n        T.Lambda(lambda img: img.convert('RGB') if img.mode != 'RGB' else img),\n        T.Resize((input_size, input_size), interpolation=InterpolationMode.BICUBIC),\n        T.ToTensor(),\n        T.Normalize(mean=MEAN, std=STD)\n    ])\n    return transform\n\ndef find_closest_aspect_ratio(aspect_ratio, target_ratios, width, height, image_size):\n    best_ratio_diff = float('inf')\n    best_ratio = (1, 1)\n    area = width * height\n    for ratio in target_ratios:\n        target_aspect_ratio = ratio[0] / ratio[1]\n        ratio_diff = abs(aspect_ratio - target_aspect_ratio)\n        if ratio_diff < best_ratio_diff:\n            best_ratio_diff = ratio_diff\n            best_ratio = ratio\n        elif ratio_diff == best_ratio_diff:\n            if area > 0.5 * image_size * image_size * ratio[0] * ratio[1]:\n                best_ratio = ratio\n    return best_ratio\n\ndef dynamic_preprocess(image, min_num=1, max_num=12, image_size=448, use_thumbnail=False):\n    orig_width, orig_height = image.size\n    aspect_ratio = orig_width / orig_height\n\n    # calculate the existing image aspect ratio\n    target_ratios = set(\n        (i, j) for n in range(min_num, max_num + 1) for i in range(1, n + 1) for j in range(1, n + 1) if\n        i * j <= max_num and i * j >= min_num)\n    target_ratios = sorted(target_ratios, key=lambda x: x[0] * x[1])\n\n    # find the closest aspect ratio to the target\n    target_aspect_ratio = find_closest_aspect_ratio(\n        aspect_ratio, target_ratios, orig_width, orig_height, image_size)\n\n    # calculate the target width and height\n    target_width = image_size * target_aspect_ratio[0]\n    target_height = image_size * target_aspect_ratio[1]\n    blocks = target_aspect_ratio[0] * target_aspect_ratio[1]\n\n    # resize the image\n    resized_img = image.resize((target_width, target_height))\n    processed_images = []\n    for i in range(blocks):\n        box = (\n            (i % (target_width // image_size)) * image_size,\n            (i // (target_width // image_size)) * image_size,\n            ((i % (target_width // image_size)) + 1) * image_size,\n            ((i // (target_width // image_size)) + 1) * image_size\n        )\n        # split the image\n        split_img = resized_img.crop(box)\n        processed_images.append(split_img)\n    assert len(processed_images) == blocks\n    if use_thumbnail and len(processed_images) != 1:\n        thumbnail_img = image.resize((image_size, image_size))\n        processed_images.append(thumbnail_img)\n    return processed_images\n\ndef load_image(image_file, input_size=448, max_num=12):\n    image = Image.open(image_file).convert('RGB')\n    transform = build_transform(input_size=input_size)\n    images = dynamic_preprocess(image, image_size=input_size, use_thumbnail=True, max_num=max_num)\n    pixel_values = [transform(image) for image in images]\n    pixel_values = torch.stack(pixel_values)\n    return pixel_values\n\n# If you have an 80G A100 GPU, you can put the entire model on a single GPU.\n# Otherwise, you need to load a model using multiple GPUs, please refer to the `Multiple GPUs` section.\npath = 'OpenGVLab/InternVL2_5-8B'\nmodel = AutoModel.from_pretrained(\n    path,\n    torch_dtype=torch.bfloat16,\n    low_cpu_mem_usage=True,\n    trust_remote_code=True).eval().cuda()\ntokenizer = AutoTokenizer.from_pretrained(path, trust_remote_code=True, use_fast=False)\n\n# set the max number of tiles in `max_num`\npixel_values = load_image('./examples/image1.jpg', max_num=12).to(torch.bfloat16).cuda()\ngeneration_config = dict(max_new_tokens=1024, do_sample=False)\n\n# pure-text conversation (Á∫ØÊñáÊú¨ÂØπËØù)\nquestion = 'Hello, who are you?'\nresponse, history = model.chat(tokenizer, None, question, generation_config, history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'Can you tell me a story?'\nresponse, history = model.chat(tokenizer, None, question, generation_config, history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# single-image single-round conversation (ÂçïÂõæÂçïËΩÆÂØπËØù)\nquestion = '<image>\\nPlease describe the image shortly.'\nresponse = model.chat(tokenizer, pixel_values, question, generation_config)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# single-image multi-round conversation (ÂçïÂõæÂ§öËΩÆÂØπËØù)\nquestion = '<image>\\nPlease describe the image in detail.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config, history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'Please write a poem according to the image.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config, history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# multi-image multi-round conversation, combined images (Â§öÂõæÂ§öËΩÆÂØπËØùÔºåÊãºÊé•ÂõæÂÉè)\npixel_values1 = load_image('./examples/image1.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values2 = load_image('./examples/image2.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)\n\nquestion = '<image>\\nDescribe the two images in detail.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'What are the similarities and differences between these two images.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# multi-image multi-round conversation, separate images (Â§öÂõæÂ§öËΩÆÂØπËØùÔºåÁã¨Á´ãÂõæÂÉè)\npixel_values1 = load_image('./examples/image1.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values2 = load_image('./examples/image2.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)\nnum_patches_list = [pixel_values1.size(0), pixel_values2.size(0)]\n\nquestion = 'Image-1: <image>\\nImage-2: <image>\\nDescribe the two images in detail.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               num_patches_list=num_patches_list,\n                               history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'What are the similarities and differences between these two images.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               num_patches_list=num_patches_list,\n                               history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\n# batch inference, single image per sample (ÂçïÂõæÊâπÂ§ÑÁêÜ)\npixel_values1 = load_image('./examples/image1.jpg', max_num=12).to(torch.bfloat16).cuda()\npixel_values2 = load_image('./examples/image2.jpg', max_num=12).to(torch.bfloat16).cuda()\nnum_patches_list = [pixel_values1.size(0), pixel_values2.size(0)]\npixel_values = torch.cat((pixel_values1, pixel_values2), dim=0)\n\nquestions = ['<image>\\nDescribe the image in detail.'] * len(num_patches_list)\nresponses = model.batch_chat(tokenizer, pixel_values,\n                             num_patches_list=num_patches_list,\n                             questions=questions,\n                             generation_config=generation_config)\nfor question, response in zip(questions, responses):\n    print(f'User: {question}\\nAssistant: {response}')\n\n# video multi-round conversation (ËßÜÈ¢ëÂ§öËΩÆÂØπËØù)\ndef get_index(bound, fps, max_frame, first_idx=0, num_segments=32):\n    if bound:\n        start, end = bound[0], bound[1]\n    else:\n        start, end = -100000, 100000\n    start_idx = max(first_idx, round(start * fps))\n    end_idx = min(round(end * fps), max_frame)\n    seg_size = float(end_idx - start_idx) / num_segments\n    frame_indices = np.array([\n        int(start_idx + (seg_size / 2) + np.round(seg_size * idx))\n        for idx in range(num_segments)\n    ])\n    return frame_indices\n\ndef load_video(video_path, bound=None, input_size=448, max_num=1, num_segments=32):\n    vr = VideoReader(video_path, ctx=cpu(0), num_threads=1)\n    max_frame = len(vr) - 1\n    fps = float(vr.get_avg_fps())\n\n    pixel_values_list, num_patches_list = [], []\n    transform = build_transform(input_size=input_size)\n    frame_indices = get_index(bound, fps, max_frame, first_idx=0, num_segments=num_segments)\n    for frame_index in frame_indices:\n        img = Image.fromarray(vr[frame_index].asnumpy()).convert('RGB')\n        img = dynamic_preprocess(img, image_size=input_size, use_thumbnail=True, max_num=max_num)\n        pixel_values = [transform(tile) for tile in img]\n        pixel_values = torch.stack(pixel_values)\n        num_patches_list.append(pixel_values.shape[0])\n        pixel_values_list.append(pixel_values)\n    pixel_values = torch.cat(pixel_values_list)\n    return pixel_values, num_patches_list\n\nvideo_path = './examples/red-panda.mp4'\npixel_values, num_patches_list = load_video(video_path, num_segments=8, max_num=1)\npixel_values = pixel_values.to(torch.bfloat16).cuda()\nvideo_prefix = ''.join([f'Frame-{i+1}: <image>\\n' for i in range(len(num_patches_list))])\nquestion = video_prefix + 'What is the red panda doing?'\n# Frame1: <image>\\nFrame2: <image>\\n...\\nFrame8: <image>\\n{question}\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               num_patches_list=num_patches_list, history=None, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n\nquestion = 'Describe this video in detail.'\nresponse, history = model.chat(tokenizer, pixel_values, question, generation_config,\n                               num_patches_list=num_patches_list, history=history, return_history=True)\nprint(f'User: {question}\\nAssistant: {response}')\n```\n\n</details>\n\n## ËÆ∏ÂèØËØÅ\n\nÊú¨È°πÁõÆ‰ª• [MIT ËÆ∏ÂèØËØÅ](LICENSE) ÂèëÂ∏É„ÄÇÈ°πÁõÆ‰∏≠ÁöÑÈÉ®ÂàÜ‰ª£Á†ÅÂíåÊ®°ÂûãÊù•Ëá™ÂÖ∂ÂÆÉÊù•Ê∫êÔºåÂèóÂÖ∂ÂéüÂßãËÆ∏ÂèØËØÅÁöÑÁ∫¶Êùü„ÄÇ\n\n## ÂºïÁî®\n\nÂ¶ÇÊûúÊÇ®Âú®Á†îÁ©∂‰∏≠ÂèëÁé∞Êú¨È°πÁõÆÊúâÁî®ÔºåËØ∑ËÄÉËôëÂºïÁî®Ôºö\n\n```BibTeX\n@article{chen2024expanding,\n  title={Expanding Performance Boundaries of Open-Source Multimodal Models with Model, Data, and Test-Time Scaling},\n  author={Chen, Zhe and Wang, Weiyun and Cao, Yue and Liu, Yangzhou and Gao, Zhangwei and Cui, Erfei and Zhu, Jinguo and Ye, Shenglong and Tian, Hao and Liu, Zhaoyang and others},\n  journal={arXiv preprint arXiv:2412.05271},\n  year={2024}\n}\n@article{wang2024mpo,\n  title={Enhancing the Reasoning Ability of Multimodal Large Language Models via Mixed Preference Optimization},\n  author={Wang, Weiyun and Chen, Zhe and Wang, Wenhai and Cao, Yue and Liu, Yangzhou and Gao, Zhangwei and Zhu, Jinguo and Zhu, Xizhou and Lu, Lewei and Qiao, Yu and Dai, Jifeng},\n  journal={arXiv preprint arXiv:2411.10442},\n  year={2024}\n}\n@article{gao2024mini,\n  title={Mini-InternVL: a flexible-transfer pocket multi-modal model with 5\\% parameters and 90\\% performance},\n  author={Gao, Zhangwei and Chen, Zhe and Cui, Erfei and Ren, Yiming and Wang, Weiyun and Zhu, Jinguo and Tian, Hao and Ye, Shenglong and He, Junjun and Zhu, Xizhou and others},\n  journal={Visual Intelligence},\n  volume={2},\n  number={1},\n  pages={1--17},\n  year={2024},\n  publisher={Springer}\n}\n@article{chen2024far,\n  title={How far are we to gpt-4v? closing the gap to commercial multimodal models with open-source suites},\n  author={Chen, Zhe and Wang, Weiyun and Tian, Hao and Ye, Shenglong and Gao, Zhangwei and Cui, Erfei and Tong, Wenwen and Hu, Kongzhi and Luo, Jiapeng and Ma, Zheng and others},\n  journal={Science China Information Sciences},\n  volume={67},\n  number={12},\n  pages={220101},\n  year={2024},\n  publisher={Springer}\n}\n@inproceedings{chen2024internvl,\n  title={Internvl: Scaling up vision foundation models and aligning for generic visual-linguistic tasks},\n  author={Chen, Zhe and Wu, Jiannan and Wang, Wenhai and Su, Weijie and Chen, Guo and Xing, Sen and Zhong, Muyan and Zhang, Qinglong and Zhu, Xizhou and Lu, Lewei and others},\n  booktitle={Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition},\n  pages={24185--24198},\n  year={2024}\n}\n```\n\n## Ëá¥Ë∞¢\n\nInternVL ÁöÑ‰ª£Á†ÅÊûÑÂª∫ÂèÇËÄÉ‰∫Ü‰ª•‰∏ãÁöÑÈ°πÁõÆ: [OpenAI CLIP](https://github.com/openai/CLIP)„ÄÅ[Open CLIP](https://github.com/mlfoundations/open_clip)„ÄÅ[CLIP Benchmark](https://github.com/LAION-AI/CLIP_benchmark)„ÄÅ[EVA](https://github.com/baaivision/EVA/tree/master)„ÄÅ[InternImage](https://github.com/OpenGVLab/InternImage)„ÄÅ[ViT-Adapter](https://github.com/czczup/ViT-Adapter)„ÄÅ[MMSegmentation](https://github.com/open-mmlab/mmsegmentation)„ÄÅ[Transformers](https://github.com/huggingface/transformers)„ÄÅ[DINOv2](https://github.com/facebookresearch/dinov2)„ÄÅ[BLIP-2](https://github.com/salesforce/LAVIS/tree/main/projects/blip2)„ÄÅ[Qwen-VL](https://github.com/QwenLM/Qwen-VL/tree/master/eval_mm)Âíå [LLaVA-1.5](https://github.com/haotian-liu/LLaVA)ÔºåÊÑüË∞¢Ëøô‰∫õÊù∞Âá∫ÁöÑÂ∑•‰Ωú„ÄÇ\n\n______________________________________________________________________\n\nÊâ´Êèè‰∏ãÊñπ‰∫åÁª¥Á†ÅÔºåÂä†ÂÖ•Êàë‰ª¨ÁöÑÈ°πÁõÆÂæÆ‰ø°Áæ§„ÄÇ\n\n<p align=\"center\"><img width=\"300\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f776df09-ebba-4fd5-80c2-fec4ff1518be\"></p>\n"
        },
        {
          "name": "classification",
          "type": "tree",
          "content": null
        },
        {
          "name": "clip_benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "internvl_chat",
          "type": "tree",
          "content": null
        },
        {
          "name": "internvl_chat_llava",
          "type": "tree",
          "content": null
        },
        {
          "name": "internvl_g",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1337890625,
          "content": "-r requirements/internvl_chat.txt\n-r requirements/streamlit_demo.txt\n-r requirements/classification.txt\n-r requirements/segmentation.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "segmentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "streamlit_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "video_retrieval",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}