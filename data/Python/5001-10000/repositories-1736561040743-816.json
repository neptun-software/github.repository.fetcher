{
  "metadata": {
    "timestamp": 1736561040743,
    "page": 816,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ranaroussi/quantstats",
      "stars": 5149,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".deepsource.toml",
          "type": "blob",
          "size": 0.1279296875,
          "content": "version = 1\n\ntest_patterns = [\n\n]\n\nexclude_patterns = [\n\n]\n\n[[analyzers]]\nname = 'python'\nenabled = true\nruntime_version = '3.x.x'\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.208984375,
          "content": "*.pyc\n.idea\n__pycache__/*\nquantstats/__pycache__/*\ndist\n/build\n/docs/build/doctrees/*\n/docs/build/html/*\n/docs/build/epub/*\n!/docs/build/epub/*.epub\nquantstats.egg-info\nQuantStats.egg-info\nIcon\n/tests\n.vscode\nIcon\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.6328125,
          "content": "language: python\n\nsudo: true\nfast_finish: true\n\nmatrix:\n  include:\n    - python: 3.6\n    - python: 3.7\n    - python: 3.8\n    - python: 3.9\n      dist: xenial\n      sudo: true\n\ninstall:\n  - pip install Cython\n  - pip install -r requirements.txt\n  - pip install .\n\nscript:\n  - nosetests\n\nafter_success:\n  - coveralls\n\nbranches:\n  only:\n    - main\n\nnotifications:\n  slack: tradologics:HcnS6XusfcuS02waQPCG18oc\n  webhooks:\n    urls:\n    on_success: change  # options: [always|never|change] default: always\n    on_failure: always  # options: [always|never|change] default: always\n    on_start: never     # options: [always|never|change] default: always\n"
        },
        {
          "name": "CHANGELOG.rst",
          "type": "blob",
          "size": 6.888671875,
          "content": "Change Log\n===========\n\n0.0.62\n------\n- Changed `serenity_index` and `recovery_factor` to use simple sum instead of compounded sum\n- Reports passing the `compounded` param to all supporting methods\n- Fixed a bug related to monthly_heatmap display\n\n0.0.61\n------\n- Fixed positional arguments passed to cagr()\n\n0.0.60\n------\n- Multi-strategy reports! You can now pass a dataframe with a column for each strategy to get a unified, single report for all\n- Support request proxy with yfinance\n- Added custom periods to CAGR\n- Correct drawdown days calculation when last day is a drawdown\n- Write report in correct file path\n- IPython 7+ compatibility\n- Pandas 2.0 compatibility\n- Fix for benchmark name when supplied by the user\n- Handles tz-native and tz-aware comparisson issue\n- Adding benchmark name to html report\n- Update README ticker to META :)\n- Many pull requests merged\n\n\n0.0.59\n------\n- Fixed EOY compounded return calculation\n\n0.0.58\n------\n- Run fillna(0) on plot's beta (issue #193)\n\n0.0.57\n------\n- Fixed `sigma` calculation in `stats.probabilistic_ratio()`\n\n0.0.56\n------\n- Added option to explicitly provide the benchmark title via `benchmark_title=...`\n\n0.0.55\n------\n- Fix for benchmark name in html report when supplied by the user\n\n0.0.54\n------\n- Fixed dependency name in requirements.txt\n\n\n0.0.53\n------\n- Added information ratio to reports\n\n0.0.52\n------\n- Added Treynor ratio\n\n0.0.51\n------\n- Added max consecutive wins/losses to full report\n- Added “correlation to benchmark” to report\n- Cleanup inf/nan from reports\n- Added benchmark name to stats column and html report\n- Added probabilistic sharpe/sortino ratios\n- Fix relative dates calculations\n\n0.0.50\n------\n- Fixed a bug when reporting the max drawdown\n\n0.0.49\n------\n- Fixed an issue with saving the HTML report as a file\n\n0.0.48\n------\n- Fixed RF display bug\n\n0.0.47\n------\n- Fixed average DD display bug\n\n0.0.46\n------\n- Misc bug fixes and speedups\n\n0.0.45\n------\n- Fixed ``stats.rolling_sharpe()`` parameter mismatch\n\n0.0.44\n------\n- Match dates logic on ``utils.make_index()``\n\n0.0.43\n------\n- Fixed ``stats.rolling_sortino()`` calculations\n- Added ``match_dates`` flag to reports to make strategy and benchmark comparible by syncing their dates and frequency\n- Added ``prepare_returns`` flag to ``utils._prepare_benchmark()``\n- Misc code cleanup and speedups\n\n0.0.42\n------\n- Usability improvements\n\n0.0.41\n------\n- Typos fixed\n\n0.0.40\n------\n- Added rebalance option to ``utils.make_index()``\n- Added option to add ``log_scale=True/False` to ``plots.snapshot()``\n\n0.0.39\n------\n- Fixed ``plots.rolling_volatility()`` benchmark display (bug introduced in 0.0.37)\n\n0.0.38\n------\n- Added ``stats.smart_sharpe()`` and ``stats.smart_sortino()``\n\n0.0.37\n------\n- added ``stats.rolling_sharpe()``, ``stats.rolling_sortino()``, ``stats.and rolling_volatility()``\n- Added ``stats.distribution()``\n- Added Omega ratio\n- BREAKING CHANGE: Eenamed ``trading_year_days`` param to ``periods_per_year``\n- Misc code cleanup and speedups\n\n0.0.36\n------\n- Added ``as_pct`` params to ``reports.metrics()`` for when you need display data as DataFrame\n\n0.0.35\n------\n- Passing correct rolling windows in ``rolling_beta()``\n- Added Serenity Index\n- Passing ``trading_year_days`` to method ``metrics``\n- Fixed \"day is out of range for month\" error\n\n0.0.34\n------\n- Fixed bug in ``stats.consecutive_wins()`` and ``stats.consecutive_losses()``\n- Fixed seaborn's depreated ``distplot`` warning\n- Improved annualization by passing ``trading_year_days``\n\n0.0.33\n------\n- Added option to pass the number of days per year in reports, so you can now use ``trading_year_days=365`` if you're trading crypto, or any other number for intl. markets.\n\n0.0.32\n------\n- Fixed bug in ``plot_histogram()`` (issues 94+95)\n\n0.0.31\n------\n- Enable period setting for adjusted sortino\n- Added ``utils.make_index()`` for easy \"etf\" creation\n\n0.0.30\n------\n- Fixed PIP installer\n\n0.0.29\n------\n- Minor code refactoring\n\n0.0.28\n------\n- ``gain_to_pain`` renamed to ``gain_to_pain_ratio``\n- Minor code refactoring\n\n0.0.27\n------\n- Added Sortino/√2 and Gain/Pain ratio to report\n- Merged PRs to fix some bugs\n\n0.0.26\n------\n- Misc bug fixes and code improvements\n\n0.0.25\n------\n- Fixed ``conditional_value_at_risk()``\n- Fixed ``%matplotlib inline`` issue notebooks\n\n0.0.24\n------\n- Added mtd/qtd/ytd methods for panda (usage: ``df.mtd()``)\n- Fixed Pandas deprecation warning\n- Fixed Matplotlib deprecation warning\n- Try setting ``%matplotlib inline`` automatic in notebooks\n\n0.0.23\n------\n- Fixed profit Factor formula\n\n0.0.22\n------\n- Misc bug fixes\n\n0.0.21\n------\n- Fixed chart EOY chart's ``xticks`` when charting data with 10+ years\n- Fixed issue where daily return >= 100%\n- Fixed Snapshot plot\n- Removed duplicaated code\n- Added conda installer\n- Misc code refactoring and optimizations\n\n0.0.20\n------\n- Misc bugfixes\n\n0.0.19\n------\n- Cleaning up data before calculations (replaces inf/-inf/-0 with 0)\n- Removed usage of ``pandas.compound()`` for future ``pandas`` version compatibility\n- Auto conversion of price-to-returns and returns-to-data as needed\n\n0.0.18\n------\n- Fixed issue when last date in data is in the past (issue #4)\n- Fixed issue when data has less than 5 drawdown periods (issue #4)\n\n0.0.17\n------\n- Fixed CAGR calculation for more accuracy\n- Handles drawdowns better in live trading mode when currently in drawdown\n\n0.0.16\n------\n- Handles no drawdowns better\n\n0.0.15\n------\n- Better report formatting\n- Code cleanup\n\n0.0.14\n------\n- Fixed calculation for rolling sharpe and rolling sortino charts\n- Nicer CSS when printing html reports\n\n0.0.13\n------\n- Fixed non-compounded plots in reports when using ``compounded=False``\n\n0.0.12\n------\n- Option to add ``compounded=True/False`` to reports (default is ``True``)\n\n0.0.11\n------\n- Minor bug fixes\n\n0.0.10\n------\n- Updated to install and use ``yfinance`` instead of ``fix_yahoo_finance``\n\n0.0.09\n------\n- Added support for 3 modes (cumulative, compounded, fixed amount) in ``plots.earnings()`` and ``utils.make_portfolio()``\n- Added two DataFrame utilities: ``df.curr_month()`` and ``df.date(date)``\n- Misc bug fixes and code refactoring\n\n\n0.0.08\n------\n- Better calculations for cagr, var, cvar, avg win/loss and payoff_ratio\n- Removed unused param from ``to_plotly()``\n- Added risk free param to ``log_returns()`` + renamed it to ``to_log_returns()``\n- Misc bug fixes and code improvements\n\n0.0.07\n------\n- Plots returns figure if ``show`` is set to False\n\n0.0.06\n------\n- Minor bug fix\n\n0.0.05\n------\n- Added ``plots.to_plotly()`` method\n- Added Ulcer Index to metrics report\n- Better returns/price detection\n- Bug fixes and code refactoring\n\n0.0.04\n------\n- Added ``pct_rank()`` method to stats\n- Added ``multi_shift()`` method to utils\n\n0.0.03\n------\n- Better VaR/cVaR calculation\n- Fixed calculation of ``to_drawdown_series()``\n- Changed VaR/cVaR default confidence to 95%\n- Improved Sortino formula\n- Fixed conversion of returns to prices (``to_prices()``)\n\n0.0.02\n------\n- Initial release\n\n0.0.01\n------\n- Pre-release placeholder\n"
        },
        {
          "name": "CONTRIBUTORS.txt",
          "type": "blob",
          "size": 0.1552734375,
          "content": "# This file contains a list of people who have made contributions\n# to the public version of QuantStats.\n\nRan Aroussi, Creator <https://github.com/ranaroussi>\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.150390625,
          "content": "# Include the license file\ninclude LICENSE.txt\ninclude requirements.txt\ninclude quantstats/report.html\n\n# Include the data files\nrecursive-include data *\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 7.1298828125,
          "content": ".. image:: https://img.shields.io/badge/python-3.6+-blue.svg?style=flat\n    :target: https://pypi.python.org/pypi/quantstats\n    :alt: Python version\n\n.. image:: https://img.shields.io/pypi/v/quantstats.svg?maxAge=60\n    :target: https://pypi.python.org/pypi/quantstats\n    :alt: PyPi version\n\n.. image:: https://img.shields.io/pypi/status/quantstats.svg?maxAge=60\n    :target: https://pypi.python.org/pypi/quantstats\n    :alt: PyPi status\n\n.. image:: https://img.shields.io/pypi/dm/quantstats.svg?maxAge=2592000&label=installs&color=%2327B1FF\n    :target: https://pypi.python.org/pypi/quantstats\n    :alt: PyPi downloads\n\n.. image:: https://www.codefactor.io/repository/github/ranaroussi/quantstats/badge\n    :target: https://www.codefactor.io/repository/github/ranaroussi/quantstats\n    :alt: CodeFactor\n\n.. image:: https://img.shields.io/github/stars/ranaroussi/quantstats.svg?style=social&label=Star&maxAge=60\n    :target: https://github.com/ranaroussi/quantstats\n    :alt: Star this repo\n\n.. image:: https://img.shields.io/twitter/follow/aroussi.svg?style=social&label=Follow&maxAge=60\n    :target: https://twitter.com/aroussi\n    :alt: Follow me on twitter\n\n\\\n\nQuantStats: Portfolio analytics for quants\n==========================================\n\n**QuantStats** Python library that performs portfolio profiling, allowing quants and portfolio managers to understand their performance better by providing them with in-depth analytics and risk metrics.\n\n`Changelog » <./CHANGELOG.rst>`__\n\nQuantStats is comprised of 3 main modules:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. ``quantstats.stats`` - for calculating various performance metrics, like Sharpe ratio, Win rate, Volatility, etc.\n2. ``quantstats.plots`` - for visualizing performance, drawdowns, rolling statistics, monthly returns, etc.\n3. ``quantstats.reports`` - for generating metrics reports, batch plotting, and creating tear sheets that can be saved as an HTML file.\n\nHere's an example of a simple tear sheet analyzing a strategy:\n\nQuick Start\n===========\n\n.. code:: python\n\n    %matplotlib inline\n    import quantstats as qs\n\n    # extend pandas functionality with metrics, etc.\n    qs.extend_pandas()\n\n    # fetch the daily returns for a stock\n    stock = qs.utils.download_returns('META')\n\n    # show sharpe ratio\n    qs.stats.sharpe(stock)\n\n    # or using extend_pandas() :)\n    stock.sharpe()\n\nOutput:\n\n.. code:: text\n\n    0.8135304438803402\n\n\nVisualize stock performance\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    qs.plots.snapshot(stock, title='Facebook Performance', show=True)\n\n    # can also be called via:\n    # stock.plot_snapshot(title='Facebook Performance', show=True)\n\nOutput:\n\n.. image:: https://github.com/ranaroussi/quantstats/blob/main/docs/snapshot.jpg?raw=true\n    :alt: Snapshot plot\n\n\nCreating a report\n~~~~~~~~~~~~~~~~~\n\nYou can create 7 different report tearsheets:\n\n1. ``qs.reports.metrics(mode='basic|full\", ...)`` - shows basic/full metrics\n2. ``qs.reports.plots(mode='basic|full\", ...)`` - shows basic/full plots\n3. ``qs.reports.basic(...)`` - shows basic metrics and plots\n4. ``qs.reports.full(...)`` - shows full metrics and plots\n5. ``qs.reports.html(...)`` - generates a complete report as html\n\nLet' create an html tearsheet\n\n.. code:: python\n\n    (benchmark can be a pandas Series or ticker)\n    qs.reports.html(stock, \"SPY\")\n\nOutput will generate something like this:\n\n.. image:: https://github.com/ranaroussi/quantstats/blob/main/docs/report.jpg?raw=true\n    :alt: HTML tearsheet\n\n(`view original html file <https://rawcdn.githack.com/ranaroussi/quantstats/main/docs/tearsheet.html>`_)\n\n\nTo view a complete list of available methods, run\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: python\n\n    [f for f in dir(qs.stats) if f[0] != '_']\n\n\n.. code:: text\n\n\t['avg_loss',\n\t 'avg_return',\n\t 'avg_win',\n\t 'best',\n\t 'cagr',\n\t 'calmar',\n\t 'common_sense_ratio',\n\t 'comp',\n\t 'compare',\n\t 'compsum',\n\t 'conditional_value_at_risk',\n\t 'consecutive_losses',\n\t 'consecutive_wins',\n\t 'cpc_index',\n\t 'cvar',\n\t 'drawdown_details',\n\t 'expected_return',\n\t 'expected_shortfall',\n\t 'exposure',\n\t 'gain_to_pain_ratio',\n\t 'geometric_mean',\n\t 'ghpr',\n\t 'greeks',\n\t 'implied_volatility',\n\t 'information_ratio',\n\t 'kelly_criterion',\n\t 'kurtosis',\n\t 'max_drawdown',\n\t 'monthly_returns',\n\t 'outlier_loss_ratio',\n\t 'outlier_win_ratio',\n\t 'outliers',\n\t 'payoff_ratio',\n\t 'profit_factor',\n\t 'profit_ratio',\n\t 'r2',\n\t 'r_squared',\n\t 'rar',\n\t 'recovery_factor',\n\t 'remove_outliers',\n\t 'risk_of_ruin',\n\t 'risk_return_ratio',\n\t 'rolling_greeks',\n\t 'ror',\n\t 'sharpe',\n\t 'skew',\n\t 'sortino',\n\t 'adjusted_sortino',\n\t 'tail_ratio',\n\t 'to_drawdown_series',\n\t 'ulcer_index',\n\t 'ulcer_performance_index',\n\t 'upi',\n\t 'utils',\n\t 'value_at_risk',\n\t 'var',\n\t 'volatility',\n\t 'win_loss_ratio',\n\t 'win_rate',\n\t 'worst']\n\n.. code:: python\n\n    [f for f in dir(qs.plots) if f[0] != '_']\n\n.. code:: text\n\n\t['daily_returns',\n\t 'distribution',\n\t 'drawdown',\n\t 'drawdowns_periods',\n\t 'earnings',\n\t 'histogram',\n\t 'log_returns',\n\t 'monthly_heatmap',\n\t 'returns',\n\t 'rolling_beta',\n\t 'rolling_sharpe',\n\t 'rolling_sortino',\n\t 'rolling_volatility',\n\t 'snapshot',\n\t 'yearly_returns']\n\n\n**\\*\\*\\* Full documenttion coming soon \\*\\*\\***\n\nIn the meantime, you can get insights as to optional parameters for each method, by using Python's ``help`` method:\n\n.. code:: python\n\n    help(qs.stats.conditional_value_at_risk)\n\n.. code:: text\n\n\tHelp on function conditional_value_at_risk in module quantstats.stats:\n\n\tconditional_value_at_risk(returns, sigma=1, confidence=0.99)\n\t    calculats the conditional daily value-at-risk (aka expected shortfall)\n\t    quantifies the amount of tail risk an investment\n\n\nInstallation\n------------\n\nInstall using ``pip``:\n\n.. code:: bash\n\n    $ pip install quantstats --upgrade --no-cache-dir\n\n\nInstall using ``conda``:\n\n.. code:: bash\n\n    $ conda install -c ranaroussi quantstats\n\n\nRequirements\n------------\n\n* `Python <https://www.python.org>`_ >= 3.5+\n* `pandas <https://github.com/pydata/pandas>`_ (tested to work with >=0.24.0)\n* `numpy <http://www.numpy.org>`_ >= 1.15.0\n* `scipy <https://www.scipy.org>`_ >= 1.2.0\n* `matplotlib <https://matplotlib.org>`_ >= 3.0.0\n* `seaborn <https://seaborn.pydata.org>`_ >= 0.9.0\n* `tabulate <https://bitbucket.org/astanin/python-tabulate>`_ >= 0.8.0\n* `yfinance <https://github.com/ranaroussi/yfinance>`_ >= 0.1.38\n* `plotly <https://plot.ly/>`_ >= 3.4.1 (optional, for using ``plots.to_plotly()``)\n\nQuestions?\n----------\n\nThis is a new library... If you find a bug, please\n`open an issue <https://github.com/ranaroussi/quantstats/issues>`_\nin this repository.\n\nIf you'd like to contribute, a great place to look is the\n`issues marked with help-wanted <https://github.com/ranaroussi/quantstats/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22>`_.\n\n\nKnown Issues\n------------\n\nFor some reason, I couldn't find a way to tell seaborn not to return the\nmonthly returns heatmap when instructed to save - so even if you save the plot (by passing ``savefig={...}``) it will still show the plot.\n\n\nLegal Stuff\n------------\n\n**QuantStats** is distributed under the **Apache Software License**. See the `LICENSE.txt <./LICENSE.txt>`_ file in the release for details.\n\n\nP.S.\n------------\n\nPlease drop me a note with any feedback you have.\n\n**Ran Aroussi**\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "meta.yaml",
          "type": "blob",
          "size": 1.5341796875,
          "content": "{% set name = \"QuantStats\" %}\n{% set version = \"0.0.35\" %}\n\npackage:\n  name: \"{{ name|lower }}\"\n  version: \"{{ version }}\"\n\nsource:\n  url: \"https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz\"\n  sha256: \"c09e9ad157f6cbbf76c7cace6d52e64486a64fffdb21f4a840152f7e9ea8f8a2\"\n\nbuild:\n  noarch: python\n  number: 0\n  script: \"{{ PYTHON }} -m pip install . --no-deps --ignore-installed -vv \"\n\nrequirements:\n  host:\n    - pandas >=0.24.0\n    - numpy >=1.16.5\n    - seaborn >=0.9.0\n    - matplotlib >=3.0.0\n    - scipy >=1.2.0\n    - tabulate >=0.8.0\n    - yfinance >=0.1.55\n    - pip\n    - python\n    - scipy >=1.2.0\n  run:\n    - pandas >=0.24.0\n    - numpy >=1.16.5\n    - seaborn >=0.9.0\n    - matplotlib >=3.0.0\n    - scipy >=1.2.0\n    - tabulate >=0.8.0\n    - yfinance >=0.1.55\n    - pip\n    - python\n    - scipy >=1.2.0\n\ntest:\n  imports:\n    - quantstats\n    - quantstats._plotting\n\nabout:\n  home: \"https://github.com/ranaroussi/quantstats\"\n  license: \"Apache Software\"\n  license_family: \"APACHE\"\n  license_file: \"\"\n  summary: \"QuantStats: Portfolio analytics for quants\"\n  description: |\n    QuantStats Python library that performs portfolio profiling,\n    allowing quants and portfolio managers to understand their\n    performance better by providing them with in-depth analytics\n    and risk metrics.\n  doc_url: \"https://github.com/ranaroussi/quantstats\"\n  dev_url: \"https://pypi.python.org/pypi/quantstats\"\n  doc_source_url: https://github.com/ranaroussi/quantstats/blob/master/README.rst\n\n\nextra:\n  recipe-maintainers:\n    - ranaroussi\n"
        },
        {
          "name": "quantstats",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1259765625,
          "content": "pandas>=0.24.0\nnumpy>=1.16.5\nseaborn>=0.9.0\nmatplotlib>=3.0.0\nscipy>=1.2.0\ntabulate>=0.8.0\nyfinance>=0.1.70\npython-dateutil>=2.0\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.24609375,
          "content": "[bdist_wheel]\n# This flag says that the code is written to work on both Python 2 and Python\n# 3. If at all possible, it is good practice to do this. If you cannot, you\n# will need to generate wheels for each Python version that you support.\nuniversal=1"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.84765625,
          "content": "#!/usr/bin/env python\n# -*- coding: UTF-8 -*-\n\n\"\"\"QuantStats: Portfolio analytics for quants\nhttps://github.com/ranaroussi/quantstats\nQuantStats performs portfolio profiling, to allow quants and\nportfolio managers to understand their performance better,\nby providing them with in-depth analytics and risk metrics.\n\"\"\"\n\nfrom setuptools import setup, find_packages\n# from codecs import open\nimport io\nfrom os import path\n\n# --- get version ---\nversion = \"unknown\"\nwith open(\"quantstats/version.py\") as f:\n    line = f.read().strip()\n    version = line.replace(\"version = \", \"\").replace('\"', '')\n# --- /get version ---\n\nhere = path.abspath(path.dirname(__file__))\n\n# Get the long description from the README file\nwith io.open(path.join(here, 'README.rst'), encoding='utf-8') as f:\n    long_description = f.read()\n\nwith io.open(path.join(here, 'requirements.txt'), encoding='utf-8') as f:\n    requirements = [line.rstrip() for line in f]\n\nsetup(\n    name='QuantStats',\n    version=version,\n    description='Portfolio analytics for quants',\n    long_description=long_description,\n    url='https://github.com/ranaroussi/quantstats',\n    author='Ran Aroussi',\n    author_email='ran@aroussi.com',\n    license='Apache Software License',\n    classifiers=[\n        'License :: OSI Approved :: Apache Software License',\n        # 'Development Status :: 1 - Planning',\n        # 'Development Status :: 2 - Pre-Alpha',\n        # 'Development Status :: 3 - Alpha',\n        # 'Development Status :: 4 - Beta',\n        'Development Status :: 5 - Production/Stable',\n\n        'Operating System :: OS Independent',\n\n        'Intended Audience :: Developers',\n        'Intended Audience :: Financial and Insurance Industry',\n        'Intended Audience :: Science/Research',\n\n        'Topic :: Office/Business :: Financial',\n        'Topic :: Office/Business :: Financial :: Investment',\n        'Topic :: Software Development :: Libraries',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n        'Topic :: Scientific/Engineering',\n        'Topic :: Scientific/Engineering :: Information Analysis',\n        'Topic :: Scientific/Engineering :: Mathematics',\n\n        # 'Programming Language :: Python :: 3.5',\n        'Programming Language :: Python :: 3.6',\n        'Programming Language :: Python :: 3.7',\n        'Programming Language :: Python :: 3.8',\n        'Programming Language :: Python :: 3.9',\n    ],\n\n    platforms=['any'],\n    keywords=\"\"\"quant algotrading algorithmic-trading quantitative-trading\n                quantitative-analysis algo-trading visualization plotting\"\"\",\n    packages=find_packages(exclude=['contrib', 'docs', 'tests', 'examples']),\n    install_requires=requirements,\n    entry_points={\n        'console_scripts': [\n            'sample=sample:main',\n        ],\n    },\n\n    include_package_data=True,\n    # package_data={\n    #     'static': 'quantstats/report.html*'\n    # },\n)\n"
        }
      ]
    }
  ]
}