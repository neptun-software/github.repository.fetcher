{
  "metadata": {
    "timestamp": 1736560939679,
    "page": 681,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zhouhaoyi/Informer2020",
      "stars": 5602,
      "defaultBranch": "main",
      "files": [
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.201171875,
          "content": "FROM continuumio/miniconda3:4.7.12\n\nADD ./environment.yml ./environment.yml\n\nRUN conda install -n base -c conda-forge mamba && \\\n    mamba env update -n base -f ./environment.yml && \\\n    conda clean -afy\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 1.333984375,
          "content": "IMAGE := informer\nROOT := $(shell dirname $(realpath $(firstword ${MAKEFILE_LIST})))\nPARENT_ROOT := $(shell dirname ${ROOT})\nPORT := 8888\n\nDOCKER_PARAMETERS := \\\n\t--user $(shell id -u) \\\n\t-v ${ROOT}:/app \\\n\t-w /app \\\n\t-e HOME=/tmp\n\ninit:\n\tdocker build -t ${IMAGE} .\n\ndataset:\n\tmkdir -p data/ETT && \\\n\t\twget -O data/ETT/ETTh1.csv https://raw.githubusercontent.com/zhouhaoyi/ETDataset/main/ETT-small/ETTh1.csv && \\\n\t\twget -O data/ETT/ETTh2.csv https://raw.githubusercontent.com/zhouhaoyi/ETDataset/main/ETT-small/ETTh2.csv && \\\n\t\twget -O data/ETT/ETTm1.csv https://raw.githubusercontent.com/zhouhaoyi/ETDataset/main/ETT-small/ETTm1.csv && \\\n\t\twget -O data/ETT/ETTm2.csv https://raw.githubusercontent.com/zhouhaoyi/ETDataset/main/ETT-small/ETTm2.csv && \\\n\t\twget -O data/ETT/ECL.csv \"https://drive.google.com/uc?export=download&id=1rUPdR7R2iWFW-LMoDdHoO2g4KgnkpFzP\" && \\\n\t\twget -O data/ETT/WTH.csv \"https://drive.google.com/uc?export=download&id=1UBRz-aM_57i_KCC-iaSWoKDPTGGv6EaG\"\n\njupyter:\n\tdocker run -d --rm ${DOCKER_PARAMETERS} -e HOME=/tmp -p ${PORT}:8888 ${IMAGE} \\\n\t\tbash -c \"jupyter lab --ip=0.0.0.0 --no-browser --NotebookApp.token=''\"\n\nrun_module: .require-module\n\tdocker run -i --rm ${DOCKER_PARAMETERS} \\\n\t\t${IMAGE} ${module}\n\nbash_docker:\n\tdocker run -it --rm ${DOCKER_PARAMETERS} ${IMAGE}\n\n.require-module:\nifndef module\n\t$(error module is required)\nendif\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.962890625,
          "content": "# Informer: Beyond Efficient Transformer for Long Sequence Time-Series Forecasting (AAAI'21 Best Paper)\n![Python 3.6](https://img.shields.io/badge/python-3.6-green.svg?style=plastic)\n![PyTorch 1.2](https://img.shields.io/badge/PyTorch%20-%23EE4C2C.svg?style=plastic)\n![cuDNN 7.3.1](https://img.shields.io/badge/cudnn-7.3.1-green.svg?style=plastic)\n![License CC BY-NC-SA](https://img.shields.io/badge/license-CC_BY--NC--SA--green.svg?style=plastic)\n\nThis is the origin Pytorch implementation of Informer in the following paper: \n[Informer: Beyond Efficient Transformer for Long Sequence Time-Series Forecasting](https://arxiv.org/abs/2012.07436). Special thanks to `Jieqi Peng`@[cookieminions](https://github.com/cookieminions) for building this repo.\n\n:triangular_flag_on_post:**News**(Mar 27, 2023): We will release Informer V2 soon.\n\n:triangular_flag_on_post:**News**(Feb 28, 2023): The Informer's [extension paper](https://www.sciencedirect.com/science/article/pii/S0004370223000322) is online on AIJ.\n\n:triangular_flag_on_post:**News**(Mar 25, 2021): We update all experiment [results](#resultslink) with hyperparameter settings.\n\n:triangular_flag_on_post:**News**(Feb 22, 2021): We provide [Colab Examples](#colablink) for friendly usage.\n\n:triangular_flag_on_post:**News**(Feb 8, 2021): Our Informer paper has been awarded [AAAI'21 Best Paper \\[Official\\]](https://aaai.org/Conferences/AAAI-21/aaai-outstanding-and-distinguished-papers/)[\\[Beihang\\]](http://scse.buaa.edu.cn/info/1097/7443.htm)[\\[Rutgers\\]](https://www.business.rutgers.edu/news/hui-xiong-and-research-colleagues-receive-aaai-best-paper-award)! We will continue this line of research and update on this repo. Please star this repo and [cite](#citelink) our paper if you find our work is helpful for you.\n\n<p align=\"center\">\n<img src=\".\\img\\informer.png\" height = \"360\" alt=\"\" align=center />\n<br><br>\n<b>Figure 1.</b> The architecture of Informer.\n</p>\n\n## ProbSparse Attention\nThe self-attention scores form a long-tail distribution, where the \"active\" queries lie in the \"head\" scores and \"lazy\" queries lie in the \"tail\" area. We designed the ProbSparse Attention to select the \"active\" queries rather than the \"lazy\" queries. The ProbSparse Attention with Top-u queries forms a sparse Transformer by the probability distribution.\n`Why not use Top-u keys?` The self-attention layer's output is the re-represent of input. It is formulated as a weighted combination of values w.r.t. the score of dot-product pairs. The top queries with full keys encourage a complete re-represent of leading components in the input, and it is equivalent to selecting the \"head\" scores among all the dot-product pairs. If we choose Top-u keys, the full keys just preserve the trivial sum of values within the \"long tail\" scores but wreck the leading components' re-represent.\n<p align=\"center\">\n<img src=\".\\img\\probsparse_intro.png\" height = \"320\" alt=\"\" align=center />\n<br><br>\n<b>Figure 2.</b> The illustration of ProbSparse Attention.\n</p>\n\n## Requirements\n\n- Python 3.6\n- matplotlib == 3.1.1\n- numpy == 1.19.4\n- pandas == 0.25.1\n- scikit_learn == 0.21.3\n- torch == 1.8.0\n\nDependencies can be installed using the following command:\n```bash\npip install -r requirements.txt\n```\n\n## Data\n\nThe ETT dataset used in the paper can be downloaded in the repo [ETDataset](https://github.com/zhouhaoyi/ETDataset).\nThe required data files should be put into `data/ETT/` folder. A demo slice of the ETT data is illustrated in the following figure. Note that the input of each dataset is zero-mean normalized in this implementation.\n\n<p align=\"center\">\n<img src=\"./img/data.png\" height = \"168\" alt=\"\" align=center />\n<br><br>\n<b>Figure 3.</b> An example of the ETT data.\n</p>\n\nThe ECL data and Weather data can be downloaded here.\n- [Google Drive](https://drive.google.com/drive/folders/1ohGYWWohJlOlb2gsGTeEq3Wii2egnEPR?usp=sharing)\n- [BaiduPan](https://pan.baidu.com/s/1wyaGUisUICYHnfkZzWCwyA), password: 6gan \n\n## Reproducibility\n\nTo easily reproduce the results you can follow the next steps:\n1. Initialize the docker image using: `make init`.\n2. Download the datasets using: `make dataset`.\n3. Run each script in `scripts/` using `make run_module module=\"bash ETTh1.sh\"` for each script.\n4. Alternatively, run all the scripts at once:\n```\nfor file in `ls scripts`; do make run_module module=\"bash scripts/$script\"; done\n```\n\n## Usage\n<span id=\"colablink\">Colab Examples:</span> We provide google colabs to help reproduce and customize our repo, which includes `experiments(train and test)`, `prediction`, `visualization` and `custom data`.\n[![Open In Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/drive/1_X7O2BkFLvqyCdZzDZvV2MB0aAvYALLC)\n\nCommands for training and testing the model with *ProbSparse* self-attention on Dataset ETTh1, ETTh2 and ETTm1 respectively:\n\n```bash\n# ETTh1\npython -u main_informer.py --model informer --data ETTh1 --attn prob --freq h\n\n# ETTh2\npython -u main_informer.py --model informer --data ETTh2 --attn prob --freq h\n\n# ETTm1\npython -u main_informer.py --model informer --data ETTm1 --attn prob --freq t\n```\n\nMore parameter information please refer to `main_informer.py`.\n\nWe provide a more detailed and complete command description for training and testing the model:\n\n```python\npython -u main_informer.py --model <model> --data <data>\n--root_path <root_path> --data_path <data_path> --features <features>\n--target <target> --freq <freq> --checkpoints <checkpoints>\n--seq_len <seq_len> --label_len <label_len> --pred_len <pred_len>\n--enc_in <enc_in> --dec_in <dec_in> --c_out <c_out> --d_model <d_model>\n--n_heads <n_heads> --e_layers <e_layers> --d_layers <d_layers>\n--s_layers <s_layers> --d_ff <d_ff> --factor <factor> --padding <padding>\n--distil --dropout <dropout> --attn <attn> --embed <embed> --activation <activation>\n--output_attention --do_predict --mix --cols <cols> --itr <itr>\n--num_workers <num_workers> --train_epochs <train_epochs>\n--batch_size <batch_size> --patience <patience> --des <des>\n--learning_rate <learning_rate> --loss <loss> --lradj <lradj>\n--use_amp --inverse --use_gpu <use_gpu> --gpu <gpu> --use_multi_gpu --devices <devices>\n```\n\nThe detailed descriptions about the arguments are as following:\n\n| Parameter name | Description of parameter |\n| --- | --- |\n| model | The model of experiment. This can be set to `informer`, `informerstack`, `informerlight(TBD)` |\n| data           | The dataset name                                             |\n| root_path      | The root path of the data file (defaults to `./data/ETT/`)    |\n| data_path      | The data file name (defaults to `ETTh1.csv`)                  |\n| features       | The forecasting task (defaults to `M`). This can be set to `M`,`S`,`MS` (M : multivariate predict multivariate, S : univariate predict univariate, MS : multivariate predict univariate) |\n| target         | Target feature in S or MS task (defaults to `OT`)             |\n| freq           | Freq for time features encoding (defaults to `h`). This can be set to `s`,`t`,`h`,`d`,`b`,`w`,`m` (s:secondly, t:minutely, h:hourly, d:daily, b:business days, w:weekly, m:monthly).You can also use more detailed freq like 15min or 3h |\n| checkpoints    | Location of model checkpoints (defaults to `./checkpoints/`)  |\n| seq_len | Input sequence length of Informer encoder (defaults to 96) |\n| label_len | Start token length of Informer decoder (defaults to 48) |\n| pred_len | Prediction sequence length (defaults to 24) |\n| enc_in | Encoder input size (defaults to 7) |\n| dec_in | Decoder input size (defaults to 7) |\n| c_out | Output size (defaults to 7) |\n| d_model | Dimension of model (defaults to 512) |\n| n_heads | Num of heads (defaults to 8) |\n| e_layers | Num of encoder layers (defaults to 2) |\n| d_layers | Num of decoder layers (defaults to 1) |\n| s_layers | Num of stack encoder layers (defaults to `3,2,1`) |\n| d_ff | Dimension of fcn (defaults to 2048) |\n| factor | Probsparse attn factor (defaults to 5) |\n| padding | Padding type(defaults to 0). |\n| distil | Whether to use distilling in encoder, using this argument means not using distilling (defaults to `True`) |\n| dropout | The probability of dropout (defaults to 0.05) |\n| attn | Attention used in encoder (defaults to `prob`). This can be set to `prob` (informer), `full` (transformer) |\n| embed | Time features encoding (defaults to `timeF`). This can be set to `timeF`, `fixed`, `learned` |\n| activation | Activation function (defaults to `gelu`) |\n| output_attention | Whether to output attention in encoder, using this argument means outputing attention (defaults to `False`) |\n| do_predict | Whether to predict unseen future data, using this argument means making predictions (defaults to `False`) |\n| mix | Whether to use mix attention in generative decoder, using this argument means not using mix attention (defaults to `True`) |\n| cols | Certain cols from the data files as the input features |\n| num_workers | The num_works of Data loader (defaults to 0) |\n| itr | Experiments times (defaults to 2) |\n| train_epochs | Train epochs (defaults to 6) |\n| batch_size | The batch size of training input data (defaults to 32) |\n| patience | Early stopping patience (defaults to 3) |\n| learning_rate | Optimizer learning rate (defaults to 0.0001) |\n| des | Experiment description (defaults to `test`) |\n| loss | Loss function (defaults to `mse`) |\n| lradj | Ways to adjust the learning rate (defaults to `type1`) |\n| use_amp | Whether to use automatic mixed precision training, using this argument means using amp (defaults to `False`) |\n| inverse | Whether to inverse output data, using this argument means inversing output data (defaults to `False`) |\n| use_gpu | Whether to use gpu (defaults to `True`) |\n| gpu | The gpu no, used for training and inference (defaults to 0) |\n| use_multi_gpu | Whether to use multiple gpus, using this argument means using mulitple gpus (defaults to `False`) |\n| devices | Device ids of multile gpus (defaults to `0,1,2,3`) |\n\n\n## <span id=\"resultslink\">Results</span>\n\nWe have updated the experiment results of all methods due to the change in data scaling. We are lucky that Informer gets performance improvement. Thank you @lk1983823 for reminding the data scaling in [issue 41](https://github.com/zhouhaoyi/Informer2020/issues/41).\n\nBesides, the experiment parameters of each data set are formated in the `.sh` files in the directory `./scripts/`. You can refer to these parameters for experiments, and you can also adjust the parameters to obtain better mse and mae results or draw better prediction figures.\n\n<p align=\"center\">\n<img src=\"./img/result_univariate.png\" height = \"500\" alt=\"\" align=center />\n<br><br>\n<b>Figure 4.</b> Univariate forecasting results.\n</p>\n\n<p align=\"center\">\n<img src=\"./img/result_multivariate.png\" height = \"500\" alt=\"\" align=center />\n<br><br>\n<b>Figure 5.</b> Multivariate forecasting results.\n</p>\n\n\n## FAQ\nIf you run into a problem like `RuntimeError: The size of tensor a (98) must match the size of tensor b (96) at non-singleton dimension 1`, you can check torch version or modify code about `Conv1d` of `TokenEmbedding` in `models/embed.py` as the way of circular padding mode in Conv1d changed in different torch versions.\n\n\n## <span id=\"citelink\">Citation</span>\nIf you find this repository useful in your research, please consider citing the following papers:\n\n```\n@article{haoyietal-informerEx-2023,\n  author    = {Haoyi Zhou and\n               Jianxin Li and\n               Shanghang Zhang and\n               Shuai Zhang and\n               Mengyi Yan and\n               Hui Xiong},\n  title     = {Expanding the prediction capacity in long sequence time-series forecasting},\n  journal   = {Artificial Intelligence},\n  volume    = {318},\n  pages     = {103886},\n  issn      = {0004-3702},\n  year      = {2023},\n}\n```\n```\n@inproceedings{haoyietal-informer-2021,\n  author    = {Haoyi Zhou and\n               Shanghang Zhang and\n               Jieqi Peng and\n               Shuai Zhang and\n               Jianxin Li and\n               Hui Xiong and\n               Wancai Zhang},\n  title     = {Informer: Beyond Efficient Transformer for Long Sequence Time-Series Forecasting},\n  booktitle = {The Thirty-Fifth {AAAI} Conference on Artificial Intelligence, {AAAI} 2021, Virtual Conference},\n  volume    = {35},\n  number    = {12},\n  pages     = {11106--11115},\n  publisher = {{AAAI} Press},\n  year      = {2021},\n}\n```\n\n## Contact\nIf you have any questions, feel free to contact Haoyi Zhou through Email (zhouhaoyi1991@gmail.com) or Github issues. Pull requests are highly welcomed!\n\n## Acknowledgments\nThanks for the computing infrastructure provided by Beijing Advanced Innovation Center for Big Data and Brain Computing ([BDBC](http://bdbc.buaa.edu.cn/)).\nAt the same time, thank you all for your attention to this work! [![Hits](https://hits.seeyoufarm.com/api/count/incr/badge.svg?url=https%3A%2F%2Fgithub.com%2Fzhouhaoyi%2FInformer2020&count_bg=%2379C83D&title_bg=%23555555&icon=&icon_color=%23E7E7E7&title=Hits+Count&edge_flat=false)](https://hits.seeyoufarm.com)\n[![Stargazers repo roster for @zhouhaoyi/Informer2020](https://reporoster.com/stars/zhouhaoyi/Informer2020)](https://github.com/zhouhaoyi/Informer2020/stargazers)\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "environment.yml",
          "type": "blob",
          "size": 0.193359375,
          "content": "name: regional_pmm\nchannels:\n  - conda-forge\n  - defaults\ndependencies:\n  - python=3.6\n  - pip\n  - matplotlib==3.1.1\n  - numpy==1.19.4\n  - pandas==0.25.1\n  - scikit-learn==0.21.3\n  - pytorch==1.8.0\n"
        },
        {
          "name": "exp",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "main_informer.py",
          "type": "blob",
          "size": 7.03515625,
          "content": "import argparse\r\nimport os\r\nimport torch\r\n\r\nfrom exp.exp_informer import Exp_Informer\r\n\r\nparser = argparse.ArgumentParser(description='[Informer] Long Sequences Forecasting')\r\n\r\nparser.add_argument('--model', type=str, required=True, default='informer',help='model of experiment, options: [informer, informerstack, informerlight(TBD)]')\r\n\r\nparser.add_argument('--data', type=str, required=True, default='ETTh1', help='data')\r\nparser.add_argument('--root_path', type=str, default='./data/ETT/', help='root path of the data file')\r\nparser.add_argument('--data_path', type=str, default='ETTh1.csv', help='data file')    \r\nparser.add_argument('--features', type=str, default='M', help='forecasting task, options:[M, S, MS]; M:multivariate predict multivariate, S:univariate predict univariate, MS:multivariate predict univariate')\r\nparser.add_argument('--target', type=str, default='OT', help='target feature in S or MS task')\r\nparser.add_argument('--freq', type=str, default='h', help='freq for time features encoding, options:[s:secondly, t:minutely, h:hourly, d:daily, b:business days, w:weekly, m:monthly], you can also use more detailed freq like 15min or 3h')\r\nparser.add_argument('--checkpoints', type=str, default='./checkpoints/', help='location of model checkpoints')\r\n\r\nparser.add_argument('--seq_len', type=int, default=96, help='input sequence length of Informer encoder')\r\nparser.add_argument('--label_len', type=int, default=48, help='start token length of Informer decoder')\r\nparser.add_argument('--pred_len', type=int, default=24, help='prediction sequence length')\r\n# Informer decoder input: concat[start token series(label_len), zero padding series(pred_len)]\r\n\r\nparser.add_argument('--enc_in', type=int, default=7, help='encoder input size')\r\nparser.add_argument('--dec_in', type=int, default=7, help='decoder input size')\r\nparser.add_argument('--c_out', type=int, default=7, help='output size')\r\nparser.add_argument('--d_model', type=int, default=512, help='dimension of model')\r\nparser.add_argument('--n_heads', type=int, default=8, help='num of heads')\r\nparser.add_argument('--e_layers', type=int, default=2, help='num of encoder layers')\r\nparser.add_argument('--d_layers', type=int, default=1, help='num of decoder layers')\r\nparser.add_argument('--s_layers', type=str, default='3,2,1', help='num of stack encoder layers')\r\nparser.add_argument('--d_ff', type=int, default=2048, help='dimension of fcn')\r\nparser.add_argument('--factor', type=int, default=5, help='probsparse attn factor')\r\nparser.add_argument('--padding', type=int, default=0, help='padding type')\r\nparser.add_argument('--distil', action='store_false', help='whether to use distilling in encoder, using this argument means not using distilling', default=True)\r\nparser.add_argument('--dropout', type=float, default=0.05, help='dropout')\r\nparser.add_argument('--attn', type=str, default='prob', help='attention used in encoder, options:[prob, full]')\r\nparser.add_argument('--embed', type=str, default='timeF', help='time features encoding, options:[timeF, fixed, learned]')\r\nparser.add_argument('--activation', type=str, default='gelu',help='activation')\r\nparser.add_argument('--output_attention', action='store_true', help='whether to output attention in ecoder')\r\nparser.add_argument('--do_predict', action='store_true', help='whether to predict unseen future data')\r\nparser.add_argument('--mix', action='store_false', help='use mix attention in generative decoder', default=True)\r\nparser.add_argument('--cols', type=str, nargs='+', help='certain cols from the data files as the input features')\r\nparser.add_argument('--num_workers', type=int, default=0, help='data loader num workers')\r\nparser.add_argument('--itr', type=int, default=2, help='experiments times')\r\nparser.add_argument('--train_epochs', type=int, default=6, help='train epochs')\r\nparser.add_argument('--batch_size', type=int, default=32, help='batch size of train input data')\r\nparser.add_argument('--patience', type=int, default=3, help='early stopping patience')\r\nparser.add_argument('--learning_rate', type=float, default=0.0001, help='optimizer learning rate')\r\nparser.add_argument('--des', type=str, default='test',help='exp description')\r\nparser.add_argument('--loss', type=str, default='mse',help='loss function')\r\nparser.add_argument('--lradj', type=str, default='type1',help='adjust learning rate')\r\nparser.add_argument('--use_amp', action='store_true', help='use automatic mixed precision training', default=False)\r\nparser.add_argument('--inverse', action='store_true', help='inverse output data', default=False)\r\n\r\nparser.add_argument('--use_gpu', type=bool, default=True, help='use gpu')\r\nparser.add_argument('--gpu', type=int, default=0, help='gpu')\r\nparser.add_argument('--use_multi_gpu', action='store_true', help='use multiple gpus', default=False)\r\nparser.add_argument('--devices', type=str, default='0,1,2,3',help='device ids of multile gpus')\r\n\r\nargs = parser.parse_args()\r\n\r\nargs.use_gpu = True if torch.cuda.is_available() and args.use_gpu else False\r\n\r\nif args.use_gpu and args.use_multi_gpu:\r\n    args.devices = args.devices.replace(' ','')\r\n    device_ids = args.devices.split(',')\r\n    args.device_ids = [int(id_) for id_ in device_ids]\r\n    args.gpu = args.device_ids[0]\r\n\r\ndata_parser = {\r\n    'ETTh1':{'data':'ETTh1.csv','T':'OT','M':[7,7,7],'S':[1,1,1],'MS':[7,7,1]},\r\n    'ETTh2':{'data':'ETTh2.csv','T':'OT','M':[7,7,7],'S':[1,1,1],'MS':[7,7,1]},\r\n    'ETTm1':{'data':'ETTm1.csv','T':'OT','M':[7,7,7],'S':[1,1,1],'MS':[7,7,1]},\r\n    'ETTm2':{'data':'ETTm2.csv','T':'OT','M':[7,7,7],'S':[1,1,1],'MS':[7,7,1]},\r\n    'WTH':{'data':'WTH.csv','T':'WetBulbCelsius','M':[12,12,12],'S':[1,1,1],'MS':[12,12,1]},\r\n    'ECL':{'data':'ECL.csv','T':'MT_320','M':[321,321,321],'S':[1,1,1],'MS':[321,321,1]},\r\n    'Solar':{'data':'solar_AL.csv','T':'POWER_136','M':[137,137,137],'S':[1,1,1],'MS':[137,137,1]},\r\n}\r\nif args.data in data_parser.keys():\r\n    data_info = data_parser[args.data]\r\n    args.data_path = data_info['data']\r\n    args.target = data_info['T']\r\n    args.enc_in, args.dec_in, args.c_out = data_info[args.features]\r\n\r\nargs.s_layers = [int(s_l) for s_l in args.s_layers.replace(' ','').split(',')]\r\nargs.detail_freq = args.freq\r\nargs.freq = args.freq[-1:]\r\n\r\nprint('Args in experiment:')\r\nprint(args)\r\n\r\nExp = Exp_Informer\r\n\r\nfor ii in range(args.itr):\r\n    # setting record of experiments\r\n    setting = '{}_{}_ft{}_sl{}_ll{}_pl{}_dm{}_nh{}_el{}_dl{}_df{}_at{}_fc{}_eb{}_dt{}_mx{}_{}_{}'.format(args.model, args.data, args.features, \r\n                args.seq_len, args.label_len, args.pred_len,\r\n                args.d_model, args.n_heads, args.e_layers, args.d_layers, args.d_ff, args.attn, args.factor, \r\n                args.embed, args.distil, args.mix, args.des, ii)\r\n\r\n    exp = Exp(args) # set experiments\r\n    print('>>>>>>>start training : {}>>>>>>>>>>>>>>>>>>>>>>>>>>'.format(setting))\r\n    exp.train(setting)\r\n    \r\n    print('>>>>>>>testing : {}<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<'.format(setting))\r\n    exp.test(setting)\r\n\r\n    if args.do_predict:\r\n        print('>>>>>>>predicting : {}<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<'.format(setting))\r\n        exp.predict(setting, True)\r\n\r\n    torch.cuda.empty_cache()\r\n"
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0888671875,
          "content": "matplotlib == 3.1.1\nnumpy == 1.19.4\npandas == 0.25.1\nscikit_learn == 0.21.3\ntorch == 1.8.0\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}