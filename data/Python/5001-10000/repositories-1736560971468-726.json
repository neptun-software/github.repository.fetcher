{
  "metadata": {
    "timestamp": 1736560971468,
    "page": 726,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjczMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/TaskWeaver",
      "stars": 5445,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".asset",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0166015625,
          "content": "*.sh text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.03515625,
          "content": "auto_eval/evaluator_config.json\n!sample/*.csv\n!tests/blackbox/*.csv\nworkspace/*\nset_env.sh\nsample_case_results.csv\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n*.ipynb\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n.files/\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n# .python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n.idea/\n\n.vscode\n!.vscode/launch.json\n\n.diagnosis_info\ntest_workspace\n/docker/docker.env\n/docker/env.sh\n/docker/plan.org\n/docker/docker-compose.yml\n/web\n# /taskweaver.config\n\n\n# extensions template\ntaskweaver/cli/taskweaver-project.zip\n\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n# Windows thumbnail cache files\nThumbs.db\nThumbs.db:encryptable\nehthumbs.db\nehthumbs_vista.db\n\n# Dump file\n*.stackdump\n\n# Folder config file\n[Dd]esktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msix\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n"
        },
        {
          "name": ".linters",
          "type": "tree",
          "content": null
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.646484375,
          "content": "# Copyright (c) Microsoft Corporation.\n# Licensed under the MIT license.\n\nrepos:\n- repo: https://github.com/myint/autoflake\n  rev: v2.2.1\n  hooks:\n    - id: autoflake\n      args:\n        - --in-place\n        - --remove-unused-variables\n        - --remove-all-unused-imports\n      exclude: .*/__init__\\.py|setup\\.py\n- repo: https://github.com/pycqa/isort\n  rev: 5.12.0\n  hooks:\n    - id: isort\n      args:\n        - --settings-path=.linters/pyproject.toml\n- repo: https://github.com/asottile/add-trailing-comma\n  rev: v3.1.0\n  hooks:\n    - id: add-trailing-comma\n      name: add-trailing-comma (1st round)\n      args:\n        - --py36-plus\n- repo: https://github.com/psf/black\n  rev: 23.11.0\n  hooks:\n    - id: black\n      name: black (1st round)\n      args:\n        - --config=.linters/pyproject.toml\n- repo: https://github.com/asottile/add-trailing-comma\n  rev: v3.1.0\n  hooks:\n    - id: add-trailing-comma\n      name: add-trailing-comma (2nd round)\n      args:\n        - --py36-plus\n- repo: https://github.com/psf/black\n  rev: 23.11.0\n  hooks:\n    - id: black\n      name: black (2nd round)\n      args:\n        - --config=.linters/pyproject.toml\n- repo: https://github.com/pycqa/flake8\n  rev: 6.1.0\n  hooks:\n    - id: flake8\n      args:\n        - --config=.linters/tox.ini\n      exclude: \\.git|__pycache__|docs|build|dist|.*\\.egg-info|docker_files|\\.vscode|\\.github|scripts|tests|maro\\/backends\\/.*.cp|setup.py\n- repo: https://github.com/gitleaks/gitleaks\n  rev: v8.18.1\n  hooks:\n    - id: gitleaks\n- repo: https://github.com/Yelp/detect-secrets\n  rev: v1.4.0\n  hooks:\n    - id: detect-secrets\n      args: ['--baseline', \n          '.secrets.baseline']\n      exclude: package.lock.json"
        },
        {
          "name": ".secrets.baseline",
          "type": "blob",
          "size": 2.2587890625,
          "content": "{\n  \"version\": \"1.4.0\",\n  \"plugins_used\": [\n    {\n      \"name\": \"ArtifactoryDetector\"\n    },\n    {\n      \"name\": \"AWSKeyDetector\"\n    },\n    {\n      \"name\": \"AzureStorageKeyDetector\"\n    },\n    {\n      \"name\": \"Base64HighEntropyString\",\n      \"limit\": 4.5\n    },\n    {\n      \"name\": \"BasicAuthDetector\"\n    },\n    {\n      \"name\": \"CloudantDetector\"\n    },\n    {\n      \"name\": \"DiscordBotTokenDetector\"\n    },\n    {\n      \"name\": \"GitHubTokenDetector\"\n    },\n    {\n      \"name\": \"HexHighEntropyString\",\n      \"limit\": 3.0\n    },\n    {\n      \"name\": \"IbmCloudIamDetector\"\n    },\n    {\n      \"name\": \"IbmCosHmacDetector\"\n    },\n    {\n      \"name\": \"JwtTokenDetector\"\n    },\n    {\n      \"name\": \"KeywordDetector\",\n      \"keyword_exclude\": \"key\"\n    },\n    {\n      \"name\": \"MailchimpDetector\"\n    },\n    {\n      \"name\": \"NpmDetector\"\n    },\n    {\n      \"name\": \"PrivateKeyDetector\"\n    },\n    {\n      \"name\": \"SendGridDetector\"\n    },\n    {\n      \"name\": \"SlackDetector\"\n    },\n    {\n      \"name\": \"SoftlayerDetector\"\n    },\n    {\n      \"name\": \"SquareOAuthDetector\"\n    },\n    {\n      \"name\": \"StripeDetector\"\n    },\n    {\n      \"name\": \"TwilioKeyDetector\"\n    }\n  ],\n  \"filters_used\": [\n    {\n      \"path\": \"detect_secrets.filters.allowlist.is_line_allowlisted\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.common.is_baseline_file\",\n      \"filename\": \".secrets.baseline\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.common.is_ignored_due_to_verification_policies\",\n      \"min_level\": 2\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_indirect_reference\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_likely_id_string\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_lock_file\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_not_alphanumeric_string\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_potential_uuid\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_prefixed_with_dollar_sign\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_sequential_string\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_swagger_file\"\n    },\n    {\n      \"path\": \"detect_secrets.filters.heuristic.is_templated_secret\"\n    }\n  ],\n  \"results\": {\n  },\n  \"generated_at\": \"2023-12-11T05:53:20Z\"\n}\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.43359375,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.9111328125,
          "content": "# Contributing\r\n\r\nThis project welcomes contributions and suggestions. Most contributions require you to\r\nagree to a Contributor License Agreement (CLA) declaring that you have the right to,\r\nand actually do, grant us the rights to use your contribution. For details, visit\r\nhttps://cla.microsoft.com.\r\n\r\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need\r\nto provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the\r\ninstructions provided by the bot. You will only need to do this once across all repositories using our CLA.\r\n\r\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\r\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\r\nor contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.1142578125,
          "content": "    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.4912109375,
          "content": "<h1 align=\"center\">\r\n    <img src=\"./.asset/logo.color.svg\" width=\"45\" /> TaskWeaver\r\n</h1>\r\n\r\n<div align=\"center\">\r\n\r\n[![Discord Follow](https://dcbadge.vercel.app/api/server/Z56MXmZgMb?style=flat)](https://discord.gg/Z56MXmZgMb) &ensp;\r\n![Python Version](https://img.shields.io/badge/Python-3776AB?&logo=python&logoColor=white-blue&label=3.10%20%7C%203.11)&ensp;\r\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)&ensp;\r\n![Welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)\r\n\r\n</div>\r\n\r\nTaskWeaver is A **code-first** agent framework for seamlessly planning and executing data analytics tasks. \r\nThis innovative framework interprets user requests through code snippets and efficiently coordinates a variety \r\nof plugins in the form of functions to execute data analytics tasks in a stateful manner.\r\n\r\nUnlike many agent frameworks that only track the chat history with LLMs in text, TaskWeaver preserves both the **chat history** and the **code execution history**, including the in-memory data. This feature enhances the *expressiveness* of the agent framework, making it ideal for processing complex data structures like high-dimensional tabular data.\r\n\r\n<h1 align=\"center\">\r\n    <img src=\"./.asset/taskweaver_arch.png\"/> \r\n</h1>\r\n\r\n\r\n## 🆕 News\r\n- 📅2024-12-23: TaskWeaver has been integrated with the [AgentOps](https://microsoft.github.io/TaskWeaver/docs/observability) for better observability and monitoring.🔍\r\n- 📅2024-09-13: We introduce the shared memory to store information that is shared between the roles in TaskWeaver. Please check the [memory](https://microsoft.github.io/TaskWeaver/docs/memory) for more details.🧠\r\n- 📅2024-09-13: We have enhanced the experience feature by allowing static and dynamic experience selection. Please check the [experience](https://microsoft.github.io/TaskWeaver/blog/experience) for more details.📚 \r\n- 📅2024-07-02: We have optimized TaskWeaver to support not-that-large language models served locally. Please check this [post](https://microsoft.github.io/TaskWeaver/blog/local_llm) for more details.🔗\r\n- 📅2024-05-07: We have added two blog posts on [Evaluating a LLM agent](https://microsoft.github.io/TaskWeaver/blog/evaluation) and [Adding new roles to TaskWeaver](https://microsoft.github.io/TaskWeaver/blog/role) in the documentation.📝\r\n- 📅2024-03-28: TaskWeaver now offers all-in-one Docker image, providing a convenient one-stop experience for users. Please check the [docker](https://microsoft.github.io/TaskWeaver/docs/usage/docker) for more details.🐳\r\n- 📅2024-03-27: TaskWeaver now switches to `container` mode by default for code execution. Please check the [code execution](https://microsoft.github.io/TaskWeaver/docs/code_execution) for more details.🐳\r\n- 📅2024-03-07: TaskWeaver now supports configuration of different LLMs for various components, such as the Planner and CodeInterpreter. Please check the [multi-llm](https://microsoft.github.io/TaskWeaver/docs/llms/multi-llm) for more details.🔗\r\n- 📅2024-03-04: TaskWeaver now supports a [container](https://microsoft.github.io/TaskWeaver/docs/code_execution) mode, which provides a more secure environment for code execution.🐳\r\n<!-- - 📅2024-02-28: TaskWeaver now offers a [CLI-only](https://microsoft.github.io/TaskWeaver/docs/advanced/cli_only) mode, enabling users to interact seamlessly with the Command Line Interface (CLI) using natural language.📟 -->\r\n<!-- - 📅2024-02-01: TaskWeaver now has a plugin [document_retriever](https://github.com/microsoft/TaskWeaver/blob/main/project/plugins/README.md#document_retriever) for RAG based on a knowledge base.📚 -->\r\n<!-- - 📅2024-01-30: TaskWeaver introduces a new plugin-only mode that securely generates calls to specified plugins without producing extraneous code.🪡 --> \r\n<!-- - 📅2024-01-23: TaskWeaver can now be personalized by transforming your chat histories into enduring [experiences](https://microsoft.github.io/TaskWeaver/docs/customization/experience) 🎉 -->\r\n<!-- - 📅2024-01-17: TaskWeaver now has a plugin [vision_web_explorer](https://github.com/microsoft/TaskWeaver/blob/main/project/plugins/README.md#vision_web_explorer) that can open a web browser and explore websites.🌐 -->\r\n<!-- - 📅2024-01-15: TaskWeaver now supports Streaming♒ in both UI and command line.✌️ -->\r\n<!-- - 📅2024-01-01: Welcome join TaskWeaver [Discord](https://discord.gg/Z56MXmZgMb). -->\r\n<!-- - 📅2023-12-21: TaskWeaver now supports a number of LLMs, such as LiteLLM, Ollama, Gemini, and QWen🎈.) -->\r\n<!-- - 📅2023-12-21: TaskWeaver Website is now [available]&#40;https://microsoft.github.io/TaskWeaver/&#41; with more documentations.) -->\r\n<!-- - 📅2023-12-12: A simple UI demo is available in playground/UI folder, try it [here](https://microsoft.github.io/TaskWeaver/docs/usage/webui)! -->\r\n<!-- - 📅2023-11-30: TaskWeaver is released on GitHub🎈.  -->\r\n\r\n\r\n## 💥 Highlights\r\n\r\n- [x] **Rich data structure** - TaskWeaver allows you to work with rich data structures in Python, such as DataFrames, instead of dealing with strings.\r\n- [x] **Customized algorithms** - TaskWeaver allows you to encapsulate your own algorithms into plugins and orchestrate them.\r\n- [x] **Incorporating domain-specific knowledge** - TaskWeaver is designed to incorporate domain-specific knowledge easily to improve the reliability.\r\n- [x] **Stateful execution** - TaskWeaver is designed to support stateful execution of the generated code to ensure consistent and smooth user experience.\r\n- [x] **Code verification** - TaskWeaver is designed to verify the generated code before execution. It can detect potential issues in the generated code and provide suggestions to fix them.\r\n- [x] **Easy to use** - TaskWeaver is easy to use with sample plugins, examples and tutorials to help you get started. TaskWeaver offers an open-box experience, allowing users to run it immediately after installation.\r\n- [x] **Easy to debug** - TaskWeaver is easy to debug with detailed and transparent logs to help you understand the entire process, including LLM prompts, the code generation, and execution process.\r\n- [x] **Security consideration** - TaskWeaver supports a basic session management to keep different users' data separate. The code execution is separated into different processes to avoid mutal interference.\r\n- [x] **Easy extension** - TaskWeaver is easy to extend to accomplish more complex tasks with multiple agents as the plugins.\r\n\r\n## ✨ Quick Start\r\n\r\n### 🛠️ Step 1: Installation\r\nTaskWeaver requires **Python >= 3.10**. It can be installed by running the following command:\r\n```bash\r\n# [optional to create conda environment]\r\n# conda create -n taskweaver python=3.10\r\n# conda activate taskweaver\r\n\r\n# clone the repository\r\ngit clone https://github.com/microsoft/TaskWeaver.git\r\ncd TaskWeaver\r\n# install the requirements\r\npip install -r requirements.txt\r\n```\r\n\r\nIf you want to install an earlier version of TaskWeaver, you may check the [release](https://github.com/microsoft/TaskWeaver/releases) page, find the tag (e.g., `v0.0.1`) and install it by \r\n```\r\npip install git+https://github.com/microsoft/TaskWeaver@<TAG>\r\n```\r\n\r\n### 🖊️ Step 2: Configure the LLMs\r\nBefore running TaskWeaver, you need to provide your LLM configurations. Taking OpenAI as an example, you can configure `taskweaver_config.json` file as follows. \r\n\r\n#### OpenAI\r\n```json\r\n{\r\n  \"llm.api_key\": \"the api key\",\r\n  \"llm.model\": \"the model name, e.g., gpt-4\"\r\n}\r\n```\r\n\r\n💡 TaskWeaver also supports other LLMs and advanced configurations, please check the [documents](https://microsoft.github.io/TaskWeaver/docs/overview) for more details. \r\n\r\n### 🚩 Step 3: Start TaskWeaver\r\n\r\n💡 TaskWeaver has switched to `container` mode by default for code execution, which means the code is run in a container.\r\nYou may need to install Docker and take care of the dependencies in the container.\r\nPlease check the [code execution](https://microsoft.github.io/TaskWeaver/docs/code_execution) for more details.\r\n\r\n#### ⌨️ Command Line (CLI)\r\n```bash\r\n# assume you are in the cloned TaskWeaver folder\r\npython -m taskweaver -p ./project/\r\n```\r\nThis will start the TaskWeaver process and you can interact with it through the command line interface. \r\nIf everything goes well, you will see the following prompt:\r\n\r\n```\r\n=========================================================\r\n _____         _     _       __\r\n|_   _|_ _ ___| | _ | |     / /__  ____ __   _____  _____\r\n  | |/ _` / __| |/ /| | /| / / _ \\/ __ `/ | / / _ \\/ ___/\r\n  | | (_| \\__ \\   < | |/ |/ /  __/ /_/ /| |/ /  __/ /\r\n  |_|\\__,_|___/_|\\_\\|__/|__/\\___/\\__,_/ |___/\\___/_/\r\n=========================================================\r\nTaskWeaver: I am TaskWeaver, an AI assistant. To get started, could you please enter your request?\r\nHuman: ___\r\n```\r\n\r\n####  or 💻 Web UI \r\nTaskWeaver also supports WebUI for demo purpose, please refer to [web UI docs](https://microsoft.github.io/TaskWeaver/docs/usage/webui) for more details.\r\n\r\n#### or 📋 Import as a Library\r\nTaskWeaver can be imported as a library to integrate with your existing project, more information can be found in [docs](https://microsoft.github.io/TaskWeaver/docs/usage/library)\r\n\r\n\r\n\r\n## 📖 Documentation\r\nMore documentations can be found on [TaskWeaver Website](https://microsoft.github.io/TaskWeaver).\r\n\r\n\r\n### ❓Get help \r\n* ❔GitHub Issues (**Preferred**)\r\n* [💬 Discord](https://discord.gg/Z56MXmZgMb) for discussion\r\n* For other communications, please contact taskweaver@microsoft.com\r\n\r\n---\r\n\r\n\r\n## 🎬 Demo Examples\r\n\r\nThe demos were made based on the [web UI](https://microsoft.github.io/TaskWeaver/docs/usage/webui), which is better for displaying the generated artifacts such as images. \r\nThe demos could also be conducted in the command line interface. \r\n\r\n#### 1️⃣📉 Example 1: Pull data from a database and apply an anomaly detection algorithm\r\nIn this example, we will show you how to use TaskWeaver to pull data from a database and apply an anomaly detection algorithm.\r\n\r\n[Anomaly Detection](https://github.com/microsoft/TaskWeaver/assets/7489260/248b9a0c-d504-4708-8c2e-e004689ee8c6)\r\n\r\nIf you want to follow this example, you need to configure the `sql_pull_data` plugin in the `project/plugins/sql_pull_data.yaml` file.\r\nYou need to provide the following information:\r\n```yaml\r\napi_type: azure or openai\r\napi_base: ...\r\napi_key: ...\r\napi_version: ...\r\ndeployment_name: ...\r\nsqlite_db_path: sqlite:///../../../sample_data/anomaly_detection.db\r\n```\r\nThe `sql_pull_data` plugin is a plugin that pulls data from a database. It takes a natural language request as input and returns a DataFrame as output.\r\n\r\nThis plugin is implemented based on [Langchain](https://www.langchain.com/).\r\nIf you want to follow this example, you need to install the Langchain package:\r\n```bash\r\npip install langchain\r\npip install tabulate\r\n```\r\n\r\n#### 2️⃣🏦 Example 2: Forecast QQQ's price in the next 7 days\r\nIn this example, we will show you how to use TaskWeaver to forecast QQQ's price in the next 7 days. \r\n\r\n[Nasdaq 100 Index Price Forecasting](https://github.com/microsoft/TaskWeaver/assets/7489260/1361ed83-16c3-4056-98fc-e0496ecab015)\r\n\r\nIf you want to follow this example, you need to ensure you have these two requirements installed:\r\n```bash\r\npip install yfinance\r\npip install statsmodels\r\n```\r\n\r\nFor more examples, please refer to our [paper](http://export.arxiv.org/abs/2311.17541). \r\n\r\n> 💡 The planning of TaskWeaver are based on the LLM model. Therefore, if you want to repeat the examples, the execution process may be different\r\n> from what you see in the videos. For example, in the second demo, the assistant may ask the user which prediction algorithm should be used.\r\n> Typically, more concrete prompts will help the model to generate better plans and code.\r\n\r\n\r\n## 📚 Citation\r\nOur paper could be found [here](http://export.arxiv.org/abs/2311.17541). \r\nIf you use TaskWeaver in your research, please cite our paper:\r\n```\r\n@article{taskweaver,\r\n  title={TaskWeaver: A Code-First Agent Framework},\r\n  author={Bo Qiao, Liqun Li, Xu Zhang, Shilin He, Yu Kang, Chaoyun Zhang, Fangkai Yang, Hang Dong, Jue Zhang, Lu Wang, Minghua Ma, Pu Zhao, Si Qin, Xiaoting Qin, Chao Du, Yong Xu, Qingwei Lin, Saravan Rajmohan, Dongmei Zhang},\r\n  journal={arXiv preprint arXiv:2311.17541},\r\n  year={2023}\r\n}\r\n```\r\n\r\n\r\n## Trademarks\r\n\r\nThis project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft \r\ntrademarks or logos is subject to and must follow \r\n[Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).\r\nUse of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.\r\nAny use of third-party trademarks or logos are subject to those third-party's policies.\r\n\r\n## Disclaimer\r\nThe recommended models in this Repo are just examples, used to explore the potential of agent systems with the paper at [TaskWeaver: A Code-First Agent Framework](https://export.arxiv.org/abs/2311.17541). Users can replace the models in this Repo according to their needs. When using the recommended models in this Repo, you need to comply with the licenses of these models respectively. Microsoft shall not be held liable for any infringement of third-party rights resulting from your usage of this repo. Users agree to defend, indemnify and hold Microsoft harmless from and against all damages, costs, and attorneys' fees in connection with any claims arising from this Repo. If anyone believes that this Repo infringes on your rights, please notify the project owner email.\r\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.59375,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.9 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet) and [Xamarin](https://github.com/xamarin).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/security.md/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/security.md/msrc/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/security.md/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/security.md/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "SUPPORT.md",
          "type": "blob",
          "size": 1.21484375,
          "content": "# TODO: The maintainer of this repo has not yet edited this file\r\n\r\n**REPO OWNER**: Do you want Customer Service & Support (CSS) support for this product/project?\r\n\r\n- **No CSS support:** Fill out this template with information about how to file issues and get help.\r\n- **Yes CSS support:** Fill out an intake form at [aka.ms/onboardsupport](https://aka.ms/onboardsupport). CSS will work with/help you to determine next steps.\r\n- **Not sure?** Fill out an intake as though the answer were \"Yes\". CSS will help you decide.\r\n\r\n*Then remove this first heading from this SUPPORT.MD file before publishing your repo.*\r\n\r\n# Support\r\n\r\n## How to file issues and get help  \r\n\r\nThis project uses GitHub Issues to track bugs and feature requests. Please search the existing \r\nissues before filing new issues to avoid duplicates.  For new issues, file your bug or \r\nfeature request as a new Issue.\r\n\r\nFor help and questions about using this project, please **REPO MAINTAINER: INSERT INSTRUCTIONS HERE \r\nFOR HOW TO ENGAGE REPO OWNERS OR COMMUNITY FOR HELP. COULD BE A STACK OVERFLOW TAG OR OTHER\r\nCHANNEL. WHERE WILL YOU HELP PEOPLE?**.\r\n\r\n## Microsoft Support Policy  \r\n\r\nSupport for this **PROJECT or PRODUCT** is limited to the resources listed above.\r\n"
        },
        {
          "name": "auto_eval",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "playground",
          "type": "tree",
          "content": null
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.0947265625,
          "content": "[pytest]\nmarkers =\n    app_config: mark a test that requires the app config\ntestpaths =\n    tests"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.384765625,
          "content": "numpy>=1.24.2\npandas>=2.0.0\nmatplotlib>=3.4\nseaborn>=0.11\npython-dotenv>=1.0.0\nopenai>=1.42.0\npydantic>=2.8.2\npyyaml>=6.0\nscikit-learn>=1.2.2\nclick>=8.0.1\nurllib3>=1.26.17\njsonschema==4.20.0\ninjector>=0.21.0\nijson>=3.2.3\nrequests>=2.31.0\ndocker>=7.0.0\n\n# Code Execution related\nipykernel==6.26.0\n\npre-commit>=2.19.0\ntenacity>=8.2.2\nplotly>=5.14.1\npytest>=7.0.0\nvcrpy>=5.0.0\ncolorama>=0.4.6\n\n\n\n\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.091796875,
          "content": "import os\nimport re\n\nimport setuptools\nfrom scripts.get_package_version import get_package_version\n\n\ndef update_version_file(version: str):\n    # Extract the version from the init file.\n    VERSIONFILE = \"taskweaver/__init__.py\"\n    with open(VERSIONFILE, \"rt\") as f:\n        raw_content = f.read()\n\n    content = re.sub(r\"__version__ = [\\\"'][^']*[\\\"']\", f'__version__ = \"{version}\"', raw_content)\n    with open(VERSIONFILE, \"wt\") as f:\n        f.write(content)\n\n    def revert():\n        with open(VERSIONFILE, \"wt\") as f:\n            f.write(raw_content)\n\n    return revert\n\n\nversion_str = get_package_version()\nrevert_version_file = update_version_file(version_str)\n\n# Configurations\nwith open(\"README.md\", \"r\", encoding=\"utf-8\", errors=\"ignore\") as fh:\n    long_description = fh.read()\n\n\n# create zip file for ext\ndef create_zip_file():\n    import zipfile\n    from pathlib import Path\n\n    root_dir = Path(__file__).parent\n    ext_zip_file = root_dir / \"taskweaver\" / \"cli\" / \"taskweaver-project.zip\"\n    if os.path.exists(ext_zip_file):\n        os.remove(ext_zip_file)\n\n    content_root = root_dir / \"project\"\n    zipf = zipfile.ZipFile(ext_zip_file, \"w\", zipfile.ZIP_DEFLATED)\n    for root, dirs, files in os.walk(content_root):\n        for file in files:\n            zipf.write(\n                os.path.join(root, file),\n                os.path.relpath(Path(root) / file, root_dir),\n            )\n    zipf.close()\n\n\ncreate_zip_file()\n\ncur_dir = os.path.dirname(\n    os.path.abspath(\n        __file__,\n    ),\n)\n\nrequired_packages = []\nwith open(os.path.join(cur_dir, \"requirements.txt\"), \"r\") as f:\n    for line in f:\n        if line.startswith(\"#\"):\n            continue\n        else:\n            package = line.strip()\n            if \"whl\" in package:\n                continue\n            required_packages.append(package)\n# print(required_packages)\n\npackages = [\n    *setuptools.find_packages(),\n]\n\ntry:\n    setuptools.setup(\n        install_requires=required_packages,  # Dependencies\n        extras_require={},\n        # Minimum Python version\n        python_requires=\">=3.10\",\n        name=\"taskweaver\",  # Package name\n        version=version_str,  # Version\n        author=\"Microsoft Taskweaver\",  # Author name\n        author_email=\"taskweaver@microsoft.com\",  # Author mail\n        description=\"Python package taskweaver\",  # Short package description\n        # Long package description\n        long_description=long_description,\n        long_description_content_type=\"text/markdown\",\n        # Searches throughout all dirs for files to include\n        packages=packages,\n        # Must be true to include files depicted in MANIFEST.in\n        # include_package_data=True,\n        license_files=[\"LICENSE\"],  # License file\n        classifiers=[\n            \"Programming Language :: Python :: 3\",\n            \"Operating System :: OS Independent\",\n        ],\n        package_data={\n            \"taskweaver\": [\"**/*.yaml\", \"**/*.yml\"],\n            \"taskweaver.cli\": [\"taskweaver-project.zip\"],\n        },\n        entry_points={\n            \"console_scripts\": [\"taskweaver=taskweaver.__main__:main\"],\n        },\n    )\nfinally:\n    revert_version_file()\n"
        },
        {
          "name": "taskweaver",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tracing",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.json",
          "type": "blob",
          "size": 0.05078125,
          "content": "{\n  \"prod\": \"0.0.12\",\n  \"main\": \"a0\",\n  \"dev\": \"\"\n}\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}