{
  "metadata": {
    "timestamp": 1736561020193,
    "page": 783,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "donnemartin/saws",
      "stars": 5256,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitchangelog.rc",
          "type": "blob",
          "size": 6.0859375,
          "content": "##\n## Format\n##\n##   ACTION: [AUDIENCE:] COMMIT_MSG [!TAG ...]\n##\n## Description\n##\n##   ACTION is one of 'chg', 'fix', 'new'\n##\n##       Is WHAT the change is about.\n##\n##       'chg' is for refactor, small improvement, cosmetic changes...\n##       'fix' is for bug fixes\n##       'new' is for new features, big improvement\n##\n##   AUDIENCE is optional and one of 'dev', 'usr', 'pkg', 'test', 'doc'\n##\n##       Is WHO is concerned by the change.\n##\n##       'dev'  is for developpers (API changes, refactors...)\n##       'usr'  is for final users (UI changes)\n##       'pkg'  is for packagers   (packaging changes)\n##       'test' is for testers     (test only related changes)\n##       'doc'  is for doc guys    (doc only changes)\n##\n##   COMMIT_MSG is ... well ... the commit message itself.\n##\n##   TAGs are additionnal adjective as 'refactor' 'minor' 'cosmetic'\n##\n##       They are preceded with a '!' or a '@' (prefer the former, as the\n##       latter is wrongly interpreted in github.) Commonly used tags are:\n##\n##       'refactor' is obviously for refactoring code only\n##       'minor' is for a very meaningless change (a typo, adding a comment)\n##       'cosmetic' is for cosmetic driven change (re-indentation, 80-col...)\n##       'wip' is for partial functionality but complete subfunctionality.\n##\n## Example:\n##\n##   new: usr: support of bazaar implemented\n##   chg: re-indentend some lines !cosmetic\n##   new: dev: updated code to be compatible with last version of killer lib.\n##   fix: pkg: updated year of licence coverage.\n##   new: test: added a bunch of test around user usability of feature X.\n##   fix: typo in spelling my name in comment. !minor\n##\n##   Please note that multi-line commit message are supported, and only the\n##   first line will be considered as the \"summary\" of the commit message. So\n##   tags, and other rules only applies to the summary.  The body of the commit\n##   message will be displayed in the changelog without reformatting.\n\n\n##\n## ``ignore_regexps`` is a line of regexps\n##\n## Any commit having its full commit message matching any regexp listed here\n## will be ignored and won't be reported in the changelog.\n##\nignore_regexps = [\n        r'@minor', r'!minor',\n        r'@cosmetic', r'!cosmetic',\n        r'@refactor', r'!refactor',\n        r'@wip', r'!wip',\n        r'^([cC]hg|[fF]ix|[nN]ew)\\s*:\\s*[p|P]kg:',\n        r'^([cC]hg|[fF]ix|[nN]ew)\\s*:\\s*[d|D]ev:',\n        r'^(.{3,3}\\s*:)?\\s*[fF]irst commit.?\\s*$',\n  ]\n\n\n## ``section_regexps`` is a list of 2-tuples associating a string label and a\n## list of regexp\n##\n## Commit messages will be classified in sections thanks to this. Section\n## titles are the label, and a commit is classified under this section if any\n## of the regexps associated is matching.\n##\nsection_regexps = [\n    ('New', [\n\tr'^[nN]ew\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n    ('Changes', [\n        r'^[cC]hg\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n    ('Fix', [\n        r'^[fF]ix\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n]*)$',\n     ]),\n\n    ('Other', None ## Match all lines\n     ),\n\n]\n\n\n## ``body_process`` is a callable\n##\n## This callable will be given the original body and result will\n## be used in the changelog.\n##\n## Available constructs are:\n##\n##   - any python callable that take one txt argument and return txt argument.\n##\n##   - ReSub(pattern, replacement): will apply regexp substitution.\n##\n##   - Indent(chars=\"  \"): will indent the text with the prefix\n##     Please remember that template engines gets also to modify the text and\n##     will usually indent themselves the text if needed.\n##\n##   - Wrap(regexp=r\"\\n\\n\"): re-wrap text in separate paragraph to fill 80-Columns\n##\n##   - noop: do nothing\n##\n##   - ucfirst: ensure the first letter is uppercase.\n##     (usually used in the ``subject_process`` pipeline)\n##\n##   - final_dot: ensure text finishes with a dot\n##     (usually used in the ``subject_process`` pipeline)\n##\n##   - strip: remove any spaces before or after the content of the string\n##\n## Additionally, you can `pipe` the provided filters, for instance:\n#body_process = Wrap(regexp=r'\\n(?=\\w+\\s*:)') | Indent(chars=\"  \")\n#body_process = Wrap(regexp=r'\\n(?=\\w+\\s*:)')\n#body_process = noop\nbody_process = ReSub(r'((^|\\n)[A-Z]\\w+(-\\w+)*: .*(\\n\\s+.*)*)+$', r'') | strip\n\n\n## ``subject_process`` is a callable\n##\n## This callable will be given the original subject and result will\n## be used in the changelog.\n##\n## Available constructs are those listed in ``body_process`` doc.\nsubject_process = (strip |\n    ReSub(r'^([cC]hg|[fF]ix|[nN]ew)\\s*:\\s*((dev|use?r|pkg|test|doc)\\s*:\\s*)?([^\\n@]*)(@[a-z]+\\s+)*$', r'\\4') |\n    ucfirst | final_dot)\n\n\n## ``tag_filter_regexp`` is a regexp\n##\n## Tags that will be used for the changelog must match this regexp.\n##\ntag_filter_regexp = r'^[0-9]+\\.[0-9]+(\\.[0-9]+)?$'\n\n\n## ``unreleased_version_label`` is a string\n##\n## This label will be used as the changelog Title of the last set of changes\n## between last valid tag and HEAD if any.\nunreleased_version_label = \"%%version%% (unreleased)\"\n\n\n## ``output_engine`` is a callable\n##\n## This will change the output format of the generated changelog file\n##\n## Available choices are:\n##\n##   - rest_py\n##\n##        Legacy pure python engine, outputs ReSTructured text.\n##        This is the default.\n##\n##   - mustache(<template_name>)\n##\n##        Template name could be any of the available templates in\n##        ``templates/mustache/*.tpl``.\n##        Requires python package ``pystache``.\n##        Examples:\n##           - mustache(\"markdown\")\n##           - mustache(\"restructuredtext\")\n##\n##   - makotemplate(<template_name>)\n##\n##        Template name could be any of the available templates in\n##        ``templates/mako/*.tpl``.\n##        Requires python package ``mako``.\n##        Examples:\n##           - makotemplate(\"restructuredtext\")\n##\noutput_engine = rest_py\n#output_engine = mustache(\"restructuredtext\")\n#output_engine = mustache(\"markdown\")\n#output_engine = makotemplate(\"restructuredtext\")\n\n\n## ``include_merge`` is a boolean\n##\n## This option tells git-log whether to include merge commits in the log.\n## The default is to include them.\ninclude_merge = True"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4521484375,
          "content": "*.py[cod]\n\n# C extensions\n*.so\n\n# Packages\n*.egg\n*.egg-info\ndist\neggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\nlib\nlib64\n__pycache__\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\nnosetests.xml\n\n# Translations\n*.mo\n\n# Sphinx documentation\ndocs/build/\n\n# Mr Developer\n.mr.developer.cfg\n.project\n.pydevproject\n\n.idea/\n*.pyc\n*.egg-info/\n*env/\n.tox/\ndist/\n.DS_Store\n\nscreenshots/\nscratch/\nsaws/data/RESOURCES*.txt\nCHANGELOG_DRAFT\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2060546875,
          "content": "language: python\nmatrix:\n  include:\n    - python: 2.7\n      env: TOXENV=py27\n    - python: 3.6\n      env: TOXENV=py36\ninstall:\n  - travis_retry pip install tox codecov\nscript:\n  - tox\nafter_success:\n  - codecov\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 7.052734375,
          "content": "![](http://i.imgur.com/vzC5zmA.gif)\n\n[![Build Status](https://travis-ci.org/donnemartin/saws.svg?branch=master)](https://travis-ci.org/donnemartin/saws) [![Documentation Status](https://readthedocs.org/projects/saws/badge/?version=latest)](http://saws.readthedocs.org/en/latest/?badge=latest) [![Dependency Status](https://gemnasium.com/donnemartin/saws.svg)](https://gemnasium.com/donnemartin/saws)\n\n[![PyPI version](https://badge.fury.io/py/saws.svg)](http://badge.fury.io/py/saws) [![PyPI](https://img.shields.io/pypi/pyversions/saws.svg)](https://pypi.python.org/pypi/saws/) [![License](http://img.shields.io/:license-apache-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\n\nSAWS\n====\n\nTo view the latest `README`, `docs`, and `code` visit the GitHub repo:\n\nhttps://github.com/donnemartin/saws\n\nTo submit bugs or feature requests, visit the issue tracker:\n\nhttps://github.com/donnemartin/saws/issues\n\nChangelog\n=========\n\n0.4.2 (2017-04-08)\n------------------\n\n### Bug Fixes\n\n* [#90](https://github.com/donnemartin/saws/pull/90) - Fix `Sphinx` document generation issues.\n\n### Updates\n\n* Update list of commands.\n* [#92](https://github.com/donnemartin/saws/pull/92) - Update `feed_key to feed and process_keys for `prompt-toolkit` v1.0.1+.\n\n0.4.1 (2015-05-31)\n------------------\n\n### Bug Fixes\n\n* [#83](https://github.com/donnemartin/saws/pull/83) - Update to `prompt-toolkit` 1.0.0, which includes a number of performance improvements (especially noticeable on Windows) and bug fixes.\n\n### Updates\n\n* [#75](https://github.com/donnemartin/saws/pull/75), [#76](https://github.com/donnemartin/saws/pull/76) - Fix groff install and follow Dockerfile best practices.\n* [#85](https://github.com/donnemartin/saws/pull/85) - Update packaging dependencies based on semantic versioning.\n* [#86](https://github.com/donnemartin/saws/pull/86) - Fix linter issues regarding imports.\n* Update list of commands.\n* Update INSTALLATION:\n    * Add install from SOURCE.\n    * Add note about OS X 10.11 pip issue (now also in README).\n    * Update intro.\n* Update link to style guide in CONTRIBUTING.\n\n0.4.0 (2015-12-08)\n------------------\n\n### Features\n\n* Implemented [#67](https://github.com/donnemartin/saws/issues/67): Add Fish-style auto suggestions.\n\n### Bug Fixes\n\n* Fixed [#71](https://github.com/donnemartin/saws/issues/71): Disable color output for shell commands.\n* Fixed [#72](https://github.com/donnemartin/saws/issues/72): Exiting with `F10` does not clear the menu bar.\n\n### Updates\n\n* Updated list of commands.\n* Updated repo `README`.\n    * Added auto suggestions.\n* Fixed [#66](https://github.com/donnemartin/saws/issues/38): Removed `docs/build` from source repo.\n\n0.3.2 (2015-10-16)\n------------------\n\n### Features\n\n* Resolved [#38](https://github.com/donnemartin/saws/issues/38): Added `Docker` installation support, by [frosforever](https://github.com/frosforever).\n* Resolved [#39](https://github.com/donnemartin/saws/issues/39): Changed completion matching to ignore case.\n* Resolved [#40](https://github.com/donnemartin/saws/issues/40): Added `emr --cluster-states` completions.\n* Resolved [#52](https://github.com/donnemartin/saws/issues/52) and [#58](https://github.com/donnemartin/saws/issues/58): Updated list of auto-completed commands and subcommands.\n* Resolved [#53](https://github.com/donnemartin/saws/issues/53): Moved shortcuts out of `~/.sawsrc` to a new file `~/.saws.shortcuts` to simplify managing shortcuts.\n\n### Bug Fixes\n\n* Fixed [#22](https://github.com/donnemartin/saws/issues/22) and [#26](https://github.com/donnemartin/saws/issues/26):\n    * `ordereddict` is now only installed with Python 2.6.\n    * `enum34` is now only installed with Python 3.3 and below.\n* Fixed [#29](https://github.com/donnemartin/saws/issues/29): `SAWS` is now compatible with  `prompt_toolkit` version 0.52, by [jonathanslenders](https://github.com/jonathanslenders).\n* Fixed [#33](https://github.com/donnemartin/saws/issues/29): `SAWS` will no longer exit on keyboard interrupt such as `Ctrl-C`, which can be useful to terminate long-running `aws-cli` commands.\n* Fixed [#35](https://github.com/donnemartin/saws/issues/35): Grep now works consistently with shortcuts, by [mlimaloureiro](https://github.com/mlimaloureiro).\n* Fixed [#41](https://github.com/donnemartin/saws/issues/41): Blank entry is no longer shown in list of completion if there is no optional value set for a given tag's key.\n* Fixed [#60](https://github.com/donnemartin/saws/issues/60): Running an empty command no longer results in a pygmentize syntax error.\n* Fixed [#61](https://github.com/donnemartin/saws/issues/61): Refreshing resources multiple times no longer results in an exception.\n\n### Updates\n\n* Added PyPI keywords for easier searching.\n* Updated PyPI `README`.\n    * Added GitHub repo link, issue tracker, and repo gif.\n* Added `INSTALLATION` doc, with the following updates:\n    * Added `virtualenv` installation section.\n    * Added `Pipsi` installation section [#44](https://github.com/donnemartin/saws/issues/44), by [svieira](https://github.com/svieira).\n    * Added `Docker` installation section [#38](https://github.com/donnemartin/saws/issues/38), by [frosforever](https://github.com/frosforever).\n* Updated repo `README`.\n    * Updated discussion of shortcuts with the new `~/.saws.shortcuts` file.\n    * Added Command History section.\n    * Updated AWS Credentials and Named Profiles section.\n    * Added command to run `SAWS` in the Developer Installation section.\n    * Updated Motivation section to include fuzzy shortcut completion, toolbar options, execution and piping of shell commands. and history of commands.\n    * Mentioned initial testing of Python 3.5 support.\n    * Added install from GitHub source instructions to get the latest dev release\n* Updated docs.\n\n0.2.1 (2015-09-23)\n------------------\n\n### Bug Fixes\n\n- Fixed [#29](https://github.com/donnemartin/saws/issues/29): Dependency on python-prompt-toolkit > 0.50 breaks saws.\n\n0.2.0 (2015-09-22)\n------------------\n\n### Features\n\n- Added support for [#18](https://github.com/donnemartin/saws/issues/18): Multiple syntax highlighting themes.\n\n- Added improved support for [#17](https://github.com/donnemartin/saws/issues/17): Execute shell commands within `SAWS`, including piping.\n\n### Bug Fixes\n\n- Fixed [#21](https://github.com/donnemartin/saws/issues/21): Current command is overwritten on screen when refreshing resources with F5, by [jonathanslenders](https://github.com/jonathanslenders).\n\n### Updates\n\n- Updated `README` installation section with:\n\n    * `Virtualenv` instructions.\n    * Details on how to run AWS named profiles/credentials.\n    * Supported/tested platforms.\n\n- Updated `README` developer installation section with a new command to build the docs.\n\n- Updated docs.\n\n0.1.1 (2015-09-21)\n------------------\n\n### Bug Fixes\n\n- Fixed [#14](https://github.com/donnemartin/saws/issues/14): Fuzzy completions are sometimes showing incorrect\n  completions for built-in commands and subcommands.\n\n### Updates\n\n- Updated `README` installation section on how to run `SAWS`.\n\n- Updated docs.\n\n- Updated description, download url, license, and classifiers in\n  setup.py.\n\n0.1.0 (2015-09-21)\n------------------\n\n- Initial release.\n"
        },
        {
          "name": "CHANGELOG.rst",
          "type": "blob",
          "size": 7.7607421875,
          "content": ".. figure:: http://i.imgur.com/vzC5zmA.gif\n   :alt: \n\n|Build Status| |Documentation Status| |Dependency Status|\n\n|PyPI version| |PyPI| |License|\n\nSAWS\n====\n\nTo view the latest ``README``, ``docs``, and ``code`` visit the GitHub\nrepo:\n\nhttps://github.com/donnemartin/saws\n\nTo submit bugs or feature requests, visit the issue tracker:\n\nhttps://github.com/donnemartin/saws/issues\n\nChangelog\n=========\n\n0.4.2 (2017-04-08)\n------------------\n\nBug Fixes\n~~~~~~~~~\n\n-  `#90 <https://github.com/donnemartin/saws/pull/90>`__ - Fix\n   ``Sphinx`` document generation issues.\n\nUpdates\n~~~~~~~\n\n-  Update list of commands.\n-  `#92 <https://github.com/donnemartin/saws/pull/92>`__ - Update\n   ``feed_key to feed and process_keys for``\\ prompt-toolkit\\` v1.0.1+.\n\n0.4.1 (2015-05-31)\n------------------\n\nBug Fixes\n~~~~~~~~~\n\n-  `#83 <https://github.com/donnemartin/saws/pull/83>`__ - Update to\n   ``prompt-toolkit`` 1.0.0, which includes a number of performance\n   improvements (especially noticeable on Windows) and bug fixes.\n\nUpdates\n~~~~~~~\n\n-  `#75 <https://github.com/donnemartin/saws/pull/75>`__,\n   `#76 <https://github.com/donnemartin/saws/pull/76>`__ - Fix groff\n   install and follow Dockerfile best practices.\n-  `#85 <https://github.com/donnemartin/saws/pull/85>`__ - Update\n   packaging dependencies based on semantic versioning.\n-  `#86 <https://github.com/donnemartin/saws/pull/86>`__ - Fix linter\n   issues regarding imports.\n-  Update list of commands.\n-  Update INSTALLATION:\n\n   -  Add install from SOURCE.\n   -  Add note about OS X 10.11 pip issue (now also in README).\n   -  Update intro.\n\n-  Update link to style guide in CONTRIBUTING.\n\n0.4.0 (2015-12-08)\n------------------\n\nFeatures\n~~~~~~~~\n\n-  Implemented `#67 <https://github.com/donnemartin/saws/issues/67>`__:\n   Add Fish-style auto suggestions.\n\nBug Fixes\n~~~~~~~~~\n\n-  Fixed `#71 <https://github.com/donnemartin/saws/issues/71>`__:\n   Disable color output for shell commands.\n-  Fixed `#72 <https://github.com/donnemartin/saws/issues/72>`__:\n   Exiting with ``F10`` does not clear the menu bar.\n\nUpdates\n~~~~~~~\n\n-  Updated list of commands.\n-  Updated repo ``README``.\n\n   -  Added auto suggestions.\n\n-  Fixed `#66 <https://github.com/donnemartin/saws/issues/38>`__:\n   Removed ``docs/build`` from source repo.\n\n0.3.2 (2015-10-16)\n------------------\n\nFeatures\n~~~~~~~~\n\n-  Resolved `#38 <https://github.com/donnemartin/saws/issues/38>`__:\n   Added ``Docker`` installation support, by\n   `frosforever <https://github.com/frosforever>`__.\n-  Resolved `#39 <https://github.com/donnemartin/saws/issues/39>`__:\n   Changed completion matching to ignore case.\n-  Resolved `#40 <https://github.com/donnemartin/saws/issues/40>`__:\n   Added ``emr --cluster-states`` completions.\n-  Resolved `#52 <https://github.com/donnemartin/saws/issues/52>`__ and\n   `#58 <https://github.com/donnemartin/saws/issues/58>`__: Updated list\n   of auto-completed commands and subcommands.\n-  Resolved `#53 <https://github.com/donnemartin/saws/issues/53>`__:\n   Moved shortcuts out of ``~/.sawsrc`` to a new file\n   ``~/.saws.shortcuts`` to simplify managing shortcuts.\n\nBug Fixes\n~~~~~~~~~\n\n-  Fixed `#22 <https://github.com/donnemartin/saws/issues/22>`__ and\n   `#26 <https://github.com/donnemartin/saws/issues/26>`__:\n\n   -  ``ordereddict`` is now only installed with Python 2.6.\n   -  ``enum34`` is now only installed with Python 3.3 and below.\n\n-  Fixed `#29 <https://github.com/donnemartin/saws/issues/29>`__:\n   ``SAWS`` is now compatible with ``prompt_toolkit`` version 0.52, by\n   `jonathanslenders <https://github.com/jonathanslenders>`__.\n-  Fixed `#33 <https://github.com/donnemartin/saws/issues/29>`__:\n   ``SAWS`` will no longer exit on keyboard interrupt such as\n   ``Ctrl-C``, which can be useful to terminate long-running ``aws-cli``\n   commands.\n-  Fixed `#35 <https://github.com/donnemartin/saws/issues/35>`__: Grep\n   now works consistently with shortcuts, by\n   `mlimaloureiro <https://github.com/mlimaloureiro>`__.\n-  Fixed `#41 <https://github.com/donnemartin/saws/issues/41>`__: Blank\n   entry is no longer shown in list of completion if there is no\n   optional value set for a given tag's key.\n-  Fixed `#60 <https://github.com/donnemartin/saws/issues/60>`__:\n   Running an empty command no longer results in a pygmentize syntax\n   error.\n-  Fixed `#61 <https://github.com/donnemartin/saws/issues/61>`__:\n   Refreshing resources multiple times no longer results in an\n   exception.\n\nUpdates\n~~~~~~~\n\n-  Added PyPI keywords for easier searching.\n-  Updated PyPI ``README``.\n\n   -  Added GitHub repo link, issue tracker, and repo gif.\n\n-  Added ``INSTALLATION`` doc, with the following updates:\n\n   -  Added ``virtualenv`` installation section.\n   -  Added ``Pipsi`` installation section\n      `#44 <https://github.com/donnemartin/saws/issues/44>`__, by\n      `svieira <https://github.com/svieira>`__.\n   -  Added ``Docker`` installation section\n      `#38 <https://github.com/donnemartin/saws/issues/38>`__, by\n      `frosforever <https://github.com/frosforever>`__.\n\n-  Updated repo ``README``.\n\n   -  Updated discussion of shortcuts with the new ``~/.saws.shortcuts``\n      file.\n   -  Added Command History section.\n   -  Updated AWS Credentials and Named Profiles section.\n   -  Added command to run ``SAWS`` in the Developer Installation\n      section.\n   -  Updated Motivation section to include fuzzy shortcut completion,\n      toolbar options, execution and piping of shell commands. and\n      history of commands.\n   -  Mentioned initial testing of Python 3.5 support.\n   -  Added install from GitHub source instructions to get the latest\n      dev release\n\n-  Updated docs.\n\n0.2.1 (2015-09-23)\n------------------\n\nBug Fixes\n~~~~~~~~~\n\n-  Fixed `#29 <https://github.com/donnemartin/saws/issues/29>`__:\n   Dependency on python-prompt-toolkit > 0.50 breaks saws.\n\n0.2.0 (2015-09-22)\n------------------\n\nFeatures\n~~~~~~~~\n\n-  Added support for\n   `#18 <https://github.com/donnemartin/saws/issues/18>`__: Multiple\n   syntax highlighting themes.\n\n-  Added improved support for\n   `#17 <https://github.com/donnemartin/saws/issues/17>`__: Execute\n   shell commands within ``SAWS``, including piping.\n\nBug Fixes\n~~~~~~~~~\n\n-  Fixed `#21 <https://github.com/donnemartin/saws/issues/21>`__:\n   Current command is overwritten on screen when refreshing resources\n   with F5, by\n   `jonathanslenders <https://github.com/jonathanslenders>`__.\n\nUpdates\n~~~~~~~\n\n-  Updated ``README`` installation section with:\n\n   -  ``Virtualenv`` instructions.\n   -  Details on how to run AWS named profiles/credentials.\n   -  Supported/tested platforms.\n\n-  Updated ``README`` developer installation section with a new command\n   to build the docs.\n\n-  Updated docs.\n\n0.1.1 (2015-09-21)\n------------------\n\nBug Fixes\n~~~~~~~~~\n\n-  Fixed `#14 <https://github.com/donnemartin/saws/issues/14>`__: Fuzzy\n   completions are sometimes showing incorrect completions for built-in\n   commands and subcommands.\n\nUpdates\n~~~~~~~\n\n-  Updated ``README`` installation section on how to run ``SAWS``.\n\n-  Updated docs.\n\n-  Updated description, download url, license, and classifiers in\n   setup.py.\n\n0.1.0 (2015-09-21)\n------------------\n\n-  Initial release.\n\n.. |Build Status| image:: https://travis-ci.org/donnemartin/saws.svg?branch=master\n   :target: https://travis-ci.org/donnemartin/saws\n.. |Documentation Status| image:: https://readthedocs.org/projects/saws/badge/?version=latest\n   :target: http://saws.readthedocs.org/en/latest/?badge=latest\n.. |Dependency Status| image:: https://gemnasium.com/donnemartin/saws.svg\n   :target: https://gemnasium.com/donnemartin/saws\n.. |PyPI version| image:: https://badge.fury.io/py/saws.svg\n   :target: http://badge.fury.io/py/saws\n.. |PyPI| image:: https://img.shields.io/pypi/pyversions/saws.svg\n   :target: https://pypi.python.org/pypi/saws/\n.. |License| image:: http://img.shields.io/:license-apache-blue.svg\n   :target: http://www.apache.org/licenses/LICENSE-2.0.html\n"
        },
        {
          "name": "CHECKLIST.md",
          "type": "blob",
          "size": 2.4228515625,
          "content": "Release Checklist\n=================\n\nA. Install in a new venv and run unit tests\n\nNote, you can't seem to script the virtualenv calls, see:\nhttps://bitbucket.org/dhellmann/virtualenvwrapper/issues/219/cant-deactivate-active-virtualenv-from\n\n    $ deactivate\n    $ rmvirtualenv saws\n    $ mkvirtualenv saws\n    $ pip install -e .\n    $ pip install -r requirements-dev.txt\n    $ rm -rf .tox && tox\n\nB. Run code checks\n\n    $ scripts/run_code_checks.sh\n\nC. Run manual [smoke tests](#smoke-tests) on Mac, Ubuntu, Windows\n\nD. Update and review `README.rst` and `Sphinx` docs, then check saws/docs/build/html/index.html\n\n    $ scripts/update_docs.sh\n\nE. Push changes\n\nF. Review Travis, Codecov, and Gemnasium\n\nG. Start a new release branch\n\n    $ git flow release start x.y.z\n\nH. Increment the version number in `saws/__init__.py`\n\nI. Update and review `CHANGELOG.md`, then run:\n\n    $ scripts/create_changelog.sh\n\nJ. Commit the changes\n\nK. Finish the release branch\n\n    $ git flow release finish 'x.y.z'\n\nL. Input a tag\n\n    $ vx.y.z\n\nM. Push tagged release to develop and master\n\nN. Set CHANGELOG as `README.md`\n\n    $ scripts/set_changelog_as_readme.sh\n\nO. Register package with PyPi\n\n    $ python setup.py register -r pypi\n\nP. Upload to PyPi\n\n    $ python setup.py sdist upload -r pypi\n\nQ. Upload Sphinx docs to PyPi (requires Python2)\n\n    $ python setup.py upload_sphinx\n\nR. Restore `README.md`\n\n    $ scripts/set_changelog_as_readme_undo.sh\n\nS. Review newly released package from PyPi\n\nT. Release on GitHub: https://github.com/donnemartin/saws/tags\n\n    1. Click \"Add release notes\" for latest release\n    2. Copy release notes from `CHANGELOG.md`\n    3. Click \"Publish release\"\n\nU. Install in a new venv and run manual [smoke tests](#smoke-tests) on Mac, Ubuntu, Windows\n\n## Smoke Tests\n\nRun the following on Python 2.7 and Python 3.4:\n\n* Craete a new `virtualenv`\n* Pip install `SAWS` into new `virtualenv`\n* Run `SAWS`\n* Check initial resource load\n* Check resource load from cache\n* Force refresh of resources\n* Toggle toolbar options\n* Verify toolbar options are saved across sessions\n* Test the following commands\n    * Blank\n    * aws\n    * aws elb\n    * aws s3api get-bucket-acl --bucket\n    * aws ec2 describe-instances --instance-ids\n    * aws ecls\n    * aws ec2 ls | grep InstanceId\n    * aws ectagk\n    * aws ectagv\n    * aws ecstate\n    * aws emrls\n    * aws s3 ls s3:\n    * aws s3 ls docs\n    * cd ..\n    * cd saws\n* Run targeted tests based on recent code changes\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.1455078125,
          "content": "Contributing\n============\n\nContributions are welcome!\n\n**Please carefully read this page to make the code review process go as smoothly as possible and to maximize the likelihood of your contribution being merged.**\n\n## Bug Reports\n\nFor bug reports or requests [submit an issue](https://github.com/donnemartin/saws/issues).\n\n## Pull Requests\n\nThe preferred way to contribute is to fork the\n[main repository](https://github.com/donnemartin/saws) on GitHub.\n\n1. Fork the [main repository](https://github.com/donnemartin/saws).  Click on the 'Fork' button near the top of the page.  This creates a copy of the code under your account on the GitHub server.\n\n2. Clone this copy to your local disk:\n\n        $ git clone git@github.com:YourLogin/saws.git\n        $ cd saws\n\n3. Create a branch to hold your changes and start making changes. Don't work in the `master` branch!\n\n        $ git checkout -b my-feature\n\n4. Work on this copy on your computer using Git to do the version control. When you're done editing, run the following to record your changes in Git:\n\n        $ git add modified_files\n        $ git commit\n\n5. Push your changes to GitHub with:\n\n        $ git push -u origin my-feature\n\n6. Finally, go to the web page of your fork of the `SAWS` repo and click 'Pull Request' to send your changes for review.\n\n### GitHub Pull Requests Docs\n\nIf you are not familiar with pull requests, review the [pull request docs](https://help.github.com/articles/using-pull-requests/).\n\n### Code Quality\n\nEnsure your pull request satisfies all of the following, where applicable:\n\n* Is covered by [unit tests](https://github.com/donnemartin/saws#unit-tests-and-code-coverage)\n* Passes [continuous integration](https://github.com/donnemartin/saws#continuous-integration)\n* Is covered by [documentation](https://github.com/donnemartin/saws#documentation)\n\nReview the following [style guide](https://google.github.io/styleguide/pyguide.html).\n\nRun code checks and fix any issues:\n\n    $ scripts/run_code_checks.sh\n\n### Installation\n\nRefer to the [Installation](https://github.com/donnemartin/saws#installation) and [Developer Installation](https://github.com/donnemartin/saws#developer-installation) sections.\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.1845703125,
          "content": "FROM ubuntu:latest\n\nRUN apt-get update && apt-get install -y \\\n    groff \\\n    python-pip \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN pip install saws\n\nENTRYPOINT [\"saws\"]\n"
        },
        {
          "name": "INSTALLATION.md",
          "type": "blob",
          "size": 2.89453125,
          "content": "Installation\n============\n\n## Pip Installation\n\n[![PyPI version](https://badge.fury.io/py/saws.svg)](http://badge.fury.io/py/saws) [![PyPI](https://img.shields.io/pypi/pyversions/saws.svg)](https://pypi.python.org/pypi/saws/)\n\n`SAWS` is hosted on [PyPI](https://pypi.python.org/pypi/saws).  The following command will install `SAWS` along with dependencies such as the [AWS CLI](https://github.com/aws/aws-cli):\n\n    $ pip install saws\n\nYou can also install the latest `SAWS` from GitHub source which can contain changes not yet pushed to PyPI:\n\n    $ pip install git+https://github.com/donnemartin/saws.git\n\nIf you are not installing in a [virtualenv](#virtual-environment-installation), run:\n\n    $ sudo pip install saws\n\nOnce installed, start `SAWS`:\n\n    $ saws\n\n## Virtual Environment Installation\n\nIt is recommended that you install Python packages in a [virtualenv](http://docs.python-guide.org/en/latest/dev/virtualenvs/) to avoid potential [issues with dependencies or permissions](https://github.com/donnemartin/saws/issues/15).\n\nIf you are a Windows user or if you would like more details on `virtualenv`, check out this [guide](http://docs.python-guide.org/en/latest/dev/virtualenvs/).\n\nInstall `virtualenv` and `virtualenvwrapper`, or check out the [Pipsi Installation](#pipsi-installation) section below:\n\n    pip install virtualenv\n    pip install virtualenvwrapper\n    export WORKON_HOME=~/.virtualenvs\n    source /usr/local/bin/virtualenvwrapper.sh\n\nCreate a `SAWS` `virtualenv` and install `SAWS`:\n\n    mkvirtualenv saws\n    pip install saws\n\nIf you want to activate the `saws` `virtualenv` again later, run:\n\n    workon saws\n\n### Pipsi Installation\n\n[Pipsi](https://github.com/mitsuhiko/pipsi) simplifies the `virtualenv` setup.\n\nInstall `pipsi`:\n\n    pip install pipsi\n\nCreate a `virtualenv` and install `SAWS`:\n\n    pipsi install saws\n\nFor Python 3:\n\n    pipsi install --python=python3 saws\n\nNote:  [Pipsi might not be fully supported on Windows](https://github.com/mitsuhiko/pipsi/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+windows).\n\n## Docker Installation\n\n`SAWS` can be run from docker without additional dependencies. Assuming docker is installed and configured, the docker image can be built by running the following in a directory containing the [Dockerfile](https://github.com/donnemartin/saws/blob/master/Dockerfile):\n\n    docker build -t saws .\n\n`SAWS` can then be run by:\n\n    docker run -it -e AWS_ACCESS_KEY_ID=<key> -e AWS_SECRET_ACCESS_KEY=<secret> -e AWS_DEFAULT_REGION=<region> saws\n\nOr by mounting a local `.aws` configuration directory:\n\n    docker run -it -v path/to/.aws/:/root/.aws:ro saws\n\n## Mac OS X 10.11 El Capitan Users\n\nThere is a known issue with Apple and its included python package dependencies (more info at https://github.com/pypa/pip/issues/3165). We are investigating ways to fix this issue but in the meantime, to install saws, you can run:\n\n    $ sudo pip install saws --upgrade --ignore-installed six\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 0.7373046875,
          "content": "I am providing code and resources in this repository to you under an open source\nlicense.  Because this is my personal repository, the license you receive to my\ncode and resources is from me and not my employer (Facebook).\n\nCopyright 2015 Donne Martin. All Rights Reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"). You\nmay not use this file except in compliance with the License. A copy of\nthe License is located at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nor in the \"license\" file accompanying this file. This file is\ndistributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\nANY KIND, either express or implied. See the License for the specific\nlanguage governing permissions and limitations under the License."
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1328125,
          "content": "include README.md\ninclude LICENSE.txt\ninclude requirements-dev.txt\ninclude saws/data/SOURCES.txt\ninclude saws/data/RESOURCES_SAMPLE.txt\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.763671875,
          "content": "![](http://i.imgur.com/vzC5zmA.gif)\n\nSAWS\n============\n\n[![Build Status](https://travis-ci.org/donnemartin/saws.svg?branch=master)](https://travis-ci.org/donnemartin/saws) [![Documentation Status](https://readthedocs.org/projects/saws/badge/?version=latest)](http://saws.readthedocs.org/en/latest/?badge=latest) [![Dependency Status](https://gemnasium.com/donnemartin/saws.svg)](https://gemnasium.com/donnemartin/saws)\n\n[![PyPI version](https://badge.fury.io/py/saws.svg)](http://badge.fury.io/py/saws) [![PyPI](https://img.shields.io/pypi/pyversions/saws.svg)](https://pypi.python.org/pypi/saws/) [![License](http://img.shields.io/:license-apache-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\n\n## Motivation\n\n### AWS CLI\n\nAlthough the [AWS CLI](https://github.com/aws/aws-cli) is a great resource to manage your AWS-powered services, it's **tough to remember usage** of:\n\n* 70+ top-level commands\n* 2000+ subcommands\n* Countless command-specific options\n* Resources such as instance tags and buckets\n\n### SAWS: A Supercharged AWS CLI\n\n`SAWS` aims to **supercharge** the AWS CLI with features focusing on:\n\n* **Improving ease-of-use**\n* **Increasing productivity**\n\nUnder the hood, `SAWS` is **powered by the AWS CLI** and supports the **same commands** and **command structure**.\n\n`SAWS` and `AWS CLI` Usage:\n\n    aws <command> <subcommand> [parameters] [options]\n\n`SAWS` features:\n\n* Auto-completion of:\n    * Commands\n    * Subcommands\n    * Options\n* Auto-completion of resources:\n    * Bucket names\n    * Instance ids\n    * Instance tags\n    * [More coming soon!](#todo-add-more-resources)\n* Customizable shortcuts\n* Fuzzy completion of resources and shortcuts\n* Fish-style auto-suggestions\n* Syntax and output highlighting\n* Execution of shell commands\n* Command history\n* Contextual help\n* Toolbar options\n\n`SAWS` is available for Mac, Linux, Unix, and [Windows](#windows-support).\n\n![](http://i.imgur.com/Eo12q9T.png)\n\n## Index\n\n### Features\n\n* [Syntax and Output Highlighting](#syntax-and-output-highlighting)\n* [Auto-Completion of Commands, Subcommands, and Options](#auto-completion-of-commands-subcommands-and-options)\n* [Auto-Completion of AWS Resources](#auto-completion-of-aws-resources)\n    * [S3 Buckets](#s3-buckets)\n    * [EC2 Instance Ids](#ec2-instance-ids)\n    * [EC2 Instance Tags](#ec2-instance-tags)\n    * [TODO: Add More Resources](#todo-add-more-resources)\n* [Customizable Shortcuts](#customizable-shortcuts)\n* [Fuzzy Resource and Shortcut Completion](#fuzzy-resource-and-shortcut-completion)\n* [Fish-Style Auto-Suggestions](#fish-style-auto-suggestions)\n* [Executing Shell Commands](#executing-shell-commands)\n* [Command History](#command-history)\n* [Contextual Help](#contextual-help)\n    * [Contextual Command Line Help](#contextual-command-line-help)\n    * [Contextual Web Docs](#contextual-web-docs)\n* [Toolbar Options](#toolbar-options)\n* [Windows Support](#windows-support)\n\n### Installation and Tests\n\n* [Installation](#installation)\n    * [Pip Installation](#pip-installation)\n    * [Virtual Environment and Docker Installation](#virtual-environment-and-docker-installation)\n    * [AWS Credentials and Named Profiles](#aws-credentials-and-named-profiles)\n    * [Supported Python Versions](#supported-python-versions)\n    * [Supported Platforms](#supported-platforms)\n* [Developer Installation](#developer-installation)\n    * [Continuous Integration](#continuous-integration)\n    * [Dependencies Management](#dependencies-management)\n    * [Unit Tests and Code Coverage](#unit-tests-and-code-coverage)\n    * [Documentation](#documentation)\n\n### Misc\n\n* [Contributing](#contributing)\n* [Credits](#credits)\n* [Contact Info](#contact-info)\n* [License](#license)\n\n## Syntax and Output Highlighting\n\n![](http://i.imgur.com/xQDpw70.png)\n\nYou can control which theme to load for syntax highlighting by updating your [~/.sawsrc](https://github.com/donnemartin/saws/blob/master/saws/sawsrc) file:\n\n```\n# Visual theme. Possible values: manni, igor, xcode, vim, autumn, vs, rrt,\n# native, perldoc, borland, tango, emacs, friendly, monokai, paraiso-dark,\n# colorful, murphy, bw, pastie, paraiso-light, trac, default, fruity\ntheme = vim\n```\n\n## Auto-Completion of Commands, Subcommands, and Options\n\n`SAWS` provides smart autocompletion as you type.  Entering the following command will interactively list and auto-complete all subcommands **specific only** to `ec2`:\n\n    aws ec2\n\n![](http://i.imgur.com/P2tL9vW.png)\n\n## Auto-Completion of AWS Resources\n\nIn addition to the default commands, subcommands, and options the AWS CLI provides, `SAWS` supports auto-completion of your AWS resources.  Currently, bucket names, instance ids, and instance tags are included, with additional support for more resources [under development](#todo-add-more-resources).\n\n### S3 Buckets\n\nOption for `s3api`:\n\n    --bucket\n\nSample Usage:\n\n    aws s3api get-bucket-acl --bucket\n\nSyntax for `s3`:\n\n    s3://\n\nSample Usage:\n\n    aws s3 ls s3://\n\nNote:  The example below demonstrates the use of [fuzzy resource completion](fuzzy-resource-and-shortcutcompletion):\n\n![](http://i.imgur.com/39CAS5T.png)\n\n### EC2 Instance Ids\n\nOption for `ec2`:\n\n    --instance-ids\n\nSample Usage:\n\n    aws ec2 describe-instances --instance-ids\n    aws ec2 ls --instance-ids\n\nNote:  The `ls` command demonstrates the use of [customizable shortcuts](#customizable-shortcuts):\n\n![](http://i.imgur.com/jFyCSXl.png)\n\n### EC2 Instance Tags\n\nOption for `ec2`:\n\n    --ec2-tag-key\n    --ec2-tag-value\n\nSample Usage:\n\n    aws ec2 ls --ec2-tag-key\n    aws ec2 ls --ec2-tag-value\n\n**Tags support wildcards** with the `*` character.\n\nNote:  `ls`, `--ec2-tag-value`, and `--ec2-tag-key` demonstrate the use of [customizable shortcuts](#customizable-shortcuts):\n\n![](http://i.imgur.com/VIKwG3Z.png)\n\n### TODO: Add More Resources\n\nFeel free to [submit an issue or a pull request](#contributions) if you'd like support for additional resources.\n\n## Customizable Shortcuts\n\nThe [~/.saws.shortcuts](https://github.com/donnemartin/saws/blob/master/saws/saws.shortcuts) file contains shortcuts that you can modify.  It comes pre-populated with several [handy shortcuts](https://github.com/donnemartin/saws/blob/master/saws/saws.shortcuts) out of the box.  You can combine shortcuts with [fuzzy completion](#fuzzy-resource-and-shortcut-completion) for even less keystrokes.  Below are a few examples.\n\nList all EC2 instances:\n\n    aws ec2 ls\n\nList all running EC2 instances:\n\n    aws ec2 ls --ec2-state running  # fuzzy shortcut: aws ecstate\n\n![](http://i.imgur.com/jYFEsoM.png)\n\nList all EC2 instances with a matching tag (supports wildcards `*`):\n\n    aws ec2 ls --ec2-tag-key    # fuzzy shortcut: aws ectagk\n    aws ec2 ls --ec2-tag-value  # fuzzy shortcut: aws ectagv\n\n![](http://i.imgur.com/PSuwUIw.png)\n\nList EC2 instance with matching id:\n\n    aws ec2 ls --instance-ids  # fuzzy shortcut: aws eclsi\n\n![](http://i.imgur.com/wGcUCsa.png)\n\nList all DynamoDB tables:\n\n    aws dynamodb ls  # fuzzy shortcut: aws dls\n\nList all EMR clusters:\n\n    aws emr ls  # fuzzy shortcut: aws emls\n\nAdd/remove/modify shortcuts in your [~/.saws.shortcuts](https://github.com/donnemartin/saws/blob/master/saws/shortcuts) file to suit your needs.\n\nFeel free to submit:\n\n* An issue to request additional shortcuts\n* A pull request if you'd like to share your shortcuts (see [contributing guidelines](#contributions))\n\n### Fuzzy Resource and Shortcut Completion\n\nTo toggle fuzzy completion of AWS resources and shortcuts, use `F3` key.\n\nSample fuzzy shortcuts to start and stop EC2 instances:\n\n    aws ecstop\n    aws ecstart\n\nNote:  Fuzzy completion currently only works with AWS [resources](#auto-completion-of-aws-resources) and [shortcuts](customizable-shortcuts).\n\n![](http://i.imgur.com/7OvFHCw.png)\n\n## Fish-Style Auto-Suggestions\n\n`SAWS` supports Fish-style auto-suggestions.  Use the `right arrow` key to complete a suggestion.\n\n![](http://i.imgur.com/t5200q1.png)\n\n## Executing Shell Commands\n\n`SAWS` allows you to execute shell commands from the `saws>` prompt.\n\n![](http://i.imgur.com/FiSn6b2.png)\n\n## Command History\n\n`SAWS` keeps track of commands you enter and stores them in `~/.saws-history`.  Use the up and down arrow keys to cycle through the command history.\n\n![](http://i.imgur.com/z8RrDQB.png)\n\n## Contextual Help\n\n`SAWS` supports contextual command line `help` and contextual web `docs`.\n\n### Contextual Command Line Help\n\nThe `help` command is powered by the AWS CLI and outputs help within the command line.\n\nUsage:\n\n    aws <command> <subcommand> help\n\n![](http://i.imgur.com/zSkzt6y.png)\n\n### Contextual Web Docs\n\nSometimes you're not quite sure what specific command/subcommand/option combination you need to use.  In such cases, browsing through several combinations with the `help` command line is cumbersome versus browsing the online AWS CLI docs through a web browser.\n\n`SAWS` supports contextual web docs with the `docs` command or the `F9` key.  `SAWS` will display the web docs specific to the currently entered command and subcommand.\n\nUsage:\n\n    aws <command> <subcommand> docs\n\n![](http://i.imgur.com/zK4IJYp.png)\n\n## Toolbar Options\n\n`SAWS` supports a number of toolbar options:\n\n* `F2` toggles [output syntax highlighting](#syntax-and-output-highlighting)\n* `F3` toggles [fuzzy completion of AWS resources and shortcuts](#fuzzy-resource-and-shortcut-completion)\n* `F4` toggles [completion of shortcuts](#customizable-shortcuts)\n* `F5` refreshes [resources for auto-completion](#auto-completion-of-aws-resources)\n* `F9` displays the [contextual web docs](#contextual-web-docs)\n* `F10` or `control d` exits `SAWS`\n\n![](http://i.imgur.com/7vz8OSc.png)\n\n## Windows Support\n\n`SAWS` has been tested on Windows 7 and Windows 10.\n\nOn Windows, the [.sawsrc](https://github.com/donnemartin/saws/blob/master/saws/sawsrc) file can be found in `%userprofile%`.  For example:\n\n    C:\\Users\\dmartin\\.sawsrc\n\nAlthough you can use the standard Windows command prompt, you'll probably have a better experience with either [cmder](https://github.com/cmderdev/cmder) or [conemu](https://github.com/Maximus5/ConEmu).\n\n![](http://i.imgur.com/pUwJWck.png)\n\n## Installation\n\n### Pip Installation\n\n[![PyPI version](https://badge.fury.io/py/saws.svg)](http://badge.fury.io/py/saws) [![PyPI](https://img.shields.io/pypi/pyversions/saws.svg)](https://pypi.python.org/pypi/saws/)\n\n`SAWS` is hosted on [PyPI](https://pypi.python.org/pypi/saws).  The following command will install `SAWS` along with dependencies such as the [AWS CLI](https://github.com/aws/aws-cli):\n\n    $ pip install saws\n\nYou can also install the latest `SAWS` from GitHub source which can contain changes not yet pushed to PyPI:\n\n    $ pip install git+https://github.com/donnemartin/saws.git\n\nIf you are not installing in a [virtualenv](#virtual-environment-and-docker-installation), run with `sudo`:\n\n    $ sudo pip install saws\n\nOnce installed, start `SAWS`:\n\n    $ saws\n\n### Virtual Environment and Docker Installation\n\nIt is recommended that you install Python packages in a [virtualenv](http://docs.python-guide.org/en/latest/dev/virtualenvs/) to avoid potential [issues with dependencies or permissions](https://github.com/donnemartin/saws/issues/15).\n\nTo view `SAWS` `virtualenv` and [Docker](https://www.docker.com/) installation instructions, click [here](https://github.com/donnemartin/saws/blob/master/INSTALLATION.md).\n\n### Mac OS X 10.11 El Capitan Users\n\nThere is a known issue with Apple and its included python package dependencies (more info at https://github.com/pypa/pip/issues/3165). We are investigating ways to fix this issue but in the meantime, to install saws, you can run:\n\n    $ sudo pip install saws --upgrade --ignore-installed six\n\n### AWS Credentials and Named Profiles\n\n[Configure your credentials](https://github.com/aws/aws-cli#getting-started) with the AWS CLI:\n\n    $ aws configure\n\nIf you'd like to use a specific named profile with `SAWS`, run the following commands on OS X, Linux, or Unix:\n\n    $ export AWS_DEFAULT_PROFILE=user1\n    $ saws\n\nOr as a one-liner:\n\n    $ AWS_DEFAULT_PROFILE=user1 saws\n\nWindows users can run the following commands:\n\n    > set AWS_DEFAULT_PROFILE=user1\n    > saws\n\nCommand line options for starting `SAWS` with a specific profile are [under development](https://github.com/donnemartin/saws/issues/16).  For more details on how to install and configure the AWS CLI, refer to the following [documentation](http://docs.aws.amazon.com/cli/latest/userguide/installing.html).\n\n### Supported Python Versions\n\n* Python 2.6\n* Python 2.7\n* Python 3.3\n* Python 3.4\n* Pypy\n\nLight testing indicates that `SAWS` also seems to be compatible with Python 3.5.\n\nPypy3 is not supported due to [lack of support](https://github.com/boto/botocore/issues/622) from [boto](https://github.com/boto/boto).\n\n### Supported Platforms\n\n* Mac OS X\n    * Tested on OS X 10.10\n* Linux, Unix\n    * Tested on Ubuntu 14.04 LTS\n* Windows\n    * Tested on Windows 7 and 10\n\n## Developer Installation\n\nIf you're interested in contributing to `SAWS`, run the following commands:\n\n    $ git clone https://github.com/donnemartin/saws.git\n    $ pip install -e .\n    $ pip install -r requirements-dev.txt\n    $ saws\n\n### Continuous Integration\n\n[![Build Status](https://travis-ci.org/donnemartin/saws.svg?branch=master)](https://travis-ci.org/donnemartin/saws)\n\nContinuous integration details are available on [Travis CI](https://travis-ci.org/donnemartin/saws).\n\n### Dependencies Management\n\n[![Dependency Status](https://gemnasium.com/donnemartin/saws.svg)](https://gemnasium.com/donnemartin/saws)\n\nDependencies management details are available on [Gemnasium](https://gemnasium.com/donnemartin/saws).\n\n### Unit Tests and Code Coverage\n\nRun unit tests in your active Python environment:\n\n    $ python tests/run_tests.py\n\nRun unit tests with [tox](https://pypi.python.org/pypi/tox) on multiple Python environments:\n\n    $ tox\n\n### Documentation\n\n[![Documentation Status](https://readthedocs.org/projects/saws/badge/?version=latest)](http://saws.readthedocs.org/en/latest/?badge=latest)\n\nSource code documentation is available on [Readthedocs.org](http://saws.readthedocs.org/en/latest/?badge=latest).\n\nRun the following to build the docs:\n\n    $ scripts/update_docs.sh\n\n## Contributing\n\nContributions are welcome!\n\nReview the [Contributing Guidelines](https://github.com/donnemartin/saws/blob/master/CONTRIBUTING.md) for details on how to:\n\n* Submit issues\n* Submit pull requests\n\n## Credits\n\n* [AWS CLI](https://github.com/aws/aws-cli) by [AWS](https://github.com/aws) for powering `SAWS` under the hood\n* [Python Prompt Toolkit](https://github.com/jonathanslenders/python-prompt-toolkit) by [jonathanslenders](https://github.com/jonathanslenders) for simplifying the creation of `SAWS`\n* [Wharfee](https://github.com/j-bennet/wharfee) by [j-bennet](https://github.com/j-bennet) for inspiring the creation of `SAWS` and for some handy utility functions\n\n## Contact Info\n\nFeel free to contact me to discuss any issues, questions, or comments.\n\n* Email: [donne.martin@gmail.com](mailto:donne.martin@gmail.com)\n* Twitter: [donne_martin](https://twitter.com/donne_martin)\n* GitHub: [donnemartin](https://github.com/donnemartin)\n* LinkedIn: [donnemartin](https://www.linkedin.com/in/donnemartin)\n* Website: [donnemartin.com](http://donnemartin.com)\n\n## License\n\n*I am providing code and resources in this repository to you under an open source license.  Because this is my personal repository, the license you receive to my code and resources is from me and not my employer (Facebook).*\n\n    Copyright 2015 Donne Martin\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.86328125,
          "content": "# What Python version is installed where:\n# http://www.appveyor.com/docs/installed-software#python\n\nenvironment:\n  matrix:\n    - PYTHON: \"C:\\\\Python27\"\n      TOX_ENV: \"py27\"\n\n    - PYTHON: \"C:\\\\Python33\"\n      TOX_ENV: \"py33\"\n\n    - PYTHON: \"C:\\\\Python34\"\n      TOX_ENV: \"py34\"\n\n    - PYTHON: \"C:\\\\Python35\"\n      TOX_ENV: \"py35\"\n\n\ninit:\n  - \"%PYTHON%/python -V\"\n  - \"%PYTHON%/python -c \\\"import struct;print( 8 * struct.calcsize(\\'P\\'))\\\"\"\n\ninstall:\n  - \"%PYTHON%/Scripts/easy_install -U pip\"\n  - \"%PYTHON%/Scripts/pip install tox\"\n  - \"%PYTHON%/Scripts/pip install wheel\"\n\nbuild: false  # Not a C# project, build stuff at the test step instead.\n\ntest_script:\n  - \"%PYTHON%/Scripts/tox -e %TOX_ENV%\"\n\nafter_test:\n  - \"%PYTHON%/python setup.py bdist_wheel\"\n  - ps: \"ls dist\"\n\nartifacts:\n  - path: dist\\*\n\n#on_success:\n#  - TODO: upload the content of dist/*.whl to a public wheelhouse"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.1357421875,
          "content": "codecov>=1.3.3\nflake8>=2.4.1\nmock>=1.0.1\npexpect>=3.3\npytest>=2.7.0\ntox>=1.9.2\nsphinx>=1.3.1\nSphinx-PyPI-upload>=0.2.1\ngitchangelog>=2.2.1\n"
        },
        {
          "name": "saws",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.1611328125,
          "content": "[metadata]\ndescription-file = README.md\n\n[build_sphinx]\nsource-dir = docs/source\nbuild-dir  = docs/build\nall_files  = 1\n\n[upload_sphinx]\nupload-dir = docs/build/html"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.005859375,
          "content": "from saws.__init__ import __version__\nimport sys\ntry:\n    from setuptools import setup, find_packages\nexcept ImportError:\n    from distutils.core import setup\n\ninstall_requires = [\n    'awscli>=1.7.46,<2.0.0',\n    'click>=4.0,<7.0',\n    'configobj>=5.0.6,<6.0.0',\n    'prompt-toolkit>=1.0.0,<1.1.0',\n    'six>=1.9.0,<2.0.0',\n    'pygments>=2.0.2,<3.0.0'\n]\n\nif sys.version_info < (2, 7):\n    # Introduced in Python 2.7\n    install_requires.append('ordereddict>=1.1')\nif sys.version_info < (3, 4):\n    # Backport of Python 3.4 enums to earlier versions\n    install_requires.append('enum34>=1.0.4')\n\nsetup(\n    description='SAWS: A Supercharged AWS Command Line Interface (CLI)',\n    author='Donne Martin',\n    url='https://github.com/donnemartin/saws',\n    download_url='https://pypi.python.org/pypi/saws',\n    author_email='donne.martin@gmail.com',\n    version=__version__,\n    license='Apache License 2.0',\n    install_requires=install_requires,\n    extras_require={\n        'testing': [\n            'mock>=1.0.1',\n            'tox>=1.9.2'\n        ],\n    },\n    entry_points={\n        'console_scripts': 'saws = saws.main:cli'\n    },\n    packages=find_packages(),\n    package_data={'saws': ['sawsrc',\n                           'saws.shortcuts',\n                           'data/SOURCES.txt',\n                           'data/RESOURCES_SAMPLE.txt',\n                           'data/OPTIONS.txt']},\n    scripts=[],\n    name='saws',\n    classifiers=[\n        'Intended Audience :: Developers',\n        'Intended Audience :: System Administrators',\n        'License :: OSI Approved :: Apache Software License',\n        'Natural Language :: English',\n        'Programming Language :: Python',\n        'Programming Language :: Python :: 2.6',\n        'Programming Language :: Python :: 2.7',\n        'Programming Language :: Python :: 3',\n        'Programming Language :: Python :: 3.3',\n        'Programming Language :: Python :: 3.4',\n        'Topic :: Software Development',\n        'Topic :: Software Development :: Libraries :: Python Modules',\n    ],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.509765625,
          "content": "# Tox (http://tox.testrun.org/) is a tool for running tests\n# in multiple virtualenvs. This configuration file will run the\n# test suite on all supported python versions. To use it, \"pip install tox\"\n# and then run \"tox\" from this directory.\n\n[tox]\nenvlist = py27, py36, pypy\n\n[testenv]\npassenv = TRAVIS TRAVIS_JOB_ID TRAVIS_BRANCH\ndeps =\n    coverage\n    mock\n    prompt_toolkit\n    unittest2\ncommands =\n    coverage erase\n    coverage run {toxinidir}/tests/run_tests.py\n    coverage report --include={toxinidir}/*saws/*\n"
        }
      ]
    }
  ]
}