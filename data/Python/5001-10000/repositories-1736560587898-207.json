{
  "metadata": {
    "timestamp": 1736560587898,
    "page": 207,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "shidenggui/easytrader",
      "stars": 8104,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bumpversion.cfg",
          "type": "blob",
          "size": 0.1259765625,
          "content": "[bumpversion]\ncurrent_version = 0.23.0\ncommit = True\nfiles = easytrader/__init__.py setup.py\ntag = True\ntag_name = {new_version}\n"
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.0830078125,
          "content": "[run]\nbranch = True\ninclude = easytrader/*\nomit = tests/*\n\n[report]\nfail_under = -1 \n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9013671875,
          "content": "cmd_cache.pk\nbak\n.mypy_cache\n.pyre\n.pytest_cache\nyjb_account.json\nhtt.json\ngft.json\ntest.py\nht_account.json\n.idea\n.vscode\n.ipynb_checkpoints\nUntitled.ipynb\nuntitled.txt\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\naccount.json\naccount.session\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nenv/\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\n*.egg-info/\n.installed.cfg\n*.egg\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*,cover\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# cache\ntmp/\n\nsecrets/\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 16.69921875,
          "content": "[MASTER]\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-whitelist=\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=CVS\n\n# Add files or directories matching the regex patterns to the blacklist. The\n# regex matches against base names, not paths.\nignore-patterns=\\d{4}.+\\.py,\n                test,\n                apps.py,\n                __init__.py,\n                urls.py,\n                manage.py\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\n#init-hook=\n\n# Use multiple processes to speed up Pylint.\njobs=0\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Pickle collected data for later comparisons.\npersistent=yes\n\n# Specify a configuration file.\n#rcfile=\n\n# When enabled, pylint would attempt to guess common misconfiguration and emit\n# user-friendly hints instead of false-positive error messages\nsuggestion-mode=yes\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Disable the message, report, category or checker with the given id(s). You\n# can either give multiple identifiers separated by comma (,) or put this\n# option multiple times (only on the command line, not in the configuration\n# file where it should appear only once).You can also use \"--disable=all\" to\n# disable everything first and then reenable specific checks. For example, if\n# you want to run only the similarities checker, you can use \"--disable=all\n# --enable=similarities\". If you want to run only the classes checker, but have\n# no Warning level messages displayed, use\"--disable=all --enable=classes\n# --disable=W\"\ndisable=too-many-public-methods,\n        len-as-condition,\n        unused-argument,\n        too-many-arguments,\n        arguments-differ,\n        line-too-long,\n        fixme,\n        missing-docstring,\n        invalid-envvar-default,\n        ungrouped-imports,\n        bad-continuation,\n        too-many-ancestors,\n        too-few-public-methods,\n        no-self-use,\n        #print-statement,\n        #parameter-unpacking,\n        #unpacking-in-except,\n        #old-raise-syntax,\n        #backtick,\n        #long-suffix,\n        #old-ne-operator,\n        #old-octal-literal,\n        #import-star-module-level,\n        #non-ascii-bytes-literal,\n        #raw-checker-failed,\n        #bad-inline-option,\n        #locally-disabled,\n        #locally-enabled,\n        #file-ignored,\n        #suppressed-message,\n        #useless-suppression,\n        #deprecated-pragma,\n        #apply-builtin,\n        #basestring-builtin,\n        #buffer-builtin,\n        #cmp-builtin,\n        #coerce-builtin,\n        #execfile-builtin,\n        #file-builtin,\n        #long-builtin,\n        #raw_input-builtin,\n        #reduce-builtin,\n        #standarderror-builtin,\n        #unicode-builtin,\n        #xrange-builtin,\n        #coerce-method,\n        #delslice-method,\n        #getslice-method,\n        #setslice-method,\n        #no-absolute-import,\n        #old-division,\n        #dict-iter-method,\n        #dict-view-method,\n        #next-method-called,\n        #metaclass-assignment,\n        #indexing-exception,\n        #raising-string,\n        #reload-builtin,\n        #oct-method,\n        #hex-method,\n        #nonzero-method,\n        #cmp-method,\n        #input-builtin,\n        #round-builtin,\n        #intern-builtin,\n        #unichr-builtin,\n        #map-builtin-not-iterating,\n        #zip-builtin-not-iterating,\n        #range-builtin-not-iterating,\n        #filter-builtin-not-iterating,\n        #using-cmp-argument,\n        #eq-without-hash,\n        #div-method,\n        #idiv-method,\n        #rdiv-method,\n        #exception-message-attribute,\n        #invalid-str-codec,\n        #sys-max-int,\n        #bad-python3-import,\n        #deprecated-string-function,\n        #deprecated-str-translate-call,\n        #deprecated-itertools-function,\n        #deprecated-types-field,\n        #next-method-defined,\n        #dict-items-not-iterating,\n        #dict-keys-not-iterating,\n        #dict-values-not-iterating\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time (only on the command line, not in the configuration file where\n# it should appear only once). See also the \"--disable\" option for examples.\nenable=c-extension-no-member\n\n\n[REPORTS]\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n# Set the output format. Available formats are text, parseable, colorized, json\n# and msvs (visual studio).You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=text\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Activate the evaluation score.\nscore=yes\n\n\n[REFACTORING]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n# Complete name of functions that never returns. When checking for\n# inconsistent-return-statements if a never returning function is called then\n# it will be considered as an explicit return statement and no message will be\n# printed.\nnever-returning-functions=optparse.Values,sys.exit\n\n\n[BASIC]\n\n# Naming style matching correct argument names\nargument-naming-style=snake_case\n\n# Regular expression matching correct argument names. Overrides argument-\n# naming-style\n#argument-rgx=\n\n# Naming style matching correct attribute names\nattr-naming-style=snake_case\n\n# Regular expression matching correct attribute names. Overrides attr-naming-\n# style\n#attr-rgx=\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,\n          bar,\n          baz,\n          toto,\n          tutu,\n          tata\n\n# Naming style matching correct class attribute names\nclass-attribute-naming-style=any\n\n# Regular expression matching correct class attribute names. Overrides class-\n# attribute-naming-style\n#class-attribute-rgx=\n\n# Naming style matching correct class names\nclass-naming-style=PascalCase\n\n# Regular expression matching correct class names. Overrides class-naming-style\n#class-rgx=\n\n# Naming style matching correct constant names\nconst-naming-style=any\n\n# Regular expression matching correct constant names. Overrides const-naming-\n# style\n#const-rgx=\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=5\n\n# Naming style matching correct function names\nfunction-naming-style=snake_case\n\n# Regular expression matching correct function names. Overrides function-\n# naming-style\n#function-rgx=\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,\n           do,\n           f,\n           df,\n           s,\n           j,\n           k,\n           ex,\n           Run,\n           _,\n           db,\n           r,\n           x,\n           y,\n           e\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# Naming style matching correct inline iteration names\ninlinevar-naming-style=any\n\n# Regular expression matching correct inline iteration names. Overrides\n# inlinevar-naming-style\n#inlinevar-rgx=\n\n# Naming style matching correct method names\nmethod-naming-style=snake_case\n\n# Regular expression matching correct method names. Overrides method-naming-\n# style\n#method-rgx=\n\n# Naming style matching correct module names\nmodule-naming-style=snake_case\n\n# Regular expression matching correct module names. Overrides module-naming-\n# style\n#module-rgx=\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# List of decorators that produce properties, such as abc.abstractproperty. Add\n# to this list to register other decorators that produce valid properties.\nproperty-classes=abc.abstractproperty\n\n# Naming style matching correct variable names\nvariable-naming-style=snake_case\n\n# Regular expression matching correct variable names. Overrides variable-\n# naming-style\n#variable-rgx=\n\n\n[FORMAT]\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Maximum number of characters on a single line.\nmax-line-length=79\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=trailing-comma,\n               dict-separator\n\n# Allow the body of a class to be on the same line as the declaration if body\n# contains single statement.\nsingle-line-class-stmt=no\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,\n      XXX,\n      TODO\n\n\n[SIMILARITIES]\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n\n[SPELLING]\n\n# Limits count of emitted suggestions for spelling mistakes\nmax-spelling-suggestions=4\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[TYPECHECK]\n\n# List of decorators that produce context managers, such as\n# contextlib.contextmanager. Add to this list to register other decorators that\n# produce valid context managers.\ncontextmanager-decorators=contextlib.contextmanager\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# This flag controls whether pylint should warn about no-member and similar\n# checks whenever an opaque object is returned when inferring. The inference\n# can return multiple potential results while evaluating a Python object, but\n# some branches might not be evaluated, which results in partial inference. In\n# that case, it might be useful to still emit no-member and other checks for\n# the rest of the inferred objects.\nignore-on-opaque-inference=yes\n\n# List of class names for which member attributes should not be checked (useful\n# for classes with dynamically set attributes). This supports the use of\n# qualified names.\nignored-classes=optparse.Values,thread._local,_thread._local\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=\n\n# Show a hint with possible names when a member name was not found. The aspect\n# of finding the hint is based on edit distance.\nmissing-member-hint=yes\n\n# The minimum edit distance a name should have in order to be considered a\n# similar match for a missing member name.\nmissing-member-hint-distance=1\n\n# The total number of similar names that should be taken in consideration when\n# showing a hint for a missing member.\nmissing-member-max-choices=1\n\n\n[VARIABLES]\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# Tells whether unused global variables should be treated as a violation.\nallow-global-unused-variables=yes\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,\n          _cb\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=_+$|(_[a-zA-Z0-9_]*[a-zA-Z0-9]+?$)|dummy|^ignored_|^unused_\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*|^ignored_|^unused_\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# List of qualified module names which can have objects that can redefine\n# builtins.\nredefining-builtins-modules=six.moves,past.builtins,future.builtins\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,\n                      __new__,\n                      setUp\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,\n                  _fields,\n                  _replace,\n                  _source,\n                  _make\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Maximum number of boolean expressions in a if statement\nmax-bool-expr=5\n\n# Maximum number of branch for function / method body\nmax-branches=20\n\n# Maximum number of locals for function / method body\nmax-locals=20\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of statements in function / method body\nmax-statements=50\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n\n[IMPORTS]\n\n# Allow wildcard imports from modules that define __all__.\nallow-wildcard-with-all=no\n\n# Analyse import fallback blocks. This can be used to support both Python 2 and\n# 3 compatible code, which means that the block might have code that exists\n# only in one or another interpreter, leading to false positives when analysed.\nanalyse-fallback-blocks=no\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,\n                   TERMIOS,\n                   Bastion,\n                   rexec\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n# Force import order to recognize a module as part of the standard\n# compatibility libraries.\nknown-standard-library=\n\n# Force import order to recognize a module as part of a third party library.\nknown-third-party=enchant\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.12890625,
          "content": "language: python\n\npython:\n  - \"3.6\"\n\ninstall:\n  - pip install pipenv\n  - pipenv install --dev --system\n\nscript:\n  - pipenv run test\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2018 shidenggui\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.017578125,
          "content": "include README.md\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.0400390625,
          "content": "test:\n\tpytest -vx --cov=easytrader tests\n"
        },
        {
          "name": "Pipfile",
          "type": "blob",
          "size": 0.7041015625,
          "content": "[[source]]\nurl = \"http://mirrors.aliyun.com/pypi/simple/\"\nverify_ssl = false\nname = \"pypi\"\n\n[packages]\npywinauto = \"*\"\n\"bs4\" = \"*\"\nrequests = \"*\"\ndill = \"*\"\nclick = \"*\"\nsix = \"*\"\nflask = \"*\"\npillow = \"*\"\npytesseract = \"*\"\npandas = \"*\"\npyperclip = \"*\"\neasyutils = \"*\"\n\n[dev-packages]\npytest-cov = \"*\"\npre-commit = \"*\"\npytest = \"*\"\npylint = \"*\"\nmypy = \"*\"\nisort = \"*\"\nblack = \"==18.6b4\"\nipython = \"*\"\nbetter-exceptions = \"*\"\n\n[requires]\npython_version = \"3.6\"\n\n[scripts]\nsort_imports = \"bash -c 'isort \\\"$@\\\"; git add -u' --\"\nformat = \"bash -c 'black -l 79 \\\"$@\\\"; git add -u' --\"\nlint = \"pylint\"\ntype_check = \"mypy\"\ntest = \"bash -c 'pytest -vx --cov=easytrader tests'\"\nlock = \"bash -c 'pipenv lock -r > requirements.txt'\"\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.1845703125,
          "content": "# easytrader\n\n[![Package](https://img.shields.io/pypi/v/easytrader.svg)](https://pypi.python.org/pypi/easytrader)\n[![Travis](https://img.shields.io/travis/shidenggui/easytrader.svg)](https://travis-ci.org/shidenggui/easytrader)\n[![License](https://img.shields.io/github/license/shidenggui/easytrader.svg)](https://github.com/shidenggui/easytrader/blob/master/LICENSE)\n\n* 进行自动的程序化股票交易\n* 支持跟踪 `joinquant`, `ricequant` 的模拟交易\n* 支持跟踪 雪球组合 调仓\n* 支持通用的同花顺客户端模拟操作\n* 实现自动登录\n* 支持通过 webserver 远程操作客户端\n* 支持命令行调用，方便其他语言适配\n* 基于 Python3.6, Win。注: Linux 仅支持雪球\n\n\n### 微信群以及公众号\n\n欢迎大家扫码关注公众号「食灯鬼」，一起交流。进群可通过菜单加我好友，备注量化。\n\n![公众号二维码](https://gitee.com/shidenggui/assets/raw/master/uPic/mp-qr.png)\n\n若二维码因 Github 网络无法打开，请点击[公众号二维码](https://gitee.com/shidenggui/assets/raw/master/uPic/mp-qr.png)直接打开图片。\n\n### Author\n\n**easytrader** © [shidenggui](https://github.com/shidenggui), Released under the [MIT](./LICENSE) License.<br>\n\n> Blog [@shidenggui](https://shidenggui.com) · Weibo [@食灯鬼](https://www.weibo.com/u/1651274491) · Twitter [@shidenggui](https://twitter.com/shidenggui)\n\n### 相关\n\n[获取新浪免费实时行情的类库: easyquotation](https://github.com/shidenggui/easyquotation)\n\n[简单的股票量化交易框架 使用 easytrader 和 easyquotation](https://github.com/shidenggui/easyquant)\n\n\n### 支持券商\n\n* 海通客户端(海通网上交易系统独立委托)\n* 华泰客户端(网上交易系统（专业版Ⅱ）)\n* 国金客户端(全能行证券交易终端PC版)\n* 其他券商通用同花顺客户端(需要手动登陆)\n\n\n### 模拟交易\n\n* 雪球组合 by @[haogefeifei](https://github.com/haogefeifei)（[说明](doc/xueqiu.md)）\n\n### 使用文档\n\n[中文文档](http://easytrader.readthedocs.io/zh/master/)\n\n\n### 作者其他作品\n* [大数据网络小说推荐系统 - 推书君](https://www.tuishujun.com)\n* [中文独立个人博客导航 - bloghub.fun](https://bloghub.fun)\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "easytrader",
          "type": "tree",
          "content": null
        },
        {
          "name": "gj_client.json",
          "type": "blob",
          "size": 0.0654296875,
          "content": "{\n  \"user\": \"国金用户名\",\n  \"password\": \"国金明文密码\"\n}"
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 0.1630859375,
          "content": "site_name: easytrader\npages:\n  - Home: index.md\n  - 安装: install.md\n  - 使用: usage.md\n  - 常见问题: help.md\n  - 其他: 'other/xueqiu.md'\ntheme: readthedocs\n"
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.0361328125,
          "content": "[mypy]\nignore_missing_imports = True\n"
        },
        {
          "name": "readthedocs-requirements.txt",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.6025390625,
          "content": "-i http://mirrors.aliyun.com/pypi/simple/\n--trusted-host mirrors.aliyun.com\nbeautifulsoup4==4.6.0\nbs4==0.0.1\ncertifi==2018.4.16\nchardet==3.0.4\nclick==6.7\ncssselect==1.0.3; python_version != '3.3.*'\ndill==0.2.8.2\neasyutils==0.1.7\nflask==1.0.2\nidna==2.7\nitsdangerous==0.24\njinja2==2.10\nlxml==4.2.3\nmarkupsafe==1.0\nnumpy==1.15.0; python_version >= '2.7'\npandas==0.23.3\npillow==5.2.0\npyperclip==1.6.4\npyquery==1.4.0; python_version != '3.0.*'\npytesseract==0.2.4\npython-dateutil==2.7.3\npython-xlib==0.23\npytz==2018.5\npywinauto==0.6.6\nrequests==2.19.1\nsix==1.11.0\nurllib3==1.23; python_version != '3.1.*'\nwerkzeug==0.14.1\n\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 2.708984375,
          "content": "# coding:utf8\r\nfrom setuptools import setup\r\n\r\nlong_desc = \"\"\"\r\neasytrader\r\n===============\r\n\r\n* easy to use to trade in China Stock\r\n\r\nInstallation\r\n--------------\r\n\r\npip install easytrader\r\n\r\nUpgrade\r\n---------------\r\n\r\n    pip install easytrader --upgrade\r\n\r\nQuick Start\r\n--------------\r\n\r\n::\r\n\r\n    import easytrader\r\n\r\n    user = easytrader.use('ht')\r\n\r\n    user.prepare('account.json')\r\n\r\n    user.balance\r\n\r\nreturn::\r\n\r\n    [{ 'asset_balance': '资产总值',\r\n       'current_balance': '当前余额',\r\n       'enable_balance': '可用金额',\r\n       'market_value': '证券市值',\r\n       'money_type': '币种',\r\n       'pre_interest': '预计利息' ]}\r\n\r\n    user.position\r\n\r\nreturn::\r\n\r\n    [{'cost_price': '摊薄成本价',\r\n       'current_amount': '当前数量',\r\n       'enable_amount': '可卖数量',\r\n       'income_balance': '摊薄浮动盈亏',\r\n       'keep_cost_price': '保本价',\r\n       'last_price': '最新价',\r\n       'market_value': '证券市值',\r\n       'position_str': '定位串',\r\n       'stock_code': '证券代码',\r\n       'stock_name': '证券名称'}]\r\n\r\n    user.entrust\r\n\r\nreturn::\r\n\r\n    [{'business_amount': '成交数量',\r\n      'business_price': '成交价格',\r\n      'entrust_amount': '委托数量',\r\n      'entrust_bs': '买卖方向',\r\n      'entrust_no': '委托编号',\r\n      'entrust_price': '委托价格',\r\n      'entrust_status': '委托状态',  # 废单 / 已报\r\n      'report_time': '申报时间',\r\n      'stock_code': '证券代码',\r\n      'stock_name': '证券名称'}]\r\n\r\n    user.buy('162411', price=5.55)\r\n\r\n    user.sell('16411', price=5.65)\r\n\r\n\"\"\"\r\n\r\nsetup(\r\n    name=\"easytrader\",\r\n    version=\"0.23.0\",\r\n    description=\"A utility for China Stock Trade\",\r\n    long_description=long_desc,\r\n    author=\"shidenggui\",\r\n    author_email=\"longlyshidenggui@gmail.com\",\r\n    license=\"BSD\",\r\n    url=\"https://github.com/shidenggui/easytrader\",\r\n    keywords=\"China stock trade\",\r\n    install_requires=[\r\n        \"requests\",\r\n        \"six\",\r\n        \"easyutils\",\r\n        \"flask\",\r\n        \"pywinauto==0.6.6\",\r\n        \"pillow\",\r\n        \"pandas\",\r\n    ],\r\n    classifiers=[\r\n        \"Development Status :: 4 - Beta\",\r\n        \"Programming Language :: Python :: 2.6\",\r\n        \"Programming Language :: Python :: 2.7\",\r\n        \"Programming Language :: Python :: 3.2\",\r\n        \"Programming Language :: Python :: 3.3\",\r\n        \"Programming Language :: Python :: 3.4\",\r\n        \"Programming Language :: Python :: 3.5\",\r\n        \"License :: OSI Approved :: BSD License\",\r\n    ],\r\n    packages=[\"easytrader\", \"easytrader.config\", \"easytrader.utils\"],\r\n    package_data={\r\n        \"\": [\"*.jar\", \"*.json\"],\r\n        \"config\": [\"config/*.json\"],\r\n        \"thirdlibrary\": [\"thirdlibrary/*.jar\"],\r\n    },\r\n)\r\n"
        },
        {
          "name": "test-requirements.txt",
          "type": "blob",
          "size": 0.0390625,
          "content": "-r requirements.txt\n\npytest\npytest-cov\n\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "xq.json",
          "type": "blob",
          "size": 0.2275390625,
          "content": "{\n  \"cookies\": \"雪球 cookies，登陆后获取，获取方式见 https://smalltool.github.io/2016/08/02/cookie/\",\n  \"portfolio_code\": \"组合代码(例:ZH818559)\",\n  \"portfolio_market\": \"交易市场(例:us 或者 cn 或者 hk)\"\n}\n"
        },
        {
          "name": "yh_client.json",
          "type": "blob",
          "size": 0.0654296875,
          "content": "{\n  \"user\": \"银河用户名\",\n  \"password\": \"银河明文密码\"\n}"
        }
      ]
    }
  ]
}