{
  "metadata": {
    "timestamp": 1736560622538,
    "page": 253,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "explodinggradients/ragas",
      "stars": 7838,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0107421875,
          "content": "Dockerfile\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.14453125,
          "content": "# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\ncover/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\n.pybuilder/\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n#   For a library or package, you might want to ignore these files since the code is\n#   intended to run in multiple environments; otherwise, check them in:\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# poetry\n#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.\n#   This is especially recommended for binary packages to ensure reproducibility, and is more\n#   commonly ignored for libraries.\n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control\n#poetry.lock\n\n# pdm\n#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.\n#pdm.lock\n#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it\n#   in version control.\n#   https://pdm.fming.dev/#use-with-ide\n.pdm.toml\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n\n# pytype static type analyzer\n.pytype/\n\n# Cython debug symbols\ncython_debug/\n\n# PyCharm\n#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can\n#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore\n#  and can be added to the global gitignore or merged into this file.  For a more nuclear\n#  option (not recommended) you can uncomment the following to ignore the entire idea folder.\n.idea/\n\n# Ragas specific\nexperiments/\n**/fil-result/\nsrc/ragas/_version.py\n.vscode\n.envrc\nuv.lock\n.cache/\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.279296875,
          "content": "version: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.12\"\n  commands:\n    - pip install -e .[docs]\n    - if [ -n \"$GH_TOKEN\" ]; then pip install git+https://${GH_TOKEN}@github.com/squidfunk/mkdocs-material-insiders.git; fi\n    - mkdocs build --site-dir $READTHEDOCS_OUTPUT/html\n"
        },
        {
          "name": "DEVELOPMENT.md",
          "type": "blob",
          "size": 2.669921875,
          "content": "# Development Guide for ragas\n\nThis document provides guidelines for developing and contributing to the ragas project.\n\n## Setting up the Development Environment\n\n1. **Fork the Repository**\n   Fork the [ragas repository](https://github.com/explodinggradients/ragas) on GitHub.\n\n2. **Clone your Fork**\n   ```\n   git clone https://github.com/YOUR_USERNAME/ragas.git\n   cd ragas\n   ```\n\n3. **Set up a Virtual Environment**\n   ```\n   python -m venv venv\n   source venv/bin/activate  # On Windows, use `venv\\Scripts\\activate`\n   ```\n\n4. **Install Dependencies**\n   ```\n   pip install -U setuptools  # Required on newer Python versions (e.g., 3.11)\n   pip install -e \".[dev]\"\n   ```\n\n## Development Workflow\n\n1. **Create a New Branch**\n   ```\n   git checkout -b feature/your-feature-name\n   ```\n\n2. **Make Changes and Commit**\n   ```\n   git add .\n   git commit -m \"Your descriptive commit message\"\n   ```\n\n3. **Push Changes to Your Fork**\n   ```\n   git push origin feature/your-feature-name\n   ```\n\n4. **Create a Pull Request**\n   Go to the original ragas repository and create a new pull request from your feature branch.\n\n## Coding Standards\n\n- Follow PEP 8 guidelines for Python code.\n- Use type hints where possible.\n- Write docstrings for all functions, classes, and modules.\n- Ensure all tests pass before submitting a pull request.\n\nYou can run the following command to check for code style issues:\n```bash\nmake run-ci\n```\n\nAdding a `V=1` option makes the output more verbose, showing normally hidden commands, like so:\n```bash\nmake run-ci V=1\n```\n\n## Running Tests\n\nTo run the test suite:\n\n```bash\nmake test\n```\n\n## Documentation\n\n- Update documentation for any new features or changes to existing functionality.\n- Use [Google style](https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html) for docstrings.\n\n## Submitting Pull Requests\n\n1. Ensure your code adheres to the project's coding standards.\n2. Include tests for new functionality.\n3. Update documentation as necessary.\n4. Provide a clear description of the changes in your pull request.\n\nThank you for contributing to ragas!\n\n\n## Debugging Logs\n\nTo view the debug logs for any module, you can set the following.\n```py\nimport logging\n\n# Configure logging for the ragas._analytics module\nanalytics_logger = logging.getLogger('ragas._analytics')\nanalytics_logger.setLevel(logging.DEBUG)\n\n# Create a console handler and set its level\nconsole_handler = logging.StreamHandler()\nconsole_handler.setLevel(logging.DEBUG)\n\n# Create a formatter and add it to the handler\nformatter = logging.Formatter('%(name)s - %(levelname)s - %(message)s')\nconsole_handler.setFormatter(formatter)\n\n# Add the handler to the logger\nanalytics_logger.addHandler(console_handler)\n```"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0869140625,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2023] [Exploding Gradients]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.3896484375,
          "content": "GIT_ROOT ?= $(shell git rev-parse --show-toplevel)\n\n# Optionally show commands being executed with V=1\nQ := $(if $(V),,@)\n\nhelp: ## Show all Makefile targets\n\t$(Q)grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = \":.*?## \"}; {printf \"\\033[33m%-30s\\033[0m %s\\n\", $$1, $$2}'\n\n.PHONY: format lint type style clean run-benchmarks\nformat: ## Running code formatter: black and isort\n\t@echo \"(isort) Ordering imports...\"\n\t$(Q)isort .\n\t@echo \"(black) Formatting codebase...\"\n\t$(Q)black --config pyproject.toml src tests docs\n\t@echo \"(black) Formatting stubs...\"\n\t$(Q)find src -name \"*.pyi\" ! -name \"*_pb2*\" -exec black --pyi --config pyproject.toml {} \\;\n\t@echo \"(ruff) Running fix only...\"\n\t$(Q)ruff check src docs tests --fix-only\nlint: ## Running lint checker: ruff\n\t@echo \"(ruff) Linting development project...\"\n\t$(Q)ruff check src docs tests\ntype: ## Running type checker: pyright\n\t@echo \"(pyright) Typechecking codebase...\"\n\tPYRIGHT_PYTHON_FORCE_VERSION=latest pyright src/ragas\nclean: ## Clean all generated files\n\t@echo \"Cleaning all generated files...\"\n\t$(Q)cd $(GIT_ROOT)/docs && $(MAKE) clean\n\t$(Q)cd $(GIT_ROOT) || exit 1\n\t$(Q)find . -type f -name '*.py[co]' -delete -o -type d -name __pycache__ -delete\ntest: ## Run tests\n\t@echo \"Running tests...\"\n\t$(Q)pytest --nbmake tests/unit $(shell if [ -n \"$(k)\" ]; then echo \"-k $(k)\"; fi)\ntest-e2e: ## Run end2end tests\n\techo \"running end2end tests...\"\n\t$(Q)pytest --nbmake tests/e2e -s\nrun-ci: format lint type test ## Running all CI checks\n\n# Docs\nbuild-docsite: ## Use GPT4 to rewrite the documentation\n\t@echo \"convert ipynb notebooks to md files\"\n\t$(Q)python $(GIT_ROOT)/docs/ipynb_to_md.py\n\t$(Q)mkdocs build\nserve-docsite: ## Build and serve documentation\n\t$(Q)mkdocs serve --dirtyreload\n\n# Benchmarks\nrun-benchmarks-eval: ## Run benchmarks for Evaluation\n\t@echo \"Running benchmarks for Evaluation...\"\n\t$(Q)cd $(GIT_ROOT)/tests/benchmarks && python benchmark_eval.py\nrun-benchmarks-testset: ## Run benchmarks for TestSet Generation\n\t@echo \"Running benchmarks for TestSet Generation...\"\n\t$(Q)cd $(GIT_ROOT)/tests/benchmarks && python benchmark_testsetgen.py\nrun-benchmarks-in-docker: ## Run benchmarks in docker\n\t@echo \"Running benchmarks in docker...\"\n\t$(Q)cd $(GIT_ROOT)\n\tdocker buildx build --build-arg OPENAI_API_KEY=$(OPENAI_API_KEY) -t ragas-benchmark -f $(GIT_ROOT)/tests/benchmarks/Dockerfile .\n\tdocker inspect ragas-benchmark:latest | jq \".[0].Size\" | numfmt --to=si\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.5927734375,
          "content": "<h1 align=\"center\">\n  <img style=\"vertical-align:middle\" height=\"200\"\n  src=\"./docs/_static/imgs/logo.png\">\n</h1>\n<p align=\"center\">\n  <i>Supercharge Your LLM Application Evaluations 🚀</i>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/explodinggradients/ragas/releases\">\n        <img alt=\"GitHub release\" src=\"https://img.shields.io/github/release/explodinggradients/ragas.svg\">\n    </a>\n    <a href=\"https://www.python.org/\">\n            <img alt=\"Build\" src=\"https://img.shields.io/badge/Made%20with-Python-1f425f.svg?color=purple\">\n    </a>\n    <a href=\"https://github.com/explodinggradients/ragas/blob/master/LICENSE\">\n        <img alt=\"License\" src=\"https://img.shields.io/github/license/explodinggradients/ragas.svg?color=green\">\n    </a>\n    <a href=\"https://pypi.org/project/ragas/\">\n        <img alt=\"Open In Colab\" src=\"https://img.shields.io/pypi/dm/ragas\">\n    </a>\n    <a href=\"https://discord.gg/5djav8GGNZ\">\n        <img alt=\"discord-invite\" src=\"https://img.shields.io/discord/1119637219561451644\">\n    </a>\n</p>\n\n<h4 align=\"center\">\n    <p>\n        <a href=\"https://docs.ragas.io/\">Documentation</a> |\n        <a href=\"#fire-quickstart\">Quick start</a> |\n        <a href=\"https://discord.gg/5djav8GGNZ\">Join Discord</a> |\n        <a href=\"https://blog.ragas.io/\">Blog</a> |\n        <a href=\"https://newsletter.ragas.io/\">NewsLetter</a> |\n        <a href=\"https://www.ragas.io/careers\">Careers</a>\n    <p>\n</h4>\n\nObjective metrics, intelligent test generation, and data-driven insights for LLM apps\n\nRagas is your ultimate toolkit for evaluating and optimizing Large Language Model (LLM) applications. Say goodbye to time-consuming, subjective assessments and hello to data-driven, efficient evaluation workflows.\nDon't have a test dataset ready? We also do production-aligned test set generation.\n\n## Key Features\n\n- 🎯 Objective Metrics: Evaluate your LLM applications with precision using both LLM-based and traditional metrics.\n- 🧪 Test Data Generation: Automatically create comprehensive test datasets covering a wide range of scenarios.\n- 🔗 Seamless Integrations: Works flawlessly with popular LLM frameworks like LangChain and major observability tools.\n- 📊 Build feedback loops: Leverage production data to continually improve your LLM applications.\n\n## :shield: Installation\n\nPypi: \n\n```bash\npip install ragas\n```\n\nAlternatively, from source:\n\n```bash\npip install git+https://github.com/explodinggradients/ragas\n```\n\n## :fire: Quickstart\n\n### Evaluate your LLM App\n\nThis is 5 main lines:\n\n```python\nfrom ragas import SingleTurnSample\nfrom ragas.metrics import AspectCritic\n\ntest_data = {\n    \"user_input\": \"summarise given text\\nThe company reported an 8% rise in Q3 2024, driven by strong performance in the Asian market. Sales in this region have significantly contributed to the overall growth. Analysts attribute this success to strategic marketing and product localization. The positive trend in the Asian market is expected to continue into the next quarter.\",\n    \"response\": \"The company experienced an 8% increase in Q3 2024, largely due to effective marketing strategies and product adaptation, with expectations of continued growth in the coming quarter.\",\n}\nevaluator_llm = LangchainLLMWrapper(ChatOpenAI(model=\"gpt-4o\"))\nmetric = AspectCritic(name=\"summary_accuracy\",llm=evaluator_llm, definition=\"Verify if the summary is accurate.\")\nawait metric.single_turn_ascore(SingleTurnSample(**test_data))\n```\n\nFind the complete [Quickstart Guide](https://docs.ragas.io/en/latest/getstarted/evals)\n\n### Analyze your Evaluation\n\nSign up for [app.ragas.io]() to review, share and analyze your evaluations</a>\n\n<p align=\"left\">\n    <img src=\"docs/getstarted/ragas_get_started_evals.gif\" height=\"300\">\n</p>\n\nSee [how to use it](https://docs.ragas.io/en/latest/getstarted/evals/#analyzing-results)\n\n## 🫂 Community\n\nIf you want to get more involved with Ragas, check out our [discord server](https://discord.gg/5qGUJ6mh7C). It's a fun community where we geek out about LLM, Retrieval, Production issues, and more.\n\n## Contributors\n\n```yml\n+----------------------------------------------------------------------------+\n|     +----------------------------------------------------------------+     |\n|     | Developers: Those who built with `ragas`.                      |     |\n|     | (You have `import ragas` somewhere in your project)            |     |\n|     |     +----------------------------------------------------+     |     |\n|     |     | Contributors: Those who make `ragas` better.       |     |     |\n|     |     | (You make PR to this repo)                         |     |     |\n|     |     +----------------------------------------------------+     |     |\n|     +----------------------------------------------------------------+     |\n+----------------------------------------------------------------------------+\n```\n\nWe welcome contributions from the community! Whether it's bug fixes, feature additions, or documentation improvements, your input is valuable.\n\n1. Fork the repository\n2. Create your feature branch (git checkout -b feature/AmazingFeature)\n3. Commit your changes (git commit -m 'Add some AmazingFeature')\n4. Push to the branch (git push origin feature/AmazingFeature)\n5. Open a Pull Request\n\n## 🔍 Open Analytics\nAt Ragas, we believe in transparency. We collect minimal, anonymized usage data to improve our product and guide our development efforts.\n\n✅ No personal or company-identifying information\n\n✅ Open-source data collection [code](./src/ragas/_analytics.py)\n\n✅ Publicly available aggregated [data](https://github.com/explodinggradients/ragas/issues/49)\n\nTo opt-out, set the `RAGAS_DO_NOT_TRACK` environment variable to `true`.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 10.0634765625,
          "content": "site_name: Ragas\nrepo_name: explodinggradients/ragas\nrepo_url: https://github.com/explodinggradients/ragas\nwatch:\n  - src\n\n# Navigation\nnav:\n  - \"\": index.md\n  - 🚀 Get Started:\n      - getstarted/index.md\n      - Installation: getstarted/install.md\n      - Evaluate your first LLM App: getstarted/evals.md\n      - Evaluate a simple RAG: getstarted/rag_eval.md\n      - Generate Synthetic Testset for RAG: getstarted/rag_testset_generation.md\n  - 📚 Core Concepts:\n      - concepts/index.md\n      - Components:\n          - concepts/components/index.md\n          - General:\n              - Prompt: concepts/components/prompt.md\n          - Evaluation:\n              - Evaluation Sample: concepts/components/eval_sample.md\n              - Evaluation Dataset: concepts/components/eval_dataset.md\n      - Metrics:\n          - concepts/metrics/index.md\n          - Overview: concepts/metrics/overview/index.md\n          - Available Metrics:\n              - concepts/metrics/available_metrics/index.md\n              - Retrieval Augmented Generation:\n                  - Context Precision: concepts/metrics/available_metrics/context_precision.md\n                  - Context Recall: concepts/metrics/available_metrics/context_recall.md\n                  - Context Entities Recall: concepts/metrics/available_metrics/context_entities_recall.md\n                  - Noise Sensitivity: concepts/metrics/available_metrics/noise_sensitivity.md\n                  - Response Relevancy: concepts/metrics/available_metrics/answer_relevance.md\n                  - Faithfulness: concepts/metrics/available_metrics/faithfulness.md\n              - Agents or Tool Use Cases:\n                    - concepts/metrics/available_metrics/agents.md\n                    - Topic Adherence: concepts/metrics/available_metrics/agents/#topic-adherence\n                    - Tool Call Accuracy: concepts/metrics/available_metrics/agents/#tool-call-accuracy\n                    - Agent Goal Accuracy: concepts/metrics/available_metrics/agents/#agent-goal-accuracy\n              - Natural Language Comparison:\n                  - Factual Correctness: concepts/metrics/available_metrics/factual_correctness.md\n                  - Semantic Similarity: concepts/metrics/available_metrics/semantic_similarity.md\n                  - Traditional non LLM metrics:\n                    - concepts/metrics/available_metrics/traditional.md\n                    - Non LLM String Similarity: concepts/metrics/available_metrics/traditional/#non-llm-string-similarity\n                    - BLEU Score: concepts/metrics/available_metrics/traditional/#bleu-score\n                    - ROUGE Score: concepts/metrics/available_metrics/traditional/#rouge-score\n                    - String Presence: concepts/metrics/available_metrics/traditional/#string-presence\n                    - Exact Match: concepts/metrics/available_metrics/traditional/#exact-match\n              - SQL:\n                  - concepts/metrics/available_metrics/sql.md\n                  - Execution based Datacompy Score: concepts/metrics/available_metrics/sql/#execution-based-metrics\n                  - SQL Query Equivalence: concepts/metrics/available_metrics/sql/#sql-query-semantic-equivalence\n              - General Purpose:\n                  - concepts/metrics/available_metrics/general_purpose.md\n                  - Aspect Critic: concepts/metrics/available_metrics/general_purpose/#aspect-critic\n                  - Simple Criteria Scoring: concepts/metrics/available_metrics/general_purpose/#simple-criteria-scoring\n                  - Rubrics Based Scoring: concepts/metrics/available_metrics/general_purpose/#rubrics-based-criteria-scoring\n                  - Instance Specific Rubrics Scoring: concepts/metrics/available_metrics/general_purpose/#instance-specific-rubrics-criteria-scoring\n              - Other Tasks:\n                  - Summarization: concepts/metrics/available_metrics/summarization_score.md\n      - Test Data Generation:\n          - concepts/test_data_generation/index.md\n          - RAG:\n              - concepts/test_data_generation/rag.md\n              - KG Building: concepts/test_data_generation/rag/#knowledge-graph-creation\n              - Scenario Generation: concepts/test_data_generation/rag/#scenario-generation\n          - Agents or tool use:\n              - concepts/test_data_generation/agents.md\n      - Feedback Intelligence:\n          - concepts/feedback/index.md\n  - 🛠️ How-to Guides:\n      - howtos/index.md\n      - Customizations:\n          - howtos/customizations/index.md\n          - General:\n              - Customise models: howtos/customizations/customize_models.md\n              - Run Config: howtos/customizations/_run_config.md\n              - Caching: howtos/customizations/_caching.md\n          - Metrics:\n              - Modify Prompts: howtos/customizations/metrics/_modifying-prompts-metrics.md\n              - Adapt Metrics to Languages: howtos/customizations/metrics/_metrics_language_adaptation.md\n              - Write your own Metrics: howtos/customizations/metrics/_write_your_own_metric.md\n              - Write your own Metrics - (advanced): howtos/customizations/metrics/_write_your_own_metric_advanced.md\n              - Train and Align Metrics: howtos/customizations/metrics/train_your_own_metric.md\n          - Testset Generation:\n              - Non-English Testset Generation: howtos/customizations/testgenerator/_language_adaptation.md\n              - Persona Generation: howtos/customizations/testgenerator/_persona_generator.md\n              - Custom Single-hop Query: howtos/customizations/testgenerator/_testgen-custom-single-hop.md\n              - Custom Multi-hop Query: howtos/customizations/testgenerator/_testgen-customisation.md\n\n      - Applications:\n          - howtos/applications/index.md\n          - Metrics:\n            - Cost Analysis: howtos/applications/_cost.md\n            - Debug LLM Based Metrics: howtos/applications/_metrics_llm_calls.md\n      - Integrations:\n          - howtos/integrations/index.md\n          - Arize: howtos/integrations/_arize.md\n          - LangChain: howtos/integrations/langchain.md\n          - LangGraph: howtos/integrations/_langgraph_agent_evaluation.md\n          - LangSmith: howtos/integrations/langsmith.md\n          - LlamaIndex: howtos/integrations/_llamaindex.md\n      - Migrations:\n          - From v0.1 to v0.2: howtos/migrations/migrate_from_v01_to_v02.md\n  - 📖 References: \n    - references/index.md\n    - Core:\n      - Prompt: references/prompt.md\n      - LLMs: references/llms.md\n      - Embeddings: references/embeddings.md\n      - RunConfig: references/run_config.md\n      - Executor: references/executor.md\n      - Cache: references/cache.md\n    - Evaluation: \n      - Schemas: references/evaluation_schema.md\n      - Metrics: references/metrics.md\n      - evaluate(): references/evaluate.md\n    - Testset Generation: \n      - Schemas: references/testset_schema.md\n      - Graph: references/graph.md\n      - Transforms: references/transforms.md\n      - Synthesizers: references/synthesizers.md\n      - Generation: references/generate.md\n    - Integrations: references/integrations.md\n  - ❤️ Community: community/index.md\n\n# https://www.mkdocs.org/user-guide/configuration/#validation\nvalidation:\n  omitted_files: warn\n  absolute_links: warn\n  unrecognized_links: warn\n\n# Material-Docs Theme\ntheme:\n  name: material\n  logo: _static/imgs/ragas-logo.png\n  favicon: _static/favicon.ico\n  palette:\n    # Palette toggle for automatic mode\n    - media: \"(prefers-color-scheme)\"\n      toggle:\n        icon: material/brightness-auto\n        name: Switch to light mode\n\n    # Palette toggle for light mode\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: ragas_light\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n\n    # Palette toggle for dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: ragas_dark\n      toggle:\n        icon: material/brightness-4\n        name: Switch to system preference\n  features:\n    - content.tabs.link\n    - content.code.annotate\n    - content.code.copy\n    - announce.dismiss\n    - navigation.tabs\n    - navigation.path\n    - navigation.instant\n    - navigation.instant.prefetch\n    - navigation.instant.preview\n    - navigation.sections\n    - navigation.top\n    - navigation.tracking\n    - navigation.indexes\n    - navigation.footer\n    - search.suggest\n    - search.highlight\nmarkdown_extensions:\n  - pymdownx.highlight:\n      anchor_linenums: true\n      line_spans: __span\n      pygments_lang_class: true\n  - admonition\n  - pymdownx.inlinehilite\n  - pymdownx.details\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.emoji:\n      emoji_index: !!python/name:material.extensions.emoji.twemoji\n      emoji_generator: !!python/name:material.extensions.emoji.to_svg\n  - attr_list\n  - md_in_html\n  - pymdownx.arithmatex:\n      generic: true\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n  - pymdownx.snippets:\n      base_path: [\"./docs/extra/components/\"]\n\n# Extra CSS\nextra_css:\n  - extra/style.css\n\n# Plugins\nextra:\n  version:\n    provider: mike\n  analytics:\n    provider: google\n    property: !ENV GOOGLE_ANALYTICS_KEY\nplugins:\n  - search\n  - social\n  - git-revision-date-localized:\n      enabled: !ENV [MKDOCS_CI, false]\n      enable_creation_date: true\n  - git-committers:\n      enabled: !ENV [MKDOCS_CI, false]\n      repository: explodinggradients/ragas\n      branch: main\n  - mkdocstrings:\n      handlers:\n        python:\n          paths: [src]\n          options:\n            docstring_style: numpy\n            members_order: source\n            separate_signature: true\n            filters: [\"!^_\"]\n            docstring_options:\n              ignore_init_summary: true\n            merge_init_into_class: true\n            show_signature_annotations: true\n            signature_crossrefs: true\n  - glightbox\n  - gen-files:\n      scripts:\n        - docs/ipynb_to_md.py\nextra_javascript:\n  - _static/js/mathjax.js\n  - _static/js/header_border.js\n  - https://unpkg.com/mathjax@3/es5/tex-mml-chtml.js\n  - _static/js/toggle.js\n  - https://cdn.octolane.com/tag.js?pk=c7c9b2b863bf7eaf4e2a # octolane for analytics\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 1.833984375,
          "content": "[project]\nname = \"ragas\"\nrequires-python = \">=3.9\"\ndependencies = [\n    \"numpy\",\n    \"datasets\",\n    \"tiktoken\",\n    \"langchain\",\n    \"langchain-core\",\n    \"langchain-community\",\n    \"langchain_openai\",\n    \"nest-asyncio\",\n    \"appdirs\",\n    \"pydantic>=2\",\n    \"openai>1\",\n    \"diskcache>=5.6.3\",\n]\ndynamic = [\"version\", \"readme\"]\n\n[project.optional-dependencies]\nall = [\n    \"sentence-transformers\",\n    \"transformers\",\n    \"nltk\",\n    \"rouge_score\",\n    \"rapidfuzz\",\n    \"pandas\",\n    \"datacompy\",\n    \"llama_index\",\n]\ndocs = [\n    \"mkdocs>=1.6.1\",\n    \"mkdocs-material\",\n    \"mkdocs-material[imaging]\",\n    \"mkdocstrings[python]\",\n    \"mkdocs-glightbox\",\n    \"mkdocs-autorefs\",\n    \"mkdocs-gen-files\",\n    \"mkdocs-literate-nav\",\n    \"mkdocs-section-index\",\n    \"mkdocs-git-committers-plugin-2\",\n    \"mkdocs-git-revision-date-localized-plugin\",\n]\ndev = [\n    \"rich\",\n    \"ruff\",\n    \"isort\",\n    \"black[jupyter]\",\n    \"pyright\",\n    \"llama_index\",\n    \"notebook\",\n    \"sphinx-autobuild\",\n    \"sentence-transformers\",\n    \"transformers\",\n    \"fastembed\",\n    \"graphene\",\n    \"rouge_score\",\n    \"nltk\",\n    \"rapidfuzz\",\n    \"pandas\",\n    \"datacompy\",\n]\ntest = [\n    \"pytest\",\n    \"pytest-xdist[psutil]\",\n    \"pytest-asyncio\",\n    \"llama_index\",\n    \"nbmake\",\n]\n[tool.setuptools]\npackage-dir = {\"\" = \"src\"}\n\n[tool.setuptools.dynamic]\nreadme = {file = [\"README.md\"], content-type = \"text/markdown\"}\n\n[tool.ruff]\nexclude = [\"*.ipynb\"]\n\n[tool.ruff.lint]\nignore = [\"E501\"]\n\n[build-system]\nrequires = [\"setuptools>=45\", \"setuptools_scm[toml]>=6.2\"]\nbuild-backend = \"setuptools.build_meta\"\n\n[tool.setuptools_scm]\nwrite_to = \"src/ragas/_version.py\"\n\n[tool.pytest.ini_options]\naddopts = \"-n 0\"\nasyncio_default_fixture_loop_scope = \"function\"\n[pytest]\ntestpaths = [\"tests\"]\n\n[dependency-groups]\ndev = [\n    \"arize-phoenix>=6.1.0\",\n    \"openinference-instrumentation-langchain>=0.1.29\",\n]\n"
        },
        {
          "name": "references.md",
          "type": "blob",
          "size": 0.7890625,
          "content": "```\n@misc{\ntitle={ROUGE: A Package for Automatic Evaluation of Summaries},\nauthor={Chin-Yew Lin.}, year={2004},\nDOI=\"\"\n}\n\n@misc{\ntitle={Bleu: a Method for Automatic Evaluation of Machine Translation},\nauthor={Papineni et al.}, year={2002},\nDOI=10.3115/1073083.1073135\n}\n\n@misc{\ntitle={BERTScore: Evaluating Text Generation with BERT},\nauthor={Zhang et al.}, year={2019},\nDOI=https://doi.org/10.48550/arXiv.1904.09675\n}\n\n@misc{\ntitle={On Faithfulness and Faithfulness in Abstractive Summarization},\nauthor={Maynez* et al.}, year={2020},\nDOI=https://doi.org/10.48550/arXiv.2005.00661\n}\n\n@misc{\ntitle={Q^2: Evaluating Factual Consistency in Knowledge-Grounded Dialogues via Question Generation and Question Answering},\nauthor={Honovich et al.}, year={2021},\nDOI=https://doi.org/10.48550/arXiv.2104.08202\n}\n\n```\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}