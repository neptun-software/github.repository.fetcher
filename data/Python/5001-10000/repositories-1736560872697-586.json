{
  "metadata": {
    "timestamp": 1736560872697,
    "page": 586,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "RayVentura/ShortGPT",
      "stars": 5993,
      "defaultBranch": "stable",
      "files": [
        {
          "name": ".database",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3408203125,
          "content": "!*.py\n!*.json\n!*.yaml\n!*.template\n*.pyc\n**/__pycache__/\ntest.py\npublic/*\n!public/white_reddit_template.png\n!public/subscribe-animation.mp4\nz_doc/*\nz_other/*\nvideos/*\n.logs/\n.editing_assets/*\n.database/api_db.json\n.database/content_db.json\n.database/asset_db.json\nflagged/\n.vscode\n.env\nShortGPT.egg-info\ndist\nbuild\nsetup\ntest.ipynb\n.venv/\nMANIFEST.in"
        },
        {
          "name": "CHANGES.txt",
          "type": "blob",
          "size": 0.98828125,
          "content": "# CHANGES\n\n## Version 0.1.31\n- Fixing issue in AssetDatabase, where it was copying unexisting asset template file\n## Version 0.1.3\n- Requiring a youtube url as the subscribe animation url in the EditingStep.ADD_SUBSCRIBE_ANIMATION step.\n- Adding a default subscribe animation youtube link by default shipped in the AssetDatabase\n- Making path imports relative for gpt prompts and editing blocks and flows.\n## Version 0.1.2\n- Improving logs in content engines\n## Version 0.1.1\n- Adding AssetType in AssetDatabase\n- Adding ApiProvider in api_db\n- Fixing pip libary missing editing_framework module, prompt_template module\n## Version 0.1.0\n- Fixing the AssetDatabase when it's empty\n## Version 0.0.2\n- Implemented the content_translation_engine; a multilingual video dubbing content engine. The source can be found at shortGPT/engine/content_translation_engine.py.\n- Implemented the new EdgeTTS voice module; it can be found at shortgpt/audio/edge_voice_module.\n- Added documentation which can be found under docs/."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.009765625,
          "content": "# Use an official Python runtime as the parent image\nFROM python:3.11-bullseye\nRUN apt-get update && apt-get install -y \\\n    ffmpeg \\\n    imagemagick \\\n    ghostscript \\\n    fonts-roboto \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n# Update font cache\nRUN fc-cache -f -v\n\nRUN sed -i '/<policy domain=\"path\" rights=\"none\" pattern=\"@\\*\"/d' /etc/ImageMagick-6/policy.xml\n# Clean up APT when done\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Set the working directory in the container to /app\nWORKDIR /app\n\n# Install any Python packages specified in requirements.txt\n# Copy requirements file\nCOPY requirements.txt .\n\n# Install dependencies\nRUN pip install -r requirements.txt\n\n# Copy the local package directory content into the container at /app\nCOPY . /app\n\nEXPOSE 31415\n\n# Define any environment variables\n# ENV KEY Value\n\n# Print environment variables (for debugging purposes, you can remove this line if not needed)\nRUN [\"printenv\"]\n\n# Run Python script when the container launches\nCMD [\"python\", \"./runShortGPT.py\"]"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2024 Ray Ventura\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README-Docker.md",
          "type": "blob",
          "size": 0.4609375,
          "content": "# To run ShortGPT docker:\n\n\nFirst make a .env file with the API keys like this:\n\n```bash\nOPENAI_API_KEY=sk-_put_your_openai_api_key_here\nELEVENLABS_API_KEY=put_your_eleven_labs_api_key_here\nPEXELS_API_KEY=put_your_pexels_api_key_here\n```\n\n\nTo run Dockerfile do this:\n```bash\ndocker build -t short_gpt_docker:latest .\ndocker run -p 31415:31415 --env-file .env short_gpt_docker:latest\n```\nExport Docker image:\n```bash\ndocker save short_gpt_docker > short_gpt_docker.tar\n```\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4208984375,
          "content": "# 🚀🎬 ShortGPT \n## AI video automation framework\n<p align=\"center\">\n  <a href=\"https://discord.gg/uERx39ru3R\">\n    <img src=\"https://dcbadge.vercel.app/api/server/uERx39ru3R?compact=true&style=flat\">\n  </a>\n  <a href=\"https://star-history.com/#rayventura/shortgpt)\">\n    <img src=\"https://img.shields.io/github/stars/rayventura/shortgpt?style=social\">\n  </a>\n  <a href=\"https://pypi.org/project/shortgpt/\">\n    <img src=\"https://static.pepy.tech/personalized-badge/shortgpt?period=month&units=international_system&left_color=blue&right_color=green&left_text=Downloads/month\">\n  </a>\n  <a href=\"https://docs.shortgpt.ai/\">\n    <img src=\"https://img.shields.io/badge/docs-visit-blue\">\n  </a>  \n</p>\n\n<div align=\"center\" style=\"border-radius: 20px;\" width=\"18%\">\n    <img src=\"https://github.com/RayVentura/ShortGPT/assets/121462835/083c8dc3-bac5-42c1-a08d-3ff9686d18c5\" alt=\"ShortGPT-logo\" style=\"border-radius: 20px;\" width=\"18%\"/>\n</div>\n<div align=\"center\">\n  <a href=\"https://discord.gg/uERx39ru3R\">\n    <img src=\"https://img.shields.io/discord/1126042224979886160?color=7289da&logo=discord&logoColor=blue&labelColor=white&color=cyan\" alt=\"Join our Discord\" height=\"34\">\n  </a>\n</div>\n\n<div align=\"center\">\n⚡ Automating video and short content creation with AI ⚡\n</div>\n</br>\n\nFollow the installation steps below for running the web app locally (running the google Colab is highly recommanded). \nPlease read \"installation-notes.md\" for more details.\n## 🎥 Showcase ([Full video on YouTube](https://youtu.be/hpoSHq-ER8U))\n\nhttps://github.com/RayVentura/ShortGPT/assets/121462835/a802faad-0fd7-4fcb-aa82-6365c27ea5fe\n## 🎥 Voice Dubbing\n\n\nhttps://github.com/RayVentura/ShortGPT/assets/121462835/06f51b2d-f8b1-4a23-b299-55e0e18902ef\n\n## 🌟 Show Your Support\nWe hope you find ShortGPT helpful! If you do, let us know by giving us a star ⭐ on the repo. It's easy, just click on the 'Star' button at the top right of the page. Your support means a lot to us and keeps us motivated to improve and expand ShortGPT. Thank you and happy content creating! 🎉 \n\n[![GitHub star chart](https://img.shields.io/github/stars/rayventura/shortgpt?style=social)](https://github.com/RayVentura/ShortGPT/stargazers)\n## 🛠️ How it works\n![alt text](https://github.com/RayVentura/ShortGPT/assets/121462835/fcee74d4-f856-4481-949f-244558bf3bfa)\n## 📝 Introduction to ShortGPT \nShortGPT is a powerful framework for automating content creation. It simplifies video creation, footage sourcing, voiceover synthesis, and editing tasks. Of the most popular use-cases of ShortGPT is youtube automation and Tiktok creativity program automation.\n\n- 🎞️ **Automated editing framework**: Streamlines the video creation process with an LLM oriented video editing language.\n\n- 📃 **Scripts and Prompts**: Provides ready-to-use scripts and prompts for various LLM automated editing processes.\n\n- 🗣️ **Voiceover / Content Creation**: Supports multiple languages including English 🇺🇸, Spanish 🇪🇸, Arabic 🇦🇪, French 🇫🇷, Polish 🇵🇱, German 🇩🇪, Italian 🇮🇹, Portuguese 🇵🇹, Russian 🇷🇺, Mandarin Chinese 🇨🇳, Japanese 🇯🇵, Hindi 🇮🇳,Korean 🇰🇷, and way over 30 more languages (with EdgeTTS)\n\n- 🔗 **Caption Generation**: Automates the generation of video captions.\n\n- 🌐🎥 **Asset Sourcing**: Sources images and video footage from the internet, connecting with the web and Pexels API as necessary.\n\n- 🧠 **Memory and persistency**: Ensures long-term persistency of automated editing variables with TinyDB.\n\n## 🚀 Quick Start: Run ShortGPT on Google Colab (https://colab.research.google.com/drive/1_2UKdpF6lqxCqWaAcZb3rwMVQqtbisdE?usp=sharing)\n\nIf you prefer not to install the prerequisites on your local system, you can use the Google Colab notebook. This option is free and requires no installation setup.\n\n1. Click on the link to the Google Colab notebook: [https://colab.research.google.com/drive/1_2UKdpF6lqxCqWaAcZb3rwMVQqtbisdE?usp=sharing](https://colab.research.google.com/drive/1_2UKdpF6lqxCqWaAcZb3rwMVQqtbisdE?usp=sharing)\n\n2. Once you're in the notebook, simply run the cells in order from top to bottom. You can do this by clicking on each cell and pressing the 'Play' button, or by using the keyboard . Enjoy using ShortGPT!\n\n# Instructions for running shortGPT locally\nThis guide provides step-by-step instructions for installing shortGPT and its dependencies.\nTo run ShortGPT locally, you need Docker.\n\n## Installation Steps\n\nTo run ShortGPT, you need to have docker. Follow the instructions \"installation-notes.md\" for more details.\n\n1. For running the Dockerfile, do this:\n```bash\ndocker build -t short_gpt_docker:latest .\ndocker run -p 31415:31415 --env-file .env short_gpt_docker:latest\n```\n## Running runShortGPT.py Web Interface\n\n2. After running the script, a Gradio interface should open at your local host on port 31415 (http://localhost:31415)\n \n\n## Framework overview\n\n- 🎬 The `ContentShortEngine` is designed for creating shorts, handling tasks from script generation to final rendering, including adding YouTube metadata.\n\n- 🎥 The `ContentVideoEngine` is ideal for longer videos, taking care of tasks like generating audio, automatically sourcing background video footage, timing captions, and preparing background assets.\n\n- 🗣️ The `ContentTranslationEngine` is designed to dub and translate entire videos, from mainstream languages to more specific target languages. It takes a video file, or youtube link, transcribe it's audio, translates the content, voices it in a target language, adds captions , and gives back a new video, in a totally different language.\n\n- 🎞️ The automated `EditingEngine`, using Editing Markup Language and JSON, breaks down the editing process into manageable and customizable blocks, comprehensible to Large Language Models.\n\n💡 ShortGPT offers customization options to suit your needs, from language selection to watermark addition.\n\n🔧 As a framework, ShortGPT is adaptable and flexible, offering the potential for efficient, creative content creation.\n\nMore documentation incomming, please be patient.\n\n\n## Technologies Used\n\nShortGPT utilizes the following technologies to power its functionality:\n\n- **Moviepy**: Moviepy is used for video editing, allowing ShortGPT to make video editing and rendering\n\n- **Openai**: Openai is used for automating the entire process, including generating scripts and prompts for LLM automated editing processes.\n\n- **ElevenLabs**: ElevenLabs is used for voice synthesis, supporting multiple languages for voiceover creation.\n\n- **EdgeTTS**: Microsoft's FREE EdgeTTS is used for voice synthesis, supporting way many more language than ElevenLabs currently.\n\n- **Pexels**: Pexels is used for sourcing background footage, allowing ShortGPT to connect with the web and access a wide range of images and videos.\n\n- **Bing Image**: Bing Image is used for sourcing images, providing a comprehensive database for ShortGPT to retrieve relevant visuals.\n\nThese technologies work together to provide a seamless and efficient experience in automating video and short content creation with AI.\n\n## 💁 Contributing\n\nAs an open-source project in a rapidly developing field, we are extremely open to contributions, whether it would be in the form of a new feature, improved infrastructure, or better documentation.\n<p align=\"center\">\n  <a href=\"https://star-history.com/#RayVentura/ShortGPT&Date\">\n    <img src=\"https://api.star-history.com/svg?repos=RayVentura/ShortGPT&type=Date\" alt=\"Star History Chart\">\n  </a>\n</p>\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "installation-notes.md",
          "type": "blob",
          "size": 4.6826171875,
          "content": "** Thanks for Son Tran for the fixes on the installation guide. Here are the recommanded steps for installing ShortGPT:\n\n\n### You now need Docker to now run ShortGPT. If you can't run it with docker, please use the Google Colab.\n# To run ShortGPT docker:\n\n\nFirst make a .env file with the API keys like this:\n\n```bash\nOPENAI_API_KEY=sk-_put_your_openai_api_key_here\nELEVENLABS_API_KEY=put_your_eleven_labs_api_key_here\nPEXELS_API_KEY=put_your_pexels_api_key_here\n```\n\n\nTo run Dockerfile do this:\n```bash\ndocker build -t short_gpt_docker:latest .\ndocker run -p 31415:31415 --env-file .env short_gpt_docker:latest\n```\nExport Docker image:\n```bash\ndocker save short_gpt_docker > short_gpt_docker.tar\n```\n\n\n\n\n\n### Here are the steps to install it from scratch on Linux, Debian 11 x64:\n\nIn short, you need to use:\n- Python 3.11.3\n- openai package 0.28.0, then upgrade openai-whisper\n- ffmpeg 4.2.3\n- ImageMagick 7.1.1\n\n### 1. OS: Debian 11 x64\n```bash\nsudo apt update && sudo apt upgrade \nsudo apt install wget git libltdl-dev libjpeg-dev libpng-dev libtiff-dev libgif-dev libfreetype6-dev liblcms2-dev libxml2-dev wget build-essential libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev libffi-dev zlib1g-dev\n```\n\n### 2. Install Python version: 3.11.3\n```bash\nwget https://www.python.org/ftp/python/3.11.3/Python-3.11.3.tgz \ntar xzf Python-3.11.3.tgz \ncd Python-3.11.3 \n./configure --enable-optimizations\nmake install\n```\n\nTo check the Python version, use this command:\n```bash\npython3.11 -V\n```\nTo use pip, use this command:\n```bash\npip3.11 install <package-name>\n```\n\n### 3. Install ffmpeg version: 4.2.3\nShortGPT will accept this version of FFmpeg:\n\n3.1. Install Build Dependencies:\n\n```bash\nsudo apt update\nsudo apt build-dep ffmpeg\n```\n\n3.2. Clone FFmpeg Source Code:\n\n```bash\ngit clone https://git.ffmpeg.org/ffmpeg.git\ncd ffmpeg\ngit checkout n4.2.3\n```\n\n3.3. Configure FFmpeg Build:\n\n```bash\n./configure --enable-gpl --enable-version3 --enable-sdl2 --enable-fontconfig --enable-gnutls --enable-iconv --enable-libass --enable-libdav1d --enable-libbluray --enable-libfreetype --enable-libmp3lame --enable-libopencore-amrnb --enable-libopencore-amrwb --enable-libopenjpeg --enable-libopus --enable-libshine --enable-libsnappy --enable-libsoxr --enable-libtheora --enable-libtwolame --enable-libvpx --enable-libwavpack --enable-libwebp --enable-libx264 --enable-libx265 --enable-libxml2 --enable-lzma --enable-zlib --enable-gmp --enable-libvidstab --enable-libvorbis --enable-libvo-amrwbenc --enable-libmysofa --enable-libspeex --enable-libxvid --enable-libaom --enable-libmfx --enable-avisynth --enable-libopenmpt --enable-shared --disable-static\n```\n\nThis step checks for the necessary dependencies and configures the build based on your system.\n\n3.4. Build FFmpeg:\n\n```bash\nmake -j$(nproc)\n```\n\nThis step may take some time as it compiles the FFmpeg source code.\n\n3.5. Install FFmpeg:\n\n```bash\nsudo make install\n```\n\n3.6. Verify Installation:\n\n```bash\nffmpeg -version\n```\n\nThis should display the version information, and you should see version 4.2.3.\n\nOptional: Update Library Cache:\n\n```bash\nsudo ldconfig\n```\n\nThis updates the dynamic linker run-time bindings.\n\nThat's it! You should now have FFmpeg version 4.2.3 installed on your Debian 11 system.\n\nIf you are still facing with \"libavdevice.so.58\" error when running ffmpeg, run this command to fix it, remember to change the path:\n```bash\necho 'export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64/:/usr/local/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH' >> ~/.bashrc\nsource ~/.bashrc\n```\n\n### 4. Install ImageMagick 7.1.1:\n4.1. Clone ImageMagick:\n```bash\nsudo git clone https://github.com/ImageMagick/ImageMagick.git\n```\n4.2. Go to the ImageMagick folder and run configuration:\n```bash\ncd ImageMagick\n./configure\n```\n4.3. Make:\n```bash\nsudo make\n```\n4.4. Install complied code:\n```bash\nsudo make install\n```\n4.5. Update path:\n```bash\nsudo ldconfig /usr/local/lib\n```\n4.6. (Optional) Check version\n```bash\n$ magick -version\n```\n4.7. Fix Imagemagick policy.xml bug on Linux using MoviePy\n```bash\n!sed -i '/<policy domain=\"path\" rights=\"none\" pattern=\"@\\*\"/d' /etc/ImageMagick-6/policy.xml\n```\n\n### 5. Upgrade openai-whisper:\n```bash\npip3.11 install -U openai-whisper\n```\n\n### 6. (Optional) Install torch 2.1.0:\n```bash\npip3.11 install torch==2.1.0\n```\n\n### 7. This is a list of Python lib and their versions, I'm using them without errors:\n```bash\nedge-tts==6.1.9\nffmpeg==1.4\nffmpeg-python==0.2.0\ngradio==3.38.0==3.38.0\nmoviepy==1.0.3==1.0.3\nopenai==0.28.1==0.28.1\npillow==9.0.0==9.0.0\nproglog==0.1.10\nprogress==1.6\nprotobuf==3.20.3==3.20.3\npython-dotenv==1.0.0\nquestionary==2.0.1\ntiktoken==0.5.1\ntinydb==4.8.0\ntinymongo==0.2.0\ntorch==2.1.0\ntorchaudio==2.1.0\nwhisper-timestamped==1.12.20\nyt-dlp==2023.10.13\n```\n"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.271484375,
          "content": "ffmpeg\nffmpeg-python\npython-dotenv\ngradio_client==0.2.10\ngradio==3.38.0\nopenai==1.10.0\ntiktoken\ntinydb\ntinymongo\nproglog\nyt-dlp\ntorch\ntorchaudio\n### whisper timestamped \nwhisper-timestamped\nprotobuf==3.20.3\npillow==9.0.0\nmoviepy==1.0.3\nprogress\nquestionary\nedge-tts\nTTS==0.22.0\n"
        },
        {
          "name": "runShortGPT.py",
          "type": "blob",
          "size": 0.0791015625,
          "content": "from gui.gui_gradio import ShortGptUI\n\napp = ShortGptUI(colab=False)\napp.launch()"
        },
        {
          "name": "runShortGPTColab.py",
          "type": "blob",
          "size": 0.0791015625,
          "content": "from gui.gui_gradio import ShortGptUI\n\napp = ShortGptUI(colab=True)\napp.launch()\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 1.6435546875,
          "content": "from setuptools import setup, find_packages\nimport codecs\nimport os\n\nhere = os.path.abspath(os.path.dirname(__file__))\n\nwith codecs.open(os.path.join(here, \"README.md\"), encoding=\"utf-8\") as fh:\n    long_description = \"\\n\" + fh.read()\n\nVERSION = '0.1.31'\nDESCRIPTION = 'Automating video and short content creation with AI'\nLONG_DESCRIPTION = 'A powerful tool for automating content creation. It simplifies video creation, footage sourcing, voiceover synthesis, and editing tasks.'\n\n\nsetup(\n    name=\"shortgpt\",\n    version=VERSION,\n    author=\"RayVentura\",\n    author_email=\"\",\n    description=DESCRIPTION,\n    long_description_content_type=\"text/markdown\",\n    long_description=long_description,\n    packages=find_packages(),\n    package_data={'': ['*.yaml', '*.json']},    # This will include all yaml files in package\n    install_requires=[\n        'ffmpeg', \n        'python-dotenv', \n        'openai', \n        'tiktoken',\n        'tinydb',\n        'tinymongo',\n        'proglog',\n        'yt-dlp',\n        'torch',\n        'whisper-timestamped',\n        'torchaudio',\n        'pillow==9.0.0',\n        'protobuf==3.20.0',\n        'edge-tts',\n        'moviepy==1.0.3',\n        'progress',\n        'questionary',\n    ],\n    keywords=['python', 'video', 'content creation', 'AI', 'automation', 'editing', 'voiceover synthesis', 'video captions', 'asset sourcing', 'tinyDB'],\n    classifiers=[\n        \"Development Status :: 5 - Production/Stable\",\n        \"Intended Audience :: Developers\",\n        \"Programming Language :: Python :: 3\",\n        \"Operating System :: Unix\",\n        \"Operating System :: MacOS :: MacOS X\",\n        \"Operating System :: Microsoft :: Windows\",\n    ]\n)"
        },
        {
          "name": "shortGPT",
          "type": "tree",
          "content": null
        },
        {
          "name": "videos",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}