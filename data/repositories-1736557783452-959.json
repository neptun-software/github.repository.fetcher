{
  "metadata": {
    "timestamp": 1736557783452,
    "page": 959,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fyne-io/fyne",
      "stars": 25521,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.51,
          "content": "### Binaries and project specific files\ncmd/fyne/fyne\ncmd/fyne_demo/fyne_demo\ncmd/fyne_settings/fyne_settings\ncmd/hello/hello\nfyne-cross\n*.exe\n*.apk\n*.app\n*.tar.xz\n*.zip\n\n### Tests\n**/testdata/failed\n\n### Go\n# Output of the coverage tool\n*.out\n\n### macOS\n# General\n.DS_Store\n\n# Thumbnails\n._*\n\n### JetBrains\n.idea\n\n### VSCode\n.vscode\n\n### Vim\n# Swap\n[._]*.s[a-v][a-z]\n[._]*.sw[a-p]\n[._]s[a-v][a-z]\n[._]sw[a-p]\n\n# Session\nSession.vim\n\n# Temporary\n.netrwhist\n*~\n# Auto-generated tag files\ntags\n# Persistent undo\n[._]*.un~\n"
        },
        {
          "name": ".godocdown.import",
          "type": "blob",
          "size": 0.02,
          "content": "fyne.io/fyne/v2\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.48,
          "content": "Andy Williams <andy@andy.xyz>\nSteve OConnor <steveoc64@gmail.com>\nLuca Corbo <lu.corbo@gmail.com>\nPaul Hovey <paul@paulhovey.org>\nCharles Corbett <nafredy@gmail.com>\nTilo Prütz <tilo@pruetz.net>\nStephen Houston <smhouston88@gmail.com>\nStorm Hess <stormhess@gloryskulls.com>\nStuart Scott <stuart.murray.scott@gmail.com>\nJacob Alzén <jacalz@tutanota.com>\nCharles A. Daniels <charles@cdaniels.net>\nPablo Fuentes <f.pablo1@hotmail.com>\nChangkun Ou <hi@changkun.de>\nCedric Bail\nDrew Weymouth\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 62.95,
          "content": "# Changelog\n\nThis file lists the main changes with each version of the Fyne toolkit.\nMore detailed release notes can be found on the [releases page](https://github.com/fyne-io/fyne/releases). \n\n## 2.5.3 - 15 December 2024\n\n### Changed\n\n* Smoothly decelerate scroll on mobile\n* Added Spanish translation\n\n### Fixed\n\n* Starting location can be wrong in file dialogs with custom repository (#5200)\n* Improve how shortcut special keys for menu items are rendered on Windows and Linux (#5108)\n* Blank page in Chrome for Android\n* Mobile Entry: cursor arrows don't work (#5258)\n* FileDialog does not handle relative file URIs well. (#5234)\n* [Linux] Only change variant when color scheme changes\n* [Linux] Window with list flickers in Wayland (#5133)\n* Package command fails on OpenBSD (#5195)\n* System theme fallback is not working with custom themes\n* Translucency and images with Alpha channel (#1977)\n* Performance regression when scrolling inside the file dialog (#4307)\n* Empty but visible images consume high CPU on 2.4.x (#4345)\n* Improved performance of text render caching\n* nil pointer dereference in dialog.Resize() for color picker (#5236)\n* Tiny files written in iOS may be empty\n* Some SVG resources don't update appearance correctly with the theme (#3900)\n\n\n## 2.5.2 - 15 October 2024\n\n### Fixed\n\n* Sometimes fyne fails to setup dark mode on Windows (#4758)\n* Memory leak in fontMetrics cache on desktop driver (#4010)\n* Fix possible crash with badly formatted json translation\n* Tree widget doesn't display higher elements until a user selects one (#5095, #4346)\n* Update to the latest breaking API changes in go-text\n* Fix wrapping / truncation of multi-font text runs (#4998)\n* Test window title is not always set (#5116)\n* Deadlock in Button CreateRenderer() (#5114)\n* Fix possible crash in theme watching for windows\n* Fix issue with Movies folder on darwin file dialog\n* widget.Entry: validate when pasting from clipboard (#5058, #5028)\n* Reduce contention in some widget locks\n* Add Swedish translation\n* Improvements to documentation\n* Improved temp check for windows/msys\n* Fix split in a theme override container\n\n\n## 2.5.1 - 24 August 2024\n\n### Fixed\n\n * Apps with translations in new languages would not be recognised (#5015)\n * App ID can be ignored from metadata file with go build/run\n * Typing Chinese characters in widget.Entry and perform undo/redo crashes the app (#5001)\n * Assets would render Low-DPI before attaching to a canvas\n * Single click in file dialog enters two directories (#5053)\n * Light/Dark mode detection no longer works on Ubuntu with Fyne 2.5 (#5029)\n * Scroll acceleration logic causes scrolling to \"jump\" suddenly on macOS (#5067)\n * SetSystemTrayMenu doesn't work when run in goroutine (#5039)\n * stack overflow when calling SetRowHeight in table UpdateCell callback (#5007)\n * Resizing List causes visible items to refresh instead of resize (#4080)\n * Child widget with Hoverable() interface keeps parent widget's Tapped() function from being called. (#3906)\n * App Translation file is ignored / tries to load BR (#5015, #5040)\n * Missing theme variant auto-switching (dark/light) for Windows (#4537)\n * Get DoubleTapDelay from the OS if an API is available (#4448)\n * Entry cursor is not visible with animations off (#4508) \n * Redundant justify-content properties in CSS for centered-container class (#5045)\n * Update go-text/render to avoid crashing when rendering certain bitmap fonts (#5042)\n * Using container.NewThemeOverride leaks memory until window closing (#5000)\n\n\n## 2.5.0 - 14 July 2024\n\n### Added\n\n * Internationalisation support and translations (#605, #3249)\n * Look up system fonts for glyphs that cannot be found embedded (#2572, #1579)\n * Completed support for Wayland on Linux\n * Completed support for the Web driver (*except file handling)\n * Add support for XDG Desktop Portals when built with `-tags flatpak` on Linux\n * Activity indicator widget\n * InnerWindow and MultipleWindows containers\n * ThemeOverride container for grouping items with a different theme\n * Add `NativeWindow.RunNative` to use a native window handle (#4483)\n * Ability to request display stays on - `SetDisableScreenBlanking` (#4534, #3007)\n * Add Undo/Redo support for widget.Entry (#436)\n * Add AppendMarkdown function to RichText\n * Add option in List to hide separators (#3756)\n * New CustomPaddedLayout for more fine-grained container padding\n * Add SizeName property to Hyperlink widget\n * Support Ctrl+[backspace/delete] to delete the word to the left or right of the cursor\n * Add IntToFloat (and FloatToInt) in bindings Data binding (#4666)\n * Add ScrollToOffset/GetScrollOffset APIs for collection widgets\n * Add ColumnCount API to GridWrap widget\n * Disable and Enable for Slider widget (#3551)\n * Function `Remove` added to List bindings (#3100)\n * Form layout can now be vertical (labels above field) or adaptive for mobile\n * Add support for Bold, Italic and Underline for TextGrid (#1237)\n * Add support for setting a custom resource as the font source for text (#808)\n * New `test` functions `NewTempApp`, `NewTempWindow` and `TempWidgetRenderer` to free resources automatically\n\n### Changed\n\n * Fyne now depends on Go 1.19 at a minimum\n * Round the corners of scroll bars with new theme value\n * Improve contrast of text on highlight background colours\n * Layout of iOS and Android apps will adapt when keyboard appears (#566, #2371)\n * FyneApp.toml will now be loaded with `go build` (#4688)\n * Text wrapping will now wrap in dialogs (#2602)\n * System tray and tray menu icons on will now match theme on macOS (#4549)\n * Triple clicking in an Entry widget now selects current line (#4328)\n * About menu items will now override the macOS default About\n * System tray no longer shows tooltips (until we have full support)\n * Double tapping an item in a file dialog now selects and returns\n * Widgets should now use `theme.ForWidget()` instead of `theme.Default()` or static helpers\n\n### Fixed\n\n * Kannada characters not rendering correctly (#2654)\n * Notifications are not working on iOS (#4966)\n * Incorrect scaling on Steam Deck screen Accessibility (#4896)\n * Sometimes the last list row that should be visible doesn't show (#4909)\n * RichText swallowing whitespace after Markdown links (#4613, #4340)\n * Disabled app tabs can still be selected in popup menu (#4935)\n * Don't show title when mouse hover on Systray menu (#4916)\n * Trying to access a URL through canvas.NewImageFromURI() in a test results in a panic (#4863)\n * Don't insert tab character in Entry when Shift+Tab typed\n * Select Does Not Gain Focus When Tapped (#4767)\n * binding.Untyped crashes when set to nil bug (#4807)\n * Label and Slider not aligned in a FormItem (#4714)\n * Windows: App Icon in Notification (#2592)\n * Fix possible writing of empty preference data in some quit events\n * Allow application to set default view (list/grid) of file dialog before showing it (#4595)\n * Fix ScrollToOffset when viewport is larger than content size\n * Incorrect row header width in widget.Table (#4370)\n * Add missed truncation mode for hyperlink (#4335)\n * AppTab does not display blue indicator line if you create it empty and then Append items to it later.\n * Many optimisations in animation, draw speed, layout and widget size calculations\n * DocTabItem update text doesn't update the underline select bar (graphic glitch) (#3106)\n\n\n## 2.4.5 - 15 April 2024\n\n### Fixed\n\n* iOS files write would fail when over 16KB\n* storage.Delete not supported on Android/iOS (#2120)\n* layout.formLayout do not handle canvas.Text well in second column (#4665)\n* Fix building with ios17.4 (#4741)\n* Support template icon for system tray menu icons\n* Fix recognition of missing XDG user directories (#4650)\n* FileDialog.SetOnClosed not always working (#4651)\n* Upgrade GLFW for performance improvements and bug fixes\n* Multiple select popups can crash during background operations (#4730)\n* Controlling a negative slider with the left arrow key blocks after 8 steps (#4736)\n* cmd/fyne: command \"get\" is broken with Go 1.22 (#4684)\n* Race condition during system tray menu refresh (#4697)\n* Fyne release on Linux does not set Metadata().Release to true (#4711)\n* RichText leaks memory when replacing segments (#4723)\n\n\n## 2.4.4 - 13 February 2024\n\n### Fixed\n\n* Spaces could be appended to linux Exec command during packaging\n* Secondary mobile windows would not size correctly when padded\n* Setting Icon.Resource to nil will not clear rendering\n* Dismiss iOS keyboard if \"Done\" is tapped\n* Large speed improvement in Entry and GridWrap widgets\n* tests fail with macOS Assertion failure in NSMenu (#4572)\n* Fix image test failures on Apple Silicon\n* High CPU use when showing CustomDialogs (#4574)\n* Entry does not show the last (few) changes when updating a binding.String in a fast succession (#4082)\n* Calling Entry.SetText and then Entry.Bind immediately will ignore the bound value (#4235)\n* Changing theme while application is running doesn't change some parameters on some widgets (#4344)\n* Check widget: hovering/tapping to the right of the label area should not activate widget (#4527)\n* Calling entry.SetPlaceHolder inside of OnChanged callback freezes app (#4516)\n* Hyperlink enhancement: underline and tappable area shouldn't be wider than the text label (#3528)\n* Fix possible compile error from go-text/typesetting\n\n\n## 2.4.3 - 23 December 2023\n\n### Fixed\n\n* Fix OpenGL init for arm64 desktop devices \n* System tray icon on Mac is showing the app ID (#4416)\n* Failure with fyne release -os android/arm (#4174)\n* Android GoBack with forcefully close the app even if the keyboard is up (#4257)\n* *BSD systems using the wrong (and slow) window resize\n* Optimisations to reduce memory allocations in List, GridWrap, driver and mime type handling\n* Reduce calls to C and repeated size checks in painter and driver code\n\n\n## 2.4.2 - 22 November 2023\n\n### Fixed\n\n* Markdown only shows one horizontal rule (#4216)\n* Spacer in HBox with hidden item will cause an additional trailing padding (#4259)\n* Application crash when fast clicking the folders inside the file dialog (#4260)\n* failed to initialise OpenGL (#437)\n* App panic when clicking on a notification panel if there's a systray icon (#4385)\n* Systray cannot be shown on Ubuntu (#3678, #4381)\n* failed to initialise OpenGL on Windows dual-chip graphics cards (#437)\n* Reduce memory allocations for each frame painted\n* RichText may not refresh if segments manually replaced\n* Correct URI.Extension() documentation\n* Update for security fixes to x/sys and x/net\n* Inconsistent rendering of Button widget (#4243)\n* PasswordEntry initial text is not obscured (#4312)\n* Pasting text in Entry does not update cursor position display (#4181)\n\n\n## 2.4.1 - 9 October 2023\n\n### Fixed\n\n* Left key on tree now collapses open branch\n* Avoid memory leak in Android driver code\n* Entry Field on Android in Landscape Mode Shows \"0\" (#4036)\n* DocTabs Indicator remains visible after last tab is removed (#4220)\n* Fix mobile simulation builds on OpenBSD\n* Fix alignment of menu button on mobile\n* Fix Compilation with Android NDK r26\n* Clicking table headers causes high CPU consumption (#4264)\n* Frequent clicking on table may cause the program to not respond (#4210)\n* Application stops responding when scrolling a table (#4263)\n* Possible crash parsing malformed JSON color (#4270)\n* NewFolderOpen: incomplete filenames (#2165)\n* Resolve issue where storage.List could crash with short URI (#4271)\n* TextTruncateEllipsis abnormally truncates strings with multi-byte UTF-8 characters (#4283)\n* Last character doesn't appear in Select when there is a special character (#4293)\n* Resolve random crash in DocTab (#3909)\n* Selecting items from a list caused the keyboard to popup on Android (#4236)\n\n\n## 2.4.0 - 1 September 2023\n\n### Added\n\n* Rounded corners in rectangle (#1090)\n* Support for emoji in text\n* Layout debugging (with `-tags debug` build flag) (#3314)\n* GridWrap collection widget\n* Add table headers (#1658, #3594)\n* Add mobile back button handling (#2910)\n* Add option to disable UI animations (#1813)\n* Text truncation ellipsis (#1659)\n* Add support for binding tree data, include new `NewTreeWithData`\n* Add support for OpenType fonts (#3245)\n* Add `Window.SetOnDropped` to handle window-wide item drop on desktop\n* Add lists to the types supported by preferences API\n* Keyboard focus handling for all collection widgets\n* Add APIs for refreshing individual items in collections (#3826)\n* Tapping slider moves it to that position (#3650)\n* Add `OnChangeEnded` callback to `Slider` (#3652)\n* Added keyboard controls to `Slider`\n* Add `NewWarningThemedResource` and `NewSuccessThemedResource` along with `NewColoredResource` (#4040)\n* Custom hyperlink callback for rich text hyperlinks (#3335)\n* Added `dialog.NewCustomWithoutButtons`, with a `SetButtons` method (#2127, #2782)\n* Added `SetConfirmImportance` to `dialog.ConfirmDialog`.\n* Added `FormDialog.Submit()` to close and submit the dialog if validation passes\n* Rich Text image alignment (#3810)\n* Bring back `theme.HyperlinkColor` (#3867)\n* Added `Importance` field on `Label` to color the text\n* Navigating in entry quickly with ctrl key (#2462)\n* Support `.desktop` file metadata in `FyneApp.toml` for Linux and BSD\n* Support mobile simulator on FreeBSD\n* Add data binding boolean operators `Not`, `And` and `Or`\n* Added `Entry.Append`, `Select.SetOptions`, `Check.SetText`, `FormDialog.Submit`\n* Add `ShowPopUpAtRelativePosition` and `PopUp.ShowAtRelativePosition`\n* Add desktop support to get key modifiers with `CurrentKeyModifiers`\n* Add geometry helpers `NewSquareSize` and `NewSquareOffsetPos`\n* Add `--pprof` option to fyne build commands to enable profiling\n* Support compiling from Android (termux)\n\n### Changed\n\n* Go 1.17 or later is now required.\n* Theme updated for rounded corners on buttons and input widgets\n* `widget.ButtonImportance` is now `widget.Importance`\n* The `Max` container and layout have been renamed `Stack` for clarity\n* Refreshing an image will now happen in app-thread not render process, apps may wish to add async image load\n* Icons for macOS bundles are now padded and rounded, disable with \"-use-raw-icon\" (#3752)\n* Update Android target SDK to 33 for Play Store releases\n* Focus handling for List/Tree/Table are now at the parent widget not child elements\n* Accordion widget now fills available space - put it inside a `VBox` container for old behavior (#4126)\n* Deprecated theme.FyneLogo() for later removal (#3296)\n* Improve look of menu shortcuts (#2722)\n* iOS and macOS packages now default to using \"XCWildcard\" provisioning profile\n* Improving performance of lookup for theme data\n* Improved application startup time\n\n### Fixed\n\n* Rendering performance enhancements\n* `dialog.NewProgressInfinite` is deprecated, but dialog.NewCustom isn't equivalent\n* Mouse cursor desync with Split handle when dragging (#3791)\n* Minor graphic glitch with checkbox (#3792)\n* binding.String===>Quick refresh *b.val will appear with new data reset by a call to OnChange (#3774)\n* Fyne window becomes unresponsive when in background for a while (#2791)\n* Hangs on repeated calls to `Select.SetSelected` in table. (#3684)\n* `Select` has wrong height, padding and border (#4142)\n* `widget.ImageSegment` can't be aligned. (#3505)\n* Memory leak in font metrics cache (#4108)\n* Don't panic when loading preferences with wrong type (#4039)\n* Button with icon has wrong padding on right (#4124)\n* Preferences don't all save when written in `CloseIntercept` (#3170)\n* Text size does not update in Refresh for TextGrid\n* DocTab selection underline not updated when deleting an Item (#3905)\n* Single line Entry throws away selected text on submission (#4026)\n* Significantly improve performance of large `TextGrid` and `Tree` widgets\n* `List.ScrollToBottom` not scrolling to show the totality of the last Item (#3829)\n* Setting `Position1` of canvas.Circle higher than `Position2` causes panic. (#3949)\n* Enhance scroll wheel/touchpad scroll speed on desktop (#3492)\n* Possible build issue on Windows with app metadata\n* `Form` hint text has confusing padding to next widget (#4137)\n* `Entry` Placeholder Style Only Applied On Click (#4035)\n* Backspace and Delete key Do not Fire OnChanged Event (#4117)\n* Fix `ProgressBar` text having the wrong color sometimes\n* Window doesn't render when called for the first time from system tray and the last window was closed (#4163)\n* Possible race condition in preference change listeners\n* Various vulnerabilities resolved through updating dependencies \n* Wrong background for color dialog (#4199)\n\n\n## 2.3.5 - 6 June 2023\n\n### Fixed\n\n* Panic with unsupported font (#3646)\n* Temporary manifest file not closed after building on Windows\n* Panic when using autogenerated quit menu and having unshown windows (#3870)\n* Using `canvas.ImageScaleFastest` not working on arm64 (#3891)\n* Disabled password Entry should also disable the ActionItem (#3908)\n* Disabled RadioGroup does not display status (#3882)\n* Negative TableCellID Row (#2857)\n* Make sure we have sufficient space for the bar as well if content is tiny (#3898)\n* Leak in image painter when replacing image.Image source regularly\n* Links in Markdown/Rich Text lists breaks formatting (#2911)\n* Crash when reducing window to taskbar with popup opened (#3877)\n* RichText vertical scroll will truncate long content with horizontal lines (#3929)\n* Custom metadata would not apply with `fyne release` command\n* Horizontal CheckGroup overlap when having long text (#3005)\n* Fix focused colour of coloured buttons (#3462)\n* Menu separator not visible with light theme (#3814)\n\n\n## 2.3.4 - 3 May 2023\n\n### Fixed\n\n* Memory leak when switching theme (#3640)\n* Systray MenuItem separators not rendered in macOS root menu (#3759)\n* Systray leaks window handles on Windows (#3760)\n* RadioGroup miscalculates label widths in horizontal mode (#3386)\n* Start of selection in entry is shifted when moving too fast (#3804)\n* Performance issue in widget.List (#3816)\n* Moving canvas items (e.g. Images) does not cause canvas repaint (#2205)\n* Minor graphic glitch with checkbox (#3792)\n* VBox and HBox using heap memory that was not required\n* Menu hover is slow on long menus\n\n## 2.3.3 - 24 March 2023\n\n### Fixed\n\n* Linux, Windows and BSD builds could fail if gles was missing\n\n\n## 2.3.2 - 20 March 2023\n\n### Fixed\n\n* Fyne does not run perfectly on ARM-based MacOS platforms (#3639) *\n* Panic on closing window in form submit on Мac M2 (#3397) *\n* Wobbling slider effect for very small steps (#3648)\n* Fix memory leak in test canvas refresh\n* Optimise text texture memory by switching to single channel\n* Packaging an android fyne app that uses tags can fail (#3641)\n* NewAdaptiveGrid(0) blanks app window on start until first resize on Windows (#3669)\n* Unnecessary refresh when sliding Split container\n* Linux window resize refreshes all content\n* Themed and unthemed svg resources can cache collide\n* When packaging an ampersand in \"Name\" causes an error (#3195)\n* Svg in ThemedResource without viewBox does not match theme (#3714)\n* Missing menu icons in Windows system tray\n* Systray Menu Separators don't respect the submenu placement (#3642)\n* List row focus indicator disappears on scrolling (#3699)\n* List row focus not reset when row widget is reused to display a new item (#3700)\n* Avoid panic if accidental 5th nil is passed to Border container\n* Mobile simulator not compiling on Apple M1/2\n* Cropped letters in certain cases with the new v2.3.0 theme (#3500)\n\nMany thanks indeed to [Dymium](https://dymium.io) for sponsoring an Apple\nM2 device which allowed us to complete the marked (*) issues.\n\n\n## 2.3.1 - 13 February 2023\n\n### Changed\n\n* Pad app version to ensure Windows packages correctly (#3638)\n\n### Fixed\n\n* Custom shortcuts with fyne.KeyTab is not working (#3087)\n* Running a systray app with root privileges resulted in panic (#3120)\n* Markdown image with no title is not parsed (#3577)\n* Systray app on macOS panic when started while machine sleeps (#3609)\n* Runtime error with VNC on RaspbianOS (#2972)\n* Hovered background in List widget isn't reset when scrolling reuses an existing list item (#3584)\n* cmd/fyne package can't find FyneApp.toml when -src option has given (#3459)\n* TextWrapWord will cause crash in RichText unverified (#3498)\n* crash in widget.(*RichText).lineSizeToColumn (#3292)\n* Crash in widget.(*Entry).SelectedText (#3290)\n* Crash in widget.(*RichText).updateRowBounds.func1 (#3291)\n* window is max size at all times (#3507)\n* systray.Quit() is not called consistently when the app is closing (#3597)\n* Software rendering would ignore scale for text\n* crash when minimize a window which contains a stroked rectangle (#3552)\n* Menu item would not appear disabled initially\n* Wrong icon colour for danger and warning buttons\n* Embedding Fyne apps in iFrame alignment issue\n* Generated metadata can be in wrong directory\n* Android RootURI may not exist when used for storage (#3207)\n\n\n## 2.3.0 - 24 December 2022\n\n### Added\n\n* Shiny new theme that was designed for us\n* Improved text handling to support non-latin alphabets\n* Add cloud storage and preference support\n* Add menu icon and submenu support to system tray menus\n* More button importance levels `ErrorImportance`, `WarningImportance`\n* Support disabling of `AppTabs` and `DocTabs` items\n* Add image support to rich text (#2366)\n* Add CheckGroup.Remove (#3124)\n\n### Changed\n\n* The buttons on the default theme are no longer transparent, but we added more button importance types\n* Expose a storage.ErrNotExists for non existing documents (#3083)\n* Update `go-gl/glfw` to build against latest Glfw 3.3.8\n* List items in `widget.List` now implement the Focusable interface\n\n### Fixed\n\n* Displaying unicode or different language like Bengali doesn't work (#598)\n* Cannot disable container.TabItem (#1904)\n* Update Linux/XDG application theme to follow the FreeDesktop Dark Style Preference (#2657)\n* Running `fyne package -os android` needs NDK 16/19c (#3066)\n* Caret position lost when resizing a MultilineEntry (#3024)\n* Fix possible crash in table resize (#3369)\n* Memory usage surge when selecting/appending MultilineEntry text (#3426)\n* Fyne bundle does not support appending when parameter is a directory\n* Crash parsing invalid file URI (#3275)\n* Systray apps on macOS can only be terminated via the systray menu quit button (#3395)\n* Wayland Scaling support: sizes and distances are scaled wrong (#2850)\n* Google play console minimum API level 31 (#3375)\n* Data bound entry text replacing selection is ignored (#3340)\n* Split Container does not respect item's Visible status (#3232)\n* Android - Entry - OnSubmitted is not working (#3267)\n* Can't set custom CGO_CFLAGS and CGO_LDFLAGS with \"fyne package\" on darwin (#3276)\n* Text line not displayed in RichText (#3117)\n* Segfault when adding items directly in form struct (#3153)\n* Preferences RemoveValue does not save (#3229)\n* Create new folder directly from FolderDialog (#3174)\n* Slider drag handle is clipped off at minimum size (#2966)\n* Entry text \"flickering\" while typing (#3461)\n* Rendering of not changed canvas objects after an event (#3211)\n* Form dialog not displaying hint text and validation errors (#2781)\n\n\n## 2.2.4 - 9 November 2022\n\n### Fixes\n\n* Iphone incorrect click coordinates in zoomed screen view (#3122)\n* CachedFontFace seems to be causing crash (#3134)\n* Fix possible compile error if \"fyne build\" is used without icon metadata\n* Detect and use recent Android NDK toolchain\n* Handle fyne package -release and fyne release properly for Android and iOS\n* Fix issue with mobile simulation when systray used\n* Fix incorrect size and position for radio focus indicator (#3137)\n\n\n## 2.2.3 - 8 July 2022\n\n### Fixed\n\n* Regression: Preferences are not parsed at program start (#3125)\n* Wrappable RichText in a Split container causes crash (#3003, #2961)\n* meta.Version is always 1.0.0 on android & ios (#3109)\n\n\n## 2.2.2 - 30 June 2022\n\n### Fixed\n\n* Windows missing version metadata when packaged (#3046)\n* Fyne package would not build apps using old Fyne versions\n* System tray icon may not be removed on app exit in Windows\n* Emphasis in Markdown gives erroneous output in RichText (#2974)\n* When last visible window is closed, hidden window is set visible (#3059)\n* Do not close app when last window is closed but systrayMenu exists (#3092)\n* Image with ImageFillOriginal not showing (#3102)\n\n\n## 2.2.1 - 12 June 2022\n\n### Fixed\n\n* Fix various race conditions and compatibility issues with System tray menus\n* Resolve issue where macOS systray menu may not appear\n* Updated yaml dependency to fix CVE-2022-28948\n* Tab buttons stop working after removing a tab (#3050)\n* os.SetEnv(\"FYNE_FONT\") doesn't work in v2.2.0 (#3056)\n\n\n## 2.2.0 - 7 June 2022\n\n### Added\n\n* Add SetIcon method on ToolbarAction (#2475)\n* Access compiled app metadata using new `App.Metadata()` method\n* Add support for System tray icon and menu (#283)\n* Support for Android Application Bundle (.aab) (#2663)\n* Initial support for OpenBSD and NetBSD\n* Add keyboard shortcuts to menu (#682)\n* Add technical preview of web driver and `fyne serve` command\n* Added `iossimulator` build target (#1917)\n* Allow dynamic themes via JSON templates (#211)\n* Custom hyperlink callback (#2979)\n* Add support for `.ico` file when compiling for windows (#2412)\n* Add binding.NewStringWithFormat (#2890)\n* Add Entry.SetMinRowsVisible\n* Add Menu.Refresh() and MainMenu.Refresh() (#2853)\n* Packages for Linux and BSD now support installing into the home directory\n* Add `.RemoveAll()` to containers\n* Add an AllString validator for chaining together string validators\n\n### Changed\n\n* Toolbar item constructors now return concrete types instead of ToolbarItem\n* Low importance buttons no longer draw button color as a background\n* ProgressBar widget height is now consistent with other widgets\n* Include check in DocTabs menu to show current tab\n* Don't call OnScrolled if offset did not change (#2646)\n* Prefer ANDROID_NDK_HOME over the ANDROID_HOME ndk-bundle location (#2920)\n* Support serialisation / deserialisation of the widget tree (#5)\n* Better error reporting / handling when OpenGL is not available (#2689)\n* Memory is now better reclaimed on Android when the OS requests it\n* Notifications on Linux and BSD now show the application icon\n* Change listeners for preferences no longer run when setting the same value\n* The file dialog now shows extensions in the list view for better readability\n* Many optimisations and widget performance enhancements\n* Updated various dependencies to their latest versions\n\n### Fixed\n\n* SendNotification does not show app name on Windows (#1940)\n* Copy-paste via keyboard don't work translated keyboard mappings on Windows (#1220)\n* OnScrolled triggered when offset hasn't changed (#1868)\n* Carriage Return (\\r) is rendered as space (#2456)\n* storage.List() returns list with nil elements for empty directories (#2858)\n* Entry widget, position of cursor when clicking empty space (#2877)\n* SelectEntry cause UI hang (#2925)\n* Font cutoff with bold italics (#3001)\n* Fyne error: Preferences load error (#2936, 3015)\n* Scrolled List bad redraw when window is maximized (#3013)\n* Linux and BSD packages not being installable if the name contained spaces\n\n\n## 2.1.4 - 17 March 2022\n\n### Fixed\n\n* SetTheme() is not fully effective for widget.Form (#2810)\n* FolderOpenDialog SetDismissText is ineffective (#2830)\n* window.Resize() does not work if SetFixedSize(true) is set after (#2819)\n* Container.Remove() race causes crash (#2826, #2775, #2481)\n* FixedSize Window improperly sized if contains image with ImageFillOriginal (#2800)\n\n\n## 2.1.3 - 24 February 2022\n\n### Fixed\n\n* The text on button can't be show correctly when use imported font (#2512)\n* Fix issues with DocTabs scrolling (#2709)\n* Fix possible crash for tapping extended Radio or Check item\n* Resolve lookup of relative icons in FyneApp.toml\n* Window not shown when SetFixedSize is used without Resize (#2784)\n* Text and links in markdown can be rendered on top of each other (#2695)\n* Incorrect cursor movement in a multiline entry with wrapping (#2698)\n\n\n## 2.1.2 - 6 December 2021\n\n### Fixed\n\n* Scrolling list bound to data programmatically causes nil pointer dereference (#2549)\n* Rich text from markdown can get newlines wrong (#2589)\n* Fix crash on 32bit operating systems (#2603)\n* Compile failure on MacOS 10.12 Sierra (#2478)\n* Don't focus widgets on mobile where keyboard should not display (#2598)\n* storage.List doesn't return complete URI on Android for \"content:\" scheme (#2619)\n* Last word of the line and first word of the next line are joined in markdown parse (#2647)\n* Support for building `cmd/fyne` on Windows arm64\n* Fixed FreeBSD requiring installed glfw library dependency (#1928)\n* Apple M1: error when using mouse drag to resize window (#2188)\n* Struct binding panics in reload with slice field (#2607)\n* File Dialog favourites can break for certain locations (#2595)\n* Define user friendly names for Android Apps (#2653)\n* Entry validator not updating if content is changed via data binding after SetContent (#2639)\n* CenterOnScreen not working for FixedSize Window (#2550)\n* Panic in boundStringListItem.Get() (#2643)\n* Can't set an app/window icon to be an svg. (#1196)\n* SetFullScreen(false) can give error (#2588)\n\n\n## 2.1.1 - 22 October 2021\n\n### Fixed\n\n* Fix issue where table could select cells beyond data bound\n* Some fast taps could be ignored (#2484)\n* iOS app stops re-drawing mid-frame after a while (#950)\n* Mobile simulation mode did not work on Apple M1 computers\n* TextGrid background color can show gaps in render (#2493)\n* Fix alignment of files in list view of file dialog\n* Crash setting visible window on macOS to fixed size (#2488)\n* fyne bundle ignores -name flag in windows (#2395)\n* Lines with nil colour would crash renderer\n* Android -nm tool not found with NDK 23 (#2498)\n* Runtime panic because out of touchID (#2407)\n* Long text in Select boxes overflows out of the box (#2522)\n* Calling SetText on Label may not refresh correctly\n* Menu can be triggered by # key but not always Alt\n* Cursor position updates twice with delay (#2525)\n* widgets freeze after being in background and then a crash upon pop-up menu (#2536)\n* too many Refresh() calls may now cause visual artifacts in the List widget (#2548)\n* Entry.SetText may panic if called on a multiline entry with selected text (#2482)\n* TextGrid not always drawing correctly when resized (#2501)\n\n\n## 2.1.0 - 17 September 2021\n\n### Added\n\n* DocTabs container for handling multiple open files\n* Lifecycle API for handling foreground, background and other event\n* Add RichText widget and Markdown parser\n* Add TabWidth to TextStyle to specify tab size in spaces\n* Add CheckGroup widget for multi-select\n* Add FyneApp.toml metadata file to ease build commands\n* Include http and https in standard repositories\n* Add selection color to themes\n* Include baseline information in driver font measurement\n* Document storage API (App.Storage().Create() and others)\n* Add \"App Files\" to file dialog for apps that use document storage\n* Tab overflow on AppTabs\n* Add URI and Unbound type to data bindings\n* Add keyboard support for menus, pop-ups and buttons\n* Add SimpleRenderer to help make simple widgets (#709)\n* Add scroll functions for List, Table, Tree (#1892)\n* Add selection and disabling to MenuItem\n* Add Alignment to widget.Select (#2329)\n* Expose ScanCode for keyboard events originating from hardware (#1523)\n* Support macOS GPU switching (#2423)\n\n### Changed\n\n* Focusable widgets are no longer focused on tap, add canvas.Focus(obj) in Tapped handler if required\n* Move to background based selection for List, Table and Tree\n* Update fyne command line tool to use --posix style parameters\n* Switch from gz to xz compression for unix packages\n* Performance improvements with line, text and raster rendering\n* Items not yet visible can no longer be focused\n* Lines can now be drawn down to 1px (instead of 1dp) (#2298)\n* Support multiple lines of text on button (#2378)\n* Improved text layout speed by caching string size calculations\n* Updated to require Go 1.14 so we can use some new features\n* Window Resize request is now asynchronous\n* Up/Down keys take cursor home/end when on first/last lines respectively\n\n### Fixed\n\n* Correctly align text tabs (#1791)\n* Mobile apps theme does not match system (#472)\n* Toolbar with widget.Label makes the ToolbarAction buttons higher (#2257)\n* Memory leaks in renderers and canvases cache maps (#735)\n* FileDialog SetFilter does not work on Android devices (#2353)\n* Hover fix for List and Tree with Draggable objects\n* Line resize can flip slope (#2208)\n* Deadlocks when using widgets with data (#2348)\n* Changing input type with keyboard visible would not update soft keyboards\n* MainMenu() Close item does NOT call function defined in SetCloseIntercept (#2355)\n* Entry cursor position with mouse is offset vertically by theme.SizeNameInputBorder (#2387)\n* Backspace key is not working on Android AOSP (#1941)\n* macOS: 'NSUserNotification' has been deprecated (#1833)\n* macOS: Native menu would add new items if refreshed\n* iOS builds fail since Go 1.16\n* Re-add support for 32 bit iOS devices, if built with Go 1.14\n* Android builds fail on Apple M1 (#2439)\n* SetFullScreen(true) before ShowAndRun fails (#2446)\n* Interacting with another app when window.SetFullScreen(true) will cause the application to hide itself. (#2448)\n* Sequential writes to preferences does not save to file (#2449)\n* Correct Android keyboard handling (#2447)\n* MIUI-Android: The widget’s Hyperlink cannot open the URL (#1514)\n* Improved performance of data binding conversions and text MinSize\n\n\n## 2.0.4 - 6 August 2021\n\n### Changed\n\n* Disable Form labels when the element it applys to is disabled (#1530)\n* Entry popup menu now fires shortcuts so extended widgets can intercept\n* Update Android builds to SDK 30\n\n### Fixed\n\n* sendnotification show appID for name on windows (#1940)\n* Fix accidental removal of windows builds during cross-compile\n* Removing an item from a container did not update layout\n* Update title bar on Windows 10 to match OS theme (#2184)\n* Tapped triggered after Drag (#2235)\n* Improved documentation and example code for file dialog (#2156)\n* Preferences file gets unexpectedly cleared (#2241)\n* Extra row dividers rendered on using SetColumnWidth to update a table (#2266)\n* Fix resizing fullscreen issue\n* Fullscreen changes my display resolution when showing a dialog (#1832)\n* Entry validation does not work for empty field (#2179)\n* Tab support for focus handling missing on mobile\n* ScrollToBottom not always scrolling all the way when items added to container.Scroller\n* Fixed scrollbar disappearing after changing content (#2303)\n* Calling SetContent a second time with the same content will not show\n* Drawing text can panic when Color is nil (#2347)\n* Optimisations when drawing transparent rectangle or whitespace strings\n\n\n## 2.0.3 - 30 April 2021\n\n### Fixed\n\n* Optimisations for TextGrid rendering\n* Data binding with widget.List sometimes crash while scrolling (#2125)\n* Fix compilation on FreeBSD 13\n* DataLists should notify only once when change.\n* Keyboard will appear on Android in disabled Entry Widget (#2139)\n* Save dialog with filename for Android\n* form widget can't draw hinttext of appended item. (#2028)\n* Don't create empty shortcuts (#2148)\n* Install directory for windows install command contains \".exe\"\n* Fix compilation for Linux Wayland apps\n* Fix tab button layout on mobile (#2117)\n* Options popup does not move if a SelectEntry widget moves with popup open\n* Speed improvements to Select and SelectEntry drop down\n* theme/fonts has an apache LICENSE file but it should have SIL OFL (#2193)\n* Fix build requirements for target macOS platforms (#2154)\n* ScrollEvent.Position and ScrollEvent.AbsolutePosition is 0,0 (#2199)\n\n\n## 2.0.2 - 1 April 2021\n\n### Changed\n\n* Text can now be copied from a disable Entry using keyboard shortcuts\n\n### Fixed\n\n* Slider offset position could be incorrect for mobile apps\n* Correct error in example code\n* When graphics init fails then don't try to continue running (#1593)\n* Don't show global settings on mobile in fyne_demo as it's not supported (#2062)\n* Empty selection would render small rectangle in Entry\n* Do not show validation state for disabled Entry\n* dialog.ShowFileSave did not support mobile (#2076)\n* Fix issue that storage could not write to files on iOS and Android\n* mobile app could crash in some focus calls\n* Duplicate symbol error when compiling for Android with NDK 23 (#2064)\n* Add internet permission by default for Android apps (#1715)\n* Child and Parent support in storage were missing for mobile appps\n* Various crashes with Entry and multiline selections (including #1989)\n* Slider calls OnChanged for each value between steps (#1748)\n* fyne command doesn't remove temporary binary from src (#1910)\n* Advanced Color picker on mobile keeps updating values forever after sliding (#2075)\n* exec.Command and widget.Button combination not working (#1857)\n* After clicking a link on macOS, click everywhere in the app will be linked (#2112)\n* Text selection - Shift+Tab bug (#1787)\n\n\n## 2.0.1 - 4 March 2021\n\n### Changed\n\n* An Entry with `Wrapping=fyne.TextWrapOff` no longer blocks scroll events from a parent\n\n### Fixed\n\n* Dialog.Resize() has no effect if called before Dialog.Show() (#1863)\n* SelectTab does not always correctly set the blue underline to the selected tab (#1872)\n* Entry Validation Broken when using Data binding (#1890)\n* Fix background colour not applying until theme change\n* android runtime error with fyne.dialog (#1896)\n* Fix scale calculations for Wayland phones (PinePhone)\n* Correct initial state of entry validation\n* fix entry widget mouse drag selection when scrolled\n* List widget panic when refreshing after changing content length (#1864)\n* Fix image caching that was too aggressive on resize\n* Pointer and cursor misalignment in widget.Entry (#1937)\n* SIGSEGV Sometimes When Closing a Program by Clicking a Button (#1604)\n* Advanced Color Picker shows Black for custom primary color as RGBA (#1970)\n* Canvas.Focus() before window visible causes application to crash (#1893)\n* Menu over Content (#1973)\n* Error compiling fyne on Apple M1 arm64 (#1739)\n* Cells are not getting draw in correct location after column resize. (#1951)\n* Possible panic when selecting text in a widget.Entry (#1983)\n* Form validation doesn't enable submit button (#1965)\n* Creating a window shows it before calling .Show() and .Hide() does not work (#1835)\n* Dialogs are not refreshed correctly on .Show() (#1866)\n* Failed creating setting storage : no such directory (#2023)\n* Erroneous custom filter types not supported error on mobile (#2012)\n* High importance button show no hovered state (#1785)\n* List widget does not render all visible content after content data gets shorter (#1948)\n* Calling Select on List before draw can crash (#1960)\n* Dialog not resizing in newly created window (#1692)\n* Dialog not returning to requested size (#1382)\n* Entry without scrollable content prevents scrolling of outside scroller (#1939)\n* fyne_demo crash after selecting custom Theme and table (#2018)\n* Table widget crash when scrolling rapidly (#1887)\n* Cursor animation sometimes distorts the text (#1778)\n* Extended password entry panics when password revealer is clicked (#2036)\n* Data binding limited to 1024 simultaneous operations (#1838)\n* Custom theme does not refresh when variant changes (#2006)\n\n\n## 2.0 - 22 January 2021\n\n### Changes that are not backward compatible\n\nThese changes may break some apps, please read the \n[upgrading doc](https://developer.fyne.io/api/v2.0/upgrading) for more info\nThe import path is now `fyne.io/fyne/v2` when you are ready to make the update.\n\n* Coordinate system to float32\n  * Size and Position units were changed from int to float32\n  * `Text.TextSize` moved to float32 and `fyne.MeasureText` now takes a float32 size parameter\n  * Removed `Size.Union` (use `Size.Max` instead)\n  * Added fyne.Delta for difference-based X, Y float32 representation\n  * DraggedEvent.DraggedX and DraggedY (int, int) to DraggedEvent.Dragged (Delta)\n  * ScrollEvent.DeltaX and DeltaY (int, int) moved to ScrollEvent.Scrolled (Delta)\n\n* Theme API update\n  * `fyne.Theme` moved to `fyne.LegacyTheme` and can be load to a new theme using `theme.FromLegacy`\n  * A new, more flexible, Theme interface has been created that we encourage developers to use\n\n* The second parameter of `theme.NewThemedResource` was removed, it was previously ignored\n* The desktop.Cursor definition was renamed desktop.StandardCursor to make way for custom cursors\n* Button `Style` and `HideShadow` were removed, use `Importance`\n\n* iOS apps preferences will be lost in this upgrade as we move to more advanced storage\n* Dialogs no longer show when created, unless using the ShowXxx convenience methods\n* Entry widget now contains scrolling so should no longer be wrapped in a scroll container\n\n* Removed deprecated types including:\n  - `dialog.FileIcon` (now `widget.FileIcon`)\n  - `widget.Radio` (now `widget.RadioGroup`)\n  - `widget.AccordionContainer` (now `widget.Accordion`)\n  - `layout.NewFixedGridLayout()` (now `layout.NewGridWrapLayout()`)\n  - `widget.ScrollContainer` (now `container.Scroll`)\n  - `widget.SplitContainer` (now `container.Spilt`)\n  - `widget.Group` (replaced by `widget.Card`)\n  - `widget.Box` (now `container.NewH/VBox`, with `Children` field moved to `Objects`)\n  - `widget.TabContainer` and `widget.AppTabs` (now `container.AppTabs`)\n* Many deprecated fields have been removed, replacements listed in API docs 1.4\n  - for specific information you can browse https://developer.fyne.io/api/v1.4/\n\n### Added\n\n* Data binding API to connect data sources to widgets and sync data\n  - Add preferences data binding and `Preferences.AddChangeListener`\n  - Add bind support to `Check`, `Entry`, `Label`, `List`, `ProgressBar` and `Slider` widgets\n* Animation API for handling smooth element transitions\n  - Add animations to buttons, tabs and entry cursor\n* Storage repository API for connecting custom file sources\n  - Add storage functions `Copy`, `Delete` and `Move` for `URI`\n  - Add `CanRead`, `CanWrite` and `CanList` to storage APIs\n* New Theme API for easier customisation of apps\n  - Add ability for custom themes to support light/dark preference\n  - Support for custom icons in theme definition\n  - New `theme.FromLegacy` helper to use old theme API definitions\n* Add fyne.Vector for managing x/y float32 coordinates\n* Add MouseButtonTertiary for middle mouse button events on desktop\n* Add `canvas.ImageScaleFastest` for faster, less precise, scaling\n* Add new `dialog.Form` that will phase out `dialog.Entry`\n* Add keyboard control for main menu\n* Add `Scroll.OnScrolled` event for seeing changes in scroll container\n* Add `TextStyle` and `OnSubmitted` to `Entry` widget\n* Add support for `HintText` and showing validation errors in `Form` widget\n* Added basic support for tab character in `Entry`, `Label` and `TextGrid`\n\n### Changed\n\n* Coordinate system is now float32 - see breaking changes above\n* ScrollEvent and DragEvent moved to Delta from (int, int)\n* Change bundled resources to use more efficient string storage\n* Left and Right mouse buttons on Desktop are being moved to `MouseButtonPrimary` and `MouseButtonSecondary`\n* Many optimisations and widget performance enhancements\n\n* Moving to new `container.New()` and `container.NewWithoutLayout()` constructors (replacing `fyne.NewContainer` and `fyne.NewContainerWithoutLayout`)\n* Moving storage APIs `OpenFileFromURI`, `SaveFileToURI` and `ListerForURI` to `Reader`, `Writer` and `List` functions\n\n### Fixed\n\n* Validating a widget in widget.Form before renderer was created could cause a panic\n* Added file and folder support for mobile simulation support (#1470)\n* Appending options to a disabled widget.RadioGroup shows them as enabled (#1697)\n* Toggling toolbar icons does not refresh (#1809)\n* Black screen when slide up application on iPhone (#1610)\n* Properly align Label in FormItem (#1531)\n* Mobile dropdowns are too low (#1771)\n* Cursor does not go down to next line with wrapping (#1737)\n* Entry: while adding text beyond visible reagion there is no auto-scroll (#912)\n\n\n## 1.4.3 - 4 January 2021\n\n### Fixed\n\n* Fix crash when showing file open dialog on iPadOS\n* Fix possible missing icon on initial show of disabled button\n* Capturing a canvas on macOS retina display would not capture full resolution\n* Fix the release build flag for mobile\n* Fix possible race conditions for canvas capture\n* Improvements to `fyne get` command downloader\n* Fix tree, so it refreshes visible nodes on Refresh()\n* TabContainer Panic when removing selected tab (#1668)\n* Incorrect clipping behaviour with nested scroll containers (#1682)\n* MacOS Notifications are not shown on subsequent app runs (#1699)\n* Fix the behavior when dragging the divider of split container (#1618)\n\n\n## 1.4.2 - 9 December 2020\n\n### Added\n\n* [fyne-cli] Add support for passing custom build tags (#1538)\n\n### Changed\n\n* Run validation on content change instead of on each Refresh in widget.Entry\n\n### Fixed\n\n* [fyne-cli] Android: allow to specify an inline password for the keystore\n* Fixed Card widget MinSize (#1581)\n* Fix missing release tag to enable BuildRelease in Settings.BuildType()\n* Dialog shadow does not resize after Refresh (#1370)\n* Android Duplicate Number Entry (#1256)\n* Support older macOS by default - back to 10.11 (#886)\n* Complete certification of macOS App Store releases (#1443)\n* Fix compilation errors for early stage Wayland testing\n* Fix entry.SetValidationError() not working correctly\n\n\n## 1.4.1 - 20 November 2020\n\n### Changed\n\n* Table columns can now be different sizes using SetColumnWidth\n* Avoid unnecessary validation check on Refresh in widget.Form\n\n### Fixed\n\n* Tree could flicker on mouse hover (#1488)\n* Content of table cells could overflow when sized correctly\n* file:// based URI on Android would fail to list folder (#1495)\n* Images in iOS release were not all correct size (#1498)\n* iOS compile failed with Go 1.15 (#1497)\n* Possible crash when minimising app containing List on Windows\n* File chooser dialog ignores drive Z (#1513)\n* Entry copy/paste is crashing on android 7.1 (#1511)\n* Fyne package creating invalid windows packages (#1521)\n* Menu bar initially doesn't respond to mouse input on macOS (#505) \n* iOS: Missing CFBundleIconName and asset catalog (#1504)\n* CenterOnScreen causes crash on MacOS when called from goroutine (#1539)\n* desktop.MouseHover Button state is not reliable (#1533)\n* Initial validation status in widget.Form is not respected\n* Fix nil reference in disabled buttons (#1558)\n\n\n## 1.4 - 1 November 2020\n\n### Added (highlights)\n\n* List (#156), Table (#157) and Tree collection Widgets\n* Card, FileItem, Separator widgets\n* ColorPicker dialog\n* User selection of primary colour\n* Container API package to ease using layouts and container widgets\n* Add input validation\n* ListableURI for working with directories etc\n* Added PaddedLayout\n\n* Window.SetCloseIntercept (#467)\n* Canvas.InteractiveArea() to indicate where widgets should avoid\n* TextFormatter for ProgressBar\n* FileDialog.SetLocation() (#821)\n* Added dialog.ShowFolderOpen (#941)\n* Support to install on iOS and android with 'fyne install'\n* Support asset bundling with go:generate\n* Add fyne release command for preparing signed apps\n* Add keyboard and focus support to Radio and Select widgets \n\n### Changed\n\n* Theme update - new blue highlight, move buttons to outline\n* Android SDK target updated to 29\n* Mobile log entries now start \"Fyne\" instead of \"GoLog\"\n* Don't expand Select to its largest option (#1247)\n* Button.HideShadow replaced by Button.Importance = LowImportance\n\n* Deprecate NewContainer in favour of NewContainerWithoutLayout\n* Deprecate HBox and VBox in favour of new container APIs\n* Move Container.AddObject to Container.Add matching Container.Remove\n* Start move from widget.TabContainer to container.AppTabs\n* Replace Radio with RadioGroup\n* Deprecate WidgetRenderer.BackgroundColor\n\n### Fixed\n\n* Support focus traversal in dialog (#948), (#948)\n* Add missing AbsolutePosition in some mouse events (#1274)\n* Don't let scrollbar handle become too small\n* Ensure tab children are resized before being shown (#1331)\n* Don't hang if OpenURL loads browser (#1332)\n* Content not filling dialog (#1360)\n* Overlays not adjusting on orientation change in mobile (#1334)\n* Fix missing key events for some keypad keys (#1325)\n* Issue with non-english folder names in Linux favourites (#1248)\n* Fix overlays escaping screen interactive bounds (#1358)\n* Key events not blocked by overlays (#814)\n* Update scroll container content if it is changed (#1341)\n* Respect SelectEntry datta changes on refresh (#1462)\n* Incorrect SelectEntry dropdown button position (#1361)\n* don't allow both single and double tap events to fire (#1381)\n* Fix issue where long or tall images could jump on load (#1266, #1432)\n* Weird behaviour when resizing or minimizing a ScrollContainer (#1245)\n* Fix panic on NewTextGrid().Text()\n* Fix issue where scrollbar could jump after mousewheel scroll\n* Add missing raster support in software render\n* Respect GOOS/GOARCH in fyne command utilities\n* BSD support in build tools\n* SVG Cache could return the incorrect resource (#1479)\n\n* Many optimisations and widget performance enhancements\n* Various fixes to file creation and saving on mobile devices\n\n\n## 1.3.3 - 10 August 2020\n\n### Added\n\n* Use icons for file dialog favourites (#1186)\n* Add ScrollContainer ScrollToBottom and ScrollToTop\n\n### Changed\n\n* Make file filter case sensitive (#1185)\n\n### Fixed\n\n* Allow popups to create dialogs (#1176)\n* Use default cursor for dragging scrollbars (#1172)\n* Correctly parse SVG files with missing X/Y for rect\n* Fix visibility of Entry placeholder when text is set (#1193)\n* Fix encoding issue with Windows notifications (#1191)\n* Fix issue where content expanding on Windows could freeze (#1189)\n* Fix errors on Windows when reloading Fyne settings (#1165)\n* Dialogs not updating theme correctly (#1201)\n* Update the extended progressbar on refresh (#1219)\n* Segfault if font fails (#1200)\n* Slider rendering incorrectly when window maximized (#1223)\n* Changing form label not refreshed (#1231)\n* Files and folders starting \".\" show no name (#1235)\n\n\n## 1.3.2 - 11 July 2020\n\n### Added\n\n* Linux packaged apps now include a Makefile to aid install\n\n### Changed\n\n* Fyne package supports specific architectures for Android\n* Reset missing textures on refresh\n* Custom confirm callbacks now called on implicitly shown dialogs\n* SelectEntry can update drop-down list during OnChanged callback\n* TextGrid whitespace color now matches theme changes\n* Order of Window Resize(), SetFixedSize() and CenterOnScreen() does no matter before Show()\n* Containers now refresh their visuals as well as their Children on Refresh()\n\n### Fixed\n\n* Capped StrokeWidth on canvas.Line (#831)\n* Canvas lines, rectangles and circles do not resize and refresh correctly\n* Black flickering on resize on MacOS and OS X (possibly not on Catalina) (#1122)\n* Crash when resizing window under macOS (#1051, #1140)\n* Set SetFixedSize to true, the menus are overlapped (#1105)\n* Ctrl+v into text input field crashes app. Presumably clipboard is empty (#1123, #1132)\n* Slider default value doesn't stay inside range (#1128)\n* The position of window is changed when status change from show to hide, then to show (#1116)\n* Creating a windows inside onClose handler causes Fyne to panic (#1106)\n* Backspace in entry after SetText(\"\") can crash (#1096)\n* Empty main menu causes panic (#1073)\n* Installing using `fyne install` on Linux now works on distrubutions that don't use `/usr/local`\n* Fix recommendations from staticcheck\n* Unable to overwrite file when using dialog.ShowFileSave (#1168)\n\n\n## 1.3 - 5 June 2020\n\n### Added\n\n* File open and save dialogs (#225)\n* Add notifications support (#398)\n* Add text wrap support (#332)\n* Add Accordion widget (#206)\n* Add TextGrid widget (#115)\n* Add SplitContainer widget (#205)\n* Add new URI type and handlers for cross-platform data access\n* Desktop apps can now create splash windows\n* Add ScaleMode to images, new ImageScalePixels feature for retro graphics\n* Allow widgets to influence mouse cursor style (#726)\n* Support changing the text on form submit/cancel buttons\n* Support reporting CapsLock key events (#552)\n* Add OnClosed callback for Dialog\n* Add new image test helpers for validating render output\n* Support showing different types of soft keyboard on mobile devices (#971, #975)\n\n### Changed\n\n* Upgraded underlying GLFW library to fix various issues (#183, #61)\n* Add submenu support and hover effects (#395)\n* Default to non-premultiplied alpha (NRGBA) across toolkit\n* Rename FixedGridLayout to GridWrapLayout (deprecate old API) (#836)\n* Windows redraw and animations continue on window resize and move\n* New...PopUp() methods are being replaced by Show...Popup() or New...Popup().Show()\n* Apps started on a goroutine will now panic as this is not supported\n* On Linux apps now simulate 120DPI instead of 96DPI\n* Improved fyne_settings scale picking user interface\n* Reorganised fyne_demo to accommodate growing collection of widgets and containers\n* Rendering now happens on a different thread to events for more consistent drawing\n* Improved text selection on mobile devices\n\n### Fixed (highlights)\n\n* Panic when trying to paste empty clipboard into entry (#743)\n* Scale does not match user configuration in Windows 10 (#635)\n* Copy/Paste not working on Entry Field in Windows OS (#981)\n* Select widgets with many options overflow UI without scrolling (#675)\n* android: typing in entry expands only after full refresh (#972)\n* iOS app stops re-drawing mid frame after a while (#950)\n* Too many successive GUI updates do not properly update the view (904)\n* iOS apps would not build using Apple's new certificates\n* Preserve aspect ratio in SVG stroke drawing (#976)\n* Fixed many race conditions in widget data handling\n* Various crashes and render glitches in extended widgets\n* Fix security issues reported by gosec (#742)\n\n\n## 1.2.4 - 13 April 2020\n\n### Added\n\n * Added Direction field to ScrollContainer and NewHScrollContainer, NewVScrollContainer constructors (#763)\n * Added Scroller.SetMinSize() to enable better defaults for scrolled content\n * Added \"fyne vendor\" subcommand to help packaging fyne dependencies in projects\n * Added \"fyne version\" subcommand to help with bug reporting (#656)\n * Clipboard (cut/copy/paste) is now supported on iOS and Android (#414)\n * Preferences.RemoveValue() now allows deletion of a stored user preference\n\n### Changed\n\n * Report keys based on name not key code - fixes issue with shortcuts with AZERTY (#790)\n\n### Fixed\n\n * Mobile builds now support go modules (#660)\n * Building for mobile would try to run desktop build first\n * Mobile apps now draw the full safe area on a screen (#799)\n * Preferences were not stored on mobile apps (#779)\n * Window on Windows is not controllable after exiting FullScreen mode (#727)\n * Soft keyboard not working on some Samsung/LG smart phones (#787)\n * Selecting a tab on extended TabContainer doesn't refresh button (#810)\n * Appending tab to empty TabContainer causes divide by zero on mobile (#820)\n * Application crashes on startup (#816)\n * Form does not always update on theme change (#842)\n\n\n## 1.2.3 - 2 March 2020\n\n### Added\n\n * Add media and volume icons to default themes (#649)\n * Add Canvas.PixelCoordinateForPosition to find pixel locations if required\n * Add ProgressInfinite dialog\n\n### Changed\n\n * Warn if -executable or -sourceDir flags are used for package on mobile (#652)\n * Update scale based on device for mobile apps\n * Windows without a title will now be named \"Fyne Application\"\n * Revert fix to quit mobile apps - this is not allowed in guidelines\n\n### Fixed\n\n * App.UniqueID() did not return current app ID\n * Fyne package ignored -name flag for ios and android builds (#657)\n * Possible crash when appending tabs to TabContainer\n * FixedSize windows not rescaling when dragged between monitors (#654)\n * Fix issues where older Android devices may not background or rotate (#677)\n * Crash when setting theme before window content set (#688)\n * Correct form extend behaviour (#694)\n * Select drop-down width is wrong if the drop-down is too tall for the window (#706)\n\n\n## 1.2.2 - 29 January 2020\n\n### Added\n\n* Add SelectedText() function to Entry widget\n* New mobile.Device interface exposing ShowVirtualKeyboard() (and Hide...)\n\n### Changed\n\n* Scale calculations are now relative to system scale - the default \"1\" matches the system\n* Update scale on Linux to be \"auto\" by default (and numbers are relative to 96DPI standard) (#595)\n* When auto scaling check the monitor in the middle of the window, not top left\n* bundled files now have a standard header to optimise some tools like go report card\n* Shortcuts are now handled by the event queue - fixed possible deadlock\n\n### Fixed\n\n* Scroll horizontally when holding shift key (#579)\n* Updating text and calling refresh for widget doesn't work (#607)\n* Corrected visual behaviour of extended widgets including Entry, Select, Check, Radio and Icon (#615)\n* Entries and Selects that are extended would crash on right click.\n* PasswordEntry created from Entry with Password = true has no revealer\n* Dialog width not always sufficient for title\n* Pasting unicode characters could panic (#597)\n* Setting theme before application start panics on macOS (#626)\n* MenuItem type conflicts with other projects (#632)\n\n\n## 1.2.1 - 24 December 2019\n\n### Added\n\n* Add TouchDown, TouchUp and TouchCancel API in driver/mobile for device specific events\n* Add support for adding and removing tabs from a tab container (#444)\n\n### Fixed\n\n* Issues when settings changes may not be monitored (#576)\n* Layout of hidden tab container contents on mobile (#578)\n* Mobile apps would not quit when Quit() was called (#580)\n* Shadows disappeared when theme changes (#589)\n* iOS apps could stop rendering after many refreshes (#584)\n* Fyne package could fail on Windows (#586)\n* Horizontal only scroll container may not refresh using scroll wheel\n\n\n## 1.2 - 12 December 2019\n\n### Added\n\n* Mobile support - iOS and Android, including \"fyne package\" command\n* Support for OpenGL ES and embedded linux\n* New BaseWidget for building custom widgets\n* Support for diagonal gradients\n* Global settings are now saved and can be set using the new fyne_settings app\n* Support rendering in Go playground using playground.Render() helpers\n* \"fyne install\" command to package and install apps on the local computer\n* Add horizontal scrolling to ScrollContainer\n* Add preferences API\n* Add show/hide password icon when created from NewPasswordEntry\n* Add NewGridLayoutWithRows to specify a grid layout with a set number of rows\n* Add NewAdaptiveGridLayout which uses a column grid layout when horizontal and rows in vertical\n\n\n### Changed\n\n* New Logo! Thanks to Storm for his work on this :)\n* Applications no longer have a default (Fyne logo) icon\n* Input events now execute one at a time to maintain the correct order\n* Button and other widget callbacks no longer launch new goroutines\n* FYNE_THEME and FYNE_SCALE are now overrides to the global configuration\n* The first opened window no longer exits the app when closed (unless none others are open or Window.SetMaster() is called)\n* \"fyne package\" now defaults icon to \"Icon.png\" so the parameter is optional\n* Calling ExtendBaseWidget() sets up the renderer for extended widgets\n* Entry widget now has a visible Disabled state, ReadOnly has been deprecated\n* Bundled images optimised to save space\n* Optimise rendering to reduce refresh on TabContainer and ScrollContainer\n\n\n### Fixed\n\n* Correct the color of Entry widget cursor if theme changes\n* Error where widgets created before main() function could crash (#490)\n* App.Run panics if called without a window (#527)\n* Support context menu for disabled entry widgets (#488)\n* Fix issue where images using fyne.ImageFillOriginal may not show initially (#558)\n\n\n## 1.1.2 - 12 October 2019\n\n### Added\n\n### Changed\n\n* Default scale value for canvases is now 1.0 instead of Auto (DPI based)\n\n### Fixed\n\n* Correct icon name in linux packages\n* Fullscreen before showing a window works again\n* Incorrect MinSize of FixedGrid layout in some situations\n* Update text size on theme change\n* Text handling crashes (#411, #484, #485)\n* Layout of image only buttons\n* TabItem.Content changes are reflected when refreshing TabContainer (#456)\n\n## 1.1.1 - 17 August 2019\n\n### Added\n\n* Add support for custom Windows manifest files in fyne package\n\n### Changed\n\n* Dismiss non-modal popovers on secondary tap\n* Only measure visible objects in layouts and minSize calculations (#343)\n* Don't propagate show/hide in the model - allowing children of tabs to remain hidden\n* Disable cut/copy for password fields\n* Correctly calculate grid layout minsize as width changes\n* Select text at end of line when double tapping beyond width\n\n### Fixed\n\n* Scale could be too large on macOS Retina screens\n* Window with fixed size changes size when un-minimized on Windows (#300)\n* Setting text on a label could crash if it was not yet shown (#381)\n* Multiple Entry widgets could have selections simultaneously (#341)\n* Hover effect of radio widget too low (#383)\n* Missing shadow on Select widget\n* Incorrect rendering of subimages within Image object\n* Size calculation caches could be skipped causing degraded performance\n\n\n## 1.1 - 1 July 2019\n\n### Added\n\n* Menubar and PopUpMenu (#41)\n* PopUp widgets (regular and modal) and canvas overlay support (#242)\n* Add gradient (linear and radial) to canvas\n* Add shadow support for overlays, buttons and scrollcontainer\n* Text can now be selected (#67)\n* Support moving through inputs with Tab / Shift-Tab (#82)\n* canvas.Capture() to save the content of a canvas\n* Horizontal layout for widget.Radio\n* Select widget (#21)\n* Add support for disabling widgets (#234)\n* Support for changing icon color (#246)\n* Button hover effect\n* Pointer drag event to main API\n* support for desktop mouse move events\n* Add a new \"hints\" build tag that can suggest UI improvements\n\n### Changed\n\n* TabContainer tab location can now be set with SetTabLocation()\n* Dialog windows now appear as modal popups within a window\n* Don't add a button bar to a form if it has no buttons\n* Moved driver/gl package to internal/driver/gl\n* Clicking/Tapping in an entry will position the cursor\n* A container with no layout will not change the position or size of it's content\n* Update the fyne_demo app to reflect the expanding feature set\n\n### Fixed\n\n* Allow scrollbars to be dragged (#133)\n* Unicode char input with Option key on macOS (#247)\n* Resizng fixed size windows (#248)\n* Fixed various bugs in window sizing and padding\n* Button icons do not center align if label is empty (#284)\n\n\n## 1.0.1 - 20 April 2019\n\n### Added\n\n* Support for go modules\n* Transparent backgrounds for widgets\n* Entry.OnCursorChanged()\n* Radio.Append() and Radio.SetSelected() (#229)\n\n### Changed\n\n* Clicking outside a focused element will unfocus it\n* Handle key repeat for non-runes (#165)\n\n### Fixed\n\n* Remove duplicate options from a Radio widget (#230)\n* Issue where paste shortcut is not called for Ctrl-V keyboard combination\n* Cursor position when clearing text in Entry (#214)\n* Antialias of lines and circles (fyne-io/examples#14)\n* Crash on centering of windows (#220)\n* Possible crash when closing secondary windows\n* Possible crash when showing dialog\n* Initial visibility of scroll bar in ScrollContainer\n* Setting window icon when different from app icon.\n* Possible panic on app.Quit() (#175)\n* Various caches and race condition issues (#194, #217, #209).\n\n\n## 1.0 - 19 March 2019\n\nThe first major release of the Fyne toolkit delivers a stable release of the\nmain functionality required to build basic GUI applications across multiple\nplatforms.\n\n### Features\n\n* Canvas API (rect, line, circle, text, image)\n* Widget API (box, button, check, entry, form, group, hyperlink, icon, label, progress bar, radio, scroller, tabs and toolbar)\n* Light and dark themes\n* Pointer, key and shortcut APIs (generic and desktop extension)\n* OpenGL driver for Linux, macOS and Windows\n* Tools for embedding data and packaging releases\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at info@fyne.io. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.4,
          "content": "Thanks very much for your interest in contributing to Fyne!\nThe community is what makes this project successful and we are glad to welcome you on board.\n\nThere are various ways to contribute, perhaps the following helps you know how to get started.\n\n## Reporting a bug\n\nIf you've found something wrong we want to know about it, please help us understand the problem so we can resolve it.\n\n1. Check to see if this already is recorded, if so add some more information [issue list](https://github.com/fyne-io/fyne/issues)\n2. If not then create a new issue using the [bug report template](https://github.com/fyne-io/fyne/issues/new?assignees=&labels=&template=bug_report.md&title=)\n3. Stay involved in the conversation on the issue as it is triaged and progressed.\n\n\n## Fixing an issue\n\nGreat! You found an issue and figured you can fix it for us.\nIf you can follow these steps then your code should get accepted fast.\n\n1. Read through the \"Contributing Code\" section further down this page.\n2. Write a unit test to show it is broken.\n3. Create the fix and you should see the test passes.\n4. Run the tests and make sure everything still works as expected using `go test ./...`.\n5. [Open a PR](https://github.com/fyne-io/fyne/compare) and work through the review checklist.\n\n\n## Adding a feature\n\nIt's always good news to hear that people want to contribute functionality.\nBut first of all check that it fits within our [Vision](https://github.com/fyne-io/fyne/wiki/Vision) and if we are already considering it on our [Roadmap](https://github.com/fyne-io/fyne/wiki/Roadmap).\nIf you're not sure then you should join our #fyne-contributors channel on the [Gophers Slack server](https://gophers.slack.com/app_redirect?channel=fyne-contributors).\n\nOnce you are ready to code then the following steps should give you a smooth process:\n\n1. Read through the [Contributing Code](#contributing-code) section further down this page.\n2. Think about how you would structure your code and how it can be tested.\n3. Write some code and enjoy the ease of writing Go code for even a complex project :).\n4. Run the tests and make sure everything still works as expected using `go test ./...`.\n5. [Open a PR](https://github.com/fyne-io/fyne/compare) and work through the review checklist.\n\n\n# Contributing Code\n\nWe aim to maintain a very high standard of code, through design, test and implementation.\nTo manage this we have various checks and processes in place that everyone should follow, including:\n\n* We use the Go standard format (with tabs not spaces) - you can run `gofmt` before committing\n* Imports should be ordered according to the GoImports spec - you can use the `goimports` tool instead of `gofmt`.\n* Everything should have a unit test attached (as much as possible, to keep our coverage up)\n\nFor detailed Code style, check [Contributing](https://github.com/fyne-io/fyne/wiki/Contributing#code-style) in our wiki please.\n\n# Decision Process\n\nThe following points apply to our decision making process:\n\n* Any decisions or votes will be opened on the #fyne-contributors channel and follows lazy consensus.\n* Any contributors not responding in 4 days will be deemed in agreement.\n* Any PR that has not been responded to within 7 days can be automatically approved.\n* No functionality will be added unless at least 2 developers agree it belongs.\n\nBear in mind that this is a cross platform project so any new features would normally\nbe required to work on multiple desktop and mobile platforms.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5,
          "content": "BSD 3-Clause License\n\nCopyright (C) 2018 Fyne.io developers (see AUTHORS)\nAll rights reserved.\n\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of Fyne.io nor the names of its contributors may be\n      used to endorse or promote products derived from this software without\n      specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.45,
          "content": "<p align=\"center\">\n  <a href=\"https://pkg.go.dev/fyne.io/fyne/v2?tab=doc\" title=\"Go API Reference\" rel=\"nofollow\"><img src=\"https://img.shields.io/badge/go-documentation-blue.svg?style=flat\" alt=\"Go API Reference\"></a>\n  <a href=\"https://img.shields.io/github/v/release/fyne-io/fyne?include_prereleases\" title=\"Latest Release\" rel=\"nofollow\"><img src=\"https://img.shields.io/github/v/release/fyne-io/fyne?include_prereleases\" alt=\"Latest Release\"></a>\n  <a href='https://gophers.slack.com/messages/fyne'><img src='https://img.shields.io/badge/join-us%20on%20slack-gray.svg?longCache=true&logo=slack&colorB=blue' alt='Join us on Slack' /></a>\n  <br />\n  <a href=\"https://goreportcard.com/report/fyne.io/fyne/v2\"><img src=\"https://goreportcard.com/badge/fyne.io/fyne/v2\" alt=\"Code Status\" /></a>\n  <a href=\"https://github.com/fyne-io/fyne/actions\"><img src=\"https://github.com/fyne-io/fyne/workflows/Platform%20Tests/badge.svg\" alt=\"Build Status\" /></a>\n  <a href='https://coveralls.io/github/fyne-io/fyne?branch=develop'><img src='https://coveralls.io/repos/github/fyne-io/fyne/badge.svg?branch=develop' alt='Coverage Status' /></a>\n</p>\n\n# About\n\n[Fyne](https://fyne.io) is an easy-to-use UI toolkit and app API written in Go.\nIt is designed to build applications that run on desktop and mobile devices with a\nsingle codebase.\n\n# Prerequisites\n\nTo develop apps using Fyne you will need Go version 1.17 or later, a C compiler and your system's development tools.\nIf you're not sure if that's all installed or you don't know how then check out our\n[Getting Started](https://fyne.io/develop/) document.\n\nUsing the standard go tools you can install Fyne's core library using:\n\n    go get fyne.io/fyne/v2@latest\n\nAfter importing a new module, run the following command before compiling the code for the first time. Avoid running it before writing code that uses the module to prevent accidental removal of dependencies:\n\n    go mod tidy\n\n# Widget demo\n\nTo run a showcase of the features of Fyne execute the following:\n\n    go install fyne.io/fyne/v2/cmd/fyne_demo@latest\n    fyne_demo\n\nAnd you should see something like this (after you click a few buttons):\n\n<p align=\"center\" markdown=\"1\" style=\"max-width: 100%\">\n  <img src=\"img/widgets-dark.png\" width=\"752\" alt=\"Fyne Demo Dark Theme\" style=\"max-width: 100%\" />\n</p>\n\nOr if you are using the light theme:\n\n<p align=\"center\" markdown=\"1\" style=\"max-width: 100%\">\n  <img src=\"img/widgets-light.png\" width=\"752\" alt=\"Fyne Demo Light Theme\" style=\"max-width: 100%\" />\n</p>\n\nAnd even running on a mobile device:\n\n<p align=\"center\" markdown=\"1\" style=\"max-width: 100%\">\n  <img src=\"img/widgets-mobile-light.png\" width=\"348\" alt=\"Fyne Demo Mobile Light Theme\" style=\"max-width: 100%\" />\n</p>\n\n# Getting Started\n\nFyne is designed to be really easy to code with.\nIf you have followed the prerequisite steps above then all you need is a\nGo IDE (or a text editor).\n\nOpen a new file and you're ready to write your first app!\n\n```go\npackage main\n\nimport (\n\t\"fyne.io/fyne/v2/app\"\n\t\"fyne.io/fyne/v2/container\"\n\t\"fyne.io/fyne/v2/widget\"\n)\n\nfunc main() {\n\ta := app.New()\n\tw := a.NewWindow(\"Hello\")\n\n\thello := widget.NewLabel(\"Hello Fyne!\")\n\tw.SetContent(container.NewVBox(\n\t\thello,\n\t\twidget.NewButton(\"Hi!\", func() {\n\t\t\thello.SetText(\"Welcome :)\")\n\t\t}),\n\t))\n\n\tw.ShowAndRun()\n}\n```\n\nAnd you can run that simply as:\n\n    go run main.go\n\n> [!NOTE]  \n> The first compilation of Fyne on Windows _can_ take up to 10 minutes, depending on your hardware. Subsequent builds will be fast.\n\nIt should look like this:\n\n<div align=\"center\">\n  <table cellpadding=\"0\" cellspacing=\"0\" style=\"margin: auto; border-collapse: collapse;\">\n    <tr style=\"border: none;\"><td style=\"border: none;\">\n      <img src=\"img/hello-light.png\" width=\"207\" alt=\"Fyne Hello Dark Theme\" />\n    </td><td style=\"border: none;\">\n      <img src=\"img/hello-dark.png\" width=\"207\" alt=\"Fyne Hello Dark Theme\" />\n    </td></tr>\n  </table>\n</div>\n\n## Run in mobile simulation\n\nThere is a helpful mobile simulation mode that gives a hint of how your app would work on a mobile device:\n\n    go run -tags mobile main.go\n\nAnother option is to use `fyne` command, see [Packaging for mobile](#packaging-for-mobile).\n\n# Installing\n\nUsing `go install` will copy the executable into your go `bin` dir.\nTo install the application with icons etc into your operating system's standard\napplication location you can use the fyne utility and the \"install\" subcommand.\n\n    go install fyne.io/fyne/v2/cmd/fyne@latest\n    fyne install\n\n# Packaging for mobile\n\nTo run on a mobile device it is necessary to package up the application.\nTo do this we can use the fyne utility \"package\" subcommand.\nYou will need to add appropriate parameters as prompted, but the basic command is shown below.\nOnce packaged you can install using the platform development tools or the fyne \"install\" subcommand.\n\n    fyne package -os android -appID my.domain.appname\n    fyne install -os android\n\nThe built Android application can run either in a real device or an Android emulator.\nHowever, building for iOS is slightly different.\nIf the \"-os\" argument is \"ios\", it is build only for a real iOS device.\nSpecify \"-os\" to \"iossimulator\" allows the application be able to run in an iOS simulator:\n\n    fyne package -os ios -appID my.domain.appname\n    fyne package -os iossimulator -appID my.domain.appname\n\n# Preparing a release\n\nUsing the fyne utility \"release\" subcommand you can package up your app for release\nto app stores and market places. Make sure you have the standard build tools installed\nand have followed the platform documentation for setting up accounts and signing.\nThen you can execute something like the following, notice the `-os ios` parameter allows\nbuilding an iOS app from macOS computer. Other combinations work as well :)\n\n    $ fyne release -os ios -certificate \"Apple Distribution\" -profile \"My App Distribution\" -appID \"com.example.myapp\"\n\nThe above command will create a '.ipa' file that can then be uploaded to the iOS App Store.\n\n# Documentation\n\nMore documentation is available at the [Fyne developer website](https://developer.fyne.io/) or on [pkg.go.dev](https://pkg.go.dev/fyne.io/fyne/v2?tab=doc).\n\n# Examples\n\nYou can find many example applications in the [examples repository](https://github.com/fyne-io/examples/).\nAlternatively a list of applications using fyne can be found at [our website](https://apps.fyne.io/).\n\n# Shipping the Fyne Toolkit\n\nAll Fyne apps will work without pre-installed libraries, this is one reason the apps are so portable.\nHowever, if looking to support Fyne in a bigger way on your operating system then you can install some utilities that help to make a more complete experience.\n\n## Additional apps\n\nIt is recommended that you install the following additional apps:\n\n| app           | go install                          | description                                                            |\n| ------------- | ----------------------------------- | ---------------------------------------------------------------------- |\n| fyne_settings | `fyne.io/fyne/v2/cmd/fyne_settings` | A GUI for managing your global Fyne settings like theme and scaling    |\n| apps          | `github.com/fyne-io/apps`           | A graphical installer for the Fyne apps listed at https://apps.fyne.io |\n\nThese are optional applications but can help to create a more complete desktop experience.\n\n## FyneDesk (Linux / BSD)\n\nTo go all the way with Fyne on your desktop / laptop computer you could install [FyneDesk](https://github.com/fyshos/fynedesk) as well :)\n\n![FyneDesk screenshopt in dark mode](https://fyshos.com/img/desktop.png)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.49,
          "content": "# Security Policy\n\n## Supported Versions\n\nMinor releases will receive security updates and fixes until the next minor or major release.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 2.4.x   | :white_check_mark: |\n| < 2.4.0 | :x:                |\n\n## Reporting a Vulnerability\n\nReport security vulnerabilities using the [advisories](https://github.com/fyne-io/fyne/security/advisories) page on GitHub.\nThe team of core developers will evaluate and address the issue as appropriate.\n"
        },
        {
          "name": "animation.go",
          "type": "blob",
          "size": 2.4,
          "content": "package fyne\n\nimport \"time\"\n\n// AnimationCurve represents an animation algorithm for calculating the progress through a timeline.\n// Custom animations can be provided by implementing the \"func(float32) float32\" definition.\n// The input parameter will start at 0.0 when an animation starts and travel up to 1.0 at which point it will end.\n// A linear animation would return the same output value as is passed in.\ntype AnimationCurve func(float32) float32\n\n// AnimationRepeatForever is an AnimationCount value that indicates it should not stop looping.\n//\n// Since: 2.0\nconst AnimationRepeatForever = -1\n\nvar (\n\t// AnimationEaseInOut is the default easing, it starts slowly, accelerates to the middle and slows to the end.\n\t//\n\t// Since: 2.0\n\tAnimationEaseInOut = animationEaseInOut\n\t// AnimationEaseIn starts slowly and accelerates to the end.\n\t//\n\t// Since: 2.0\n\tAnimationEaseIn = animationEaseIn\n\t// AnimationEaseOut starts at speed and slows to the end.\n\t//\n\t// Since: 2.0\n\tAnimationEaseOut = animationEaseOut\n\t// AnimationLinear is a linear mapping for animations that progress uniformly through their duration.\n\t//\n\t// Since: 2.0\n\tAnimationLinear = animationLinear\n)\n\n// Animation represents an animated element within a Fyne canvas.\n// These animations may control individual objects or entire scenes.\n//\n// Since: 2.0\ntype Animation struct {\n\tAutoReverse bool\n\tCurve       AnimationCurve\n\tDuration    time.Duration\n\tRepeatCount int\n\tTick        func(float32)\n}\n\n// NewAnimation creates a very basic animation where the callback function will be called for every\n// rendered frame between [time.Now] and the specified duration. The callback values start at 0.0 and\n// will be 1.0 when the animation completes.\n//\n// Since: 2.0\nfunc NewAnimation(d time.Duration, fn func(float32)) *Animation {\n\treturn &Animation{Duration: d, Tick: fn}\n}\n\n// Start registers the animation with the application run-loop and starts its execution.\nfunc (a *Animation) Start() {\n\tCurrentApp().Driver().StartAnimation(a)\n}\n\n// Stop will end this animation and remove it from the run-loop.\nfunc (a *Animation) Stop() {\n\tCurrentApp().Driver().StopAnimation(a)\n}\n\nfunc animationEaseIn(val float32) float32 {\n\treturn val * val\n}\n\nfunc animationEaseInOut(val float32) float32 {\n\tif val <= 0.5 {\n\t\treturn val * val * 2\n\t}\n\n\treturn -1 + (4-val*2)*val\n}\n\nfunc animationEaseOut(val float32) float32 {\n\treturn val * (2 - val)\n}\n\nfunc animationLinear(val float32) float32 {\n\treturn val\n}\n"
        },
        {
          "name": "animation_test.go",
          "type": "blob",
          "size": 0.8,
          "content": "package fyne\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestAnimationLinear(t *testing.T) {\n\tassert.Equal(t, float32(0.25), animationLinear(0.25))\n}\n\nfunc TestAnimationEaseInOut(t *testing.T) {\n\tassert.Equal(t, float32(0.125), animationEaseInOut(0.25))\n\tassert.Equal(t, float32(0.5), animationEaseInOut(0.5))\n\tassert.Equal(t, float32(0.875), animationEaseInOut(0.75))\n}\n\nfunc TestAnimationEaseIn(t *testing.T) {\n\tassert.Equal(t, float32(0.0625), animationEaseIn(0.25))\n\tassert.Equal(t, float32(0.25), animationEaseIn(0.5))\n\tassert.Equal(t, float32(0.5625), animationEaseIn(0.75))\n}\n\nfunc TestAnimationEaseOut(t *testing.T) {\n\tassert.Equal(t, float32(0.4375), animationEaseOut(0.25))\n\tassert.Equal(t, float32(0.75), animationEaseOut(0.5))\n\tassert.Equal(t, float32(0.9375), animationEaseOut(0.75))\n}\n"
        },
        {
          "name": "app.go",
          "type": "blob",
          "size": 4.6,
          "content": "package fyne\n\nimport (\n\t\"net/url\"\n\t\"sync/atomic\"\n)\n\n// An App is the definition of a graphical application.\n// Apps can have multiple windows, by default they will exit when all windows\n// have been closed. This can be modified using SetMaster or SetCloseIntercept.\n// To start an application you need to call Run somewhere in your main function.\n// Alternatively use the [fyne.io/fyne/v2.Window.ShowAndRun] function for your main window.\ntype App interface {\n\t// Create a new window for the application.\n\t// The first window to open is considered the \"master\" and when closed\n\t// the application will exit.\n\tNewWindow(title string) Window\n\n\t// Open a URL in the default browser application.\n\tOpenURL(url *url.URL) error\n\n\t// Icon returns the application icon, this is used in various ways\n\t// depending on operating system.\n\t// This is also the default icon for new windows.\n\tIcon() Resource\n\n\t// SetIcon sets the icon resource used for this application instance.\n\tSetIcon(Resource)\n\n\t// Run the application - this starts the event loop and waits until [App.Quit]\n\t// is called or the last window closes.\n\t// This should be called near the end of a main() function as it will block.\n\tRun()\n\n\t// Calling Quit on the application will cause the application to exit\n\t// cleanly, closing all open windows.\n\t// This function does no thing on a mobile device as the application lifecycle is\n\t// managed by the operating system.\n\tQuit()\n\n\t// Driver returns the driver that is rendering this application.\n\t// Typically not needed for day to day work, mostly internal functionality.\n\tDriver() Driver\n\n\t// UniqueID returns the application unique identifier, if set.\n\t// This must be set for use of the [App.Preferences]. see [NewWithID].\n\tUniqueID() string\n\n\t// SendNotification sends a system notification that will be displayed in the operating system's notification area.\n\tSendNotification(*Notification)\n\n\t// Settings return the globally set settings, determining theme and so on.\n\tSettings() Settings\n\n\t// Preferences returns the application preferences, used for storing configuration and state\n\tPreferences() Preferences\n\n\t// Storage returns a storage handler specific to this application.\n\tStorage() Storage\n\n\t// Lifecycle returns a type that allows apps to hook in to lifecycle events.\n\t//\n\t// Since: 2.1\n\tLifecycle() Lifecycle\n\n\t// Metadata returns the application metadata that was set at compile time.\n\t//\n\t// Since: 2.2\n\tMetadata() AppMetadata\n\n\t// CloudProvider returns the current app cloud provider,\n\t// if one has been registered by the developer or chosen by the user.\n\t//\n\t// Since: 2.3\n\tCloudProvider() CloudProvider // get the (if any) configured provider\n\n\t// SetCloudProvider allows developers to specify how this application should integrate with cloud services.\n\t// See [fyne.io/cloud] package for implementation details.\n\t//\n\t// Since: 2.3\n\tSetCloudProvider(CloudProvider) // configure cloud for this app\n}\n\nvar app atomic.Pointer[App]\n\n// SetCurrentApp is an internal function to set the app instance currently running.\nfunc SetCurrentApp(current App) {\n\tapp.Store(&current)\n}\n\n// CurrentApp returns the current application, for which there is only 1 per process.\nfunc CurrentApp() App {\n\tval := app.Load()\n\tif val == nil {\n\t\tLogError(\"Attempt to access current Fyne app when none is started\", nil)\n\t\treturn nil\n\t}\n\treturn *val\n}\n\n// AppMetadata captures the build metadata for an application.\n//\n// Since: 2.2\ntype AppMetadata struct {\n\t// ID is the unique ID of this application, used by many distribution platforms.\n\tID string\n\t// Name is the human friendly name of this app.\n\tName string\n\t// Version represents the version of this application, normally following semantic versioning.\n\tVersion string\n\t// Build is the build number of this app, some times appended to the version number.\n\tBuild int\n\t// Icon contains, if present, a resource of the icon that was bundled at build time.\n\tIcon Resource\n\t// Release if true this binary was build in release mode\n\t// Since 2.3\n\tRelease bool\n\t// Custom contain the custom metadata defined either in FyneApp.toml or on the compile command line\n\t// Since 2.3\n\tCustom map[string]string\n}\n\n// Lifecycle represents the various phases that an app can transition through.\n//\n// Since: 2.1\ntype Lifecycle interface {\n\t// SetOnEnteredForeground hooks into the app becoming foreground and gaining focus.\n\tSetOnEnteredForeground(func())\n\t// SetOnExitedForeground hooks into the app losing input focus and going into the background.\n\tSetOnExitedForeground(func())\n\t// SetOnStarted hooks into an event that says the app is now running.\n\tSetOnStarted(func())\n\t// SetOnStopped hooks into an event that says the app is no longer running.\n\tSetOnStopped(func())\n}\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "app_test.go",
          "type": "blob",
          "size": 1.02,
          "content": "package fyne\n\nimport (\n\t\"net/url\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\ntype dummyApp struct{}\n\nfunc (dummyApp) CloudProvider() CloudProvider {\n\treturn nil\n}\n\nfunc (dummyApp) NewWindow(title string) Window {\n\treturn nil\n}\n\nfunc (dummyApp) OpenURL(url *url.URL) error {\n\treturn nil\n}\n\nfunc (dummyApp) Icon() Resource {\n\treturn nil\n}\n\nfunc (dummyApp) SetIcon(Resource) {\n}\n\nfunc (dummyApp) Run() {\n}\n\nfunc (dummyApp) Quit() {\n}\n\nfunc (dummyApp) Driver() Driver {\n\treturn nil\n}\n\nfunc (dummyApp) UniqueID() string {\n\treturn \"dummy\"\n}\n\nfunc (dummyApp) SendNotification(*Notification) {\n}\n\nfunc (dummyApp) SetCloudProvider(CloudProvider) {\n}\n\nfunc (dummyApp) Settings() Settings {\n\treturn nil\n}\n\nfunc (dummyApp) Storage() Storage {\n\treturn nil\n}\n\nfunc (dummyApp) Preferences() Preferences {\n\treturn nil\n}\n\nfunc (dummyApp) Lifecycle() Lifecycle {\n\treturn nil\n}\n\nfunc (dummyApp) Metadata() AppMetadata {\n\treturn AppMetadata{}\n}\n\nfunc TestSetCurrentApp(t *testing.T) {\n\ta := &dummyApp{}\n\tSetCurrentApp(a)\n\n\tassert.Equal(t, a, CurrentApp())\n}\n"
        },
        {
          "name": "canvas.go",
          "type": "blob",
          "size": 1.99,
          "content": "package fyne\n\nimport \"image\"\n\n// Canvas defines a graphical canvas to which a [CanvasObject] or Container can be added.\n// Each canvas has a scale which is automatically applied during the render process.\ntype Canvas interface {\n\tContent() CanvasObject\n\tSetContent(CanvasObject)\n\n\tRefresh(CanvasObject)\n\n\t// Focus makes the provided item focused.\n\t// The item has to be added to the contents of the canvas before calling this.\n\tFocus(Focusable)\n\t// FocusNext focuses the next focusable item.\n\t// If no item is currently focused, the first focusable item is focused.\n\t// If the last focusable item is currently focused, the first focusable item is focused.\n\t//\n\t// Since: 2.0\n\tFocusNext()\n\t// FocusPrevious focuses the previous focusable item.\n\t// If no item is currently focused, the last focusable item is focused.\n\t// If the first focusable item is currently focused, the last focusable item is focused.\n\t//\n\t// Since: 2.0\n\tFocusPrevious()\n\tUnfocus()\n\tFocused() Focusable\n\n\t// Size returns the current size of this canvas\n\tSize() Size\n\t// Scale returns the current scale (multiplication factor) this canvas uses to render\n\t// The pixel size of a [CanvasObject] can be found by multiplying by this value.\n\tScale() float32\n\n\t// Overlays returns the overlay stack.\n\tOverlays() OverlayStack\n\n\tOnTypedRune() func(rune)\n\tSetOnTypedRune(func(rune))\n\tOnTypedKey() func(*KeyEvent)\n\tSetOnTypedKey(func(*KeyEvent))\n\tAddShortcut(shortcut Shortcut, handler func(shortcut Shortcut))\n\tRemoveShortcut(shortcut Shortcut)\n\n\tCapture() image.Image\n\n\t// PixelCoordinateForPosition returns the x and y pixel coordinate for a given position on this canvas.\n\t// This can be used to find absolute pixel positions or pixel offsets relative to an object top left.\n\tPixelCoordinateForPosition(Position) (int, int)\n\n\t// InteractiveArea returns the position and size of the central interactive area.\n\t// Operating system elements may overlap the portions outside this area and widgets should avoid being outside.\n\t//\n\t// Since: 1.4\n\tInteractiveArea() (Position, Size)\n}\n"
        },
        {
          "name": "canvas",
          "type": "tree",
          "content": null
        },
        {
          "name": "canvasobject.go",
          "type": "blob",
          "size": 3.76,
          "content": "package fyne\n\n// CanvasObject describes any graphical object that can be added to a canvas.\n// Objects have a size and position that can be controlled through this API.\n// MinSize is used to determine the minimum size which this object should be displayed.\n// An object will be visible by default but can be hidden with Hide() and re-shown with Show().\n//\n// Note: If this object is controlled as part of a Layout you should not call\n// Resize(Size) or Move(Position).\ntype CanvasObject interface {\n\t// geometry\n\n\t// MinSize returns the minimum size this object needs to be drawn.\n\tMinSize() Size\n\t// Move moves this object to the given position relative to its parent.\n\t// This should only be called if your object is not in a container with a layout manager.\n\tMove(Position)\n\t// Position returns the current position of the object relative to its parent.\n\tPosition() Position\n\t// Resize resizes this object to the given size.\n\t// This should only be called if your object is not in a container with a layout manager.\n\tResize(Size)\n\t// Size returns the current size of this object.\n\tSize() Size\n\n\t// visibility\n\n\t// Hide hides this object.\n\tHide()\n\t// Visible returns whether this object is visible or not.\n\tVisible() bool\n\t// Show shows this object.\n\tShow()\n\n\t// Refresh must be called if this object should be redrawn because its inner state changed.\n\tRefresh()\n}\n\n// Disableable describes any [CanvasObject] that can be disabled.\n// This is primarily used with objects that also implement the Tappable interface.\ntype Disableable interface {\n\tEnable()\n\tDisable()\n\tDisabled() bool\n}\n\n// DoubleTappable describes any [CanvasObject] that can also be double tapped.\ntype DoubleTappable interface {\n\tDoubleTapped(*PointEvent)\n}\n\n// Draggable indicates that a [CanvasObject] can be dragged.\n// This is used for any item that the user has indicated should be moved across the screen.\ntype Draggable interface {\n\tDragged(*DragEvent)\n\tDragEnd()\n}\n\n// Focusable describes any [CanvasObject] that can respond to being focused.\n// It will receive the FocusGained and FocusLost events appropriately.\n// When focused it will also have TypedRune called as text is input and\n// TypedKey called when other keys are pressed.\n//\n// Note: You must not change canvas state (including overlays or focus) in FocusGained or FocusLost\n// or you would end up with a dead-lock.\ntype Focusable interface {\n\t// FocusGained is a hook called by the focus handling logic after this object gained the focus.\n\tFocusGained()\n\t// FocusLost is a hook called by the focus handling logic after this object lost the focus.\n\tFocusLost()\n\n\t// TypedRune is a hook called by the input handling logic on text input events if this object is focused.\n\tTypedRune(rune)\n\t// TypedKey is a hook called by the input handling logic on key events if this object is focused.\n\tTypedKey(*KeyEvent)\n}\n\n// Scrollable describes any [CanvasObject] that can also be scrolled.\n// This is mostly used to implement the widget.ScrollContainer.\ntype Scrollable interface {\n\tScrolled(*ScrollEvent)\n}\n\n// SecondaryTappable describes a [CanvasObject] that can be right-clicked or long-tapped.\ntype SecondaryTappable interface {\n\tTappedSecondary(*PointEvent)\n}\n\n// Shortcutable describes any [CanvasObject] that can respond to shortcut commands (quit, cut, copy, and paste).\ntype Shortcutable interface {\n\tTypedShortcut(Shortcut)\n}\n\n// Tabbable describes any object that needs to accept the Tab key presses.\n//\n// Since: 2.1\ntype Tabbable interface {\n\t// AcceptsTab is a hook called by the key press handling logic.\n\t// If it returns true then the Tab key events will be sent using TypedKey.\n\tAcceptsTab() bool\n}\n\n// Tappable describes any [CanvasObject] that can also be tapped.\n// This should be implemented by buttons etc that wish to handle pointer interactions.\ntype Tappable interface {\n\tTapped(*PointEvent)\n}\n"
        },
        {
          "name": "clipboard.go",
          "type": "blob",
          "size": 0.22,
          "content": "package fyne\n\n// Clipboard represents the system clipboard interface\ntype Clipboard interface {\n\t// Content returns the clipboard content\n\tContent() string\n\t// SetContent sets the clipboard content\n\tSetContent(content string)\n}\n"
        },
        {
          "name": "cloud.go",
          "type": "blob",
          "size": 1.57,
          "content": "package fyne\n\n// CloudProvider specifies the identifying information of a cloud provider.\n// This information is mostly used by the [fyne.io/cloud.ShowSettings] user flow.\n//\n// Since: 2.3\ntype CloudProvider interface {\n\t// ProviderDescription returns a more detailed description of this cloud provider.\n\tProviderDescription() string\n\t// ProviderIcon returns an icon resource that is associated with the given cloud service.\n\tProviderIcon() Resource\n\t// ProviderName returns the name of this cloud provider, usually the name of the service it uses.\n\tProviderName() string\n\n\t// Cleanup is called when this provider is no longer used and should be disposed.\n\t// This is guaranteed to execute before a new provider is `Setup`\n\tCleanup(App)\n\t// Setup is called when this provider is being used for the first time.\n\t// Returning an error will exit the cloud setup process, though it can be retried.\n\tSetup(App) error\n}\n\n// CloudProviderPreferences interface defines the functionality that a cloud provider will include if it is capable\n// of synchronizing user preferences.\n//\n// Since: 2.3\ntype CloudProviderPreferences interface {\n\t// CloudPreferences returns a preference provider that will sync values to the cloud this provider uses.\n\tCloudPreferences(App) Preferences\n}\n\n// CloudProviderStorage interface defines the functionality that a cloud provider will include if it is capable\n// of synchronizing user documents.\n//\n// Since: 2.3\ntype CloudProviderStorage interface {\n\t// CloudStorage returns a storage provider that will sync documents to the cloud this provider uses.\n\tCloudStorage(App) Storage\n}\n"
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "container.go",
          "type": "blob",
          "size": 4.99,
          "content": "package fyne\n\nimport \"sync\"\n\n// Declare conformity to [CanvasObject]\nvar _ CanvasObject = (*Container)(nil)\n\n// Container is a [CanvasObject] that contains a collection of child objects.\n// The layout of the children is set by the specified Layout.\ntype Container struct {\n\tsize     Size     // The current size of the Container\n\tposition Position // The current position of the Container\n\tHidden   bool     // Is this Container hidden\n\n\tLayout  Layout // The Layout algorithm for arranging child [CanvasObject]s\n\tlock    sync.Mutex\n\tObjects []CanvasObject // The set of [CanvasObject]s this container holds\n}\n\n// NewContainer returns a new [Container] instance holding the specified [CanvasObject]s.\n//\n// Deprecated: Use [fyne.io/fyne/v2/container.NewWithoutLayout] to create a container that uses manual layout.\nfunc NewContainer(objects ...CanvasObject) *Container {\n\treturn NewContainerWithoutLayout(objects...)\n}\n\n// NewContainerWithoutLayout returns a new [Container] instance holding the specified\n// [CanvasObject]s that are manually arranged.\n//\n// Deprecated: Use [fyne.io/fyne/v2/container.NewWithoutLayout] instead.\nfunc NewContainerWithoutLayout(objects ...CanvasObject) *Container {\n\tret := &Container{\n\t\tObjects: objects,\n\t}\n\n\tret.size = ret.MinSize()\n\treturn ret\n}\n\n// NewContainerWithLayout returns a new [Container] instance holding the specified\n// [CanvasObject]s which will be laid out according to the specified Layout.\n//\n// Deprecated: Use [fyne.io/fyne/v2/container.New] instead.\nfunc NewContainerWithLayout(layout Layout, objects ...CanvasObject) *Container {\n\tret := &Container{\n\t\tObjects: objects,\n\t\tLayout:  layout,\n\t}\n\n\tret.size = layout.MinSize(objects)\n\tret.layout()\n\treturn ret\n}\n\n// Add appends the specified object to the items this container manages.\n//\n// Since: 1.4\nfunc (c *Container) Add(add CanvasObject) {\n\tif add == nil {\n\t\treturn\n\t}\n\n\tc.lock.Lock()\n\tdefer c.lock.Unlock()\n\tc.Objects = append(c.Objects, add)\n\tc.layout()\n}\n\n// AddObject adds another [CanvasObject] to the set this Container holds.\n//\n// Deprecated: Use [Container.Add] instead.\nfunc (c *Container) AddObject(o CanvasObject) {\n\tc.Add(o)\n}\n\n// Hide sets this container, and all its children, to be not visible.\nfunc (c *Container) Hide() {\n\tif c.Hidden {\n\t\treturn\n\t}\n\n\tc.Hidden = true\n\trepaint(c)\n}\n\n// MinSize calculates the minimum size of c.\n// This is delegated to the [Container.Layout], if specified, otherwise it will be calculated.\nfunc (c *Container) MinSize() Size {\n\tif c.Layout != nil {\n\t\treturn c.Layout.MinSize(c.Objects)\n\t}\n\n\tminSize := NewSize(1, 1)\n\tfor _, child := range c.Objects {\n\t\tminSize = minSize.Max(child.MinSize())\n\t}\n\n\treturn minSize\n}\n\n// Move the container (and all its children) to a new position, relative to its parent.\nfunc (c *Container) Move(pos Position) {\n\tc.position = pos\n\trepaint(c)\n}\n\n// Position gets the current position of c relative to its parent.\nfunc (c *Container) Position() Position {\n\treturn c.position\n}\n\n// Refresh causes this object to be redrawn in it's current state\nfunc (c *Container) Refresh() {\n\tc.layout()\n\n\tfor _, child := range c.Objects {\n\t\tchild.Refresh()\n\t}\n\n\t// this is basically just canvas.Refresh(c) without the package loop\n\to := CurrentApp().Driver().CanvasForObject(c)\n\tif o == nil {\n\t\treturn\n\t}\n\to.Refresh(c)\n}\n\n// Remove updates the contents of this container to no longer include the specified object.\n// This method is not intended to be used inside a loop, to remove all the elements.\n// It is much more efficient to call [Container.RemoveAll) instead.\nfunc (c *Container) Remove(rem CanvasObject) {\n\tc.lock.Lock()\n\tdefer c.lock.Unlock()\n\tif len(c.Objects) == 0 {\n\t\treturn\n\t}\n\n\tfor i, o := range c.Objects {\n\t\tif o != rem {\n\t\t\tcontinue\n\t\t}\n\n\t\tremoved := make([]CanvasObject, len(c.Objects)-1)\n\t\tcopy(removed, c.Objects[:i])\n\t\tcopy(removed[i:], c.Objects[i+1:])\n\n\t\tc.Objects = removed\n\t\tc.layout()\n\t\treturn\n\t}\n}\n\n// RemoveAll updates the contents of this container to no longer include any objects.\n//\n// Since: 2.2\nfunc (c *Container) RemoveAll() {\n\tc.Objects = nil\n\tc.layout()\n}\n\n// Resize sets a new size for c.\nfunc (c *Container) Resize(size Size) {\n\tif c.size == size {\n\t\treturn\n\t}\n\n\tc.size = size\n\tc.layout()\n}\n\n// Show sets this container, and all its children, to be visible.\nfunc (c *Container) Show() {\n\tif !c.Hidden {\n\t\treturn\n\t}\n\n\tc.Hidden = false\n}\n\n// Size returns the current size c.\nfunc (c *Container) Size() Size {\n\treturn c.size\n}\n\n// Visible returns true if the container is currently visible, false otherwise.\nfunc (c *Container) Visible() bool {\n\treturn !c.Hidden\n}\n\nfunc (c *Container) layout() {\n\tif c.Layout == nil {\n\t\treturn\n\t}\n\n\tc.Layout.Layout(c.Objects, c.size)\n}\n\n// repaint instructs the containing canvas to redraw, even if nothing changed.\n// This method is a duplicate of what is in `canvas/canvas.go` to avoid a dependency loop or public API.\nfunc repaint(obj *Container) {\n\tapp := CurrentApp()\n\tif app == nil || app.Driver() == nil {\n\t\treturn\n\t}\n\n\tc := app.Driver().CanvasForObject(obj)\n\tif c != nil {\n\t\tif paint, ok := c.(interface{ SetDirty() }); ok {\n\t\t\tpaint.SetDirty()\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "container",
          "type": "tree",
          "content": null
        },
        {
          "name": "container_test.go",
          "type": "blob",
          "size": 5.05,
          "content": "package fyne\n\nimport (\n\t\"sync\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestContainer_Add(t *testing.T) {\n\tbox := new(dummyObject)\n\tcontainer := NewContainerWithLayout(new(customLayout))\n\tassert.Equal(t, 0, len(container.Objects))\n\tassert.Equal(t, float32(10), container.MinSize().Width)\n\tassert.Equal(t, float32(0), container.MinSize().Height)\n\n\tcontainer.Add(box)\n\tassert.Equal(t, 1, len(container.Objects))\n\tassert.Equal(t, float32(10), container.MinSize().Width)\n\tassert.Equal(t, float32(10), container.MinSize().Height)\n\n\toldLength := len(container.Objects)\n\tcontainer.Add(nil)\n\tassert.Equal(t, oldLength, len(container.Objects))\n\n\tbox2 := new(dummyObject)\n\tcontainer.Add(box2)\n\tassert.Equal(t, 2, len(container.Objects))\n\tassert.Equal(t, float32(10), container.MinSize().Width)\n\tassert.Equal(t, float32(20), container.MinSize().Height)\n\tassert.Equal(t, float32(0), box2.Position().X)\n\tassert.Equal(t, float32(10), box2.Position().Y)\n}\n\nfunc TestContainer_CustomLayout(t *testing.T) {\n\tbox := new(dummyObject)\n\tlayout := new(customLayout)\n\tcontainer := NewContainerWithLayout(layout, box)\n\n\tsize := layout.MinSize(container.Objects)\n\tassert.Equal(t, size, container.MinSize())\n\tassert.Equal(t, size, container.Size())\n\tassert.Equal(t, size, box.Size())\n}\n\nfunc TestContainer_Hide(t *testing.T) {\n\tbox := new(dummyObject)\n\tcontainer := NewContainerWithoutLayout(box)\n\n\tassert.True(t, container.Visible())\n\tassert.True(t, box.Visible())\n\tcontainer.Hide()\n\tassert.False(t, container.Visible())\n\tassert.True(t, box.Visible())\n}\n\nfunc TestContainer_MinSize(t *testing.T) {\n\tbox := new(dummyObject)\n\tminSize := box.MinSize()\n\n\tcontainer := NewContainerWithoutLayout(box)\n\tassert.Equal(t, minSize, container.MinSize())\n}\n\nfunc TestContainer_Move(t *testing.T) {\n\tbox := new(dummyObject)\n\tcontainer := NewContainerWithoutLayout(box)\n\n\tsize := NewSize(100, 100)\n\tpos := NewPos(0, 0)\n\tcontainer.Resize(size)\n\tassert.Equal(t, pos, box.Position())\n\n\tpos = NewPos(10, 10)\n\tcontainer.Move(pos)\n\tassert.Equal(t, pos, container.Position())\n\tassert.Equal(t, NewPos(0, 0), box.Position())\n\n\tbox.Move(pos)\n\tassert.Equal(t, pos, box.Position())\n}\n\nfunc TestContainer_NilLayout(t *testing.T) {\n\tbox := new(dummyObject)\n\tboxSize := box.size\n\tcontainer := NewContainerWithoutLayout(box)\n\n\tsize := NewSize(100, 100)\n\tcontainer.Resize(size)\n\tassert.Equal(t, size, container.Size())\n\tassert.Equal(t, boxSize, box.Size())\n}\n\nfunc TestContainer_Remove(t *testing.T) {\n\tbox1 := new(dummyObject)\n\tbox2 := new(dummyObject)\n\tcontainer := NewContainerWithLayout(new(customLayout), box1, box2)\n\tassert.Equal(t, 2, len(container.Objects))\n\tassert.Equal(t, float32(10), container.MinSize().Width)\n\tassert.Equal(t, float32(20), container.MinSize().Height)\n\n\tcontainer.Remove(box1)\n\tassert.Equal(t, 1, len(container.Objects))\n\tassert.Equal(t, float32(10), container.MinSize().Width)\n\tassert.Equal(t, float32(10), container.MinSize().Height)\n\tassert.Equal(t, float32(0), box2.Position().X)\n\tassert.Equal(t, float32(0), box2.Position().Y)\n}\n\nfunc TestContainer_Remove_Race(t *testing.T) {\n\tvar objs []CanvasObject\n\tfor i := 0; i < 100; i++ {\n\t\tobjs = append(objs, new(dummyObject))\n\t}\n\n\tcontainer := NewContainerWithLayout(new(customLayout), objs...)\n\n\twg := &sync.WaitGroup{}\n\twg.Add(100)\n\tfor _, o := range objs {\n\t\trmo := o\n\t\tgo func() {\n\t\t\tcontainer.Remove(rmo)\n\t\t\twg.Done()\n\t\t}()\n\t}\n\twg.Wait()\n\tassert.Equal(t, 0, len(container.Objects))\n}\n\nfunc TestContainer_Add_Race(t *testing.T) {\n\tcontainer := NewContainerWithLayout(new(customLayout))\n\twg := &sync.WaitGroup{}\n\twg.Add(100)\n\tfor i := 0; i < 100; i++ {\n\t\tgo func() {\n\t\t\tcontainer.Add(new(dummyObject))\n\t\t\twg.Done()\n\t\t}()\n\t}\n\twg.Wait()\n\tassert.Equal(t, 100, len(container.Objects))\n}\n\nfunc TestContainer_RemoveAll(t *testing.T) {\n\tbox1 := new(dummyObject)\n\tbox2 := new(dummyObject)\n\tcontainer := NewContainerWithLayout(new(customLayout), box1, box2)\n\tassert.Equal(t, 2, len(container.Objects))\n\n\tcontainer.RemoveAll()\n\tassert.Equal(t, 0, len(container.Objects))\n}\n\nfunc TestContainer_Show(t *testing.T) {\n\tbox := new(dummyObject)\n\tcontainer := NewContainerWithoutLayout(box)\n\n\tcontainer.Hide()\n\tassert.True(t, box.Visible())\n\tassert.False(t, container.Visible())\n\n\tcontainer.Show()\n\tassert.True(t, box.Visible())\n\tassert.True(t, container.Visible())\n}\n\ntype customLayout struct {\n}\n\nfunc (c *customLayout) Layout(objs []CanvasObject, size Size) {\n\ty := float32(0)\n\tfor _, child := range objs {\n\t\tchild.Resize(size)\n\t\tchild.Move(NewPos(0, y))\n\t\ty += 10\n\t}\n}\n\nfunc (c *customLayout) MinSize(objs []CanvasObject) Size {\n\treturn NewSize(10, float32(10*len(objs)))\n}\n\ntype dummyObject struct {\n\tsize   Size\n\tpos    Position\n\thidden bool\n}\n\nfunc (d *dummyObject) Hide() {\n\td.hidden = true\n}\n\nfunc (d *dummyObject) MinSize() Size {\n\treturn NewSize(5, 5)\n}\n\nfunc (d *dummyObject) Move(pos Position) {\n\td.pos = pos\n}\n\nfunc (d *dummyObject) Position() Position {\n\treturn d.pos\n}\n\nfunc (d *dummyObject) Refresh() {\n}\n\nfunc (d *dummyObject) Resize(size Size) {\n\td.size = size\n}\n\nfunc (d *dummyObject) Show() {\n\td.hidden = false\n}\n\nfunc (d *dummyObject) Size() Size {\n\treturn d.size\n}\n\nfunc (d *dummyObject) Visible() bool {\n\treturn !d.hidden\n}\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "device.go",
          "type": "blob",
          "size": 1.46,
          "content": "package fyne\n\n// DeviceOrientation represents the different ways that a mobile device can be held\ntype DeviceOrientation int\n\nconst (\n\t// OrientationVertical is the default vertical orientation\n\tOrientationVertical DeviceOrientation = iota\n\t// OrientationVerticalUpsideDown is the portrait orientation held upside down\n\tOrientationVerticalUpsideDown\n\t// OrientationHorizontalLeft is used to indicate a landscape orientation with the top to the left\n\tOrientationHorizontalLeft\n\t// OrientationHorizontalRight is used to indicate a landscape orientation with the top to the right\n\tOrientationHorizontalRight\n)\n\n// IsVertical is a helper utility that determines if a passed orientation is vertical\nfunc IsVertical(orient DeviceOrientation) bool {\n\treturn orient == OrientationVertical || orient == OrientationVerticalUpsideDown\n}\n\n// IsHorizontal is a helper utility that determines if a passed orientation is horizontal\nfunc IsHorizontal(orient DeviceOrientation) bool {\n\treturn !IsVertical(orient)\n}\n\n// Device provides information about the devices the code is running on\ntype Device interface {\n\tOrientation() DeviceOrientation\n\tIsMobile() bool\n\tIsBrowser() bool\n\tHasKeyboard() bool\n\tSystemScaleForWindow(Window) float32\n\n\t// Locale returns the information about this device's language and region.\n\t//\n\t// Since: 2.5\n\tLocale() Locale\n}\n\n// CurrentDevice returns the device information for the current hardware (via the driver)\nfunc CurrentDevice() Device {\n\treturn CurrentApp().Driver().Device()\n}\n"
        },
        {
          "name": "dialog",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver.go",
          "type": "blob",
          "size": 1.86,
          "content": "package fyne\n\nimport \"time\"\n\n// Driver defines an abstract concept of a Fyne render driver.\n// Any implementation must provide at least these methods.\ntype Driver interface {\n\t// CreateWindow creates a new UI Window.\n\tCreateWindow(string) Window\n\t// AllWindows returns a slice containing all app windows.\n\tAllWindows() []Window\n\n\t// RenderedTextSize returns the size required to render the given string of specified\n\t// font size and style. It also returns the height to text baseline, measured from the top.\n\t// If the source is specified it will be used, otherwise the current theme will be asked for the font.\n\tRenderedTextSize(text string, fontSize float32, style TextStyle, source Resource) (size Size, baseline float32)\n\n\t// CanvasForObject returns the canvas that is associated with a given [CanvasObject].\n\tCanvasForObject(CanvasObject) Canvas\n\t// AbsolutePositionForObject returns the position of a given [CanvasObject] relative to the top/left of a canvas.\n\tAbsolutePositionForObject(CanvasObject) Position\n\n\t// Device returns the device that the application is currently running on.\n\tDevice() Device\n\t// Run starts the main event loop of the driver.\n\tRun()\n\t// Quit closes the driver and open windows, then exit the application.\n\t// On some some operating systems this does nothing, for example iOS and Android.\n\tQuit()\n\n\t// StartAnimation registers a new animation with this driver and requests it be started.\n\tStartAnimation(*Animation)\n\t// StopAnimation stops an animation and unregisters from this driver.\n\tStopAnimation(*Animation)\n\n\t// DoubleTapDelay returns the maximum duration where a second tap after a first one\n\t// will be considered a [DoubleTap] instead of two distinct [Tap] events.\n\t//\n\t// Since: 2.5\n\tDoubleTapDelay() time.Duration\n\n\t// SetDisableScreenBlanking allows an app to ask the device not to sleep/lock/blank displays\n\t//\n\t// Since: 2.5\n\tSetDisableScreenBlanking(bool)\n}\n"
        },
        {
          "name": "driver",
          "type": "tree",
          "content": null
        },
        {
          "name": "event.go",
          "type": "blob",
          "size": 1.26,
          "content": "package fyne\n\n// HardwareKey contains information associated with physical key events\n// Most applications should use [KeyName] for cross-platform compatibility.\ntype HardwareKey struct {\n\t// ScanCode represents a hardware ID for (normally desktop) keyboard events.\n\tScanCode int\n}\n\n// KeyEvent describes a keyboard input event.\ntype KeyEvent struct {\n\t// Name describes the keyboard event that is consistent across platforms.\n\tName KeyName\n\t// Physical is a platform specific field that reports the hardware information of physical keyboard events.\n\tPhysical HardwareKey\n}\n\n// PointEvent describes a pointer input event. The position is relative to the\n// top-left of the [CanvasObject] this is triggered on.\ntype PointEvent struct {\n\tAbsolutePosition Position // The absolute position of the event\n\tPosition         Position // The relative position of the event\n}\n\n// ScrollEvent defines the parameters of a pointer or other scroll event.\n// The DeltaX and DeltaY represent how large the scroll was in two dimensions.\ntype ScrollEvent struct {\n\tPointEvent\n\tScrolled Delta\n}\n\n// DragEvent defines the parameters of a pointer or other drag event.\n// The DraggedX and DraggedY fields show how far the item was dragged since the last event.\ntype DragEvent struct {\n\tPointEvent\n\tDragged Delta\n}\n"
        },
        {
          "name": "fyne.go",
          "type": "blob",
          "size": 0.76,
          "content": "// Package fyne describes the objects and components available to any Fyne app.\n// These can all be created, manipulated and tested without rendering (for speed).\n// Your main package should use the app package to create an application with\n// a default driver that will render your UI.\n//\n// A simple application may look like this:\n//\n//\tpackage main\n//\n//\timport \"fyne.io/fyne/v2/app\"\n//\timport \"fyne.io/fyne/v2/container\"\n//\timport \"fyne.io/fyne/v2/widget\"\n//\n//\tfunc main() {\n//\t\ta := app.New()\n//\t\tw := a.NewWindow(\"Hello\")\n//\n//\t\thello := widget.NewLabel(\"Hello Fyne!\")\n//\t\tw.SetContent(container.NewVBox(\n//\t\t\thello,\n//\t\t\twidget.NewButton(\"Hi!\", func() {\n//\t\t\t\thello.SetText(\"Welcome :)\")\n//\t\t\t}),\n//\t\t))\n//\n//\t\tw.ShowAndRun()\n//\t}\npackage fyne // import \"fyne.io/fyne/v2\"\n"
        },
        {
          "name": "geometry.go",
          "type": "blob",
          "size": 4.65,
          "content": "package fyne\n\nvar (\n\t_ Vector2 = (*Delta)(nil)\n\t_ Vector2 = (*Position)(nil)\n\t_ Vector2 = (*Size)(nil)\n)\n\n// Vector2 marks geometry types that can operate as a coordinate vector.\ntype Vector2 interface {\n\tComponents() (float32, float32)\n\tIsZero() bool\n}\n\n// Delta is a generic X, Y coordinate, size or movement representation.\ntype Delta struct {\n\tDX, DY float32\n}\n\n// NewDelta returns a newly allocated [Delta] representing a movement in the X and Y axis.\nfunc NewDelta(dx float32, dy float32) Delta {\n\treturn Delta{DX: dx, DY: dy}\n}\n\n// Components returns the X and Y elements of v.\nfunc (v Delta) Components() (float32, float32) {\n\treturn v.DX, v.DY\n}\n\n// IsZero returns whether the Position is at the zero-point.\nfunc (v Delta) IsZero() bool {\n\treturn v.DX == 0.0 && v.DY == 0.0\n}\n\n// Position describes a generic X, Y coordinate relative to a parent [Canvas]\n// or [CanvasObject].\ntype Position struct {\n\tX float32 // The position from the parent's left edge\n\tY float32 // The position from the parent's top edge\n}\n\n// NewPos returns a newly allocated [Position] representing the specified coordinates.\nfunc NewPos(x float32, y float32) Position {\n\treturn Position{x, y}\n}\n\n// NewSquareOffsetPos returns a newly allocated [Position] with the same x and y position.\n//\n// Since: 2.4\nfunc NewSquareOffsetPos(length float32) Position {\n\treturn Position{length, length}\n}\n\n// Add returns a new [Position] that is the result of offsetting the current\n// position by p2 X and Y.\nfunc (p Position) Add(v Vector2) Position {\n\t// NOTE: Do not simplify to `return p.AddXY(v.Components())`, it prevents inlining.\n\tx, y := v.Components()\n\treturn Position{p.X + x, p.Y + y}\n}\n\n// AddXY returns a new [Position] by adding x and y to the current one.\nfunc (p Position) AddXY(x, y float32) Position {\n\treturn Position{p.X + x, p.Y + y}\n}\n\n// Components returns the X and Y elements of p.\nfunc (p Position) Components() (float32, float32) {\n\treturn p.X, p.Y\n}\n\n// IsZero returns whether the Position is at the zero-point.\nfunc (p Position) IsZero() bool {\n\treturn p.X == 0.0 && p.Y == 0.0\n}\n\n// Subtract returns a new [Position] that is the result of offsetting the current\n// position by p2 -X and -Y.\nfunc (p Position) Subtract(v Vector2) Position {\n\t// NOTE: Do not simplify to `return p.SubtractXY(v.Components())`, it prevents inlining.\n\tx, y := v.Components()\n\treturn Position{p.X - x, p.Y - y}\n}\n\n// SubtractXY returns a new [Position] by subtracting x and y from the current one.\nfunc (p Position) SubtractXY(x, y float32) Position {\n\treturn Position{p.X - x, p.Y - y}\n}\n\n// Size describes something with width and height.\ntype Size struct {\n\tWidth  float32 // The number of units along the X axis.\n\tHeight float32 // The number of units along the Y axis.\n}\n\n// NewSize returns a newly allocated Size of the specified dimensions.\nfunc NewSize(w float32, h float32) Size {\n\treturn Size{w, h}\n}\n\n// NewSquareSize returns a newly allocated Size with the same width and height.\n//\n// Since: 2.4\nfunc NewSquareSize(side float32) Size {\n\treturn Size{side, side}\n}\n\n// Add returns a new Size that is the result of increasing the current size by\n// s2 Width and Height.\nfunc (s Size) Add(v Vector2) Size {\n\t// NOTE: Do not simplify to `return s.AddXY(v.Components())`, it prevents inlining.\n\tw, h := v.Components()\n\treturn Size{s.Width + w, s.Height + h}\n}\n\n// AddWidthHeight returns a new Size by adding width and height to the current one.\nfunc (s Size) AddWidthHeight(width, height float32) Size {\n\treturn Size{s.Width + width, s.Height + height}\n}\n\n// IsZero returns whether the Size has zero width and zero height.\nfunc (s Size) IsZero() bool {\n\treturn s.Width == 0.0 && s.Height == 0.0\n}\n\n// Max returns a new [Size] that is the maximum of the current Size and s2.\nfunc (s Size) Max(v Vector2) Size {\n\tx, y := v.Components()\n\n\tmaxW := Max(s.Width, x)\n\tmaxH := Max(s.Height, y)\n\n\treturn NewSize(maxW, maxH)\n}\n\n// Min returns a new [Size] that is the minimum of s and v.\nfunc (s Size) Min(v Vector2) Size {\n\tx, y := v.Components()\n\n\tminW := Min(s.Width, x)\n\tminH := Min(s.Height, y)\n\n\treturn NewSize(minW, minH)\n}\n\n// Components returns the Width and Height elements of this Size\nfunc (s Size) Components() (float32, float32) {\n\treturn s.Width, s.Height\n}\n\n// Subtract returns a new Size that is the result of decreasing the current size\n// by s2 Width and Height.\nfunc (s Size) Subtract(v Vector2) Size {\n\t// NOTE: Do not simplify to `return s.SubtractXY(v.Components())`, it prevents inlining.\n\tw, h := v.Components()\n\treturn Size{s.Width - w, s.Height - h}\n}\n\n// SubtractWidthHeight returns a new Size by subtracting width and height from the current one.\nfunc (s Size) SubtractWidthHeight(width, height float32) Size {\n\treturn Size{s.Width - width, s.Height - height}\n}\n"
        },
        {
          "name": "geometry_benchmark_test.go",
          "type": "blob",
          "size": 2.1,
          "content": "package fyne_test\n\nimport (\n\t\"testing\"\n\n\t\"fyne.io/fyne/v2\"\n)\n\nfunc BenchmarkPosition_Add(b *testing.B) {\n\tb.Run(\"Add()\", benchmarkPositionAdd)\n\tb.Run(\"AddXY()\", benchmarkPositionAddXY)\n}\n\nfunc BenchmarkPosition_Subtract(b *testing.B) {\n\tb.Run(\"Subtract()\", benchmarkPositionSubtract)\n\tb.Run(\"SubtractXY()\", benchmarkPositionSubtractXY)\n}\n\nfunc BenchmarkSize_Add(b *testing.B) {\n\tb.Run(\"Add()\", benchmarkSizeAdd)\n\tb.Run(\"AddWidthHeight()\", benchmarkSizeAddWidthHeight)\n}\n\nfunc BenchmarkSize_Subtract(b *testing.B) {\n\tb.Run(\"Subtract()\", benchmarkSizeSubtract)\n\tb.Run(\"SubtractWidthHeight()\", benchmarkSizeSubtractWidthHeight)\n}\n\nvar (\n\tbenchmarkSize fyne.Size\n\tbenchmarkPos  fyne.Position\n)\n\nfunc benchmarkPositionAdd(b *testing.B) {\n\tpos := fyne.NewPos(10, 10)\n\tfor n := 0; n < b.N; n++ {\n\t\tpos = pos.Add(fyne.NewPos(float32(n), float32(n)))\n\t}\n\tbenchmarkPos = pos\n}\n\nfunc benchmarkPositionAddXY(b *testing.B) {\n\tpos := fyne.NewPos(10, 10)\n\tfor n := 0; n < b.N; n++ {\n\t\tpos = pos.AddXY(float32(n), float32(n))\n\t}\n\tbenchmarkPos = pos\n}\n\nfunc benchmarkPositionSubtract(b *testing.B) {\n\tpos := fyne.NewPos(10, 10)\n\tfor n := 0; n < b.N; n++ {\n\t\tpos = pos.Subtract(fyne.NewPos(float32(n), float32(n)))\n\t}\n\tbenchmarkPos = pos\n}\n\nfunc benchmarkPositionSubtractXY(b *testing.B) {\n\tpos := fyne.NewPos(10, 10)\n\tfor n := 0; n < b.N; n++ {\n\t\tpos = pos.SubtractXY(float32(n), float32(n))\n\t}\n\tbenchmarkPos = pos\n}\n\nfunc benchmarkSizeAdd(b *testing.B) {\n\tsize := fyne.NewSize(10, 10)\n\tfor n := 0; n < b.N; n++ {\n\t\tsize = size.Add(fyne.NewPos(float32(n), float32(n)))\n\t}\n\tbenchmarkSize = size\n}\n\nfunc benchmarkSizeAddWidthHeight(b *testing.B) {\n\tsize := fyne.NewSize(10, 10)\n\tfor n := 0; n < b.N; n++ {\n\t\tsize = size.AddWidthHeight(float32(n), float32(n))\n\t}\n\tbenchmarkSize = size\n}\n\nfunc benchmarkSizeSubtract(b *testing.B) {\n\tsize := fyne.NewSize(10, 10)\n\tfor n := 0; n < b.N; n++ {\n\t\tsize = size.Subtract(fyne.NewSize(float32(n), float32(n)))\n\t}\n\tbenchmarkSize = size\n}\n\nfunc benchmarkSizeSubtractWidthHeight(b *testing.B) {\n\tsize := fyne.NewSize(10, 10)\n\tfor n := 0; n < b.N; n++ {\n\t\tsize = size.SubtractWidthHeight(float32(n), float32(n))\n\t}\n\tbenchmarkSize = size\n}\n"
        },
        {
          "name": "geometry_test.go",
          "type": "blob",
          "size": 4.18,
          "content": "package fyne_test\n\nimport (\n\t\"testing\"\n\n\t\"fyne.io/fyne/v2\"\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestNewSquareOffsetPosition(t *testing.T) {\n\tpos := fyne.NewSquareOffsetPos(10)\n\tassert.Equal(t, pos.X, pos.Y)\n}\n\nfunc TestPosition_Add(t *testing.T) {\n\tpos1 := fyne.NewPos(10, 10)\n\tpos2 := fyne.NewPos(25, 25)\n\n\tpos3 := pos1.Add(pos2)\n\n\tassert.Equal(t, float32(35), pos3.X)\n\tassert.Equal(t, float32(35), pos3.Y)\n}\n\nfunc TestPosition_Add_Size(t *testing.T) {\n\tpos1 := fyne.NewPos(10, 10)\n\ts := fyne.NewSize(25, 25)\n\n\tpos2 := pos1.Add(s)\n\n\tassert.Equal(t, float32(35), pos2.X)\n\tassert.Equal(t, float32(35), pos2.Y)\n}\n\nfunc TestPosition_Add_Vector(t *testing.T) {\n\tpos1 := fyne.NewPos(10, 10)\n\tv := fyne.NewDelta(25, 25)\n\n\tpos2 := pos1.Add(v)\n\n\tassert.Equal(t, float32(35), pos2.X)\n\tassert.Equal(t, float32(35), pos2.Y)\n}\n\nfunc TestPosition_AddXY(t *testing.T) {\n\tpos1 := fyne.NewPos(10, 10)\n\n\tpos2 := pos1.AddXY(25, 25)\n\n\tassert.Equal(t, float32(35), pos2.X)\n\tassert.Equal(t, float32(35), pos2.Y)\n}\n\nfunc TestPosition_IsZero(t *testing.T) {\n\tfor name, tt := range map[string]struct {\n\t\tp    fyne.Position\n\t\twant bool\n\t}{\n\t\t\"zero value\":       {fyne.Position{}, true},\n\t\t\"0,0\":              {fyne.NewPos(0, 0), true},\n\t\t\"zero X\":           {fyne.NewPos(0, 42), false},\n\t\t\"zero Y\":           {fyne.NewPos(17, 0), false},\n\t\t\"non-zero X and Y\": {fyne.NewPos(6, 9), false},\n\t} {\n\t\tt.Run(name, func(t *testing.T) {\n\t\t\tassert.Equal(t, tt.want, tt.p.IsZero())\n\t\t})\n\t}\n}\n\nfunc TestPosition_Subtract(t *testing.T) {\n\tpos1 := fyne.NewPos(25, 25)\n\tpos2 := fyne.NewPos(10, 10)\n\n\tpos3 := pos1.Subtract(pos2)\n\n\tassert.Equal(t, float32(15), pos3.X)\n\tassert.Equal(t, float32(15), pos3.Y)\n}\n\nfunc TestPosition_SubtractXY(t *testing.T) {\n\tpos1 := fyne.NewPos(25, 25)\n\n\tpos2 := pos1.SubtractXY(10, 10)\n\n\tassert.Equal(t, float32(15), pos2.X)\n\tassert.Equal(t, float32(15), pos2.Y)\n}\n\nfunc TestSize_Add(t *testing.T) {\n\tsize1 := fyne.NewSize(10, 10)\n\tsize2 := fyne.NewSize(25, 25)\n\n\tsize3 := size1.Add(size2)\n\n\tassert.Equal(t, float32(35), size3.Width)\n\tassert.Equal(t, float32(35), size3.Height)\n}\n\nfunc TestSize_Add_Position(t *testing.T) {\n\tsize1 := fyne.NewSize(10, 10)\n\tp := fyne.NewSize(25, 25)\n\n\tsize2 := size1.Add(p)\n\n\tassert.Equal(t, float32(35), size2.Width)\n\tassert.Equal(t, float32(35), size2.Height)\n}\n\nfunc TestSize_Add_Vector(t *testing.T) {\n\tsize1 := fyne.NewSize(10, 10)\n\tv := fyne.NewDelta(25, 25)\n\n\tsize2 := size1.Add(v)\n\n\tassert.Equal(t, float32(35), size2.Width)\n\tassert.Equal(t, float32(35), size2.Height)\n}\n\nfunc TestSize_AddWidthHeight(t *testing.T) {\n\tsize1 := fyne.NewSize(10, 10)\n\n\tsize2 := size1.AddWidthHeight(25, 25)\n\n\tassert.Equal(t, float32(35), size2.Width)\n\tassert.Equal(t, float32(35), size2.Height)\n}\n\nfunc TestSize_IsZero(t *testing.T) {\n\tfor name, tt := range map[string]struct {\n\t\ts    fyne.Size\n\t\twant bool\n\t}{\n\t\t\"zero value\":    {fyne.Size{}, true},\n\t\t\"0x0\":           {fyne.NewSize(0, 0), true},\n\t\t\"zero width\":    {fyne.NewSize(0, 42), false},\n\t\t\"zero height\":   {fyne.NewSize(17, 0), false},\n\t\t\"non-zero area\": {fyne.NewSize(6, 9), false},\n\t} {\n\t\tt.Run(name, func(t *testing.T) {\n\t\t\tassert.Equal(t, tt.want, tt.s.IsZero())\n\t\t})\n\t}\n}\n\nfunc TestSize_Max(t *testing.T) {\n\tsize1 := fyne.NewSize(10, 100)\n\tsize2 := fyne.NewSize(100, 10)\n\n\tsize3 := size1.Max(size2)\n\n\tassert.Equal(t, float32(100), size3.Width)\n\tassert.Equal(t, float32(100), size3.Height)\n}\n\nfunc TestSize_Min(t *testing.T) {\n\tsize1 := fyne.NewSize(10, 100)\n\tsize2 := fyne.NewSize(100, 10)\n\n\tsize3 := size1.Min(size2)\n\n\tassert.Equal(t, float32(10), size3.Width)\n\tassert.Equal(t, float32(10), size3.Height)\n}\n\nfunc TestSize_Subtract(t *testing.T) {\n\tsize1 := fyne.NewSize(25, 25)\n\tsize2 := fyne.NewSize(10, 10)\n\n\tsize3 := size1.Subtract(size2)\n\n\tassert.Equal(t, float32(15), size3.Width)\n\tassert.Equal(t, float32(15), size3.Height)\n}\n\nfunc TestSize_SubtractWidthHeight(t *testing.T) {\n\tsize1 := fyne.NewSize(25, 25)\n\n\tsize2 := size1.SubtractWidthHeight(10, 10)\n\n\tassert.Equal(t, float32(15), size2.Width)\n\tassert.Equal(t, float32(15), size2.Height)\n}\n\nfunc TestSquareSize(t *testing.T) {\n\tsize := fyne.NewSquareSize(10)\n\tassert.Equal(t, size.Height, size.Width)\n}\n\nfunc TestVector_IsZero(t *testing.T) {\n\tv := fyne.NewDelta(0, 0)\n\n\tassert.True(t, v.IsZero())\n\n\tv.DX = 1\n\tassert.False(t, v.IsZero())\n}\n"
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 2.2,
          "content": "module fyne.io/fyne/v2\n\ngo 1.19\n\nrequire (\n\tfyne.io/systray v1.11.0\n\tgithub.com/BurntSushi/toml v1.4.0\n\tgithub.com/fogleman/gg v1.3.0\n\tgithub.com/fredbi/uri v1.1.0\n\tgithub.com/fsnotify/fsnotify v1.7.0\n\tgithub.com/fyne-io/gl-js v0.0.0-20220119005834-d2da28d9ccfe\n\tgithub.com/fyne-io/glfw-js v0.0.0-20241126112943-313d8a0fe1d0\n\tgithub.com/fyne-io/image v0.0.0-20220602074514-4956b0afb3d2\n\tgithub.com/go-gl/gl v0.0.0-20211210172815-726fda9656d6\n\tgithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20240506104042-037f3cc74f2a\n\tgithub.com/go-ole/go-ole v1.2.6\n\tgithub.com/go-text/render v0.2.0\n\tgithub.com/go-text/typesetting v0.2.0\n\tgithub.com/godbus/dbus/v5 v5.1.0\n\tgithub.com/jackmordaunt/icns/v2 v2.2.6\n\tgithub.com/jeandeaual/go-locale v0.0.0-20240223122105-ce5225dcaa49\n\tgithub.com/josephspurrier/goversioninfo v1.4.0\n\tgithub.com/lucor/goinfo v0.9.0\n\tgithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2\n\tgithub.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646\n\tgithub.com/nicksnyder/go-i18n/v2 v2.4.0\n\tgithub.com/rymdport/portal v0.3.0\n\tgithub.com/srwiley/oksvg v0.0.0-20221011165216-be6e8873101c\n\tgithub.com/srwiley/rasterx v0.0.0-20220730225603-2ab79fcdd4ef\n\tgithub.com/stretchr/testify v1.8.4\n\tgithub.com/urfave/cli/v2 v2.4.0\n\tgithub.com/yuin/goldmark v1.7.1\n\tgolang.org/x/image v0.18.0\n\tgolang.org/x/mobile v0.0.0-20231127183840-76ac6878050a\n\tgolang.org/x/mod v0.17.0\n\tgolang.org/x/sys v0.20.0\n\tgolang.org/x/text v0.16.0\n\tgolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d\n\tgolang.org/x/tools/go/vcs v0.1.0-deprecated\n)\n\nrequire (\n\tgithub.com/akavel/rsrc v0.10.2 // indirect\n\tgithub.com/cpuguy83/go-md2man/v2 v2.0.1 // indirect\n\tgithub.com/davecgh/go-spew v1.1.1 // indirect\n\tgithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0 // indirect\n\tgithub.com/gopherjs/gopherjs v1.17.2 // indirect\n\tgithub.com/jsummers/gobmp v0.0.0-20151104160322-e2ba15ffa76e // indirect\n\tgithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e // indirect\n\tgithub.com/pmezard/go-difflib v1.0.0 // indirect\n\tgithub.com/russross/blackfriday/v2 v2.1.0 // indirect\n\tgolang.org/x/net v0.25.0 // indirect\n\tgolang.org/x/sync v0.7.0 // indirect\n\tgopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 66.3,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.34.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.38.0/go.mod h1:990N+gfupTy94rShfmMCWGDn0LpTmnzTp2qbd1dvSRU=\ncloud.google.com/go v0.44.1/go.mod h1:iSa0KzasP4Uvy3f1mN/7PiObzGgflwredwwASm/v6AU=\ncloud.google.com/go v0.44.2/go.mod h1:60680Gw3Yr4ikxnPRS/oxxkBccT6SA1yMk63TGekxKY=\ncloud.google.com/go v0.45.1/go.mod h1:RpBamKRgapWJb87xiFSdk4g1CME7QZg3uwTez+TSTjc=\ncloud.google.com/go v0.46.3/go.mod h1:a6bKKbmY7er1mI7TEI4lsAkts/mkhTSZK8w33B4RAg0=\ncloud.google.com/go v0.50.0/go.mod h1:r9sluTvynVuxRIOHXQEHMFffphuXHOMZMycpNR5e6To=\ncloud.google.com/go v0.52.0/go.mod h1:pXajvRH/6o3+F9jDHZWQ5PbGhn+o8w9qiu/CffaVdO4=\ncloud.google.com/go v0.53.0/go.mod h1:fp/UouUEsRkN6ryDKNW/Upv/JBKnv6WDthjR6+vze6M=\ncloud.google.com/go v0.54.0/go.mod h1:1rq2OEkV3YMf6n/9ZvGWI3GWw0VoqH/1x2nd8Is/bPc=\ncloud.google.com/go v0.56.0/go.mod h1:jr7tqZxxKOVYizybht9+26Z/gUq7tiRzu+ACVAMbKVk=\ncloud.google.com/go v0.57.0/go.mod h1:oXiQ6Rzq3RAkkY7N6t3TcE6jE+CIBBbA36lwQ1JyzZs=\ncloud.google.com/go v0.62.0/go.mod h1:jmCYTdRCQuc1PHIIJ/maLInMho30T/Y0M4hTdTShOYc=\ncloud.google.com/go v0.65.0/go.mod h1:O5N8zS7uWy9vkA9vayVHs65eM1ubvY4h553ofrNHObY=\ncloud.google.com/go v0.72.0/go.mod h1:M+5Vjvlc2wnp6tjzE102Dw08nGShTscUx2nZMufOKPI=\ncloud.google.com/go v0.74.0/go.mod h1:VV1xSbzvo+9QJOxLDaJfTjx5e+MePCpCWwvftOeQmWk=\ncloud.google.com/go v0.78.0/go.mod h1:QjdrLG0uq+YwhjoVOLsS1t7TW8fs36kLs4XO5R5ECHg=\ncloud.google.com/go v0.79.0/go.mod h1:3bzgcEeQlzbuEAYu4mrWhKqWjmpprinYgKJLgKHnbb8=\ncloud.google.com/go v0.81.0/go.mod h1:mk/AM35KwGk/Nm2YSeZbxXdrNK3KZOYHmLkOqC2V6E0=\ncloud.google.com/go/bigquery v1.0.1/go.mod h1:i/xbL2UlR5RvWAURpBYZTtm/cXjCha9lbfbpx4poX+o=\ncloud.google.com/go/bigquery v1.3.0/go.mod h1:PjpwJnslEMmckchkHFfq+HTD2DmtT67aNFKH1/VBDHE=\ncloud.google.com/go/bigquery v1.4.0/go.mod h1:S8dzgnTigyfTmLBfrtrhyYhwRxG72rYxvftPBK2Dvzc=\ncloud.google.com/go/bigquery v1.5.0/go.mod h1:snEHRnqQbz117VIFhE8bmtwIDY80NLUZUMb4Nv6dBIg=\ncloud.google.com/go/bigquery v1.7.0/go.mod h1://okPTzCYNXSlb24MZs83e2Do+h+VXtc4gLoIoXIAPc=\ncloud.google.com/go/bigquery v1.8.0/go.mod h1:J5hqkt3O0uAFnINi6JXValWIb1v0goeZM77hZzJN/fQ=\ncloud.google.com/go/datastore v1.0.0/go.mod h1:LXYbyblFSglQ5pkeyhO+Qmw7ukd3C+pD7TKLgZqpHYE=\ncloud.google.com/go/datastore v1.1.0/go.mod h1:umbIZjpQpHh4hmRpGhH4tLFup+FVzqBi1b3c64qFpCk=\ncloud.google.com/go/firestore v1.1.0/go.mod h1:ulACoGHTpvq5r8rxGJ4ddJZBZqakUQqClKRT5SZwBmk=\ncloud.google.com/go/pubsub v1.0.1/go.mod h1:R0Gpsv3s54REJCy4fxDixWD93lHJMoZTyQ2kNxGRt3I=\ncloud.google.com/go/pubsub v1.1.0/go.mod h1:EwwdRX2sKPjnvnqCa270oGRyludottCI76h+R3AArQw=\ncloud.google.com/go/pubsub v1.2.0/go.mod h1:jhfEVHT8odbXTkndysNHCcx0awwzvfOlguIAii9o8iA=\ncloud.google.com/go/pubsub v1.3.1/go.mod h1:i+ucay31+CNRpDW4Lu78I4xXG+O1r/MAHgjpRVR+TSU=\ncloud.google.com/go/storage v1.0.0/go.mod h1:IhtSnM/ZTZV8YYJWCY8RULGVqBDmpoyjwiyrjsg+URw=\ncloud.google.com/go/storage v1.5.0/go.mod h1:tpKbwo567HUNpVclU5sGELwQWBDZ8gh0ZeosJ0Rtdos=\ncloud.google.com/go/storage v1.6.0/go.mod h1:N7U0C8pVQ/+NIKOBQyamJIeKQKkZ+mxpohlUTyfDhBk=\ncloud.google.com/go/storage v1.8.0/go.mod h1:Wv1Oy7z6Yz3DshWRJFhqM/UCfaWIRTdp0RXyy7KQOVs=\ncloud.google.com/go/storage v1.10.0/go.mod h1:FLPqc6j+Ki4BU591ie1oL6qBQGu2Bl/tZ9ullr3+Kg0=\ndmitri.shuralyov.com/gpu/mtl v0.0.0-20190408044501-666a987793e9/go.mod h1:H6x//7gZCb22OMCxBHrMx7a5I7Hp++hsVxbQ4BYO7hU=\nfyne.io/systray v1.11.0 h1:D9HISlxSkx+jHSniMBR6fCFOUjk1x/OOOJLa9lJYAKg=\nfyne.io/systray v1.11.0/go.mod h1:RVwqP9nYMo7h5zViCBHri2FgjXF7H2cub7MAq4NSoLs=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/BurntSushi/toml v1.4.0 h1:kuoIxZQy2WRRk1pttg9asf+WVv6tWQuBNVmK8+nqPr0=\ngithub.com/BurntSushi/toml v1.4.0/go.mod h1:ukJfTF/6rtPPRCnwkur4qwRxa8vTRFBF0uk2lLoLwho=\ngithub.com/BurntSushi/xgb v0.0.0-20160522181843-27f122750802/go.mod h1:IVnqGOEym/WlBOVXweHU+Q+/VP0lqqI8lqeDx9IjBqo=\ngithub.com/akavel/rsrc v0.10.2 h1:Zxm8V5eI1hW4gGaYsJQUhxpjkENuG91ki8B4zCrvEsw=\ngithub.com/akavel/rsrc v0.10.2/go.mod h1:uLoCtb9J+EyAqh+26kdrTgmzRBFPGOolLWKpdxkKq+c=\ngithub.com/antihax/optional v1.0.0/go.mod h1:uupD/76wgC+ih3iEmQUL+0Ugr19nfwCT1kdvxnR2qWY=\ngithub.com/armon/circbuf v0.0.0-20150827004946-bbbad097214e/go.mod h1:3U/XgcO3hCbHZ8TKRvWD2dDTCfh9M9ya+I9JpbB7O8o=\ngithub.com/armon/go-metrics v0.0.0-20180917152333-f0300d1749da/go.mod h1:Q73ZrmVTwzkszR9V5SSuryQ31EELlFMUz1kKyl939pY=\ngithub.com/armon/go-radix v0.0.0-20180808171621-7fddfc383310/go.mod h1:ufUuZ+zHj4x4TnLV4JWEpy2hxWSpsRywHrMgIH9cCH8=\ngithub.com/bgentry/speakeasy v0.1.0/go.mod h1:+zsyZBPWlz7T6j88CTgSN5bM796AkVf0kBD4zp0CCIs=\ngithub.com/bketelsen/crypt v0.0.4/go.mod h1:aI6NrJ0pMGgvZKL1iVgXLnfIFJtfV+bKCoqOes/6LfM=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/chzyer/logex v1.1.10/go.mod h1:+Ywpsq7O8HXn0nuIou7OrIPyXbp3wmkHB+jjWRnGsAI=\ngithub.com/chzyer/readline v0.0.0-20180603132655-2972be24d48e/go.mod h1:nSuG5e5PlCu98SY8svDHJxuZscDgtXS6KTTbou5AhLI=\ngithub.com/chzyer/test v0.0.0-20180213035817-a1ea475d72b1/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cncf/udpa/go v0.0.0-20200629203442-efcf912fb354/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=\ngithub.com/coreos/go-semver v0.3.0/go.mod h1:nnelYz7RCh+5ahJtPPxZlU+153eP4D4r3EedlOD2RNk=\ngithub.com/coreos/go-systemd/v22 v22.3.2/go.mod h1:Y58oyj3AT4RCenI/lSvhwexgC+NSVTIJ3seZv2GcEnc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.0/go.mod h1:maD7wRr/U5Z6m/iR4s+kqSMx2CaBsrgA7czyZG/E6dU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.1 h1:r/myEWzV9lfsM1tFLgDyu0atFtJ1fXn261LKYj/3DxU=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.1/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/go-control-plane v0.9.7/go.mod h1:cwu0lG7PUMfa9snN8LXBig5ynNVH9qI8YYLbd1fK2po=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/go-control-plane v0.9.9-0.20210217033140-668b12f5399d/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.7.0/go.mod h1:Zm6kSWBoL9eyXnKyktHP6abPY2pDugNf5KwzbycvMj4=\ngithub.com/felixge/fgprof v0.9.3 h1:VvyZxILNuCiUCSXtPtYmmtGvb65nqXh2QFWc0Wpf2/g=\ngithub.com/fogleman/gg v1.3.0 h1:/7zJX8F6AaYQc57WQCyN9cAIz+4bCJGO9B+dyW29am8=\ngithub.com/fogleman/gg v1.3.0/go.mod h1:R/bRT+9gY/C5z7JzPU0zXsXHKM4/ayA+zqcVNZzPa1k=\ngithub.com/fredbi/uri v1.1.0 h1:OqLpTXtyRg9ABReqvDGdJPqZUxs8cyBDOMXBbskCaB8=\ngithub.com/fredbi/uri v1.1.0/go.mod h1:aYTUoAXBOq7BLfVJ8GnKmfcuURosB1xyHDIfWeC/iW4=\ngithub.com/fsnotify/fsnotify v1.4.9/go.mod h1:znqG4EE+3YCdAaPaxE2ZRY/06pZUdp0tY4IgpuI1SZQ=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/fyne-io/gl-js v0.0.0-20220119005834-d2da28d9ccfe h1:A/wiwvQ0CAjPkuJytaD+SsXkPU0asQ+guQEIg1BJGX4=\ngithub.com/fyne-io/gl-js v0.0.0-20220119005834-d2da28d9ccfe/go.mod h1:d4clgH0/GrRwWjRzJJQXxT/h1TyuNSfF/X64zb/3Ggg=\ngithub.com/fyne-io/glfw-js v0.0.0-20241126112943-313d8a0fe1d0 h1:/1YRWFv9bAWkoo3SuxpFfzpXH0D/bQnTjNXyF4ih7Os=\ngithub.com/fyne-io/glfw-js v0.0.0-20241126112943-313d8a0fe1d0/go.mod h1:gsGA2dotD4v0SR6PmPCYvS9JuOeMwAtmfvDE7mbYXMY=\ngithub.com/fyne-io/image v0.0.0-20220602074514-4956b0afb3d2 h1:hnLq+55b7Zh7/2IRzWCpiTcAvjv/P8ERF+N7+xXbZhk=\ngithub.com/fyne-io/image v0.0.0-20220602074514-4956b0afb3d2/go.mod h1:eO7W361vmlPOrykIg+Rsh1SZ3tQBaOsfzZhsIOb/Lm0=\ngithub.com/ghodss/yaml v1.0.0/go.mod h1:4dBDuWmgqj2HViK6kFavaiC9ZROes6MMH2rRYeMEF04=\ngithub.com/go-gl/gl v0.0.0-20211210172815-726fda9656d6 h1:zDw5v7qm4yH7N8C8uWd+8Ii9rROdgWxQuGoJ9WDXxfk=\ngithub.com/go-gl/gl v0.0.0-20211210172815-726fda9656d6/go.mod h1:9YTyiznxEY1fVinfM7RvRcjRHbw2xLBJ3AAGIT0I4Nw=\ngithub.com/go-gl/glfw v0.0.0-20190409004039-e6da0acd62b1/go.mod h1:vR7hzQXu2zJy9AVAgeJqvqgH9Q5CA+iKCZ2gyEVpxRU=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20191125211704-12ad95a8df72/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20200222043503-6f7a984d4dc4/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20240506104042-037f3cc74f2a h1:vxnBhFDDT+xzxf1jTJKMKZw3H0swfWk9RpWbBbDK5+0=\ngithub.com/go-gl/glfw/v3.3/glfw v0.0.0-20240506104042-037f3cc74f2a/go.mod h1:tQ2UAYgL5IevRw8kRxooKSPJfGvJ9fJQFa0TUsXzTg8=\ngithub.com/go-ole/go-ole v1.2.6 h1:/Fpf6oFPoeFik9ty7siob0G6Ke8QvQEuVcuChpwXzpY=\ngithub.com/go-ole/go-ole v1.2.6/go.mod h1:pprOEPIfldk/42T2oK7lQ4v4JSDwmV0As9GaiUsvbm0=\ngithub.com/go-text/render v0.2.0 h1:LBYoTmp5jYiJ4NPqDc2pz17MLmA3wHw1dZSVGcOdeAc=\ngithub.com/go-text/render v0.2.0/go.mod h1:CkiqfukRGKJA5vZZISkjSYrcdtgKQWRa2HIzvwNN5SU=\ngithub.com/go-text/typesetting v0.2.0 h1:fbzsgbmk04KiWtE+c3ZD4W2nmCRzBqrqQOvYlwAOdho=\ngithub.com/go-text/typesetting v0.2.0/go.mod h1:2+owI/sxa73XA581LAzVuEBZ3WEEV2pXeDswCH/3i1I=\ngithub.com/go-text/typesetting-utils v0.0.0-20240317173224-1986cbe96c66 h1:GUrm65PQPlhFSKjLPGOZNPNxLCybjzjYBzjfoBGaDUY=\ngithub.com/godbus/dbus/v5 v5.0.4/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/godbus/dbus/v5 v5.1.0 h1:4KLkAxT3aOY8Li4FRJe/KvhoNFFxo0m6fNuFUO8QJUk=\ngithub.com/godbus/dbus/v5 v5.1.0/go.mod h1:xhWf0FNVPg57R7Z0UbKHbJfkEywrmjJnf7w5xrFpKfA=\ngithub.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0 h1:DACJavvAHhabrF08vX0COfcOBJRhZ8lUbR+ZWIs0Y5g=\ngithub.com/golang/freetype v0.0.0-20170609003504-e2365dfdc4a0/go.mod h1:E/TSTwGwJL78qG/PmXZO1EjYhfJinVAhrmmHX6Z8B9k=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20190702054246-869f871628b6/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20191227052852-215e87163ea7/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.2.0/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/mock v1.3.1/go.mod h1:sBzyDLLjw3U8JLTeZvSv8jJB+tU5PVekmnlKIyFUx0Y=\ngithub.com/golang/mock v1.4.0/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.1/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.3/go.mod h1:UOMv5ysSaYNkG+OFQykRIcU/QvvxJf3p21QfJ2Bt3cw=\ngithub.com/golang/mock v1.4.4/go.mod h1:l3mdAwkq5BuhzHwde/uurv3sEJeZMXNpwsxVWU71h+4=\ngithub.com/golang/mock v1.5.0/go.mod h1:CWnOUgYIOo4TcNZ0wHX3YZCqsaM1I1Jvs6v3mP3KVu8=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.3/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.4/go.mod h1:vzj43D7+SQXF/4pzW/hwtAqwc6iTitCiVSaWz5lYuqw=\ngithub.com/golang/protobuf v1.3.5/go.mod h1:6O5/vntMXwX2lRkT1hjjk0nAC1IDOTvTlVgjlRvqsdk=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=\ngithub.com/golang/protobuf v1.5.1/go.mod h1:DopwsBzvsk0Fs44TXzsVbJyPhcCPeIwnvohx4u74HPM=\ngithub.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=\ngithub.com/google/btree v0.0.0-20180813153112-4030bb1f1f0c/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/btree v1.0.0/go.mod h1:lNA+9X1NB3Zf8V7Ke586lFgjr2dZNuvo3lPJSGZ5JPQ=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.4.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.1/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.2/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.4/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.6/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=\ngithub.com/google/martian v2.1.0+incompatible/go.mod h1:9I4somxYTbIHy5NJKHRl3wXiIaQGbYVAs8BPL6v8lEs=\ngithub.com/google/martian/v3 v3.0.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/martian/v3 v3.1.0/go.mod h1:y5Zk1BBys9G+gd6Jrk0W3cC1+ELVxBWuIGO+w/tUAp0=\ngithub.com/google/pprof v0.0.0-20181206194817-3ea8567a2e57/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20190515194954-54271f7e092f/go.mod h1:zfwlbNMJ+OItoe0UupaVj+oy1omPYYDuagoSzA8v9mc=\ngithub.com/google/pprof v0.0.0-20191218002539-d4f498aebedc/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200212024743-f11f1df84d12/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200229191704-1ebb73c60ed3/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200430221834-fc25d7d30c6d/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20200708004538-1a94d8640e99/go.mod h1:ZgVRPoUq/hfqzAqh7sHMqb3I9Rq5C59dIz2SbBwJ4eM=\ngithub.com/google/pprof v0.0.0-20201023163331-3e6fc7fc9c4c/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20201203190320-1bf35d6f28c2/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210122040257-d980be63207e/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20210226084205-cbba55b83ad5/go.mod h1:kpwsk12EmLew5upagYY7GY0pfYCcupk39gWOCRROcvE=\ngithub.com/google/pprof v0.0.0-20211214055906-6f57359322fd h1:1FjCyPC+syAzJ5/2S8fqdZK1R22vvA0J7JZKcuOIQ7Y=\ngithub.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/googleapis/gax-go/v2 v2.0.4/go.mod h1:0Wqv26UfaUD9n4G6kQubkQ+KchISgw+vpHVxEJEs9eg=\ngithub.com/googleapis/gax-go/v2 v2.0.5/go.mod h1:DWXyrwAJ9X0FpwwEdw+IPEYBICEFu5mhpdKc/us6bOk=\ngithub.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=\ngithub.com/gopherjs/gopherjs v0.0.0-20211219123610-ec9572f70e60/go.mod h1:cz9oNYuRUWGdHmLF2IodMLkAhcPtXeULvcBNagUrxTI=\ngithub.com/gopherjs/gopherjs v1.17.2 h1:fQnZVsXk8uxXIStYb0N4bGk7jeyTalG/wsZjQ25dO0g=\ngithub.com/gopherjs/gopherjs v1.17.2/go.mod h1:pRRIvn/QzFLrKfvEz3qUuEhtE/zLCWfreZ6J5gM2i+k=\ngithub.com/goxjs/gl v0.0.0-20210104184919-e3fafc6f8f2a/go.mod h1:dy/f2gjY09hwVfIyATps4G2ai7/hLwLkc5TrPqONuXY=\ngithub.com/grpc-ecosystem/grpc-gateway v1.16.0/go.mod h1:BDjrQk3hbvj6Nolgz8mAMFbcEtjT1g+wF4CSlocrBnw=\ngithub.com/hashicorp/consul/api v1.1.0/go.mod h1:VmuI/Lkw1nC05EYQWNKwWGbkg+FbDBtguAZLlVdkD9Q=\ngithub.com/hashicorp/consul/sdk v0.1.1/go.mod h1:VKf9jXwCTEY1QZP2MOLRhb5i/I/ssyNV1vwHyQBF0x8=\ngithub.com/hashicorp/errwrap v1.0.0/go.mod h1:YH+1FKiLXxHSkmPseP+kNlulaMuP3n2brvKWEqk/Jc4=\ngithub.com/hashicorp/go-cleanhttp v0.5.1/go.mod h1:JpRdi6/HCYpAwUzNwuwqhbovhLtngrth3wmdIIUrZ80=\ngithub.com/hashicorp/go-immutable-radix v1.0.0/go.mod h1:0y9vanUI8NX6FsYoO3zeMjhV/C5i9g4Q3DwcSNZ4P60=\ngithub.com/hashicorp/go-msgpack v0.5.3/go.mod h1:ahLV/dePpqEmjfWmKiqvPkv/twdG7iPBM1vqhUKIvfM=\ngithub.com/hashicorp/go-multierror v1.0.0/go.mod h1:dHtQlpGsu+cZNNAkkCN/P3hoUDHhCYQXV3UM06sGGrk=\ngithub.com/hashicorp/go-rootcerts v1.0.0/go.mod h1:K6zTfqpRlCUIjkwsN4Z+hiSfzSTQa6eBIzfwKfwNnHU=\ngithub.com/hashicorp/go-sockaddr v1.0.0/go.mod h1:7Xibr9yA9JjQq1JpNB2Vw7kxv8xerXegt+ozgdvDeDU=\ngithub.com/hashicorp/go-syslog v1.0.0/go.mod h1:qPfqrKkXGihmCqbJM2mZgkZGvKG1dFdvsLplgctolz4=\ngithub.com/hashicorp/go-uuid v1.0.0/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go-uuid v1.0.1/go.mod h1:6SBZvOh/SIDV7/2o3Jml5SYk/TvGqwFJ/bN7x4byOro=\ngithub.com/hashicorp/go.net v0.0.1/go.mod h1:hjKkEWcCURg++eb33jQU7oqQcI9XDCnUzHA0oac0k90=\ngithub.com/hashicorp/golang-lru v0.5.0/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/golang-lru v0.5.1/go.mod h1:/m3WP610KZHVQ1SGc6re/UDhFvYD7pJ4Ao+sR/qLZy8=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/hashicorp/logutils v1.0.0/go.mod h1:QIAnNjmIWmVIIkWDTG1z5v++HQmx9WQRO+LraFDTW64=\ngithub.com/hashicorp/mdns v1.0.0/go.mod h1:tL+uN++7HEJ6SQLQ2/p+z2pH24WQKWjBPkE0mNTz8vQ=\ngithub.com/hashicorp/memberlist v0.1.3/go.mod h1:ajVTdAv/9Im8oMAAj5G31PhhMCZJV2pPBoIllUwCN7I=\ngithub.com/hashicorp/serf v0.8.2/go.mod h1:6hOLApaqBFA1NXqRQAsxw9QxuDEvNxSQRwA/JwenrHc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20181102032728-5e5cf60278f6/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/ianlancetaylor/demangle v0.0.0-20200824232613-28f6c0f3b639/go.mod h1:aSSvb/t6k1mPoxDqO4vJh6VOCGPwU4O0C2/Eqndh1Sc=\ngithub.com/inconshreveable/mousetrap v1.0.0/go.mod h1:PxqpIevigyE2G7u3NXJIT2ANytuPF1OarO4DADm73n8=\ngithub.com/jackmordaunt/icns/v2 v2.2.6 h1:M7kg6pWRmB+SyCvM058cV2BlAz3MedOHy4e3j2i7FQg=\ngithub.com/jackmordaunt/icns/v2 v2.2.6/go.mod h1:DqlVnR5iafSphrId7aSD06r3jg0KRC9V6lEBBp504ZQ=\ngithub.com/jeandeaual/go-locale v0.0.0-20240223122105-ce5225dcaa49 h1:Po+wkNdMmN+Zj1tDsJQy7mJlPlwGNQd9JZoPjObagf8=\ngithub.com/jeandeaual/go-locale v0.0.0-20240223122105-ce5225dcaa49/go.mod h1:YiutDnxPRLk5DLUFj6Rw4pRBBURZY07GFr54NdV9mQg=\ngithub.com/josephspurrier/goversioninfo v1.4.0 h1:Puhl12NSHUSALHSuzYwPYQkqa2E1+7SrtAPJorKK0C8=\ngithub.com/josephspurrier/goversioninfo v1.4.0/go.mod h1:JWzv5rKQr+MmW+LvM412ToT/IkYDZjaclF2pKDss8IY=\ngithub.com/json-iterator/go v1.1.11/go.mod h1:KdQUCv79m/52Kvf8AW2vK1V8akMuk1QjK/uOdHXbAo4=\ngithub.com/jstemmer/go-junit-report v0.0.0-20190106144839-af01ea7f8024/go.mod h1:6v2b51hI/fHJwM22ozAgKL4VKDeJcHhJFhtBdhmNjmU=\ngithub.com/jstemmer/go-junit-report v0.9.1/go.mod h1:Brl9GWCQeLvo8nXZwPNNblvFj/XSXhF0NWZEnDohbsk=\ngithub.com/jsummers/gobmp v0.0.0-20151104160322-e2ba15ffa76e h1:LvL4XsI70QxOGHed6yhQtAU34Kx3Qq2wwBzGFKY8zKk=\ngithub.com/jsummers/gobmp v0.0.0-20151104160322-e2ba15ffa76e/go.mod h1:kLgvv7o6UM+0QSf0QjAse3wReFDsb9qbZJdfexWlrQw=\ngithub.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=\ngithub.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=\ngithub.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=\ngithub.com/kr/fs v0.1.0/go.mod h1:FFnZGqtBN9Gxj7eW1uZ42v5BccTP0vu6NEaFoC2HwRg=\ngithub.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=\ngithub.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=\ngithub.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=\ngithub.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=\ngithub.com/lucor/goinfo v0.9.0 h1:EdsMzmY5TZujA4xb9xMLIdlp2+zvF7miNYkVXvqqgOQ=\ngithub.com/lucor/goinfo v0.9.0/go.mod h1:L6m6tN5Rlova5Z83h1ZaKsMP1iiaoZ9vGTNzu5QKOD4=\ngithub.com/magiconair/properties v1.8.5/go.mod h1:y3VJvCyxH9uVvJTWEGAELF3aiYNyPKd5NZ3oSwXrF60=\ngithub.com/mattn/go-colorable v0.0.9/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaOChaDxuIBZU=\ngithub.com/mattn/go-isatty v0.0.3/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=\ngithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2 h1:YocNLcTBdEdvY3iDK6jfWXvEaM5OCKkjxPKoJRdB3Gg=\ngithub.com/mcuadros/go-version v0.0.0-20190830083331-035f6764e8d2/go.mod h1:76rfSfYPWj01Z85hUf/ituArm797mNKcvINh1OlsZKo=\ngithub.com/miekg/dns v1.0.14/go.mod h1:W1PPwlIAgtquWBMBEV9nkV9Cazfe8ScdGz/Lj7v3Nrg=\ngithub.com/mitchellh/cli v1.0.0/go.mod h1:hNIlj7HEI86fIcpObd7a0FcrxTWetlwJDGcceTlRvqc=\ngithub.com/mitchellh/go-homedir v1.0.0/go.mod h1:SfyaCUpYCn1Vlf4IUYiD9fPX4A5wJrkLzIz1N1q0pr0=\ngithub.com/mitchellh/go-testing-interface v1.0.0/go.mod h1:kRemZodwjscx+RGhAo8eIhFbs2+BFgRtFPeD/KE+zxI=\ngithub.com/mitchellh/gox v0.4.0/go.mod h1:Sd9lOJ0+aimLBi73mGofS1ycjY8lL3uZM3JPS42BGNg=\ngithub.com/mitchellh/iochan v1.0.0/go.mod h1:JwYml1nuB7xOzsp52dPpHFffvOCDupsG0QubkSMEySY=\ngithub.com/mitchellh/mapstructure v0.0.0-20160808181253-ca63d7c062ee/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.1.2/go.mod h1:FVVH3fgwuzCH5S8UJGiWEs2h04kUh9fWfEaFds41c1Y=\ngithub.com/mitchellh/mapstructure v1.4.1/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=\ngithub.com/modern-go/reflect2 v0.0.0-20180701023420-4b7aa43c6742/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/modern-go/reflect2 v1.0.1/go.mod h1:bx2lNnkwVCuqBIxFjflWJWanXIb3RllmbCylyMrvgv0=\ngithub.com/neelance/astrewrite v0.0.0-20160511093645-99348263ae86/go.mod h1:kHJEU3ofeGjhHklVoIGuVj85JJwZ6kWPaJwCIxgnFmo=\ngithub.com/neelance/sourcemap v0.0.0-20200213170602-2833bce08e4c/go.mod h1:Qr6/a/Q4r9LP1IltGz7tA7iOK1WonHEYhu1HRBA7ZiM=\ngithub.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646 h1:zYyBkD/k9seD2A7fsi6Oo2LfFZAehjjQMERAvZLEDnQ=\ngithub.com/nfnt/resize v0.0.0-20180221191011-83c6a9932646/go.mod h1:jpp1/29i3P1S/RLdc7JQKbRpFeM1dOBd8T9ki5s+AY8=\ngithub.com/nicksnyder/go-i18n/v2 v2.4.0 h1:3IcvPOAvnCKwNm0TB0dLDTuawWEj+ax/RERNC+diLMM=\ngithub.com/nicksnyder/go-i18n/v2 v2.4.0/go.mod h1:nxYSZE9M0bf3Y70gPQjN9ha7XNHX7gMc814+6wVyEI4=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e h1:fD57ERR4JtEqsWbfPhv4DMiApHyliiK5xCTNVSPiaAs=\ngithub.com/niemeyer/pretty v0.0.0-20200227124842-a10e7caefd8e/go.mod h1:zD1mROLANZcx1PVRCS0qkT7pwLkGfwJo4zjcN/Tysno=\ngithub.com/pascaldekloe/goe v0.0.0-20180627143212-57f6aae5913c/go.mod h1:lzWF7FIEvWOWxwDKqyGYQf6ZUaNfKdP144TG7ZOy1lc=\ngithub.com/pelletier/go-toml v1.9.3/go.mod h1:u1nR/EPcESfeI/szUZKdtJ0xRNbUoANCkoOuaOx1Y+c=\ngithub.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=\ngithub.com/pkg/profile v1.7.0 h1:hnbDkaNWPCLMO9wGLdBFTIZvzDrDfBM2072E1S9gJkA=\ngithub.com/pkg/sftp v1.10.1/go.mod h1:lYOWFsE0bwd1+KfKJaKeuokY15vzFx25BLbzYYoAxZI=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/posener/complete v1.1.1/go.mod h1:em0nMJCgc9GFtwrmVmEMR/ZL6WyhyjMBndrE9hABlRI=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/rogpeppe/fastuuid v1.2.0/go.mod h1:jVj6XXZzXRy/MSR5jhDC/2q6DgLz+nrA6LYCDYWNEvQ=\ngithub.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=\ngithub.com/russross/blackfriday/v2 v2.0.1/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/russross/blackfriday/v2 v2.1.0 h1:JIOH55/0cWyOuilr9/qlrm0BSXldqnqwMsf35Ld67mk=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/ryanuber/columnize v0.0.0-20160712163229-9b3edd62028f/go.mod h1:sm1tb6uqfes/u+d4ooFouqFdy9/2g9QGwK3SQygK0Ts=\ngithub.com/rymdport/portal v0.3.0 h1:QRHcwKwx3kY5JTQcsVhmhC3TGqGQb9LFghVNUy8AdB8=\ngithub.com/rymdport/portal v0.3.0/go.mod h1:kFF4jslnJ8pD5uCi17brj/ODlfIidOxlgUDTO5ncnC4=\ngithub.com/sean-/seed v0.0.0-20170313163322-e2103e2c3529/go.mod h1:DxrIzT+xaE7yg65j358z/aeFdxmN0P9QXhEzd20vsDc=\ngithub.com/shurcooL/go v0.0.0-20200502201357-93f07166e636/go.mod h1:TDJrrUr11Vxrven61rcy3hJMUqaf/CLWYhHNPmT14Lk=\ngithub.com/shurcooL/httpfs v0.0.0-20190707220628-8d4bc4ba7749/go.mod h1:ZY1cvUeJuFPAdZ/B6v7RHavJWZn2YPVFQ1OSXhCGOkg=\ngithub.com/shurcooL/sanitized_anchor_name v1.0.0/go.mod h1:1NzhyTcUVG4SuEtjjoZeVRXNmyL/1OwPU0+IJeTBvfc=\ngithub.com/shurcooL/vfsgen v0.0.0-20200824052919-0d455de96546/go.mod h1:TrYk7fJVaAttu97ZZKrO9UbRa8izdowaMIZcxYMbVaw=\ngithub.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=\ngithub.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=\ngithub.com/spf13/afero v1.6.0/go.mod h1:Ai8FlHk4v/PARR026UzYexafAt9roJ7LcLMAmO6Z93I=\ngithub.com/spf13/cast v1.3.1/go.mod h1:Qx5cxh0v+4UWYiBimWS+eyWzqEqokIECu5etghLkUJE=\ngithub.com/spf13/cobra v1.2.1/go.mod h1:ExllRjgxM/piMAM+3tAZvg8fsklGAf3tPfi+i8t68Nk=\ngithub.com/spf13/jwalterweatherman v1.1.0/go.mod h1:aNWZUN0dPAAO/Ljvb5BEdw96iTZ0EXowPYD95IqWIGo=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.8.1/go.mod h1:o0Pch8wJ9BVSWGQMbra6iw0oQ5oktSIBaujf1rJH9Ns=\ngithub.com/srwiley/oksvg v0.0.0-20221011165216-be6e8873101c h1:km8GpoQut05eY3GiYWEedbTT0qnSxrCjsVbb7yKY1KE=\ngithub.com/srwiley/oksvg v0.0.0-20221011165216-be6e8873101c/go.mod h1:cNQ3dwVJtS5Hmnjxy6AgTPd0Inb3pW05ftPSX7NZO7Q=\ngithub.com/srwiley/rasterx v0.0.0-20220730225603-2ab79fcdd4ef h1:Ch6Q+AZUxDBCVqdkI8FSpFyZDtCVBc2VmejdNrm5rRQ=\ngithub.com/srwiley/rasterx v0.0.0-20220730225603-2ab79fcdd4ef/go.mod h1:nXTWP6+gD5+LUJ8krVhhoeHjvHTutPxMYl5SvkcnJNE=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.4 h1:CcVxjf3Q8PM0mHUKJCdn+eZZtm5yQwehR5yeSVQQcUk=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/subosito/gotenv v1.2.0/go.mod h1:N0PQaV/YGNqwC0u51sEeR/aUtSLEXKX9iv69rRypqCw=\ngithub.com/urfave/cli/v2 v2.4.0 h1:m2pxjjDFgDxSPtO8WSdbndj17Wu2y8vOT86wE/tjr+I=\ngithub.com/urfave/cli/v2 v2.4.0/go.mod h1:NX9W0zmTvedE5oDoOMs2RTC8RvdK98NTYZE5LbaEYPg=\ngithub.com/yuin/goldmark v1.1.25/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=\ngithub.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.4.0/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=\ngithub.com/yuin/goldmark v1.7.1 h1:3bajkSilaCbjdKVsKdZjZCLBNPL9pYzrCakKaf4U49U=\ngithub.com/yuin/goldmark v1.7.1/go.mod h1:uzxRWxtg69N339t3louHJ7+O03ezfj6PlliRlaOzY1E=\ngo.etcd.io/etcd/api/v3 v3.5.0/go.mod h1:cbVKeC6lCfl7j/8jBhAK6aIYO9XOjdptoxU/nLQcPvs=\ngo.etcd.io/etcd/client/pkg/v3 v3.5.0/go.mod h1:IJHfcCEKxYu1Os13ZdwCwIUTUVGYTSAM3YSwc9/Ac1g=\ngo.etcd.io/etcd/client/v2 v2.305.0/go.mod h1:h9puh54ZTgAKtEbut2oe9P4L/oqKCVB6xsXlzd7alYQ=\ngo.opencensus.io v0.21.0/go.mod h1:mSImk1erAIZhrmZN+AvHh14ztQfjbGwt4TtuofqLduU=\ngo.opencensus.io v0.22.0/go.mod h1:+kGneAE2xo2IficOXnaByMWTGM9T73dGwxeWcUqIpI8=\ngo.opencensus.io v0.22.2/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.3/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.4/go.mod h1:yxeiOL68Rb0Xd1ddK5vPZ/oVn4vY4Ynel7k9FzqtOIw=\ngo.opencensus.io v0.22.5/go.mod h1:5pWMHQbX5EPX2/62yrJeAkowc+lfs/XD7Uxpq3pI6kk=\ngo.opencensus.io v0.23.0/go.mod h1:XItmlyltB5F7CS4xOC1DcqMoFqwtC6OG2xF7mCv7P7E=\ngo.uber.org/atomic v1.7.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.6.0/go.mod h1:cdWPpRnG4AhwMwsgIHip0KRBQjJy5kYEpYjJxpXp9iU=\ngo.uber.org/zap v1.17.0/go.mod h1:MXVU+bhUf/A7Xi2HNOnopQOrmycQ5Ih87HtOu4q5SSo=\ngolang.org/x/crypto v0.0.0-20181029021203-45a5f77698d3/go.mod h1:6SG95UA2DQfeDnfUPMdvaQW0Q7yPrPDi9nlGo2tz2b4=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190605123033-f99c8df09eb5/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190306152737-a1d7652674e8/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/exp v0.0.0-20190510132918-efd6b22b2522/go.mod h1:ZjyILWgesfNpC6sMxTJOJm9Kp84zZh5NQWvqDGG3Qr8=\ngolang.org/x/exp v0.0.0-20190731235908-ec7cb31e5a56/go.mod h1:JhuoJpWY28nO4Vef9tZUw9qufEGTyX1+7lmHxV5q5G4=\ngolang.org/x/exp v0.0.0-20190829153037-c13cbed26979/go.mod h1:86+5VVa7VpoJ4kLfm080zCjGlMRFzhUhsZKEZO7MGek=\ngolang.org/x/exp v0.0.0-20191030013958-a1ab85dbe136/go.mod h1:JXzH8nQsPlswgeRAPE3MuO9GYsAcnJvJ4vnMwN/5qkY=\ngolang.org/x/exp v0.0.0-20191129062945-2f5052295587/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20191227195350-da58074b4299/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200119233911-0405dc783f0a/go.mod h1:2RIsYlXP63K8oxa1u096TMicItID8zy7Y6sNkU49FU4=\ngolang.org/x/exp v0.0.0-20200207192155-f17229e696bd/go.mod h1:J/WKrq2StrnmMY6+EHIKF9dgMWnmCNThgcyBT1FY9mM=\ngolang.org/x/exp v0.0.0-20200224162631-6cc2880d07d6/go.mod h1:3jZMyOhIsHpP37uCMkUooju7aAi5cS1Q23tOzKc+0MU=\ngolang.org/x/image v0.0.0-20190227222117-0694c2d4d067/go.mod h1:kZ7UVZpmo3dzQBMxlp+ypCbDeSB+sBbTgSJuh5dn5js=\ngolang.org/x/image v0.0.0-20190802002840-cff245a6509b/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.18.0 h1:jGzIakQa/ZXI1I0Fxvaa9W7yP25TqT6cHIHn+6CqvSQ=\ngolang.org/x/image v0.18.0/go.mod h1:4yyo5vMFQjVjUcVk4jEQcU9MGy/rulF5WvUILseCM2E=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190301231843-5614ed5bae6f/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190409202823-959b441ac422/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190909230951-414d861bb4ac/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/lint v0.0.0-20191125180803-fdd1cda4f05f/go.mod h1:5qLYkcX4OjUUV8bRuDixDT3tpyyb+LUpUlRWLxfhWrs=\ngolang.org/x/lint v0.0.0-20200130185559-910be7a94367/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20200302205851-738671d3881b/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/lint v0.0.0-20210508222113-6edffad5e616/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=\ngolang.org/x/mobile v0.0.0-20190312151609-d3739f865fa6/go.mod h1:z+o9i4GpDbdi3rU15maQ/Ox0txvL9dWGYEHz965HBQE=\ngolang.org/x/mobile v0.0.0-20190719004257-d2bd2a29d028/go.mod h1:E/iHnbuqvinMTCcRqshq8CkpyQDoeVncDDYHnLhea+o=\ngolang.org/x/mobile v0.0.0-20211207041440-4e6c2922fdee/go.mod h1:pe2sM7Uk+2Su1y7u/6Z8KJ24D7lepUjFZbhFOrmDfuQ=\ngolang.org/x/mobile v0.0.0-20231127183840-76ac6878050a h1:sYbmY3FwUWCBTodZL1S3JUuOvaW6kM2o+clDzzDNBWg=\ngolang.org/x/mobile v0.0.0-20231127183840-76ac6878050a/go.mod h1:Ede7gF0KGoHlj822RtphAHK1jLdrcuRBZg0sF1Q+SPc=\ngolang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=\ngolang.org/x/mod v0.1.0/go.mod h1:0QHyrYULN0/3qlju5TqG8bIK38QM8yzMo5ekMj3DlcY=\ngolang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.1.1-0.20191107180719-034126e5016b/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=\ngolang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.1/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=\ngolang.org/x/mod v0.17.0 h1:zY54UmvipHiNd+pm+m0x9KhZ9hl1/7QNMyxXbc6ICqA=\ngolang.org/x/mod v0.17.0/go.mod h1:hTbmBsO62+eylJbnUtE2MGJUyE7QWk4xUqPFrRgJ+7c=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181023162649-9b4f9f5ad519/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20181201002055-351d144fa1fc/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190108225652-1e06a53dbb7e/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190501004415-9ce7a6920f09/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190503192946-f4e77d36d62c/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190628185345-da137c7871d7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20190724013045-ca1201d0de80/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20191209160850-c0dbc17a3553/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200114155413-6afb5195e5aa/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200202094626-16171245cfb2/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200222125558-5a598a2470a0/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200301022130-244492dfa37a/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20200324143707-d3edc9973b7e/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200501053045-e0ff5e5a1de5/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200506145744-7e3656a0809f/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200513185701-a91f0712d120/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200520182314-0ba52f642ac2/go.mod h1:qpuaurCH72eLCgpAm/N6yyVIVM9cpaDIP3A8BGJEC5A=\ngolang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200707034311-ab3426394381/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20200822124328-c89045814202/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=\ngolang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201031054903-ff519b6c9102/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20201209123823-ac852fbbde11/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210119194325-5f4716e94777/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=\ngolang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=\ngolang.org/x/net v0.0.0-20210805182204-aaa1db679c0d/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=\ngolang.org/x/net v0.25.0 h1:d/OCCoBEUq33pjydKrGQhw7IlUPI2Oylr+8qLx49kac=\ngolang.org/x/net v0.25.0/go.mod h1:JkAGAh7GEvH74S6FOH42FLoXpXbE/aqXSrIQjXgsiwM=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.0.0-20190226205417-e64efc72b421/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20190604053449-0f29369cfe45/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20191202225959-858c2ad4c8b6/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200107190931-bf48bf16ab8d/go.mod h1:gOpvHmFTYa4IltrdGE7lF6nIHvwfUNPOp7c8zoXwtLw=\ngolang.org/x/oauth2 v0.0.0-20200902213428-5d25da1a8d43/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201109201403-9fd604954f58/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20201208152858-08078c50e5b5/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210218202405-ba52d332ba99/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210220000619-9bb904979d93/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210313182246-cd4f82c27b84/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/oauth2 v0.0.0-20210402161424-2e8d93401602/go.mod h1:KelEdhl1UZF7XfJ4dDtk6s++YSgaE7mD/BuKKDLBl4A=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181221193216-37e7f081c4d4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190227155943-e225da77a7e6/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200317015054-43a5402ce75a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20201207232520-09787c993a3a/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.7.0 h1:YsImfSBoP9QPYL0xyKJPq0gcaJdG3rInoqxTWbfQu9M=\ngolang.org/x/sync v0.7.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180823144017-11551d06cbcc/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20181026203630-95b1ffbd15a5/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190312061237-fead79001313/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190502145724-3ef323f4f1fd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190507160741-ecd444e8653b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190606165138-5da285871e9c/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190624142023-c5567b49c5d0/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190726091711-fc99dfbffb4e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20190916202348-b4ddaad3f8a3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191001151750-bb3f8db39f24/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191005200804-aed5e4c7ecf9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191204072324-ce4227a45e2e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20191228213918-04cbcbbfeed8/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200113162924-86b910548bc1/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200122134326-e047566fdf82/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200202164722-d101bd2416d5/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200212091648-12a6c2dcc1e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200302150141-5c8b2ff67527/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200331124033-c3d80250170d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200501052902-10377860bb8e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200511232937-7e40ca221e25/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200515095857-1151b9dac4a9/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200523222454-059865788121/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200803210538-64077c9b5642/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200905004654-be1d3432aa8f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201201145000-ef89a241ccb3/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210104204734-6f8348627aad/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210220050731-9a76102bfb43/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210305230114-8fe3ee5dd75b/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210403161142-5e06dd20ab57/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210630005230-0f9fa26af87c/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20210809222454-d867a43fc93e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.1.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.20.0 h1:Od9JTbYCk261bKm4M/mw7AklTlFYIa0bIp9BgSm1S8Y=\ngolang.org/x/sys v0.20.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/text v0.0.0-20170915032832-14c0d48ead0c/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.1-0.20180807135948-17ff2d5776d2/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.16.0 h1:a94ExnEXNtEwYLGJSIUxnWoxoRz/ZcCsV63ROupILh4=\ngolang.org/x/text v0.16.0/go.mod h1:GhwF1Be+LQoKShO3cGOHzqOgRrGaYc9AvblQOmPVHnI=\ngolang.org/x/time v0.0.0-20181108054448-85acf8d2951c/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20190308202827-9d24e82272b4/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/time v0.0.0-20191024005414-555d28b269f0/go.mod h1:tRJNPiyCQ0inRvYxbN9jk5I+vvW/OXSQhTDSoE431IQ=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312151545-0bb0c0a6e846/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190312170243-e65039ee4138/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190328211700-ab21143f2384/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190425150028-36563e24a262/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190506145303-2d16b83fe98c/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20190606124116-d0a3d012864b/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190628153133-6cdbf07be9d0/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=\ngolang.org/x/tools v0.0.0-20190816200558-6889da9d5479/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20190911174233-4f2ddba30aff/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191012152004-8de300cfc20a/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191112195655-aa38f8e97acc/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191113191852-77e3bb0ad9e7/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191115202509-3a792d9c32b2/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191125144606-a911d9008d1f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.0.0-20191216173652-a0e659d51361/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20191227053925-7b8e75db28f4/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200117161641-43d50277825c/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200122220014-bf1340f18c4a/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200204074204-1cc6d1ef6c74/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200207183749-b753a1ba74fa/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200212150539-ea181f53ac56/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200224181240-023911ca70b2/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200227222343-706bc42d1f0d/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=\ngolang.org/x/tools v0.0.0-20200304193943-95d2e580d8eb/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200312045724-11d5b4c81c7d/go.mod h1:o4KQGtdN14AW+yjsvvwRTJJuXz8XRtIHtEnmAXLyFUw=\ngolang.org/x/tools v0.0.0-20200331025713-a30bf2db82d4/go.mod h1:Sl4aGygMT6LrqrWclx+PTx3U+LnKx/seiNR+3G19Ar8=\ngolang.org/x/tools v0.0.0-20200501065659-ab2804fb9c9d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200512131952-2bc93b1c0c88/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200515010526-7d3b6ebf133d/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200618134242-20370b0cb4b2/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=\ngolang.org/x/tools v0.0.0-20200729194436-6467de6f59a7/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200804011535-6c149bb5ef0d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200825202427-b303f430e36d/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=\ngolang.org/x/tools v0.0.0-20200904185747-39188db58858/go.mod h1:Cj7w3i3Rnn0Xh82ur9kSqwfTHTeVxaDqrfMjpcNT6bE=\ngolang.org/x/tools v0.0.0-20201110124207-079ba7bd75cd/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201201161351-ac6f37ff4c2a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20201208233053-a543418bbed2/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210105154028-b0ab187a4818/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=\ngolang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=\ngolang.org/x/tools v0.1.2/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.5/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=\ngolang.org/x/tools v0.1.8-0.20211022200916-316ba0b74098/go.mod h1:LGqMHiF4EqQNHR1JncWGqT5BVaXmza+X+BDGol+dOxo=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d h1:vU5i/LfpvrRCpgM/VPfJLg5KjxD3E+hfT1SH+d9zLwg=\ngolang.org/x/tools v0.21.1-0.20240508182429-e35e4ccd0d2d/go.mod h1:aiJjzUbINMkxbQROHiO6hDPo2LHcIPhhQsa9DLh0yGk=\ngolang.org/x/tools/go/vcs v0.1.0-deprecated h1:cOIJqWBl99H1dH5LWizPa+0ImeeJq3t3cJjaeOWUAL4=\ngolang.org/x/tools/go/vcs v0.1.0-deprecated/go.mod h1:zUrvATBAvEI9535oC0yWYsLsHIV4Z7g63sNPVMtuBy8=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngoogle.golang.org/api v0.4.0/go.mod h1:8k5glujaEP+g9n7WNsDg8QP6cUVNI86fCNMcbazEtwE=\ngoogle.golang.org/api v0.7.0/go.mod h1:WtwebWUNSVBH/HAw79HIFXZNqEvBhG+Ra+ax0hx3E3M=\ngoogle.golang.org/api v0.8.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.9.0/go.mod h1:o4eAsZoiT+ibD93RtjEohWalFOjRDx6CVaqeizhEnKg=\ngoogle.golang.org/api v0.13.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.14.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.15.0/go.mod h1:iLdEw5Ide6rF15KTC1Kkl0iskquN2gFfn9o9XIsbkAI=\ngoogle.golang.org/api v0.17.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.18.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.19.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.20.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.22.0/go.mod h1:BwFmGc8tA3vsd7r/7kR8DY7iEEGSU04BFxCo5jP/sfE=\ngoogle.golang.org/api v0.24.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.28.0/go.mod h1:lIXQywCXRcnZPGlsd8NbLnOjtAoL6em04bJ9+z0MncE=\ngoogle.golang.org/api v0.29.0/go.mod h1:Lcubydp8VUV7KeIHD9z2Bys/sm/vGKnG1UHuDBSrHWM=\ngoogle.golang.org/api v0.30.0/go.mod h1:QGmEvQ87FHZNiUVJkT14jQNYJ4ZJjdRF23ZXz5138Fc=\ngoogle.golang.org/api v0.35.0/go.mod h1:/XrVsuzM0rZmrsbjJutiuftIzeuTQcEeaYcSk/mQ1dg=\ngoogle.golang.org/api v0.36.0/go.mod h1:+z5ficQTmoYpPn8LCUNVpK5I7hwkpjbcgqA7I34qYtE=\ngoogle.golang.org/api v0.40.0/go.mod h1:fYKFpnQN0DsDSKRVRcQSDQNtqWPfM9i+zNPxepjRCQ8=\ngoogle.golang.org/api v0.41.0/go.mod h1:RkxM5lITDfTzmyKFPt+wGrCJbVfniCr2ool8kTBzRTU=\ngoogle.golang.org/api v0.43.0/go.mod h1:nQsDGjRXMo4lvh5hP0TKqF244gqhGcr/YSIykhUk/94=\ngoogle.golang.org/api v0.44.0/go.mod h1:EBOGZqzyhtvMDoxwS97ctnh0zUmYY6CxqXsc1AvkYD8=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.5.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.1/go.mod h1:i06prIuMbXzDqacNJfV5OdTW448YApPu5ww/cMBSeb0=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.6/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/appengine v1.6.7/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190307195333-5fe7a883aa19/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190418145605-e7d98fc518a7/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190425155659-357c62f0e4bb/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190502173448-54afdca5d873/go.mod h1:VzzqZJRnGkLBvHegQrXjBqPurQTc5/KpmUdxsrq26oE=\ngoogle.golang.org/genproto v0.0.0-20190801165951-fa694d86fc64/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20190911173649-1774047e7e51/go.mod h1:IbNlFCBrqXvoKpeg0TB2l7cyZUmoaFKYIwrEpbDKLA8=\ngoogle.golang.org/genproto v0.0.0-20191108220845-16a3f7862a1a/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191115194625-c23dd37a84c9/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191216164720-4f79533eabd1/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20191230161307-f3c370f40bfb/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200115191322-ca5a22157cba/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200122232147-0452cf42e150/go.mod h1:n3cpQtvxv34hfy77yVDNjmbRyujviMdxYliBSkLhpCc=\ngoogle.golang.org/genproto v0.0.0-20200204135345-fa8e72b47b90/go.mod h1:GmwEX6Z4W5gMy59cAlVYjN9JhxgbQH6Gn+gFDQe2lzA=\ngoogle.golang.org/genproto v0.0.0-20200212174721-66ed5ce911ce/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200224152610-e50cd9704f63/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200228133532-8c2c7df3a383/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200305110556-506484158171/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200312145019-da6875a35672/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200331122359-1ee6d9798940/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200430143042-b979b6f78d84/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200511104702-f5ebc3bea380/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200513103714-09dca8ec2884/go.mod h1:55QSHmfGQM9UVYDPBsyGGes0y52j32PQ3BqQfXhyH3c=\ngoogle.golang.org/genproto v0.0.0-20200515170657-fc4c6c6a6587/go.mod h1:YsZOwe1myG/8QRHRsmBRE1LrgQY60beZKjly0O1fX9U=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20200618031413-b414f8b61790/go.mod h1:jDfRM7FcilCzHH/e9qn6dsT145K34l5v+OpcnNgKAAA=\ngoogle.golang.org/genproto v0.0.0-20200729003335-053ba62fc06f/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200804131852-c06518451d9c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200825200019-8632dd797987/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20200904004341-0bd0a958aa1d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201109203340-2640f1f9cdfb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201201144952-b05cb90ed32e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201210142538-e3217bee35cc/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20201214200347-8c77b98c765d/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210222152913-aa3ee6e6a81c/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210303154014-9728d6b83eeb/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210310155132-4ce2db91004e/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210319143718-93e7006c17a6/go.mod h1:FWY/as6DDZQgahTzZj3fqbO1CbirC29ZNUFHwi0/+no=\ngoogle.golang.org/genproto v0.0.0-20210402141018-6c239bbf2bb1/go.mod h1:9lPAdzaEmUacj36I+k7YKbEc5CXzPIeORRgDAUOu28A=\ngoogle.golang.org/genproto v0.0.0-20210602131652-f16073e35f0c/go.mod h1:UODoCrxHCcBojKKwX1terBiRUaqAsFqJiF615XL43r0=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.20.1/go.mod h1:10oTOabMzJvdu6/UiuZezV6QK5dSlG84ov/aaiqXj38=\ngoogle.golang.org/grpc v1.21.1/go.mod h1:oYelfM1adQP15Ek0mdvEgi9Df8B9CZIaU1084ijfRaM=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.26.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.27.1/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.28.0/go.mod h1:rpkK4SK4GF4Ach/+MFLZUBavHOvF2JJB5uozKKal+60=\ngoogle.golang.org/grpc v1.29.1/go.mod h1:itym6AZVZYACWQqET3MqgPpjcuV5QH3BxFS3IjizoKk=\ngoogle.golang.org/grpc v1.30.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.0/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.31.1/go.mod h1:N36X2cJ7JwdamYAgDz+s+rVMFjt3numwzf/HckM8pak=\ngoogle.golang.org/grpc v1.33.1/go.mod h1:fr5YgcSWrqhRRxogOsw7RzIpsmvOZ6IcH4kBYTpR3n0=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.34.0/go.mod h1:WotjhfgOW/POjDeRt8vscBtXq+2VjORFy659qA51WJ8=\ngoogle.golang.org/grpc v1.35.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.0/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=\ngoogle.golang.org/grpc v1.38.0/go.mod h1:NREThFqKR1f3iQ6oBuvc5LadQuXVGo9rkm5ZGrQdJfM=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.24.0/go.mod h1:r/3tXBNzIEhYS9I1OUVjXDlt8tc493IdKGjtUeSXeh4=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=\ngoogle.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f h1:BLraFXnmrev5lT+xlilqcH8XK9/i0At2xKjWk4p6zsU=\ngopkg.in/check.v1 v1.0.0-20200227125254-8fa46927fb4f/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=\ngopkg.in/ini.v1 v1.62.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.3/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190106161140-3f1c8253044a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190418001031-e561f6794a2a/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=\nhonnef.co/go/tools v0.0.1-2020.1.3/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nhonnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=\nrsc.io/binaryregexp v0.2.0/go.mod h1:qTv7/COck+e2FymRvadv62gMdZztPaShugOCi3I+8D8=\nrsc.io/quote/v3 v3.1.0/go.mod h1:yEA65RcK8LyAZtP9Kv3t0HmxON59tX3rD+tICJqUlj0=\nrsc.io/sampler v1.3.0/go.mod h1:T1hPZKmBbMNahiBKFy5HrXp6adAjACjK9JXDnKaTXpA=\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "key.go",
          "type": "blob",
          "size": 5.09,
          "content": "package fyne\n\n// KeyName represents the name of a key that has been pressed.\ntype KeyName string\n\nconst (\n\t// KeyEscape is the \"esc\" key\n\tKeyEscape KeyName = \"Escape\"\n\t// KeyReturn is the carriage return (main keyboard)\n\tKeyReturn KeyName = \"Return\"\n\t// KeyTab is the tab advance key\n\tKeyTab KeyName = \"Tab\"\n\t// KeyBackspace is the delete-before-cursor key\n\tKeyBackspace KeyName = \"BackSpace\"\n\t// KeyInsert is the insert mode key\n\tKeyInsert KeyName = \"Insert\"\n\t// KeyDelete is the delete-after-cursor key\n\tKeyDelete KeyName = \"Delete\"\n\t// KeyRight is the right arrow key\n\tKeyRight KeyName = \"Right\"\n\t// KeyLeft is the left arrow key\n\tKeyLeft KeyName = \"Left\"\n\t// KeyDown is the down arrow key\n\tKeyDown KeyName = \"Down\"\n\t// KeyUp is the up arrow key\n\tKeyUp KeyName = \"Up\"\n\t// KeyPageUp is the page up num-pad key\n\tKeyPageUp KeyName = \"Prior\"\n\t// KeyPageDown is the page down num-pad key\n\tKeyPageDown KeyName = \"Next\"\n\t// KeyHome is the line-home key\n\tKeyHome KeyName = \"Home\"\n\t// KeyEnd is the line-end key\n\tKeyEnd KeyName = \"End\"\n\n\t// KeyF1 is the first function key\n\tKeyF1 KeyName = \"F1\"\n\t// KeyF2 is the second function key\n\tKeyF2 KeyName = \"F2\"\n\t// KeyF3 is the third function key\n\tKeyF3 KeyName = \"F3\"\n\t// KeyF4 is the fourth function key\n\tKeyF4 KeyName = \"F4\"\n\t// KeyF5 is the fifth function key\n\tKeyF5 KeyName = \"F5\"\n\t// KeyF6 is the sixth function key\n\tKeyF6 KeyName = \"F6\"\n\t// KeyF7 is the seventh function key\n\tKeyF7 KeyName = \"F7\"\n\t// KeyF8 is the eighth function key\n\tKeyF8 KeyName = \"F8\"\n\t// KeyF9 is the ninth function key\n\tKeyF9 KeyName = \"F9\"\n\t// KeyF10 is the tenth function key\n\tKeyF10 KeyName = \"F10\"\n\t// KeyF11 is the eleventh function key\n\tKeyF11 KeyName = \"F11\"\n\t// KeyF12 is the twelfth function key\n\tKeyF12 KeyName = \"F12\"\n\t/*\n\t\tF13\n\t\t...\n\t\tF25\n\t*/\n\n\t// KeyEnter is the enter/ return key (keypad)\n\tKeyEnter KeyName = \"KP_Enter\"\n\n\t// Key0 represents the key 0\n\tKey0 KeyName = \"0\"\n\t// Key1 represents the key 1\n\tKey1 KeyName = \"1\"\n\t// Key2 represents the key 2\n\tKey2 KeyName = \"2\"\n\t// Key3 represents the key 3\n\tKey3 KeyName = \"3\"\n\t// Key4 represents the key 4\n\tKey4 KeyName = \"4\"\n\t// Key5 represents the key 5\n\tKey5 KeyName = \"5\"\n\t// Key6 represents the key 6\n\tKey6 KeyName = \"6\"\n\t// Key7 represents the key 7\n\tKey7 KeyName = \"7\"\n\t// Key8 represents the key 8\n\tKey8 KeyName = \"8\"\n\t// Key9 represents the key 9\n\tKey9 KeyName = \"9\"\n\t// KeyA represents the key A\n\tKeyA KeyName = \"A\"\n\t// KeyB represents the key B\n\tKeyB KeyName = \"B\"\n\t// KeyC represents the key C\n\tKeyC KeyName = \"C\"\n\t// KeyD represents the key D\n\tKeyD KeyName = \"D\"\n\t// KeyE represents the key E\n\tKeyE KeyName = \"E\"\n\t// KeyF represents the key F\n\tKeyF KeyName = \"F\"\n\t// KeyG represents the key G\n\tKeyG KeyName = \"G\"\n\t// KeyH represents the key H\n\tKeyH KeyName = \"H\"\n\t// KeyI represents the key I\n\tKeyI KeyName = \"I\"\n\t// KeyJ represents the key J\n\tKeyJ KeyName = \"J\"\n\t// KeyK represents the key K\n\tKeyK KeyName = \"K\"\n\t// KeyL represents the key L\n\tKeyL KeyName = \"L\"\n\t// KeyM represents the key M\n\tKeyM KeyName = \"M\"\n\t// KeyN represents the key N\n\tKeyN KeyName = \"N\"\n\t// KeyO represents the key O\n\tKeyO KeyName = \"O\"\n\t// KeyP represents the key P\n\tKeyP KeyName = \"P\"\n\t// KeyQ represents the key Q\n\tKeyQ KeyName = \"Q\"\n\t// KeyR represents the key R\n\tKeyR KeyName = \"R\"\n\t// KeyS represents the key S\n\tKeyS KeyName = \"S\"\n\t// KeyT represents the key T\n\tKeyT KeyName = \"T\"\n\t// KeyU represents the key U\n\tKeyU KeyName = \"U\"\n\t// KeyV represents the key V\n\tKeyV KeyName = \"V\"\n\t// KeyW represents the key W\n\tKeyW KeyName = \"W\"\n\t// KeyX represents the key X\n\tKeyX KeyName = \"X\"\n\t// KeyY represents the key Y\n\tKeyY KeyName = \"Y\"\n\t// KeyZ represents the key Z\n\tKeyZ KeyName = \"Z\"\n\n\t// KeySpace is the space key\n\tKeySpace KeyName = \"Space\"\n\t// KeyApostrophe is the key \"'\"\n\tKeyApostrophe KeyName = \"'\"\n\t// KeyComma is the key \",\"\n\tKeyComma KeyName = \",\"\n\t// KeyMinus is the key \"-\"\n\tKeyMinus KeyName = \"-\"\n\t// KeyPeriod is the key \".\" (full stop)\n\tKeyPeriod KeyName = \".\"\n\t// KeySlash is the key \"/\"\n\tKeySlash KeyName = \"/\"\n\t// KeyBackslash is the key \"\\\"\n\tKeyBackslash KeyName = \"\\\\\"\n\t// KeyLeftBracket is the key \"[\"\n\tKeyLeftBracket KeyName = \"[\"\n\t// KeyRightBracket is the key \"]\"\n\tKeyRightBracket KeyName = \"]\"\n\t// KeySemicolon is the key \";\"\n\tKeySemicolon KeyName = \";\"\n\t// KeyEqual is the key \"=\"\n\tKeyEqual KeyName = \"=\"\n\t// KeyAsterisk is the keypad key \"*\"\n\tKeyAsterisk KeyName = \"*\"\n\t// KeyPlus is the keypad key \"+\"\n\tKeyPlus KeyName = \"+\"\n\t// KeyBackTick is the key \"`\" on a US keyboard\n\tKeyBackTick KeyName = \"`\"\n\n\t// KeyUnknown is used for key events where the underlying hardware generated an\n\t// event that Fyne could not decode.\n\t//\n\t// Since: 2.1\n\tKeyUnknown KeyName = \"\"\n)\n\n// KeyModifier represents any modifier key (shift etc.) that is being pressed together with a key.\n//\n// Since: 2.2\ntype KeyModifier int\n\nconst (\n\t// KeyModifierShift represents a shift key being held\n\t//\n\t// Since: 2.2\n\tKeyModifierShift KeyModifier = 1 << iota\n\t// KeyModifierControl represents the ctrl key being held\n\t//\n\t// Since: 2.2\n\tKeyModifierControl\n\t// KeyModifierAlt represents either alt keys being held\n\t//\n\t// Since: 2.2\n\tKeyModifierAlt\n\t// KeyModifierSuper represents either super keys being held\n\t//\n\t// Since: 2.2\n\tKeyModifierSuper\n)\n"
        },
        {
          "name": "key_darwin.go",
          "type": "blob",
          "size": 0.17,
          "content": "package fyne\n\n// KeyModifierShortcutDefault is the default key modifier for shortcuts (Control or Command).\n//\n// Since: 2.2\nconst KeyModifierShortcutDefault = KeyModifierSuper\n"
        },
        {
          "name": "key_other.go",
          "type": "blob",
          "size": 0.19,
          "content": "//go:build !darwin\n\npackage fyne\n\n// KeyModifierShortcutDefault is the default key modifier for shortcuts (Control or Command).\n//\n// Since: 2.2\nconst KeyModifierShortcutDefault = KeyModifierControl\n"
        },
        {
          "name": "lang",
          "type": "tree",
          "content": null
        },
        {
          "name": "layout.go",
          "type": "blob",
          "size": 0.4,
          "content": "package fyne\n\n// Layout defines how [CanvasObject]s may be laid out in a specified Size.\ntype Layout interface {\n\t// Layout will manipulate the listed [CanvasObject]s Size and Position\n\t// to fit within the specified size.\n\tLayout([]CanvasObject, Size)\n\t// MinSize calculates the smallest size that will fit the listed\n\t// [CanvasObject]s using this Layout algorithm.\n\tMinSize(objects []CanvasObject) Size\n}\n"
        },
        {
          "name": "layout",
          "type": "tree",
          "content": null
        },
        {
          "name": "locale.go",
          "type": "blob",
          "size": 0.54,
          "content": "package fyne\n\nimport \"strings\"\n\n// Locale represents a user's locale (language, region and script)\n//\n// Since: 2.5\ntype Locale string\n\n// LanguageString returns a version of the local without the script portion.\n// For example \"en\" or \"fr-FR\".\nfunc (l Locale) LanguageString() string {\n\tcount := strings.Count(string(l), \"-\")\n\tif count < 2 {\n\t\treturn string(l)\n\t}\n\n\tpos := strings.LastIndex(string(l), \"-\")\n\treturn string(l)[:pos]\n}\n\n// String returns the complete locale as a standard string.\nfunc (l Locale) String() string {\n\treturn string(l)\n}\n"
        },
        {
          "name": "log.go",
          "type": "blob",
          "size": 0.42,
          "content": "package fyne\n\nimport (\n\t\"log\"\n\t\"runtime\"\n)\n\n// LogError reports an error to the command line with the specified err cause,\n// if not nil.\n// The function also reports basic information about the code location.\nfunc LogError(reason string, err error) {\n\tlog.Println(\"Fyne error: \", reason)\n\tif err != nil {\n\t\tlog.Println(\"  Cause:\", err)\n\t}\n\n\t_, file, line, ok := runtime.Caller(1)\n\tif ok {\n\t\tlog.Printf(\"  At: %s:%d\", file, line)\n\t}\n}\n"
        },
        {
          "name": "log_test.go",
          "type": "blob",
          "size": 1.05,
          "content": "package fyne\n\nimport (\n\t\"bufio\"\n\t\"bytes\"\n\t\"errors\"\n\t\"log\"\n\t\"os\"\n\t\"strings\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc bufferLog(t *testing.T, reason string, err error) []string {\n\tbuf := bytes.NewBuffer([]byte{})\n\twrite := bufio.NewWriter(buf)\n\n\tlog.SetOutput(write)\n\tLogError(reason, err)\n\tlog.SetOutput(os.Stdout)\n\n\terr = write.Flush()\n\tif err != nil {\n\t\tt.Error(err)\n\t}\n\toutput := strings.TrimSpace(buf.String())\n\treturn strings.Split(output, \"\\n\")\n}\n\nfunc TestLogError(t *testing.T) {\n\terr := errors.New(\"dummy error\")\n\toutput := bufferLog(t, \"Testing errors\", err)\n\n\tassert.Equal(t, 3, len(output))\n\tassert.True(t, strings.Contains(output[0], \"Testing errors\"))\n\tassert.True(t, strings.Contains(output[1], \"Cause\"))\n\tassert.True(t, strings.Contains(output[1], \"dummy\"))\n\tassert.True(t, strings.Contains(output[2], \"At\"))\n}\n\nfunc TestLogErrorNoErr(t *testing.T) {\n\toutput := bufferLog(t, \"Testing errors\", nil)\n\n\tassert.Equal(t, 2, len(output))\n\tassert.True(t, strings.Contains(output[0], \"Testing errors\"))\n\tassert.True(t, strings.Contains(output[1], \"At\"))\n}\n"
        },
        {
          "name": "math.go",
          "type": "blob",
          "size": 0.25,
          "content": "package fyne\n\n// Min returns the smaller of the passed values.\nfunc Min(x, y float32) float32 {\n\tif x < y {\n\t\treturn x\n\t}\n\treturn y\n}\n\n// Max returns the larger of the passed values.\nfunc Max(x, y float32) float32 {\n\tif x > y {\n\t\treturn x\n\t}\n\treturn y\n}\n"
        },
        {
          "name": "math_test.go",
          "type": "blob",
          "size": 0.29,
          "content": "package fyne\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestMin(t *testing.T) {\n\tassert.Equal(t, float32(1), Min(1, 3))\n\tassert.Equal(t, float32(-3), Min(1, -3))\n}\n\nfunc TestMax(t *testing.T) {\n\tassert.Equal(t, float32(3), Max(1, 3))\n\tassert.Equal(t, float32(1), Max(1, -3))\n}\n"
        },
        {
          "name": "menu.go",
          "type": "blob",
          "size": 2.28,
          "content": "package fyne\n\ntype systemTrayDriver interface {\n\tDriver\n\tSetSystemTrayMenu(*Menu)\n\tSystemTrayMenu() *Menu\n}\n\n// Menu stores the information required for a standard menu.\n// A menu can pop down from a [MainMenu] or could be a pop out menu.\ntype Menu struct {\n\tLabel string\n\tItems []*MenuItem\n}\n\n// NewMenu creates a new menu given the specified label (to show in a [MainMenu]) and list of items to display.\nfunc NewMenu(label string, items ...*MenuItem) *Menu {\n\treturn &Menu{Label: label, Items: items}\n}\n\n// Refresh will instruct this menu to update its display.\n//\n// Since: 2.2\nfunc (m *Menu) Refresh() {\n\tfor _, w := range CurrentApp().Driver().AllWindows() {\n\t\tmain := w.MainMenu()\n\t\tif main != nil {\n\t\t\tfor _, menu := range main.Items {\n\t\t\t\tif menu == m {\n\t\t\t\t\tw.SetMainMenu(main)\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif d, ok := CurrentApp().Driver().(systemTrayDriver); ok {\n\t\tif m == d.SystemTrayMenu() {\n\t\t\td.SetSystemTrayMenu(m)\n\t\t}\n\t}\n}\n\n// MenuItem is a single item within any menu, it contains a display Label and Action function that is called when tapped.\ntype MenuItem struct {\n\tChildMenu *Menu\n\t// Since: 2.1\n\tIsQuit      bool\n\tIsSeparator bool\n\tLabel       string\n\tAction      func() `json:\"-\"`\n\t// Since: 2.1\n\tDisabled bool\n\t// Since: 2.1\n\tChecked bool\n\t// Since: 2.2\n\tIcon Resource\n\t// Since: 2.2\n\tShortcut Shortcut\n}\n\n// NewMenuItem creates a new menu item from the passed label and action parameters.\nfunc NewMenuItem(label string, action func()) *MenuItem {\n\treturn &MenuItem{Label: label, Action: action}\n}\n\n// NewMenuItemSeparator creates a menu item that is to be used as a separator.\nfunc NewMenuItemSeparator() *MenuItem {\n\treturn &MenuItem{IsSeparator: true, Action: func() {}}\n}\n\n// MainMenu defines the data required to show a menu bar (desktop) or other appropriate top level menu.\ntype MainMenu struct {\n\tItems []*Menu\n}\n\n// NewMainMenu creates a top level menu structure used by fyne.Window for displaying a menubar\n// (or appropriate equivalent).\nfunc NewMainMenu(items ...*Menu) *MainMenu {\n\treturn &MainMenu{Items: items}\n}\n\n// Refresh will instruct any rendered menus using this struct to update their display.\n//\n// Since: 2.2\nfunc (m *MainMenu) Refresh() {\n\tfor _, w := range CurrentApp().Driver().AllWindows() {\n\t\tmenu := w.MainMenu()\n\t\tif menu != nil && menu == m {\n\t\t\tw.SetMainMenu(m)\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "menu_test.go",
          "type": "blob",
          "size": 1.71,
          "content": "package fyne\n\nimport (\n\t\"reflect\"\n\t\"testing\"\n)\n\nfunc testFunc1() {}\nfunc testFunc2() {}\nfunc testFunc3() {}\nfunc testFunc4() {}\n\nvar menuItemsTest = []struct {\n\tLabel  string\n\tAction func()\n\tItem   *MenuItem\n}{\n\t{\"item1\", testFunc1, &MenuItem{Label: \"item1\", Action: testFunc1}},\n\t{\"item2\", testFunc2, &MenuItem{Label: \"item2\", Action: testFunc2}},\n\t{\"item3\", testFunc3, &MenuItem{Label: \"item3\", Action: testFunc3}},\n\t{\"item4\", testFunc4, &MenuItem{Label: \"item4\", Action: testFunc4}},\n}\n\nvar menuTest = []struct {\n\tLabel string\n}{\n\t{\"menu1\"},\n\t{\"menu2\"},\n}\n\nfunc TestNewMainMenu(t *testing.T) {\n\tvar items []*MenuItem\n\tvar menus []*Menu\n\n\tfor _, tt := range menuItemsTest {\n\t\tt.Run(tt.Label, func(t *testing.T) {\n\t\t\titem := NewMenuItem(tt.Label, tt.Action)\n\t\t\t// Compare sprinted address\n\t\t\tif reflect.ValueOf(item.Action) != reflect.ValueOf(tt.Action) {\n\t\t\t\tt.Errorf(\"Expected %v but got %v\", reflect.ValueOf(tt.Action), reflect.ValueOf(item.Action))\n\t\t\t}\n\t\t\tif item.Label != tt.Label {\n\t\t\t\tt.Errorf(\"Expected %v but got %v\", tt.Label, item.Label)\n\t\t\t}\n\t\t\titems = append(items, item)\n\t\t})\n\t}\n\n\tif len(items) < 4 {\n\t\tt.Errorf(\"Expected %d menu items but got %d\", len(menuItemsTest), len(items))\n\t}\n\n\tfor _, tt := range menuTest {\n\t\tt.Run(tt.Label, func(t *testing.T) {\n\t\t\tmenu := NewMenu(tt.Label, items...)\n\n\t\t\tif menu.Label != tt.Label {\n\t\t\t\tt.Errorf(\"Expected menu label %s but got %s\", tt.Label, menu.Label)\n\t\t\t}\n\n\t\t\tif !reflect.DeepEqual(menu.Items, items) {\n\t\t\t\tt.Errorf(\"Expected items to resemble what was inputted, but got %v\", menu.Items)\n\t\t\t}\n\n\t\t\tmenus = append(menus, menu)\n\t\t})\n\t}\n\n\tmm := NewMainMenu(menus...)\n\n\tif !reflect.DeepEqual(mm.Items, menus) {\n\t\tt.Errorf(\"Expected main menu to contain all submenus but got %v\", mm.Items)\n\t}\n\n}\n"
        },
        {
          "name": "notification.go",
          "type": "blob",
          "size": 0.35,
          "content": "package fyne\n\n// Notification represents a user notification that can be sent to the operating system.\ntype Notification struct {\n\tTitle, Content string\n}\n\n// NewNotification creates a notification that can be passed to [App.SendNotification].\nfunc NewNotification(title, content string) *Notification {\n\treturn &Notification{Title: title, Content: content}\n}\n"
        },
        {
          "name": "overlay_stack.go",
          "type": "blob",
          "size": 0.49,
          "content": "package fyne\n\n// OverlayStack is a stack of [CanvasObject]s intended to be used as overlays of a [Canvas].\ntype OverlayStack interface {\n\t// Add adds an overlay on the top of the overlay stack.\n\tAdd(overlay CanvasObject)\n\t// List returns the overlays currently on the overlay stack.\n\tList() []CanvasObject\n\t// Remove removes the given object and all objects above it from the overlay stack.\n\tRemove(overlay CanvasObject)\n\t// Top returns the top-most object of the overlay stack.\n\tTop() CanvasObject\n}\n"
        },
        {
          "name": "preferences.go",
          "type": "blob",
          "size": 3.27,
          "content": "package fyne\n\n// Preferences describes the ways that an app can save and load user preferences\ntype Preferences interface {\n\t// Bool looks up a bool value for the key\n\tBool(key string) bool\n\t// BoolWithFallback looks up a bool value and returns the given fallback if not found\n\tBoolWithFallback(key string, fallback bool) bool\n\t// SetBool saves a bool value for the given key\n\tSetBool(key string, value bool)\n\n\t// BoolList looks up a list of bool values for the key\n\t//\n\t// Since: 2.4\n\tBoolList(key string) []bool\n\t// BoolListWithFallback looks up a list of bool values and returns the given fallback if not found\n\t//\n\t// Since: 2.4\n\tBoolListWithFallback(key string, fallback []bool) []bool\n\t// SetBoolList saves a list of bool values for the given key\n\t//\n\t// Since: 2.4\n\tSetBoolList(key string, value []bool)\n\n\t// Float looks up a float64 value for the key\n\tFloat(key string) float64\n\t// FloatWithFallback looks up a float64 value and returns the given fallback if not found\n\tFloatWithFallback(key string, fallback float64) float64\n\t// SetFloat saves a float64 value for the given key\n\tSetFloat(key string, value float64)\n\n\t// FloatList looks up a list of float64 values for the key\n\t//\n\t// Since: 2.4\n\tFloatList(key string) []float64\n\t// FloatListWithFallback looks up a list of float64 values and returns the given fallback if not found\n\t//\n\t// Since: 2.4\n\tFloatListWithFallback(key string, fallback []float64) []float64\n\t// SetFloatList saves a list of float64 values for the given key\n\t//\n\t// Since: 2.4\n\tSetFloatList(key string, value []float64)\n\n\t// Int looks up an integer value for the key\n\tInt(key string) int\n\t// IntWithFallback looks up an integer value and returns the given fallback if not found\n\tIntWithFallback(key string, fallback int) int\n\t// SetInt saves an integer value for the given key\n\tSetInt(key string, value int)\n\n\t// IntList looks up a list of int values for the key\n\t//\n\t// Since: 2.4\n\tIntList(key string) []int\n\t// IntListWithFallback looks up a list of int values and returns the given fallback if not found\n\t//\n\t// Since: 2.4\n\tIntListWithFallback(key string, fallback []int) []int\n\t// SetIntList saves a list of string values for the given key\n\t//\n\t// Since: 2.4\n\tSetIntList(key string, value []int)\n\n\t// String looks up a string value for the key\n\tString(key string) string\n\t// StringWithFallback looks up a string value and returns the given fallback if not found\n\tStringWithFallback(key, fallback string) string\n\t// SetString saves a string value for the given key\n\tSetString(key string, value string)\n\n\t// StringList looks up a list of string values for the key\n\t//\n\t// Since: 2.4\n\tStringList(key string) []string\n\t// StringListWithFallback looks up a list of string values and returns the given fallback if not found\n\t//\n\t// Since: 2.4\n\tStringListWithFallback(key string, fallback []string) []string\n\t// SetStringList saves a list of string values for the given key\n\t//\n\t// Since: 2.4\n\tSetStringList(key string, value []string)\n\n\t// RemoveValue removes a value for the given key (not currently supported on iOS)\n\tRemoveValue(key string)\n\n\t// AddChangeListener allows code to be notified when some preferences change. This will fire on any update.\n\tAddChangeListener(func())\n\n\t// ChangeListeners returns a list of the known change listeners for this preference set.\n\t//\n\t// Since: 2.3\n\tChangeListeners() []func()\n}\n"
        },
        {
          "name": "resource.go",
          "type": "blob",
          "size": 2.37,
          "content": "package fyne\n\nimport (\n\t\"io\"\n\t\"net/http\"\n\t\"os\"\n\t\"path/filepath\"\n)\n\n// Resource represents a single binary resource, such as an image or font.\n// A resource has an identifying name and byte array content.\n// The serialised path of a resource can be obtained which may result in a\n// blocking filesystem write operation.\ntype Resource interface {\n\tName() string\n\tContent() []byte\n}\n\n// ThemedResource is a version of a resource that can be updated to match a certain theme color.\n// The [ThemeColorName] will be used to look up the color for the current theme and colorize the resource.\n//\n// Since: 2.5\ntype ThemedResource interface {\n\tResource\n\tThemeColorName() ThemeColorName\n}\n\n// StaticResource is a bundled resource compiled into the application.\n// These resources are normally generated by the fyne_bundle command included in\n// the Fyne toolkit.\ntype StaticResource struct {\n\tStaticName    string\n\tStaticContent []byte\n}\n\n// Name returns the unique name of this resource, usually matching the file it\n// was generated from.\nfunc (r *StaticResource) Name() string {\n\treturn r.StaticName\n}\n\n// Content returns the bytes of the bundled resource, no compression is applied\n// but any compression on the resource is retained.\nfunc (r *StaticResource) Content() []byte {\n\treturn r.StaticContent\n}\n\n// NewStaticResource returns a new static resource object with the specified\n// name and content. Creating a new static resource in memory results in\n// sharable binary data that may be serialised to the system cache location.\nfunc NewStaticResource(name string, content []byte) *StaticResource {\n\treturn &StaticResource{\n\t\tStaticName:    name,\n\t\tStaticContent: content,\n\t}\n}\n\n// LoadResourceFromPath creates a new [StaticResource] in memory using the contents of the specified file.\nfunc LoadResourceFromPath(path string) (Resource, error) {\n\tbytes, err := os.ReadFile(filepath.Clean(path))\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tname := filepath.Base(path)\n\treturn NewStaticResource(name, bytes), nil\n}\n\n// LoadResourceFromURLString creates a new [StaticResource] in memory using the body of the specified URL.\nfunc LoadResourceFromURLString(urlStr string) (Resource, error) {\n\tres, err := http.Get(urlStr)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tdefer res.Body.Close()\n\n\tbytes, err := io.ReadAll(res.Body)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\n\tname := filepath.Base(urlStr)\n\treturn NewStaticResource(name, bytes), nil\n}\n"
        },
        {
          "name": "resource_test.go",
          "type": "blob",
          "size": 0.27,
          "content": "package fyne\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc TestNewResource(t *testing.T) {\n\tname := \"test\"\n\tcontent := []byte{1, 2, 3, 4}\n\n\tres := NewStaticResource(name, content)\n\tassert.Equal(t, name, res.Name())\n\tassert.Equal(t, content, res.Content())\n}\n"
        },
        {
          "name": "serialise.go",
          "type": "blob",
          "size": 0.55,
          "content": "package fyne\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n)\n\n// GoString converts a Resource object to Go code.\n// This is useful if serialising to a Go file for compilation into a binary.\nfunc (r *StaticResource) GoString() string {\n\tbuffer := strings.Builder{}\n\n\tbuffer.WriteString(\"&fyne.StaticResource{\\n\\tStaticName: \\\"\")\n\tbuffer.WriteString(r.StaticName)\n\tbuffer.WriteString(\"\\\",\\n\\tStaticContent: []byte{\\n\\t\\t\")\n\tfor i, v := range r.StaticContent {\n\t\tif i > 0 {\n\t\t\tbuffer.WriteString(\", \")\n\t\t}\n\n\t\tfmt.Fprint(&buffer, v)\n\t}\n\tbuffer.WriteString(\"}}\")\n\n\treturn buffer.String()\n}\n"
        },
        {
          "name": "serialise_test.go",
          "type": "blob",
          "size": 1.67,
          "content": "package fyne\n\nimport (\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nconst imgName = \"dot.png\"\n\nvar imgBytes = []byte{137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 0, 144, 119, 83, 222, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 11, 19, 0, 0, 11, 19, 1, 0, 154, 156, 24, 0, 0, 0, 7, 116, 73, 77, 69, 7, 226, 6, 5, 15, 49, 19, 102, 121, 20, 234, 0, 0, 0, 29, 105, 84, 88, 116, 67, 111, 109, 109, 101, 110, 116, 0, 0, 0, 0, 0, 67, 114, 101, 97, 116, 101, 100, 32, 119, 105, 116, 104, 32, 71, 73, 77, 80, 100, 46, 101, 7, 0, 0, 0, 12, 73, 68, 65, 84, 8, 215, 99, 248, 207, 192, 0, 0, 3, 1, 1, 0, 24, 221, 141, 176, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130}\n\nconst imgGo = `&fyne.StaticResource{\n\tStaticName: \"dot.png\",\n\tStaticContent: []byte{\n\t\t137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 1, 0, 0, 0, 1, 8, 2, 0, 0, 0, 144, 119, 83, 222, 0, 0, 0, 9, 112, 72, 89, 115, 0, 0, 11, 19, 0, 0, 11, 19, 1, 0, 154, 156, 24, 0, 0, 0, 7, 116, 73, 77, 69, 7, 226, 6, 5, 15, 49, 19, 102, 121, 20, 234, 0, 0, 0, 29, 105, 84, 88, 116, 67, 111, 109, 109, 101, 110, 116, 0, 0, 0, 0, 0, 67, 114, 101, 97, 116, 101, 100, 32, 119, 105, 116, 104, 32, 71, 73, 77, 80, 100, 46, 101, 7, 0, 0, 0, 12, 73, 68, 65, 84, 8, 215, 99, 248, 207, 192, 0, 0, 3, 1, 1, 0, 24, 221, 141, 176, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130}}`\n\nfunc TestToGo(t *testing.T) {\n\tres := NewStaticResource(imgName, imgBytes)\n\n\tassert.Equal(t, imgGo, res.GoString())\n}\n\nvar result string\n\nfunc BenchmarkToGo(b *testing.B) {\n\tvar temp string\n\tb.ReportAllocs()\n\tfor i := 0; i < b.N; i++ {\n\t\tres := NewStaticResource(imgName, imgBytes)\n\t\ttemp = res.GoString()\n\t}\n\n\tresult = temp\n}\n"
        },
        {
          "name": "settings.go",
          "type": "blob",
          "size": 1.05,
          "content": "package fyne\n\n// BuildType defines different modes that an application can be built using.\ntype BuildType int\n\nconst (\n\t// BuildStandard is the normal build mode - it is not debug, test or release mode.\n\tBuildStandard BuildType = iota\n\t// BuildDebug is used when a developer would like more information and visual output for app debugging.\n\tBuildDebug\n\t// BuildRelease is a final production build, it is like [BuildStandard] but will use distribution certificates.\n\t// A release build is typically going to connect to live services and is not usually used during development.\n\tBuildRelease\n)\n\n// Settings describes the application configuration available.\ntype Settings interface {\n\tTheme() Theme\n\tSetTheme(Theme)\n\t// ThemeVariant defines which preferred version of a theme should be used (i.e. light or dark)\n\t//\n\t// Since: 2.0\n\tThemeVariant() ThemeVariant\n\tScale() float32\n\t// PrimaryColor indicates a user preference for a named primary color\n\t//\n\t// Since: 1.4\n\tPrimaryColor() string\n\n\tAddChangeListener(chan Settings)\n\tBuildType() BuildType\n\n\tShowAnimations() bool\n}\n"
        },
        {
          "name": "shortcut.go",
          "type": "blob",
          "size": 4.41,
          "content": "package fyne\n\nimport (\n\t\"sync\"\n)\n\n// ShortcutHandler is a default implementation of the shortcut handler\n// for [CanvasObject].\ntype ShortcutHandler struct {\n\tentry sync.Map // map[string]func(Shortcut)\n}\n\n// TypedShortcut handle the registered shortcut\nfunc (sh *ShortcutHandler) TypedShortcut(shortcut Shortcut) {\n\tval, ok := sh.entry.Load(shortcut.ShortcutName())\n\tif !ok {\n\t\treturn\n\t}\n\n\tf := val.(func(Shortcut))\n\tf(shortcut)\n}\n\n// AddShortcut register a handler to be executed when the shortcut action is triggered\nfunc (sh *ShortcutHandler) AddShortcut(shortcut Shortcut, handler func(shortcut Shortcut)) {\n\tsh.entry.Store(shortcut.ShortcutName(), handler)\n}\n\n// RemoveShortcut removes a registered shortcut\nfunc (sh *ShortcutHandler) RemoveShortcut(shortcut Shortcut) {\n\tsh.entry.Delete(shortcut.ShortcutName())\n}\n\n// Shortcut is the interface used to describe a shortcut action\ntype Shortcut interface {\n\tShortcutName() string\n}\n\n// KeyboardShortcut describes a shortcut meant to be triggered by a keyboard action.\ntype KeyboardShortcut interface {\n\tShortcut\n\tKey() KeyName\n\tMod() KeyModifier\n}\n\n// ShortcutPaste describes a shortcut paste action.\ntype ShortcutPaste struct {\n\tClipboard Clipboard\n}\n\nvar _ KeyboardShortcut = (*ShortcutPaste)(nil)\n\n// Key returns the [KeyName] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutPaste) Key() KeyName {\n\treturn KeyV\n}\n\n// Mod returns the [KeyModifier] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutPaste) Mod() KeyModifier {\n\treturn KeyModifierShortcutDefault\n}\n\n// ShortcutName returns the shortcut name\nfunc (se *ShortcutPaste) ShortcutName() string {\n\treturn \"Paste\"\n}\n\n// ShortcutCopy describes a shortcut copy action.\ntype ShortcutCopy struct {\n\tClipboard Clipboard\n}\n\nvar _ KeyboardShortcut = (*ShortcutCopy)(nil)\n\n// Key returns the [KeyName] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutCopy) Key() KeyName {\n\treturn KeyC\n}\n\n// Mod returns the [KeyModifier] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutCopy) Mod() KeyModifier {\n\treturn KeyModifierShortcutDefault\n}\n\n// ShortcutName returns the shortcut name\nfunc (se *ShortcutCopy) ShortcutName() string {\n\treturn \"Copy\"\n}\n\n// ShortcutCut describes a shortcut cut action.\ntype ShortcutCut struct {\n\tClipboard Clipboard\n}\n\nvar _ KeyboardShortcut = (*ShortcutCut)(nil)\n\n// Key returns the [KeyName] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutCut) Key() KeyName {\n\treturn KeyX\n}\n\n// Mod returns the [KeyModifier] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutCut) Mod() KeyModifier {\n\treturn KeyModifierShortcutDefault\n}\n\n// ShortcutName returns the shortcut name\nfunc (se *ShortcutCut) ShortcutName() string {\n\treturn \"Cut\"\n}\n\n// ShortcutSelectAll describes a shortcut selectAll action.\ntype ShortcutSelectAll struct{}\n\nvar _ KeyboardShortcut = (*ShortcutSelectAll)(nil)\n\n// Key returns the [KeyName] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutSelectAll) Key() KeyName {\n\treturn KeyA\n}\n\n// Mod returns the [KeyModifier] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutSelectAll) Mod() KeyModifier {\n\treturn KeyModifierShortcutDefault\n}\n\n// ShortcutName returns the shortcut name\nfunc (se *ShortcutSelectAll) ShortcutName() string {\n\treturn \"SelectAll\"\n}\n\n// ShortcutUndo describes a shortcut undo action.\n//\n// Since: 2.5\ntype ShortcutUndo struct{}\n\nvar _ KeyboardShortcut = (*ShortcutUndo)(nil)\n\n// Key returns the [KeyName] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutUndo) Key() KeyName {\n\treturn KeyZ\n}\n\n// Mod returns the [KeyModifier] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutUndo) Mod() KeyModifier {\n\treturn KeyModifierShortcutDefault\n}\n\n// ShortcutName returns the shortcut name\nfunc (se *ShortcutUndo) ShortcutName() string {\n\treturn \"Undo\"\n}\n\n// ShortcutRedo describes a shortcut redo action.\n//\n// Since: 2.5\ntype ShortcutRedo struct{}\n\nvar _ KeyboardShortcut = (*ShortcutRedo)(nil)\n\n// Key returns the [KeyName] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutRedo) Key() KeyName {\n\treturn KeyY\n}\n\n// Mod returns the [KeyModifier] for this shortcut.\n//\n// Implements: [KeyboardShortcut]\nfunc (se *ShortcutRedo) Mod() KeyModifier {\n\treturn KeyModifierShortcutDefault\n}\n\n// ShortcutName returns the shortcut name\nfunc (se *ShortcutRedo) ShortcutName() string {\n\treturn \"Redo\"\n}\n"
        },
        {
          "name": "shortcut_test.go",
          "type": "blob",
          "size": 1.49,
          "content": "package fyne\n\nimport (\n\t\"sync\"\n\t\"testing\"\n\n\t\"github.com/stretchr/testify/assert\"\n)\n\nfunc syncMapLen(m *sync.Map) (n int) {\n\tm.Range(func(_, _ any) bool {\n\t\tn++\n\t\treturn true\n\t})\n\treturn\n}\n\nfunc TestShortcutHandler_AddShortcut(t *testing.T) {\n\thandle := &ShortcutHandler{}\n\n\thandle.AddShortcut(&ShortcutCopy{}, func(shortcut Shortcut) {})\n\thandle.AddShortcut(&ShortcutPaste{}, func(shortcut Shortcut) {})\n\n\tassert.Equal(t, 2, syncMapLen(&handle.entry))\n}\n\nfunc TestShortcutHandler_RemoveShortcut(t *testing.T) {\n\thandler := &ShortcutHandler{}\n\thandler.AddShortcut(&ShortcutCopy{}, func(shortcut Shortcut) {})\n\thandler.AddShortcut(&ShortcutPaste{}, func(shortcut Shortcut) {})\n\n\tassert.Equal(t, 2, syncMapLen(&handler.entry))\n\n\thandler.RemoveShortcut(&ShortcutCopy{})\n\n\tassert.Equal(t, 1, syncMapLen(&handler.entry))\n\n\thandler.RemoveShortcut(&ShortcutPaste{})\n\n\tassert.Equal(t, 0, syncMapLen(&handler.entry))\n}\n\nfunc TestShortcutHandler_HandleShortcut(t *testing.T) {\n\thandle := &ShortcutHandler{}\n\tcutCalled, copyCalled, pasteCalled := false, false, false\n\n\thandle.AddShortcut(&ShortcutCut{}, func(shortcut Shortcut) {\n\t\tcutCalled = true\n\t})\n\thandle.AddShortcut(&ShortcutCopy{}, func(shortcut Shortcut) {\n\t\tcopyCalled = true\n\t})\n\thandle.AddShortcut(&ShortcutPaste{}, func(shortcut Shortcut) {\n\t\tpasteCalled = true\n\t})\n\n\thandle.TypedShortcut(&ShortcutCut{})\n\tassert.True(t, cutCalled)\n\thandle.TypedShortcut(&ShortcutCopy{})\n\tassert.True(t, copyCalled)\n\thandle.TypedShortcut(&ShortcutPaste{})\n\tassert.True(t, pasteCalled)\n}\n"
        },
        {
          "name": "staticcheck.conf",
          "type": "blob",
          "size": 0.07,
          "content": "checks = [\"inherit\", \"ST1003\", \"ST1016\", \"ST1020\", \"ST1021\", \"ST1022\"]\n"
        },
        {
          "name": "storage.go",
          "type": "blob",
          "size": 0.37,
          "content": "package fyne\n\n// Storage is used to manage file storage inside an application sandbox.\n// The files managed by this interface are unique to the current application.\ntype Storage interface {\n\tRootURI() URI\n\n\tCreate(name string) (URIWriteCloser, error)\n\tOpen(name string) (URIReadCloser, error)\n\tSave(name string) (URIWriteCloser, error)\n\tRemove(name string) error\n\n\tList() []string\n}\n"
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "text.go",
          "type": "blob",
          "size": 2.8,
          "content": "package fyne\n\n// TextAlign represents the horizontal alignment of text within a widget or\n// canvas object.\ntype TextAlign int\n\nconst (\n\t// TextAlignLeading specifies a left alignment for left-to-right languages.\n\tTextAlignLeading TextAlign = iota\n\t// TextAlignCenter places the text centrally within the available space.\n\tTextAlignCenter\n\t// TextAlignTrailing will align the text right for a left-to-right language.\n\tTextAlignTrailing\n)\n\n// TextTruncation controls how a `Label` or `Entry` will truncate its text.\n// The default value is `TextTruncateOff` which will not truncate.\n//\n// Since: 2.4\ntype TextTruncation int\n\nconst (\n\t// TextTruncateOff means no truncation will be applied, it is the default.\n\t// This means that the minimum size of a text block will be the space required to display it fully.\n\tTextTruncateOff TextTruncation = iota\n\t// TextTruncateClip will truncate text when it reaches the end of the available space.\n\tTextTruncateClip\n\t// TextTruncateEllipsis is like regular truncation except that an ellipses (…) will be inserted\n\t// wherever text has been shortened to fit.\n\t//\n\t// Since: 2.4\n\tTextTruncateEllipsis\n)\n\n// TextWrap represents how text longer than the widget's width will be wrapped.\ntype TextWrap int\n\nconst (\n\t// TextWrapOff extends the widget's width to fit the text, no wrapping is applied.\n\tTextWrapOff TextWrap = iota\n\t// TextTruncate trims the text to the widget's width, no wrapping is applied.\n\t// If an entry is asked to truncate it will provide scrolling capabilities.\n\t//\n\t// Deprecated: Use [TextTruncateClip] value of the widget `Truncation` field instead\n\tTextTruncate\n\t// TextWrapBreak trims the line of characters to the widget's width adding the excess as new line.\n\t// An Entry with text wrapping will scroll vertically if there is not enough space for all the text.\n\tTextWrapBreak\n\t// TextWrapWord trims the line of words to the widget's width adding the excess as new line.\n\t// An Entry with text wrapping will scroll vertically if there is not enough space for all the text.\n\tTextWrapWord\n)\n\n// TextStyle represents the styles that can be applied to a text canvas object\n// or text based widget.\ntype TextStyle struct {\n\tBold      bool // Should text be bold\n\tItalic    bool // Should text be italic\n\tMonospace bool // Use the system monospace font instead of regular\n\t// Since: 2.2\n\tSymbol bool // Use the system symbol font.\n\t// Since: 2.1\n\tTabWidth int // Width of tabs in spaces\n\t// Since: 2.5\n\t// Currently only supported by [fyne.io/fyne/v2/widget.TextGrid].\n\tUnderline bool // Should text be underlined.\n}\n\n// MeasureText uses the current driver to calculate the size of text when rendered.\n// The font used will be read from the current app's theme.\nfunc MeasureText(text string, size float32, style TextStyle) Size {\n\ts, _ := CurrentApp().Driver().RenderedTextSize(text, size, style, nil)\n\treturn s\n}\n"
        },
        {
          "name": "theme.go",
          "type": "blob",
          "size": 1.48,
          "content": "package fyne\n\nimport \"image/color\"\n\n// ThemeVariant indicates a variation of a theme, such as light or dark.\n//\n// Since: 2.0\ntype ThemeVariant uint\n\n// ThemeColorName is used to look up a colour based on its name.\n//\n// Since: 2.0\ntype ThemeColorName string\n\n// ThemeIconName is used to look up an icon based on its name.\n//\n// Since: 2.0\ntype ThemeIconName string\n\n// ThemeSizeName is used to look up a size based on its name.\n//\n// Since: 2.0\ntype ThemeSizeName string\n\n// Theme defines the method to look up colors, sizes and fonts that make up a Fyne theme.\n//\n// Since: 2.0\ntype Theme interface {\n\tColor(ThemeColorName, ThemeVariant) color.Color\n\tFont(TextStyle) Resource\n\tIcon(ThemeIconName) Resource\n\tSize(ThemeSizeName) float32\n}\n\n// LegacyTheme defines the requirements of any Fyne theme.\n// This was previously called Theme and is kept for simpler transition of applications built before v2.0.0.\n//\n// Since: 2.0\ntype LegacyTheme interface {\n\tBackgroundColor() color.Color\n\tButtonColor() color.Color\n\tDisabledButtonColor() color.Color\n\tTextColor() color.Color\n\tDisabledTextColor() color.Color\n\tPlaceHolderColor() color.Color\n\tPrimaryColor() color.Color\n\tHoverColor() color.Color\n\tFocusColor() color.Color\n\tScrollBarColor() color.Color\n\tShadowColor() color.Color\n\n\tTextSize() int\n\tTextFont() Resource\n\tTextBoldFont() Resource\n\tTextItalicFont() Resource\n\tTextBoldItalicFont() Resource\n\tTextMonospaceFont() Resource\n\n\tPadding() int\n\tIconInlineSize() int\n\tScrollBarSize() int\n\tScrollBarSmallSize() int\n}\n"
        },
        {
          "name": "theme",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "uri.go",
          "type": "blob",
          "size": 2.98,
          "content": "package fyne\n\nimport (\n\t\"fmt\"\n\t\"io\"\n)\n\n// URIReadCloser represents a cross platform data stream from a file or provider of data.\n// It may refer to an item on a filesystem or data in another application that we have access to.\ntype URIReadCloser interface {\n\tio.ReadCloser\n\n\tURI() URI\n}\n\n// URIWriteCloser represents a cross platform data writer for a file resource.\n// This will normally refer to a local file resource.\ntype URIWriteCloser interface {\n\tio.WriteCloser\n\n\tURI() URI\n}\n\n// URI represents the identifier of a resource on a target system.  This\n// resource may be a file or another data source such as an app or file sharing\n// system. The URI represents an absolute location of a resource, it is up to any\n// parse or constructor implementations to ensure that relative resources are made absolute.\n//\n// In general, it is expected that URI implementations follow IETF RFC3986.\n// Implementations are highly recommended to utilize [net/url] to implement URI\n// parsing methods, especially [net/url/url.Scheme], [net/url/url.Authority],\n// [net/url/url.Path], [net/url/url.Query], and [net/url/url.Fragment].\ntype URI interface {\n\tfmt.Stringer\n\n\t// Extension should return the file extension of the resource\n\t// (including the dot) referenced by the URI. For example, the\n\t// Extension() of 'file://foo/bar.baz' is '.baz'. May return an\n\t// empty string if the referenced resource has none.\n\tExtension() string\n\n\t// Name should return the base name of the item referenced by the URI.\n\t// For example, the name of 'file://foo/bar.baz' is 'bar.baz'.\n\tName() string\n\n\t// MimeType should return the content type of the resource referenced\n\t// by the URI. The returned string should be in the format described\n\t// by Section 5 of RFC2045 (\"Content-Type Header Field\").\n\tMimeType() string\n\n\t// Scheme should return the URI scheme of the URI as defined by IETF\n\t// RFC3986. For example, the Scheme() of 'file://foo/bar.baz` is\n\t// 'file'.\n\t//\n\t// Scheme should always return the scheme in all lower-case characters.\n\tScheme() string\n\n\t// Authority should return the URI authority, as defined by IETF\n\t// RFC3986.\n\t//\n\t// NOTE: the RFC3986 can be obtained by combining the [net/url.URL.User]\n\t// and [net/url.URL.Host]. Consult IETF RFC3986, section\n\t// 3.2, pp. 17.\n\t//\n\t// Since: 2.0\n\tAuthority() string\n\n\t// Path should return the URI path, as defined by IETF RFC3986.\n\t//\n\t// Since: 2.0\n\tPath() string\n\n\t// Query should return the URI query, as defined by IETF RFC3986.\n\t//\n\t// Since: 2.0\n\tQuery() string\n\n\t// Fragment should return the URI fragment, as defined by IETF\n\t// RFC3986.\n\t//\n\t// Since: 2.0\n\tFragment() string\n}\n\n// ListableURI represents a [URI] that can have child items, most commonly a\n// directory on disk in the native filesystem.\n//\n// Since: 1.4\ntype ListableURI interface {\n\tURI\n\n\t// List returns a list of child URIs of this URI.\n\tList() ([]URI, error)\n}\n\n// URIWithIcon describes a [URI] that should be rendered with a certain icon in file browsers.\n//\n// Since: 2.5\ntype URIWithIcon interface {\n\tURI\n\n\tIcon() Resource\n}\n"
        },
        {
          "name": "validation.go",
          "type": "blob",
          "size": 0.53,
          "content": "package fyne\n\n// Validatable is an interface for specifying if a widget is validatable.\n//\n// Since: 1.4\ntype Validatable interface {\n\tValidate() error\n\n\t// SetOnValidationChanged is used to set the callback that will be triggered when the validation state changes.\n\t// The function might be overwritten by a parent that cares about child validation (e.g. widget.Form).\n\tSetOnValidationChanged(func(error))\n}\n\n// StringValidator is a function signature for validating string inputs.\n//\n// Since: 1.4\ntype StringValidator func(string) error\n"
        },
        {
          "name": "widget.go",
          "type": "blob",
          "size": 1.39,
          "content": "package fyne\n\n// Widget defines the standard behaviours of any widget. This extends\n// [CanvasObject]. A widget behaves in the same basic way but will encapsulate\n// many child objects to create the rendered widget.\ntype Widget interface {\n\tCanvasObject\n\n\t// CreateRenderer returns a new [WidgetRenderer] for this widget.\n\t// This should not be called by regular code, it is used internally to render a widget.\n\tCreateRenderer() WidgetRenderer\n}\n\n// WidgetRenderer defines the behaviour of a widget's implementation.\n// This is returned from a widget's declarative object through [Widget.CreateRenderer]\n// and should be exactly one instance per widget in memory.\ntype WidgetRenderer interface {\n\t// Destroy is a hook that is called when the renderer is being destroyed.\n\t// This happens at some time after the widget is no longer visible, and\n\t// once destroyed, a renderer will not be reused.\n\t// Renderers should dispose and clean up any related resources, if necessary.\n\tDestroy()\n\t// Layout is a hook that is called if the widget needs to be laid out.\n\t// This should never call [Refresh].\n\tLayout(Size)\n\t// MinSize returns the minimum size of the widget that is rendered by this renderer.\n\tMinSize() Size\n\t// Objects returns all objects that should be drawn.\n\tObjects() []CanvasObject\n\t// Refresh is a hook that is called if the widget has updated and needs to be redrawn.\n\t// This might trigger a [Layout].\n\tRefresh()\n}\n"
        },
        {
          "name": "widget",
          "type": "tree",
          "content": null
        },
        {
          "name": "window.go",
          "type": "blob",
          "size": 3.61,
          "content": "package fyne\n\n// Window describes a user interface window. Depending on the platform an app\n// may have many windows or just the one.\ntype Window interface {\n\t// Title returns the current window title.\n\t// This is typically displayed in the window decorations.\n\tTitle() string\n\t// SetTitle updates the current title of the window.\n\tSetTitle(string)\n\n\t// FullScreen returns whether or not this window is currently full screen.\n\tFullScreen() bool\n\t// SetFullScreen changes the requested fullScreen property\n\t// true for a fullScreen window and false to unset this.\n\tSetFullScreen(bool)\n\n\t// Resize this window to the requested content size.\n\t// The result may not be exactly as desired due to various desktop or\n\t// platform constraints.\n\tResize(Size)\n\n\t// RequestFocus attempts to raise and focus this window.\n\t// This should only be called when you are sure the user would want this window\n\t// to steal focus from any current focused window.\n\tRequestFocus()\n\n\t// FixedSize returns whether or not this window should disable resizing.\n\tFixedSize() bool\n\t// SetFixedSize sets a hint that states whether the window should be a fixed\n\t// size or allow resizing.\n\tSetFixedSize(bool)\n\n\t// CenterOnScreen places a window at the center of the monitor\n\t// the Window object is currently positioned on.\n\tCenterOnScreen()\n\n\t// Padded, normally true, states whether the window should have inner\n\t// padding so that components do not touch the window edge.\n\tPadded() bool\n\t// SetPadded allows applications to specify that a window should have\n\t// no inner padding. Useful for fullscreen or graphic based applications.\n\tSetPadded(bool)\n\n\t// Icon returns the window icon, this is used in various ways\n\t// depending on operating system.\n\t// Most commonly this is displayed on the window border or task switcher.\n\tIcon() Resource\n\n\t// SetIcon sets the icon resource used for this window.\n\t// If none is set should return the application icon.\n\tSetIcon(Resource)\n\n\t// SetMaster indicates that closing this window should exit the app\n\tSetMaster()\n\n\t// MainMenu gets the content of the window's top level menu.\n\tMainMenu() *MainMenu\n\n\t// SetMainMenu adds a top level menu to this window.\n\t// The way this is rendered will depend on the loaded driver.\n\tSetMainMenu(*MainMenu)\n\n\t// SetOnClosed sets a function that runs when the window is closed.\n\tSetOnClosed(func())\n\n\t// SetCloseIntercept sets a function that runs instead of closing if defined.\n\t// [Window.Close] should be called explicitly in the interceptor to close the window.\n\t//\n\t// Since: 1.4\n\tSetCloseIntercept(func())\n\n\t// SetOnDropped allows setting a window-wide callback to receive dropped items.\n\t// The callback function is called with the absolute position of the drop and a\n\t// slice of all of the dropped URIs.\n\t//\n\t// Since 2.4\n\tSetOnDropped(func(Position, []URI))\n\n\t// Show the window on screen.\n\tShow()\n\t// Hide the window from the user.\n\t// This will not destroy the window or cause the app to exit.\n\tHide()\n\t// Close the window.\n\t// If it is he \"master\" window the app will Quit.\n\t// If it is the only open window and no menu is set via [desktop.App]\n\t// SetSystemTrayMenu the app will also Quit.\n\tClose()\n\n\t// ShowAndRun is a shortcut to show the window and then run the application.\n\t// This should be called near the end of a main() function as it will block.\n\tShowAndRun()\n\n\t// Content returns the content of this window.\n\tContent() CanvasObject\n\t// SetContent sets the content of this window.\n\tSetContent(CanvasObject)\n\t// Canvas returns the canvas context to render in the window.\n\t// This can be useful to set a key handler for the window, for example.\n\tCanvas() Canvas\n\n\t// Clipboard returns the system clipboard\n\tClipboard() Clipboard\n}\n"
        }
      ]
    }
  ]
}