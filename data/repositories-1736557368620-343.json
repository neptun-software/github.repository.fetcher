{
  "metadata": {
    "timestamp": 1736557368620,
    "page": 343,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "square/retrofit",
      "stars": 43221,
      "defaultBranch": "trunk",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.27,
          "content": "root = true\n\n[*]\nindent_size = 2\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.{kt,kts}]\nij_kotlin_allow_trailing_comma = true\nij_kotlin_allow_trailing_comma_on_call_site = true\nij_kotlin_imports_layout = *\nktlint_code_style = intellij_idea\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.05,
          "content": "* text=auto eol=lf\n\n*.bat text eol=crlf\n*.jar binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.07,
          "content": "# Gradle\n.gradle\nbuild\n/reports\nlocal.properties\n\n# Idea\n.idea\n*.iml\n"
        },
        {
          "name": "BUG-BOUNTY.md",
          "type": "blob",
          "size": 0.35,
          "content": "Serious about security\n======================\n\nSquare recognizes the important contributions the security research community\ncan make. We therefore encourage reporting security issues with the code\ncontained in this repository.\n\nIf you believe you have discovered a security vulnerability, please follow the\nguidelines at https://bugcrowd.com/squareopensource\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 42.18,
          "content": "# Change Log\n\n## [Unreleased]\n\n**New**\n\n - First-party converters now support deferring serialization to happen when the request body is written (i.e., during HTTP execution) rather than when the HTTP request is created. In some cases this moves conversion from a calling thread to a background thread, such as in the case when using `Call.enqueue` directly.\n\n   The following converters support this feature through a new `createStreaming()` factory:\n   - Wire\n\n**Changed**\n\n - Nothing yet!\n\n**Fixed**\n\n - Nothing yet!\n\n\n## [2.11.0] - 2024-03-28\n\n**New**\n\n - The built-in `OptionalConverterFactory` is now public to allow installing it before other converters which consume all types (e.g., Moshi, Gson, Jackson, etc.).\n\n**Fixed**\n\n - Ensure that exceptions thrown from failure to parse method annotations can be observed by multiple threads/callers. Previously only the first caller would see the actual parsing exception and other callers would get a cryptic `ClassCastException`.\n\n\n## [2.10.0] - 2024-03-18\n\n**New**\n\n - Support using `Unit` as a response type. This can be used for non-body HTTP methods like `HEAD` or body-containing HTTP methods like `GET` where the body will be discarded without deserialization.\n - kotlinx.serialization converter!\n\n   This was imported from [github.com/JakeWharton/retrofit2-kotlinx-serialization-converter/](https://github.com/JakeWharton/retrofit2-kotlinx-serialization-converter/) and remains unchanged from its 1.0.0 release.\n\n   The Maven coordinates are `com.squareup.retrofit2:converter-kotlinx-serialization`.\n - JAXB 3 converter!\n\n   The Maven coordinates are `com.squareup.retrofit2:converter-jaxb3`.\n - `@Header`, `@Headers`, and `@HeaderMap` can now set non-ASCII values through the `allowUnsafeNonAsciiValues` annotation property. These are not technically compliant with the HTTP specification, but are often supported or required by services.\n - Publish a BOM of all modules. The Maven coordinates are `com.squareup.retrofit2:retrofit-bom`.\n - `Invocation` now exposes the service `Class<?>` and the instance on which the method was invoked. This disambiguates the source when service inheritence is used.\n - A response type keeper annotation processor is now available for generating shrinker rules for all referenced types in your service interface. In some cases, it's impossible for static shrinker rules to keep the entirety of what Retrofit needs at runtime. This annotation processor generates those additional rules. For more info see [its README](https://github.com/square/retrofit/tree/trunk/retrofit-response-type-keeper#readme).\n\n**Changed**\n- Add shrinker rules to retain the generic signatures of built-in types (`Call`, `Response`, etc.) which are used via reflection at runtime.\n- Remove backpressure support from RxJava 2 and 3 adapters. Since we only deliver a single value and the Reactive Streams specification states that callers must request a non-zero subscription value, we never need to honor backpressure.\n- Kotlin `Retrofit.create` function now has a non-null lower bound. Even if you specified a nullable type before this function would never return null.\n- Suspend functions now capture and defer all `Throwable` subtypes (not just `Exception` subtypes) to avoid Java's `UndeclaredThrowableException` when thrown synchronously.\n- Eagerly reject `suspend fun` functions that return `Call<Body>`. These are never correct, and should declare a return type of `Body` directly.\n- Support for Java 14-specific and Java 16-specific reflection needed to invoke default methods on interfaces have been moved to separate versions of a class through a multi-release jar. This should have no observable impact other than the jar now contains classes which target Java 14 and Java 16 bytecode that might trip up some static analysis tools which are not aware of multi-release jars.\n- Parameter names are now displayed in exception messages when available in the underlying Java bytecode.\n- Jackson converter now supports binary formats by using byte streams rather than character streams in its implementation. Use the `create(ObjectMapper, MediaType)` overload to supply the value of the `Content-Type` header for your format.\n\n**Fixed**\n- Do not include synthetic methods when doing eager validation.\n- Use per-method rather than per-class locking when parsing annotations. This eliminates contention when multiple calls are made in quick succession at the beginning of the process lifetime.\n\n\n## [2.9.0] - 2020-05-20\n\n * New: RxJava 3 adapter!\n\n   The Maven coordinates are `com.squareup.retrofit2:adapter-rxjava3`.\n\n   Unlike the RxJava 1 and RxJava 2 adapters, the RxJava 3 adapter's `create()` method will produce asynchronous HTTP requests by default. For synchronous requests use `createSynchronous()` and for synchronous on a scheduler use `createWithScheduler(..)`.\n\n\n## [2.8.2] - 2020-05-18\n\n * Fix: Detect running on the Android platform by using system property rather than the presence of classes.\n   This ensures that even when you're running on the JVM with Android classes present on the classpath you\n   get JVM semantics.\n * Fix: Update to OkHttp 3.14.9 which contains an associated Android platform detection fix.\n\n\n## [2.8.1] - 2020-03-25\n\n * Fix: Do not access `MethodHandles.Lookup` on Android API 24 and 25. The class is only available\n   on Android API 26 and higher.\n\n\n## [2.8.0] - 2020-03-23\n\n * New: Add `Call.timeout()` which returns the `okio.Timeout` of the full call.\n * Fix: Change `Call.awaitResponse()` to accept a nullable response type.\n * Fix: Support default methods on Java 14+. We had been working around a bug in earlier versions of\n   Java. That bug was fixed in Java 14, and the fix broke our workaround.\n\n\n## [2.7.2] - 2020-02-24\n\n * Fix: Update to OkHttp 3.14.7 for compatibility with Android R (API 30).\n\n\n## [2.7.1] - 2020-01-02\n\n * Fix: Support 'suspend' functions in services interfaces when using 'retrofit-mock' artifact.\n\n\n## [2.7.0] - 2019-12-09\n\n**This release changes the minimum requirements to Java 8+ or Android 5+.**\nSee [this blog post](https://cashapp.github.io/2019-02-05/okhttp-3-13-requires-android-5) for more information on the change.\n\n * New: Upgrade to OkHttp 3.14.4. Please see [its changelog for 3.x](https://square.github.io/okhttp/changelog_3x/).\n * Fix: Allow service interfaces to extend other interfaces.\n * Fix: Ensure a non-null body is returned by `Response.error`.\n\n\n## [2.6.4] - 2020-01-02\n\n * Fix: Support 'suspend' functions in services interfaces when using 'retrofit-mock' artifact.\n\n\n## [2.6.3] - 2019-12-09\n\n * Fix: Change mechanism for avoiding `UndeclaredThrowableException` in rare cases from using `yield`\n   an explicit dispatch which ensures that it will work even on dispatchers which do not support yielding.\n\n\n## [2.6.2] - 2019-09-23\n\n * Fix: Avoid `IOException`s being wrapped in `UndeclaredThrowableException` in rare cases when using\n   `Response<..>` as a return type for Kotlin 'suspend' functions.\n\n\n## [2.6.1] - 2019-07-31\n\n * Fix: Avoid `IOException`s being wrapped in `UndeclaredThrowableException` in rare cases.\n * Fix: Include no-content `ResponseBody` for responses created by `Response.error`.\n * Fix: Update embedded R8/ProGuard rules to not warn about nested classes used for Kotlin extensions.\n\n\n## [2.6.0] - 2019-06-05\n\n * New: Support `suspend` modifier on functions for Kotlin! This allows you to express the asynchrony of HTTP requests\n   in an idiomatic fashion for the language.\n\n   ```kotlin\n   @GET(\"users/{id}\")\n   suspend fun user(@Path(\"id\") id: Long): User\n   ```\n\n   Behind the scenes this behaves as if defined as `fun user(...): Call<User>` and then invoked with `Call.enqueue`.\n   You can also return `Response<User>` for access to the response metadata.\n\n   Currently this integration only supports non-null response body types. Follow\n   [issue 3075](https://github.com/square/retrofit/issues/3075) for nullable type support.\n\n * New: **`@Tag`** parameter annotation for setting tags on the underlying OkHttp `Request` object. These can be read\n   in `CallAdapter`s or OkHttp `Interceptor`s for tracing, analytics, varying behavior, and more.\n\n * New: **`@SkipCallbackExecutor`** method annotation will result in your `Call` invoking its `Callback` on the\n   background thread on which the HTTP call was made.\n\n * New: Support OkHttp's `Headers` type for `@HeaderMap` parameters.\n\n * New: Add `Retrofit.Builder.baseUrl(URL)` overload.\n\n * Fix: Add embedded R8/ProGuard rule which retains Retrofit interfaces (while still allowing obfuscation). This\n   is needed because R8 running in 'full mode' (i.e., not in ProGuard-compatibility mode) will see that there are\n   no subtypes of these interfaces and rewrite any code which references instances to null.\n * Fix: Mark `HttpException.response()` as `@Nullable` as serializing the exception does not retain this instance.\n * Fix: Fatal errors (such as stack overflows, out of memory, etc.) now propagate to the OkHttp `Dispatcher` thread\n   on which they are running.\n * Fix: Ensure JAX-B converter closes the response body when an exception is thrown during deserialization.\n * Fix: Ignore static methods when performing eager validation of interface methods.\n * Fix: Ensure that calling `source()` twice on the `ResponseBody` passed to a `Converter` always returns the same\n   instance. Prior to the fix, intermediate buffering would cause response data to be lost.\n\n\n## [2.5.0] - 2018-11-18\n\n * New: Built-in support for Kotlin's `Unit` type. This behaves the same as Java's `Void` where the body\n   content is ignored and immediately discarded.\n * New: Built-in support for Java 8's `Optional` and `CompletableFuture` types. Previously the 'converter-java8'\n   and 'adapter-java8' dependencies were needed and explicitly adding `Java8OptionalConverterFactory` and/or\n   `Java8CallAdapterFactory` to your `Retrofit.Builder` in order to use these types. Support is now built-in and\n   those types and their artifacts are marked as deprecated.\n * New: `Invocation` class provides a reference to the invoked method and argument list as a tag on the\n   underlying OkHttp `Call`. This can be accessed from an OkHttp interceptor for things like logging, analytics,\n   or metrics aggregation.\n * New: Kotlin extension for `Retrofit` which allows you call `create` passing the interface type only as\n   a generic parameter (e.g., `retrofit.create<MyService>()`).\n * New: Added `Response.success` overload which allows specifying a custom 2xx status code.\n * New: Added `Calls.failure` overload which allows passing any `Throwable` subtype.\n * New: Minimal R8 rules now ship inside the jar requiring no client configuration in the common case.\n * Fix: Do not propagate fatal errors to the callback. They are sent to the thread's uncaught\n   exception handler.\n * Fix: Do not enqueue/execute an otherwise useless call when the RxJava type is disposed by `onSubscribe`.\n * Fix: Call `RxJavaPlugins` assembly hook when creating an RxJava 2 type.\n * Fix: Ensure both the Guava and Java 8 `Optional` converters delegate properly. This ensures that converters\n   registered prior to the optional converter can be used for deserializing the body type.\n * Fix: Prevent `@Path` values from participating in path-traversal. This ensures untrusted input passed as\n   a path value cannot cause you to make a request to an un-intended relative URL.\n * Fix: Simple XML converter (which is deprecated) no longer wraps subtypes of `RuntimeException`\n   or `IOException` when it fails.\n * Fix: Prevent JAXB converter from loading remote entities and DTDs.\n * Fix: Correctly detect default methods in interfaces on Android (API 24+). These still do not work, but\n   now a correct exception will be thrown when detected.\n * Fix: Report more accurate exceptions when a `@QueryName` or `@QueryMap` precedes a `@Url` parameter.\n * Update OkHttp dependency to 3.12.\n\n\n## [2.4.0] - 2018-03-14\n\n * New: `Retrofit.Builder` exposes mutable lists of the added converter and call adapter factories.\n * New: Call adapter added for Scala's `Future`.\n * New: Converter for JAXB replaces the now-deprecated converter for Simple XML Framework.\n * New: Add Java 9 automatic module names for each artifact corresponding to their root package.\n * Fix: Do not swallow `Error`s from callbacks (usually `OutOfMemoryError`).\n * Fix: Moshi and Gson converters now assert that the full response was consumed. This prevents\n   hiding bugs in faulty adapters which might not have consumed the full JSON input which would\n   then cause failures on the next request over that connection.\n * Fix: Do not conflate OkHttp `Call` cancelation with RxJava unsubscription/disposal. Prior to\n   this change, canceling of a `Call` would prevent a cancelation exception from propagating down\n   the Rx stream.\n\n\n## [2.3.0] - 2017-05-13\n\n *  **Retrofit now uses `@Nullable` to annotate all possibly-null values.** We've\n    added a compile-time dependency on the JSR 305 annotations. This is a\n    [provided][maven_provided] dependency and does not need to be included in\n    your build configuration, `.jar` file, or `.apk`. We use\n    `@ParametersAreNonnullByDefault` and all parameters and return types are\n    never null unless explicitly annotated `@Nullable`.\n\n    **Warning: this release is source-incompatible for Kotlin users.**\n    Nullability was previously ambiguous and lenient but now the compiler will\n    enforce strict null checks.\n\n * New: Converters added for Java 8's and Guava's `Optional` which wrap a potentially-nullable\n   response body. These converters still rely on normal serialization library converters for parsing\n   the response bytes into an object.\n * New: String converters that return `null` for an `@Query` or `@Field` parameter are now skipped.\n * New: The mock module's `NetworkBehavior` now throws a custom subclass of `IOException` to more\n   clearly indicate the exception's source.\n * RxJava 1.x converter updated to 1.3.0 which stabilizes the use of `Completable`.\n * Fix: Add explicit handling for `OnCompleteFailedException`, `OnErrorFailedException`, and\n   `OnErrorNotImplementedException` for RxJava 1.x to ensure they're correct delivered to the\n   plugins/hooks for handling.\n * Fix: `NoSuchElementException` thrown when unsubscribing from an RxJava 1.x `Single`.\n\n\n## [2.2.0] - 2017-02-21\n\n * RxJava 2.x is now supported with a first-party 'adapter-rxjava2' artifact.\n * New: `@QueryName` annotation allows creating a query parameter with no '=' separator or value.\n * New: Support for messages generated by Protobuf 3.0 or newer when using the converter for Google's\n   protobuf.\n * New: RxJava 1.x call adapter now correctly handles broken subscribers whose methods throw exceptions.\n * New: Add `toString()` implementations for `Response` and `Result`.\n * New: The Moshi converter factory now offers methods for enabling null serialization and lenient\n   parsing.\n * New: Add `createAsync()` to RxJava 1.x call adapter factory which executes requests using\n   `Call.enqueue()` using the underlying HTTP client's asynchronous support.\n * New: `NetworkBehavior` now allows setting an error percentage and returns HTTP errors when triggered.\n * `HttpException` has been moved into the main artifact and should be used instead of the versions\n   embedded in each adapter (which have been deprecated).\n * Promote the response body generic type on `CallAdapter` from the `adapt` method to the enclosing\n   class. This is a source-incompatible but binary-compatible change which is only relevant if you are\n   implementing your own `CallAdapter`s.\n * Remove explicit handling of the now-defunct RoboVM platform.\n * Fix: Close response on HTTP 204 and 205 to avoid resource leak.\n * Fix: Reflect the canceled state of the HTTP client's `Call` in Retrofit's `Call`.\n * Fix: Use supplied string converters for the `String` type on non-body parameters. This allows user\n   converters to handle cases such as when annotating string parameters instead of them always using\n   the raw string.\n * Fix: Skip a UTF-8 BOM (if present) when using the converter for Moshi.\n\n\n## [2.1.0] - 2016-06-15\n\n * New: `@HeaderMap` annotation and support for supplying an arbitrary number of headers to an endpoint.\n * New: `@JsonAdapter` annotations on the `@Body` parameter and on the method will be propagated to Moshi\n   for creating the request and response adapters, respectively.\n * Fix: Honor the `Content-Type` encoding of XML responses when deserializing response bodies.\n * Fix: Remove the stacktrace from fake network exceptions created from retrofit-mock's `NetworkBehavior`.\n   They had the potential to be misleading and look like a library issue.\n * Fix: Eagerly catch malformed `Content-Type` headers supplied via `@Header` or `@Headers`.\n\n\n## [2.0.2] - 2016-04-14\n\n * New: `ProtoConverterFactory.createWithRegistry()` method accepts an extension registry to be used\n   when deserializing protos.\n * Fix: Pass the correct `Call` instance to `Callback`'s `onResponse` and `onFailure` methods such\n   that calling `clone()` retains the correct threading behavior.\n * Fix: Reduce the per-request allocation overhead for the RxJava call adapter.\n\n\n## [2.0.1] - 2016-03-30\n\n * New: Support OkHttp's `HttpUrl` as a `@Url` parameter type.\n * New: Support iterable and array `@Part` parameters using OkHttp's `MultipartBody.Part`.\n * Fix: Honor backpressure in `Observable`s created from the RxJavaCallAdapterFactory.\n\n\n## [2.0.0] - 2016-03-11\n\nRetrofit 2 is a major release focused on extensibility. The API changes are numerous but solve\nshortcomings of the previous version and provide a path for future enhancement.\n\nBecause the release includes breaking API changes, we're changing the project's package name from\n`retrofit` to `retrofit2`. This should make it possible for large applications and libraries to\nmigrate incrementally. The Maven group ID is now `com.squareup.retrofit2`. For an explanation of\nthis strategy, see Jake Wharton's post, [Java Interoperability Policy for Major Version\nUpdates](http://jakewharton.com/java-interoperability-policy-for-major-version-updates/).\n\n * **Service methods return `Call<T>`.** This allows them to be executed synchronously or\n   asynchronously using the same method definition. A `Call` instance represents a single\n   request/response pair so it can only be used once, but you can `clone()` it for re-use.\n   Invoking `cancel()` will cancel in-flight requests or prevent the request from even being\n   performed if it has not already.\n\n * **Multiple converters for multiple serialization formats.** API calls returning different\n  formats (like JSON, protocol buffers, and plain text) no longer need to be separated into\n  separate service interfaces. Combine them together and add multiple converters. Converters are\n  chosen based on the response type you declare. Gson is no longer included by default, so you will\n  always need to add a converter for any serialization support. OkHttp's `RequestBody` and\n  `ResponseBody` types can always be used without adding one, however.\n\n * **Call adapters allow different execution mechanisms.** While `Call` is the built-in mechanism,\n   support for additional ones can be added similar to how different converters can be added.\n   RxJava's `Observable` support has moved into a separate artifact as a result, and support for\n   Java 8's `CompletableFuture` and Guava's `ListenableFuture` are also provided as additional\n   artifacts.\n\n * **Generic response type includes HTTP information and deserialized body.** You no longer have to\n   choose between the deserialized body and reading HTTP information. Every `Call` automatically\n   receives both via the `Response<T>` type and the RxJava, Guava, and Java 8 call adapters also\n   support it.\n\n * **@Url for hypermedia-like APIs.** When your API returns links for pagination, additional\n   resources, or updated content they can now be used with a service method whose first parameter\n   is annotated with `@Url`.\n\nChanges from beta 4:\n\n * New: `RxJavaCallAdapterFactory` now supports service methods which return `Completable` which\n   ignores and discards response bodies, if any.\n * New: `RxJavaCallAdapterFactory` supports supplying a default `Scheduler` which will be used\n   for `subscribeOn` on returned `Observable`, `Single`, and `Completable` instances.\n * New: `MoshiConverterFactory` supports creating an instance which uses lenient parsing.\n * New: `@Part` can omit the part name and use OkHttp's `MultipartBody.Part` type for supplying\n   parts. This lets you customize the headers, name, and filename and provide the part body in a\n   single argument.\n * The `BaseUrl` interface and support for changeable base URLs was removed. This functionality\n   can be done using an OkHttp interceptor and a sample showcasing it was added.\n * `Response.isSuccess()` was renamed to `Response.isSuccessful()` for parity with the name of\n   OkHttp's version of that method.\n * Fix: Throw a more appropriate exception with a message when a resolved url (base URL + relative\n   URL) is malformed.\n * Fix: `GsonConverterFactory` now honors settings on the `Gson` instance (like leniency).\n * Fix: `ScalarsConverterFactory` now supports primitive scalar types in addition to boxed for\n   response body parsing.\n * Fix: `Retrofit.callbackExecutor()` may now return an executor even when one was not explicitly\n   provided. This allows custom `CallAdapter.Factory` implementations to use it when triggering\n   callbacks to ensure they happen on the appropriate thread for the platform (e.g., Android).\n\n\n## [2.0.0-beta4] - 2016-02-04\n\n * New: `Call` instance is now passed to both `onResponse` and `onFailure` methods of `Callback`. This aids\n   in detecting when `onFailure` is called as a result of `Call.cancel()` by checking `Call.isCanceled()`.\n * New: `Call.request()` returns (optionally creating) the `Request` object for the call. Note: If this is\n   called before `Call.execute()` or `Call.enqueue()` this will do relatively expensive work synchronously.\n   Doing so in performance-critical sections (like on the Android main thread) should be avoided.\n * New: Support for the release version of OkHttp 3.0 and newer.\n * New: `adapter-guava` module provides a `CallAdapter.Factory` for Guava's `ListenableFuture`.\n * New: `adapter-java8` module provides a `CallAdapter.Factory` for Java 8's `CompleteableFuture`.\n * New: `ScalarsConverterFactory` (from `converter-scalars` module) now supports parsing response bodies\n   into either `String`, the 8 primitive types, or the 8 boxed primitive types.\n * New: Automatic support for sending callbacks to the iOS main thread when running via RoboVM.\n * New: Method annotations are now passed to the factory for request body converters. This allows converters\n   to alter the structure of both request bodies and response bodies with a single method-level annotation.\n * Each converter has been moved to its own package under `retrofit2.converter.<name>`. This prevents type\n   collisions when many converters are simultaneously in use.\n * Fix: Exceptions thrown when unable to locate a `CallAdapter.Factory` for a method return type now\n   correctly list the `CallAdapter.Factory` instances checked.\n * Fix: Ensure default methods on service interfaces can be invoked.\n * Fix: Correctly resolve the generic parameter types of collection interfaces when subclasses of those\n   collections are used as method parameters.\n * Fix: Do not encode `/` characters in `@Path` replacements when `encoded = true`.\n\n\n## [2.0.0-beta3] - 2016-01-05\n\n * New: All classes have been migrated to the `retrofit2.*` package name. The Maven groupId is now\n   `com.squareup.retrofit2`. This is in accordance with the\n   [Java Interoperability Policy for Major Version Updates](http://jakewharton.com/java-interoperability-policy-for-major-version-updates/).\n   With this change Retrofit 2.x can coexiest with Retrofit 1.x in the same project.\n * New: Update to use the OkHttp 3 API and OkHttp 3.0.0-RC1 or newer is now required. Similar to the previous\n   point, OkHttp has a new package name (`okhttp3.*`) and Maven groupId (`com.squareup.okhttp3`) which allow\n   it to coexist with OkHttp 2.x in the same project.\n * New: String converters allow for custom serialization of parameters that end up as strings (such as `@Path`,\n   `@Query`, `@Header`, etc.). `Converter.Factory` has a new `stringConverter` method which receives the\n   parameter type and annotations and can return a converter for that type. This allows providing custom\n   rendering of types like `Date`, `User`, etc. to a string before being used for its purpose. A default\n   converter will call `toString()` for any type which retains the mimics the previous behavior.\n * New: OkHttp's `Call.Factory` type is now used as the HTTP client rather than using the `OkHttpClient` type\n   directly (`OkHttpClient` does implement `Call.Factory`). A `callFactory` method has been added to both\n   `Retrofit.Builder` and `Retrofit` to allow supplying alternate implementations of an HTTP client. The\n   `client(OkHttpClient)` method on `Retrofit.Builder` still exists as a convenience.\n * New: `isExecuted()` method returns whether a `Call` has been synchronously or asynchronously executed.\n * New: `isCanceled()` method returns whether a `Call` has been canceled. Use this in `onFailure` to determine\n   whether the callback was invoked from cancellation or actual transport failure.\n * New: `converter-scalars` module provides a `Converter.Factory` for converting `String`, the 8 primitive\n   types, and the 8 boxed primitive types as `text/plain` bodies. Install this before your normal converter\n   to avoid passing these simple scalars through, for example, a JSON converter.\n * New: `Converter.Factory` methods now receive a `Retrofit` instance which also now has methods for querying\n   the next converter for a given type. This allows implementations to delegate to others and provide\n   additional behavior without complete reimplementation.\n * New: `@OPTIONS` annotation more easily allows for making OPTIONS requests.\n * New: `@Part` annotation now supports `List` and array types.\n * New: The `@Url` annotation now allows using `java.net.URI` or `android.net.Uri` (in addition to `String`)\n   as parameter types for providing relative or absolute endpoint URLs dynamically.\n * New: The `retrofit-mock` module has been rewritten with a new `BehaviorDelegate` class for implementing\n   fake network behavior in a local mock implementation of your service endpoints. Documentation and more\n   tests are forthcoming, but the `SimpleMockService` demonstrates its use for now.\n * Fix: Forbid Retrofit's `Response` type and OkHttp's `Response` type as the response body type given to\n   a `Call` (i.e., `Call<Response>`). OkHttp's `ResponseBody` type is the correct one to use when the raw\n   body contents are desired.\n * Fix: The Gson converter now respects settings on the supplied `Gson` instance (such as `serializeNulls`).\n   This requires Gson 2.4 or newer.\n * The Wire converter has been updated to the Wire 2.0 API.\n * The change in 2.0.0-beta2 which provided the `Retrofit` instance to the `onResponse` callback of `Callback`\n   has been reverted. There are too many edge cases around providing the `Retrofit` object in order to allow\n   deserialization of the error body. To accommodate this use case, pass around the `Retrofit` response\n   manually or implement a custom `CallAdapter.Factory` does so automatically.\n\n\n## [2.0.0-beta2] - 2015-09-28\n\n * New: Using a response type of `Void` (e.g., `Call<Void>`) will ignore and discard the response body. This\n   can be used when there will be no response body (such as in a 201 response) or whenever the body is not\n   needed. `@Head` requests are now forced to use this as their response type.\n * New: `validateEagerly()` method on `Retrofit.Builder` will verify the correctness of all service methods\n   on calls to `create()` instead of lazily validating on first use.\n * New: `Converter` is now parameterized over both 'from' and 'to' types with a single `convert` method.\n   `Converter.Factory` is now an abstract class and has factory methods for both request body and response\n   body.\n * New: `Converter.Factory` and `CallAdapter.Factory` now receive the method annotations when being created\n   for a return/response type and the parameter annotations when being created for a parameter type.\n * New: `callAdapter()` method on `Retrofit` allows querying a `CallAdapter` for a given type. The\n   `nextCallAdapter()` method allows delegating to another `CallAdapter` from within a `CallAdapter.Factory`.\n   This is useful for composing call adapters to incrementally build up behavior.\n * New: `requestConverter()` and `responseConverter()` methods on `Retrofit` allow querying a `Converter` for\n   a given type.\n * New: `onResponse` method in `Callback` now receives the `Retrofit` instance. Combined with the\n   `responseConverter()` method on `Retrofit`, this provides a way of deserializing an error body on `Response`.\n   See the `DeserializeErrorBody` sample for an example.\n * New: The `MoshiConverterFactory` has been updated for its v1.0.0.\n * Fix: Using `ResponseBody` for the response type or `RequestBody` for a parameter type is now correctly\n   identified. Previously these types would erroneously be passed to the supplied converter.\n * Fix: The encoding of `@Path` values has been corrected to conform to OkHttp's `HttpUrl`.\n * Fix: Use form-data content disposition subtype for `@Multipart`.\n * Fix: `Observable` and `Single`-based execution of requests now behave synchronously (and thus requires\n   `subscribeOn()` for running in the background).\n * Fix: Correct `GsonConverterFactory` to honor the configuration of the `Gson` instances (such as not\n   serializing null values, the default).\n\n\n## [2.0.0-beta1] - 2015-08-27\n\n * New: `Call` encapsulates a single request/response HTTP call. A call can by run synchronously\n   via `execute()` or asynchronously via `enqueue()` and can be canceled with `cancel()`.\n * New: `Response` is now parameterized and includes the deserialized body object.\n * New: `@Url` parameter annotation allows passing a complete URL for an endpoint.\n * New: OkHttp is now required as a dependency. Types like `TypedInput` and `TypedOutput` (and its\n   implementations), `Request`, and `Header` have been replaced with OkHttp types like `RequestBody`,\n   `ResponseBody`, and `Headers`.\n * New: `CallAdapter` (and `Factory`) provides extension point for supporting multiple execution\n   mechanisms. An RxJava implementation is provided by a sibling module.\n * New: `Converter` (and `Factory`) provides extension point for supporting multiple serialization\n   mechanisms. Gson, Jackson, Moshi, Protobuf, Wire, and SimpleXml implementations are provided by sibling\n   modules.\n * Fix: A lot of things.\n * Hello Droidcon NYC 2015!\n\n\n## [1.9.0] - 2015-01-07\n\n * Update to OkHttp 2.x's native API. If you are using OkHttp you must use version 2.0 or newer (the latest\n   is 2.2 at time of writing) and you no longer need to use the `okhttp-urlconnection` shim.\n * New: Allow disabling Simple XML Framework's strict parsing.\n * New: `@Header` now accepts a `List` or array for a type.\n * New: `@Field` and `@FieldMap` now have options for enabling or disabling URL encoding of names and values.\n * Fix: Remove query parameters from thread name when running background requests for asynchronous use.\n\n\n## [1.8.0] - 2014-11-18\n\n * Update to RxJava 1.0. This comes with the project's 'groupId' change from `com.netflix.rxjava` to\n   `io.reactivex` which is why the minor version was bumped.\n\n\n## [1.7.1] - 2014-10-23\n\n * Fix: Correctly log `null` request arguments for `HEADERS_AND_ARGS` log level.\n\n\n## [1.7.0] - 2014-10-08\n\n * New: `RetrofitError`'s `getKind()` now disambiguates the type of error represented.\n * New: `HEADERS_AND_ARGS` log level displays parameters passed to method invocation along with normal\n   header list.\n * New: `@Part` and `@PartMap` now support specifying the `Content-Transfer-Encoding` of their respective\n   values.\n * New: `@Path`, `@Query`, and `@QueryMap` now have options for enabling or disabling URL encoding on\n   names (where appropriate) and values.\n * `@Header` now accepts all object types, invoking `String.valueOf` when neccesary.\n * Attempting to use a `@Path` replacement block (`{name}`) in a query parameter now suggested `@Query` in\n   the exception message.\n * Fix: Correct NPE when `Content-Type` override is specified on requests without a body.\n * Fix: `WireConverter` now correctly throws `ConversionException` on incorrect MIME types for parity with\n   `ProtoConverter`.\n * Fix: Include `Content-Type` on AppEngine requests.\n * Fix: Account for NPE on AppEngine when the response URL was not automatically populated in certain cases.\n * Fix: `MockRestAdapter`'s RxJava support now correctly schedules work on the HTTP executor, specifically\n   when chaining multiple requests together.\n * Experimental RxJava support updated for v0.20.\n\n\n## [1.6.1] - 2014-07-02\n\n * Fix: Add any explicitly-specified 'Content-Type' header (via annotation or param) to the request even\n   if there is no request body (e.g., DELETE).\n * Fix: Include trailing CRLF in multi-part uploads to work around a bug in .NET MVC 4 parsing.\n * Fix: Allow `null` mock exception bodies and use the success type from the declared service interface.\n\n\n## [1.6.0] - 2014-06-06\n\n * New: `@Streaming` on a `Response` type will skip buffering the body to a `byte[]` before delivering.\n * When using OkHttp, version 1.6.0 or newer (including 2.0.0+) is now required.\n * The absence of a response body and an empty body are now differentiated in the log messages.\n * Fix: If set, the `RequestInterceptor` is now applied at the time of `Observable` subscription rather\n   than at the time of its creation.\n * Fix: `Callback` subtypes are now supported when using `MockRestAdapter`.\n * Fix: `RetrofitError` now contains a useful message indicating the reason for the failure.\n * Fix: Exceptions thrown when parsing the response type of the interface are now properly propagated.\n * Fix: Calling `Response#getBody` when `null` body now correctly returns instead of throwing an NPE.\n * Experimental RxJava support updated for v0.19.\n * The `Content-Type` and `Content-Length` headers are no longer automatically added to the header list\n   on the `Request` object. This reverts erroneous behavior added in v1.5.0. Custom `Client` implementations\n   should revert to adding these headers based on the `TypedInput` body of the `Request`.\n\n\n## [1.5.1] - 2014-05-08\n\n * New: `@PartMap` annotation accepts a `Map` of key/value pairs for multi-part.\n * Fix: `MockRestAdpater` uses the `ErrorHandler` from its parent `RestAdapter`.\n * Experimental RxJava support updated for v0.18 and is now lazily initialized.\n\n\n## [1.5.0] - 2014-03-20\n\n * New: Support for AppEngine's [URL Fetch](https://developers.google.com/appengine/docs/java/urlfetch/)\n   HTTP client.\n * New: Multipart requests of unknown length are now supported.\n * New: HTTP `Content-Type` can be overridden with a method-level or paramter header annotation.\n * New: Exceptions from malformed interface methods now include detailed information.\n * Fix: Support empty HTTP response status reason.\n * If an `ErrorHandler` is supplied it will be invoked for `Callback` and `Observable` methods.\n * HTTP `PATCH` method using `HttpUrlConnection` is no longer supported. Add the\n   [OkHttp](https://square.github.io/okhttp) jar to your project if you need this behavior.\n * Custom `Client` implementations should no longer set `Content-Type` or `Content-Length` headers\n   based on the `TypedInput` body of the `Request`. These headers will now be added automatically\n   as part of the standard `Request` header list.\n\n\n## [1.4.1] - 2014-02-01\n\n * Fix: `@QueryMap`, `@EncodedFieldMap`, and `@FieldMap` now correctly detect `Map`-based parameter\n   types.\n\n\n## [1.4.0] - 2014-01-31\n\n * New: `@Query` and `@EncodedQuery` now accept `List` or arrays for multiple values.\n * New: `@QueryMap` and `@EncodedQueryMap` accept a `Map` of key/value pairs for query parameters.\n * New: `@Field` now accepts `List` or arrays for multiple values.\n * New: `@FieldMap` accepts a `Map` of name/value pairs for form URL-encoded request bodies.\n * New: `Endpoint` replaces `Server` as the representation of the remote API root. The `Endpoints`\n   utility class contains factories methods for creating instances. `Server` and `ChangeableServer`\n   are now deprecated.\n * `SimpleXmlConverter` and `JacksonConverter` now have a default constructor.\n * `Response` now includes the URL.\n * Fix: Hide references to optional classes to prevent over-eager class verifiers from\n   complaining (e.g., Dalvik).\n * Fix: Properly detect and reject interfaces which extend from other interfaces.\n\n\n## [1.3.0] - 2013-11-25\n\n * New: Converter module for SimpleXML.\n * New: Mock module which allows simulating real network behavior for local service interface\n   implementations. See 'mock-github-client' example for a demo.\n * New: RxJava `Observable` support! Declare a return type of `Observable<Foo>` on your service\n   interfaces to automatically get an observable for that request. (Experimental API)\n * Fix: Use `ObjectMapper`'s type factory when deserializing (Jackson converter).\n * Multipart POST requests now stream their individual part bodies.\n * Log chunking to 4000 characters now only happens on the Android platform.\n\n\n## [1.2.2] - 2013-09-12\n\n * Fix: Respect connection and read timeouts on supplied `OkHttpClient` instances.\n * Fix: Ensure connection is closed on non-200 responses.\n\n\n## [1.2.1] - 2013-08-30\n\n * New: Converter for [Wire protocol buffers](https://github.com/square/wire)!\n\n\n## [1.2.0] - 2013-08-23\n\n * New: Additional first-party converters for Jackson and Protocol Buffers! These are provided\n   as separate modules that you can include and pass to `RestAdapter.Builder`'s `setConverter`.\n * New: `@EncodedPath` and `@EncodedQuery` annotations allow provided path and query params that\n   are already URL-encoded.\n * New: `@PATCH` HTTP method annotation.\n * Fix: Properly support custom HTTP method annotations in `UrlConnectionClient`.\n * Fix: Apply `RequestInterceptor` during method invocation rather than at request execution time.\n * Change `setDebug` to `setLogLevel` on `RestAdapter` and `RestAdapter.Builder` and provide\n   two levels of logging via `LogLevel`.\n * Query parameters can now be added in a request interceptor.\n\n\n## [1.1.1] - 2013-06-25\n\n * Fix: Ensure `@Headers`-defined headers are correctly added to requests.\n * Fix: Supply reasonable connection and read timeouts for default clients.\n * Fix: Allow passing `null` for a `@Part`-annotated argument to remove it from the multipart\n   request body.\n\n\n## [1.1.0] - 2013-06-20\n\n * Introduce `RequestInterceptor` to replace `RequestHeaders`. An interceptor provided to the\n   `RestAdapter.Builder` will be called for every request and allow setting both headers and\n   additional path parameter replacements.\n * Add `ErrorHandler` for customizing the exceptions which are thrown when synchronous methods\n   return non-200 error codes.\n * Properly parse responses which erroneously omit the \"Content-Type\" header.\n\n\n## [1.0.2] - 2013-05-23\n\n * Allow uppercase letters in path replacement identifiers.\n * Fix: Static query parameters in the URL are now correctly appended with a separating '?'.\n * Fix: Explicitly allow or forbid `null` as a value for method parameters.\n   * `@Path` - Forbidden\n   * `@Query` - Allowed\n   * `@Field` - Allowed\n   * `@Part` - Forbidden\n   * `@Body` - Forbidden\n   * `@Header` - Allowed\n\n\n## [1.0.1] - 2013-05-13\n\n * Fix: Correct bad regex behavior on Android.\n\n\n## [1.0.0] - 2013-05-13\n\nInitial release.\n\n\n\n[Unreleased]: https://github.com/square/retrofit/compare/2.11.0...HEAD\n[2.11.0]: https://github.com/square/retrofit/releases/tag/2.11.0\n[2.10.0]: https://github.com/square/retrofit/releases/tag/2.10.0\n[2.9.0]: https://github.com/square/retrofit/releases/tag/2.9.0\n[2.8.2]: https://github.com/square/retrofit/releases/tag/2.8.2\n[2.8.1]: https://github.com/square/retrofit/releases/tag/parent-2.8.1\n[2.8.0]: https://github.com/square/retrofit/releases/tag/parent-2.8.0\n[2.7.2]: https://github.com/square/retrofit/releases/tag/parent-2.7.2\n[2.7.1]: https://github.com/square/retrofit/releases/tag/parent-2.7.1\n[2.7.0]: https://github.com/square/retrofit/releases/tag/parent-2.7.0\n[2.6.4]: https://github.com/square/retrofit/releases/tag/parent-2.6.4\n[2.6.3]: https://github.com/square/retrofit/releases/tag/parent-2.6.3\n[2.6.2]: https://github.com/square/retrofit/releases/tag/parent-2.6.2\n[2.6.1]: https://github.com/square/retrofit/releases/tag/parent-2.6.1\n[2.6.0]: https://github.com/square/retrofit/releases/tag/parent-2.6.0\n[2.5.0]: https://github.com/square/retrofit/releases/tag/parent-2.5.0\n[2.4.0]: https://github.com/square/retrofit/releases/tag/parent-2.4.0\n[2.3.0]: https://github.com/square/retrofit/releases/tag/parent-2.3.0\n[2.2.0]: https://github.com/square/retrofit/releases/tag/parent-2.2.0\n[2.1.0]: https://github.com/square/retrofit/releases/tag/parent-2.1.0\n[2.0.2]: https://github.com/square/retrofit/releases/tag/parent-2.0.2\n[2.0.1]: https://github.com/square/retrofit/releases/tag/parent-2.0.1\n[2.0.0]: https://github.com/square/retrofit/releases/tag/parent-2.0.0\n[2.0.0-beta4]: https://github.com/square/retrofit/releases/tag/parent-2.0.0-beta4\n[2.0.0-beta3]: https://github.com/square/retrofit/releases/tag/parent-2.0.0-beta3\n[2.0.0-beta2]: https://github.com/square/retrofit/releases/tag/parent-2.0.0-beta2\n[2.0.0-beta1]: https://github.com/square/retrofit/releases/tag/parent-2.0.0-beta1\n[1.9.0]: https://github.com/square/retrofit/releases/tag/parent-1.9.0\n[1.8.0]: https://github.com/square/retrofit/releases/tag/parent-1.8.0\n[1.7.1]: https://github.com/square/retrofit/releases/tag/parent-1.7.1\n[1.7.0]: https://github.com/square/retrofit/releases/tag/parent-1.7.0\n[1.6.1]: https://github.com/square/retrofit/releases/tag/parent-1.6.1\n[1.6.0]: https://github.com/square/retrofit/releases/tag/parent-1.6.0\n[1.5.1]: https://github.com/square/retrofit/releases/tag/parent-1.5.1\n[1.5.0]: https://github.com/square/retrofit/releases/tag/parent-1.5.0\n[1.4.1]: https://github.com/square/retrofit/releases/tag/parent-1.4.1\n[1.4.0]: https://github.com/square/retrofit/releases/tag/parent-1.4.0\n[1.3.0]: https://github.com/square/retrofit/releases/tag/parent-1.3.0\n[1.2.2]: https://github.com/square/retrofit/releases/tag/parent-1.2.2\n[1.2.1]: https://github.com/square/retrofit/releases/tag/parent-1.2.1\n[1.2.0]: https://github.com/square/retrofit/releases/tag/parent-1.2.0\n[1.1.1]: https://github.com/square/retrofit/releases/tag/parent-1.1.1\n[1.1.0]: https://github.com/square/retrofit/releases/tag/parent-1.1.0\n[1.0.2]: https://github.com/square/retrofit/releases/tag/parent-1.0.2\n[1.0.1]: https://github.com/square/retrofit/releases/tag/parent-1.0.1\n[1.0.0]: https://github.com/square/retrofit/releases/tag/parent-1.0.0\n[maven_provided]: https://maven.apache.org/guides/introduction/introduction-to-dependency-mechanism.html\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.09,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.73,
          "content": "Retrofit\n========\n\nA type-safe HTTP client for Android and Java.\n\nFor more information please see [the website][1].\n\n\nDownload\n--------\n\nDownload [the latest JAR][2] or grab from Maven central at the coordinates `com.squareup.retrofit2:retrofit:2.11.0`.\n\nSnapshots of the development version are available in [Sonatype's `snapshots` repository][snap].\n\nRetrofit requires at minimum Java 8+ or Android API 21+.\n\n\nR8 / ProGuard\n-------------\n\nIf you are using R8 the shrinking and obfuscation rules are included automatically.\n\nProGuard users must manually add the options from\n[retrofit2.pro][proguard file].\nYou might also need [rules for OkHttp][okhttp proguard] which is a dependency of this library.\n\n\nLicense\n=======\n\n    Copyright 2013 Square, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n [1]: https://square.github.io/retrofit/\n [2]: https://search.maven.org/remote_content?g=com.squareup.retrofit2&a=retrofit&v=LATEST\n [snap]: https://s01.oss.sonatype.org/content/repositories/snapshots/\n [proguard file]: https://github.com/square/retrofit/blob/master/retrofit/src/main/resources/META-INF/proguard/retrofit2.pro\n [okhttp proguard]: https://square.github.io/okhttp/r8_proguard/\n [okio proguard]: https://square.github.io/okio/#r8-proguard\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 0.84,
          "content": "# Releasing\n\n1. Update the `VERSION_NAME` in `gradle.properties` to the release version.\n\n2. Update the `CHANGELOG.md`:\n   1. Change the `Unreleased` header to the release version.\n   2. Add a link URL to ensure the header link works.\n   3. Add a new `Unreleased` section to the top.\n\n3. Update the `README.md` so the \"Download\" section reflects the new release version.\n\n4. Commit\n\n   ```\n   $ git commit -am \"Prepare version X.Y.Z\"\n   ```\n\n5. Tag\n\n   ```\n   $ git tag -am \"Version X.Y.Z\" X.Y.Z\n   ```\n\n6. Update the `VERSION_NAME` in `gradle.properties` to the next \"SNAPSHOT\" version.\n\n7. Commit\n\n   ```\n   $ git commit -am \"Prepare next development version\"\n   ```\n\n8. Push!\n\n   ```\n   $ git push && git push --tags\n   ```\n\n   This will trigger a GitHub Action workflow which will create a GitHub release and upload the\n   release artifacts to Maven Central.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 3.52,
          "content": "import net.ltgt.gradle.errorprone.CheckSeverity\n\nbuildscript {\n  dependencies {\n    classpath libs.androidPlugin\n    classpath libs.kotlin.gradlePlugin\n    classpath libs.kotlin.serializationPlugin\n    classpath libs.dokkaPlugin\n    classpath libs.gradleMavenPublishPlugin\n    classpath libs.spotlessPlugin\n    classpath libs.errorpronePlugin\n    classpath libs.animalSnifferPlugin\n    classpath libs.protobufPlugin\n  }\n  repositories {\n    mavenCentral()\n    google()\n    gradlePluginPortal()\n  }\n}\n\nsubprojects {\n  tasks.withType(JavaCompile).configureEach { task ->\n    task.options.encoding = 'UTF-8'\n  }\n\n  plugins.withType(JavaBasePlugin).configureEach {\n    java.toolchain {\n      languageVersion.set(JavaLanguageVersion.of(8))\n    }\n  }\n\n  tasks.withType(Test).configureEach {\n    testLogging {\n      if (System.getenv(\"CI\") == \"true\") {\n        events = [\"failed\", \"skipped\", \"passed\"]\n      }\n      exceptionFormat \"full\"\n    }\n  }\n\n  apply plugin: 'net.ltgt.errorprone'\n\n  dependencies {\n    errorproneJavac libs.errorproneJavac\n    errorprone libs.errorproneCore\n  }\n\n  tasks.withType(JavaCompile).configureEach { task ->\n    task.options.errorprone {\n      excludedPaths = '.*/build/generated/source/proto/.*'\n      check('MissingFail', CheckSeverity.ERROR)\n      check('MissingOverride', CheckSeverity.ERROR)\n      check('UnusedException', CheckSeverity.ERROR)\n      check('UnusedMethod', CheckSeverity.ERROR)\n      check('UnusedNestedClass', CheckSeverity.ERROR)\n      check('UnusedVariable', CheckSeverity.ERROR)\n      check('WildcardImport', CheckSeverity.ERROR)\n    }\n  }\n\n  plugins.withId('java-library') {\n    project.apply plugin: 'ru.vyarus.animalsniffer'\n    animalsniffer {\n      sourceSets = [sourceSets.main] // Only check main sources, ignore test code.\n    }\n    dependencies {\n      signature 'org.codehaus.mojo.signature:java18:1.0@signature'\n\n      if (project.path != ':retrofit-converters:java8' &&\n        project.path != ':retrofit-converters:jaxb' &&\n        project.path != ':retrofit-converters:jaxb3' &&\n        project.path != ':retrofit-adapters:java8') {\n        signature 'net.sf.androidscents.signature:android-api-level-21:5.0.1_r2@signature'\n      }\n    }\n\n    plugins.apply('com.diffplug.spotless')\n    spotless {\n      java {\n        googleJavaFormat(libs.googleJavaFormat.get().version)\n          .formatJavadoc(false)\n        removeUnusedImports()\n        target 'src/*/java*/**/*.java'\n      }\n      kotlin {\n        ktlint(libs.ktlint.get().version)\n          .editorConfigOverride([\n            // Making something an expression body should be a choice around readability.\n            'ktlint_standard_function-expression-body': 'disabled',\n          ])\n        target 'src/**/*.kt'\n      }\n    }\n  }\n}\n\ntasks.create('clean', Delete) {\n  delete = layout.buildDirectory\n}\n\ntasks.create('prepareWebsite', Copy) {\n  description = 'Combines the static website along with generated documentation'\n  group = JavaBasePlugin.DOCUMENTATION_GROUP\n\n  into layout.buildDirectory.dir('docs/site')\n  from('website')\n\n  gradle.projectsEvaluated {\n    into('2.x') {\n      subprojects { subproject ->\n        if (subproject.name == 'retrofit-bom') return\n        if (!subproject.plugins.hasPlugin('com.vanniktech.maven.publish')) return\n\n        into(subproject.POM_ARTIFACT_ID) {\n          if (subproject.plugins.hasPlugin('org.jetbrains.dokka')) {\n            from subproject.tasks.named('dokkaHtml').flatMap { it.outputDirectory }\n          } else {\n            from subproject.tasks.named('javadoc').map { it.destinationDir }\n          }\n        }\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.83,
          "content": "GROUP=com.squareup.retrofit2\nVERSION_NAME=2.12.0-SNAPSHOT\n\nPOM_URL=https://github.com/square/retrofit\nPOM_SCM_URL=https://github.com/square/retrofit/\nPOM_SCM_CONNECTION=scm:git:git://github.com/square/retrofit.git\nPOM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/square/retrofit.git\n\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=https://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\n\nPOM_DEVELOPER_ID=square\nPOM_DEVELOPER_NAME=Square, Inc.\n\n# Publishing SHA 256 and 512 hashes of maven-metadata is not supported by Sonatype and Nexus.\n# See https://github.com/gradle/gradle/issues/11308 and https://issues.sonatype.org/browse/NEXUS-21802\nsystemProp.org.gradle.internal.publish.checksums.insecure=true\n\nandroid.useAndroidX=true\n\nSONATYPE_AUTOMATIC_RELEASE=true\nSONATYPE_HOST=S01\nRELEASE_SIGNING_ENABLED=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.56,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "retrofit-adapters",
          "type": "tree",
          "content": null
        },
        {
          "name": "retrofit-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "retrofit-converters",
          "type": "tree",
          "content": null
        },
        {
          "name": "retrofit-mock",
          "type": "tree",
          "content": null
        },
        {
          "name": "retrofit-response-type-keeper",
          "type": "tree",
          "content": null
        },
        {
          "name": "retrofit",
          "type": "tree",
          "content": null
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.21,
          "content": "plugins {\n  id 'org.gradle.toolchains.foojay-resolver-convention' version '0.9.0'\n}\n\ndependencyResolutionManagement {\n  repositories {\n    mavenCentral()\n    google()\n  }\n}\n\nrootProject.name = 'retrofit-root'\n\ninclude ':retrofit'\ninclude ':retrofit-bom'\n\ninclude ':retrofit:android-test'\ninclude ':retrofit:java-test'\ninclude ':retrofit:kotlin-test'\ninclude ':retrofit:robovm-test'\ninclude ':retrofit:test-helpers'\n\ninclude ':retrofit-mock'\n\ninclude ':retrofit-response-type-keeper'\n\ninclude ':retrofit-adapters:guava'\ninclude ':retrofit-adapters:java8'\ninclude ':retrofit-adapters:rxjava'\ninclude ':retrofit-adapters:rxjava2'\ninclude ':retrofit-adapters:rxjava3'\ninclude ':retrofit-adapters:scala'\n\ninclude ':retrofit-converters:gson'\ninclude ':retrofit-converters:guava'\ninclude ':retrofit-converters:jackson'\ninclude ':retrofit-converters:java8'\ninclude ':retrofit-converters:jaxb'\ninclude ':retrofit-converters:jaxb3'\ninclude ':retrofit-converters:kotlinx-serialization'\ninclude ':retrofit-converters:moshi'\ninclude ':retrofit-converters:protobuf'\ninclude ':retrofit-converters:scalars'\ninclude ':retrofit-converters:simplexml'\ninclude ':retrofit-converters:wire'\n\ninclude ':samples'\n\nenableFeaturePreview('TYPESAFE_PROJECT_ACCESSORS')\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}