{
  "metadata": {
    "timestamp": 1736557780760,
    "page": 954,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JakeWharton/butterknife",
      "stars": 25558,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".buildscript",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.11,
          "content": "bin\ngen\nout\nlib\n\n.idea\n*.iml\nclasses\n\nobj\n\n.DS_Store\n\n# Gradle\n.gradle\njniLibs\nbuild\nlocal.properties\nreports\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.7,
          "content": "language: android\n\njdk:\n  - oraclejdk8\n\nbefore_install:\n  # Install SDK license so Android Gradle plugin can install deps.\n  - mkdir \"$ANDROID_HOME/licenses\" || true\n  - echo \"d56f5187479451eabf01fb78af6dfcb131a6481e\" > \"$ANDROID_HOME/licenses/android-sdk-license\"\n  - echo \"24333f8a63b6825ea9c5514f83c2829b004d1fee\" >> \"$ANDROID_HOME/licenses/android-sdk-license\"\n  # Install the rest of tools (e.g., avdmanager)\n  - sdkmanager tools\n  # Install the system image\n  - sdkmanager \"system-images;android-18;default;armeabi-v7a\"\n  # Create and start emulator for the script. Meant to race the install task.\n  - echo no | avdmanager create avd --force -n test -k \"system-images;android-18;default;armeabi-v7a\"\n  - $ANDROID_HOME/emulator/emulator -avd test -no-audio -no-window &\n\ninstall: ./gradlew clean assemble assembleAndroidTest --stacktrace\n\nbefore_script:\n  - android-wait-for-emulator\n  - adb shell input keyevent 82\n\nscript: ./gradlew check connectedCheck --stacktrace\n\nafter_success:\n  - .buildscript/deploy_snapshot.sh\n\nenv:\n  global:\n    - secure: \"ESbreW4FNMPQhV1zbFb9iBvhFWFbVHecaig3Si3+4nrJCMn9x4nqB18ZcU+Aviw67WQNcuSH4I0Hl08uknl+kzE/xKEfPLmu28bptXRCSued49aL11i2aQmRj5nqP2yxkinhtRGOQxzIo56NmFt7sIcEXODM3D5a6q7s9tlvPfw=\"\n    - secure: \"JWEeqx0CWBqAkjcREHUg3Ei8wxqp59HZag8EidSLwmekgPJQwipwuEeXMZyPCGJCP+4ijUirtS/hRApi37BW0LYdt+XR7dI1TSZ0HFLTLqSPfWfsUcjmGpmoqVUv8FLVhC+KA42YeEhqkEaCUW92gJeAyK8swxDqGHAPT/sfKRA=\"\n\nbranches:\n  except:\n    - gh-pages\n\nnotifications:\n  email: false\n\nsudo: false\n\nbefore_cache:\n  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock\n  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/\n\ncache:\n  directories:\n    - $HOME/.gradle/caches/\n    - $HOME/.gradle/wrapper/\n    - $HOME/.android/build-cache\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 19.75,
          "content": "Change Log\n==========\n\nVersion 10.2.3 *(2020-08-12)*\n-----------------------------\n\nHeads up: Development on this tool is winding down as [view binding](https://developer.android.com/topic/libraries/view-binding) is stable in AS/AGP 3.6+.\n\n * Fix: Support receiving `MotionEvent` in an `@OnTouch` callback when using 'butterknife-reflect'.\n\n\nVersion 10.2.2 *(2020-08-03)*\n-----------------------------\n\nHeads up: Development on this tool is winding down as [view binding](https://developer.android.com/topic/libraries/view-binding) is stable in AS/AGP 3.6+.\n\n * Fix: Views detached while processing click callbacks will no longer disable future clicks on other views.\n\n\nVersion 10.2.1 *(2019-12-19)*\n-----------------------------\n\nHeads up: Development on this tool is winding down as [view binding](https://developer.android.com/topic/libraries/view-binding) will be stable in AS/AGP 3.6.\n\n * New: Make R2-generating Gradle task cacheable by default.\n * Fix: R2 classes now generate their own unique values for entries. This ensures that the annotation processor\n   can always do a reverse mapping from ID back to name and type. In AGP 3.6.0, the `R.txt` symbol table that was\n   previously used as a source for values now uses 0 for every entry which required this change.\n * Fix: Lint check for R2 values now properly handles static imports for entries.\n\n\nVersion 10.2.0 *(2019-09-12)*\n-----------------------------\n\n * New: Support incremental annotation processing.\n * Fix: Detect generated superclass bindings across compilation units.\n * Fix: Avoid deprecated APIs from the Android Gradle plugin. As a result, the new minimum supported version\n   of the Android Gradle plugin is 3.3.\n\n\nVersion 10.1.0 *(2019-02-13)*\n-----------------------------\n\n * New: Listeners which require return values (e.g., long click) can now be bound to methods returning `void`.\n   The default value of `true` will be returned in this case.\n * New: Add support for `@OnTextChanged` and `@OnPageChange` to reflection backend.\n * Remove enforcement of required views in the reflection backend. Most `@Nullable` annotations do not have\n   runtime retention so they can't be checked at runtime with reflection. Instead of forcing everyone to find\n   a new annotation, this enforcement is now dropped. While this might lead to nulls in otherwise required\n   view bindings, they'll either be unused or quickly cause a `NullPointerException`.\n\n\nVersion 10.0.0 *(2019-01-03)*\n-----------------------------\n\n * Equivalent to 9.0.0 but only supports AndroidX-enabled builds.\n * Removed APIs deprecated in 9.0.0.\n\n\nVersion 9.0.0 *(2019-01-03)*\n----------------------------\n\n * New: Support for AndroidX. Requires `android.useAndroidX=true` in `gradle.properties` to generate\n   AndroidX code.\n\n * New: A `butterknife-runtime` artifact has been extracted from `butterknife` which contains the APIs\n   required for the generated code but does not contain the code to reflectively look up the generated\n   code. This allows you to reference the generated code directly such that R8/ProGuard optimization can\n   rename both the generated code and your classes. `ButterKnife.bind` and the consumer R8/ProGuard rules\n   remain in the old `butterknife` artifact.\n \n * New: Experimental `butterknife-reflect` artifact eliminates the need to run the annotation\n   processor for IDE builds. This artifact is binary compatible with `butterknife` so it can be interchanged\n   depending on how your build is being invoked. See [its README](butterknife-reflect/README.md) for more\n   information. Currently about 90% of functionality is covered. File bugs for anything that does not work.\n\n   Note: This artifact requires Java 8. There's no good reason for this except to push the ecosystem to\n   having this be a default. As of AGP 3.2 there is no reason not to do this.\n\n * New: Lint checks have been ported to UAST and now work on Kotlin code.\n \n * Helpers such as `apply` have been deprecated on `ButterKnife` and are now available on the `ViewCollections` class.\n\n * Add support for Android Gradle plugin 3.3 and newer where `R` is no longer generated as Java source. This\n   has a side-effect of removing support for Android Gradle plugin 3.0.x (and older).\n * Use Java 8 bytecode for all artifacts as announced in RC1 release notes.\n * Fix: Allow `@BindFont` to work prior to API 26 using `ResourcesCompat`.\n * Fix: Update Android Gradle plugin to 3.1 or newer to fix binary incompatibilities.\n * Fix: Correct generated resource annotation names when running Turkish locale.\n * Fix: Use the application ID instead of the resource package for generating `R2`.\n * Cache the fact that a class hierarchy has no remaining bindings to prevent traversing the hierarchy\n   multiple times.\n * Deprecated methods from 8.x have been removed.\n\n\nVersion 9.0.0-rc3 *(2018-12-20)*\n--------------------------------\n\n * Fix: Correct generated resource annotation names when running Turkish locale.\n * Cache the fact that a class hierarchy has no remaining bindings to prevent traversing the hierarchy\n   multiple times.\n\n\nVersion 9.0.0-rc2 *(2018-11-19)*\n--------------------------------\n\n * Add support for Android Gradle plugin 3.3 and newer where `R` is no longer generated as Java source. This\n   has a side-effect of removing support for Android Gradle plugin 3.0.x (and older).\n * Use Java 8 bytecode for all artifacts as announced in RC1 release notes.\n\n\nVersion 9.0.0-rc1 *(2018-10-10)*\n--------------------------------\n\n * New: Support for AndroidX. Requires `android.useAndroidX=true` in `gradle.properties` to generate\n   AndroidX code.\n\n * New: A `butterknife-runtime` artifact has been extracted from `butterknife` which contains the APIs\n   required for the generated code but does not contain the code to reflectively look up the generated\n   code. This allows you to reference the generated code directly such that R8/ProGuard optimization can\n   rename both the generated code and your classes. `ButterKnife.bind` and the consumer R8/ProGuard rules\n   remain in the old `butterknife` artifact.\n \n * New: Experimental `butterknife-reflect` artifact eliminates the need to run the annotation\n   processor for IDE builds. This artifact is binary compatible with `butterknife` so it can be interchanged\n   depending on how your build is being invoked. See [its README](butterknife-reflect/README.md) for more\n   information. Currently about 90% of functionality is covered. File bugs for anything that does not work.\n\n   Note: This artifact requires Java 8. There's no good reason for this except to push the ecosystem to\n   having this be a default. As of AGP 3.2 there is no reason not to do this.\n\n * New: Lint checks have been ported to UAST and now work on Kotlin code.\n\n * Fix: Allow `@BindFont` to work prior to API 26 using `ResourcesCompat`.\n * Fix: Update Android Gradle plugin to 3.1 or newer to fix binary incompatibilities.\n * Fix: Use the application ID instead of the resource package for generating `R2`.\n * Deprecated methods from 8.x have been removed.\n\nNote: The next release candidate will switch all artifacts to require Java 8 bytecode which will force\nyour applications to enable Java 8 bytecode. As of AGP 3.2 there is no cost to this, and there is no\nreason to have it set any lower.\n\n\nVersion 8.8.1 *(2017-08-09)*\n----------------------------\n\n * Fix: Properly emit casts for single-bound view subtypes when `butterknife.debuggable` is set to `false`.\n\n\nVersion 8.8.0 *(2017-08-04)*\n----------------------------\n\n * New: Processor option `butterknife.debuggable` controls whether debug information is generated. When\n   specified as `false`, checks for required views being non-null are elided and casts are no longer guarded\n   with user-friendly error messages. This reduces the amount of generated code for release builds at the\n   expense of less friendly exceptions when something breaks.\n * Deprecate the `findById` methods. Compile against API 26 and use the normal `findViewById` for the same\n   functionality.\n * Fix: Correct `@BindFont` code generation on pre-API 26 builds to pass a `Context` (not a `Resources`) to\n   `ResourceCompat`.\n\n\nVersion 8.7.0 *(2017-07-07)*\n----------------------------\n\n * New: `@BindFont` annotation binds `Typeface` instances with an optional style. Requires support libraries\n   26.0.0-beta1 or newer.\n * New: `@BindAnim` annotation binds `Animation` instances.\n * New: Generate `R2` constants for animation, layout, menu, plurals, styles, and styleables.\n * Fix: Properly catch and re-throw type cast exceptions when method binding arguments do not match.\n\n\nVersion 8.6.0 *(2017-05-16)*\n----------------------------\n\n * Plugin was ported to Kotlin and updated to support future Android Gradle plugin versions.\n * Fix: Properly handle multiple library modules using Butter Knife and defining the same ID.\n * Fix: Use the same classloader of the binding target to load the generated view binding class.\n\n\nVersion 8.5.1 *(2017-01-24)*\n----------------------------\n\n * Fix: Tweak bundled ProGuard rules to only retain the two-argument constructor accessed via reflection.\n\n\nVersion 8.5.0 *(2017-01-23)*\n----------------------------\n\n * Emit `@SuppressLint` when using `@OnTouch` to avoid a lint warning.\n * Migrate lint checks from Lombok AST to JetBrains PSI.\n * Annotations are no longer claimed by the processor.\n * Based on the minimum SDK version (as specified by `butterknife.minSdk` until http://b.android.com/187527 is\n   released) the generated code now changes to use newer APIs when available.\n * Generated classes now include single-argument overloads for `View`, `Activity`, and `Dialog` subclasses.\n * Generated classes are no longer generic.\n * Minimum supported SDK is now 9.\n\n\nVersion 8.4.0 *(2016-08-26)*\n----------------------------\n\n * New: `@BindFloat` annotation for dimensions whose format is of type 'float'. See the annotation for more\n   information.\n * Generated constructors are now annotated with `@UiThread` and non-final, base classes `unbind()` methods\n   are annotated with `@CallSuper`.\n\n\nVersion 8.3.0 *(2016-08-23)*\n----------------------------\n\n * New: Support for Jack compiler in application projects.\n * Fix: Generate ~20% less code and ~40% less methods.\n * Fix: Allow `@BindView` to reference types which are generated by other annotation processors.\n * Experimental: The generated view binding class can now be used directly. This allows ProGuard shrinking,\n   optimization, and obfuscation to work without any rules being needed. For a class `Test`, the binding\n   class will be named `Test_ViewBinding`. Calling its constructor will bind the instance passed in, and\n   the create object is also the implementation of `Unbinder` that can be used to unbind the views.\n   Note: The API of this generated code is subject to backwards-incompatible changes until v9.0.\n\n\nVersion 8.2.1 *(2016-07-11)*\n----------------------------\n\n * Fix: Do not emit `android.R` imports in generated code.\n * Fix: Ensure the processor does not crash when scanning for `R` classes. This can occur when used in a\n   Kotlin project.\n\n\nVersion 8.2.0 *(2016-07-10)*\n----------------------------\n\n * New: Support for library projects. Requires application of a Butter Knife Gradle plugin. See README for\n   details.\n * New: Generated code now emits `R` references instead of raw integer IDs.\n * Fix: `@OnPageChange` listener binding now uses the 'add'/'remove' methods on `ViewPager` instead of 'set'.\n\n\nVersion 8.1.0 *(2016-06-14)*\n----------------------------\n\n * New: Change the structure of generated view binders to optimize for performance and generated code. This\n   should result in faster binding (not that it's slow) and a reduction of methods.\n * Fix: Call the correct method on `TextView` to unbind `@OnTextChanged` uses.\n * Fix: Properly handle package names which contain uppercase letters.\n\n\nVersion 8.0.1 *(2016-04-27)*\n----------------------------\n\n * Fix: ProGuard rules now prevent obfuscation of only types which reference ButterKnife annotations.\n * Eliminate some of the generated machinery when referenced from `final` types.\n\n\nVersion 8.0.0 *(2016-04-25)*\n----------------------------\n\n *  `@Bind` becomes `@BindView` and `@BindViews` (one view and multiple views, respectively).\n *  Calls to `bind` now return an `Unbinder` instance which can be used to `null` references. This replaces\n    the `unbind` API and adds support for being able to clear listeners.\n *  New: `@BindArray` binds `String`, `CharSequence`, and `int` arrays and `TypeArray` to fields.\n *  New: `@BindBitmap` binds `Bitmap` instances from resources to fields.\n *  `@BindDrawable` now supports a `tint` field which accepts a theme attribute.\n *  The runtime and compiler are now split into two artifacts.\n\n    ```groovy\n    compile 'com.jakewharton:butterknife:8.0.0'\n    apt 'com.jakewharton:butterknife-compiler:8.0.0'\n    ```\n *  New: `apply` overloads which accept a single view and arrays of views.\n *  ProGuard rules now ship inside of the library and are included automatically.\n *  `@Optional` annotation is back to mark methods as being optional.\n\n\nVersion 7.0.1 *(2015-06-30)*\n----------------------------\n\n * Fix: Correct `ClassCastException` which occurred when `@Nullable` array bindings had missing views.\n\n\nVersion 7.0.0 *(2015-06-27)*\n----------------------------\n\n * `@Bind` replaces `@InjectView` and `@InjectViews`.\n * `ButterKnife.bind` and `ButterKnife.unbind` replaces `ButterKnife.inject` and `ButterKnife.reset`, respectively.\n * `@Optional` has been removed. Use `@Nullable` from the 'support-annotations' library, or any other annotation\n   named \"Nullable\".\n * New: Resource binding annotations!\n   * `@BindBool` binds an `R.bool` ID to a `boolean` field.\n   * `@BindColor` binds an `R.color` ID to an `int` or `ColorStateList` field.\n   * `@BindDimen` binds an `R.dimen` ID to an `int` (for pixel size) or `float` (for exact value) field.\n   * `@BindDrawable` binds an `R.drawable` ID to a `Drawable` field.\n   * `@BindInt` binds an `R.int` ID to an `int` field.\n   * `@BindString` binds an `R.string` ID to a `String` field.\n * Fix: Missing views will be filtered out from list and array bindings.\n * Note: If you are using Proguard, the generated class name has changed from being suffixed with `$$ViewInjector`\n   to `$$ViewBinder`.\n\n\nVersion 6.1.0 *(2015-01-29)*\n----------------------------\n\n * New: Support for injecting interface types everywhere that views were previously supported (e.g., `Checkable`).\n * Eliminate reflection-based method invocation for injection and resetting. This makes performance slightly faster\n   (although if you are worried about the performance of Butter Knife you have other problems). The only reflection\n   in the library is a single `Class.forName` lookup for each type.\n\n\nVersion 6.0.0 *(2014-10-27)*\n----------------------------\n\n * New: Listeners can bind to the root view being injected by omitting a view ID on the annotation.\n * New: Exceptions thrown from missing views now include the human-readable ID name (e.g., 'button1').\n * Specifying multiple fields binding to the same ID is now considered an error.\n * `findById` overload for view lookup on `Dialog` instances.\n * Experimental: Click listeners are now globally debounced per frame. This means that only a single click\n   will be processed per frame preventing race conditions due to queued input events.\n * Experimental: Multiple methods can bind to the same listener provided that listener's callback method\n   does not require a return value.\n\n\nVersion 5.1.2 *(2014-08-01)*\n----------------------------\n\n * Report an error if the annotations are on a class inside the `android.*` or `java.*`\n   package. Since we ignore these packages in the runtime, injection would never work.\n\n\nVersion 5.1.1 *(2014-06-19)*\n----------------------------\n\n * Fix: Correct rare `ClassCastException` when unwinding an `InvocationTargetException`.\n\n\nVersion 5.1.0 *(2014-05-20)*\n----------------------------\n\n * New listener!\n   * `View`: `@OnTouch`.\n * Fix: `@Optional` now correctly works for `@InjectViews` fields.\n * Fix: Correct erasure problem which may have prevented the processor from running in Eclipse.\n\n\nVersion 5.0.1 *(2014-05-04)*\n----------------------------\n\n * New: Support `Dialog` as injection source.\n * Fix: Unwrap `InvocationTargetException` causes for more helpful exceptions.\n\n\nVersion 5.0.0 *(2014-04-21)*\n----------------------------\n\n * New: `@InjectViews` annotation groups multiple IDs into a `List` or array.\n * New: `ButterKnife.apply` method applies an `Action`, `Setter`, or Android `Property` to views in\n   a list.\n * New listeners!\n   * `ViewPager`: `@OnPageChange`.\n   * `AdapterView`: `@OnItemSelected`.\n   * `TextView`: `@OnTextChanged`.\n * New: Multi-method listener support. Specify a `callback` argument to choose which method the\n   binding is for. *(See `@OnItemSelected` for an example)*\n * Fix: Support for generic types which are declared with an upper-bound.\n * Fix: Use less sophisticated method injection inspection in the annotation processor. The previous\n   method caused problems with some Eclipse configurations.\n\n\nVersion 4.0.1 *(2013-11-25)*\n----------------------------\n\n * Fix: Correct a problem preventing the annotation processor to access Android types when certain\n   `javac` configurations were used to build.\n\n\nVersion 4.0.0 *(2013-11-25)*\n----------------------------\n\n`Views` class is now named `ButterKnife`\n\n * New listeners!\n   * `View`: `@OnLongClick` and `@OnFocusChanged`.\n   * `TextView`: `@OnEditorAction`.\n   * `AdapterView`: `@OnItemClick` and `@OnItemLongClick`.\n   * `CompoundButton`: `@OnCheckedChanged`.\n * New: Views are now only checked to be `null` once if at least one of the fields and/or methods\n   lack the `@Optional` annotation.\n * Fix: Do no emit redundant casts to `View` for methods.\n\n\nVersion 3.0.1 *(2013-11-12)*\n----------------------------\n\n * Fix: Do not emit redundant casts to `View`.\n\n\nVersion 3.0.0 *(2013-09-10)*\n----------------------------\n\n * New: Injections are now required. An exception will be thrown if a view is\n   not found. Add `@Optional` annotation to suppress this verification.\n\n\nVersion 2.0.1 *(2013-07-18)*\n----------------------------\n\n * New: Control debug logging via `Views.setDebug`.\n\n\nVersion 2.0.0 *(2013-07-16)*\n----------------------------\n\n * New: `@OnClick` annotation for binding click listeners to methods!\n\n\nVersion 1.4.0 *(2013-06-03)*\n----------------------------\n\n * New: `Views.reset` for settings injections back to `null` in a fragment's\n   `onDestroyView` callback.\n * Fix: Support parent class injection when the parent class has generics.\n\n\nVersion 1.3.2 *(2013-04-27)*\n----------------------------\n\n * Multiple injections of the same view ID only require a single find call.\n * Fix: Ensure injection happens on classes who do not have any injections but\n   their superclasses do.\n\n\nVersion 1.3.1 *(2013-04-12)*\n----------------------------\n\n * Fix: Parent class inflater resolution now generates correct code.\n\n\nVersion 1.3.0 *(2013-03-26)*\n----------------------------\n\n * New: Injection on objects that have zero `@InjectView`-annotated fields will\n   no longer throw an exception.\n\n\nVersion 1.2.2 *(2013-03-11)*\n----------------------------\n\n * Fix: Prevent annotations on private classes.\n\n\nVersion 1.2.1 *(2013-03-11)*\n----------------------------\n\n * Fix: Correct generated code for parent class inflation.\n * Fix: Allow injection on `protected`-scoped fields.\n\n\nVersion 1.2.0 *(2013-05-07)*\n----------------------------\n\n * Support injection on any object using an Activity as the view root.\n * Support injection on views for their children.\n * Fix: Annotation errors now appear on the affected field in IDEs.\n\n\nVersion 1.1.1 *(2013-05-06)*\n----------------------------\n\n * Fix: Verify that the target type extends from `View`.\n * Fix: Correct package name resolution in Eclipse 4.2\n\n\nVersion 1.1.0 *(2013-03-05)*\n----------------------------\n\n * Perform injection on any object by passing a view root.\n * Fix: Correct naming of static inner-class injection points.\n * Fix: Enforce `findById` can only be used with child classes of `View`.\n\n\nVersion 1.0.0 *(2013-03-05)*\n----------------------------\n\nInitial release.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.09,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4,
          "content": "Butter Knife\n============\n\n**Attention**: This tool is now deprecated. Please switch to\n[view binding](https://developer.android.com/topic/libraries/view-binding).\nExisting versions will continue to work, obviously, but only critical bug fixes for integration\nwith AGP will be considered. Feature development and general bug fixes have stopped.\n\n![Logo](website/static/logo.png)\n\nField and method binding for Android views which uses annotation processing to generate boilerplate\ncode for you.\n\n * Eliminate `findViewById` calls by using `@BindView` on fields.\n * Group multiple views in a list or array. Operate on all of them at once with actions,\n   setters, or properties.\n * Eliminate anonymous inner-classes for listeners by annotating methods with `@OnClick` and others.\n * Eliminate resource lookups by using resource annotations on fields.\n\n```java\nclass ExampleActivity extends Activity {\n  @BindView(R.id.user) EditText username;\n  @BindView(R.id.pass) EditText password;\n\n  @BindString(R.string.login_error) String loginErrorMessage;\n\n  @OnClick(R.id.submit) void submit() {\n    // TODO call server...\n  }\n\n  @Override public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.simple_activity);\n    ButterKnife.bind(this);\n    // TODO Use fields...\n  }\n}\n```\n\nFor documentation and additional information see [the website][3].\n\n__Remember: A butter knife is like a [dagger][1], only infinitely less sharp.__\n\n\n\nDownload\n--------\n\n```groovy\nandroid {\n  ...\n  // Butterknife requires Java 8.\n  compileOptions {\n    sourceCompatibility JavaVersion.VERSION_1_8\n    targetCompatibility JavaVersion.VERSION_1_8\n  }\n}\n\ndependencies {\n  implementation 'com.jakewharton:butterknife:10.2.3'\n  annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'\n}\n```\n\nIf you are using Kotlin, replace `annotationProcessor` with `kapt`.\n\nSnapshots of the development version are available in [Sonatype's `snapshots` repository][snap].\n\n\n\nLibrary projects\n--------------------\n\nTo use Butter Knife in a library, add the plugin to your `buildscript`:\n\n```groovy\nbuildscript {\n  repositories {\n    mavenCentral()\n    google()\n  }\n  dependencies {\n    classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'\n  }\n}\n```\n\nand then apply it in your module:\n\n```groovy\napply plugin: 'com.android.library'\napply plugin: 'com.jakewharton.butterknife'\n```\n\nNow make sure you use `R2` instead of `R` inside all Butter Knife annotations.\n\n```java\nclass ExampleActivity extends Activity {\n  @BindView(R2.id.user) EditText username;\n  @BindView(R2.id.pass) EditText password;\n...\n}\n```\n\n\n\nLicense\n-------\n\n    Copyright 2013 Jake Wharton\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n\n\n [1]: https://dagger.dev/\n [2]: https://search.maven.org/remote_content?g=com.jakewharton&a=butterknife&v=LATEST\n [3]: http://jakewharton.github.com/butterknife/\n [snap]: https://oss.sonatype.org/content/repositories/snapshots/\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 0.79,
          "content": "Releasing\n========\n\n 1. Change the version in `gradle.properties` to a non-SNAPSHOT version.\n 2. Update the `CHANGELOG.md` for the impending release.\n 3. Update the `README.md` with the new version.\n 4. `git commit -am \"Prepare for release X.Y.Z.\"` (where X.Y.Z is the new version)\n 5. `./gradlew clean uploadArchives`.\n 6. Visit [Sonatype Nexus](https://oss.sonatype.org/) and promote the artifact.\n 7. `git tag -a X.Y.X -m \"Version X.Y.Z\"` (where X.Y.Z is the new version)\n 8. Update the `gradle.properties` to the next SNAPSHOT version.\n 9. `git commit -am \"Prepare next development version.\"`\n 10. `git push && git push --tags`\n 11. Update the two sample modules to point to the newly released version.\n\nIf step 5 or 6 fails, drop the Sonatype repo, fix the problem, commit, and start again at step 5.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 3.47,
          "content": "apply plugin: 'com.github.ben-manes.versions'\n\nbuildscript {\n  ext.versions = [\n      'minSdk': 14,\n      'compileSdk': 28,\n\n      'androidTools': '26.2.0',\n      'kotlin': '1.2.71',\n      'incap' : '0.2',\n\n      'release': '8.8.1',\n  ]\n\n  ext.deps = [\n      android: [\n          'runtime': 'com.google.android:android:4.1.1.4',\n          'gradlePlugin': \"com.android.tools.build:gradle:3.3.0\",\n      ],\n      'androidx': [\n          'core': \"androidx.core:core:1.0.0\",\n          'viewpager': \"androidx.viewpager:viewpager:1.0.0\",\n          'annotations': \"androidx.annotation:annotation:1.0.0\",\n          'test': [\n              'runner': 'androidx.test:runner:1.1.0',\n              'rules': 'androidx.test:rules:1.1.0',\n          ],\n      ],\n      'lint': [\n          'core': \"com.android.tools.lint:lint:${versions.androidTools}\",\n          'api': \"com.android.tools.lint:lint-api:${versions.androidTools}\",\n          'checks': \"com.android.tools.lint:lint-checks:${versions.androidTools}\",\n          'tests': \"com.android.tools.lint:lint-tests:${versions.androidTools}\",\n      ],\n      javapoet: 'com.squareup:javapoet:1.10.0',\n      junit: 'junit:junit:4.12',\n      truth: 'com.google.truth:truth:0.42',\n      compiletesting: 'com.google.testing.compile:compile-testing:0.15',\n      'auto': [\n          'service': 'com.google.auto.service:auto-service:1.0-rc4',\n          'common': 'com.google.auto:auto-common:0.10',\n      ],\n      'guava': 'com.google.guava:guava:24.0-jre',\n      'release': [\n          'runtime': \"com.jakewharton:butterknife:${versions.release}\",\n          'compiler': \"com.jakewharton:butterknife-compiler:${versions.release}\"\n      ],\n      'kotlin': [\n          'stdLibJdk8': \"org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}\",\n      ],\n      'incap': [\n          'runtime': \"net.ltgt.gradle.incap:incap:${versions.incap}\",\n          'processor': \"net.ltgt.gradle.incap:incap-processor:${versions.incap}\",\n      ]\n  ]\n\n  repositories {\n    mavenCentral()\n    google()\n    jcenter()\n    gradlePluginPortal()\n  }\n\n  dependencies {\n    classpath 'com.android.tools.build:gradle:3.2.0'\n    classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}\"\n    classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'\n    classpath 'net.ltgt.gradle:gradle-errorprone-plugin:0.0.16'\n  }\n}\n\nsubprojects { project ->\n  group = GROUP\n  version = VERSION_NAME\n\n  repositories {\n    mavenCentral()\n    google()\n    jcenter()\n  }\n\n  apply plugin: 'net.ltgt.errorprone'\n\n  dependencies {\n    errorprone 'com.google.errorprone:error_prone_core:2.3.1'\n  }\n\n  // TODO figure out why this causes codegen to fail in android tests.\n  //def nullaway = dependencies.create('com.uber.nullaway:nullaway:0.5.5')\n  //configurations.all { Configuration configuration ->\n  //  if (configuration.name.endsWith('nnotationProcessor')) {\n  //    configuration.dependencies.add(nullaway)\n  //  }\n  //}\n  //\n  //tasks.withType(JavaCompile) {\n  //  options.compilerArgs += [\n  //      '-Xep:NullAway:ERROR',\n  //      '-XepOpt:NullAway:AnnotatedPackages=butterknife',\n  //  ]\n  //}\n\n  if (!project.name.equals('butterknife-gradle-plugin')) {\n    apply plugin: 'checkstyle'\n\n    task checkstyle(type: Checkstyle) {\n      configFile rootProject.file('checkstyle.xml')\n      source 'src/main/java'\n      ignoreFailures false\n      showViolations true\n      include '**/*.java'\n\n      classpath = files()\n    }\n\n    afterEvaluate {\n      if (project.tasks.findByName('check')) {\n        check.dependsOn('checkstyle')\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "butterknife-annotations",
          "type": "tree",
          "content": null
        },
        {
          "name": "butterknife-compiler",
          "type": "tree",
          "content": null
        },
        {
          "name": "butterknife-gradle-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "butterknife-integration-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "butterknife-lint",
          "type": "tree",
          "content": null
        },
        {
          "name": "butterknife-reflect",
          "type": "tree",
          "content": null
        },
        {
          "name": "butterknife-runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "butterknife",
          "type": "tree",
          "content": null
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 5.01,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n    \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n    \"http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n  <!--module name=\"NewlineAtEndOfFile\"/-->\n  <module name=\"FileLength\"/>\n  <module name=\"FileTabCharacter\"/>\n\n  <!-- Trailing spaces -->\n  <module name=\"RegexpSingleline\">\n    <property name=\"format\" value=\"\\s+$\"/>\n    <property name=\"message\" value=\"Line has trailing spaces.\"/>\n  </module>\n\n  <!-- Space after 'for' and 'if' -->\n  <module name=\"RegexpSingleline\">\n    <property name=\"format\" value=\"^\\s*(for|if)\\b[^ ]\"/>\n    <property name=\"message\" value=\"Space needed before opening parenthesis.\"/>\n  </module>\n\n  <!-- For each spacing -->\n  <module name=\"RegexpSingleline\">\n    <property name=\"format\" value=\"^\\s*for \\(.*?([^ ]:|:[^ ])\"/>\n    <property name=\"message\" value=\"Space needed around ':' character.\"/>\n  </module>\n\n  <module name=\"TreeWalker\">\n    <!--<property name=\"cacheFile\" value=\"${checkstyle.cache.file}\"/>-->\n\n    <!-- Checks for Javadoc comments.                     -->\n    <!-- See http://checkstyle.sf.net/config_javadoc.html -->\n    <!--module name=\"JavadocMethod\"/-->\n    <!--module name=\"JavadocType\"/-->\n    <!--module name=\"JavadocVariable\"/-->\n    <!--module name=\"JavadocStyle\"/-->\n\n\n    <!-- Checks for Naming Conventions.                  -->\n    <!-- See http://checkstyle.sf.net/config_naming.html -->\n    <module name=\"ConstantName\"/>\n    <module name=\"LocalFinalVariableName\"/>\n    <module name=\"LocalVariableName\"/>\n    <module name=\"MemberName\"/>\n    <module name=\"MethodName\">\n      <property name=\"format\" value=\"^[a-z][a-zA-Z0-9_]*$\"/>\n    </module>\n    <module name=\"PackageName\"/>\n    <module name=\"ParameterName\"/>\n    <module name=\"StaticVariableName\"/>\n    <module name=\"TypeName\">\n      <property name=\"format\" value=\"^[A-Z][a-zA-Z0-9_]*$\"/>\n    </module>\n\n\n    <!-- Checks for imports                              -->\n    <!-- See http://checkstyle.sf.net/config_import.html -->\n    <module name=\"AvoidStarImport\"/>\n    <module name=\"IllegalImport\"/>\n    <module name=\"RedundantImport\"/>\n    <module name=\"UnusedImports\">\n      <property name=\"processJavadoc\" value=\"true\"/>\n    </module>\n\n\n    <!-- Checks for Size Violations.                    -->\n    <!-- See http://checkstyle.sf.net/config_sizes.html -->\n    <module name=\"LineLength\">\n      <property name=\"max\" value=\"100\"/>\n    </module>\n    <!--<module name=\"MethodLength\"/>-->\n    <!--<module name=\"ParameterNumber\"/>-->\n\n\n    <!-- Checks for whitespace                               -->\n    <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n    <module name=\"GenericWhitespace\"/>\n    <module name=\"EmptyForIteratorPad\"/>\n    <module name=\"MethodParamPad\"/>\n    <module name=\"NoWhitespaceAfter\">\n      <property name=\"tokens\" value=\"INC, DEC, UNARY_MINUS, UNARY_PLUS, BNOT, LNOT, DOT, ARRAY_DECLARATOR, INDEX_OP\"/>\n    </module>\n    <module name=\"NoWhitespaceBefore\"/>\n    <module name=\"OperatorWrap\"/>\n    <module name=\"ParenPad\"/>\n    <module name=\"TypecastParenPad\"/>\n    <module name=\"WhitespaceAfter\"/>\n    <module name=\"WhitespaceAround\"/>\n\n\n    <!-- Modifier Checks                                    -->\n    <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n    <!--module name=\"ModifierOrder\"/-->\n    <module name=\"RedundantModifier\"/>\n\n\n    <!-- Checks for blocks. You know, those {}'s         -->\n    <!-- See http://checkstyle.sf.net/config_blocks.html -->\n    <module name=\"AvoidNestedBlocks\">\n        <property name=\"allowInSwitchCase\" value=\"true\"/>\n    </module>\n    <!--<module name=\"EmptyBlock\"/>-->\n    <module name=\"LeftCurly\"/>\n    <module name=\"NeedBraces\">\n        <property name=\"tokens\" value=\"LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE\"/>\n    </module>\n    <module name=\"RightCurly\"/>\n\n\n    <!-- Checks for common coding problems               -->\n    <!-- See http://checkstyle.sf.net/config_coding.html -->\n    <!--<module name=\"AvoidInlineConditionals\"/>-->\n    <module name=\"CovariantEquals\"/>\n    <!--<module name=\"DoubleCheckedLocking\"/>-->\n    <module name=\"EmptyStatement\"/>\n    <module name=\"EqualsAvoidNull\"/>\n    <module name=\"EqualsHashCode\"/>\n    <!--<module name=\"HiddenField\"/>-->\n    <module name=\"IllegalInstantiation\"/>\n    <module name=\"InnerAssignment\"/>\n    <!--<module name=\"MagicNumber\"/>-->\n    <module name=\"MissingSwitchDefault\"/>\n    <module name=\"SimplifyBooleanExpression\"/>\n    <module name=\"SimplifyBooleanReturn\"/>\n\n    <!-- Checks for class design                         -->\n    <!-- See http://checkstyle.sf.net/config_design.html -->\n    <!--module name=\"DesignForExtension\"/-->\n    <!--module name=\"FinalClass\"/-->\n    <module name=\"HideUtilityClassConstructor\"/>\n    <module name=\"InterfaceIsType\"/>\n    <!--<module name=\"VisibilityModifier\"/>-->\n\n\n    <!-- Miscellaneous other checks.                   -->\n    <!-- See http://checkstyle.sf.net/config_misc.html -->\n    <module name=\"ArrayTypeStyle\"/>\n    <!--module name=\"FinalParameters\"/-->\n    <module name=\"TodoComment\"/>\n    <module name=\"UpperEll\"/>\n  </module>\n</module>\n"
        },
        {
          "name": "deploy_website.sh",
          "type": "blob",
          "size": 0.91,
          "content": "#!/bin/bash\n\nset -ex\n\nREPO=\"https://github.com/JakeWharton/butterknife.git\"\nGROUP_ID=\"com.jakewharton\"\nARTIFACT_ID=\"butterknife\"\n\nDIR=temp-clone\n\n# Delete any existing temporary website clone\nrm -rf $DIR\n\n# Clone the current repo into temp folder\ngit clone $REPO $DIR\n\n# Move working directory into temp folder\ncd $DIR\n\n# Checkout and track the gh-pages branch\ngit checkout -t origin/gh-pages\n\n# Delete everything\nrm -rf *\n\n# Copy website files from real repo\ncp -R ../website/* .\n\n# Download the latest javadoc\ncurl -L \"http://repository.sonatype.org/service/local/artifact/maven/redirect?r=central-proxy&g=$GROUP_ID&a=$ARTIFACT_ID&v=LATEST&c=javadoc\" > javadoc.zip\nmkdir javadoc\nunzip javadoc.zip -d javadoc\nrm javadoc.zip\n\n# Stage all files in git and create a commit\ngit add .\ngit add -u\ngit commit -m \"Website at $(date)\"\n\n# Push the new files up to GitHub\ngit push origin gh-pages\n\n# Delete our temp folder\ncd ..\nrm -rf $DIR\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.67,
          "content": "GROUP=com.jakewharton\nVERSION_NAME=10.2.4-SNAPSHOT\n\nPOM_DESCRIPTION=Field and method binding for Android views.\n\nPOM_URL=https://github.com/JakeWharton/butterknife/\nPOM_SCM_URL=https://github.com/JakeWharton/butterknife/\nPOM_SCM_CONNECTION=scm:git:git://github.com/JakeWharton/butterknife.git\nPOM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/JakeWharton/butterknife.git\n\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\n\nPOM_DEVELOPER_ID=jakewharton\nPOM_DEVELOPER_NAME=Jake Wharton\n\norg.gradle.jvmargs=-Xmx1536M\n\n# TODO https://issuetracker.google.com/issues/73450622\nandroid.enableAapt2=false\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.17,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.21,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.34,
          "content": "include ':butterknife'\ninclude ':butterknife-annotations'\ninclude ':butterknife-compiler'\ninclude ':butterknife-gradle-plugin'\ninclude ':butterknife-integration-test'\ninclude ':butterknife-lint'\ninclude ':butterknife-reflect'\ninclude ':butterknife-runtime'\n\n//include ':sample:app'\n//include ':sample:library'\n\nrootProject.name = 'butterknife-parent'\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}