{
  "metadata": {
    "timestamp": 1736557760256,
    "page": 922,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sindresorhus/awesome-electron",
      "stars": 26036,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.13,
          "content": "root = true\n\n[*]\nindent_style = tab\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.04,
          "content": "* text=auto eol=lf\nreadme.md merge=union\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 3.15,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at sindresorhus@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "contributing.md",
          "type": "blob",
          "size": 2.57,
          "content": "# Contribution Guidelines\n\nPlease note that this project is released with a [Contributor Code of Conduct](code-of-conduct.md). By participating in this project you agree to abide by its terms.\n\n---\n\nEnsure your pull request adheres to the following guidelines:\n\n- **The pull request should have a useful title and include a link to the thing you're submitting and why it should be included.**\n- Don't open a Draft / WIP pull request while you work on the guidelines. A pull request should be 100% ready and should adhere to all the guidelines when you open it.\n- If you just created something, wait at least 30 days before submitting.\n- The project repo should have at least 40 stars.\n- Search previous suggestions before making a new one, as yours may be a duplicate.\n- Boilerplates are not accepted as most boilerplates are too opinionated and low-quality and I don't have time to comment on everything they need to improve.\n- If you're submitting a closed source app, include evidence of it being built with Electron.\n- The \"Closed Source\" section has a very high bar for acceptance. You're a lot more likely to get accepted if you link to a blog post on how you built the app. Don't worry if your submission is declined, you can still submit your app to the [official Electron apps list](https://electronjs.org/apps).\n- Submitted open source apps should have a English readme, screenshot of the app in the readme, and a binary for at least one OS, preferably macOS, Linux and Windows.\n- Submitted packages should be tested and documented.\n- Make an individual pull request for each suggestion.\n- Use the following format: `[title](link) - Description.`\n- Additions should be added to the bottom of the relevant section.\n- Keep descriptions short and simple, but descriptive.\n- Start the description with a capital and end with a full stop/period.\n- Don't mention `Electron` in the description as it's implied.\n- Don't start the description with `A` or `An`.\n- Check your spelling and grammar.\n- Make sure your text editor is set to remove trailing whitespace.\n- New categories or improvements to the existing categorization are welcome, but should be done in a separate pull request.\n\nThank you for your suggestion!\n\n### Updating your PR\n\nA lot of times, making a PR adhere to the standards above can be difficult. If the maintainers notice anything that we'd like changed, we'll ask you to edit your PR before we merge it. If you're not sure how to do that, [here is a guide](https://github.com/RichardLitt/docs/blob/master/amending-a-commit-guide.md) on the different ways you can update your PR so that we can merge it.\n"
        },
        {
          "name": "electron-logo.svg",
          "type": "blob",
          "size": 1.86,
          "content": "<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0.3 0.1 137.7 149.3\"><g fill=\"#47848F\"><path d=\"M48.8 32.2c-19.5-3.6-34.9.2-41.1 10.8-4.6 7.9-3.3 18.5 3.2 29.7.5 1 1.8 1.3 2.7.7 1-.5 1.3-1.8.7-2.7C8.5 60.6 7.4 51.5 11.1 45 16.2 36.2 30 32.8 48 36.1c1.1.2 2.1-.5 2.3-1.6s-.4-2.1-1.5-2.3zM21.1 86.4c7.9 8.7 18.1 16.8 29.8 23.5 28.3 16.3 58.4 20.7 73.3 10.6.9-.6 1.1-1.9.5-2.8-.6-.9-1.9-1.1-2.8-.5-13.3 9.1-41.9 4.9-69-10.7C41.6 100 31.6 92.1 24 83.7c-.7-.8-2-.9-2.8-.1-.8.7-.9 2-.1 2.8z\"/><path d=\"M119.4 84c12.8-15.1 17.2-30.3 11.1-40.9-4.5-7.8-14.1-11.9-26.7-12.1-1.1 0-2 .9-2 2s.9 2 2 2c11.4.1 19.6 3.7 23.3 10.1 5.1 8.8 1.1 22.4-10.7 36.3-.7.8-.6 2.1.2 2.8.8.7 2.1.6 2.8-.2zM86.6 32.8C75.1 35.3 62.8 40.1 51 46.9 21.7 63.8 2.7 88.7 5.3 106.7c.2 1.1 1.2 1.8 2.3 1.7 1.1-.2 1.8-1.2 1.7-2.3C6.9 90.1 25 66.6 53 50.4c11.5-6.6 23.4-11.3 34.5-13.7 1.1-.2 1.8-1.3 1.5-2.4-.3-1-1.3-1.7-2.4-1.5z\"/><path d=\"M39.3 119.2c6.7 18.6 17.6 30.1 29.9 30.1 9 0 17.2-6.1 23.7-16.9.6-.9.3-2.2-.7-2.7-.9-.6-2.2-.3-2.7.7-5.8 9.7-12.9 14.9-20.3 14.9-10.2 0-19.9-10.2-26.1-27.5-.4-1-1.5-1.6-2.6-1.2-1.1.4-1.6 1.6-1.2 2.6zm61-3.6c3.5-11 5.3-23.8 5.3-37.1 0-33.1-11.6-61.7-28.1-69-1-.4-2.2 0-2.6 1-.4 1 0 2.2 1 2.6 14.7 6.5 25.7 33.6 25.7 65.4 0 12.9-1.8 25.2-5.1 35.9-.3 1.1.3 2.2 1.3 2.5 1 .3 2.1-.3 2.5-1.3zm37.6-2c0-5.3-4.3-9.6-9.6-9.6s-9.6 4.3-9.6 9.6 4.3 9.6 9.6 9.6c5.4 0 9.6-4.3 9.6-9.6zm-4 0c0 3.1-2.5 5.6-5.6 5.6-3.1 0-5.6-2.5-5.6-5.6s2.5-5.6 5.6-5.6c3.1 0 5.6 2.5 5.6 5.6zM9.8 123.2c5.3 0 9.6-4.3 9.6-9.6s-4.3-9.6-9.6-9.6-9.6 4.3-9.6 9.6 4.3 9.6 9.6 9.6zm0-4c-3.1 0-5.6-2.5-5.6-5.6s2.5-5.6 5.6-5.6 5.6 2.5 5.6 5.6-2.5 5.6-5.6 5.6z\"/><path d=\"M69.2 19.2c5.3 0 9.6-4.3 9.6-9.6S74.5 0 69.2 0s-9.6 4.3-9.6 9.6 4.3 9.6 9.6 9.6zm0-4c-3.1 0-5.6-2.5-5.6-5.6S66.1 4 69.2 4c3.1 0 5.6 2.5 5.6 5.6s-2.6 5.6-5.6 5.6zm1.4 70.1c-3.7.8-7.4-1.6-8.2-5.3-.8-3.7 1.6-7.4 5.3-8.2 3.7-.8 7.4 1.6 8.2 5.3.8 3.7-1.5 7.4-5.3 8.2z\"/></g></svg>"
        },
        {
          "name": "license",
          "type": "blob",
          "size": 6.88,
          "content": "Creative Commons Legal Code\n\nCC0 1.0 Universal\n\n    CREATIVE COMMONS CORPORATION IS NOT A LAW FIRM AND DOES NOT PROVIDE\n    LEGAL SERVICES. DISTRIBUTION OF THIS DOCUMENT DOES NOT CREATE AN\n    ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES THIS\n    INFORMATION ON AN \"AS-IS\" BASIS. CREATIVE COMMONS MAKES NO WARRANTIES\n    REGARDING THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS\n    PROVIDED HEREUNDER, AND DISCLAIMS LIABILITY FOR DAMAGES RESULTING FROM\n    THE USE OF THIS DOCUMENT OR THE INFORMATION OR WORKS PROVIDED\n    HEREUNDER.\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator\nand subsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for\nthe purpose of contributing to a commons of creative, cultural and\nscientific works (\"Commons\") that the public can reliably and without fear\nof later claims of infringement build upon, modify, incorporate in other\nworks, reuse and redistribute as freely as possible in any form whatsoever\nand for any purposes, including without limitation commercial purposes.\nThese owners may contribute to the Commons to promote the ideal of a free\nculture and the further production of creative, cultural and scientific\nworks, or to gain reputation or greater distribution for their Work in\npart through the use and efforts of others.\n\nFor these and/or other purposes and motivations, and without any\nexpectation of additional consideration or compensation, the person\nassociating CC0 with a Work (the \"Affirmer\"), to the extent that he or she\nis an owner of Copyright and Related Rights in the Work, voluntarily\nelects to apply CC0 to the Work and publicly distribute the Work under its\nterms, with knowledge of his or her Copyright and Related Rights in the\nWork and the meaning and intended legal effect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not\nlimited to, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display,\n     communicate, and translate a Work;\n ii. moral rights retained by the original author(s) and/or performer(s);\niii. publicity and privacy rights pertaining to a person's image or\n     likeness depicted in a Work;\n iv. rights protecting against unfair competition in regards to a Work,\n     subject to the limitations in paragraph 4(a), below;\n  v. rights protecting the extraction, dissemination, use and reuse of data\n     in a Work;\n vi. database rights (such as those arising under Directive 96/9/EC of the\n     European Parliament and of the Council of 11 March 1996 on the legal\n     protection of databases, and under any national implementation\n     thereof, including any amended or successor version of such\n     directive); and\nvii. other similar, equivalent or corresponding rights throughout the\n     world based on applicable law or treaty, and any national\n     implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention\nof, applicable law, Affirmer hereby overtly, fully, permanently,\nirrevocably and unconditionally waives, abandons, and surrenders all of\nAffirmer's Copyright and Related Rights and associated claims and causes\nof action, whether now known or unknown (including existing as well as\nfuture claims and causes of action), in the Work (i) in all territories\nworldwide, (ii) for the maximum duration provided by applicable law or\ntreaty (including future time extensions), (iii) in any current or future\nmedium and for any number of copies, and (iv) for any purpose whatsoever,\nincluding without limitation commercial, advertising or promotional\npurposes (the \"Waiver\"). Affirmer makes the Waiver for the benefit of each\nmember of the public at large and to the detriment of Affirmer's heirs and\nsuccessors, fully intending that such Waiver shall not be subject to\nrevocation, rescission, cancellation, termination, or any other legal or\nequitable action to disrupt the quiet enjoyment of the Work by the public\nas contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason\nbe judged legally invalid or ineffective under applicable law, then the\nWaiver shall be preserved to the maximum extent permitted taking into\naccount Affirmer's express Statement of Purpose. In addition, to the\nextent the Waiver is so judged Affirmer hereby grants to each affected\nperson a royalty-free, non transferable, non sublicensable, non exclusive,\nirrevocable and unconditional license to exercise Affirmer's Copyright and\nRelated Rights in the Work (i) in all territories worldwide, (ii) for the\nmaximum duration provided by applicable law or treaty (including future\ntime extensions), (iii) in any current or future medium and for any number\nof copies, and (iv) for any purpose whatsoever, including without\nlimitation commercial, advertising or promotional purposes (the\n\"License\"). The License shall be deemed effective as of the date CC0 was\napplied by Affirmer to the Work. Should any part of the License for any\nreason be judged legally invalid or ineffective under applicable law, such\npartial invalidity or ineffectiveness shall not invalidate the remainder\nof the License, and in such case Affirmer hereby affirms that he or she\nwill not (i) exercise any of his or her remaining Copyright and Related\nRights in the Work or (ii) assert any associated claims and causes of\naction with respect to the Work, in either case contrary to Affirmer's\nexpress Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n a. No trademark or patent rights held by Affirmer are waived, abandoned,\n    surrendered, licensed or otherwise affected by this document.\n b. Affirmer offers the Work as-is and makes no representations or\n    warranties of any kind concerning the Work, express, implied,\n    statutory or otherwise, including without limitation warranties of\n    title, merchantability, fitness for a particular purpose, non\n    infringement, or the absence of latent or other defects, accuracy, or\n    the present or absence of errors, whether or not discoverable, all to\n    the greatest extent permissible under applicable law.\n c. Affirmer disclaims responsibility for clearing rights of other persons\n    that may apply to the Work or any use thereof, including without\n    limitation any person's Copyright and Related Rights in the Work.\n    Further, Affirmer disclaims responsibility for obtaining any necessary\n    consents, permissions or other rights required for any use of the\n    Work.\n d. Affirmer understands and acknowledges that Creative Commons is not a\n    party to this document and has no duty or obligation with respect to\n    this CC0 or use of the Work.\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 24.79,
          "content": "# Awesome Electron [![Awesome](https://awesome.re/badge.svg)](https://awesome.re)\n\n[<img src=\"electron-logo.svg\" align=\"right\" width=\"100\">](https://electronjs.org)\n\n> Useful resources for creating apps with [Electron](https://electronjs.org)\n\nElectron is an open-source framework for creating desktop apps using web technologies. It combines the Chromium rendering engine and the Node.js runtime.\n\n<br>\n\n---\n\n<br>\n<br>\n<div align=\"center\">\n\t<sub>Check out my macOS app</sub>\n\t<br>\n\t<h2>\n\t\t<a href=\"https://sindresorhus.com/menu-bar-spacing\">Menu Bar Spacing</a>\n\t\t<br>\n\t\t<sup>Customize the gap between menu bar items on macOS</sup>\n\t</h2>\n</div>\n<br>\n<br>\n\n---\n\n<br>\n\n## Contents\n\n- [Apps](#apps)\n- [Boilerplates](#boilerplates)\n- [Tools](#tools)\n- [Components](#components)\n- [Documentation](#documentation)\n- [Articles](#articles)\n- [Books](#books)\n- [Videos](#videos)\n- [Podcasts](#podcasts)\n- [Community](#community)\n- [Related](#related)\n\n## Apps\n\nMade with Electron.\n\n### Open Source\n\n###### Featured\n\n- [WebTorrent](https://github.com/feross/webtorrent-app) - Streaming torrent client.\n- [Min](https://github.com/minbrowser/min) - Minimal web browser.\n- [Hyper](https://github.com/zeit/hyper) - Terminal.\n- [Visual Studio Code](https://github.com/Microsoft/vscode) - Cross-platform IDE.\n\n###### Other\n\n- [Git-it](https://github.com/jlord/git-it-electron) - Teaches you Git and GitHub.\n- [Caprine](https://github.com/sindresorhus/caprine) - Unofficial Facebook Messenger app.\n- [Simplenote](https://github.com/Automattic/simplenote-electron) - Note keeper.\n- [Abricotine](https://github.com/brrd/Abricotine) - Markdown editor with inline preview.\n- [Kap](https://github.com/wulkano/kap) - Screen recorder with GIF support.\n- [Medis](https://github.com/luin/medis) - Redis database management.\n- [SmartMirror](https://github.com/evancohen/smart-mirror) - Voice controlled smart mirror.\n- [Beaker](https://github.com/beakerbrowser/beaker) - Browser with peer-to-peer web protocols.\n- [KeeWeb](https://github.com/keeweb/keeweb) - Unofficial KeePass app.\n- [Gitify](https://github.com/manosim/gitify) - GitHub notifications in your menubar.\n- [SpaceRadar](https://github.com/zz85/space-radar) - Interactive disk space and memory visualization.\n- [Leanote](https://github.com/leanote/desktop-app) - Cloud notepad.\n- [Loop Drop](https://github.com/mmckegg/loop-drop-app) - MIDI looper and synth for live electronic music performances.\n- [Pomodoro](https://github.com/G07cha/pomodoro) - Timer based on the Pomodoro Technique.\n- [Sia-UI](https://gitlab.com/NebulousLabs/Sia-UI) - Decentralized file storage system based on cryptocurrency technology.\n- [MarkRight](https://github.com/dvcrn/markright) - GitHub flavored Markdown editor with live preview.\n- [Sqlectron](https://github.com/sqlectron/sqlectron-gui) - SQL client.\n- [Light Table](https://github.com/LightTable/LightTable) - Code editor with instant feedback.\n- [Google Play Music Desktop Player](https://github.com/MarshallOfSound/Google-Play-Music-Desktop-Player-UNOFFICIAL-) - Unofficial Google Play Music app.\n- [Chrome DevTools](https://github.com/auchenberg/chrome-devtools-app) - Chrome DevTools packaged as an app.\n- [Proton](https://github.com/steventhanna/proton) - Markdown editor with live preview.\n- [Hawkpass](https://github.com/kalpetros/hawkpass) - Password generator.\n- [Boostnote](https://github.com/BoostIO/Boostnote) - Markdown note & code snippet app for developers.\n- [Before Dawn](https://github.com/muffinista/before-dawn) - Screensaver tool.\n- [Catify](https://github.com/MeoBeoI/Catify) - Utility for Spotify.\n- [Ansel](https://github.com/m0g/ansel) - Image organizer.\n- [Tockler](https://github.com/MayGo/tockler) - Tracks your time.\n- [Mattermost](https://github.com/mattermost/desktop) - Mattermost client.\n- [Crypter](https://github.com/HR/Crypter) - Secure encryption client.\n- [YakYak](https://github.com/yakyak/yakyak) - Unofficial Google Hangouts app.\n- [Museeks](https://github.com/KeitIG/museeks) - Music player.\n- [Sabaki](https://github.com/SabakiHQ/Sabaki) - Go/Baduk/Weiqi board.\n- [Wire](https://github.com/wireapp/wire-desktop) - Messenger and calling app.\n- [Extraterm](https://github.com/sedwards2009/extraterm) - Terminal.\n- [Stacer](https://github.com/oguzhaninan/Stacer) - Ubuntu system optimizer.\n- [Inpad](https://github.com/sarah-seo/Inpad) - Notes app with GitHub-flavored Markdown.\n- [Cerebro](https://github.com/KELiON/cerebro) - Launcher with inline previews.\n- [LosslessCut](https://github.com/mifi/lossless-cut) - Lossless video trimming & cutting.\n- [Buka](https://github.com/oguzhaninan/Buka) - E-book management.\n- [Insomnia](https://github.com/getinsomnia/insomnia) - Create and manage HTTP requests.\n- [Tusk](https://github.com/champloohq/tusk) - Unofficial Evernote app.\n- [Buttercup Desktop](https://github.com/buttercup/buttercup-desktop) - Password manager.\n- [Mailspring](https://github.com/Foundry376/Mailspring) - Extensible email client. (Fork of Nylas Mail)\n- [Headset](https://github.com/headsetapp/headset-electron) - Discover, collect, and listen to music from YouTube.\n- [Nuclear](https://github.com/nukeop/nuclear) - Music player that streams from free sources.\n- [Mark Text](https://github.com/marktext/marktext) - Real-time preview Markdown editor.\n- [Pomotroid](https://github.com/Splode/pomotroid) - Pomodoro timer.\n- [Netron](https://github.com/lutzroeder/netron) - Visualizer for deep learning and machine learning models.\n- [Etcher](https://github.com/resin-io/etcher) - Flash OS images to SD cards and USB drives.\n- [Notable](https://github.com/fabiospampinato/notable) - Markdown-based note-taking.\n- [Unsplash Wallpapers](https://github.com/soroushchehresa/unsplash-wallpapers) - Set desktop wallpaper from Unsplash.\n- [Motrix](https://github.com/agalwood/Motrix) - Download manager.\n- [Franz](https://github.com/meetfranz/franz) - Skype, Slack, Hangouts, WhatsApp, Grape, Telegram, FB Messenger, Hipchat in the same app.\n- [Gmail Desktop](https://github.com/timche/gmail-desktop) - Unofficial Gmail app.\n- [Upcount](https://github.com/madisvain/upcount) - Invoicing.\n- [ExifCleaner](https://github.com/szTheory/exifcleaner) - Clean image metadata with drag and drop.\n- [massCode](https://github.com/antonreshetov/massCode) - Code snippet manager for developers.\n- [Swifty](https://github.com/swiftyapp/swifty) - Password manager.\n- [MQTTX](https://github.com/emqx/MQTTX) - Client for MQTT, which is a lightweight messaging protocol.\n- [LightProxy](https://github.com/alibaba/lightproxy) - Web debugging proxy.\n- [Beekeeper Studio](https://github.com/beekeeper-studio/beekeeper-studio) - Cross-platform SQL editor and database manager.\n- [Mouseless](https://github.com/ueberdosis/mouseless) - Keyboard shortcut training and look-up.\n- [Glyphfinder](https://github.com/ueberdosis/glyphfinder) - Unicode character search.\n- [Graviton Editor](https://github.com/Graviton-Code-Editor/Graviton-App) - Cross-platform code editor.\n- [Yana](https://github.com/lukasbach/yana) - Notebook app with rich-text notes, nested note organization and global search.\n- [SpaceEye](https://github.com/KYDronePilot/SpaceEye) - Live satellite imagery for your desktop background.\n- [Heroic Games Launcher](https://github.com/Heroic-Games-Launcher/HeroicGamesLauncher) - Alternative Epic games launcher.\n- [VIR](https://github.com/TommyX12/VIR) - Intelligent time manager with automatic planning.\n- [Browserosaurus](https://github.com/will-stone/browserosaurus) - Browser prompter for macOS.\n- [linked](https://github.com/lostdesign/linked) - Daily journal.\n- [shadowsocks-electron](https://github.com/nojsja/shadowsocks-electron) - Cross-platform Shadowsocks client.\n- [Sigma File Manager](https://github.com/aleksey-hoffman/sigma-file-manager) - Modern file manager.\n- [Ostara](https://github.com/krud-dev/ostara) - Monitor and interact with Spring Boot apps via Actuator.\n- [PikaTorrent](https://github.com/G-Ray/pikatorrent) - BitTorrent client.\n- [Wave Terminal](https://github.com/wavetermdev/waveterm) - Open-source terminal with AI integration.\n\n### Closed Source\n\n###### Featured\n\n- [Rosefinch](https://rosefinchapp.com) - Store and run SQL queries.\n- [Nota](https://nota.md) - Pro writing app designed for local Markdown files.\n\n###### Other\n\n- [GitKraken](http://www.gitkraken.com) - Git client.\n- [1Clipboard](http://1clipboard.io) - Universal clipboard manager.\n- [Postman](https://www.getpostman.com) - Create and send HTTP requests.\n- [Slack](https://medium.com/ben-and-dion/how-slack-built-a-well-loved-product-going-against-peter-thiel-and-native-app-fashion-2abbbe5a022f) - Desktop version.\n- [Avocode](http://avocode.com) - Share design and collaborate.\n- [Prepros](https://prepros.io) - Compile almost any preprocessing language with live browser refresh.\n- [Stremio](http://www.strem.io) - Media center.\n- [Typetalk](http://www.typetalk.in) - Share and discuss ideas with your team through instant messaging.\n- [Pingendo](http://pingendo.com) - Bootstrap prototyping.\n- [Spreaker Studio](https://www.spreaker.com/download) - Audio recording and broadcasting.\n- [MockingBot](https://mockingbot.com) - Prototyping tool for designing apps.\n- [Caret](http://caret.io) - Markdown editor.\n- [Remember](https://rememberapp.co.kr) - Business card management. *(Korean)*\n- [MongoDB Compass](https://www.mongodb.com/products/compass) - Official MongoDB app.\n- [Freeter](https://freeter.io) - Organizer for freelancers & creatives.\n- [WhatsApp](https://www.whatsapp.com/download/) - Official WhatsApp app.\n- [CatLight](https://catlight.io) - Build status notifier.\n- [Discord](https://discord.com) - Voice and text chat.\n- [Cocos Creator](http://cocos2d-x.org/products#creator) - Game editor for creating web and native games for Cocos2D-x.\n- [Inkdrop](https://www.inkdrop.info) - Markdown notebook for hackers.\n- [Exodus](https://www.exodus.io) - Secure, manage, and exchange blockchain assets like Bitcoin and Ethereum.\n- [Hackolade](http://hackolade.com) - Data modeling for NoSQL and multi-model databases.\n- [CashNotify](https://cashnotify.com) - Monitor your Stripe accounts from your menu bar.\n- [Mockoon](https://mockoon.com) - Mock servers in seconds.\n- [Twitch](https://app.twitch.tv) - Official Twitch app.\n- [Fenêtre](https://fenêt.re) - Picture-in-picture for your Mac.\n- [Cleavr](https://cleavr.io) - Provision servers and deploy web apps.\n- [Brandy](https://getbrandy.io) - A brand asset manager for your menu bar.\n- [Cacher](https://www.cacher.io) - Cloud-based, team-enabled code snippet manager with Gist sync.\n- [MusicPlus](https://musicplus.io) - Free music app for macOS and Windows.\n- [Mingo](https://mingo.io) - MongoDB GUI.\n- [Moon Modeler](https://datensen.com) - Schema design tool for MongoDB, Mongoose, and MariaDB.\n- [Notion](https://notion.so) - All-in-one workspace for your notes, tasks, wikis, and databases.\n- [FATpick](https://www.fatpick.com) - Guitar tablature viewer that scores your performance as you play along.\n- [Taskade](https://www.taskade.com) - Realtime organization and collaboration tool for distributed teams with tasks, notes, and chat.\n- [Coloban](https://www.coloban.com) - All-in-one project management tool with chats, Kanban, Gantt, calls, screenshare, and more.\n- [Dynobase](https://dynobase.dev) - AWS DynamoDB GUI.\n- [Lotus](https://getlotus.app) - Keep up with GitHub notifications without stress.\n- [RunJS](https://runjs.app) - Playground for JavaScript and TypeScript.\n- [OpenSFTP](https://opensftp.com) - Integrated SSH and SFTP workspace client.\n\n### Samples\n\n- [Electron API usage](https://github.com/hokein/electron-sample-apps) - Sample apps illustrating usage of Electron APIs.\n- [Screen Recorder](https://github.com/hokein/electron-screen-recorder) - WebRTC screen recorder.\n- [Activity Monitor](https://electronjs.org/blog/simple-samples#activity-monitor) - Shows a doughnut chart of the CPU system, user, and idle activity time.\n- [Hash](https://electronjs.org/blog/simple-samples#hash) - Shows the hash values of entered text using different algorithms.\n- [Prices](https://electronjs.org/blog/simple-samples#prices) - Shows the current price of oil, gold, and silver using the Yahoo Finance API.\n\n## Boilerplates\n\n- [electron-boilerplate](https://github.com/sindresorhus/electron-boilerplate) - Boilerplate to kickstart creating an app - by [sindresorhus](http://github.com/sindresorhus).\n- [generator-electron](https://github.com/sindresorhus/generator-electron) - Scaffold out an app boilerplate.\n- [electron-boilerplate](https://github.com/szwacz/electron-boilerplate) - Comprehensive boilerplate which even generates installers - by [szwacz](https://github.com/szwacz).\n- [electron-react-boilerplate](https://github.com/chentsulin/electron-react-boilerplate) - Boilerplate based on React and webpack.\n- [electron-quick-start](https://github.com/electron/electron-quick-start) - Clone the repo to try a simple app.\n- [bozon](https://github.com/railsware/bozon) - Scaffold, run, test, and package your app.\n- [secure-electron-template](https://github.com/reZach/secure-electron-template) - Security-focused boilerplate for creating apps with React, Redux, Webpack, and i18next.\n- [angular-electron](https://github.com/maximegris/angular-electron) - Fast bootstrapping with Angular, Electron, TypeScript, SASS, and Hot Reload.\n- [vite-electron-builder](https://github.com/cawa-93/vite-electron-builder) - Secure boilerplate for Electron app based on Vite. TypeScript + Vue/React/Angular/Svelte/Vanilla.\n\n## Tools\n\n### For Electron\n\n- [electron-builder](https://github.com/electron-userland/electron-builder) - Create installers.\n- [electron-packager](https://github.com/electron-userland/electron-packager) - Package and distribute your app.\n- [electron-debug](https://github.com/sindresorhus/electron-debug) - Adds useful debug features.\n- [electron-is-dev](https://github.com/sindresorhus/electron-is-dev) - Check if Electron is running in development.\n- [electron-localshortcut](https://github.com/parro-it/electron-localshortcut) - Add keyboard shortcuts locally to a window.\n- [fix-path](https://github.com/sindresorhus/fix-path) - Fix the $PATH on macOS when run from a GUI app. Useful when spawning a child process.\n- [electron-dl](https://github.com/sindresorhus/electron-dl) - Simplified file downloads.\n- [electron-release-server](https://github.com/ArekSredzki/electron-release-server) - Self-hosted release server with front-end & auto-updater support.\n- [electron-rebuild](https://github.com/electron/electron-rebuild) - Rebuild native Node.js modules against the currently installed Electron version.\n- [debug-menu](https://github.com/parro-it/debug-menu) - Chrome-like \"inspect element\" context-menu.\n- [electron-installer-debian](https://github.com/unindented/electron-installer-debian) - Create a Debian package.\n- [electron-installer-redhat](https://github.com/unindented/electron-installer-redhat) - Create a Red Hat package.\n- [electron-installer-windows](https://github.com/unindented/electron-installer-windows) - Create a Windows package.\n- [electron-download](https://github.com/electron-userland/electron-download) - Download the Electron release zip from GitHub.\n- [electron-osx-sign](https://github.com/electron-userland/electron-osx-sign) - Code-signing for macOS apps.\n- [ember-electron](https://github.com/felixrieseberg/ember-electron) - Build, test, and package Ember apps.\n- [electron-store](https://github.com/sindresorhus/electron-store) - Save and load data like user preferences, app state, cache, etc.\n- [electron-context-menu](https://github.com/sindresorhus/electron-context-menu) - Extensible context menu.\n- [NeDB](https://github.com/louischatriot/nedb) - Embedded persistent or in-memory database.\n- [RxDB](https://github.com/pubkey/rxdb) - A realtime NoSQL database.\n- [electron-devtools-installer](https://github.com/GPMDP/electron-devtools-installer) - Install DevTools extensions from the Chrome Web Store.\n- [electron-log](https://github.com/megahertz/electron-log) - Simple logging.\n- [electron-about-window](https://github.com/rhysd/electron-about-window) - 'About This App' window.\n- [elemon](https://github.com/manidlou/elemon) - Live-reload your app during development.\n- [electron-is-accelerator](https://github.com/brrd/electron-is-accelerator) - Check if a string is a valid accelerator.\n- [electron-pdf-window](https://github.com/gerhardberger/electron-pdf-window) - View PDF files in browser windows.\n- [got](https://github.com/sindresorhus/got) - Simplified HTTP requests.\n- [electron-unhandled](https://github.com/sindresorhus/electron-unhandled) - Catch unhandled errors and promise rejections.\n- [electron-util](https://github.com/sindresorhus/electron-util) - Useful utilities for developing apps and modules.\n- [electron-reloader](https://github.com/sindresorhus/electron-reloader) - Simple auto-reloading during development.\n- [electron-serve](https://github.com/sindresorhus/electron-serve) - Static file serving (Useful for routing, like `react-router`).\n- [electron-timber](https://github.com/sindresorhus/electron-timber) - Pretty logger.\n- [chromium-net-errors](https://github.com/maxkueng/chromium-net-errors) - Chromium's network errors as custom error classes.\n- [run-electron](https://github.com/sindresorhus/run-electron) - Run Electron without all the junk terminal output.\n- [debugtron](https://github.com/pd4d10/debugtron) - Debug in-production Electron-based apps.\n- [electron-better-ipc](https://github.com/sindresorhus/electron-better-ipc) - Simplified IPC communication.\n- [electron-chrome-extension](https://github.com/getstation/electron-chrome-extension) - Add support for Chrome extensions.\n- [trilogy](https://github.com/citycide/trilogy) - TypeScript SQLite database layer with support for both native C++ and pure JavaScript backends.\n- [adblocker-electron](https://github.com/cliqz-oss/adblocker/tree/master/packages/adblocker-electron) - Block ads and trackers.\n- [electronmon](https://github.com/catdad/electronmon) - Monitor and reload apps out-of-process during development.\n- [electronegativity](https://github.com/doyensec/electronegativity) - Identify misconfigurations and security anti-patterns.\n- [UpdateRocks!](https://www.update.rocks) - Auto-update service. Free for open source projects.\n- [electron-vite](https://github.com/alex8088/electron-vite) - Fast and easy-to-use build tool integrated with Vite.\n- [pluggable-electron](https://github.com/dutchigor/pluggable-electron) - Build apps that can be extended through plugins.\n- [Hydraulic Conveyor](https://hydraulic.dev) - CLI tool that deploys apps without needing any special update servers, multi-platform CI, or code changes.\n- [Aptabase](https://aptabase.com/for-electron) - Analytics for apps. Open source, privacy-friendly, and simple.\n\n### Using Electron\n\n- [nativefier](https://github.com/jiahaog/nativefier) - Create an app of any website.\n- [electron-stream](https://github.com/juliangruber/electron-stream) - Streaming wrapper.\n- [electron-pdf](https://github.com/fraserxu/electron-pdf) - Generate PDF from URL, HTML, or Markdown files on the command-line.\n- [electron-mocha](https://github.com/jprichardson/electron-mocha) - Run Mocha tests in Electron.\n- [Reactotron](https://github.com/reactotron/reactotron) - Inspect your React and React Native apps.\n- [jest-electron](https://github.com/hustcc/jest-electron) - Run and debug Jest unit tests in a browser environment.\n\n## Components\n\n- [menubar](https://github.com/maxogden/menubar) - Menubar app framework.\n- [React Desktop](https://github.com/gabrielbull/react-desktop) - UI toolkit for macOS and Windows built with React.\n- [chrome-tabs](https://github.com/adamschwartz/chrome-tabs) - Chrome like tabs.\n- [Xel](https://xel-toolkit.org) - Widget toolkit for building native-like apps.\n\n## Documentation\n\n- [Quick Start](https://electronjs.org/docs/tutorial/quick-start)\n- [Official docs](https://electronjs.org/docs)\n- [Essential Electron](http://jlord.us/essential-electron/) - Concise overview.\n\n## Articles\n\n- [Electron Fundamentals](http://maxogden.com/electron-fundamentals.html)\n- [Building a desktop application with Electron](https://medium.com/@bojzi/building-a-desktop-application-with-electron-204203eeb658)\n- [Codesigning your app for macOS](http://jbavari.github.io/blog/2015/08/14/codesigning-electron-applications/)\n- [Auto-updating apps for macOS and Windows: The complete guide](https://medium.com/@svilen/auto-updating-apps-for-windows-and-osx-using-electron-the-complete-guide-4aa7a50b904c)\n- [Building a desktop app with Electron, React, and Redux](https://anadea.info/blog/building-desktop-app-with-electron)\n- [Introducing BrowserView for Electron](https://blog.figma.com/introducing-browserview-for-electron-7b40b4b493d5) - New Electron API to embed web apps with fewer bugs and improved performance.\n- [Migrating Slack's Desktop App to BrowserView](https://slack.engineering/growing-pains-migrating-slacks-desktop-app-to-browserview-2759690d9c7b) - Slack rewrote their Electron app with `BrowserView`, Redux, Rx, and TypeScript, to fix its performance problems.\n- [Electron on the App Store](https://medium.com/@yoannm/pushing-electron-on-the-mac-appstore-early-stages-7dcb85936f92) - A 5-part series about the journey of making and publishing an Electron app to the Mac App Store.\n- [Building a file explorer with Electron, Quasar, and Vue](https://medium.com/quasar-framework/building-an-electron-file-explorer-with-quasar-and-vue-7bf94f1bbf6) - Focused on design and code decisions and Electron security.\n- [Using Google Analytics to gather usage statistics in Electron](https://kilianvalkhof.com/2018/apps/using-google-analytics-to-gather-usage-statistics-in-electron/) - How to collect anonymous user statistics.\n- [Notarizing your Electron app](https://kilianvalkhof.com/2019/electron/notarizing-your-electron-application/) - How to configure your app packaging for Apple's notarization.\n- [Making Electron apps feel native on Mac](https://getlotus.app/21-making-electron-apps-feel-native-on-mac)\n\n## Books\n\n- [Developing an Electron Edge](https://bleedingedgepress.com/developing-an-electron-edge/) - [Preview](https://read.amazon.com/kp/embed?asin=B01G7TTKSK&asin=B01G7TTKSK&preview=newtab&linkCode=kpe&ref_=cm_sw_r_kb_dp_DLhOxb0XZ3MEC) 💲\n- [Electron in Action](https://www.manning.com/books/electron-in-action?a_aid=electroninaction) 💲\n- [Cross-Platform Desktop Applications](https://www.manning.com/books/cross-platform-desktop-applications) 💲\n\n## Videos\n\n- [Getting Started with Electron 1.x](https://www.youtube.com/watch?v=jKzBJAowmGg)\n- [Packaging and Distributing Electron Desktop Apps](https://www.youtube.com/watch?v=dz5SnmBzBXc)\n- [Multi Window Electron Desktop Apps](https://www.youtube.com/watch?v=K-H2amwQ_pU)\n- [The State of Electron](https://www.youtube.com/watch?v=RaPmi-33rfc)\n- [Cross-Platform Desktop Apps with Electron](https://www.youtube.com/watch?v=9xX_G0l5jLU)\n- [Building Native Desktop apps using Electron](https://www.youtube.com/watch?v=nXIrFq5-FC8)\n- [The New Desktop: Electron, React, & Pixel-Perfect Native-Feeling Experiences](https://www.youtube.com/watch?v=jRPUB-D1Wx0)\n- [Building Desktop Apps with Node.js and Electron](https://www.youtube.com/watch?v=rbSvc8_BHaw)\n- [Electron Fundamentals course - Pluralsight](https://www.pluralsight.com/courses/electron-fundamentals) 💲\n- [Electron: Building Cross Platform Desktop Apps - Lynda](https://www.lynda.com/Electron-tutorials/Electron-Building-Cross-Platform-Desktop-Apps/518051-2.html) 💲\n- [Build a desktop application with Electron - Egghead](https://egghead.io/courses/build-a-desktop-application-with-electron) 💲\n- [Build Cross-Platform Desktop Apps with Electron - Frontend Masters](https://frontendmasters.com/courses/electron/) 💲\n- [Electron Meetup SF, November 2017](https://www.youtube.com/watch?v=DDjVaHPvRdM) - Includes some good talks on improving app startup time, debugging crashes, etc.\n- [Make Your Electron App Feel at Home Everywhere](https://www.youtube.com/watch?v=fw4PmPaghyU) - Tips on making your app feel more native on macOS, Windows, and Linux without sacrificing your own style.\n\n## Podcasts\n\n- [Hanselminutes: Creating cross-platform Electron apps with Jessica Lord](http://hanselminutes.com/534/creating-cross-platform-electron-apps-with-jessica-lord)\n- [The Changelog #216: GitHub's Electron with Zeke Sikelianos](https://changelog.com/podcast/216)\n- [Full Stack Radio #48: Jessica Lord - Building Desktop Apps with Electron](http://www.fullstackradio.com/48)\n\n## Community\n\n- [Reddit](https://www.reddit.com/r/electronjs)\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/electron)\n- [`@electronjs` on Twitter](https://twitter.com/electronjs)\n- [electron-br](https://electron-br.slack.com) *(Brazilian Portuguese)*\n- [electron-pl](https://electronpl.github.io) *(Polish)*\n- [`@electron_ru` on Telegram](https://telegram.me/electron_ru) *(Russian)*\n- [`electronjs` on Facebook](https://www.facebook.com/groups/electronjs/)\n- [Product Hunt](https://www.producthunt.com/@sindresorhus/collections/electron-apps)\n\n## Contribute\n\nContributions welcome! Read the [contribution guidelines](contributing.md) first.\n\n## Related\n\n- [awesome-nodejs](https://github.com/sindresorhus/awesome-nodejs)\n- [awesome-electronjs-hacking](https://github.com/doyensec/awesome-electronjs-hacking)\n"
        }
      ]
    }
  ]
}